{"version":3,"file":"assets/js/0612fc38.c7578bda.js","mappings":"yUAgBeA,EAAAA,EAJf,MAQaC,EAAS,IAElB,gBAAC,IAAD,CAAMC,aAAc,CAAC,yBACnB,gBAAC,KAAD,CAAMC,UAAU,OACd,gBAACC,EAAA,EAAD,CACEC,KAAM,gBAAC,KAAD,CAAcA,KAAM,qBAC1BC,QAAQ,MACRC,SAAU,aAGd,gBAAC,KAAD,CAAMJ,UAAU,QACd,gBAACC,EAAA,EAAD,CACEC,KAAM,gBAAC,KAAD,CAAcA,KAAM,iBAC1BC,QAAQ,OACRC,SAAU,aAGd,gBAAC,KAAD,CAAMJ,UAAU,SACd,gBAACC,EAAA,EAAD,CACEC,KAAM,gBAAC,KAAD,CAAcA,KAAM,uBAC1BC,QAAQ,QACRC,SAAU,aAGd,gBAACC,EAAA,EAAD,MACA,gBAAC,KAAD,sBACA,gBAAC,KAAD,CAAML,UAAU,oBACd,gBAACC,EAAA,EAAD,CAAgBE,QAAQ,mBAAmBC,SAAU,mBAEvD,gBAAC,KAAD,CAAMJ,UAAU,UACd,gBAACC,EAAA,EAAD,CAAgBE,QAAQ,SAASC,SAAU,YAE7C,gBAACC,EAAA,EAAD,MACA,gBAAC,KAAD,CAAML,UAAU,mBACd,gBAACC,EAAA,EAAD,CACEC,KAAM,gBAAC,KAAD,CAAcA,KAAM,iBAC1BC,QAAQ,qBAGZ,gBAACE,EAAA,EAAD,MACA,gBAAC,KAAD,CAAMC,IAAI,uBAAuBN,UAAU,2BACzC,gBAACC,EAAA,EAAD,CAAgBE,QAAQ,0BAA0BC,SAAU,qBAqC9DG,EAAyB,CAC7B,CACEC,MAAO,YACPC,SA1BmC,CACrC,CACED,MAAO,UAET,CACEA,MAAO,SACPC,SAAU,CACR,CACED,MAAO,UAET,CACEA,MAAO,cAKb,CACEA,MAAO,SAET,CACEA,MAAO,YAQT,IAAIE,EAAAA,EACJ,CACEF,MAAO,aACPN,KAAM,8BAoBGS,EAAkB,IAQxB,IARyB,YAC9BC,EAD8B,aAE9BC,EAF8B,aAG9BC,GAKI,EACJ,OACE,uBACEC,MAAO,CACLC,YACiBC,MAAfL,EACK,eAAcA,EAAc,aAC7BK,EACNC,WACkBD,MAAhBJ,EACK,eAAcA,EAAe,aAC9BI,IAGR,gBAACE,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CACEN,aAAcA,EACdO,WAAY,QAAC,UAAEC,EAAF,MAAaC,GAAd,SACV,gBAAC,KAAD,QACEhB,MAAOA,GACHe,EAFN,CAGEE,SAAWlB,IACTmB,QAAQC,IAAIpB,GACZiB,OAGDI,MAIJ,CAACC,EAAOC,IACP,gBAACC,EAAA,IAAD,UAAkBF,EAAlB,CAAyBC,IAAKA,IAC5B,gBAAC,KAAD,CAAc3B,KAAM,4BAS5ByB,EAAcI,GACdA,aAAgBrB,EAAAA,EACX,gBAACL,EAAA,EAAD,CAASC,IAAKyB,EAAKzB,MAG1B,gBAAC,KAAD,CAAMA,IAAKyB,EAAKvB,MAAOwB,WAAYD,EAAKtB,UACtC,gBAACR,EAAA,EAAD,CACEC,KAAM6B,EAAK7B,MAAQ,gBAAC,KAAD,CAAcA,KAAM6B,EAAK7B,OAC5CC,QAAS4B,EAAKvB,MACdJ,SAAU2B,EAAK3B,Y,eCnLhB,MAAM6B,EAAc,GACdC,EAAe,OACfC,EAAW,CACtB,cAAiB,kBACjB,GAAM,kBACN,MAAS,OACT,YAAe,UACf,OAAU,iCACV,cAAiB,aACjB,KAAQ,mBACR,UAAa,4BACb,QAAW,6FACX,KAAQ,GACR,QAAW,UACX,YAAe,GACf,QAAW,kBACX,SAAY,CACV,MAAS,OACT,UAAa,6BAEf,KAAQ,CACN,MAAS,cACT,UAAa,qCAaJC,EAAM,CAAC,CAClBC,MAAO,WACPC,GAAI,WACJC,SAAU,CAAC,CACTF,MAAO,YACPC,GAAI,YACJC,SAAU,GACVC,MAAO,IAETA,MAAO,GACN,CACDH,MAAO,WACPC,GAAI,WACJC,SAAU,CAAC,CACTF,MAAO,qCACPC,GAAI,qCACJC,SAAU,GACVC,MAAO,GACN,CACDH,MAAO,sBACPC,GAAI,sBACJC,SAAU,GACVC,MAAO,IAETA,MAAO,IAGHC,EAAc,CAClBL,IAAAA,GAGa,SAASM,EAAT,GAGX,IAH+B,WACjCC,KACGf,GACF,EACD,OAAO,QALS,WAKT,UAAea,EAAiBb,EAAhC,CAAuCe,WAAYA,EAAYC,QAAQ,eAG5E,cACE,GAAM,QACH,SACL,cACE,GAAM,YACH,aACL,mBACE,cAAIC,WAAW,MAAO,sBACtB,cAAIA,WAAW,MAAO,0BACtB,cAAIA,WAAW,MAAO,8DACtB,cAAIA,WAAW,MAAO,0BACtB,cAAIA,WAAW,MAAO,2DAExB,cACE,GAAM,aACH,cACL,cACE,UAAa,uBAEb,cAAIA,WAAW,KACb,UAAa,mBACZ,iBAAOA,WAAW,KACjB,KAAQ,WACR,SAAW,EACX,UAAY,IACD,IAAK,6DACpB,cAAIA,WAAW,KACb,UAAa,mBACZ,iBAAOA,WAAW,KACjB,KAAQ,WACR,SAAW,EACX,UAAY,IACD,IAAK,+GAEtB,cACE,GAAM,YACH,aACL,cACE,GAAM,sCACH,uCACL,QAAC,KAAD,CAASD,QAAQ,YACnB,QAAC9C,EAAD,CAAQ8C,QAAQ,aAEd,cACE,GAAM,uBACH,wBACL,iBAAK,gDACL,QAAC,KAAD,CAASA,QAAQ,YACnB,QAACjC,EAAD,CAAiBiC,QAAQ,sBAM3BF,EAAWI,gBAAiB","sources":["webpack://website/../jui/src/Menu/Menu.stories.tsx","webpack://website/./docs/components/Menu.mdx"],"sourcesContent":["import { Item } from \"@react-stately/collections\";\nimport { Meta } from \"@storybook/react\";\nimport React from \"react\";\nimport { ActionButton } from \"../ActionButton/ActionButton\";\nimport { ActionToolbar } from \"../ActionToolbar/ActionToolbar\";\nimport { Divider, DividerItem } from \"../Collections/Divider\";\nimport { PlatformIcon } from \"../Icon\";\nimport { styledComponentsControlsExclude } from \"../story-helpers\";\nimport { Menu } from \"./Menu\";\nimport { MenuItemLayout } from \"./MenuItemLayout\";\nimport { MenuTrigger } from \"./MenuTrigger\";\n\nexport default {\n  title: \"Components/Menu\",\n  parameters: {\n    controls: { exclude: styledComponentsControlsExclude },\n    component: Menu, // doesn't work for some reason.\n  },\n} as Meta;\n\nexport const Static = () => {\n  return (\n    <Menu disabledKeys={[\"jumpToExternalEditor\"]}>\n      <Item textValue=\"Cut\">\n        <MenuItemLayout\n          icon={<PlatformIcon icon={\"actions/menu-cut\"} />}\n          content=\"Cut\"\n          shortcut={\"⌘X\"}\n        />\n      </Item>\n      <Item textValue=\"Copy\">\n        <MenuItemLayout\n          icon={<PlatformIcon icon={\"actions/copy\"} />}\n          content=\"Copy\"\n          shortcut={\"⌘C\"}\n        />\n      </Item>\n      <Item textValue=\"Paste\">\n        <MenuItemLayout\n          icon={<PlatformIcon icon={\"actions/menu-paste\"} />}\n          content=\"Paste\"\n          shortcut={\"⌘V\"}\n        />\n      </Item>\n      <Divider />\n      <Item>Reformat Code</Item>\n      <Item textValue=\"Optimize Imports\">\n        <MenuItemLayout content=\"Optimize Imports\" shortcut={\"⌃⌥O\"} />\n      </Item>\n      <Item textValue=\"Delete\">\n        <MenuItemLayout content=\"Delete\" shortcut={\"⌫\"} />\n      </Item>\n      <Divider />\n      <Item textValue=\"Compare with...\">\n        <MenuItemLayout\n          icon={<PlatformIcon icon={\"actions/diff\"} />}\n          content=\"Compare with...\"\n        />\n      </Item>\n      <Divider />\n      <Item key=\"jumpToExternalEditor\" textValue=\"Jump to external editor\">\n        <MenuItemLayout content=\"Jump to external editor\" shortcut={\"⌥⌘F4\"} />\n      </Item>\n    </Menu>\n  );\n};\n\ntype MenuItem =\n  | {\n      title: string;\n      icon?: string;\n      shortcut?: string;\n      subItems?: MenuItem[];\n    }\n  | DividerItem;\nconst viewModeItems: Array<MenuItem> = [\n  {\n    title: \"Undock\",\n  },\n  {\n    title: \"Docked\",\n    subItems: [\n      {\n        title: \"Pinned\",\n      },\n      {\n        title: \"UnPinned\",\n      },\n    ],\n  },\n\n  {\n    title: \"Float\",\n  },\n  {\n    title: \"Window\",\n  },\n];\nconst items: Array<MenuItem> = [\n  {\n    title: \"View Mode\",\n    subItems: viewModeItems,\n  },\n  new DividerItem(),\n  {\n    title: \"Group tabs\",\n    icon: \"toolwindows/documentation\",\n  },\n];\n\nexport const Nested = () => {\n  return (\n    <Menu items={items} selectedKeys={[\"Pinned\"]} autoFocus>\n      {renderItem}\n    </Menu>\n  );\n};\n\nexport const Position = ({ offsetRight = 230 }: { offsetRight: number }) => {\n  return (\n    <div style={{ paddingLeft: `calc(100% - ${offsetRight}px)` }}>\n      <Menu items={items}>{renderItem}</Menu>\n    </div>\n  );\n};\n\nexport const MenuWithTrigger = ({\n  offsetRight,\n  offsetBottom,\n  restoreFocus,\n}: {\n  offsetRight?: number;\n  offsetBottom?: number;\n  restoreFocus?: boolean;\n}) => {\n  return (\n    <div\n      style={{\n        paddingLeft:\n          offsetRight != undefined\n            ? `calc(100% - ${offsetRight + 24}px)`\n            : undefined,\n        paddingTop:\n          offsetBottom != undefined\n            ? `calc(100% - ${offsetBottom + 24}px)`\n            : undefined,\n      }}\n    >\n      <ActionToolbar>\n        <MenuTrigger\n          restoreFocus={restoreFocus}\n          renderMenu={({ menuProps, close }) => (\n            <Menu\n              items={items}\n              {...menuProps}\n              onAction={(key) => {\n                console.log(key);\n                close();\n              }}\n            >\n              {renderItem}\n            </Menu>\n          )}\n        >\n          {(props, ref) => (\n            <ActionButton {...props} ref={ref}>\n              <PlatformIcon icon={\"general/gearPlain\"} />\n            </ActionButton>\n          )}\n        </MenuTrigger>\n      </ActionToolbar>\n    </div>\n  );\n};\n\nconst renderItem = (item: MenuItem) => {\n  if (item instanceof DividerItem) {\n    return <Divider key={item.key} />;\n  }\n  return (\n    <Item key={item.title} childItems={item.subItems}>\n      <MenuItemLayout\n        icon={item.icon && <PlatformIcon icon={item.icon} />}\n        content={item.title}\n        shortcut={item.shortcut}\n      />\n    </Item>\n  );\n};\n","\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n\n\nexport const frontMatter = {};\nexport const contentTitle = 'Menu';\nexport const metadata = {\n  \"unversionedId\": \"components/Menu\",\n  \"id\": \"components/Menu\",\n  \"title\": \"Menu\",\n  \"description\": \"Static,\",\n  \"source\": \"@site/docs/components/Menu.mdx\",\n  \"sourceDirName\": \"components\",\n  \"slug\": \"/components/Menu\",\n  \"permalink\": \"/jui/docs/components/Menu\",\n  \"editUrl\": \"https://github.com/alirezamirian/jui/edit/master/packages/website/docs/components/Menu.mdx\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"frontMatter\": {},\n  \"sidebar\": \"tutorialSidebar\",\n  \"previous\": {\n    \"title\": \"List\",\n    \"permalink\": \"/jui/docs/components/List\"\n  },\n  \"next\": {\n    \"title\": \"SpeedSearch\",\n    \"permalink\": \"/jui/docs/components/SpeedSearch\"\n  }\n};\n\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { RefToIntellijPlatform } from \"../../src/components/RefToIntellijPlatform.tsx\";\nimport {\n  Static,\n  MenuWithTrigger,\n} from \"@intellij-platform/core/Menu/Menu.stories\";\nimport { Example } from \"../../src/components/ExampleContext\";\nexport const toc = [{\n  value: 'Features',\n  id: 'features',\n  children: [{\n    value: 'Remaining',\n    id: 'remaining',\n    children: [],\n    level: 4\n  }],\n  level: 3\n}, {\n  value: 'Examples',\n  id: 'examples',\n  children: [{\n    value: 'Simple flat menu with static items',\n    id: 'simple-flat-menu-with-static-items',\n    children: [],\n    level: 3\n  }, {\n    value: 'Menu with a trigger',\n    id: 'menu-with-a-trigger',\n    children: [],\n    level: 3\n  }],\n  level: 2\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"menu\"\n    }}>{`Menu`}</h1>\n    <h3 {...{\n      \"id\": \"features\"\n    }}>{`Features`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Nested menu items`}</li>\n      <li parentName=\"ul\">{`Check-able menu items`}</li>\n      <li parentName=\"ul\">{`Default menu layout with icon, text and keyboard shortcut`}</li>\n      <li parentName=\"ul\">{`Full keyboard support`}</li>\n      <li parentName=\"ul\">{`Viewport-aware positioning with respect to a trigger.`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"remaining\"\n    }}>{`Remaining`}</h4>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Context Menu. Positioning with respect to a click point.`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Advanced hover behaviour, which detects attempt to go to submenu and doesn't close the menu on mouse out.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <h3 {...{\n      \"id\": \"simple-flat-menu-with-static-items\"\n    }}>{`Simple flat menu with static items`}</h3>\n    <Example mdxType=\"Example\">\n  <Static mdxType=\"Static\" />\n    </Example>\n    <h3 {...{\n      \"id\": \"menu-with-a-trigger\"\n    }}>{`Menu with a trigger`}</h3>\n    <p>{`This is the most common use case of a menu.`}</p>\n    <Example mdxType=\"Example\">\n  <MenuWithTrigger mdxType=\"MenuWithTrigger\" />\n    </Example>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n"],"names":["Menu","Static","disabledKeys","textValue","MenuItemLayout","icon","content","shortcut","Divider","key","items","title","subItems","DividerItem","MenuWithTrigger","offsetRight","offsetBottom","restoreFocus","style","paddingLeft","undefined","paddingTop","ActionToolbar","MenuTrigger","renderMenu","menuProps","close","onAction","console","log","renderItem","props","ref","ActionButton","item","childItems","frontMatter","contentTitle","metadata","toc","value","id","children","level","layoutProps","MDXContent","components","mdxType","parentName","isMDXComponent"],"sourceRoot":""}