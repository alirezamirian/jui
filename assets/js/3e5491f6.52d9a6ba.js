"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["9521"],{54756:function(e,n,t){t.d(n,{Ui:function(){return p},en:function(){return u}});var s=t(78943),i=t(2784),r=t(11538),a=t(93105),c=t(39395),o=t(95651),l=t(82376),h=t(33819),d=t(52322);let p=e=>{let{children:n,themeName:t="darcula"}=e,s={light:o,highContrast:c,darcula:a}[t],p=(0,i.useMemo)(()=>new l.Q(s),[s]);return m(),(0,d.jsx)(r.Z,{fallback:(0,d.jsx)(d.Fragment,{children:"Loading..."}),children:()=>(0,d.jsx)(h.f,{theme:p,children:n})})},u=e=>{let{children:n}=e;return(0,d.jsx)(p,{children:(0,d.jsx)(x,{children:n})})},m=()=>{(0,i.useEffect)(()=>{let e="example-context-patch";if(!document.body.classList.contains(e))try{document.querySelectorAll("link[rel=stylesheet]").forEach(e=>{if(e.sheet)for(let n=0;n<e.sheet.cssRules.length;n++){let t=e.sheet.cssRules.item(n);t?.cssText?.startsWith("body:not(.navigation-with-keyboard)")&&e.sheet.deleteRule(n)}}),document.body.classList.add(e)}catch(e){console.error("Could not undo useKeyboardNavigation")}},[])};var x=(0,s.ZP)("div").withConfig({displayName:"ExampleContext___StyledDiv",componentId:"sc-14mtscb-0"})(["background:",";"],e=>{let{theme:n}=e;return n.color("*.background")});p.__docgenInfo={description:"",methods:[],displayName:"ExampleContext",props:{themeName:{defaultValue:{value:'"darcula"',computed:!1},required:!1}}},u.__docgenInfo={description:"TODO: add a surrounding UI for examples, with tools for theme selection for example.",methods:[],displayName:"Example"}},20177:function(e,n,t){t.d(n,{e:function(){return i}}),t(2784);var s=t(52322);let i=e=>{let{path:n,name:t}=e;return(0,s.jsx)("a",{href:`https://github.com/JetBrains/intellij-community/blob/master/${n}`,target:"_blank",children:t||n.split("/").pop()})};i.__docgenInfo={description:"To make relation between things in jui and original reference impl in Intellij Platform",methods:[],displayName:"RefToIntellijPlatform",props:{path:{required:!0,tsType:{name:"string"},description:""},name:{required:!1,tsType:{name:"string"},description:""}}}},80449:function(e,n,t){t.r(n),t.d(n,{default:()=>d,frontMatter:()=>a,metadata:()=>s,assets:()=>o,toc:()=>l,contentTitle:()=>c});var s=JSON.parse('{"id":"components/SpeedSearch","title":"SpeedSearch","description":"Speed search allows for searching in any UI that represents a collection of items. It detects stop points in each item,","source":"@site/docs/components/SpeedSearch.mdx","sourceDirName":"components","slug":"/components/SpeedSearch","permalink":"/jui/docs/components/SpeedSearch","draft":false,"unlisted":false,"editUrl":"https://github.com/alirezamirian/jui/edit/master/packages/website/docs/components/SpeedSearch.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"SearchInput","permalink":"/jui/docs/components/SearchInput"},"next":{"title":"StatusBar","permalink":"/jui/docs/components/StatusBar"}}'),i=t("52322"),r=t("22840");t("20177"),t("54756");let a={},c="SpeedSearch",o={},l=[{value:"Features",id:"features",level:3},{value:"Integration with other components",id:"integration-with-other-components",level:2},{value:"Advanced use",id:"advanced-use",level:2},{value:"Low level speed search API",id:"low-level-speed-search-api",level:3},{value:"hooks",id:"hooks",level:4},{value:"Collection Speed Search API",id:"collection-speed-search-api",level:3}];function h(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"speedsearch",children:"SpeedSearch"})}),"\n",(0,i.jsx)(n.p,{children:"Speed search allows for searching in any UI that represents a collection of items. It detects stop points in each item,\nand you can type only one or more character from the beginning of each stop point. The name is kept inline with the\noriginal implementation."}),"\n",(0,i.jsx)(n.h3,{id:"features",children:"Features"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Detecting stop points based on casing, use of non-alphabetic characters, etc., with a high degree of matching the\noriginal implementation."}),"\n",(0,i.jsx)(n.li,{children:"Highlighting matches in items"}),"\n",(0,i.jsx)(n.li,{children:"Showing search query as an overlay at the top left, with visual feedback about search result."}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#low-level-speed-search-api",children:"Low level"})," API for implementing speed search for any UI component."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#collection-speed-search-api",children:"Higher level API"})," for integrating speed search with Collection components, such as ",(0,i.jsx)(n.code,{children:"List"}),", ",(0,i.jsx)(n.code,{children:"Tree"}),", etc."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"integration-with-other-components",children:"Integration with other components"}),"\n",(0,i.jsxs)(n.p,{children:["Normally, you don't need to use speed search hooks and components directly. Collection component like ",(0,i.jsx)(n.code,{children:"List"})," or ",(0,i.jsx)(n.code,{children:"Tree"}),"\ncome with a version with built-in support for speed search."]}),"\n",(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"./List#speedsearchlist",children:"SpeedSearchList"}),", ",(0,i.jsx)(n.a,{href:"./Tree#speedsearchtree",children:"SpeedSearchTree"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"advanced-use",children:"Advanced use"}),"\n",(0,i.jsx)(n.h3,{id:"low-level-speed-search-api",children:"Low level speed search API"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"SpeedSearch"})," component is container, which when focused, captures the search query as the user\nstarts typing. It shows the search query as an overlay at the top left of the container. The state of the speed search\n(search query, and the state of search being active or not) can be controlled or left uncontrolled."]}),"\n",(0,i.jsx)(n.admonition,{title:"Note",type:"info",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"SpeedSearch"})," component doesn't have anything to do with the search logic itself, it only captures the UI behaviour of\na container that supports Speed Search."]})}),"\n",(0,i.jsxs)(n.p,{children:["Here is a very simple, and functionally incomplete example of using ",(0,i.jsx)(n.code,{children:"SpeedSearch"}),". Click anywhere in the container box\nto move focus to it, and start typing:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",metastring:"live",live:!0,children:'function SpeedSearchExample() {\n  return (\n    <>\n      <SpeedSearch className="my-speed-search">\n        <ul>\n          <li>Paco de lucia</li>\n          <li>Vicente Amigo</li>\n          <li>Gerardo Nunez</li>\n        </ul>\n      </SpeedSearch>\n      <style>\n        {`\n          .my-speed-search {\n            border: 1px solid #aaa;\n          }\n          .my-speed-search:focus {\n            border-color: blue;\n          }\n        `}\n      </style>\n    </>\n  );\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"minusculeMatch"})," function can be used to do the actual search in a string and get back the matched ranges. Then\n",(0,i.jsx)(n.code,{children:"TextWithHighlights"})," can be used to show the matches. Here is a full example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",metastring:"live",live:!0,children:'function FullSpeedSearchExample() {\n  const items = ["Paco de Lucia", "Vicente Amigo", "Gerardo Nunez"];\n  const [searchTerm, setSearchTerm] = useState("");\n  const [active, setActive] = useState(false);\n  const searchResult = useMemo(\n    () =>\n      items.reduce((result, item) => {\n        result[item] = minusculeMatch(item, searchTerm);\n        return result;\n      }, {}),\n    [searchTerm]\n  );\n  const match = Object.values(searchResult).some((i) => i);\n  return (\n    <>\n      <SpeedSearch\n        className="my-speed-search"\n        searchTerm={searchTerm}\n        onSearchTermChange={setSearchTerm}\n        isSearchActive={active}\n        onIsSearchActiveChange={setActive}\n        match={match}\n      >\n        <ul>\n          {items.map((item) => (\n            <li key={item}>\n              <TextWithHighlights highlights={searchResult[item]}>\n                {item}\n              </TextWithHighlights>\n            </li>\n          ))}\n        </ul>\n      </SpeedSearch>\n      <style>\n        {`\n          .my-speed-search {\n            border: 1px solid #aaa;\n          }\n          .my-speed-search:focus {\n            border-color: blue;\n          }\n        `}\n      </style>\n    </>\n  );\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"hooks",children:"hooks"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"SpeedSearch"})," component is built on top of a couple of hooks:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"useSpeedSearch"}),": encapsulates event handling logic for speed search container"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"useSpeedSearchState"}),": encapsulates state management for ",(0,i.jsx)(n.code,{children:"searchTerm"})," and ",(0,i.jsx)(n.code,{children:"active"})," state."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"SpeedSearch"})," merely uses those hooks together with ",(0,i.jsx)(n.code,{children:"SpeedSearchContainer"})," and ",(0,i.jsx)(n.code,{children:"SpeedSearchPopup"})," which\nare dump UI components."]}),"\n",(0,i.jsx)(n.h3,{id:"collection-speed-search-api",children:"Collection Speed Search API"}),"\n",(0,i.jsx)(n.p,{children:"If you are implementing a new collection component (similar to List, Tree, Table, etc.) this low level hook can be used\nto add support for speed search in that component. More documentation to be added here."})]})}function d(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);
//# sourceMappingURL=3e5491f6.52d9a6ba.js.map