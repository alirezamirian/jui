{"version":3,"file":"assets/js/375aa0c7.22ddefa5.js","mappings":"8KAqBO,MAAMA,EAAaC,EAAAA,YAAiB,SAAmBC,EAE5DC,GACC,IAFCC,YAAaC,KAAoBC,GAAwBJ,EAG3D,MAAME,EACJC,IACCJ,EAAAA,eAAqBK,EAAMC,WACG,iBAAxBD,EAAMC,SAASC,KACjBF,EAAMC,SAASC,UAChBC,IACJ,SACIC,GAAMC,EAAAA,EAAAA,GAAaR,IACnB,YAAES,IAAgBC,EAAAA,EAAAA,GACtB,CACET,iBACGE,GAELI,GAEII,GAAWC,EAAAA,EAAAA,GAAeT,IAC1B,UAAEU,GAAcV,EAEtB,OAAOL,EAAAA,aACLK,EAAMC,UACNU,EAAAA,EAAAA,GAAWH,EAAUF,EAAa,CAAEI,YAAWN,QAEnD,IAAGV,EAAAkB,aAAA,wf,kDCrCH,SAASC,EAAQb,GACf,OAAO,IACT,CAKA,IAAIc,EAAQD,EAMZA,EAAKE,kBAAoB,UACvBf,EACAgB,GAEA,MAGMC,EAFJC,EAAAA,EACAH,kBAAkBf,EAAOgB,GACEG,OAAOC,MAC9BC,EAA2BJ,EAAOK,iBACxCL,EAAOK,iBAAoBN,GACzBK,IAA2BL,IAAYA,EAAQO,kBAC3CN,CACR,C,mCCpBO,MAAMO,E,QACX7B,cAAiD,K,uGCYnD,MAAM8B,EAAmB,iCA2BzB,SAASC,EACPC,EACAC,GAEA,MAAMC,GAAQC,EAAAA,EAAAA,MACRC,EAAgBH,GAAaC,EAAMT,MAAMQ,GAC/C,GAAIG,EACF,OAAOA,EAET,MAAM,UAAEC,EAAY,CAAC,EAAC,KAAEC,GACI,iBAAnBN,EACH,CAAEM,KAAMN,GACRA,EACN,OArCF,SACEE,EACAI,EACAD,GAkBA,YAlBwB,IAAxBA,IAAAA,EAA2B,CAAC,GAkBpB,GAhBYP,IAClBI,EAAMK,iBAAmB,WAAa,cAenBD,IAZnB,CAAC,WAAY,WAAY,UAAW,UAAW,YAI9CE,QAAQC,IAEPJ,EAAUK,WAAY,CAAC,UAAW,WAAWC,SAASF,KAEvDG,QACC,CAACC,EAAOJ,IAAaI,GAASR,EAAUI,GAAYA,EAAW,KAC/D,SAGN,CAeSK,CAAaZ,EAAOI,EAAMD,EACnC,CAEO,MAAMU,EAAU/C,EAAAA,YACrB,CAAAC,EAEEC,KACI,IAFJ,UAAE+B,EAAS,KAAEe,EAAI,KAAEC,KAAS5C,GAAuBJ,EAGnD,MAAMiD,EAAmBnB,EAAYiB,EAAMf,GAErCxB,GAAM0C,EAAAA,EAAAA,GAAgBjD,GAE5B,OADAkD,EAAAA,EAAAA,GAAW,CAAEC,KAAO,8BAA6BH,KAAsBzC,GAChET,EAAAA,cAACsD,EAAAA,GAAiBC,EAAAA,EAAAA,GAAA,GAAKlD,EAAK,CAAEI,IAAKA,EAAKwC,KAAMA,IAAQ,IAE/DF,EAAA9B,aAAA,mnB,iHC9DK,MAAMuC,EAAYA,CAACC,EAAwBC,KAChD,MAAOpB,EAAMqB,GAAOF,EAAeG,MAAM,KACzC,MAAQ,GAAEtB,IAAOoB,IAAYC,EAAO,IAAGA,IAAQ,IAAI,EAQ/CE,EAAuBC,GAC3BA,EAAaC,WAAW,KACpBD,EAAaE,MAAM,GAClB,sBAAqBF,IAUfG,EAAejE,EAAAA,YAC1B,CAAAC,EAEEC,KACI,IAFJ,KAAE8C,EAAI,SAAEkB,KAAa7D,GAA0BJ,EAG/C,MAAMQ,GAAM0C,EAAAA,EAAAA,GAAgBjD,GAEtBiE,GADQhC,EAAAA,EAAAA,MACSiC,KAzBAC,EAAChB,EAAciB,KACxC,MAAOhC,EAAMqB,GAAON,EAAKO,MAAM,KAC/B,OAAOU,GAAa,GAAEhC,SAAYqB,EAAO,IAAGA,IAAQ,IAAI,EAuBxBU,CAAYrB,EAAMkB,GAAYlB,EAS5D,OARAI,EAAAA,EAAAA,GACE,CACEC,KAAMQ,EAAoBM,GAC1BI,aAAcV,EAAoBb,IAEpCvC,GAGKT,EAAAA,cAACsD,EAAAA,GAAiBC,EAAAA,EAAAA,GAAA,GAAKlD,EAAK,CAAEI,IAAKA,IAAO,IAEnDwD,EAAAhD,aAAA,mxB,kDC1DF,MAAMuD,EAA8B,GAEvBlB,EAAoBmB,EAAAA,GAAOC,IAIrC;;;;;;WAMQzE,IAAA,IAAC,KAAEgD,EAAOuB,GAAmBvE,EAAA,MAAM,GAAEgD,KAAQ;YAC5C0B,IAAA,IAAC,KAAE1B,EAAOuB,GAAmBG,EAAA,MAAM,GAAE1B,KAAQ;;YAE7C2B,IAAA,IAAC,KAAEC,GAAMD,EAAA,MAAe,WAATC,EAAoB,eAAYrE,CAAS;wECd7D,SAAS4C,EAAUnD,EAQxBQ,GACC,IARD,KAAE4C,EAAI,aAAEkB,GAAuDtE,EAS/D,MAAMiC,GAAQC,EAAAA,EAAAA,MACR2C,GAAYC,EAAAA,EAAAA,YAAWlD,EAAAA,GACvBmD,EAAWF,GAAWG,YAAcH,GAAWI,oBACrDC,EAAAA,EAAAA,YAAU,KACR,IAAIC,GAAW,EAoCf,MAnCkBC,WAChB,IAAKhC,EAEH,YADAiC,QAAQC,MAAM,sBAGZ9E,EAAI+E,UAEN/E,EAAI+E,QAAQC,SAAW,QAEzB,MAAMC,QAAYxD,EACfyD,WAAWtC,EAAM2B,GACjBY,OAAOC,IACN,GAAItB,EACF,OAAOrC,EAAMyD,WAAWpB,EAAcS,GAExC,MAAMa,CAAC,IAERC,SAAQ,KACHrF,GAAK+E,UAAYJ,IACnB3E,EAAI+E,QAAQC,SAAW,QACzB,IAEJ,GAAIC,EAAK,CACP,MAAMK,EAAUtF,GAAK+E,QACrB,IAAKJ,GAAYW,EAAS,CACxBA,EAAQC,cAAc,QAAQC,SAC9B,MAAMC,EAAaC,SAASC,cAAc,OAC1CL,EAAQM,YAAYH,GACpBA,EAAWI,UAkBrB,SAAuBZ,GACrB,MAAMa,GAAiC,IAAhBC,KAAKC,UAAiBC,QAAQ,GAC/CC,EAAYjB,EAAIkB,SAAS,eAC/B,MAAO,IAAID,GAAW/D,QAAO,CAACiE,EAAWlC,KAAe,IAAZmC,EAAGC,GAAGpC,EAChD,MAAMqC,EAAS,GAAED,KAAMR,IACvB,OAAOU,EACJ,OAAMF,KACN,OAAMC,KACPC,EAAY,QAAOF,KAAQ,QAAOC,KAAUH,GAC7C,GACAnB,EACL,CA7BiCwB,CAAcxB,EACvC,CACF,MACEJ,QAAQC,MAAM,0BAA2BlC,EAC3C,EAEF8D,GAAYvB,MAAMN,QAAQC,OACnB,KACLH,GAAW,CAAI,CAChB,GACA,CAAC/B,EAAM2B,GACZ,CAoBA,SAASiC,EAAWG,EAAgBC,EAAgBC,GAClD,MAAMC,EAAWD,EAAIE,QAAQJ,EAAQC,GAC/BI,EAAgBF,EAASC,QAAQJ,EAAQC,GAC/C,OAAIE,IAAaE,EACRF,EAEFN,EAAWG,EAAQC,EAAQI,EACpC,C,8IC5DO,MAAMC,EAA8B,GAC9BC,EAA6B,GAE7BC,EAAmBnD,EAAAA,GAAOoD,MAA4B;;;;;;;;;gBASnD5H,IAAA,IAAC,QAAE6H,GAAS7H,EAAA,MAAM,GAAE6H,KAAW;eAChCnD,IAAA,IAAC,QAAEmD,GAASnD,EAAA,MAAM,GAAEmD,KAAW;;;;;;;kBAO5BlD,IAAA,IAAC,MAAE1C,GAAO0C,EAAA,OACtB1C,EAAM6F,MAAM,+BAAgC,UAAU;oBACxCC,IAAA,IAAC,MAAE9F,GAAO8F,EAAA,OACxB9F,EAAM6F,MAAM,gCAAiC,UAAU;;;;kBAI3CE,IAAA,IAAC,MAAE/F,GAAO+F,EAAA,OACtB/F,EAAM6F,MAAM,iCAAkC,UAAU;oBAC1CG,IAAA,IAAC,MAAEhG,GAAOgG,EAAA,OACxBhG,EAAM6F,MACJ,kCACA7F,EAAMkC,KAAO,UAAY,UAC1B;;;;kBAIW+D,IAAA,IAAC,MAAEjG,GAAOiG,EAAA,OACtBjG,EAAM6F,MAAM,iCAAkC,UAAU;oBAC1CK,IAAA,IAAC,MAAElG,GAAOkG,EAAA,OACxBlG,EAAM6F,MAAM,kCAAmC,UAAU;;EAQlDM,EAAarI,EAAAA,YAAiB,SAAmBsI,EAe5DpI,GACC,IAfD,QACE4H,EAAUJ,EAA2B,oBACrCa,GAAsB,EAAI,oBAC1BC,GAAsB,EACtBC,UAAWC,EAAc,WACzBC,EAAU,QACVC,EAAO,cACPC,EAAa,WACbC,EAAU,aACVC,EAAY,UACZC,EAAS,0BACTC,KACGC,GACaZ,EAKlB,MAAM7H,GAAMC,EAAAA,EAAAA,GAAaR,IACnB,eAAEiJ,IAAmBC,EAAAA,EAAAA,GAAa,CAAET,cAAclI,IAClD,WAAE4I,EAAU,UAAEZ,IAAca,EAAAA,EAAAA,GAAS,CACzC7I,MACAgI,UAAWC,EACXC,aACAC,UACAC,gBACAC,aACAC,eACAC,YACAC,4BACAV,wBAGF,OACEvI,EAAAA,cAAC4H,GAAgBrE,EAAAA,EAAAA,GAAA,CACfgG,UAAWd,EAAY,SAAW,GAClCe,SAAUb,IACN3H,EAAAA,EAAAA,GAAWqI,EAAYH,EAAYC,GAAe,CACtDrB,QAASA,EACT2B,SAAUjB,IAAwBG,GAAc,OAAInI,EACpDC,IAAKA,IAGX,IAAG4H,EAAApH,aAAA,6xB,iFCjHI,MAAMyI,EAAwBA,IAEjC1J,EAAAA,cAAC2J,EAAAA,IAAuBpG,EAAAA,EAAAA,GAAA,CACtBqG,GAAI,OACAC,EAAAA,EAAAA,GAAa,CAAE1J,YAAa,KAAM2J,YAAa,aAChDC,iBAGPL,EAAAzI,aAAA,qD,4ICFF,SAAU+I,EAAuBC,GAC/B,IAAK,MAAMC,KAAeD,OAClB,IACDC,EACH,WAACC,GACC,MAAMC,EAAUF,EAAYC,eAC5B,GAAIC,EACF,IAAK,MAAMC,KAAoBD,EAAS,CACtC,MAAM,KAAE7J,KAAS+J,GAAgCD,QAC3CC,CACR,CAEJ,EAEN,CAEA,MAAMC,EAAcrJ,EAAAA,EAAKsJ,KAAK,MAG9BD,EAAYnJ,kBAAoB,SAC9Bf,EACAgB,GAGA,OAAO2I,EAAoB9I,EAAAA,EAAKE,kBAAkBf,EAAOgB,GAC3D,EAEA,MAAMoJ,EAAiBC,EAAAA,EAAQF,KAAK,MAuCpC,SAASG,EAAmBrK,GAC1B,OAAOsK,MAAMC,QAAQvK,GAEjBA,EAASwK,IAAIH,IA/BjBrJ,EAgC6BhB,GA7B3BN,EAAAA,eAAqBsB,IACpBA,EAAOf,OAASW,EAAAA,GAAQI,EAAOf,OAASwK,EAAAA,EAWvC/K,EAAAA,eAAqBsB,IAAWA,EAAOf,OAASmK,EAAAA,EAC3C1K,EAAAA,cACLyK,EACA,CACEO,IAAmB,MAAd1J,EAAO0J,IAAc1J,EAAO0J,SAAMxK,KACnCc,EAAOjB,OAEbsK,EAAiBrJ,EAAOjB,MAAcC,WAGnCgB,EAnBEtB,EAAAA,cACLuK,EACA,CACES,IAAmB,MAAd1J,EAAO0J,IAAc1J,EAAO0J,SAAMxK,KACnCc,EAAOjB,OAEbsK,EAAgBrJ,EAAOjB,MAAMC,YAbnC,IACEgB,CAiCF,CAzCAmJ,EAAerJ,kBAAoB,SACjCf,EACAgB,GAGA,OAAO2I,EAAoBU,EAAAA,EAAQtJ,kBAAkBf,EAAOgB,GAC9D,E,qCC8BO,MAAM4J,EAAqBjL,EAAAA,cAG/B,CACDkL,MAAOA,OACPC,sBAAkB3K,IAEP4K,EAAcpL,EAAAA,cAWzB,CAAC,GAEI,SAASqL,EAAOpL,EAMrBqL,EACA7K,GACC,IANC8K,SAAUC,EAAY,gBACtBC,EAAkB,aACfpL,GAC+BJ,EAIpC,MAAM,MAAEiL,EAAK,iBAAEC,IAAqBpG,EAAAA,EAAAA,YAAWkG,GACzClK,EAAYV,EAAMU,WAAaoK,EAC/BO,EAAUA,KACdrL,EAAMqL,YACNR,GAAO,EAEHK,EAAYP,GAIbM,EAAMK,WAAWC,QAAQZ,IAAMa,cAGH,kBAApBJ,GACTC,IACOF,IAAeR,SAFjB,EADEQ,IAAeR,GAMpBc,EAA0D,CAC9DL,kBACA1K,YACAwK,WACAG,YAEI,UAAEK,IAAcC,EAAAA,EAAAA,GACpB,IAAK3L,EAAOkL,WAAUG,UAAS3K,aAC/BuK,EACA7K,GAGF,MAAO,CACLsL,YACAD,mBAEJ,CAEO,SAASG,EACd5L,GAOA,OADAA,EDxDK,SAA6BJ,GAGe,IAHX,SACtCK,KACGD,GACwBJ,EAC3B,MAAO,IACFI,EACHC,SACsB,mBAAbA,EACF4L,GAAYvB,EAAgBrK,EAAS4L,IACrCvB,EAAgBrK,GAE3B,CC6CU6L,CAAqB9L,IACtB+L,EAAAA,EAAAA,GAAa,IACf/L,EACHgM,wBAAyB,SACzBC,aAAcjM,EAAMkM,YAAc,CAAClM,EAAMkM,kBAAe/L,EACxDgM,iBAAkB7H,IAAA,IAAE8H,GAAS9H,EAAA,OAAKtE,GAAOqM,sBAAsBD,EAAS,EACxEE,oBAAqBtM,EAAMuM,mBACvB,CAACvM,EAAMuM,yBACPpM,GAER,CAwBO,SAASqM,EAAIjI,GAA0D,IAAvC,SAAEkI,KAAazM,GAAqBuE,EACzE,MAAMnE,EAAMT,EAAAA,OAA+B,MACrCsL,EAAQW,EAAa5L,IACrB,iBAAEyL,EAAgB,UAAEC,GAAcV,EAAQhL,EAAOiL,EAAO7K,GAE9D,OAQET,EAAAA,cAACoL,EAAY2B,SAAQ,CAACtL,MAAOqK,GAC3B9L,EAAAA,cAACgN,EAAAA,IAAUzJ,EAAAA,EAAAA,GAAA,GACLwI,EAAS,CACbtL,IAAKA,EACLwM,MAAO,CAAEH,YACTI,mBAAoB7M,EAAM6M,sBAEzBC,EAAAA,EAAAA,GAAgB7B,EAAO,IAAIA,EAAMK,cAI1C,CAACkB,EAAA5L,aAAA,quF,mPC9KD,MAAMmM,EAAqB3I,EAAAA,GAAOC,IAAK;;EAIjC2I,GAA6B5I,EAAAA,EAAAA,IAAOR,EAAAA,GAAc;;;;EAMlDqJ,GAAwB7I,EAAAA,EAAAA,IAAO1B,EAAAA,EAAS;;;;EAyG9C,MAAMwK,EAAkBvN,EAAAA,cAIrB,CAAEwN,iBAAkB,CAAC,EAAGC,WAAY,CAAC,EAAGC,sBAAuB,CAAC,IAEtDC,EAAoBA,KACxB5I,EAAAA,EAAAA,YAAWwI,GAGb,SAASK,EAAQjJ,GAAwC,IAApC,KAAEkJ,EAAI,MAAEvC,GAAyB3G,EAE3D,MAAMlE,EAAMT,EAAAA,OAA4B,MAClC8N,EAAgB9N,EAAAA,OAA6B,MAC7C2I,EAAa2C,EAAMyC,aAAaC,IAAIH,EAAK7C,KACzCiD,EAAa3C,EAAMgB,aAAa0B,IAAIH,EAAK7C,KACzC/F,EAAaqG,EAAM4C,iBAAiBC,aAAaH,IAAIH,EAAK7C,KAC1DoD,EAAY9C,EAAM4C,iBAAiBG,aAAeR,EAAK7C,KACvD,QACJU,EAAO,gBACPD,EAAe,cACf6C,EAAiBjO,IAA2BL,EAAAA,cAACuO,EAAAA,EAAYlO,IAAS,YAClEmO,EAAeC,IAAuBA,KACpC1J,EAAAA,EAAAA,YAAWqG,EAAAA,KAET,cAAEsD,EAAa,WAAEjB,EAAU,iBAAED,EAAgB,sBAAEE,GA5HvD,SAAoBzN,EAKlBqL,EACA7K,GACe,IANf,gBACEgL,KACGpL,GACsEJ,EAI3E,MAAM4N,EAAOvC,EAAMK,WAAWC,QAAQvL,EAAM2K,KACtCrC,EAAa2C,EAAMyC,aAAaC,IAAIH,EAAK7C,KACzCiD,EAAa3C,EAAMgB,aAAa0B,IAAIH,EAAK7C,KACzC2D,EAAad,EAAKhC,eAChB6C,cAAeE,KAAsBtN,IAAWuN,EAAAA,EAAAA,GACtD,CACE7D,IAAK6C,EAAK7C,IAGVU,QAASiD,EAAa,YAAWnO,GAEnC8K,EACA7K,UAMKmO,EAAkBE,oBAClBF,EAAkBG,eAED,YAApBtD,GAAiCwC,UAE5BW,EAAkBI,cAG3B,MAAM,WAAEC,IAAeC,EAAAA,EAAAA,GAAS,CAC9BvG,WAAYA,EACZwG,aAAcA,KACZ,MAAMC,EAAmB,IAAI9D,EAAMgB,cAAc+C,MAC9C9C,GACCjB,EAAMK,WAAWC,QAAQW,IAAc+C,YAAczB,EAAKyB,YAGtC,YAApB7D,GAAkCwC,GACpC3C,EAAMiE,UAAU1B,EAAK7C,MAGlBwE,EAAAA,EAAAA,QAEmB,YAApB/D,GAAiCwC,GAAcmB,IAE/C9D,EAAM4C,iBAAiBuB,YAAW,GAEpCnE,EAAM4C,iBAAiBwB,cAAc7B,EAAK7C,KAC5C,IAIE2E,EAAgB,CACpBC,UAAY/J,IACV,IACc,UAAVA,EAAEmF,KAA6B,MAAVnF,EAAEmF,MACH,kBAApBS,GACF,eAAiB5F,EAAEmF,IAInB,OAFAM,EAAMiE,UAAU1B,EAAK7C,UACrBnF,EAAEgK,iBAEJ,IAIIxG,WAAYyG,IAAqBxG,EAAAA,EAAAA,GAAS,CAChDX,WAAYA,EACZK,UAAWA,KACTsC,EAAMiE,UAAU1B,EAAK7C,KACjBiD,GAEF3C,EAAM4C,iBAAiBwB,cAAc7B,EAAK7C,IAC5C,IAIJ,MAAO,IACF1J,EACHoN,eAAe1N,EAAAA,EAAAA,GACb2N,EACI,CACE,gBAAiBV,EACjB,gBAAiB,QAEnB,CAAC,EACLW,EACAK,EACAU,EACoB,kBAApBlE,EAAsCqE,EAAmB,CAAC,GAGhE,CA4BIC,CACE,CACEtE,kBACAT,IAAK6C,EAAK7C,KAEZM,EACA7K,IAGI4I,WAAYyG,IAAqBxG,EAAAA,EAAAA,GAAS,CAChDX,WAAYA,EACZK,UAAWA,KACTsC,EAAMiE,UAAU1B,EAAK7C,KACjBiD,GAEF3C,EAAM4C,iBAAiBwB,cAAc7B,EAAK7C,IAC5C,IAIJ,IAAMgF,aAAcC,IAAkBC,EAAAA,EAAAA,GAAmB,CACvDC,UAAW1P,EACX2P,WAAYtC,EACZuC,UAAW,YACXC,YAAY,EACZ5E,UACA6E,OAAQ,EACRC,cAAeC,EAAAA,GAAwBC,EAAAA,IACvCC,OAAQ1C,IAGV,MAAM2C,EACgB,YAApBnF,EACI,CACE5G,KAAM,SACN,aAAc,WACX7D,EAAAA,EAAAA,GAAW8O,EAAkB,CAE9Be,YAAchL,GAA0BA,EAAEgK,qBAG9C,CAAC,EACP,OACE7P,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAC8Q,EAAAA,IAAcvN,EAAAA,EAAAA,GAAA,GACTmL,EAAa,CACjB/F,WAAYA,EACZoI,SAAU3C,EACV3N,IAAKA,IAEJwE,GACCjF,EAAAA,cAACgR,EAAAA,GAAkB,KACjBhR,EAAAA,cAACsN,EAAqB,CACpBtK,KAAM,CACJV,KAAM,YACND,UAAW,CAAE4O,SAAU7C,OAK/BpO,EAAAA,cAAC6B,EAAAA,EAAiBkL,SAAQ,CACxBtL,MAAO,CACLkH,aACAzD,mBAAoBoG,EAAM4C,iBAAiBE,UAC3CnJ,aACAiH,KAAM2B,IAGR7N,EAAAA,cAACuN,EAAgBR,SAAQ,CACvBtL,MAAO,CAAEgM,aAAYD,mBAAkBE,0BAEtCc,EAC0B,iBAAlBX,EAAKqD,SACVlR,EAAAA,cAACoN,EAAuBK,EACrBI,EAAKqD,UAGRrD,EAAKqD,SAEPrD,KAILA,EAAKhC,eACJ7L,EAAAA,cAACmR,EAAAA,EAAsBP,EACrB5Q,EAAAA,cAACqN,EAA0B,CAACrK,KAAK,0BAItCiL,GASCjO,EAAAA,cAACoR,EAAAA,EAAO,CACNC,iBAOEC,GAGFtR,EAAAA,cAAA,OAAAuD,EAAAA,EAAAA,GAAA,CAAK9C,IAAKqN,GAAmBmC,GAC1B3B,EAAc,CAAEiD,YAAajG,EAAOkG,QAAS3D,EAAK7C,QAM/D,CAKA,SAASsG,EAAa1M,GAMlB,IANmB,SACrBtE,EAAQ,gBACRmR,EAAkBtL,SAASuL,MAI5B9M,EACC,OAAO+M,EAAAA,aAAsBrR,EAAUmR,EACzC,CAAC7D,EAAA3M,aAAA,gZ,wGChSD,MAAM2Q,EAAuBnN,EAAAA,GAAOoN,GAAI;;;;EAKlCC,EAAUrN,EAAAA,GAAOC,IAAK;;EAItBqN,EAAWtN,EAAAA,GAAOuN,GAAI;;;;WAIjB/R,IAAA,IAAC,MAAEiC,GAAOjC,EAAA,OACjBiC,EAAM+P,uBACJ/P,EAAM6F,MAAM,kCACb;EAGQmK,EAAiBvN,IAIF,IAJG,QAC7BwN,EAAO,SACPC,EAAQ,KACRpP,GACoB2B,EACpB,MAAM,WAAEM,IAAeoN,EAAAA,EAAAA,GACrBxQ,EAAAA,EACA,sEAEI,WAAE4L,EAAU,sBAAEC,IAA0BC,EAAAA,EAAAA,KACxC2E,GAAerN,GAAcjC,EACnC,OACEhD,EAAAA,cAAC4R,EAAoB,KAClBU,GAAetS,EAAAA,cAACgR,EAAAA,GAAkB,KAAEsB,GACrCtS,EAAAA,cAAC8R,EAAYrE,EAAa0E,GACzBC,GAAYpS,EAAAA,cAAC+R,EAAarE,EAAwB0E,GAC9B,EAEzBF,EAAAjR,aAAA,4U,4FCrCK,SAASsR,EAAWtS,GAiBvB,IAjBwB,SAC1BK,EAAQ,aACRkS,EAAY,aACZxC,EAAY,WACZI,EAAU,iBACVjF,EAAgB,MAChBG,GAWDrL,EACC,OAAKqL,EAAMqF,OAIT3Q,EAAAA,cAACoR,EAAAA,EAAO,KACNpR,EAAAA,cAACyS,EAAAA,EAAU,CAACD,aAAcA,EAAczR,WAAS,GAC/Cf,EAAAA,cAACiL,EAAAA,GAAmB8B,SAAQ,CAC1BtL,MAAO,IACF6J,EACHH,qBAGFnL,EAAAA,cAAA,OAAAuD,EAAAA,EAAAA,GAAA,GAASyM,EAAY,CAAEvP,IAAK2P,IACzB9P,MAZF,IAkBX,CAACiS,EAAAtR,aAAA,s6B,6HCaM,MAAMyR,EAA0CzS,IAUhD,IAViD,SACtDK,EAAQ,WACRqS,EAAU,UACVC,EAAY,SAAQ,MACpBC,EAAQ,QAAO,WACfvC,GAAa,EAAI,aACjBkC,GAAe,EAAI,oBACnBjK,GAAsB,EAAI,qBAC1BuK,KACG5J,GACJjJ,EACC,MAAMqL,GAAQyH,EAAAA,EAAAA,GAAoB7J,GAC5B8J,EAAahT,EAAAA,OAAa,MAC1BoQ,EAAapQ,EAAAA,OAAa,OAGxBiT,iBAAkBC,EAAY,UAAEnH,IAAcoH,EAAAA,EAAAA,GACpD,CAAE5S,KAAM,QACR+K,EACA0H,GAEII,EAA6C,IAC9CF,EAEH3K,wBAEI,YAAE5H,IAAgBC,EAAAA,EAAAA,GAAUwS,EAAiBJ,IAC7C,aAAEhD,IAAiBqD,EAAAA,EAAAA,GACvB,CACE3H,QAASA,IACAJ,EAAMJ,QAEfoI,mBAAmB,EACnB3C,OAAQrF,EAAMqF,OACd4C,2BAA2B,EAC3BC,eAAe,EACfC,6BAA+B1N,IAErBA,EAAQ2N,QAAQ,kBAG5BtD,IAGMJ,aAAcC,IAAkBC,EAAAA,EAAAA,GAAmB,CACzDC,UAAW2C,GAAwBE,EACnC5C,aACAC,UAAWsD,EAAaf,EAAWC,GACnCvC,aACAC,OAAQ,EACRqD,iBAAkB,EAClBjD,OAAQrF,EAAMqF,SAGhB,OACE3Q,EAAAA,cAAAA,EAAAA,SAAA,KACGM,EAASK,EAAaqS,GACvBhT,EAAAA,cAACuS,EAAAA,EAAW,CACVvC,cAAchP,EAAAA,EAAAA,GAAWgP,EAAcC,GACvCG,WAAYA,EACZ9E,MAAOA,EACPkH,aAAcA,GAEbG,EAAW,CAAE5G,eAEf,EAIP,SAAS4H,EACPf,EACAC,GAEA,OAAQD,GACN,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,MACH,MAAQ,GAAEA,KAAuB,QAAVC,EAAkB,SAAW,QAGtD,QACE,MAAQ,GAAED,KAAaC,IAE7B,CAACH,EAAAzR,aAAA,+hB,iHC3IM,MAAMwP,EAAwB,EACxBC,EAAoB,EAGpB1D,EAAavI,EAAAA,GAAOoP,EAAqC;;;;;;aAMzDpD;;;;;;;;gBAQGC;MACVzQ,IAAA,IAAC,MAAEiC,GAAOjC,EAAA,OACZiC,EAAM6F,MAAM,mBAAqB7F,EAAMkC,KAAmB,UAAZ,UAAsB;IACpE0P,EAAAA;gBACYnP,IAAA,IAAC,MAAEzC,GAAOyC,EAAA,OACtBzC,EAAM6F,MACJ,uBACD;WACMnD,IAAA,IAAC,MAAE1C,GAAO0C,EAAA,OACjB1C,EAAM6F,MACJ,uBACD;;IAED4B,EAAAA;IACAA,EAAAA;IACAA,EAAAA,QAA6BA,EAAAA;;;IAG7BA,EAAAA;wBACoB3B,IAAA,IAAC,MAAE9F,GAAO8F,EAAA,OAAK9F,EAAM6F,MAAM,sBAAsB;cAC3DE,IAAA,IAAC,MAAE/F,GAAO+F,EAAA,MACjB,GAAE/F,EAAMT,MAAM,8BAAgC,KAAK;eAC3CyG,IAAA,IAAC,MAAEhG,GAAOgG,EAAA,MAClB,GAAEhG,EAAMT,MAAM,oCAAsC,OAAO;cACpD0G,IAAA,IAAC,MAAEjG,GAAOiG,EAAA,MACjB,KAAIjG,EAAMT,MAAM,kCAAoC,KAAK;;IAE5D2G,IAAA,IAAC,mBAAE8E,GAAoB9E,EAAA,OACvB8E,IACA6G,EAAAA,EAAAA,IAAG,uDAIF;;;;;;IAMDjD,EAAAA;;;;UAIME,EAAAA;;;;;;;;MAQJF,EAAAA,eAA2BE,EAAAA;;;;;;;IAO7BA,EAAAA;;;;qEClFG,MAAMA,EAAqBvM,EAAAA,GAAOC,IAAK;;EAIjCyM,EAAoB1M,EAAAA,GAAOC,IAAK;;;;EAMvCsP,EAAmBD,EAAAA,EAAI;WAClB9T,IAAA,IAAC,MAAEiC,GAAOjC,EAAA,OACjBiC,EAAM+R,oBACJ/R,EAAM6F,MACJ,gCAEH;gBACWpD,IAAA,IAAC,MAAEzC,GAAOyC,EAAA,OACtBzC,EAAM6F,MACJ,+BACD;EAECmM,EAAeH,EAAAA,EAAI;WACdnP,IAAA,IAAC,MAAE1C,GAAO0C,EAAA,OACjB1C,EAAM6F,MACJ,sBACD;;EAGCoM,EAAgBJ,EAAAA,EAAI;WACf/L,IAAA,IAAC,MAAE9F,GAAO8F,EAAA,OACjB9F,EAAM6F,MAAM,+BAAiC,YAAY;;EAGhD+I,EAAiBrM,EAAAA,GAAO2P,EAGlC;;;;;;;IAOCF;IACAjM,IAAA,IAAC,SAAE8I,GAAU9I,EAAA,OAAK8I,GAAYiD,CAAgB;IAC9C9L,IAAA,IAAC,WAAES,GAAYT,EAAA,OAAKS,GAAcwL,CAAa;;;;;;iJCnC5C,SAASE,EAAUpU,EASxBqL,EACA7K,GACC,IAVD,QACE+Q,EAAO,YACPD,EAAW,iBACX+C,GAIDrU,EAID,MAAMsU,EAAWjJ,EAAMK,WAAWC,QAAQ4F,IACpC,gBACJ/F,EAAe,UACf1K,GAAY,EAAI,QAChB2K,EAAO,SACPH,IACExG,EAAAA,EAAAA,YAAWqG,EAAAA,IACf,IAAI,UAAEW,IAAcV,EAAAA,EAAAA,GAClB,CACE,aAAckJ,IAAW,eAAiBA,GAAUC,UACpDjJ,WACAG,UACAyC,aAAc7C,EAAM4C,iBAAiBC,aACrCmG,iBACEA,GACA,IAAIG,EAAAA,EACFjD,EACAlG,EAAMK,WACNL,EAAMyC,aACNtN,GAEJM,aAEFuK,EACA7K,GAEF,MAAM,aAAEiU,IAAiBC,EAAAA,EAAAA,GAAe,CAAEnD,WAAWD,EAAa9Q,GAE5DmU,EAAuB,CAC3BhF,UAAY/J,IACV,GAAc,WAAVA,EAAEmF,IAQJ,OANAM,EAAMiE,UAAUiC,GAChBlG,EAAM4C,iBAAiBwB,cAAc8B,GACrCD,EAAYrD,iBAAiBuB,YAAW,QAChB,YAApBhE,GACF5F,EAAEgK,kBAGN,GAeJ,OAXA1K,EAAAA,EAAAA,YAAU,KACR0P,YAAW,MAIS,IAAd9T,GACFN,EAAI+E,SAASsP,OACf,GACA,GACD,IAEI,CACLJ,cAAc1T,EAAAA,EAAAA,GAAW+K,EAAW2I,EAAcE,GAEtD,CAOO,SAASrG,EAAO5J,GAAgD,IAA5C,YAAE4M,EAAW,QAAEC,GAA0B7M,EAClE,MAAMlE,GAAMsU,EAAAA,EAAAA,QAAyB,MAC/BzJ,GAAQ0J,EAAAA,EAAAA,GAAgBzD,GACxBgD,EAAWjJ,EAAMK,WAAWC,QAAQ4F,IAEpC,aAAEkD,GAAiBL,EAAW,CAAE7C,UAASD,eAAejG,EAAO7K,GAErE,OACET,EAAAA,cAACgN,EAAAA,IAAUzJ,EAAAA,EAAAA,GAAA,GAAKmR,EAAY,CAAEjU,IAAKA,KAChC0M,EAAAA,EAAAA,GAAgB7B,EAAO,IAAKiJ,GAAUpK,YAAc,KAG3D,CAACoE,EAAAtN,aAAA,mP,qEChGM,MAAMwT,UAAgCQ,EAAAA,EAE3CC,WAAAA,CACE1D,EACQ7F,EACRoC,EACAtN,EACA0U,GAEAC,MAAMzJ,EAAYoC,EAActN,EAAK0U,GAAU,KALvCxJ,WAAAA,EAA+B,KAHjC0J,UAAI,EASVC,KAAKD,KAAO,IAAI1J,EAAW4J,WACxBzK,KAAKE,GAAQW,EAAWC,QAAQZ,KAChCwK,SAAS3H,IACR,GAAIA,GAAQA,EAAKyB,WAAakC,EAAS,CACrC,GAAkB,SAAd3D,EAAKtN,KACP,MAAO,CAACsN,EAAK7C,KACR,GAAkB,YAAd6C,EAAKtN,KACd,MAAO,IAAIsN,EAAK1D,YAAYW,KAAI7K,IAAA,IAAC,IAAE+K,GAAK/K,EAAA,OAAK+K,CAAG,GAEpD,CACA,MAAO,EAAE,GAEf,CAEAyK,WAAAA,GACE,OAAOH,KAAKD,KAAK,EACnB,CACAK,UAAAA,GACE,OAAOJ,KAAKD,KAAKrR,OAAO,GAAG,EAC7B,CAEA2R,WAAAA,CAAY3K,GACV,MAAM4K,EAAWR,MAAMO,YAAY3K,GAEnC,OAAOsK,KAAKD,KAAK1S,SAASiT,GAAYA,EAAW,IACnD,CACAC,WAAAA,CAAY7K,GACV,MAAM8K,EAAWV,MAAMS,YAAY7K,GAEnC,OAAOsK,KAAKD,KAAK1S,SAASmT,GAAYA,EAAW,IACnD,EAYK,SAASzB,EAAU1P,EAExB2G,EACA7K,GACC,IAHD,QAAE+Q,GAA2B7M,EAI7B,MAAQgL,cAAe+E,IAAiBqB,EAAAA,EAAAA,GAAY,CAClDnG,UAAY/J,IAGV,IAAKpF,EAAI+E,SAASwQ,SAASnQ,EAAEoQ,QAE3B,YADApQ,EAAEqQ,sBAGJ,MAAMC,EAAO7K,EAAMK,WAAWC,QAAQ4F,GACtC,GAAc,cAAV3L,EAAEmF,KAAuBmL,GAAQ7K,EAAMgB,aAAa0B,IAAImI,EAAKnL,KAG/D,OAFAM,EAAMiE,UAAU4G,EAAKnL,UACrBM,EAAM4C,iBAAiBuB,YAAW,GAGpC5J,EAAEqQ,qBAAqB,IAI3B,MAAO,CACLxB,eAEJ,C,4DCvEO,SAASM,EAAmBzD,GAGjC,MAAO,CAAE9B,IAAc2G,EAAAA,EAAAA,WAAS,IACzB,CAAE1G,IAAiB0G,EAAAA,EAAAA,UAAqB,MACzCC,GAAetB,EAAAA,EAAAA,SAAO,GACtBuB,GAAgBvB,EAAAA,EAAAA,QAAmB,MAEnCzJ,EAAgC,IAEjCiG,EAAYrD,iBAAiB5C,MAChCmE,WAAarB,IACXiI,EAAa7Q,QAAU4I,EACvBqB,EAAWrB,EAAU,EAEvBsB,aAAAA,CAAc1E,GACZsL,EAAc9Q,QAAUwF,EACxB0E,EAAc1E,EAChB,GAeF,OAbAuL,OAAOC,iBAAiBlL,EAAO,CAC7B8C,UAAW,CACTqI,IAAGA,IACMJ,EAAa7Q,SAGxB6I,WAAY,CACVoI,IAAGA,IACMH,EAAc9Q,WAKpB,IACF+L,EACHrD,iBAAkB,IAAIwI,EAAAA,EAAiBnF,EAAY5F,WAAYL,GAEnE,C,6FCpCA,MAAMqL,EAAoBlS,EAAAA,GAAOoN,GAAI;;;;;WAK1B5R,IAAA,IAAC,MAAEiC,GAAOjC,EAAA,OACjBiC,EAAM6F,MACJ,8BACD;EAGC6O,EAAkCnS,EAAAA,GAAOoP,EAAG;;;EAKrCgD,EAAclS,IAIqB,IAJD,KAC7CkJ,EAAI,MACJvC,EAAK,OACL9I,EAASA,MAAM,IACKmC,GAChB,UAAEmS,EAAS,aAAEC,EAAY,WAAEC,IAAeC,EAAAA,EAAAA,GAAe,CAC3DC,QAASrJ,EAAKqD,SACd,aAAcrD,EAAK,gBAGrB,MAAM5D,EAAQ,IAAI4D,EAAK1D,YAAY3H,OAAOA,GAC1C,OAA2D,IAAvDyH,EAAMzH,QAAOoC,IAAA,IAAC,KAAErE,GAAMqE,EAAA,MAAc,SAATrE,CAAe,IAAE4W,OACvCnX,EAAAA,cAAAA,EAAAA,SAAA,MAGPA,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,KAAQ8W,EACLjJ,EAAKqD,UACJlR,EAAAA,cAAC2W,EAAsBI,EACpBlJ,EAAKqD,UAGVlR,EAAAA,cAAC4W,EAAoCI,EAClC7J,EAAgB7B,EAAOrB,KAG3B,EChDA,SAASkD,EACd7B,EACArB,EACAzH,GAEA,YAFkC,IAAlCA,IAAAA,EAAqCA,KAAM,GAEpCyH,EAAMzH,OAAOA,GAAQsI,KAAKoB,IAC/B,OAAQA,EAAK3L,MACX,IAAK,OACH,OAAOP,EAAAA,cAAC4N,EAAAA,EAAQ,CAAC5C,IAAKkB,EAAKlB,IAAK6C,KAAM3B,EAAMZ,MAAOA,IACrD,IAAK,UACH,OACEtL,EAAAA,cAAAA,EAAAA,SAAA,KACGkM,EAAK7L,MAAM+W,YACVpX,EAAAA,cAAC0J,EAAAA,EAAW,CAACsB,IAAKkB,EAAKlB,IAAM,aAE/BhL,EAAAA,cAAC6W,EAAW,CACV7L,IAAKkB,EAAKlB,IACV6C,KAAM3B,EACNZ,MAAOA,EACP9I,OAAQA,KAIhB,IAAK,UACH,OAAOxC,EAAAA,cAAC0J,EAAAA,EAAW,CAACsB,IAAKkB,EAAKlB,MAClC,GAEJ,CDuBE6L,EAAA5V,aAAA,ghB,oEEvDF,MAAMoW,EAAuBrX,EAAAA,cAAwC,MAQ9D,SAASoR,EAAOnR,GAMnB,IANoB,SACtBK,EAAQ,iBACR+Q,EAAmBiG,EAAAA,IAIpBrX,EACC,MAAMkW,GAAOpR,EAAAA,EAAAA,YAAWsS,GAClBE,GAAexC,EAAAA,EAAAA,QAAuB,MAE5C,OAAIoB,EAEAnW,EAAAA,cAACqR,EAAgB,CAACI,gBAAiB0E,GAAO7V,GAI5CN,EAAAA,cAACqX,EAAqBtK,SAAQ,CAACtL,MAAO8V,EAAa/R,SACjDxF,EAAAA,cAACqR,EAAgB,KACfrR,EAAAA,cAAA,OAAKS,IAAK8W,EAAc,oBAAkB,IACvCjX,IAKX,CAMO,SAASkX,EACdC,EACAC,GAEA,MAAMC,EAAeF,GAAUG,QAAQ,uBACjCC,EAAeH,GAAUE,QAAQ,uBACvC,OAAOE,QAAQH,IAAiBA,IAAiBE,CACnD,CAACzG,EAAAnQ,aAAA,ioB,qECvCD,MAAM8W,EACW,EAIXC,EACJ,EAAID,EAJU,EAMHE,EAAkBxT,EAAAA,GAAOyT,IAAGjY,IAAA,IAAC,MAAEiC,GAAOjC,EAAA,MAAM,CACvDkY,gBAAiBjW,EAAM6F,MACrB,2BACA7F,EAAMkC,KAAO,UAAY,WAE3BgU,eAAgB,cAChBC,UAAW,aACXC,OAAQ,EACRC,OAAQ,OACRC,WAAY,EACb,IAEYC,GAA4BhU,EAAAA,EAAAA,IAAOwT,EAAiB;;eAElDF;WACJC;EAEErO,GAA0BlF,EAAAA,EAAAA,IAAOwT,EAAiB;;aAElDF;YACDC;6DCjCL,MAAMU,EAAqBzY,IAyB3B,IAzB4B,KACjC+C,EAAI,MACJ2V,EAAK,YACLC,GAsBD3Y,EACC,OACED,EAAAA,cAAC6Y,EAAAA,EAAgB,CAACC,UAAW9V,EAAM2V,MAAOA,EAAOI,QAASH,GAAe,EAE3EF,EAAAzX,aAAA,krB,6FCxBK,MAIM+X,GAAoBvU,EAAAA,EAAAA,IAAOwU,EAAAA,EAAkB;IACtDtU,IAAA,IAAC,MAAEzC,GAAOyC,EAAA,OAAKuU,EAAAA,EAAAA,GALajZ,KAAA,IAAC,MAAEiC,GAAyBjC,EAAA,MAAgB,CAC1EkZ,gBAAiBjX,EAAMT,MAAc,iCAAmC,EACxE2X,wBAAyBlX,EAAM6F,MAAM,wCACtC,EAEoCsR,CAAiB,CAAEnX,UAAS;gBCL1D,MAAMoX,EAAkCjZ,GAC7CL,EAAAA,cAACuZ,EAAAA,GAAIhW,EAAAA,EAAAA,GAAA,GAAKlD,EAAK,CAAEmZ,aAAcR,EAAmBS,WAAW,KAC7DH,EAAArY,aAAA,sD,wGC4BK,MAAMyY,EAAmBzZ,IAOF,IAPG,KAC/B+C,EAAI,MACJ2V,EAAK,YACLC,EAAW,QACXe,EAAO,OACPC,EAAM,eACNC,GACsB5Z,EACtB,OACED,EAAAA,cAAC6Y,EAAAA,EAAgB,CACfC,UAAW9V,EACX2V,MAAOA,EACPkB,eAAgBA,EAChBd,QACEa,EACE5Z,EAAAA,cAAC8Z,EAAAA,EAAc,CAACC,QAAS/Z,EAAAA,cAACga,EAAAA,EAAa,CAACC,WAAW,eACjDja,EAAAA,cAACD,EAAAA,EAAU,CACT6I,QAAS+Q,EACTnR,qBAAmB,EACnBD,qBAAmB,GAEnBvI,EAAAA,cAACiE,EAAAA,GAAY,CAACjB,KAAK,qBAIvB4V,GAGJ,EAEJc,EAAAzY,aAAA,grC,6FC7DK,MAAMiZ,EAAiBja,IAAA,IAAC,MAAEiC,GAAyBjC,EAAA,MAAgB,CACxEka,YAAajY,EAAM6F,MAAM,0BACzBoR,gBAAiBjX,EAAMT,MAAc,8BACrC2Y,WAAYlY,EAAM6F,MAAM,yBACxBsS,gCAAiCnY,EAAM6F,MACrC,sCAEFqR,wBAAyBlX,EAAM6F,MAAM,sCACrCuS,wBAAyBpY,EAAM6F,MAC7B,sCAEFwS,gBAAiBrY,EAAM6F,MAAM,8BAC7ByS,uBAAwBtY,EAAM6F,MAAM,qCACpC0S,eAAgBvY,EAAM6F,MAAM,6BAE5B2S,gCAAiCxY,EAAM6F,MACrC,sCAEF4S,wBAAyBzY,EAAM6F,MAAM,sCACtC,EACY6S,GAAkBnW,EAAAA,EAAAA,IAAOwU,EAAAA,EAAkB;;IAEpDtU,IAAA,IAAC,MAAEzC,GAAOyC,EAAA,OAAKuU,EAAAA,EAAAA,GAAkBgB,EAAe,CAAEhY,UAAS;iBCzBxD,MAAM2Y,GAAmBpW,EAAAA,EAAAA,IAAOqW,EAAAA,EAAmB;IACtD7a,IAAA,IAAC,MAAEiC,GAAOjC,EAAA,OAAK8a,EAAAA,EAAAA,GAAmBb,EAAe,CAAEhY,UAAS;gBCIzD,MAAM8Y,EAAgC3a,GAC3CL,EAAAA,cAACuZ,EAAAA,GAAIhW,EAAAA,EAAAA,GAAA,GACClD,EAAK,CACTmZ,aAAcoB,EACdK,cAAeJ,EACfpB,WAAW,KAEbuB,EAAA/Z,aAAA,oD,kDCPF,MAqCagY,E,SAAmBxU,GAAOoN,GAAoB;;;;;;;;;;;;;aAa9ClN,IAAA,IAAC,SAAE6E,GAAU7E,EAAA,OAAM6E,EAAW,KAAO,GAAG;WAC1C5E,IAAA,IAAC,MAAE1C,GAAO0C,EAAA,OACjB1C,EAAM6F,MACJ,yBACD;;;;;;;;;;;IAtDmB9H,IAAA,IAAC,MAAEiC,GAAyBjC,EAAA,OAClDiZ,EAAAA,EAAAA,GAAkB,CAChBC,gBAAiBjX,EAAMT,MAAc,gCAAkC,EACvE+Y,uBAAwBtY,EAAM6F,MAC5B,qCACA7F,EAAMkC,KAAO,UAAY,WAE3BqW,eAAgBvY,EAAM6F,MACpB,6BACA7F,EAAMkC,KAAO,UAAY,WAG3BsW,gCAAiCxY,EAAM6F,MACrC,+CAEF4S,wBAAyBzY,EAAM6F,MAAM,uCAErCqS,WAAYlY,EAAM6F,MAChB,yBACA7F,EAAMkC,KAAO,UAAY,WAE3BiW,gCAAiCnY,EAAM6F,MACrC,+CAEFqR,wBAAyBlX,EAAM6F,MAC7B,uCAEFuS,wBAAyBpY,EAAM6F,MAC7B,sCACA7F,EAAMkC,KAAO,kBAAoB,kBAEnCmW,gBAAiBrY,EAAM6F,MACrB,8BACA7F,EAAMkC,KAAO,kBAAoB,mBAEnC;8DCzCJ,MASa0W,EAAoBrW,EAAAA,GAAOoN,GAA6B;;;;;kBAKnDlN,IAAA,IAAC,UAAEuW,GAAWvW,EAAA,OAAMuW,EAAY,IAAM,OAAO;;IAdtCjb,IAAA,IAAC,MAAEiC,GAAyBjC,EAAA,OACnD8a,EAAAA,EAAAA,GAAmB,CACjBZ,YAAajY,EAAM6F,MACjB,0BACA7F,EAAMiZ,aAAaC,gBAErBhB,WAAYlY,EAAM6F,MAAM,2BACxB;wGCNJ,MAAMsT,EAAsB5W,EAAAA,GAAOoN,GAAI;;;EAKjCyJ,EAAYvH,EAAAA,EAAI;;;EAKhBwH,EAAyB9W,EAAAA,GAAOC,IAAK;IACvC4W;;EAIEE,EAAuB/W,EAAAA,GAAOC,IAAK;IACrC4W;;;;EA6BSzC,EAAmB7Y,EAAAA,YAC9B,CAAAC,EAEEQ,KACI,IAFJ,UAAEqY,EAAS,MAAEH,EAAK,QAAEI,EAAO,eAAEc,EAAiB,CAAC,GAAuB5Z,EAItE,MAAM,eAAEkJ,IAAmBC,EAAAA,EAAAA,GAAa,CAAC,GAAG1I,EAAAA,EAAAA,GAAaD,IACzD,OACET,EAAAA,cAACqb,GAAmB9X,EAAAA,EAAAA,GAAA,IACdvC,EAAAA,EAAAA,GAAWmI,EAAgB0Q,GAAe,CAC9CpZ,IAAKA,IAEJqY,GACC9Y,EAAAA,cAACub,EAAsB,KAAEzC,GAE1BH,EACAI,GAAW/Y,EAAAA,cAACwb,EAAoB,KAAEzC,GACf,IAG1BF,EAAA5X,aAAA,k7B,mCC7CK,MAAMwa,E,SAAuDva,C,0DCA7D,MAAM6Z,EAAqB9a,IAAA,IAAC,WACjCma,EAAU,YACVD,GAC6Cla,EAAA,OAAK8T,EAAAA,EAAI;kBACtCoG;gBACFC;CACf,EAYYlB,EAAoBvU,IAAA,IAAC,gBAChCwU,EAAe,WAEfiB,EAAU,wBACVhB,EAAuB,gCACvBiB,EAA+B,wBAC/BC,EAAuB,gBACvBC,EAAe,wBAEfI,EAAuB,gCACvBD,EAA+B,uBAE/BF,EAAsB,eACtBC,GACS9V,EAAA,OACToP,EAAAA,EAAoB;;;gBAGa,MAAnBoF,EAA2B,GAAEA,WAAsB3Y;0BACzCoE,IAAA,IAAC,SAAEI,GAAUJ,EAAA,OAAKI,GAAYwV,CAAsB;0BACpDxS,IAAA,IAAC,SAAEhD,EAAQ,OAAE0W,GAAQ1T,EAAA,OACvChD,GAAY0W,GAAUjB,CAAc;;;;aAI/BxS,IAAA,IAAC,SAAEjD,GAAUiD,EAAA,OAAKjD,GAAY0V,CAA+B;aAC7DxS,IAAA,IAAC,SAAElD,EAAQ,OAAE0W,GAAQxT,EAAA,OAC5BlD,GAAY0W,GAAUf,CAAuB;;;kBAGjCP;kBACAjS,IAAA,IAAC,SAAEnD,GAAUmD,EAAA,OACzBnD,GAAYqV,CAA+B;kBAC/BjS,IAAA,IAAC,SAAEpD,EAAQ,OAAE0W,GAAQtT,EAAA,OACjCpD,GAAY0W,GAAUtC,CAAuB;;MAE7C9Q,IAAA,IAAC,SAAEkB,EAAQ,OAAEkS,GAAQpT,EAAA,OACpBkB,GACDuK,EAAAA,EAAI;;;wBAGcuG;wBACAoB,GAAUnB;;OAE3B;GACJ,C,6HCjFH,MAAMoB,EAAoC5H,EAAAA,EAAI;;;;;;;;EASjC6H,EAAkCnX,EAAAA,GAAOoN,GAAW;;;;IAI7D5R,IAAA,IAAC,mBAAE4b,GAAoB5b,EAAA,OACvB4b,GACA9H,EAAAA,EAAI;;UAEE4H;;;YAGEhX,IAAA,IAAC,MAAEzC,GAAOyC,EAAA,OAAKzC,EAAMiZ,aAAaW,eAAe;;;;;KAKxD;IACDlX,IAAA,IAAC,iBAAEmX,GAAkBnX,EAAA,OACrBmX,GACAhI,EAAAA,EAAI;;UAEE4H;;;YAGE3T,IAAA,IAAC,MAAE9F,GAAO8F,EAAA,OAAK9F,EAAMiZ,aAAaW,eAAe;;;;;KAKxD;2ECvBE,MAAME,GAAMC,EAAAA,EAAAA,aAAW,SAAYhc,EASxCC,GACqB,IATrB,MACEoL,EAAK,KACLuC,EAAI,UACJ4L,EAAS,OACTiC,EAAM,sBACNQ,EAAqB,UACrBC,EAAYlD,EAAAA,GACAhZ,EAGd,MAAM,IAAE+K,EAAG,SAAEkG,GAAarD,EACpBpN,GAAM0C,EAAAA,EAAAA,GAAgBjD,IAE1Bkc,UAAU,SAKR3S,KACG2S,KAEHC,EAAAA,EAAAA,IACF,CACErR,MACAkR,yBAEF5Q,EACA7K,GAEIwE,EAAaqG,EAAMgR,cAAgBtR,EACnCrC,EAAa2C,EAAMyC,aAAaC,IAAIhD,GAE1C,OACEhL,EAAAA,cAACmc,GAAS5Y,EAAAA,EAAAA,GAAA,GACJ6Y,EAAQ,CACZ3S,SAAUgQ,EAAYhQ,OAAWjJ,EACjCC,IAAKA,EACLib,OAAQA,EACR1W,SAAUC,EACVuE,SAAUb,IAETuI,EAGP,IAAG8K,EAAA/a,aAAA,0nBCsBH,MAAMsb,EAAyBxI,EAAAA,EAAI;;;;;;;EAS7ByI,EAAgB/X,EAAAA,GAAOoN,GAA4B;;eAE1C5R,IAAA,IAAC,SAAEwc,GAAUxc,EAAA,OAAMwc,EAAW,OAAS,QAAQ;;;IAG1DF;EAUShD,EAAO5U,IAWqB,IAXF,UACrC8U,EAAS,sBACTyC,EAAqB,OACrBR,EAAM,aACNlC,EAAY,cACZyB,EAAgBH,EAAAA,EAAiB,SACjC2B,EAAQ,eACRC,EAAc,SACdC,EAAQ,UACRzB,KACG7a,GACUsE,EACb,MAAM2G,GAAQsR,EAAAA,EAAAA,GAAgBvc,GACxBI,EAAMT,EAAAA,OAA6B,OACnC,aAAE6c,IAAiBC,EAAAA,EAAAA,IAAWzc,EAAOiL,EAAO7K,IAE5C,uBAAEsc,EAAsB,YAAEC,GC/H3B,SAAuB/c,GAM1B,IANkD,UACpDgd,EAAY,EAAC,IACbxc,GAIDR,EACC,MAAO+c,EAAaE,IAAkB9G,EAAAA,EAAAA,UAAS,CAC7C+G,MAAM,EACNC,OAAO,EACPC,KAAK,EACLC,QAAQ,IAGJC,EAASA,KACb,MAAMxX,EAAUtF,EAAI+E,QACpB,GAAIO,EAAS,CACX,MAAMyX,EAAazX,EAAQ0X,WACrBC,EACJ3X,EAAQ4X,aAAe5X,EAAQ6X,YAAc7X,EAAQ0X,YACjDI,EAAY9X,EAAQ+X,UACpBC,EACJhY,EAAQiY,cAAgBjY,EAAQkY,aAAelY,EAAQ+X,WACnDI,EAAiB,CACrBb,IAAKQ,EAAYZ,EACjBK,OAAQS,EAAed,EACvBE,KAAMK,EAAaP,EACnBG,MAAOM,EAAcT,GAGrBD,EAAYK,MAAQa,EAAeb,KACnCL,EAAYM,SAAWY,EAAeZ,QACtCN,EAAYG,OAASe,EAAef,MACpCH,EAAYI,QAAUc,EAAed,OAErCF,EAAegB,EAEnB,GAIF,OAFA/Y,EAAAA,EAAAA,WAAUoY,GAEH,CACLR,uBAAwB,CACtBoB,SAAUZ,GAEZP,cAEJ,CDgFkDoB,CAAe,CAAE3d,SAC3D,mBAAE4d,IAAuBC,EAAAA,EAAAA,GAAoB7d,GAC7C8d,EAAiB,IAAIC,IACzBH,EACGvT,KAAK/E,GACJA,aAAmB0Y,YAAc1Y,EAAQ2Y,QAAa,IAAI,OAE3Dlc,OAAOmc,EAAAA,KAGZxZ,EAAAA,EAAAA,YAAU,KACR,IAAKwX,EAAU,CACb,MAAMiC,EAAsBne,EAAI+E,QAC1BqZ,EAAqBD,GAAqB5Y,cAC7C,cAAasF,EAAMgR,iBAElBsC,GAAuBC,IACzBC,EAAAA,EAAAA,GAAeF,EAAqBC,EAExC,CACE,GAED,CAACvT,EAAMgR,cAIV,GAAIK,EACF,MAAM,IAAIoC,MAAM,kCAElB,OACE/e,EAAAA,cAACib,GAAa1X,EAAAA,EAAAA,GAAA,CAAC2X,UAAWA,IAAepa,EAAAA,EAAAA,GAAeT,IACtDL,EAAAA,cAAC4b,EAA+B,CAC9BC,mBAAoBmB,EAAYG,KAChCpB,iBAAkBiB,EAAYI,MAC9BnQ,MAAO,CAAEH,SAAU,IAEnB9M,EAAAA,cAACwc,GAAajZ,EAAAA,EAAAA,GAAA,IACRvC,EAAAA,EAAAA,GAAW6b,EAAcE,GAAuB,CACpDN,SAAUA,EACVhc,IAAKA,IAEJ,IAAI6K,EAAMK,YAAYb,KAAK+C,GAC1B7N,EAAAA,cAACgc,EAAG,CACFhR,IAAK6C,EAAK7C,IACV6C,KAAMA,EACNvC,MAAOA,EACPmO,UAAWA,EACXyC,sBAAuBA,EACvBR,OAAQA,EACRS,UAAW3C,SAKjBkD,GACA1c,EAAAA,cAACgf,EAAAA,EAAgB,CACfrT,WAAYL,EAAMK,WAClB4S,eAAgBA,EAChBU,SAnC4BjU,IAClCM,EAAM4T,eAAelU,EAAI,IAqCT,EAElBuO,EAAAtY,aAAA,mqG,kHEzLK,MAAM+d,EAAmB/e,IAAA,IAAoB,WAClD0L,EAAU,eACV4S,EAAc,SACdU,GAKDhf,EAAA,OACCD,EAAAA,cAAAA,EAAAA,SAAA,KACGue,EAAetb,KAAO,GACrBjD,EAAAA,cAAC0S,EAAAA,EAAW,CACVG,MAAM,MACNF,WAAYhO,IAAoB,IAAnB,UAAEoH,GAAWpH,EACxB,MAAMwa,EAAiC,IAAIxT,GAAYnJ,QACpD4c,GAAab,EAAevQ,IAAIoR,EAASpU,OAE5C,OACEhL,EAAAA,cAAC6M,EAAAA,IAAItJ,EAAAA,EAAAA,GAAA,GACCwI,EAAS,CACbR,SAAWP,IACTiU,EAASjU,EAAI,EAEfmU,MAAOA,KAELtR,GACA7N,EAAAA,cAACkB,EAAAA,EAAI,CAAC8J,IAAK6C,EAAK7C,IAAKwJ,UAAW3G,EAAK2G,WAClC3G,EAAKxN,MAAMgf,gBAAkBxR,EAAK2G,YAGlC,IAIV,CAACnU,EAAOI,IACPT,EAAAA,cAACqI,EAAAA,IAAU9E,EAAAA,EAAAA,GAAA,GAAKlD,EAAK,CAAEI,IAAKA,IAC1BT,EAAAA,cAACiE,EAAAA,GAAY,CAACjB,KAAK,sCAK1B,EACHgc,EAAA/d,aAAA,wf,sGCzCK,MAAMqe,EAAqBrf,IAAA,IAAC,MAAEiC,GAAyBjC,EAAA,MAAgB,CAC5Eka,YAAajY,EAAM6F,MAAM,oCACzBoR,gBAAiBjX,EAAMT,MAAc,wCACrC2Y,WAAY,cACZC,gCAAiCnY,EAAM6F,MACrC,wDAEFqR,wBAAyBlX,EAAM6F,MAC7B,gDAEFuS,wBACEpY,EAAM6F,MAAM,iDACZ7F,EAAM6F,MAAM,wCACdwS,gBAAiBrY,EAAM6F,MAAM,wCAC7ByS,uBAAwBtY,EAAM6F,MAC5B,+CAEF0S,eAAgBvY,EAAM6F,MAAM,uCAE5B2S,gCACExY,EAAM6F,MAAM,yDACZ7F,EAAM6F,MAAM,gDACd4S,wBAAyBzY,EAAM6F,MAC7B,gDAEH,EACYwX,GAAsB9a,EAAAA,EAAAA,IAAOwU,EAAAA,EAAkB;;IAExDtU,IAAA,IAAC,MAAEzC,GAAOyC,EAAA,OAAKuU,EAAAA,EAAAA,GAAkBoG,EAAmB,CAAEpd,UAAS;iBC/B5D,MAAMsd,GAAuB/a,EAAAA,EAAAA,IAAOqW,EAAAA,EAAmB;IAC1D7a,IAAA,IAAC,MAAEiC,GAAOjC,EAAA,OAAK8a,EAAAA,EAAAA,GAAmBuE,EAAmB,CAAEpd,UAAS;ECIvDud,EACXpf,GAEAL,EAAAA,cAACuZ,EAAAA,GAAIhW,EAAAA,EAAAA,GAAA,GACClD,EAAK,CACTmZ,aAAc+F,EACdtE,cAAeuE,EACf/F,WAAW,EACXyC,uBAAqB,KAEvBuD,EAAAxe,aAAA,wD,4DCNK,MAAM+Y,EAAgB/Z,IAIW,IAJV,WAC5Bga,EAAU,SACV7H,KACGsN,GACgBzf,EACnB,OACED,EAAAA,cAAC2f,EAAAA,EAAYD,EACX1f,EAAAA,cAAC2f,EAAAA,EAAQC,OAAM,KACZ3F,EACA7H,GAAYpS,EAAAA,cAAC2f,EAAAA,EAAQ5N,SAAQ,KAAEK,IAE1B,EAEZ4H,EAAA/Y,aAAA,+Y,wICsBK,MAGD4e,EAAgBpb,EAAAA,GAAOoN,GAAmD;;eAW5E5R,IAAA,IAAC,MAAEiC,EAAK,UAAE4d,GAAW7f,EAAA,OACnB6f,EACK,GACC5d,EAAMT,MACJ,yBACG,QAEP,IAAI;iBAEGkD,IAAA,IAAC,UAAEmb,GAAWnb,EAAA,OAAOmb,EAAuB,KAAX,QAAe;;;SAGxDlb,IAAA,IAAC,MAAE1C,GAAO0C,EAAA,OACf1C,EAAMT,MACJ,4BACG,CAAC;gBACMse,EAAAA;WACL/X,IAAA,IAAC,MAAE9F,GAAO8F,EAAA,OACjB9F,EAAM6F,MAAM,qBAAuB7F,EAAMkC,KAAgB,UAAT,OAAmB;aAC1D6D,IAAA,IAAC,MAAE/F,EAAK,UAAE4d,GAAW7X,EAAA,OAC9B6X,EACI5d,EAAM8d,MAAM,wCAnCsB,qCAqClC9d,EAAM8d,MAAM,sCAnClB,qCAoCsC;;;kBAGtB9X,IAAA,IAAC,MAAEhG,EAAK,WAAE+d,GAAY/X,EAAA,OACpChG,EAAMT,MAAe,wBAA0Bwe,EAAa,MAAQ,KAAK;kBAC3DC,EAAAA;IACdpM,EAAAA;IACA3L,IAAA,IAAC,WAAE8X,GAAY9X,EAAA,OACf8X,GACAlM,EAAAA,EAAI;;uBAEeoM,EAAAA;KAClB;EAGCC,EAAiB3b,EAAAA,GAAOuN,GAAI;;WAEvB5J,IAAA,IAAC,MAAElG,GAAOkG,EAAA,OACjBlG,EAAM6F,MACJ,6BACC7F,EAAMkC,KAAmB,UAAZ,UACf;EAGCic,EAAe5b,EAAAA,GAAOoN,GAAI;eACjBvJ,IAAA,IAAC,MAAEpG,GAAOoG,EAAA,OAAKpG,EAAMoe,cAAc,4BAA4B;;;EAIxEC,EAAoB9b,EAAAA,GAAOoN,GAAI;WAC1B2O,IAAA,IAAC,MAAEte,GAAOse,EAAA,OACjBte,EAAM6F,MACJ,yBACA7F,EAAMiZ,aAAasF,sBACpB;eACUC,IAAA,IAAC,MAAExe,GAAOwe,EAAA,OACrBxe,EAAMoe,cAAc,mCAAmC;EAGrDK,EAAalc,EAAAA,GAAOoN,GAAI;WACnB+O,IAAA,IAAC,MAAE1e,GAAO0e,EAAA,OACjB1e,EAAM6F,MACJ,yBACA7F,EAAMiZ,aAAa0F,sBACpB;;;;;;EAQQC,EAGT,CACFxD,OAAQ,MACRD,IAAK,SACLF,KAAM,QACNC,MAAO,OACP2D,OAAQ,OAkBJpB,EAAU3f,EAAAA,YAAiB,SAAgBghB,EAE/C9gB,GACc,IAFd,SAAEI,EAAQ,UAAEwf,EAAS,YAAEmB,KAAgB5gB,GAAqB2gB,EAG5D,MAAMvgB,GACJC,EAAAA,EAAAA,GAAaR,IACT,MACJoL,EAAK,cACL4V,EAAa,qBACbC,EAAoB,UACpB9Q,EAAY,WACVtL,EAAAA,EAAAA,YAAWqc,EAAAA,IAAmB,CAAC,GAC7B,aAAE1B,IAAiB2B,EAAAA,EAAAA,GACvBhhB,EACAiL,EACI,IACKA,EAEHgW,KAAMJ,EAAgB5V,GAAOgW,KAAO,QAEtChW,IAGA,KAAEiW,EAAI,OAAEhR,GACW,iBAAhB0Q,EACHA,EACA,CAAEM,KAAMT,EAAuBzQ,GAAYE,YAAQ/P,GAEzD,OACER,EAAAA,cAAC6f,GAAatc,EAAAA,EAAAA,GAAA,CACZ0c,WAAYnI,QAAQmJ,GACpBnB,UAAWA,GACPJ,EAAY,CAChBnW,UAAWlJ,EAAMkJ,UACjB9I,IAAKA,IAEJwgB,GACCjhB,EAAAA,cAACwhB,EAAAA,EAAc,CACbC,WAAYhhB,EACZ8gB,KAAMA,EACNhR,OACEA,IAAW4Q,EACP,CAAE5gB,KAAM,WAAYkB,MAAO8O,GAC3B,CAAEhQ,KAAM,aAAckB,MAAO0f,KAItC7gB,EAGP,IAEMohB,EAAWnL,OAAOoL,OAAOhC,EAAS,CACtCC,OAAQS,EACRtO,SAAUqO,EACVwB,YAAarB,EACbsB,KAAMlB,IACLhB,EAAA1e,aAAA,0+E,mCCnNI,MAAMmgB,E,QAAiBphB,cAC5B,K,4FCcF,MAEM8hB,EAAoB,IACpBC,EAAa,wBACbC,EAAa,CACjB3E,IAAKtJ,EAAAA,EAAI;;iBAEMgO;IAEfzE,OAAQvJ,EAAAA,EAAI;;iCAEmBgO;IAE/B5E,KAAMpJ,EAAAA,EAAI;;gCAEoBgO;IAE9B3E,MAAOrJ,EAAAA,EAAI;;+BAEkBgO;KAGzBE,EAAuBxd,EAAAA,GAAOC,IAEjC;;;;IAICzE,IAAA,IAAC,KAAEshB,GAAMthB,EAAA,OAAK+hB,EAAWT,EAAK;;;;;mBAKfW;oBACCA;qBACCC;aACRL;YACDA;;;;;;mBArCU;oBAAA;qBACC,aA4CwB/B,EAAAA;;EAI/C,SAASqC,EAAkB3gB,GACzB,MAAwB,iBAAVA,EAAsB,GAAEA,MAAYA,CACpD,CAEA,MAAM4gB,EAAWC,GAAiB7gB,GACvBjB,MAATiB,EAAsB,OAAM6gB,QAAUF,EAAkB3gB,MAAYA,EAChE8gB,EAAWC,GAAiB/gB,GACvBjB,MAATiB,EAAsB,OAAM+gB,QAAUJ,EAAkB3gB,MAAYA,EAChEghB,EAxDiB,EAwDgBtC,EAAAA,GACjCuC,EA1DgB,EA0DevC,EAAAA,GAMrC,SAASwC,EAA0Bhe,EAAAC,GAGhC,IAFD,MAAEge,EAAK,OAAEC,GAAmEle,GAC5E,IAAE0Y,EAAG,KAAEF,EAAI,MAAEC,EAAK,OAAEE,GAAuB1Y,EAE3C,MAAMke,GAAsBC,EAAAA,EAAAA,GAC1BF,EAASN,EAAQM,EAASJ,GAAiBO,EAAAA,EAC3CX,EAAQI,IAEJQ,GAAwBF,EAAAA,EAAAA,GAC5BH,EAAQL,EAAQK,EAAQF,GAAgBM,EAAAA,EACxCX,EAAQK,IAEV,MAAO,CACLrF,IAAKyF,EAAoBzF,GACzBC,OAAQwF,EAAoBxF,GAC5BH,KAAM8F,EAAsB9F,GAC5BC,MAAO6F,EAAsB7F,GAEjC,CAEA,MAAM8F,EAAmBA,CACvB3B,EACA4B,IAEa,QAAT5B,GAA2B,WAATA,EACb4B,EAAS,QAAU,OAErBA,EAAS,SAAW,MAG7B,SAASC,EAA4Bpb,GAGM,IAHL,KACpCuZ,EAAI,OACJhR,EAAS,OACcvI,EACvB,MAAM,OAAEmb,GAAS,EAAO1hB,MAAO4hB,GACX,iBAAX9S,EAAsBA,EAAS,CAAE4S,QAAQ,EAAO1hB,MAAO8O,GAChE,MAAO,CACL,CAAC2S,EAAiB3B,EAAM4B,IAAUE,EAEtC,CAEO,SAAS7B,EAAcvZ,GAU1B,IAV2B,KAC7BsZ,EAAI,OACJhR,EAAM,WACNkR,GAODxZ,EACC,MAAOhF,EAAMqgB,IAAWlN,EAAAA,EAAAA,UAGrB,CAAEyM,YAAQriB,EAAWoiB,WAAOpiB,IAQ/B,OAPA2E,EAAAA,EAAAA,YAAU,KACR,MAAM,aAAE8Y,EAAY,YAAEL,GAAgB6D,EAAWjc,SAAW,CAAC,EACzDyY,GAAgBhb,GAAM4f,QAAUjF,GAAe3a,GAAM2f,OACvDU,EAAQ,CAAET,OAAQ5E,EAAc2E,MAAOhF,GACzC,IAIA5d,EAAAA,cAACiiB,EAAoB,CACnBV,KAAMA,EACNtU,MAAO0V,EACL1f,EACgB,aAAhBsN,EAAOhQ,KACH6iB,EAA6B,CAAE7B,OAAMhR,OAAQA,EAAO9O,QACpD8O,EAAO9O,QAInB,CAAC+f,EAAAvgB,aAAA,u9B,6FChHM,MAAM6Y,EAAiB7Z,IAWW,IAXV,QAC7B8Z,EAAO,SACPzZ,EAAQ,MAKRijB,EAAQ,IAAG,OACXhT,EAAM,UACNF,EAAY,iBACThQ,GACiBJ,EACpB,MAAM+S,GAAa+B,EAAAA,EAAAA,QAAoB,MACjC7S,GAAQC,EAAAA,EAAAA,MACRmJ,GAAQkY,EAAAA,EAAAA,GAAuB,IAChCnjB,EACHkjB,UAGInT,GAAa2E,EAAAA,EAAAA,QAAuB,MAEpC0O,GAAeC,EAAAA,EAAAA,GAA6B,CAChDtT,aACAO,OAAQrF,EAAMqF,OACdN,YACAC,YAAY,EACZC,OACEA,GAAUrO,EAAMT,MAAc,kCAAoC,KAYtE,OARA0D,EAAAA,EAAAA,YAAU,KACJmG,EAAMqF,QACRgT,uBAAsB,KACpBF,EAAaG,gBAAgB,GAEjC,GACC,CAACtY,EAAMqF,SAGR3Q,EAAAA,cAAC6jB,EAAAA,EAAwB,CACvB9J,QAASA,EACT0J,aAAcA,EACdK,QAASxjB,EACTgL,MAAOA,EACP8E,WAAYA,EACZ4C,WAAYA,EAUZ+Q,aAAa,EACbpb,WAAYtI,EAAMsI,YAClB,EAEJmR,EAAA7Y,aAAA,mpD,6HCpEK,MAAM4iB,EAA2B5jB,IASQ,IATgB,QAC9D8Z,EAAO,QACP+J,EAAO,MACPxY,EAAK,WACL8E,EAAU,WACV4C,EAAU,YACV+Q,EAAW,aACXN,KACGpjB,GACwBJ,EAC3B,MAAOihB,EAAe8C,IAAkB5N,EAAAA,EAAAA,WAAS,IAC3C,aAAElD,EAAY,aAAEwM,GAAiBuE,EACrC5jB,EAGA,IAAKiL,EAAOJ,MAAOgW,EAAgB5V,EAAMJ,MAAQ,IAAMI,EAAMJ,OAAM,IACnE8H,GAcF,OAXK+Q,UACI7Q,EAAagR,SAGtBC,EAAAA,EAAAA,IAAgB,KACdH,EAGQ,OAFN5T,EAAW5K,SAASQ,cAClB,2CAEH,IAGDhG,EAAAA,cAAAA,EAAAA,SAAA,KA6BJ,SACEM,EACA4S,GAEA,GAAwB,mBAAb5S,EACT,OAAOA,EAAS4S,GAElB,GAAIlT,EAAAA,eAAqBM,IAAsC,iBAAlBA,EAASC,KACpD,OAAOP,EAAAA,aAAmBM,EAAU4S,GAEtC,OAAOlT,EAAAA,cAACokB,EAAAA,EAAsBlR,EAAe5S,EAC/C,CAvCO+jB,CAAkBP,EAAS,IAAK5Q,EAAczS,IAAKuS,IACnD1H,EAAMqF,SAAWtQ,EAAMsI,YACtB3I,EAAAA,cAACoR,EAAAA,GAAO,KACNpR,EAAAA,cAACohB,EAAAA,EAAerU,SAAQ,CACtBtL,MAAO,CACL6J,QACA4V,gBACA7Q,UAAWoT,EAAapT,UACxB8Q,qBAAsBsC,EAAa7S,WAAW3D,QAGhDjN,EAAAA,cAAA,OAAAuD,EAAAA,EAAAA,GAAA,IACMvC,EAAAA,EAAAA,GACFyiB,EAAazT,aAEb0P,GACD,CACDjf,IAAK2P,IAEJ2J,KAKR,EAoBP,MAAMkK,EAAkDA,CAAC5jB,EAAOiL,EAAO7K,KACrE,MAAM,aAAEyS,EAAY,aAAEwM,IAAiB4E,EAAAA,EAAAA,GACrCjkB,EACAiL,EACA7K,GAkBF,OAbAyS,EAAalE,cAAgB,KACrBvO,EAAI+E,mBAAmB+e,kBAC3BjZ,EAAMJ,OAAM,EACd,SAQKgI,EAAasR,YAEb,CACLtR,eACAwM,eACD,EACDmE,EAAA5iB,aAAA,u3C,sDChJK,MAAMkf,EAA6B,EAC7BJ,EAAoB9f,IAAA,IAAC,MAAEiC,GAAyBjC,EAAA,OAC3DiC,EAAM6F,MAAM,qBAAuB7F,EAAMkC,KAAmB,UAAZ,UAAsB,EAC3D8b,EAAqBvb,IAAA,IAAC,MAAEzC,GAAyByC,EAAA,OAC5DzC,EAAM6F,MAAM,sBAAwB7F,EAAMkC,KAAmB,UAAZ,UAAsB,C,0GCalE,MAAMqgB,EAAiCxkB,IAEqB,IAFpB,kBAC7CykB,GACiCzkB,EACjC,MAAM0kB,EACyB,iBAAtBD,EAAiCA,EAAkBC,aAAe,GACrEC,GAAmBC,EAAAA,EAAAA,GAAYF,GAUrC,MAAO,CACL/iB,YAR6B,iBAAtB8iB,EACHA,EAAkBC,aAAaxN,SAAWyN,EAAiBzN,QAC3DuN,EAAkBC,aAAatV,MAC7B,CAACyV,EAAeC,IAAUD,IAAkBF,EAAiBG,KAE/DL,EAIL,E,QC2BCM,OAAOC,SAvDJ,MAAMC,EAMXhQ,WAAAA,CACEjL,EAAwBkb,GAEvB,IADD,aAAE7Y,QAA2C,IAAA6Y,EAAG,CAAC,EAACA,EAAA,KAP5CC,OAA4B,IAAIC,IAAM,KACtCC,cAAQ,OACR7Y,cAAQ,OACR8Y,aAAO,EAMbjQ,KAAKgQ,SAAWrb,EAChBqC,EAAeA,GAAgB,IAAIkS,IAEnC,IAiBIgH,EAjBAC,EAASvZ,IAGX,GAFAoJ,KAAK8P,OAAOM,IAAIxZ,EAAKlB,IAAKkB,GAGxBA,EAAK/B,aACU,YAAd+B,EAAK3L,MAAsB+L,EAAa0B,IAAI9B,EAAKlB,MAElD,IAAK,IAAI2a,KAASzZ,EAAK/B,WACrBsb,EAAME,EAEV,EAGF,IAAK,IAAIzZ,KAAQjC,EACfwb,EAAMvZ,GAIR,IAAI6Y,EAAQ,EACZ,IAAK,IAAK/Z,EAAKkB,KAASoJ,KAAK8P,OACvBI,GACFA,EAAKI,QAAU5a,EACfkB,EAAK2Z,QAAUL,EAAKxa,MAEpBsK,KAAK7I,SAAWzB,EAChBkB,EAAK2Z,aAAUrlB,GAGC,SAAd0L,EAAK3L,OACP2L,EAAK6Y,MAAQA,KAGfS,EAAOtZ,EAIPsZ,EAAKI,aAAUplB,EAGjB8U,KAAKiQ,QAAUC,GAAMxa,GACvB,CAEA,EAAA8a,WACSxQ,KAAKgQ,QACd,CAEA,QAAIriB,GACF,OAAOqS,KAAK8P,OAAOniB,IACrB,CAEAsS,OAAAA,GACE,OAAOD,KAAK8P,OAAO/P,MACrB,CAEA0Q,YAAAA,CAAa/a,GACX,IAAIkB,EAAOoJ,KAAK8P,OAAO3O,IAAIzL,GAC3B,OAAOkB,GAAM2Z,SAAW,IAC1B,CAEAG,WAAAA,CAAYhb,GACV,IAAIkB,EAAOoJ,KAAK8P,OAAO3O,IAAIzL,GAC3B,OAAOkB,GAAM0Z,SAAW,IAC1B,CAEAnQ,WAAAA,GACE,OAAOH,KAAK7I,QACd,CAEAiJ,UAAAA,GACE,OAAOJ,KAAKiQ,OACd,CAEA3Z,OAAAA,CAAQZ,GACN,OAAOsK,KAAK8P,OAAO3O,IAAIzL,IAAQ,IACjC,CAEAib,EAAAA,CAAGC,GACD,MAAM7Q,EAAO,IAAIC,KAAKC,WACtB,OAAOD,KAAK1J,QAAQyJ,EAAK6Q,GAC3B,EC9FK,SAASC,EACdja,GAEA,OAAOka,EAA+Bla,EAAM,GAC9C,CAEA,SAASka,EACPla,EACAma,GAEA,IAAKna,EACH,MAAO,GAET,MAAMoa,EAGFpa,EAAK/B,WAAW6a,OAAOC,aACnBxjB,MAAO8kB,EAAU,KAAEC,GAASF,EAAmB9kB,OACjDilB,EAAiBD,GAA2C,MAAnCF,EAAmB9kB,OAAOC,MACzD,OAAkB,MAAd8kB,GAAsBE,GAAkBC,EAAaH,GAChDH,EACLG,EACAF,EAAaM,OAAQJ,EAAuBvb,MAGzCqb,CACT,CAEA,MAAMK,EAAmBxa,GACvBA,EAAKL,gBAEP,SAAyByZ,GACvB,IAAK,MAAMxe,KAAKwe,GAAY,GAE1B,OAAO,EAET,OAAO,CACT,CARyBsB,CAAgB1a,EAAK/B,Y,eC3BvC,MAAM0c,UAA6BnQ,EAAAA,EAGxCxB,WAAAA,CACEvJ,EACAL,EACAwb,GAEA1R,MAAMzJ,EAAYL,EAAOwb,GAAS,KAPnBnb,gBAAU,EAQzB2J,KAAK3J,WAAaA,CACpB,CAEAob,eAAAA,GACE,GAAIzR,KAAKjH,WAAY,CACnB,MAAMnC,EAAOoJ,KAAK3J,WAAWC,QAAQ0J,KAAKjH,YAC1C,GAAInC,EAAM,CACR,MAAM,WAAE8a,GAAe1R,KAAK2R,uBAAuB/a,GAC/C8a,EAAW7P,OAAS,GACtB7B,KAAK4R,gBAAgB,IAAI5R,KAAKnH,gBAAiB6Y,GAEnD,CACF,CACF,CACAG,eAAAA,GACE,GAAI7R,KAAKjH,WAAY,CACnB,MAAMnC,EAAOoJ,KAAK3J,WAAWC,QAAQ0J,KAAKjH,YAC1C,GAAInC,EAAM,CACR,MAAM,WAAEkb,GAAe9R,KAAK2R,uBAAuB/a,GAC/Ckb,EAAWjQ,OAAS,GACtB7B,KAAK4R,gBACH,IAAI5R,KAAKnH,cAAc3L,QAAQwI,IAASoc,EAAWzkB,SAASqI,KAGlE,CACF,CACF,CAEQic,sBAAAA,CAAuB/a,GAC7B,OAAOoJ,KAAK+R,kCACVnb,EACA,IAAIoJ,KAAK3J,WAAW4J,WACpB,KAEJ,CAOQ8R,iCAAAA,CACNnb,EACAmJ,EACAiS,GAEA,MAAMC,EACJrb,GAAQA,EAAKoD,UAAYgG,KAAK3J,WAAWC,QAAQM,EAAKoD,WAAa,KAC/DkY,EAAUnS,EAAK7S,QAAQwI,GAAQA,IAAQsc,IACvCG,EAAoBF,EACtBG,EAAkBH,EAAQC,GAAS1c,KAAI7K,IAAA,IAAC,IAAE+K,GAAK/K,EAAA,OAAK+K,CAAG,IACvDsK,KAAKqS,cAAcnS,SAASxK,IAC1B,MAAM6C,EAAOyH,KAAK3J,WAAWC,QAAQZ,GACrC,OAAOA,IAAQkB,EAAKlB,KAAO6C,EACvB6Z,EAAkB7Z,EAAM2Z,GACrB1c,KAAInG,IAAA,IAAC,IAAEqG,GAAKrG,EAAA,OAAKqG,CAAG,IACpB2b,OAAO3b,GACV,EAAE,IAEZ,GAAIuc,GAAUE,EAAkBG,OAAO5c,GAAQsK,KAAKrQ,WAAW+F,KAC7D,OAAOsK,KAAK+R,kCAAkCE,EAAQlS,EAAMnJ,EAAKlB,KAEnE,MAAM6c,EAAcH,EAClBxb,EACAmJ,EAAK7S,QAAQwI,GAAQA,IAAQsc,KAC7Bxc,KAAIlG,IAAA,IAAC,IAAEoG,GAAKpG,EAAA,OAAKoG,CAAG,IAEtB,MAAO,CACLgc,WAAYa,EAAYxY,MAAMrE,IAASsK,KAAKrQ,WAAW+F,KACnD6c,EACCvS,KAAKrQ,WAAWiH,EAAKlB,KAEtByc,EADA,CAACvb,EAAKlB,KAEVoc,WACEK,EAAkBtQ,OAAS,GAC3BsQ,EAAkBG,OAAO5c,GAAQsK,KAAKrQ,WAAW+F,KAC7Cyc,EACAnS,KAAKrQ,WAAWiH,EAAKlB,MAAQsc,EAC7B,CAACpb,EAAKlB,KACN6c,EAAYrlB,QAAQwI,GAAQsK,KAAKrQ,WAAW+F,KAEtD,CAEQ2c,WAAAA,GACN,MAAO,IAAIrS,KAAK3J,WAAW4J,WAAW/S,QACnCwI,GAAmD,MAA3CsK,KAAK3J,WAAWC,QAAQZ,IAAMsE,WAE3C,EAGF,SAASoY,EACPxb,EACA4b,GAEA,MAAM3d,GAAc+B,EAAKL,cAAgB,IAAIK,EAAK/B,YAAc,IAAI3H,QACjE0J,GAAS4b,EAASnlB,SAASuJ,EAAKlB,OAEnC,OAAOkB,EAAKL,cACR1B,EAAWwc,OACTxc,EAAWW,KAAKoB,GAASwb,EAAkBxb,EAAM4b,KAAWC,QAE9D,EACN,C,cC9FO,MAAM7C,UAA0B8C,EAErC9S,WAAAA,CACEjL,EAAwBhK,GAEvB,IADD,aAAEqM,GAA0CrM,EAE5CmV,MAAMnL,EAAO,CAAEqC,iBAAgB,KALjB2b,cAAQ,EAMtB3S,KAAK2S,SAAWrd,MAAMsd,KAAKje,GAAOa,KAAInG,IAAA,IAAC,IAAEqG,GAAKrG,EAAA,OAAKqG,CAAG,GACxD,CAEAmd,oBAAAA,GACE,MAAMC,EAAY9S,KAAK2S,SACpBnd,KAAKE,GAAQsK,KAAK1J,QAAQZ,KAC1BxI,OAAOmc,EAAAA,GACV,OAAOrJ,KAAK+S,6BAA6BD,EAAW,IAAI5J,IAC1D,CAEQ6J,4BAAAA,CACNpe,EACA3I,GAEA,IAAK,MAAM4K,KAAQjC,EACbiC,GAAML,gBACRvK,EAAOgnB,IAAIpc,EAAKlB,KAChBsK,KAAK+S,6BAA6Bnc,EAAK/B,WAAY7I,IAGvD,OAAOA,CACT,EA6BK,SAAS8K,EAAYxH,EAE1B2jB,GACe,IAFf,wBAAElc,EAA0B,WAAYhM,GAAqBuE,GAGxD0H,EAAckc,IAAmBC,EAAAA,EAAAA,GACpCpoB,EAAMiM,aAAe,IAAIkS,IAAIne,EAAMiM,mBAAgB9L,EACnDH,EAAMsM,oBAAsB,IAAI6R,IAAIne,EAAMsM,qBAAuB,IAAI6R,IACrEne,EAAMmM,kBAGJkc,GAAiBC,EAAAA,EAAAA,GAA0B,IAC1CtoB,EACHuoB,kBAAmB,YAEjB7a,GAAe8a,EAAAA,EAAAA,UACjB,IAAOxoB,EAAM0N,aAAe,IAAIyQ,IAAIne,EAAM0N,cAAgB,IAAIyQ,KAC9D,CAACne,EAAM0N,eAGT,MAAM1M,EAAUojB,EAA+BpkB,GAE/C,IAAIyoB,GAAOC,EAAAA,EAAAA,GACT1oB,GACA2oB,EAAAA,EAAAA,cACG/e,GAAU,IAAIib,EAAejb,EAAO,CAAEqC,kBACvC,CAACA,IAEHjL,GAGF,MAAM6M,EAAmB,IAAI2Y,EAC3BiC,EACAJ,ICxFG,SACLroB,EAKAH,GAEA,MAAM+oB,GAAcC,EAAAA,EAAAA,GAAU7oB,IAE9B8oB,EAAAA,EAAAA,qBACEjpB,GACA,KACS,CACLkpB,iBAAmBpe,IACjBie,EAAYzjB,QAAQ0I,iBAAiBkb,iBAAiBpe,EAAI,EAE5D8J,MAAQ9J,IACN,MAAMkD,EAAmB+a,EAAYzjB,QAAQ0I,iBAC7CA,EAAiBuB,YAAW,GAO5BvB,EAAiBwB,cAAc,MAC/BmF,YAAW,KACT3G,EAAiBwB,cAAc1E,EAAI,GACnC,EAEJ+b,eAAAA,GACEkC,EAAYzjB,QAAQ0I,iBAAiB6Y,iBACvC,EACAI,eAAAA,GACE8B,EAAYzjB,QAAQ0I,iBAAiBiZ,iBACvC,EACAkC,SAAAA,GACEJ,EAAYzjB,QAAQgjB,gBAClBS,EAAYzjB,QAAQsjB,KAAKX,uBAE7B,EACAmB,WAAAA,GACE,MAAM,KAAER,EAAI,gBAAEN,EAAe,iBAAEta,GAC7B+a,EAAYzjB,QACR6I,EAAaH,EAAiBG,WAMpC,GALAma,EAAgB,IAAIhK,KAKhBnQ,IAAeya,EAAKb,SAAStlB,SAAS0L,GAAa,CACrD,IAAIR,EAAOib,EAAKld,QAAQyC,GACxB,KAA0B,MAAnBR,GAAMyB,WACXzB,EAAOib,EAAKld,QAAQiC,EAAKyB,WAEvBzB,IACFK,EAAiBwB,cAAc7B,EAAK7C,KAChCkD,EAAiBjJ,WAAWoJ,IAC9BH,EAAiBqb,OAAO1b,EAAK7C,KAGnC,CACF,KAGJ,GAEJ,CDuBEwe,CAAW,CAAEtb,mBAAkBsa,kBAAiBM,QAAQP,IAGxDpjB,EAAAA,EAAAA,YAAU,KAEuB,MAA7BujB,EAAera,YACdya,EAAKld,QAAQ8c,EAAera,aAG7Bqa,EAAehZ,cAAc,KAC/B,GACC,CAACoZ,EAAMJ,EAAera,aAuBzB,MAAO,CACL1C,WAAYmd,EACZxc,eACAyB,eACAwB,UAzBiBvE,IACjB,IAAIye,EAAkBC,EACpBZ,EACAxc,EACAtB,GAEF,GAAgC,WAA5BqB,EAAsC,CACxC,MAAMsd,EA2CZ,SAAqBb,EAA+B9d,GAClD,MAAMsE,EAAYwZ,EAAKld,QAAQZ,IAAMsE,UACrC,IAAKA,EACH,MAAO,IAAIwZ,EAAKb,UAAUtB,OAAOiD,EAAgBd,IAEnD,IAAIvB,EAASjY,EAAYwZ,EAAKld,QAAQ0D,GAAa,KACnD,GAAqB,SAAjBiY,GAAQhnB,KACV,OAAOspB,EAActC,GAAQzc,KAAI3C,IAAA,IAAC,IAAE6C,GAAK7C,EAAA,OAAK6C,CAAG,IAEnD,MAAM8e,EAAkB,GACxB,KAAOvC,GACLuC,EAASC,QAAQF,EAActC,GAAQzc,KAAI1C,IAAA,IAAC,IAAE4C,GAAK5C,EAAA,OAAK4C,CAAG,KACvC,YAAhBuc,EAAOhnB,KACLgnB,EAAOjY,UACTiY,EAASuB,EAAKld,QAAQ2b,EAAOjY,YAE7Bwa,EAASC,QAAQH,EAAgBd,IACjCvB,EAAS,MAGXA,EAAS,KAGb,OAAO3c,MAAMsd,KAAK,IAAI1J,IAAIsL,GAC5B,CAnE+BE,CAAYlB,EAAM9d,GAAKxI,QAC7CynB,GAASA,IAASjf,GAAOsB,EAAa0B,IAAIic,KAE7CR,EAAkBE,EAAiB/mB,QAAO,CAAC0J,EAAcC,IAChDmd,EACLZ,EACAxc,EACAC,IAEDkd,EACL,CACAjB,EAAgBiB,EAAgB,EAQhCvb,mBACAsa,kBAEJ,CAEA,SAASqB,EAAiB3d,GACxB,MAAM/B,EAAa,IAAK+B,EAAK/B,YAAc,IACrC+f,EAAa/f,EAAW3H,QAAOwF,IAAA,IAAC,KAAEzH,GAAMyH,EAAA,MAAc,SAATzH,CAAe,IAC5D4pB,EAAehgB,EAAW3H,QAAOyF,IAAA,IAAC,KAAE1H,GAAM0H,EAAA,MAAc,YAAT1H,CAAkB,IAEvE,OAAO2pB,EAAWvD,OAAOwD,EAAa3U,QAAQqU,GAChD,CAEA,SAASD,EAAgBd,GACvB,OAAOA,EAAKb,SACTnd,KAAKE,GAAQ8d,EAAKld,QAAQZ,KAC1BxI,OAAOmc,EAAAA,GACPnJ,QAAQqU,GACR/e,KAAI5C,IAAA,IAAC,IAAE8C,GAAK9C,EAAA,OAAK8C,CAAG,GACzB,CA8BA,SAAS0e,EACPZ,EACAxc,EACAtB,GAGA,IAAKsB,EAAa0B,IAAIhD,KAAS8d,EAAKld,QAAQZ,IAAMa,cAChD,OAAOS,EAET,MAAMkb,EAkBR,SAAmB9B,EAAe1a,GAChC,IAAIof,EAAM,IAAI5L,IAAIkH,GACd0E,EAAIpc,IAAIhD,GACVof,EAAIC,OAAOrf,GAEXof,EAAI9B,IAAItd,GAGV,OAAOof,CACT,CA3BkB7a,CAAUjD,EAActB,GAGxC,IAAK,MAAMif,KAAQzC,EACS,MAAtBsB,EAAKld,QAAQqe,IACfzC,EAAQ6C,OAAOJ,GAKnB,GAAIzC,EAAQxZ,IAAIhD,GACd,IAAK,MAAMif,KAAQ9D,EAAsB2C,EAAKld,QAAQZ,IACpDwc,EAAQc,IAAI2B,GAGhB,OAAOzC,CACT,C,mCEhOO,MAAM1T,EAAgB,yC,8ECGtB,MAAMrP,EACX6lB,EAAAA,GACWnoB,EACXmoB,EAAAA,GACWvW,EAAMuW,EAAAA,GACNC,EACXD,EAAAA,E,4DCDK,MAAM7X,EAAazS,EAAAA,YAAiB,SAAyBC,EAElEQ,GACC,IAFD,SAAEH,KAAa4I,GAA6BjJ,EAG5C,MAAMuqB,GAAiBzV,EAAAA,EAAAA,QAAwB,MACzC0V,GAAkB1V,EAAAA,EAAAA,QAAqB,MA4B7C,OA3BAoU,EAAAA,EAAAA,qBACE1oB,GACA,MACEqU,MAAQ4V,IACN,MAAMC,EAAeF,EAAgBjlB,QAC/BolB,EAAmBJ,EAAehlB,SAASqlB,cACjD,IAAKF,EACH,MAAM,IAAI5L,MAAM,4BAElB,IAAK6L,EACH,MAAM,IAAI7L,MAAM,+BAElB,GAAI2L,EACF,OAAOC,EAAaG,aAGpB3kB,SAAS4kB,eACT5kB,SAAS4kB,gBAAkBH,GAC3BA,EAAiB5U,SAAS7P,SAAS4kB,gBAEnCJ,EAAaK,UAAU,CAAEC,UAAU,GACrC,KAGJ,IAIAjrB,EAAAA,cAACkrB,EAAAA,GAAsBhiB,EACrBlJ,EAAAA,cAACmrB,EAAe,CAAC1qB,IAAKgqB,IACtBzqB,EAAAA,cAAA,QAAM,+BAA6B,GAAGorB,QAAM,EAAC3qB,IAAK+pB,IACjDlqB,EAGP,IACM6qB,EAAkBnrB,EAAAA,YAAiB,SACvCK,EACAI,GAEA,MAAMkqB,GAAeU,EAAAA,EAAAA,MAErB,OADAlC,EAAAA,EAAAA,qBAAoB1oB,GAAK,IAAMkqB,GAAc,CAACA,IACvC,IACT,IAAGlY,EAAAxR,aAAA,6L,kCC3DI,MAAM0d,EACX9Q,GACmC,MAARA,C,2DCoBtB,MAAMyd,EAUXpW,WAAAA,CAAoBqW,GAAqC,KAArCA,SAAAA,EAAkC,KAT9CC,sBAAgB,OAChBC,KAMJ,IAAIpG,IAGN/P,KAAKkW,iBAAmB,IAAIE,kBAAkBC,IAC5CA,EAAUC,SAASC,IACjB,MAAM5V,EAAS4V,EAAS5V,OAClBA,aAAkB6V,UAGxBD,EAASE,aAAaH,SAAS1f,IACzBA,aAAgB4f,SAClBxW,KAAKmW,KAAKhV,IAAIR,IAAS+V,qBAAqBC,UAAU/f,EACxD,IAEF2f,EAASK,WAAWN,SAAS1f,IACvBA,aAAgB4f,SAClBxW,KAAKmW,KAAKhV,IAAIR,IAAS+V,qBAAqBG,QAAQjgB,EACtD,IACA,GACF,GAEN,CAEAigB,OAAAA,CAAQlW,EAAiB6Q,GACvBxR,KAAKmW,KAAKhV,IAAIR,IAAS+V,qBAAqBI,aAE5C,MAAMJ,EAAuB,IAAIK,sBAC9BC,IACC,MAAMb,EAAOnW,KAAKmW,KAAKhV,IAAIR,GACrBsW,EAAoBD,EACvBxhB,KAAK0hB,IACHA,EAAMC,gBAAkBD,EAAMvW,kBAAkB6V,QAC7CU,EAAMvW,YACNzV,IAELgC,OAAOmc,EAAAA,GACJ+N,EAAqBJ,EACxBxhB,KAAK0hB,GACJA,EAAMC,gBAAkBD,EAAMvW,kBAAkB6V,QAC5CU,EAAMvW,OACN,OAELzT,OAAOmc,EAAAA,GAGJgO,EACJlB,GAAMmB,yBAA2B,GAC7BvO,EAAqBsO,EACxBnqB,QAAQuD,IAAa2mB,EAAmB/pB,SAASoD,KACjD4gB,OAAO4F,GACP/pB,QAAQuD,KAILA,aAAmB0Y,aACK,IAAxB1Y,EAAQ6X,aACiB,IAAzB7X,EAAQkY,gBAGd3I,KAAKiW,SACH,CACEoB,+BACAtO,mBAAoBA,EACpBpI,UAEFX,MAEEmW,IACFA,EAAKmB,wBAA0BvO,EACjC,GAEF,IACKyI,EACH3Q,KAAMF,IAGV,IAAKA,GAAQ3V,UAAY,IAAKsrB,SAASiB,IACrCb,EAAqBG,QAAQU,EAAa,IAE5CvX,KAAKmW,KAAK/F,IAAIzP,EAAQ,CACpB+V,uBACAY,wBAAyB,KAE3BtX,KAAKkW,iBAAiBW,QAAQlW,EAAQ,CACpC6W,WAAW,GAEf,CAEAb,SAAAA,CAAUhW,GACRX,KAAKmW,KAAKhV,IAAIR,IAAS+V,qBAAqBI,YAC9C,CAEAA,UAAAA,GACE,IAAI9W,KAAKmW,KAAKsB,UAAUnB,SAAQ3rB,IAAA,IAAC,qBAAE+rB,GAAsB/rB,EAAA,OACvD+rB,EAAqBI,YAAY,IAEnC9W,KAAKmW,KAAO,IAAIpG,IAChB/P,KAAKkW,iBAAiBY,YACxB,EC1HK,SAAS9N,EACd0O,EAA8C7H,GAK7C,IAJD,UACElI,EAAY,GAAG,WACfgQ,EAAa,YAC0B,IAAA9H,EAAG,CAAC,EAACA,EAE9C,MAAO9G,EAAoB6O,IAAyB9W,EAAAA,EAAAA,UAAoB,IAsBxE,OApBAjR,EAAAA,EAAAA,YAAU,KACR,MAAMgoB,EAAmB,IAAI7B,GAAkB8B,IAC7CF,EAAsBE,EAAO/O,mBAAmB,IAMlD,OAJA8O,EAAiBhB,QAAQa,EAAuBxnB,QAAU,CACxDynB,aACAhQ,cAEK,KACLkQ,EAAiBf,YAAY,CAC9B,GACA,CAMDY,EAAuBxnB,UAGlB,CACL6Y,qBAEJ,C,iDCvCO,MAAMhM,EAAoBA,CAC/Bgb,EACAC,KAEA,MAAMjsB,GAAU0D,EAAAA,EAAAA,YAA+BsoB,GAE/C,GAAe,MAAXhsB,EACF,MAAM,IAAI0d,MAAMuO,GAGlB,OAAOjsB,CAAO,C,iDCLD,SAAS8B,EACtBjD,GAEA,MAAMqtB,GAAWxY,EAAAA,EAAAA,QAAU,MAc3B,OAbA/U,EAAAA,WAAgB,KACTE,IAIuB,mBAAjBA,EACTA,EAAaqtB,EAAS/nB,SAErBtF,EAAkDsF,QACjD+nB,EAAS/nB,QACb,IAGK+nB,CACT,C,gDCvBO,SAASrE,EAAaznB,GAC3B,MAAMhB,GAAMsU,EAAAA,EAAAA,QAAOtT,GAInB,OAHA0iB,EAAAA,EAAAA,kBAAgB,KACd1jB,EAAI+E,QAAU/D,CAAK,IAEdhB,CACT,C,uECqBA,IACI+sB,EADAC,EAAsD,KAGnD,SAAS/J,EACdoD,GAIA,MAAM3W,GAAY4E,EAAAA,EAAAA,QAAoB,OAEtCoP,EAAAA,EAAAA,IAAgB,KAQd,GAPKsJ,IAEHA,EAAoBxtB,IAA2B,IAA1B,QAAEytB,EAAO,QAAEC,GAAS1tB,EACvCutB,EAAqB,CAAEE,UAASC,UAAS,EAE3CxnB,SAASynB,iBAAiB,YAAaH,KAEpCtd,EAAU3K,QAAS,CACtB,MAAMqoB,EAAa1nB,SAASC,cAAc,QAY1C,OAXAmQ,OAAOoL,OAAOkM,EAAW5gB,MAAO,CAC9B2V,MAAO,MACPC,OAAQ,MACRiL,cAAe,OACfC,SAAU,QACVC,WAAY,WAEd7nB,SAASuL,KAAKrL,YAAYwnB,GAG1B1d,EAAU3K,QAAUqoB,EACb,KACLA,EAAW5nB,QAAQ,CAEvB,IACC,IAEH,MAAM2d,EAAkB/d,IACtB,MAAMooB,EAAoBpoB,GAAK2nB,EAC/B,GAAIrd,EAAU3K,SAAWyoB,EAAmB,CAC1C,MAAM,QAAEP,EAAO,QAAEC,GAAYM,EAC7B9d,EAAU3K,QAAQyH,MAAMkQ,KAAQ,GAE9BuQ,GAAW5G,EAAQtW,aAAe,OAEpCL,EAAU3K,QAAQyH,MAAMoQ,IAAO,GAAEsQ,KACnC,CACAO,GAAiB,GAEnB/J,EAAAA,EAAAA,IAAgB,KACV2C,EAAQnW,QACViT,GACF,GACC,CAACkD,EAAQnW,OAAQR,EAAU3K,UAE9B,MAAQoe,eAAgBsK,KAAoB5sB,IAAW4O,EAAAA,EAAAA,GAAmB,IACrE4W,EACH3W,cAGF,MAAO,IACF7O,EAIHsiB,iBAEJ,C,iDC9FO,SAASiB,EAAepjB,GAC7B,MAAMhB,GAAMsU,EAAAA,EAAAA,QAAOtT,GAInB,OAHA0D,EAAAA,EAAAA,YAAU,KACR1E,EAAI+E,QAAU/D,CAAK,GAClB,CAACA,IACGhB,EAAI+E,OACb,C,sICEO,MAAM2oB,EAGRluB,IAA0C,IAAzC,SAAEK,EAAQ,UAAE8tB,EAAY,WAAWnuB,EACvC,MAAMouB,EACJ,CACEC,MAAOC,EACPC,aAAcC,EACdC,QAASC,GAEXP,GAKIlsB,GAAQ2mB,EAAAA,EAAAA,UAAQ,IAAM,IAAI+F,EAAAA,EAAMP,IAAY,CAACA,IAGnD,OADAQ,IAEE7uB,EAAAA,cAAC8uB,EAAAA,EAAW,CAACC,SAAU/uB,EAAAA,cAAAA,EAAAA,SAAA,KAAE,gBACtB,IAAMA,EAAAA,cAACgvB,EAAAA,EAAa,CAAC9sB,MAAOA,GAAQ5B,IACzB,EAOL2uB,EAAmDtqB,IAAA,IAAC,SAC/DrE,GACDqE,EAAA,OACC3E,EAAAA,cAACmuB,EAAc,KACbnuB,EAAAA,cAAAkvB,EAAA,KAOG5uB,GAEY,EAiBbuuB,EAA8BA,MAClC1pB,EAAAA,EAAAA,YAAU,KACR,MAAMgqB,EAAiB,wBACvB,IAAKhpB,SAASuL,KAAK0d,UAAUpZ,SAASmZ,GACpC,IAgBJhpB,SACGkpB,iBAAkC,wBAClCzD,SAAS0D,IACR,GAAIA,EAAOC,MACT,IAAK,IAAI9gB,EAAI,EAAGA,EAAI6gB,EAAOC,MAAMC,SAASrY,OAAQ1I,IAAK,CACrD,MAAMghB,EAAOH,EAAOC,MAAMC,SAAS3hB,KAAKY,GAEtCghB,GAAMC,SAAS3rB,WAAW,wCAE1BurB,EAAOC,MAAMI,WAAWlhB,EAE5B,CACF,IA1BEtI,SAASuL,KAAK0d,UAAU9G,IAAI6G,EAC9B,CAAE,MAAOtpB,GACPP,QAAQC,MAAM,uCAChB,CACF,GACC,GAAG,EAuBP,IAAA2pB,GAAAU,EAAAA,EAAAA,IAAA,OAAAC,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAAAH,CAAA,qBAzDqBhrB,IAAA,IAAC,MAAE1C,GAAyB0C,EAAA,OACxC1C,EAAM6F,MAAM,eAAe,IAAAomB,EAAAltB,aAAA,sIAAAguB,EAAAhuB,aAAA,qI,gDCzC9B,MAAM+uB,EAAwB/vB,IAM9B,IAN+B,KACpCoD,EAAI,KACJf,GAIDrC,EACC,OAGED,EAAAA,cAAA,KACEiwB,KAAO,+DAA8D5sB,IACrE4S,OAAO,UAEN3T,GAAQe,EAAKO,MAAM,KAAKssB,MACvB,EAENF,EAAA/uB,aAAA,gR,0QCHWsY,EAAAA,EAFb,MAQa4W,EAAoC,CAC/CC,OAAS/vB,GAELL,EAAAA,cAACgb,EAAAA,GAAUzX,EAAAA,EAAAA,GAAA,GAAKlD,EAAK,CAAE8e,MAAOkR,EAAY3U,QAAM,KAC5C4U,GACAtwB,EAAAA,cAACkB,EAAAA,EAAI,CAAC8J,IAAKslB,EAAI3X,MAAOnE,UAAW8b,EAAI3X,OACnC3Y,EAAAA,cAAC0Z,EAAAA,EAAgB,CACf1W,KAAMhD,EAAAA,cAACiE,EAAAA,GAAY,CAACjB,KAAMstB,EAAIttB,OAC9B2V,MAAO2X,EAAI3X,MACXiB,OAAQ0W,EAAI1W,aAQb2W,EAAsC,CACjDH,OAAS/vB,GAELL,EAAAA,cAACsZ,EAAAA,GAAY/V,EAAAA,EAAAA,GAAA,GAAKlD,EAAK,CAAE8e,MAAOqR,KAC5BF,GACAtwB,EAAAA,cAACkB,EAAAA,EAAI,CAAC8J,IAAKslB,EAAI3X,MAAOnE,UAAW8b,EAAI3X,OACnC3Y,EAAAA,cAAC0Y,EAAAA,EAAkB,CACjB1V,KAAMstB,EAAIttB,MAAQhD,EAAAA,cAACiE,EAAAA,GAAY,CAACjB,KAAMstB,EAAIttB,OAC1C2V,MAAO2X,EAAI3X,YAQZ8X,EAAwC,CACnDL,OAAS/vB,GAELL,EAAAA,cAACyf,EAAAA,GAAclc,EAAAA,EAAAA,GAAA,GAAKlD,EAAK,CAAE8e,MAAOuR,KAC9BJ,GACAtwB,EAAAA,cAACkB,EAAAA,EAAI,CAAC8J,IAAKslB,EAAI3X,MAAOnE,UAAW8b,EAAI3X,OACnC3Y,EAAAA,cAAC6Y,EAAAA,EAAgB,CACfC,UAAW9Y,EAAAA,cAACiE,EAAAA,GAAY,CAACjB,KAAMstB,EAAIttB,OACnC2V,MAAO2X,EAAI3X,YAQnB0X,EAAa,CACjB,CACE1X,MAAO,WACPiB,QAAQ,EACR5W,KAAM,wBAER,CACE2V,MAAO,mBACPiB,QAAQ,EACR5W,KAAM,wBAER,CACE2V,MAAO,WACPiB,QAAQ,EACR5W,KAAM,wBAER,CACE2V,MAAO,eACPiB,QAAQ,EACR5W,KAAM,yBAGJ0tB,EAAiB,CACrB,CACE/X,MAAO,UACP3V,KAAM,iBAER,CACE2V,MAAO,gBACP3V,KAAM,gBAER,CACE2V,MAAO,QACP3V,KAAM,gBAGJwtB,EAAe,CACnB,CACE7X,MAAO,UACP3V,KAAM,oBAER,CACE2V,MAAO,SACP3V,KAAM,MAER,CACE2V,MAAO,oCACP3V,KAAM,O,0BCrGGuW,EAAAA,EAFb,MAmCaoX,EAAwD,CACnEP,OAAQzrB,IAAmC,IAAlC,SAAEisB,EAAW,OAAQvwB,GAAOsE,EACnC,MAAOksB,EAAMC,IAAW1a,EAAAA,EAAAA,UACtBxL,MAAM,IACHmmB,KAAK,MACLjmB,KAAI,CAAChE,EAAGie,KAAK,CACZpM,MAAQ,kBAAiBoM,IACzB/hB,KAAM,oBAGZ,OACEhD,EAAAA,cAAA,OAAKiN,MAAO,CAAE2jB,aACZ5wB,EAAAA,cAACuZ,EAAAA,GAAIhW,EAAAA,EAAAA,GAAA,GAAKlD,EAAK,CAAE8e,MAAO0R,KACpBP,IACA,MAAMttB,EAAOhD,EAAAA,cAACiE,EAAAA,GAAY,CAACjB,KAAMstB,EAAIttB,OACrC,OACEhD,EAAAA,cAACyb,EAAAA,EAAO,CACNzQ,IAAK6lB,EAAKG,QAAQV,GAClB9b,UAAW8b,EAAI3X,MACf0G,eACErf,EAAAA,cAACkS,EAAAA,EAAc,CAACC,QAASme,EAAI3X,MAAO3V,KAAMA,KAG5ChD,EAAAA,cAAC6Y,EAAAA,EAAgB,CAACC,UAAW9V,EAAM2V,MAAO2X,EAAI3X,QACtC,IAIhB3Y,EAAAA,cAAA,OAAKiN,MAAO,CAAEgkB,UAAW,SACvBjxB,EAAAA,cAAA,UACEkxB,QAASA,KACPJ,GAASD,GAAS,IACbA,EACH,CACElY,MAAQ,kBAAiBkY,EAAK1Z,SAC9BnU,KAAM,kBAER,GAEL,WAGDhD,EAAAA,cAAA,UACEkxB,QAASA,KACPJ,GAASD,GACPA,EAAK/lB,KAAI,CAACwlB,EAAKvL,KACb,GAAc,IAAVA,EAAa,CACf,MAAMpM,EAAQ2X,EAAI3X,MAClB,MAAO,IACF2X,EACH3X,MACEA,EAAMnR,QAAQ,UAAW,IACxB,eACCmR,EAAMhW,SAAS,SACX,sBACA,WAGZ,CACA,OAAO2tB,CAAG,KAEb,GAEJ,2BAIC,G,eC9GL,MAAMa,EAAc,CAAC,EACfC,EAAe,OACfC,EAAW,CACtB,cAAiB,kBACjB,GAAM,kBACN,MAAS,OACT,YAAe,WACf,OAAU,iCACV,cAAiB,aACjB,KAAQ,mBACR,UAAa,4BACb,OAAS,EACT,QAAW,6FACX,KAAQ,GACR,QAAW,UACX,YAAe,CAAC,EAChB,QAAW,kBACX,SAAY,CACV,MAAS,YACT,UAAa,kCAEf,KAAQ,CACN,MAAS,cACT,UAAa,qCAGJC,EAAS,CAEtB,EAUaC,EAAM,CAAC,CAClB9vB,MAAO,WACPsF,GAAI,WACJyqB,MAAO,GACN,CACD/vB,MAAO,YACPsF,GAAI,YACJyqB,MAAO,GACN,CACD/vB,MAAO,eACPsF,GAAI,eACJyqB,MAAO,GACN,CACD/vB,MAAO,oBACPsF,GAAI,oBACJyqB,MAAO,GACN,CACD/vB,MAAO,gBACPsF,GAAI,gBACJyqB,MAAO,GACN,CACD/vB,MAAO,eACPsF,GAAI,eACJyqB,MAAO,GACN,CACD/vB,MAAO,iBACPsF,GAAI,iBACJyqB,MAAO,GACN,CACD/vB,MAAO,oBACPsF,GAAI,oBACJyqB,MAAO,IAGHC,EAAc,CAClBF,OAEIG,EAAY,UACH,SAASC,EAAU1xB,GAG9B,IAH+B,WACjC2xB,KACGvxB,GACJJ,EACC,OAAO4xB,EAAAA,EAAAA,IAACH,GAASnuB,EAAAA,EAAAA,GAAA,GAAKkuB,EAAiBpxB,EAAK,CAAEuxB,WAAYA,EAAYE,QAAQ,eAG5ED,EAAAA,EAAAA,IAAA,MACE,GAAM,QACH,SACLA,EAAAA,EAAAA,IAAA,MACE,GAAM,YACH,aACLA,EAAAA,EAAAA,IAAA,WACEA,EAAAA,EAAAA,IAAA,MAAIE,WAAW,MAAO,qCACtBF,EAAAA,EAAAA,IAAA,MAAIE,WAAW,MAAO,oDACtBF,EAAAA,EAAAA,IAAA,MAAIE,WAAW,MAAO,8EAExBF,EAAAA,EAAAA,IAAA,MACE,GAAM,aACH,cACLA,EAAAA,EAAAA,IAAA,MACE,UAAa,uBAEbA,EAAAA,EAAAA,IAAA,MAAIE,WAAW,KACb,UAAa,mBACZF,EAAAA,EAAAA,IAAA,SAAOE,WAAW,KACjB,KAAQ,WACR,SAAW,EACX,UAAY,IACD,IAAK,mBAEtBF,EAAAA,EAAAA,IAAA,MACE,GAAM,gBACH,iBACLA,EAAAA,EAAAA,IAAA,YAAKA,EAAAA,EAAAA,IAAA,QAAME,WAAW,MAClB,UAAa,eACb,WAAc,OACd,MAAQ,GACL,yFAMPF,EAAAA,EAAAA,IAAA,MACE,GAAM,qBACH,sBACLA,EAAAA,EAAAA,IAAA,SAAK,2TAGLA,EAAAA,EAAAA,IAAA,cACE,KAAQ,QACPA,EAAAA,EAAAA,IAAA,KAAGE,WAAW,cAAe,QAAMF,EAAAA,EAAAA,IAAA,cAAYE,WAAW,KAAM,WAAwB,gBAAcF,EAAAA,EAAAA,IAAA,cAAYE,WAAW,KAAM,QAAqB,oBAAkBF,EAAAA,EAAAA,IAAA,cAAYE,WAAW,KAAM,kBAA+B,+FAEzOF,EAAAA,EAAAA,IAAC5C,EAAAA,GAAO,CAAC6C,QAAQ,YACnBD,EAAAA,EAAAA,IAAClB,EAASP,OAAM,CAACQ,SAAU,SAEzBiB,EAAAA,EAAAA,IAAA,YACAA,EAAAA,EAAAA,IAAA,SAAK,sCAAoCA,EAAAA,EAAAA,IAAA,cAAYE,WAAW,KAAM,cAA2B,WACjGF,EAAAA,EAAAA,IAAC5C,EAAAA,GAAO,CAAC6C,QAAQ,YACnBD,EAAAA,EAAAA,IAAClB,EAASP,OAAM,CAACQ,SAAU,KAAMlU,gBAAc,MAE7CmV,EAAAA,EAAAA,IAAA,YACAA,EAAAA,EAAAA,IAAA,SAAK,0CAAwCA,EAAAA,EAAAA,IAAA,cAAYE,WAAW,KAAM,YAAyB,0FAEnGF,EAAAA,EAAAA,IAAA,cACE,KAAQ,YACPA,EAAAA,EAAAA,IAAA,KAAGE,WAAW,cAAe,gBAAcF,EAAAA,EAAAA,IAAA,cAAYE,WAAW,KAAM,YAAyB,4BACpGF,EAAAA,EAAAA,IAAA,MACE,GAAM,iBACH,kBACLA,EAAAA,EAAAA,IAAA,UAAGA,EAAAA,EAAAA,IAAA,cAAYE,WAAW,KAAM,QAAqB,0BAAwBF,EAAAA,EAAAA,IAAA,cAAYE,WAAW,KAAM,iBAA8B,yBAAuBF,EAAAA,EAAAA,IAAA,cAAYE,WAAW,KAAM,gBAA6B,yDAChNF,EAAAA,EAAAA,IAAA,cAAYE,WAAW,KAAM,qBAAkC,SAAOF,EAAAA,EAAAA,IAAA,cAAYE,WAAW,KAAM,oBAAiC,mEAC/IF,EAAAA,EAAAA,IAAA,cAAYE,WAAW,KAAM,QAAqB,0EAAwEF,EAAAA,EAAAA,IAAA,cAAYE,WAAW,KAAM,oBAAiC,MACtLF,EAAAA,EAAAA,IAAA,MACE,GAAM,gBACH,iBACLA,EAAAA,EAAAA,IAAA,SAAK,QAAMA,EAAAA,EAAAA,IAAA,cAAYE,WAAW,KAAM,cAA2B,mBAAiBF,EAAAA,EAAAA,IAAA,cAAYE,WAAW,KAAM,oBAAiC,2BAClJF,EAAAA,EAAAA,IAAC5C,EAAAA,GAAO,CAAC6C,QAAQ,YACnBD,EAAAA,EAAAA,IAAC1B,EAAYC,OAAM,QAEjByB,EAAAA,EAAAA,IAAA,MACE,GAAM,kBACH,mBACLA,EAAAA,EAAAA,IAAA,SAAK,QAAMA,EAAAA,EAAAA,IAAA,cAAYE,WAAW,KAAM,gBAA6B,mBAAiBF,EAAAA,EAAAA,IAAA,cAAYE,WAAW,KAAM,sBAAmC,2BACtJF,EAAAA,EAAAA,IAAC5C,EAAAA,GAAO,CAAC6C,QAAQ,YACnBD,EAAAA,EAAAA,IAACtB,EAAcH,OAAM,QAEnByB,EAAAA,EAAAA,IAAA,MACE,GAAM,qBACH,sBACLA,EAAAA,EAAAA,IAAA,SAAK,QAAMA,EAAAA,EAAAA,IAAA,cAAYE,WAAW,KAAM,kBAA+B,+BAA6BF,EAAAA,EAAAA,IAAA,cAAYE,WAAW,KAAM,oBAAiC,2BAClKF,EAAAA,EAAAA,IAAC5C,EAAAA,GAAO,CAAC6C,QAAQ,YACnBD,EAAAA,EAAAA,IAACpB,EAAgBL,OAAM,OAGzB,CAEAuB,EAAWK,gBAAiB,C","sources":["webpack://website/../jui/src/Button/BareButton.tsx","webpack://website/../jui/src/Collections/Item.ts","webpack://website/../jui/src/Collections/ItemStateContext.tsx","webpack://website/../jui/src/Icon/LafIcon.tsx","webpack://website/../jui/src/Icon/PlatformIcon.tsx","webpack://website/../jui/src/Icon/StyledIconWrapper.tsx","webpack://website/../jui/src/Icon/useSvgIcon.tsx","webpack://website/../jui/src/IconButton/IconButton.tsx","webpack://website/../jui/src/List/ListDivider.tsx","webpack://website/../jui/src/Collections/patchCollectionProps.tsx","webpack://website/../jui/src/Menu/Menu.tsx","webpack://website/../jui/src/Menu/MenuItem.tsx","webpack://website/../jui/src/Menu/MenuItemLayout.tsx","webpack://website/../jui/src/Menu/MenuOverlay.tsx","webpack://website/../jui/src/Menu/MenuTrigger.tsx","webpack://website/../jui/src/Menu/StyledMenu.tsx","webpack://website/../jui/src/Menu/StyledMenuItem.tsx","webpack://website/../jui/src/Menu/Submenu.tsx","webpack://website/../jui/src/Menu/_useSubmenu.ts","webpack://website/../jui/src/Menu/_useSubmenuState.tsx","webpack://website/../jui/src/Menu/MenuSection.tsx","webpack://website/../jui/src/Menu/renderMenuNodes.tsx","webpack://website/../jui/src/Overlay/Overlay.tsx","webpack://website/../jui/src/StyledSeparator.tsx","webpack://website/../jui/src/Tabs/DebuggerTabs/DebuggerTabContent.tsx","webpack://website/../jui/src/Tabs/DebuggerTabs/StyledDebuggerTab.ts","webpack://website/../jui/src/Tabs/DebuggerTabs/DebuggerTabs.tsx","webpack://website/../jui/src/Tabs/EditorTabs/EditorTabContent.tsx","webpack://website/../jui/src/Tabs/EditorTabs/StyledEditorTab.ts","webpack://website/../jui/src/Tabs/EditorTabs/StyledEditorTabs.ts","webpack://website/../jui/src/Tabs/EditorTabs/EditorTabs.tsx","webpack://website/../jui/src/Tabs/StyledDefaultTab.ts","webpack://website/../jui/src/Tabs/StyledDefaultTabs.ts","webpack://website/../jui/src/Tabs/TabContentLayout.tsx","webpack://website/../jui/src/Tabs/TabItem.tsx","webpack://website/../jui/src/Tabs/TabTheme.ts","webpack://website/../jui/src/Tabs/StyledHorizontalOverflowShadows.tsx","webpack://website/../jui/src/Tabs/Tab.tsx","webpack://website/../jui/src/Tabs/Tabs.tsx","webpack://website/../jui/src/Tabs/useHasOverflow.tsx","webpack://website/../jui/src/Tabs/TabsOverflowMenu.tsx","webpack://website/../jui/src/Tabs/ToolWindowTabs/StyledToolWindowTab.ts","webpack://website/../jui/src/Tabs/ToolWindowTabs/StyledToolWindowTabs.ts","webpack://website/../jui/src/Tabs/ToolWindowTabs/ToolWindowTabs.tsx","webpack://website/../jui/src/Tooltip/ActionTooltip.tsx","webpack://website/../jui/src/Tooltip/Tooltip.tsx","webpack://website/../jui/src/Tooltip/TooltipContext.tsx","webpack://website/../jui/src/Tooltip/TooltipPointer.tsx","webpack://website/../jui/src/Tooltip/TooltipTrigger.tsx","webpack://website/../jui/src/Tooltip/TooltipTriggerAndOverlay.tsx","webpack://website/../jui/src/Tooltip/tooltip-styles.ts","webpack://website/../jui/src/Collections/useCollectionCacheInvalidation.ts","webpack://website/../jui/src/Tree/__copied__TreeCollection.ts","webpack://website/../jui/src/Tree/getSingleChildrenKeys.ts","webpack://website/../jui/src/Tree/TreeSelectionManager.ts","webpack://website/../jui/src/Tree/useTreeState.ts","webpack://website/../jui/src/Tree/useTreeRef.tsx","webpack://website/../jui/src/style-constants.ts","webpack://website/../jui/src/styled.ts","webpack://website/../jui/src/utils/FocusScope.tsx","webpack://website/../jui/src/utils/array-utils.ts","webpack://website/../jui/src/utils/overflow-utils/OverflowObserver.ts","webpack://website/../jui/src/utils/overflow-utils/useOverflowObserver.tsx","webpack://website/../jui/src/utils/useContextOrThrow.tsx","webpack://website/../jui/src/utils/useForwardedRef.ts","webpack://website/../jui/src/utils/useLatest.ts","webpack://website/../jui/src/utils/useMouseEventOverlayPosition.tsx","webpack://website/../jui/src/utils/usePrevious.ts","webpack://website/./src/components/ExampleContext.tsx","webpack://website/./src/components/RefToIntellijPlatform.tsx","webpack://website/../jui/src/Tabs/3-TabThemes.stories.tsx","webpack://website/../jui/src/Tabs/2-Tabs.stories.tsx","webpack://website/./docs/components/Tabs.mdx"],"sourcesContent":["import React, { ForwardedRef, JSXElementConstructor } from \"react\";\nimport { useButton } from \"@react-aria/button\";\nimport { filterDOMProps, mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport {\n  AriaBaseButtonProps,\n  AriaButtonProps,\n  ButtonProps,\n} from \"@react-types/button\";\n\nexport interface BareButtonProps extends AriaBaseButtonProps, ButtonProps {\n  children: React.ReactElement;\n  elementType?: AriaButtonProps[\"elementType\"];\n\n  // NOTE: there is a chance of unchecked breaking change here, since this is not explicitly mentioned as public API\n  // of useButton, but it is passed to the underlying usePress.\n  preventFocusOnPress?: boolean; // Should this be become true by default?\n}\n\n/**\n * A component to make arbitrary content an accessible button which is also able to be a tooltip trigger.\n */\nexport const BareButton = React.forwardRef(function BareButton(\n  { elementType: elementTypeProp, ...props }: BareButtonProps,\n  forwardedRef: ForwardedRef<HTMLElement>\n) {\n  const elementType =\n    elementTypeProp ||\n    (React.isValidElement(props.children) &&\n    typeof props.children.type === \"string\"\n      ? (props.children.type as unknown as JSXElementConstructor<unknown>)\n      : undefined) ||\n    \"button\";\n  const ref = useObjectRef(forwardedRef);\n  const { buttonProps } = useButton(\n    {\n      elementType,\n      ...props,\n    },\n    ref\n  );\n  const domProps = filterDOMProps(props);\n  const { autoFocus } = props;\n\n  return React.cloneElement(\n    props.children,\n    mergeProps(domProps, buttonProps, { autoFocus, ref })\n  );\n});\n","import React, { ReactElement } from \"react\";\nimport { ItemProps } from \"@react-types/shared\";\nimport { Item as StatelyItem, PartialNode } from \"@react-stately/collections\";\n\n// noinspection JSUnusedLocalSymbols\n/**\n * Item for collection components, which by default disables caching, unless `invalidated` prop is set to false on the\n * context passed to useCollection. Control over cache invalidation policy can be enabled by using\n * `useCollectionCacheInvalidation` for creating such context object.\n */\nfunction Item<T>(props: ItemProps<T>): ReactElement {\n  return null as any as React.ReactElement;\n}\n\nexport type CacheInvalidationContext = { invalidated?: boolean };\n\n// We don't want getCollectionNode to show up in the type definition\nlet _Item = Item as <T>(props: ItemProps<T>) => JSX.Element;\nexport { _Item as Item };\n\n/**\n * @private @preapproved\n */\nItem.getCollectionNode = function* getCollectionNode<T>(\n  props: ItemProps<T>,\n  context: CacheInvalidationContext\n): Generator<PartialNode<T>> {\n  const itemGenerator: Generator<PartialNode<T>> = (\n    StatelyItem as any\n  ).getCollectionNode(props, context);\n  const result = itemGenerator.next().value;\n  const originalShouldInvalidate = result.shouldInvalidate;\n  result.shouldInvalidate = (context: CacheInvalidationContext) =>\n    originalShouldInvalidate?.(context) || context.invalidated;\n  yield result;\n};\n","import React from \"react\";\nimport { Node } from \"@react-types/shared\";\n\n/**\n * Generic state of items in collections, provided via a context.\n * To be used in Menu, Tree, or anything that deals with a collection of items for which the common states like\n * **disabled** or **selected** is applicable.\n */\nexport interface ItemStateContextType {\n  node: Node<unknown>;\n  isSelected: boolean;\n  isContainerFocused: boolean;\n  isDisabled: boolean;\n}\n\nexport const ItemStateContext =\n  React.createContext<ItemStateContextType | null>(null);\n","import useForwardedRef from \"@intellij-platform/core/utils/useForwardedRef\";\nimport React, { ForwardedRef } from \"react\";\nimport { useTheme } from \"styled-components\";\nimport { Theme } from \"../Theme/Theme\";\nimport { IconProps } from \"./IconProps\";\nimport { StyledIconWrapper } from \"./StyledIconWrapper\";\nimport { useSvgIcon } from \"./useSvgIcon\";\n\ninterface IconModifiers {\n  Selected?: boolean;\n  Focused?: boolean;\n  Disabled?: boolean;\n  Editable?: boolean;\n  Pressed?: boolean;\n}\n\nexport interface ThemeIconProps extends IconProps {\n  /**\n   * Icon which will be resolved against the default icon location based on theme type\n   */\n  icon: string | { name: string; modifiers: IconModifiers };\n\n  /**\n   * A theme key that can optionally override the icon.\n   */\n  themePath?: string;\n}\n\nconst ICONS_DIR_PREFIX = \"com/intellij/ide/ui/laf/icons/\";\n\n// Similar to LafIconLookup\nfunction findIconPath(\n  theme: Theme,\n  name: string,\n  modifiers: IconModifiers = {}\n) {\n  const basePath = `${ICONS_DIR_PREFIX}${\n    theme.isUnderDarcula() ? \"darcula/\" : \"intellij/\"\n  }`;\n  const suffix = (\n    [\"Editable\", \"Selected\", \"Pressed\", \"Focused\", \"Disabled\"] as Array<\n      keyof typeof modifiers\n    >\n  )\n    .filter((modifier) =>\n      // Focused or Pressed can't coexist with Disabled\n      modifiers.Disabled ? ![\"Focused\", \"Pressed\"].includes(modifier) : true\n    )\n    .reduce(\n      (soFar, modifier) => soFar + (modifiers[modifier] ? modifier : \"\"),\n      \"\"\n    );\n  return `${basePath}${name}${suffix}.svg`;\n}\n\nfunction useIconPath(\n  iconDescriptor: string | { name: string; modifiers?: IconModifiers },\n  themePath?: string\n) {\n  const theme = useTheme() as Theme; // TODO: investigate why useTheme is typed like this\n  const resolvedValue = themePath && theme.value(themePath);\n  if (resolvedValue) {\n    return resolvedValue;\n  }\n  const { modifiers = {}, name } =\n    typeof iconDescriptor === \"string\"\n      ? { name: iconDescriptor }\n      : iconDescriptor;\n  return findIconPath(theme, name, modifiers);\n}\n\nexport const LafIcon = React.forwardRef(\n  (\n    { themePath, icon, size, ...props }: ThemeIconProps,\n    forwardedRef: ForwardedRef<HTMLElement>\n  ) => {\n    const resolvedIconPath = useIconPath(icon, themePath);\n\n    const ref = useForwardedRef(forwardedRef);\n    useSvgIcon({ path: `platform/platform-impl/src/${resolvedIconPath}` }, ref);\n    return <StyledIconWrapper {...props} ref={ref} size={size} />;\n  }\n);\n","import React, { ForwardedRef } from \"react\";\nimport useForwardedRef from \"@intellij-platform/core/utils/useForwardedRef\";\nimport { useTheme } from \"@intellij-platform/core/styled\";\nimport { IconProps } from \"./IconProps\";\nimport { StyledIconWrapper } from \"./StyledIconWrapper\";\nimport { useSvgIcon } from \"./useSvgIcon\";\n\nexport interface PlatformIconProps extends IconProps {\n  /**\n   * Icon path in intellij platform repo.\n   * If starts with \"/\", the path will be from the repo root. Otherwise, it's relative to \"platform/icons/src\".\n   * \".svg\" extension is optional.\n   */\n  icon: string;\n  /**\n   * Similar to icon, but for dark themes.\n   */\n  darkIcon?: string;\n}\n\nexport const amendName = (iconNameOrPath: string, amendment: string) => {\n  const [name, ext] = iconNameOrPath.split(\".\");\n  return `${name}${amendment}${ext ? `.${ext}` : \"\"}`;\n};\n\nexport const getDarkPath = (path: string, darkPath?: string) => {\n  const [name, ext] = path.split(\".\");\n  return darkPath || `${name}_dark${ext ? `.${ext}` : \"\"}`;\n};\n\nconst getPlatformIconPath = (relativePath: string) =>\n  relativePath.startsWith(\"/\")\n    ? relativePath.slice(1)\n    : `platform/icons/src/${relativePath}`;\n\n/**\n * Renders an icon from the predefined list of platform icons.\n * icon name must follow the directory structure in platform icons.\n * @example <PlatformIcon icon=\"general/hideToolWindow\" />\n * @example <PlatformIcon icon=\"toolbar/pin\" />\n * @example <PlatformIcon icon=\"toolbar/pin.svg\" />\n * @example <PlatformIcon icon=\"/platform/dvcs-impl/resources/icons/currentBranchLabel.svg\" />\n */\nexport const PlatformIcon = React.forwardRef(\n  (\n    { icon, darkIcon, ...props }: PlatformIconProps,\n    forwardedRef: ForwardedRef<HTMLElement>\n  ) => {\n    const ref = useForwardedRef(forwardedRef);\n    const theme = useTheme();\n    const iconName = theme.dark ? getDarkPath(icon, darkIcon) : icon;\n    useSvgIcon(\n      {\n        path: getPlatformIconPath(iconName),\n        fallbackPath: getPlatformIconPath(icon),\n      },\n      ref\n    );\n\n    return <StyledIconWrapper {...props} ref={ref} />;\n  }\n);\n","import { styled } from \"../styled\";\nimport { IconSize } from \"@intellij-platform/core/Icon/IconProps\";\n\nconst DEFAULT_ICON_SIZE: IconSize = 16;\n\nexport const StyledIconWrapper = styled.span<{\n  size?: IconSize;\n  useCurrentColor?: boolean;\n  role?: string;\n}>`\n  box-sizing: border-box;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 0;\n  width: ${({ size = DEFAULT_ICON_SIZE }) => `${size}px`};\n  height: ${({ size = DEFAULT_ICON_SIZE }) => `${size}px`};\n  position: relative; // to allow absolute positioned indicators and overlays on icon\n  cursor: ${({ role }) => (role === \"button\" ? \"pointer\" : undefined)};\n`;\n","import { RefObject, useContext, useEffect } from \"react\";\nimport { useTheme } from \"@intellij-platform/core/styled\";\nimport { ItemStateContext } from \"@intellij-platform/core/Collections\";\n\nexport function useSvgIcon(\n  { path, fallbackPath }: { path: string; fallbackPath?: string },\n  /**\n   * ref to the icon wrapper element in which the svg should be injected.\n   * This hook used to return svg string, and that svg was set as dangerouslySetInnerHTML. But now it injects the svg.\n   * by direct DOM manipulation. That's to eliminate the need for using dangerouslySetInnerHTML, so that we can allow\n   * arbitrary children (like LiveIndicator) as overlays on top of icons.\n   */\n  ref: RefObject<HTMLElement>\n) {\n  const theme = useTheme();\n  const itemState = useContext(ItemStateContext);\n  const selected = itemState?.isSelected || itemState?.isContainerFocused;\n  useEffect(() => {\n    let canceled = false;\n    const fetchIcon = async () => {\n      if (!path) {\n        console.error(\"icon path is empty\");\n        return;\n      }\n      if (ref.current) {\n        // For querying for icons that are not loaded yet. Especially useful for visual testing\n        ref.current.ariaBusy = \"true\";\n      }\n      const svg = await theme\n        .getSvgIcon(path, selected)\n        .catch((e) => {\n          if (fallbackPath) {\n            return theme.getSvgIcon(fallbackPath, selected);\n          }\n          throw e;\n        })\n        .finally(() => {\n          if (ref?.current && !canceled) {\n            ref.current.ariaBusy = \"false\";\n          }\n        });\n      if (svg) {\n        const element = ref?.current;\n        if (!canceled && element) {\n          element.querySelector(\"svg\")?.remove();\n          const svgElement = document.createElement(\"svg\");\n          element.appendChild(svgElement);\n          svgElement.outerHTML = makeIdsUnique(svg); // UNSAFE! Would require sanitization, or icon sources must be trusted.\n        }\n      } else {\n        console.error(\"Could not resolve icon:\", path);\n      }\n    };\n    fetchIcon().catch(console.error);\n    return () => {\n      canceled = true;\n    };\n  }, [path, selected]);\n}\n\n/**\n * If multiple instance of the same icon is rendered at the same time, and the SVG includes\n * url(#...) references to locally defined ids, in some cases the icon is not rendered properly.\n * because of ids colliding. We make sure the ids are unique in each rendered icon.\n */\nfunction makeIdsUnique(svg: string): string {\n  const randomPostfix = (Math.random() * 1000).toFixed(0);\n  const idMatches = svg.matchAll(/id=\"(.*?)\"/g);\n  return [...idMatches].reduce((modifiedSvg, [_, id]) => {\n    const newId = `${id}-${randomPostfix}`;\n    return replaceAll(\n      `id=\"${id}\"`,\n      `id=\"${newId}\"`,\n      replaceAll(`url(#${id})`, `url(#${newId})`, modifiedSvg)\n    );\n  }, svg);\n}\n\nfunction replaceAll(theOld: string, theNew: string, str: string): string {\n  const replaced = str.replace(theOld, theNew);\n  const replacedAgain = replaced.replace(theOld, theNew);\n  if (replaced === replacedAgain) {\n    return replaced;\n  }\n  return replaceAll(theOld, theNew, replacedAgain);\n}\n","import { PressProps, usePress } from \"@react-aria/interactions\";\nimport React, { ForwardedRef, HTMLProps } from \"react\";\nimport { styled } from \"../styled\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport { useFocusable } from \"@react-aria/focus\";\n\nexport interface IconButtonProps\n  extends PressProps,\n    // Maybe we should allow any arbitrary HTMLProps<HTMLButtonElement> props, instead of whitelisting?\n    Pick<\n      HTMLProps<HTMLButtonElement>,\n      \"onFocus\" | \"onBlur\" | \"style\" | \"className\"\n    > {\n  children?: React.ReactNode;\n  /**\n   * The minimum width/height of the button.\n   */\n  minSize?: number;\n  /**\n   * Whether the button should be focusable by pressing tab. The default is true for icon buttons (aka. action buttons),\n   * which means they are not included in the tab order.\n   */\n  excludeFromTabOrder?: boolean;\n}\n\nexport const DEFAULT_MINIMUM_BUTTON_SIZE = 22;\nexport const NAVBAR_MINIMUM_BUTTON_SIZE = 20;\n\nexport const StyledIconButton = styled.button<{ minSize: number }>`\n  position: relative; // to allow absolutely positioned overlays like an dropdown icon at the bottom right corner\n  background: none;\n  color: inherit;\n  border: 1px solid transparent;\n  border-radius: 3px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  min-height: ${({ minSize }) => `${minSize}px`};\n  min-width: ${({ minSize }) => `${minSize}px`};\n  padding: 0;\n  margin: 0;\n  &:disabled {\n    opacity: 0.25; // not quite accurate implementation. There might be better ways to style disabled state.\n  }\n  &:hover:not(:disabled) {\n    background: ${({ theme }) =>\n      theme.color(\"ActionButton.hoverBackground\", \"#DFDFDF\")};\n    border-color: ${({ theme }) =>\n      theme.color(\"ActionButton.hoverBorderColor\", \"#DFDFDF\")};\n  }\n  &:focus-visible:not(:disabled) {\n    outline: none;\n    background: ${({ theme }) =>\n      theme.color(\"ActionButton.pressedBackground\", \"#CFCFCF\")};\n    border-color: ${({ theme }) =>\n      theme.color(\n        \"ActionButton.focusedBorderColor\",\n        theme.dark ? \"#5eacd0\" : \"#62b8de\"\n      )};\n  }\n  &:active:not(:disabled),\n  &.active:not(:disabled) {\n    background: ${({ theme }) =>\n      theme.color(\"ActionButton.pressedBackground\", \"#CFCFCF\")};\n    border-color: ${({ theme }) =>\n      theme.color(\"ActionButton.pressedBorderColor\", \"#CFCFCF\")};\n  }\n`;\n\n/**\n * Icon button, aka Action Button, in the reference implementation.\n * @see https://jetbrains.github.io/ui/controls/icon_button/\n */\nexport const IconButton = React.forwardRef(function IconButton(\n  {\n    minSize = DEFAULT_MINIMUM_BUTTON_SIZE,\n    preventFocusOnPress = true,\n    excludeFromTabOrder = true,\n    isPressed: isPressedInput,\n    isDisabled,\n    onPress,\n    onPressChange,\n    onPressEnd,\n    onPressStart,\n    onPressUp,\n    shouldCancelOnPointerExit,\n    ...otherProps\n  }: IconButtonProps,\n  forwardedRef: ForwardedRef<HTMLButtonElement>\n) {\n  // FIXME: use useButton\n\n  const ref = useObjectRef(forwardedRef);\n  const { focusableProps } = useFocusable({ isDisabled }, ref);\n  const { pressProps, isPressed } = usePress({\n    ref,\n    isPressed: isPressedInput,\n    isDisabled,\n    onPress,\n    onPressChange,\n    onPressEnd,\n    onPressStart,\n    onPressUp,\n    shouldCancelOnPointerExit,\n    preventFocusOnPress,\n  });\n\n  return (\n    <StyledIconButton\n      className={isPressed ? \"active\" : \"\"}\n      disabled={isDisabled}\n      {...mergeProps(pressProps, otherProps, focusableProps)}\n      minSize={minSize}\n      tabIndex={excludeFromTabOrder && !isDisabled ? -1 : undefined}\n      ref={ref}\n    />\n  );\n});\n","import React from \"react\";\nimport { StyledVerticalSeparator } from \"../StyledSeparator\";\nimport { useSeparator } from \"@react-aria/separator\";\n\nexport const ListDivider: React.FC = () => {\n  return (\n    <StyledVerticalSeparator\n      as={\"li\"}\n      {...useSeparator({ elementType: \"li\", orientation: \"vertical\" })\n        .separatorProps}\n    />\n  );\n};\n","import { Item, PartialNode, Section } from \"@react-stately/collections\";\nimport { Item as Item2 } from \"./Item\";\nimport {\n  CollectionBase,\n  CollectionElement,\n  ItemProps,\n  SectionProps,\n} from \"@react-types/shared\";\nimport React from \"react\";\n\nfunction* patchCollectionItem<T>(nodes: Generator<PartialNode<T>>) {\n  for (const partialNode of nodes)\n    yield {\n      ...partialNode,\n      *childNodes() {\n        const result2 = partialNode.childNodes?.();\n        if (result2) {\n          for (const partialChildNode of result2) {\n            const { type, ...partialChildNodeWithoutType } = partialChildNode;\n            yield partialChildNodeWithoutType;\n          }\n        }\n      },\n    };\n}\n\nconst PatchedItem = Item.bind(null);\n\n// @ts-expect-error: getCollectionNode is not public\nPatchedItem.getCollectionNode = function getCollectionNode<T>(\n  props: ItemProps<T>,\n  context: any\n): Generator<PartialNode<T>> {\n  // @ts-expect-error getCollectionNode is not public API\n  return patchCollectionItem(Item.getCollectionNode(props, context));\n};\n\nconst PatchedSection = Section.bind(null);\n\n// @ts-expect-error: getCollectionNode is not public\nPatchedSection.getCollectionNode = function getCollectionNode<T>(\n  props: SectionProps<T>,\n  context: any\n): Generator<PartialNode<T>> {\n  // @ts-expect-error getCollectionNode is not public API\n  return patchCollectionItem(Section.getCollectionNode(props, context));\n};\nfunction convertCollectionElement<T>(\n  result: CollectionElement<T> | React.ReactNode\n): CollectionElement<T> {\n  if (\n    React.isValidElement(result) &&\n    (result.type === Item || result.type === Item2)\n  ) {\n    return React.createElement(\n      PatchedItem,\n      {\n        key: result.key != null ? result.key : undefined,\n        ...(result.props as ItemProps<T>),\n      },\n      convertChildren(result.props.children)\n    ) as CollectionElement<T>;\n  }\n  if (React.isValidElement(result) && result.type === Section) {\n    return React.createElement(\n      PatchedSection,\n      {\n        key: result.key != null ? result.key : undefined,\n        ...(result.props as SectionProps<T>),\n      } as any,\n      convertChildren((result.props as any).children)\n    ) as CollectionElement<T>;\n  }\n  return result as CollectionElement<T>;\n}\n\nfunction convertChildren<T>(children: React.ReactNode): React.ReactNode {\n  return Array.isArray(children)\n    ? // NOTE: We intentionally avoid using React.Children.map as it messes with keys.\n      children.map(convertChildren)\n    : convertCollectionElement(children);\n}\n\n/**\n * CollectionBuilder expects child type to be the same as parent type, which is weird in the first place:\n * https://github.com/adobe/react-spectrum/blob/cae83ff95f2f709b761c70d47ace96d6346ed873/packages/%40react-stately/collections/src/CollectionBuilder.ts#L148\n * On the other hand, the default Item components sets the `type` to item, for all child PartialNode objects:\n * https://github.com/adobe/react-spectrum/blob/c49d9819adc2cb63377f39557352440c72072caf/packages/%40react-stately/collections/src/Item.ts#L40-L54\n * Which is also a little unexpected, as in many nested collections, an item can have all types of children.\n * This function patches that, replacing Item elements with PatchedItem element which doesn't set type on children\n * PartialNodes.\n */\nexport function patchCollectionProps<T>({\n  children,\n  ...props\n}: Partial<CollectionBase<T>>): CollectionBase<T> {\n  return {\n    ...props,\n    children:\n      typeof children === \"function\"\n        ? (node: T) => convertChildren(children(node)) as CollectionElement<T>\n        : (convertChildren(children) as CollectionElement<T>),\n  };\n}\n","import React, { CSSProperties, Key, RefObject, useContext } from \"react\";\nimport { AriaMenuOptions, useMenu as useMenuAria } from \"@react-aria/menu\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { AriaMenuProps } from \"@react-types/menu\";\nimport { Node } from \"@react-types/shared\";\nimport { patchCollectionProps } from \"@intellij-platform/core/Collections/patchCollectionProps\";\nimport { TreeProps, useTreeState } from \"../Tree/useTreeState\"; // shared dependency between tree and menu, that could be lifted up import {Submenu} from '@intellij-platform/core/Menu/Submenu'\nimport { renderMenuNodes } from \"./renderMenuNodes\";\nimport { StyledMenu } from \"./StyledMenu\";\nimport { SubmenuProps } from \"./Submenu\"; // internal export\n\nexport interface MenuProps<T>\n  extends Omit<\n    AriaMenuProps<T>,\n    // selection is not properly supported for nested menus. Plus, it's not even that meaningful for a nested menu\n    // at least the way it's implemented now.\n    | \"onSelectionChange\"\n    | \"defaultSelectedKeys\"\n    | \"selectionMode\"\n    | \"disallowEmptySelection\"\n  > {\n  /**\n   * Indicates currently expanded menu item (controlled).\n   */\n  expandedKey?: Key; // FIXME: should be keys\n  /**\n   * Called when expanded menu item is changed by user interaction, which can be either hovering over the menu item\n   */\n  onExpandedKeyChange?: (expandedKey: Key) => void; // FIXME: should be keys\n  defaultExpandedKey?: Key; // FIXME: should be keys\n  /**\n   * @deprecated\n   */\n  expandOn?: \"hover\" | \"press\"; // hover delay doesn't seem to be needed as an option\n\n  /**\n   * Defines the press behaviour (either by mouse or by pressing Enter when focused) on menu items with submenu.\n   * By default (undefined), pressing or hovering over a menu item with submenu, opens the submenu.\n   * When set to \"toggle\", pressing a menu item with submenu will toggle the submenu. Hovering over such items will\n   * no longer open the submenu.\n   * When set to \"action\", pressing a menu item with submenu will call onAction for that item, and closes the menu.\n   * Hovering over such items will no longer open the submenu.\n   *\n   * In all cases, pressing the right arrow will always open the submenu.\n   */\n  submenuBehavior?: \"default\" | \"toggleOnPress\" | \"actionOnPress\";\n\n  /**\n   * fills the available horizontal or vertical space, when rendered in a flex container.\n   */\n  fillAvailableSpace?: boolean;\n\n  /**\n   * Minimum width of the menu\n   * @default: 120px\n   */\n  minWidth?: CSSProperties[\"minWidth\"];\n}\n\n/**\n * Can be provided by the overlay where the menu is rendered in. If provided, menu will call the provided close function\n * on actions. Note that there is no `closeOnSelect` option as of now, on this context, since no use case seems to exist\n * for keeping the menu overlay open after a menu item is selected.\n * **Update**: there are use cases where the menu is not closed after an item is clicked. Most of the toggle-able\n * actions (the ones with a checkmark) seem to be like this.\n * TODO: Make \"close on selection\" more flexible. Some ideas:\n *  - instead of calling close, pass it to `onAction` handler. Then on each action, one would need to call close if\n *    needed.\n *  - Offer a `MenuItem` component to be used instead of generic `Item`, where it accepts `closeOnSelect` boolean, which\n *    is true by default.\n *  - pass a `keepOpen` function to `onAction`.\n *  - Allow signaling whether the menu should kept open, via the returned value of onAction. e.g. return false means keep open.\n *  Last two suggestions are based on the assumption that most of the menu items are not selectable.\n *  Note that MenuOverlayContext could be used directly in action handlers too, but baking it into the menu makes it\n *  much more convenient, which seems more important than breaking the nice separation between Menu and MenuTrigger.\n */\nexport const MenuOverlayContext = React.createContext<{\n  close: () => void;\n  defaultAutoFocus: MenuProps<unknown>[\"autoFocus\"];\n}>({\n  close: () => {},\n  defaultAutoFocus: undefined,\n});\nexport const MenuContext = React.createContext<\n  Pick<\n    MenuProps<unknown>,\n    \"onClose\" | \"onAction\" | \"submenuBehavior\" | \"autoFocus\"\n  > & {\n    itemWrapper?: (\n      renderedItem: React.ReactNode,\n      item: Node<unknown>\n    ) => React.ReactNode;\n    renderSubmenu?: (props: SubmenuProps<unknown>) => React.ReactNode;\n  }\n>({});\n\nexport function useMenu<T>(\n  {\n    onAction: onActionProp,\n    submenuBehavior = \"default\",\n    ...props\n  }: MenuProps<T> & AriaMenuOptions<T>,\n  state: TreeState<T>,\n  ref: RefObject<HTMLElement>\n) {\n  const { close, defaultAutoFocus } = useContext(MenuOverlayContext);\n  const autoFocus = props.autoFocus ?? defaultAutoFocus;\n  const onClose = () => {\n    props.onClose?.();\n    close();\n  };\n  const onAction = (key: Key) => {\n    if (\n      // The following check should have been in useMenu, but it's not currently. Probably because they haven't yet\n      // covered nested menus.\n      !state.collection.getItem(key)?.hasChildNodes\n    ) {\n      return onActionProp?.(key);\n    } else if (submenuBehavior === \"actionOnPress\") {\n      onClose();\n      return onActionProp?.(key);\n    }\n  };\n  const menuContextValue: React.ContextType<typeof MenuContext> = {\n    submenuBehavior,\n    autoFocus,\n    onAction,\n    onClose,\n  };\n  const { menuProps } = useMenuAria(\n    { ...props, onAction, onClose, autoFocus },\n    state,\n    ref\n  );\n\n  return {\n    menuProps,\n    menuContextValue,\n  };\n}\n\nexport function useMenuState<T extends object>(\n  props: TreeProps<T> &\n    Pick<\n      MenuProps<T>,\n      \"expandedKey\" | \"defaultExpandedKey\" | \"onExpandedKeyChange\"\n    >\n) {\n  props = patchCollectionProps(props);\n  return useTreeState({\n    ...props,\n    childExpansionBehaviour: \"single\",\n    expandedKeys: props.expandedKey ? [props.expandedKey] : undefined,\n    onExpandedChange: ([firstKey]) => props?.onExpandedKeyChange?.(firstKey),\n    defaultExpandedKeys: props.defaultExpandedKey\n      ? [props.defaultExpandedKey]\n      : undefined,\n  });\n}\n\n/**\n * UI for menus which are normally shown in a popover. Being rendered as an overlay is not handled here.\n * Also, there is no coupling with any higher level entity like \"Action\", since this is just for the UI layer.\n * Something like ActionMenu which creates a menu out of a list of actions can be implemented on top of this.\n *\n * @example\n *  <Menu>\n *    <Item>Item one</Item>\n *    <Item>\n *      <MenuItemLayout\n *        icon={<PlatformIcon icon={\"actions/copy\"} />}\n *        content=\"Copy\"\n *        shortcut={\"⌘C\"} />\n *    </Item>\n *  </Menu>\n *\n *  Current issues and limitations:\n *  - Divider in sub-menu's is not supported. because of a constraint in @react-stately/collections, which results in\n *    this error: Unsupported type <Divider> in <Item>. Only <Item> is supported. Maybe supporting section would\n *    be a workaround for it.\n *  - when a parent menu item which has an open submenu is hovered, it gets focus.\n */\nexport function Menu<T extends object>({ minWidth, ...props }: MenuProps<T>) {\n  const ref = React.useRef<HTMLUListElement>(null);\n  const state = useMenuState(props);\n  const { menuContextValue, menuProps } = useMenu(props, state, ref);\n\n  return (\n    /**\n     * MenuContext is used to pass onAction and onClose to be passed to useMenu in submenus.\n     * That's needed because in useMenuItem onAction and onClose are read off a WeakMap which has the menu state\n     * (TreeState) as key. So we have to pass onAction and onClose everytime we call useMenu in submenus, to let the\n     * menu items in that submenu access the right value of onAction and onClose. To avoid drilling these props down,\n     * we keep it in a context.\n     */\n    <MenuContext.Provider value={menuContextValue}>\n      <StyledMenu\n        {...menuProps}\n        ref={ref}\n        style={{ minWidth }}\n        fillAvailableSpace={props.fillAvailableSpace}\n      >\n        {renderMenuNodes(state, [...state.collection])}\n      </StyledMenu>\n    </MenuContext.Provider>\n  );\n}\n","import React, { HTMLAttributes, ReactNode, RefObject, useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { isFocusVisible, useHover, usePress } from \"@react-aria/interactions\";\nimport {\n  AriaMenuItemProps,\n  MenuItemAria,\n  useMenuItem as useMenuItemAria,\n} from \"@react-aria/menu\";\nimport { useOverlayPosition } from \"@react-aria/overlays\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { FocusableElement, Node } from \"@react-types/shared\";\nimport { ItemStateContext } from \"@intellij-platform/core/Collections/ItemStateContext\";\nimport { Overlay } from \"@intellij-platform/core/Overlay\";\n\nimport { LafIcon, PlatformIcon } from \"../Icon\";\nimport { styled } from \"../styled\";\nimport { MenuContext, MenuProps } from \"./Menu\";\nimport { MENU_BORDER_WIDTH, MENU_VERTICAL_PADDING } from \"./StyledMenu\";\nimport {\n  StyledMenuItem,\n  StyledMenuItemIcon,\n  StyledNestedArrow,\n} from \"./StyledMenuItem\";\nimport { Submenu, SubmenuProps } from \"@intellij-platform/core/Menu/Submenu\";\n\nexport interface MenuItemProps<T> {\n  item: Node<T>;\n  state: TreeState<T>;\n  onSubmenuClose?: () => void;\n}\n\nconst StyledMenuItemText = styled.span`\n  flex: 1;\n`;\n\nconst StyledMenuItemPlatformIcon = styled(PlatformIcon)`\n  svg path {\n    stroke: currentColor;\n  }\n`;\n\nconst StyledMenuItemLafIcon = styled(LafIcon)`\n  svg path {\n    stroke: currentColor;\n  }\n`;\n\nfunction useMenuItem<T extends unknown>(\n  {\n    submenuBehavior,\n    ...props\n  }: AriaMenuItemProps & { submenuBehavior: MenuProps<T>[\"submenuBehavior\"] },\n  state: TreeState<T>,\n  ref: RefObject<FocusableElement>\n): MenuItemAria {\n  const item = state.collection.getItem(props.key!)!;\n  const isDisabled = state.disabledKeys.has(item.key);\n  const isExpanded = state.expandedKeys.has(item.key);\n  const hasSubmenu = item.hasChildNodes;\n  const { menuItemProps: ariaMenuItemProps, ...result } = useMenuItemAria(\n    {\n      key: item.key,\n      // hack to prevent react-aria to call onClose when nested items are selected, which is incorrect, and because\n      // react-aria doesn't officially support nested menus at the moment\n      onClose: hasSubmenu ? () => {} : undefined,\n    },\n    state,\n    ref\n  );\n\n  // useMenuItem in react aria utilizes useHover to focus item on hover. The logic there conflicts with nested menus\n  // requirements (at least based on how nested menu is implemented here currently). Also, submenuBehavior requires\n  // some more customization. So we delete the handlers set by useHover in useMenuItem, and add a custom useHover.\n  delete ariaMenuItemProps.onMouseEnter;\n  delete ariaMenuItemProps.onPointerEnter;\n\n  if (submenuBehavior === \"default\" && isExpanded) {\n    // When menu item has its submenu opened, clicking it should not move focus or do anything.\n    delete ariaMenuItemProps.onPointerDown;\n  }\n\n  const { hoverProps } = useHover({\n    isDisabled: isDisabled,\n    onHoverStart: () => {\n      const isAnySubmenuOpen = [...state.expandedKeys].some(\n        (expandedKey) =>\n          state.collection.getItem(expandedKey)?.parentKey === item.parentKey\n      );\n\n      if (submenuBehavior === \"default\" && !isExpanded) {\n        state.toggleKey(item.key);\n      }\n\n      if (!isFocusVisible()) {\n        const shouldFocus =\n          submenuBehavior === \"default\" ? !isExpanded : !isAnySubmenuOpen;\n        if (shouldFocus) {\n          state.selectionManager.setFocused(true);\n        }\n        state.selectionManager.setFocusedKey(item.key);\n      }\n    },\n  });\n\n  const keyboardProps = {\n    onKeyDown: (e: React.KeyboardEvent) => {\n      if (\n        ((e.key === \"Enter\" || e.key === \" \") &&\n          submenuBehavior !== \"actionOnPress\") ||\n        \"ArrowRight\" === e.key\n      ) {\n        state.toggleKey(item.key);\n        e.stopPropagation();\n        return;\n      }\n    },\n  };\n\n  const { pressProps: togglePressProps } = usePress({\n    isDisabled: isDisabled,\n    onPressUp: () => {\n      state.toggleKey(item.key);\n      if (isExpanded) {\n        // submenu was expanded and is closed now. moving focus back to the parent item\n        state.selectionManager.setFocusedKey(item.key);\n      }\n    },\n  });\n\n  return {\n    ...result,\n    menuItemProps: mergeProps(\n      hasSubmenu\n        ? {\n            \"aria-expanded\": isExpanded,\n            \"aria-haspopup\": \"menu\",\n          }\n        : {},\n      ariaMenuItemProps,\n      hoverProps,\n      keyboardProps,\n      submenuBehavior === \"toggleOnPress\" ? togglePressProps : {}\n    ),\n  };\n}\n\nconst MenuItemContext = React.createContext<{\n  labelProps: HTMLAttributes<HTMLElement>;\n  descriptionProps: HTMLAttributes<HTMLElement>;\n  keyboardShortcutProps: HTMLAttributes<HTMLElement>;\n}>({ descriptionProps: {}, labelProps: {}, keyboardShortcutProps: {} });\n\nexport const useMenuItemLayout = () => {\n  return useContext(MenuItemContext);\n};\n\nexport function MenuItem<T>({ item, state }: MenuItemProps<T>) {\n  // Get props for the menu item element\n  const ref = React.useRef<HTMLLIElement>(null);\n  const nestedMenuRef = React.useRef<HTMLDivElement>(null);\n  const isDisabled = state.disabledKeys.has(item.key);\n  const isExpanded = state.expandedKeys.has(item.key);\n  const isSelected = state.selectionManager.selectedKeys.has(item.key);\n  const isFocused = state.selectionManager.focusedKey === item.key;\n  const {\n    onClose,\n    submenuBehavior,\n    renderSubmenu = (props: SubmenuProps<T>) => <Submenu {...props} />,\n    itemWrapper = (i: React.ReactNode) => i,\n  } = useContext(MenuContext);\n\n  const { menuItemProps, labelProps, descriptionProps, keyboardShortcutProps } =\n    useMenuItem(\n      {\n        submenuBehavior,\n        key: item.key,\n      },\n      state,\n      ref\n    );\n\n  const { pressProps: togglePressProps } = usePress({\n    isDisabled: isDisabled,\n    onPressUp: () => {\n      state.toggleKey(item.key);\n      if (isExpanded) {\n        // submenu was expanded and is closed now. moving focus back to the parent item\n        state.selectionManager.setFocusedKey(item.key);\n      }\n    },\n  });\n\n  let { overlayProps: positionProps } = useOverlayPosition({\n    targetRef: ref,\n    overlayRef: nestedMenuRef,\n    placement: \"right top\",\n    shouldFlip: true,\n    onClose,\n    offset: 0,\n    crossOffset: -(MENU_VERTICAL_PADDING + MENU_BORDER_WIDTH),\n    isOpen: isExpanded,\n  });\n\n  const arrowProps: HTMLAttributes<HTMLElement> =\n    submenuBehavior !== \"default\"\n      ? {\n          role: \"button\",\n          \"aria-label\": \"Open\",\n          ...mergeProps(togglePressProps, {\n            // to prevent pointer up event handler on the item, which would trigger action.\n            onPointerUp: (e: React.PointerEvent) => e.stopPropagation(),\n          }),\n        }\n      : {};\n  return (\n    <>\n      <StyledMenuItem\n        {...menuItemProps}\n        isDisabled={isDisabled}\n        isActive={isFocused}\n        ref={ref}\n      >\n        {isSelected && (\n          <StyledMenuItemIcon>\n            <StyledMenuItemLafIcon\n              icon={{\n                name: \"checkmark\",\n                modifiers: { Selected: isFocused },\n              }}\n            />\n          </StyledMenuItemIcon>\n        )}\n        <ItemStateContext.Provider\n          value={{\n            isDisabled,\n            isContainerFocused: state.selectionManager.isFocused,\n            isSelected,\n            node: item,\n          }}\n        >\n          <MenuItemContext.Provider\n            value={{ labelProps, descriptionProps, keyboardShortcutProps }}\n          >\n            {itemWrapper(\n              typeof item.rendered === \"string\" ? (\n                <StyledMenuItemText {...labelProps}>\n                  {item.rendered}\n                </StyledMenuItemText>\n              ) : (\n                item.rendered\n              ),\n              item\n            )}\n          </MenuItemContext.Provider>\n        </ItemStateContext.Provider>\n        {item.hasChildNodes && (\n          <StyledNestedArrow {...arrowProps}>\n            <StyledMenuItemPlatformIcon icon=\"icons/ide/menuArrow\" />\n          </StyledNestedArrow>\n        )}\n      </StyledMenuItem>\n      {isExpanded && (\n        /**\n         * A note about using Overlay:\n         * If sub-menu is not rendered in a portal, useOverlayPosition doesn't work properly and the submenu may\n         * be rendered offscreen. Worse, it may introduce scroll in body (or some scrollable ancestor), which will\n         * trigger a scroll event which closes the menu if the menu is rendered in an overlay (like in MenuTrigger),\n         * which is almost always the case.\n         *\n         */\n        <Overlay\n          OverlayComponent={\n            /**\n             *  The FocusScope included in the default Overlay, messes with a particular expected behavior. So we use\n             *  SimpleOverlay, which just renders its children as a portal. There may be a better solution for that\n             *  problem, which would eliminate the need for the funky `OverlayComponent` prop on our `Overlay`\n             *  component. Something to look into in the future.\n             */\n            SimpleOverlay\n          }\n        >\n          <div ref={nestedMenuRef} {...positionProps}>\n            {renderSubmenu({ parentState: state, rootKey: item.key })}\n          </div>\n        </Overlay>\n      )}\n    </>\n  );\n}\n\n/**\n * A replacement for react-aria Overlay, which doesn't render FocusScope\n */\nfunction SimpleOverlay({\n  children,\n  portalContainer = document.body,\n}: {\n  children: ReactNode;\n  portalContainer?: Element | undefined;\n}) {\n  return ReactDOM.createPortal(children, portalContainer);\n}\n","import React from \"react\";\nimport { ItemStateContext } from \"@intellij-platform/core/Collections/ItemStateContext\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { useContextOrThrow } from \"@intellij-platform/core/utils/useContextOrThrow\";\n\nimport { useMenuItemLayout } from \"./MenuItem\";\nimport { StyledMenuItemIcon } from \"./StyledMenuItem\";\n\ninterface MenuItemLayoutProps {\n  icon?: React.ReactNode;\n  content: React.ReactNode;\n  shortcut?: React.ReactNode;\n}\n\nconst StyledMenuItemLayout = styled.div`\n  display: flex;\n  align-items: center;\n  flex: 1; // to make sure it takes as much space as available in the menu item row, so that the suffix (shortcut) is pushed to the right\n`;\nconst Content = styled.span`\n  flex: 1;\n`;\n\nconst Shortcut = styled.kbd`\n  font-family: system-ui, sans-serif;\n  margin-left: 30px;\n  margin-right: -0.625rem;\n  color: ${({ theme }) =>\n    theme.currentForegroundAware(\n      theme.color(\"MenuItem.acceleratorForeground\")\n    )};\n`;\n\nexport const MenuItemLayout = ({\n  content,\n  shortcut,\n  icon,\n}: MenuItemLayoutProps) => {\n  const { isSelected } = useContextOrThrow(\n    ItemStateContext,\n    \"MenuItemLayout is meant to be rendered in Item component in Menus\"\n  );\n  const { labelProps, keyboardShortcutProps } = useMenuItemLayout();\n  const allowedIcon = !isSelected && icon;\n  return (\n    <StyledMenuItemLayout>\n      {allowedIcon && <StyledMenuItemIcon>{allowedIcon}</StyledMenuItemIcon>}\n      <Content {...labelProps}>{content}</Content>\n      {shortcut && <Shortcut {...keyboardShortcutProps}>{shortcut}</Shortcut>}\n    </StyledMenuItemLayout>\n  );\n};\n","import React, { HTMLProps } from \"react\";\nimport { MenuTriggerState } from \"@react-stately/menu\";\nimport { FocusScope } from \"@intellij-platform/core/utils/FocusScope\";\nimport {\n  MenuOverlayContext,\n  MenuProps,\n} from \"@intellij-platform/core/Menu/Menu\";\nimport { Overlay } from \"@intellij-platform/core/Overlay\";\n\n/**\n * Overlay container for menu. Extracted into a separate component, to be used by components like MenuTrigger or\n * ContextMenuContainer, that need to render a menu as an overlay.\n * @private\n */\nexport function MenuOverlay({\n  children,\n  restoreFocus,\n  overlayProps,\n  overlayRef,\n  defaultAutoFocus,\n  state,\n}: {\n  children: React.ReactNode;\n  restoreFocus?: boolean;\n  overlayProps: HTMLProps<HTMLDivElement>;\n  overlayRef: React.Ref<HTMLDivElement>;\n  /**\n   * Sets the default value of {@link Menu}'s {@link MenuProps#autoFocus} prop.\n   */\n  defaultAutoFocus?: MenuProps<unknown>[\"autoFocus\"];\n  state: MenuTriggerState;\n}) {\n  if (!state.isOpen) {\n    return null;\n  }\n  return (\n    <Overlay>\n      <FocusScope restoreFocus={restoreFocus} autoFocus>\n        <MenuOverlayContext.Provider\n          value={{\n            ...state,\n            defaultAutoFocus,\n          }}\n        >\n          <div {...overlayProps} ref={overlayRef}>\n            {children}\n          </div>\n        </MenuOverlayContext.Provider>\n      </FocusScope>\n    </Overlay>\n  );\n}\n","import React, { HTMLAttributes, RefObject } from \"react\";\nimport { useButton } from \"@react-aria/button\";\nimport { AriaMenuOptions, useMenuTrigger } from \"@react-aria/menu\";\nimport { useOverlay, useOverlayPosition } from \"@react-aria/overlays\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useMenuTriggerState } from \"@react-stately/menu\";\nimport { MenuTriggerProps as AriaMenuTriggerProps } from \"@react-types/menu\";\n\nimport { MenuOverlay } from \"./MenuOverlay\";\nimport { AriaButtonProps } from \"@react-types/button\";\nimport { Alignment } from \"@react-types/shared\";\n\nexport interface MenuTriggerProps\n  extends Omit<AriaMenuTriggerProps, \"closeOnSelect\"> {\n  restoreFocus?: boolean;\n  // TODO: replace render function children with normal children, and utilize PressResponder. Add a story for the\n  //  edge case of custom trigger, using PressResponder\n  children: (\n    props: HTMLAttributes<HTMLButtonElement>,\n    ref: RefObject<any> // Using a generic didn't seem to work for some reason\n  ) => React.ReactNode;\n  // NOTE: there is a chance of unchecked breaking change here, since this is not explicitly mentioned as public API\n  // of useButton, but it is passed to the underlying usePress.\n  preventFocusOnPress?: boolean;\n  /**\n   * By default, the menu is positioned relative to the trigger. `positioningTargetRef` can be used to have the menu\n   * positioned to another element. An example use case is when the menu trigger is a button inside some list item or\n   * text box, but the menu semantically belongs to the container list item or text box.\n   */\n  positioningTargetRef?: React.RefObject<HTMLElement>;\n  renderMenu: (props: {\n    // AriaMenuOptions contains more properties than needed\n    menuProps: Pick<\n      AriaMenuOptions<unknown>,\n      \"id\" | \"aria-labelledby\" | \"autoFocus\" | \"onClose\"\n    >;\n  }) => React.ReactNode;\n\n  /**\n   * Alignment of the menu relative to the trigger.\n   * @default 'start'\n   */\n  align?: Alignment;\n  /**\n   * Where the Menu opens relative to its trigger.\n   * @default 'bottom'\n   */\n  direction?: \"bottom\" | \"top\" | \"left\" | \"right\" | \"start\" | \"end\";\n  /**\n   * Whether the menu should automatically flip direction when space is limited.\n   * @default true\n   */\n  shouldFlip?: boolean;\n}\n\n// FIXME: Escape doesn't close the menu\n// FIXME: Focus is not restored if nested menu are opened. It may be solved by using useOverlay and closing submenu in click outside.\n// FIXME: use PressResponder and replace render prop children with a normal react dom children. Issues with current impl:\n//  disabled trigger doesn't work as expected. props passed to children fn is html props, which is limiting for button\n//  components that don't accept arbitrary dom props.\n/**\n * Makes its children a trigger for a menu, rendered via {@link MenuTriggerProps#renderMenu} prop.\n * Closes the menu when a menu action is triggered.\n */\nexport const MenuTrigger: React.FC<MenuTriggerProps> = ({\n  children,\n  renderMenu,\n  direction = \"bottom\",\n  align = \"start\",\n  shouldFlip = true,\n  restoreFocus = true,\n  preventFocusOnPress = true,\n  positioningTargetRef,\n  ...otherProps\n}) => {\n  const state = useMenuTriggerState(otherProps);\n  const triggerRef = React.useRef(null);\n  const overlayRef = React.useRef(null);\n  // FIXME: Menu props is not used, but it's just about labelBy and id. Only needed for accessibility, but it would\n  //  require a `renderMenu` prop, instead of `menu`.\n  const { menuTriggerProps: triggerProps, menuProps } = useMenuTrigger(\n    { type: \"menu\" },\n    state,\n    triggerRef\n  );\n  const ariaButtonProps: AriaButtonProps<\"button\"> = {\n    ...triggerProps,\n    // @ts-expect-error: preventFocusOnPress is not defined in public API of useButton\n    preventFocusOnPress,\n  };\n  const { buttonProps } = useButton(ariaButtonProps, triggerRef);\n  const { overlayProps } = useOverlay(\n    {\n      onClose: () => {\n        return state.close();\n      },\n      shouldCloseOnBlur: false,\n      isOpen: state.isOpen,\n      isKeyboardDismissDisabled: false,\n      isDismissable: true,\n      shouldCloseOnInteractOutside: (element) => {\n        // FIXME: this is kind of hacky and should be removed when nested menu is properly supported\n        return !element.matches(\"[role=menu] *\");\n      },\n    },\n    overlayRef\n  );\n\n  const { overlayProps: positionProps } = useOverlayPosition({\n    targetRef: positioningTargetRef ?? triggerRef,\n    overlayRef,\n    placement: getPlacement(direction, align),\n    shouldFlip,\n    offset: 0,\n    containerPadding: 0,\n    isOpen: state.isOpen,\n  });\n\n  return (\n    <>\n      {children(buttonProps, triggerRef)}\n      <MenuOverlay\n        overlayProps={mergeProps(overlayProps, positionProps)}\n        overlayRef={overlayRef}\n        state={state}\n        restoreFocus={restoreFocus}\n      >\n        {renderMenu({ menuProps })}\n      </MenuOverlay>\n    </>\n  );\n};\n\nfunction getPlacement(\n  direction: Required<MenuTriggerProps>[\"direction\"],\n  align: Required<MenuTriggerProps>[\"align\"]\n) {\n  switch (direction) {\n    case \"left\":\n    case \"right\":\n    case \"start\":\n    case \"end\":\n      return `${direction} ${align === \"end\" ? \"bottom\" : \"top\"}` as const;\n    case \"bottom\":\n    case \"top\":\n    default:\n      return `${direction} ${align}` as const;\n  }\n}\n","import { css } from \"styled-components\";\n\nimport { WINDOW_SHADOW } from \"../style-constants\";\nimport { styled } from \"../styled\";\nimport { StyledVerticalSeparator } from \"../StyledSeparator\";\nimport { UnknownThemeProp } from \"../Theme/Theme\";\n\nimport { StyledMenuItem, StyledMenuItemIcon } from \"./StyledMenuItem\";\n\nexport const MENU_VERTICAL_PADDING = 5;\nexport const MENU_BORDER_WIDTH = 1;\n\n// noinspection CssInvalidPropertyValue\nexport const StyledMenu = styled.ul<{ fillAvailableSpace?: boolean }>`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  font-size: 0.8rem;\n  margin: 0;\n  padding: ${MENU_VERTICAL_PADDING}px 0;\n  outline: none;\n  list-style: none;\n  width: fit-content;\n  min-width: 120px;\n  overflow: auto;\n  // Border doesn't seem to be painted in the original impl. IdeaPopupMenuUI.isUnderPopup(c) seemed to return false\n  // in all cases. More info: https://github.com/JetBrains/intellij-community/blob/c5ece483811a3ab546fc3880225efb02cc8b94dd/platform/platform-impl/src/com/intellij/ide/ui/laf/darcula/ui/DarculaPopupMenuBorder.java#L24\n  /*  border: ${MENU_BORDER_WIDTH}px solid\n    ${({ theme }) =>\n    theme.color(\"Menu.borderColor\", !theme.dark ? \"#CDCDCD\" : \"#515151\")};*/\n  ${WINDOW_SHADOW};\n  background: ${({ theme }) =>\n    theme.color(\n      \"PopupMenu.background\" as UnknownThemeProp<\"PopupMenu.background\">\n    )};\n  color: ${({ theme }) =>\n    theme.color(\n      \"PopupMenu.foreground\" as UnknownThemeProp<\"PopupMenu.foreground\">\n    )};\n\n  ${StyledVerticalSeparator}:first-child,\n  ${StyledVerticalSeparator}:last-child, \n  ${StyledVerticalSeparator} + ${StyledVerticalSeparator} {\n    display: none;\n  }\n  ${StyledVerticalSeparator} {\n    background-color: ${({ theme }) => theme.color(\"Menu.separatorColor\")};\n    height: ${({ theme }) =>\n      `${theme.value(\"PopupMenuSeparator.height\") ?? 3}px`};\n    padding: ${({ theme }) =>\n      `${theme.value(\"PopupMenuSeparator.stripeIndent\") ?? 1}px 0`};\n    margin: ${({ theme }) =>\n      `0 ${theme.value(\"PopupMenuSeparator.withToEdge\") ?? 1}px`};\n  }\n  ${({ fillAvailableSpace }) =>\n    fillAvailableSpace &&\n    css`\n      flex: 1;\n      width: fill-available; // will be converted to --webkit-fill-available and --moz-available, but doesn't work in FF\n      height: fill-available;\n    `}\n\n  --jui-menu-item-padding: 1rem;\n  --jui-menu-item-icon-width: 1rem;\n  --jui-menu-item-icon-spacing: 0.3125rem;\n\n  ${StyledMenuItem} {\n    // NOTE: The left margin seems not to be consistent in all menus.\n    padding-left: var(--jui-menu-item-padding);\n  }\n  &:has(${StyledMenuItemIcon}) {\n    // Adjusting item padding for menus with icon to be slightly smaller. Based on observations on the reference impl.\n    // Could be handled by a negative margin on icons as well.\n    --jui-menu-item-padding: 0.75rem;\n\n    // CSS-only solution to conditionally add left margin to menu items without icon, if there is at least one menu item\n    // with icon, in the current menu. To have text in all menu items aligned. The extra margin is avoided if there is no\n    // menu item with icon. It relies on :has() css pseudo-class which is not supported in FF at the moment.\n    ${StyledMenuItem}:not(:has(${StyledMenuItemIcon})) {\n      padding-left: calc(\n        var(--jui-menu-item-padding) + var(--jui-menu-item-icon-width) +\n          var(--jui-menu-item-icon-spacing)\n      );\n    }\n  }\n  ${StyledMenuItemIcon} {\n    width: var(--jui-menu-item-icon-width);\n    margin-right: var(--jui-menu-item-icon-spacing);\n  }\n`;\n","import { css, styled } from \"@intellij-platform/core/styled\";\n\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nexport const StyledMenuItemIcon = styled.span`\n  display: inline-flex; // prevents unwanted increased height\n`;\n\nexport const StyledNestedArrow = styled.span`\n  display: inline-flex; // to make it not take more height than the icon\n  margin-right: -0.75rem;\n  margin-left: 0.75rem;\n`;\n\nconst highlightedStyle = css`\n  color: ${({ theme }) =>\n    theme.asCurrentForeground(\n      theme.color(\n        \"MenuItem.selectionForeground\" as UnknownThemeProp<\"MenuItem.selectionForeground\">\n      )\n    )};\n  background: ${({ theme }) =>\n    theme.color(\n      \"MenuItem.selectionBackground\" as UnknownThemeProp<\"MenuItem.selectionBackground\">\n    )};\n`;\nconst defaultStyle = css`\n  color: ${({ theme }) =>\n    theme.color(\n      \"MenuItem.foreground\" as UnknownThemeProp<\"MenuItem.foreground\">\n    )};\n  background: unset;\n`;\nconst disabledStyle = css`\n  color: ${({ theme }) =>\n    theme.color(\"MenuItem.disabledForeground\") + \"!important\"};\n  background: unset !important;\n`;\nexport const StyledMenuItem = styled.li<{\n  isDisabled: boolean;\n  isActive: boolean;\n}>`\n  position: relative; // for being able to position arrow icon absolutely\n  outline: none;\n  cursor: default;\n  white-space: nowrap;\n\n  // bg/fg style for different states. Order is based on how they should override each other\n  ${defaultStyle};\n  ${({ isActive }) => isActive && highlightedStyle};\n  ${({ isDisabled }) => isDisabled && disabledStyle};\n\n  padding-right: 1.25rem;\n  line-height: 1.3125rem; // to make the item have the right height\n  display: flex;\n  align-items: center;\n`;\n","import React, { useContext, useEffect, useRef } from \"react\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { AriaMenuOptions, useMenu } from \"@react-aria/menu\";\nimport { mergeProps } from \"@react-aria/utils\";\n\nimport {\n  MenuKeyboardDelegate,\n  useSubmenu as useSubmenuAria,\n} from \"./_useSubmenu\";\nimport { useSubmenuState } from \"./_useSubmenuState\";\nimport { MenuContext } from \"./Menu\";\nimport { StyledMenu } from \"./StyledMenu\";\nimport { renderMenuNodes } from \"./renderMenuNodes\";\n\nexport function useSubmenu<T>(\n  {\n    rootKey,\n    parentState,\n    keyboardDelegate,\n  }: { rootKey: React.Key; parentState: TreeState<T> } & Pick<\n    AriaMenuOptions<T>,\n    \"keyboardDelegate\"\n  >,\n  state: TreeState<T>,\n  ref: React.RefObject<HTMLElement>\n) {\n  const rootItem = state.collection.getItem(rootKey);\n  const {\n    submenuBehavior,\n    autoFocus = true,\n    onClose,\n    onAction,\n  } = useContext(MenuContext);\n  let { menuProps } = useMenu(\n    {\n      \"aria-label\": rootItem?.[\"aria-label\"] || rootItem?.textValue,\n      onAction,\n      onClose,\n      selectedKeys: state.selectionManager.selectedKeys,\n      keyboardDelegate:\n        keyboardDelegate ||\n        new MenuKeyboardDelegate(\n          rootKey,\n          state.collection,\n          state.disabledKeys,\n          ref\n        ),\n      autoFocus,\n    },\n    state,\n    ref\n  );\n  const { submenuProps } = useSubmenuAria({ rootKey }, parentState, ref);\n\n  const submenuBehaviorProps = {\n    onKeyDown: (e: React.KeyboardEvent) => {\n      if (e.key === \"Escape\") {\n        // Close the menu and submenu root node.\n        state.toggleKey(rootKey);\n        state.selectionManager.setFocusedKey(rootKey);\n        parentState.selectionManager.setFocused(true);\n        if (submenuBehavior !== \"default\") {\n          e.stopPropagation();\n        }\n        return;\n      }\n    },\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      // we need this hack until the nested menu is properly supported. That's because when the element is hovered\n      // it sets the focus key, which will move focus to that item.\n      // noinspection PointlessBooleanExpressionJS seems to be false positive. autoFocus can be \"first\" or \"last\"\n      if (autoFocus === true) {\n        ref.current?.focus();\n      }\n    });\n  }, []);\n\n  return {\n    submenuProps: mergeProps(menuProps, submenuProps, submenuBehaviorProps),\n  };\n}\n\nexport interface SubmenuProps<T> {\n  parentState: TreeState<T>;\n  rootKey: React.Key;\n}\n\nexport function Submenu<T>({ parentState, rootKey }: SubmenuProps<T>) {\n  const ref = useRef<HTMLUListElement>(null);\n  const state = useSubmenuState(parentState);\n  const rootItem = state.collection.getItem(rootKey);\n\n  const { submenuProps } = useSubmenu({ rootKey, parentState }, state, ref);\n\n  return (\n    <StyledMenu {...submenuProps} ref={ref}>\n      {renderMenuNodes(state, [...(rootItem?.childNodes || [])])}\n    </StyledMenu>\n  );\n}\n","import { Collection, Node } from \"@react-types/shared\";\nimport { TreeState } from \"@react-stately/tree\";\nimport React, { Key, RefObject } from \"react\";\nimport { useKeyboard } from \"@react-aria/interactions\";\nimport { ListKeyboardDelegate } from \"@react-aria/selection\";\n\nexport class MenuKeyboardDelegate<T> extends ListKeyboardDelegate<T> {\n  private keys: React.Key[];\n  constructor(\n    rootKey: Key | null,\n    private collection: Collection<Node<T>>,\n    disabledKeys: Set<React.Key>,\n    ref: React.RefObject<HTMLElement>,\n    collator?: Intl.Collator\n  ) {\n    super(collection, disabledKeys, ref, collator);\n    this.keys = [...collection.getKeys()]\n      .map((key) => collection.getItem(key))\n      .flatMap((item) => {\n        if (item && item.parentKey == rootKey) {\n          if (item.type === \"item\") {\n            return [item.key];\n          } else if (item.type === \"section\") {\n            return [...item.childNodes].map(({ key }) => key);\n          }\n        }\n        return [];\n      });\n  }\n\n  getFirstKey(): React.Key {\n    return this.keys[0];\n  }\n  getLastKey(): React.Key {\n    return this.keys.slice(-1)[0];\n  }\n\n  getKeyBelow(key: React.Key): React.Key {\n    const keyBelow = super.getKeyBelow(key);\n    // @ts-expect-error: getKeyBelow should be allowed to return null, but typing is currently inaccurate in react-aria\n    return this.keys.includes(keyBelow) ? keyBelow : null;\n  }\n  getKeyAbove(key: React.Key): React.Key {\n    const keyAbove = super.getKeyAbove(key);\n    // @ts-expect-error: getKeyBelow should be allowed to return null, but typing is currently inaccurate in react-aria\n    return this.keys.includes(keyAbove) ? keyAbove : null;\n  }\n}\n\n/**\n * Behavior accessibility of submenus:\n * - Closing submenu on ArrowLeft key press.\n *   Note that it can't be implemented in useMenuItem, because the focus might be on no the submenu itself and not any\n *   of its items\n * @param rootKey: Key of the root node, the submenu is created from its children\n * @param state\n * @param ref\n */\nexport function useSubmenu<T>(\n  { rootKey }: { rootKey: Key },\n  state: TreeState<T>,\n  ref: RefObject<HTMLElement>\n) {\n  const { keyboardProps: submenuProps } = useKeyboard({\n    onKeyDown: (e) => {\n      // Keyboard events bubble through portals. Don't handle keyboard events\n      // for elements outside the collection (e.g. menus).\n      if (!ref.current?.contains(e.target as Element)) {\n        e.continuePropagation();\n        return;\n      }\n      const root = state.collection.getItem(rootKey);\n      if (e.key === \"ArrowLeft\" && root && state.expandedKeys.has(root.key)) {\n        state.toggleKey(root.key);\n        state.selectionManager.setFocused(true);\n        return;\n      }\n      e.continuePropagation();\n    },\n  });\n\n  return {\n    submenuProps,\n  };\n}\n","import { TreeState } from \"@react-stately/tree\";\nimport { Key, useRef, useState } from \"react\";\nimport {\n  MultipleSelectionState,\n  SelectionManager,\n} from \"@react-stately/selection\";\n\n/**\n * Creates a TreeState corresponding to the submenu, from the state of a parent (sub)menu.\n * The collection and everything is the same, and the only difference from the parent state is selection manager\n * having a separate focused state to keep the focused state of each menu container separately, as the submenus\n * are usually rendered in separate overlays.\n */\nexport function useSubmenuState<T>(parentState: TreeState<T>) {\n  // We want synchronous updates to `isFocused` and `focusedKey` after their setters are called.\n  // But we also need to trigger a re-render. So, we have both a ref (sync) and state (async).\n  const [, setFocused] = useState(false);\n  const [, setFocusedKey] = useState<Key | null>(null);\n  const isFocusedRef = useRef(false);\n  const focusedKeyRef = useRef<Key | null>(null);\n\n  const state: MultipleSelectionState = {\n    // @ts-expect-error state is private\n    ...parentState.selectionManager.state,\n    setFocused: (isFocused: boolean) => {\n      isFocusedRef.current = isFocused;\n      setFocused(isFocused);\n    },\n    setFocusedKey(key: Key) {\n      focusedKeyRef.current = key;\n      setFocusedKey(key);\n    },\n  };\n  Object.defineProperties(state, {\n    isFocused: {\n      get() {\n        return isFocusedRef.current;\n      },\n    },\n    focusedKey: {\n      get() {\n        return focusedKeyRef.current!;\n      },\n    },\n  });\n\n  return {\n    ...parentState,\n    selectionManager: new SelectionManager(parentState.collection, state),\n  };\n}\n","import React from \"react\";\nimport { useMenuSection } from \"@react-aria/menu\";\nimport { Node } from \"@react-types/shared\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { styled } from \"@intellij-platform/core/styled\";\n\nimport { renderMenuNodes } from \"./renderMenuNodes\";\n\nexport interface MenuSectionProps<T> {\n  item: Node<T>;\n  state: TreeState<T>;\n  filter?: (node: Node<T>) => boolean;\n}\n\nconst StyledMenuHeading = styled.div`\n  cursor: default;\n  padding: 2px 0 2px 12px;\n  font-weight: bold;\n  font-size: 0.8125rem;\n  color: ${({ theme }) =>\n    theme.color(\n      \"MenuItem.disabledForeground\"\n    )}; // TODO: make sure about it. It's probably not correct color\n`;\n\nconst StyledMenuSectionItemsContainer = styled.ul`\n  padding: 0;\n  margin: 0;\n`;\n\nexport const MenuSection = <T extends unknown>({\n  item,\n  state,\n  filter = () => true,\n}: MenuSectionProps<T>): React.ReactElement => {\n  let { itemProps, headingProps, groupProps } = useMenuSection({\n    heading: item.rendered,\n    \"aria-label\": item[\"aria-label\"],\n  });\n\n  const nodes = [...item.childNodes].filter(filter);\n  if (nodes.filter(({ type }) => type === \"item\").length === 0) {\n    return <></>;\n  }\n  return (\n    <>\n      <li {...itemProps}>\n        {item.rendered && (\n          <StyledMenuHeading {...headingProps}>\n            {item.rendered}\n          </StyledMenuHeading>\n        )}\n        <StyledMenuSectionItemsContainer {...groupProps}>\n          {renderMenuNodes(state, nodes)}\n        </StyledMenuSectionItemsContainer>\n      </li>\n    </>\n  );\n};\n","import React from \"react\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { Node } from \"@react-types/shared\";\nimport { ListDivider } from \"@intellij-platform/core/List/ListDivider\"; // private import\n\nimport { MenuItem } from \"./MenuItem\";\nimport { MenuSection } from \"./MenuSection\";\n\nexport function renderMenuNodes<T>(\n  state: TreeState<T>,\n  nodes: Node<T>[],\n  filter: (node: Node<T>) => boolean = () => true\n) {\n  return nodes.filter(filter).map((node) => {\n    switch (node.type) {\n      case \"item\":\n        return <MenuItem key={node.key} item={node} state={state} />;\n      case \"section\":\n        return (\n          <>\n            {node.props.hasDivider && (\n              <ListDivider key={node.key + \"-divider\"} />\n            )}\n            <MenuSection\n              key={node.key}\n              item={node}\n              state={state}\n              filter={filter}\n            />\n          </>\n        );\n      case \"divider\":\n        return <ListDivider key={node.key} />;\n    }\n  });\n}\n","import React, { useContext, useRef } from \"react\";\nimport { Overlay as AriaOverlay, OverlayProps } from \"@react-aria/overlays\";\n\nconst ParentOverlayContext = React.createContext<HTMLElement | null>(null);\n\n/**\n * A (drop-in replacement) wrapper around Overlay, which makes sure overlays created in nested\n * react components will be ported to the same top level container. This is especially useful to detect\n * \"outside clicks\" when overlays are nested. The most common example would be nested menu in popup.\n *\n */\nexport function Overlay({\n  children,\n  OverlayComponent = AriaOverlay,\n}: {\n  children: React.ReactNode;\n  OverlayComponent?: React.ComponentType<OverlayProps>;\n}) {\n  const root = useContext(ParentOverlayContext);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  if (root) {\n    return (\n      <OverlayComponent portalContainer={root}>{children}</OverlayComponent>\n    );\n  }\n  return (\n    <ParentOverlayContext.Provider value={containerRef.current}>\n      <OverlayComponent>\n        <div ref={containerRef} data-overlay-root=\"\">\n          {children}\n        </div>\n      </OverlayComponent>\n    </ParentOverlayContext.Provider>\n  );\n}\n\n/**\n * Returns true, if element1 and element2 are in nested overlays. \"Nested\" being in terms of React component tree.\n * Useful for detecting \"outside click\" when overlay components are nested in each other.\n */\nexport function areInNestedOverlays(\n  element1: Element | null,\n  element2: Element | null\n) {\n  const overlayRoot1 = element1?.closest(\"[data-overlay-root]\");\n  const overlayRoot2 = element2?.closest(\"[data-overlay-root]\");\n  return Boolean(overlayRoot1) && overlayRoot1 === overlayRoot2;\n}\n","import React from \"react\";\nimport { styled } from \"./styled\";\n\ntype SeparatorUI = {\n  STRIPE_INDENT: number;\n  STRIPE_WIDTH: number;\n};\n\n// based on implementation in com.intellij.ide.ui.laf.darcula.ui.DarculaSeparatorUI, which seems to be used for all themes\nconst DarculaSeparatorUI: SeparatorUI = {\n  STRIPE_INDENT: 1,\n  STRIPE_WIDTH: 1,\n};\n\nconst defaultSize =\n  2 * DarculaSeparatorUI.STRIPE_INDENT + DarculaSeparatorUI.STRIPE_WIDTH;\n\nexport const StyledSeparator = styled.hr(({ theme }) => ({\n  backgroundColor: theme.color(\n    \"Separator.separatorColor\",\n    theme.dark ? \"#cdcdcd\" : \"#515151\"\n  ),\n  backgroundClip: \"content-box\",\n  boxSizing: \"border-box\",\n  margin: 0,\n  border: \"none\",\n  flexShrink: 0,\n}));\n\nexport const StyledHorizontalSeparator = styled(StyledSeparator)`\n  height: inherit; // should it be auto?\n  padding: 0 ${DarculaSeparatorUI.STRIPE_INDENT}px;\n  width: ${defaultSize}px;\n`;\nexport const StyledVerticalSeparator = styled(StyledSeparator)`\n  width: auto;\n  padding: ${DarculaSeparatorUI.STRIPE_INDENT}px 0;\n  height: ${defaultSize}px;\n`;\n","import { TabCloseButton } from \"@intellij-platform/core/Tabs/TabCloseButton\";\nimport { TabContentLayout } from \"@intellij-platform/core/Tabs/TabContentLayout\";\nimport React from \"react\";\n\nexport const DebuggerTabContent = ({\n  icon,\n  title,\n  closeButton,\n}: {\n  icon: React.ReactNode;\n  title: React.ReactNode;\n  /**\n   * Close button for the tab. Use {@link TabCloseButton} to render the close button\n   * for the tab.\n   *\n   * @example\n   * ```tsx\n   * <DebuggerTabContent\n   *   closeButton={\n   *     <TooltipTrigger\n   *       tooltip={<ActionTooltip actionName=\"Close Tab\" shortcut=\"^⇧F4\" />}\n   *     >\n   *       <TabCloseButton onPress={}></TabCloseButton>\n   *     </TooltipTrigger>\n   *   }\n   * />\n   * ```\n   */\n  closeButton?: React.ReactElement;\n}) => {\n  return (\n    <TabContentLayout startIcon={icon} title={title} endIcon={closeButton} />\n  );\n};\n","import { Theme } from \"@intellij-platform/core/Theme\";\nimport { styled } from \"@intellij-platform/core/styled\";\n\nimport { StyledDefaultTab } from \"@intellij-platform/core/Tabs/StyledDefaultTab\";\nimport {\n  getTabThemeStyles,\n  TabTheme,\n} from \"@intellij-platform/core/Tabs/TabTheme\";\n\nexport const debuggerTabTheme = ({ theme }: { theme: Theme }): TabTheme => ({\n  underlineHeight: theme.value<number>(\"DebuggerTabs.underlineHeight\") ?? 2,\n  underlinedTabBackground: theme.color(\"DebuggerTabs.underlinedTabBackground\"),\n});\nexport const StyledDebuggerTab = styled(StyledDefaultTab)`\n  ${({ theme }) => getTabThemeStyles(debuggerTabTheme({ theme }))};\n`;\n","import { Tabs, TabsProps } from \"@intellij-platform/core/Tabs/Tabs\";\nimport { StyledDebuggerTab } from \"./StyledDebuggerTab\";\nimport React from \"react\";\n\ntype DebuggerTabsProps<T extends object> = Omit<\n  TabsProps<T>,\n  \"TabComponent\" | \"focusable\"\n>;\n\nexport const DebuggerTabs = <T extends object>(props: DebuggerTabsProps<T>) => (\n  <Tabs {...props} TabComponent={StyledDebuggerTab} focusable={false} />\n);\n","import React from \"react\";\nimport { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport { TabCloseButton } from \"@intellij-platform/core/Tabs/TabCloseButton\";\nimport {\n  TabContentLayout,\n  TabItemLayoutProps,\n} from \"@intellij-platform/core/Tabs/TabContentLayout\";\nimport { ActionTooltip, TooltipTrigger } from \"@intellij-platform/core/Tooltip\";\nimport { BareButton } from \"@intellij-platform/core/Button\";\n\ninterface EditorTabContentProps {\n  icon: React.ReactNode;\n  title: React.ReactNode;\n  /**\n   * Close button, shown in place of \"pin\" button if not pinned. Use {@link TabCloseButton} to render the close button\n   * for the tab.\n   *\n   * @example\n   * ```tsx\n   * <EditorTabContent\n   *   closeButton={\n   *     <TooltipTrigger\n   *       tooltip={<ActionTooltip actionName=\"Close Tab\" shortcut=\"^⇧F4\" />}\n   *     >\n   *       <TabCloseButton onPress={}></TabCloseButton>\n   *     </TooltipTrigger>\n   *   }\n   * />\n   * ```\n   */\n  closeButton?: React.ReactElement;\n  onUnpin?: () => void;\n  pinned?: boolean;\n  containerProps?: TabItemLayoutProps[\"containerProps\"];\n}\n/**\n * For rendering the content of Editor tabs. supports for file icon which is shown on the left and close or unpin\n * button shown on the right.\n */\nexport const EditorTabContent = ({\n  icon,\n  title,\n  closeButton,\n  onUnpin,\n  pinned,\n  containerProps,\n}: EditorTabContentProps) => {\n  return (\n    <TabContentLayout\n      startIcon={icon}\n      title={title}\n      containerProps={containerProps}\n      endIcon={\n        pinned ? (\n          <TooltipTrigger tooltip={<ActionTooltip actionName=\"Unpin Tab\" />}>\n            <BareButton\n              onPress={onUnpin}\n              excludeFromTabOrder\n              preventFocusOnPress\n            >\n              <PlatformIcon icon=\"actions/pinTab\" />\n            </BareButton>\n          </TooltipTrigger>\n        ) : (\n          closeButton\n        )\n      }\n    />\n  );\n};\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { Theme, UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { StyledDefaultTab } from \"@intellij-platform/core/Tabs/StyledDefaultTab\";\nimport {\n  getTabThemeStyles,\n  TabTheme,\n} from \"@intellij-platform/core/Tabs/TabTheme\";\n\nexport const editorTabTheme = ({ theme }: { theme: Theme }): TabTheme => ({\n  borderColor: theme.color(\"EditorTabs.borderColor\"),\n  underlineHeight: theme.value<number>(\"EditorTabs.underlineHeight\"),\n  background: theme.color(\"EditorTabs.background\"),\n  underlinedTabInactiveBackground: theme.color(\n    \"EditorTabs.underlinedTabBackground\" // that's correctly not underlinedTabInactiveBackground!\n  ), // TODO: use EditorColorsScheme when available\n  underlinedTabBackground: theme.color(\"EditorTabs.underlinedTabBackground\"), // TODO: use EditorColorsScheme when available\n  hoverInactiveBackground: theme.color(\n    \"EditorTabs.hoverInactiveBackground\" as UnknownThemeProp<\"EditorTabs.hoverInactiveBackground\">\n  ),\n  hoverBackground: theme.color(\"EditorTabs.hoverBackground\"),\n  inactiveUnderlineColor: theme.color(\"EditorTabs.inactiveUnderlineColor\"), // TODO: use EditorColorsScheme when available\n  underlineColor: theme.color(\"EditorTabs.underlineColor\"), // TODO: use EditorColorsScheme when available\n\n  underlinedTabInactiveForeground: theme.color(\n    \"EditorTabs.underlinedTabForeground\" // that's correctly not underlinedTabInactiveForeground!\n  ), // TODO: use EditorColorsScheme when available\n  underlinedTabForeground: theme.color(\"EditorTabs.underlinedTabForeground\"), // TODO: use EditorColorsScheme when available\n});\nexport const StyledEditorTab = styled(StyledDefaultTab)`\n  font-size: 0.7rem;\n  ${({ theme }) => getTabThemeStyles(editorTabTheme({ theme }))};\n`;\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { getTabsThemeStyles } from \"@intellij-platform/core/Tabs/TabTheme\";\nimport { StyledDefaultTabs } from \"@intellij-platform/core/Tabs/StyledDefaultTabs\";\nimport { editorTabTheme } from \"./StyledEditorTab\";\n\nexport const StyledEditorTabs = styled(StyledDefaultTabs)`\n  ${({ theme }) => getTabsThemeStyles(editorTabTheme({ theme }))};\n`;\n","import { Tabs, TabsProps } from \"@intellij-platform/core/Tabs/Tabs\";\nimport { StyledEditorTab } from \"./StyledEditorTab\";\nimport { StyledEditorTabs } from \"./StyledEditorTabs\";\nimport React from \"react\";\n\nexport type EditorTabsProps<T extends object> = Omit<\n  TabsProps<T>,\n  \"TabComponent\" | \"TabsComponent\" | \"focusable\"\n>;\n\nexport const EditorTabs = <T extends object>(props: EditorTabsProps<T>) => (\n  <Tabs\n    {...props}\n    TabComponent={StyledEditorTab}\n    TabsComponent={StyledEditorTabs}\n    focusable={false}\n  />\n);\n","import { getTabThemeStyles } from \"./TabTheme\";\nimport { styled } from \"../styled\";\nimport { Theme, UnknownThemeProp } from \"../Theme\";\n\nexport type StyledTabProps = {\n  selected?: boolean;\n  disabled?: boolean;\n  active?: boolean;\n};\n\nconst defaultTabTheme = ({ theme }: { theme: Theme }) =>\n  getTabThemeStyles({\n    underlineHeight: theme.value<number>(\"DefaultTabs.underlineHeight\") ?? 3,\n    inactiveUnderlineColor: theme.color(\n      \"DefaultTabs.inactiveUnderlineColor\",\n      theme.dark ? \"#747a80\" : \"#9ca7b8\"\n    ),\n    underlineColor: theme.color(\n      \"DefaultTabs.underlineColor\",\n      theme.dark ? \"#4A88C7\" : \"#4083C9\"\n    ),\n\n    underlinedTabInactiveForeground: theme.color(\n      \"DefaultTabs.underlinedTabInactiveForeground\" as UnknownThemeProp<\"DefaultTabs.underlinedTabInactiveForeground\">\n    ),\n    underlinedTabForeground: theme.color(\"DefaultTabs.underlinedTabForeground\"),\n\n    background: theme.color(\n      \"DefaultTabs.background\",\n      theme.dark ? \"#3C3F41\" : \"#ECECEC\"\n    ),\n    underlinedTabInactiveBackground: theme.color(\n      \"DefaultTabs.underlinedTabInactiveBackground\" as UnknownThemeProp<\"DefaultTabs.underlinedTabInactiveBackground\">\n    ),\n    underlinedTabBackground: theme.color(\n      \"DefaultTabs.underlinedTabBackground\" as UnknownThemeProp<\"DefaultTabs.underlinedTabBackground\">\n    ),\n    hoverInactiveBackground: theme.color(\n      \"DefaultTabs.hoverInactiveBackground\" as UnknownThemeProp<\"DefaultTabs.hoverInactiveBackground\">,\n      theme.dark ? \"rgba(0,0,0,.35)\" : \"rgba(0,0,0,.1)\"\n    ),\n    hoverBackground: theme.color(\n      \"DefaultTabs.hoverBackground\",\n      theme.dark ? \"rgba(0,0,0,.35)\" : \"rgba(0,0,0,.1)\"\n    ),\n  });\n\nexport const StyledDefaultTab = styled.div<StyledTabProps>`\n  box-sizing: border-box;\n  display: inline-flex;\n  letter-spacing: 0.015rem;\n  font-size: 0.85rem;\n  cursor: default;\n  white-space: nowrap;\n\n  // spacing\n  padding: 0 0.5rem;\n  line-height: 1.7rem; // vertical spacing handled by line-height\n\n  // disabled state doesn't seem to be supported in Intellij Platform at all.\n  opacity: ${({ disabled }) => (disabled ? \".5\" : \"1\")};\n  color: ${({ theme }) =>\n    theme.color(\n      \"DefaultTabs.foreground\" as UnknownThemeProp<\"DefaultTabs.foreground\">\n    )};\n\n  position: relative;\n  &::after {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    left: 0;\n    bottom: 0;\n  }\n\n  ${defaultTabTheme};\n`;\n","import { Theme } from \"../Theme\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { getTabsThemeStyles } from \"./TabTheme\";\n\nconst defaultTabsTheme = ({ theme }: { theme: Theme }) =>\n  getTabsThemeStyles({\n    borderColor: theme.color(\n      \"DefaultTabs.borderColor\",\n      theme.commonColors.contrastBorder\n    ),\n    background: theme.color(\"DefaultTabs.background\"),\n  });\n\nexport const StyledDefaultTabs = styled.div<{ noBorders?: boolean }>`\n  display: flex;\n  align-items: center;\n  box-sizing: border-box;\n  border-style: solid;\n  border-width: ${({ noBorders }) => (noBorders ? \"0\" : \"1px 0\")};\n\n  ${defaultTabsTheme};\n`;\n","import React, { ForwardedRef, HTMLProps } from \"react\";\nimport { css, styled } from \"../styled\";\nimport { useFocusable } from \"@react-aria/focus\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\n\nconst StyledTabItemLayout = styled.div`\n  display: inline-flex;\n  align-items: center;\n`;\n\nconst iconStyle = css`\n  display: inline-flex; // without this, the wrapper takes the full height, causing icon to be placed on top\n  margin-top: -0.1rem; // seems necessary for pixel perfect match with the original impl\n`;\n\nconst StyledStartIconWrapper = styled.span`\n  ${iconStyle};\n  margin-right: 0.25rem;\n`;\n\nconst StyledEndIconWrapper = styled.span`\n  ${iconStyle};\n  margin-left: 0.25rem;\n  margin-right: -0.25rem; // default padding of the tab should be a little reduced when close icon is there.\n  border-radius: 16px;\n`;\n\nexport interface TabItemLayoutProps {\n  /**\n   * the icon placed before the text.\n   */\n  startIcon?: React.ReactNode;\n  /**\n   * title of the tab. Normally just a string\n   */\n  title?: React.ReactNode;\n  /**\n   * the icon placed after the text. Typical use cases: close or pin icon.\n   */\n  endIcon?: React.ReactNode;\n\n  /**\n   * Generic HTML props passed to the container div.\n   */\n  containerProps?: Omit<HTMLProps<HTMLDivElement>, \"ref\" | \"as\">;\n}\n\n/**\n * Helper component for rendering the common layout of tab content.\n */\nexport const TabContentLayout = React.forwardRef(\n  (\n    { startIcon, title, endIcon, containerProps = {} }: TabItemLayoutProps,\n    ref: ForwardedRef<HTMLDivElement>\n  ) => {\n    // To allow tooltip be used easily. TooltipTrigger passes props via FocusableContext.\n    const { focusableProps } = useFocusable({}, useObjectRef(ref));\n    return (\n      <StyledTabItemLayout\n        {...mergeProps(focusableProps, containerProps)}\n        ref={ref}\n      >\n        {startIcon && (\n          <StyledStartIconWrapper>{startIcon}</StyledStartIconWrapper>\n        )}\n        {title}\n        {endIcon && <StyledEndIconWrapper>{endIcon}</StyledEndIconWrapper>}\n      </StyledTabItemLayout>\n    );\n  }\n);\n","import { ItemProps } from \"@react-types/shared\";\nimport { Item } from \"@react-stately/collections\";\nimport React from \"react\";\n\nexport interface TabItemProps extends ItemProps<never> {\n  /**\n   * Determines how the tab item should look when rendered as a menu item in overflow menu.\n   * If not passed, `textValue` will be used.\n   * @example\n   * <TabItem\n   *   key={tab.id}\n   *   textValue={tab.title}\n   *   inOverflowMenu={\n   *     <MenuItemLayout content={tab.title} icon={icon} />\n   *   }\n   *  >\n   *   <TabContentLayout startIcon={icon} title={tab.title} />\n   * </TabItem>\n   */\n  inOverflowMenu?: React.ReactNode;\n}\n\n/**\n * Same as {@link Item}, but allows for specifying the tab content for when it's rendered in the overflow menu item.\n */\nexport const TabItem: (props: TabItemProps) => React.ReactElement = Item;\n","import { css } from \"@intellij-platform/core/styled\";\nimport { StyledTabProps } from \"./StyledDefaultTab\";\n\n/**\n * Describes theme-able properties of a tab, which can then be passed to {@link getTabThemeStyles}\n */\nexport interface TabTheme {\n  underlineHeight?: number;\n\n  borderColor?: string;\n\n  inactiveUnderlineColor?: string;\n  underlineColor?: string;\n\n  underlinedTabInactiveForeground?: string;\n  underlinedTabForeground?: string;\n\n  background?: string;\n  underlinedTabBackground?: string;\n  underlinedTabInactiveBackground?: string;\n  hoverInactiveBackground?: string;\n  hoverBackground?: string;\n  inactiveColoredTabBackground?: string; // not used for now\n}\n\nexport const getTabsThemeStyles = ({\n  background,\n  borderColor,\n}: Pick<TabTheme, \"background\" | \"borderColor\">) => css`\n  border-color: ${borderColor};\n  background: ${background};\n`;\n\n/**\n * Converts tab theme properties to a chunk of style that can be dropped in a styled version of StyledDefaultTab\n *\n * @example\n * ```ts\n * const StyledCustomTab = styled(StyledDefaultTab)`\n *   ${getTabThemeStyles({background: 'red'})}\n * `\n * ```\n */\nexport const getTabThemeStyles = ({\n  underlineHeight,\n\n  background,\n  underlinedTabBackground,\n  underlinedTabInactiveBackground,\n  hoverInactiveBackground,\n  hoverBackground,\n\n  underlinedTabForeground,\n  underlinedTabInactiveForeground,\n\n  inactiveUnderlineColor,\n  underlineColor,\n}: TabTheme) =>\n  css<StyledTabProps>`\n    // active indicator\n    &::after {\n      height: ${underlineHeight != null ? `${underlineHeight}px` : undefined};\n      background-color: ${({ selected }) => selected && inactiveUnderlineColor};\n      background-color: ${({ selected, active }) =>\n        selected && active && underlineColor};\n    }\n\n    // foreground rules\n    color: ${({ selected }) => selected && underlinedTabInactiveForeground};\n    color: ${({ selected, active }) =>\n      selected && active && underlinedTabForeground};\n\n    //  background rules\n    background: ${background};\n    background: ${({ selected }) =>\n      selected && underlinedTabInactiveBackground};\n    background: ${({ selected, active }) =>\n      selected && active && underlinedTabBackground};\n\n    ${({ disabled, active }) =>\n      !disabled &&\n      css`\n        &:hover,\n        &.hover /* for testing purposes */ {\n          background: ${hoverInactiveBackground};\n          background: ${active && hoverBackground};\n        }\n      `}\n  `;\n","import { css, styled } from \"@intellij-platform/core/styled\";\n\ninterface Props {\n  hasOverflowAtStart: boolean;\n  hasOverflowAtEnd: boolean;\n}\n\nconst horizontalOverflowIndicatorStyles = css`\n  content: \"\";\n  pointer-events: none;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  width: 10px;\n  z-index: 1;\n`;\nexport const StyledHorizontalOverflowShadows = styled.div<Props>`\n  position: relative; // for overflow indicator (pseudo-)elements to be positioned absolute\n\n  /* FIXME: find out what color, width and gradient parameters are used in the original implementation */\n  ${({ hasOverflowAtStart }) =>\n    hasOverflowAtStart &&\n    css`\n      ::before {\n        ${horizontalOverflowIndicatorStyles};\n        background: linear-gradient(\n          90deg,\n          ${({ theme }) => theme.commonColors.panelBackground} 0%,\n          transparent 100%\n        );\n        left: 0;\n      }\n    `};\n  ${({ hasOverflowAtEnd }) =>\n    hasOverflowAtEnd &&\n    css`\n      ::after {\n        ${horizontalOverflowIndicatorStyles};\n        background: linear-gradient(\n          -90deg,\n          ${({ theme }) => theme.commonColors.panelBackground} 0%,\n          transparent 100%\n        );\n        right: 0;\n      }\n    `};\n`;\n","import { useTab } from \"@react-aria/tabs\";\nimport { TabListState } from \"@react-stately/tabs\";\nimport { Node } from \"@react-types/shared\";\nimport { StyledDefaultTab } from \"./StyledDefaultTab\";\nimport React, { ForwardedRef, forwardRef, RefObject, useEffect } from \"react\";\nimport useForwardedRef from \"@intellij-platform/core/utils/useForwardedRef\";\n\ntype TabProps<T extends object> = {\n  state: TabListState<object>;\n  item: Node<T>;\n  /**\n   * {@see TabsProps#focusable}\n   */\n  focusable?: boolean;\n  /**\n   * {@see TabsProps#active}\n   */\n  active?: boolean;\n  shouldSelectOnPressUp?: boolean;\n  Component?: typeof StyledDefaultTab;\n};\n\nexport const Tab = forwardRef(function Tab<T extends object>(\n  {\n    state,\n    item,\n    focusable,\n    active,\n    shouldSelectOnPressUp,\n    Component = StyledDefaultTab,\n  }: TabProps<T>,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n): React.ReactElement {\n  const { key, rendered } = item;\n  const ref = useForwardedRef(forwardedRef);\n  const {\n    tabProps: {\n      /**\n       * by extracting out tabIndex, all keyboard support of the tabs is disabled, since we prevent the tab from being\n       * focusable.\n       */\n      tabIndex,\n      ...tabProps\n    },\n  } = useTab(\n    {\n      key,\n      shouldSelectOnPressUp,\n    },\n    state,\n    ref\n  );\n  const isSelected = state.selectedKey === key;\n  const isDisabled = state.disabledKeys.has(key);\n\n  return (\n    <Component\n      {...tabProps}\n      tabIndex={focusable ? tabIndex : undefined}\n      ref={ref}\n      active={active}\n      selected={isSelected}\n      disabled={isDisabled}\n    >\n      {rendered}\n    </Component>\n  );\n});\n","import React, { Key, useEffect } from \"react\";\nimport { useTabList } from \"@react-aria/tabs\";\nimport { filterDOMProps, mergeProps, scrollIntoView } from \"@react-aria/utils\";\nimport { useTabListState } from \"@react-stately/tabs\";\nimport { AriaTabListProps } from \"@react-types/tabs\";\nimport { StyledHorizontalOverflowShadows } from \"./StyledHorizontalOverflowShadows\";\nimport { TabsOverflowMenu } from \"./TabsOverflowMenu\";\nimport { useOverflowObserver } from \"../utils/overflow-utils/useOverflowObserver\";\nimport { useHasOverflow } from \"./useHasOverflow\";\nimport { css, styled } from \"@intellij-platform/core/styled\";\nimport { notNull } from \"@intellij-platform/core/utils/array-utils\";\nimport { StyledDefaultTab } from \"./StyledDefaultTab\";\nimport { StyledDefaultTabs } from \"./StyledDefaultTabs\";\nimport { Tab } from \"./Tab\";\n\nexport type TabsProps<T> = Omit<\n  AriaTabListProps<T>,\n  \"orientation\" | \"isDisabled\" | \"\"\n> & {\n  /**\n   * Whether tabs should be focusable or not. By default, following the Intellij Platform implementation, tabs are\n   * not focusable and therefore lack the keyboard accessibility support specified in WAI-ARIA.\n   * You can change this default behaviour and make the tabs keyboard accessible by passing `focusable`.\n   * focus styles are not perfect at the moment, since it's not considered an important feature.\n   * @default false\n   */\n  focusable?: boolean;\n\n  /**\n   * Whether selected tab should change on press up instead of press down.\n   * @default false.\n   */\n  shouldSelectOnPressUp?: boolean;\n\n  /**\n   * Enables \"active\" style on tabs. Is usually related to a container having focus.\n   */\n  active?: boolean;\n\n  /**\n   * If set to true, tabs will be wrapped into multiple rows if needed.\n   * NOTE: In the original implementation, in multi row mode, rows are separated by a border. It's not easy to achieve\n   * this when we are implementing this feature with a simple `flex-wrap: wrap` css rule. It doesn't seem that\n   * important, but we can achieve something similar by some css tricks like the ones suggested here:\n   * https://stackoverflow.com/questions/36128333/row-lines-for-flex-container-css\n   * @default false\n   */\n  multiRow?: boolean;\n\n  /**\n   * Only effective when {@link multiRow} is not true.\n   * If set to true and multiRow is not true, it will prevent horizontal scroll of tabs. Depending on the value of\n   * In this case:\n   * - if {@link noOverflowMenu} is not set to true, tabs that can't be fitted into the available space will be\n   *   accessible via an overflow menu.\n   * - if {@link noOverflowMenu} is set to true, the tabs will be fitted into the available space, and they will\n   *   be shrunk when needed.\n   *\n   * @todo: not implemented yet.\n   * @default false\n   */\n  noScroll?: boolean;\n\n  /**\n   * Only effective when {@link multiRow} is not true.\n   * When set to true, tabs that couldn't be fitted into the available space, are either shrunk (if {@link noScroll}\n   * is set to true), or are just accessible by scroll.\n   */\n  noOverflowMenu?: boolean;\n\n  /**\n   * Removes the top and bottom border when passed.\n   * It's still not clear whether such option makes sense or not, but\n   * at least in common use cases like in tool windows, it seems borders are already there and there should be a way\n   * of removing tab borders. On the other hand, when Tabs is used without any assumption about the surrounding UI,\n   * it kind of makes sense to have the top and bottom borders by default. So that's why this is made an option for\n   * now, maybe until things are clearer.\n   *\n   * @default false\n   */\n  noBorders?: boolean;\n\n  TabsComponent?: typeof StyledDefaultTabs;\n  /**\n   *\n   */\n  TabComponent?: typeof StyledDefaultTab;\n};\n\nconst scrollBarDisabledStyle = css`\n  -ms-overflow-style: none; /* for Internet Explorer, Edge */\n  scrollbar-width: none; /* for Firefox */\n  &::-webkit-scrollbar {\n    /* for Chrome/Safari/Webkit */\n    display: none;\n  }\n`;\n\nconst StyledTabList = styled.div<{ multiRow?: boolean }>`\n  display: flex;\n  flex-wrap: ${({ multiRow }) => (multiRow ? \"wrap\" : \"nowrap\")};\n  overflow: auto;\n\n  ${scrollBarDisabledStyle};\n`;\n\n/**\n *\n * TODO: add support for overflow:\n *  - have vertical scroll also scroll tabs\n *  - add support for re-reordering tabs.\n *  - FIX: When a tab that was not selected is removed, selection should not change. It now changes to the tab before the removed one.\n */\nexport const Tabs = <T extends object>({\n  focusable,\n  shouldSelectOnPressUp,\n  active,\n  TabComponent,\n  TabsComponent = StyledDefaultTabs,\n  multiRow,\n  noOverflowMenu,\n  noScroll,\n  noBorders,\n  ...props\n}: TabsProps<T>): React.ReactElement => {\n  const state = useTabListState(props);\n  const ref = React.useRef<HTMLDivElement>(null);\n  const { tabListProps } = useTabList(props, state, ref);\n\n  const { scrolledIndicatorProps, hasOverflow } = useHasOverflow({ ref });\n  const { overflowedElements } = useOverflowObserver(ref);\n  const overflowedKeys = new Set(\n    overflowedElements\n      .map((element) =>\n        element instanceof HTMLElement ? element.dataset[\"key\"] : null\n      )\n      .filter(notNull)\n  );\n\n  useEffect(() => {\n    if (!noScroll) {\n      const scrollableContainer = ref.current;\n      const selectedTabElement = scrollableContainer?.querySelector(\n        `[data-key=\"${state.selectedKey}\"]`\n      ) as HTMLElement;\n      if (scrollableContainer && selectedTabElement) {\n        scrollIntoView(scrollableContainer, selectedTabElement);\n      }\n    } else {\n      // TODO maybe? sample use case: project tool window tabs, when not grouped.\n    }\n  }, [state.selectedKey]);\n  const onOverflowMenuItemSelected = (key: Key) => {\n    state.setSelectedKey(key);\n  };\n  if (noScroll) {\n    throw new Error(\"noScroll is not supported yet.\");\n  }\n  return (\n    <TabsComponent noBorders={noBorders} {...filterDOMProps(props)}>\n      <StyledHorizontalOverflowShadows\n        hasOverflowAtStart={hasOverflow.left}\n        hasOverflowAtEnd={hasOverflow.right}\n        style={{ minWidth: 0 }}\n      >\n        <StyledTabList\n          {...mergeProps(tabListProps, scrolledIndicatorProps)}\n          multiRow={multiRow}\n          ref={ref}\n        >\n          {[...state.collection].map((item) => (\n            <Tab\n              key={item.key}\n              item={item}\n              state={state}\n              focusable={focusable}\n              shouldSelectOnPressUp={shouldSelectOnPressUp}\n              active={active}\n              Component={TabComponent}\n            />\n          ))}\n        </StyledTabList>\n      </StyledHorizontalOverflowShadows>\n      {!noOverflowMenu && (\n        <TabsOverflowMenu\n          collection={state.collection}\n          overflowedKeys={overflowedKeys}\n          onSelect={onOverflowMenuItemSelected}\n        />\n      )}\n    </TabsComponent>\n  );\n};\n","import { RefObject, UIEventHandler, useEffect, useState } from \"react\";\n\nexport function useHasOverflow<T extends HTMLElement>({\n  threshold = 5,\n  ref,\n}: {\n  threshold?: number;\n  ref: RefObject<T>;\n}) {\n  const [hasOverflow, setHasOverflow] = useState({\n    left: false,\n    right: false,\n    top: false,\n    bottom: false,\n  });\n\n  const update = () => {\n    const element = ref.current;\n    if (element) {\n      const offsetLeft = element.scrollLeft;\n      const offsetRight =\n        element.scrollWidth - (element.offsetWidth + element.scrollLeft);\n      const offsetTop = element.scrollTop;\n      const offsetBottom =\n        element.scrollHeight - (element.offsetHeight + element.scrollTop);\n      const newHasOverflow = {\n        top: offsetTop > threshold,\n        bottom: offsetBottom > threshold,\n        left: offsetLeft > threshold,\n        right: offsetRight > threshold,\n      };\n      if (\n        hasOverflow.top !== newHasOverflow.top ||\n        hasOverflow.bottom !== newHasOverflow.bottom ||\n        hasOverflow.left !== newHasOverflow.left ||\n        hasOverflow.right !== newHasOverflow.right\n      ) {\n        setHasOverflow(newHasOverflow);\n      }\n    }\n  };\n  useEffect(update);\n\n  return {\n    scrolledIndicatorProps: {\n      onScroll: update as UIEventHandler<T>,\n    },\n    hasOverflow,\n  };\n}\n","import { Collection, Node } from \"@react-types/shared\";\nimport { Item } from \"@react-stately/collections\";\nimport { Menu, MenuTrigger } from \"@intellij-platform/core/Menu\";\nimport { IconButton } from \"@intellij-platform/core/IconButton\";\nimport { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport React, { Key } from \"react\";\n\nexport const TabsOverflowMenu = <T extends unknown>({\n  collection,\n  overflowedKeys,\n  onSelect,\n}: {\n  collection: Collection<Node<T>>;\n  overflowedKeys: Set<Key>;\n  onSelect: (key: Key) => void;\n}) => (\n  <>\n    {overflowedKeys.size > 0 && (\n      <MenuTrigger\n        align=\"end\"\n        renderMenu={({ menuProps }) => {\n          const items: Iterable<Node<unknown>> = [...collection].filter(\n            (menuItem) => overflowedKeys.has(menuItem.key)\n          );\n          return (\n            <Menu\n              {...menuProps}\n              onAction={(key) => {\n                onSelect(key);\n              }}\n              items={items}\n            >\n              {(item) => (\n                <Item key={item.key} textValue={item.textValue}>\n                  {item.props.inOverflowMenu || item.textValue}\n                </Item>\n              )}\n            </Menu>\n          );\n        }}\n      >\n        {(props, ref) => (\n          <IconButton {...props} ref={ref}>\n            <PlatformIcon icon=\"actions/findAndShowNextMatches\" />\n          </IconButton>\n        )}\n      </MenuTrigger>\n    )}\n  </>\n);\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { Theme } from \"@intellij-platform/core/Theme\";\nimport { StyledDefaultTab } from \"@intellij-platform/core/Tabs/StyledDefaultTab\";\nimport {\n  getTabThemeStyles,\n  TabTheme,\n} from \"@intellij-platform/core/Tabs/TabTheme\";\n\nexport const toolWindowTabTheme = ({ theme }: { theme: Theme }): TabTheme => ({\n  borderColor: theme.color(\"ToolWindow.HeaderTab.borderColor\"),\n  underlineHeight: theme.value<number>(\"ToolWindow.HeaderTab.underlineHeight\"),\n  background: \"transparent\",\n  underlinedTabInactiveBackground: theme.color(\n    \"ToolWindow.HeaderTab.underlinedTabInactiveBackground\"\n  ),\n  underlinedTabBackground: theme.color(\n    \"ToolWindow.HeaderTab.underlinedTabBackground\"\n  ),\n  hoverInactiveBackground:\n    theme.color(\"ToolWindow.HeaderTab.hoverInactiveBackground\") ??\n    theme.color(\"ToolWindow.HeaderTab.hoverBackground\"),\n  hoverBackground: theme.color(\"ToolWindow.HeaderTab.hoverBackground\"),\n  inactiveUnderlineColor: theme.color(\n    \"ToolWindow.HeaderTab.inactiveUnderlineColor\"\n  ),\n  underlineColor: theme.color(\"ToolWindow.HeaderTab.underlineColor\"),\n\n  underlinedTabInactiveForeground:\n    theme.color(\"ToolWindow.HeaderTab.underlinedTabInactiveForeground\") ??\n    theme.color(\"ToolWindow.HeaderTab.underlinedTabForeground\"),\n  underlinedTabForeground: theme.color(\n    \"ToolWindow.HeaderTab.underlinedTabForeground\"\n  ),\n});\nexport const StyledToolWindowTab = styled(StyledDefaultTab)`\n  padding: 0 0.7rem;\n  ${({ theme }) => getTabThemeStyles(toolWindowTabTheme({ theme }))};\n`;\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { getTabsThemeStyles } from \"@intellij-platform/core/Tabs/TabTheme\";\nimport { StyledDefaultTabs } from \"@intellij-platform/core/Tabs/StyledDefaultTabs\";\nimport { toolWindowTabTheme } from \"./StyledToolWindowTab\";\n\nexport const StyledToolWindowTabs = styled(StyledDefaultTabs)`\n  ${({ theme }) => getTabsThemeStyles(toolWindowTabTheme({ theme }))};\n`;\n","import React from \"react\";\nimport { Tabs, TabsProps } from \"@intellij-platform/core/Tabs/Tabs\";\nimport { StyledToolWindowTab } from \"./StyledToolWindowTab\";\nimport { StyledToolWindowTabs } from \"./StyledToolWindowTabs\";\n\ntype ToolWindowTabsProps<T extends object> = Omit<\n  TabsProps<T>,\n  \"TabComponent\" | \"TabsComponent\" | \"focusable\"\n>;\n\nexport const ToolWindowTabs = <T extends object>(\n  props: ToolWindowTabsProps<T>\n) => (\n  <Tabs\n    {...props}\n    TabComponent={StyledToolWindowTab}\n    TabsComponent={StyledToolWindowTabs}\n    focusable={false}\n    shouldSelectOnPressUp\n  />\n);\n","import React from \"react\";\nimport { Tooltip, TooltipProps } from \"@intellij-platform/core/Tooltip/Tooltip\";\n\nexport interface ActionTooltipProps\n  extends Omit<TooltipProps, \"children\" | \"multiline\"> {\n  actionName: React.ReactNode;\n  shortcut?: React.ReactNode;\n}\n\n/**\n * Tooltip of type \"Action\"\n * @see {@link ActionHelpTooltip} {@link HelpTooltip}\n * @see https://jetbrains.github.io/ui/controls/tooltip/#02\n */\nexport const ActionTooltip = ({\n  actionName,\n  shortcut,\n  ...tooltipProps\n}: ActionTooltipProps): JSX.Element => {\n  return (\n    <Tooltip {...tooltipProps}>\n      <Tooltip.Header>\n        {actionName}\n        {shortcut && <Tooltip.Shortcut>{shortcut}</Tooltip.Shortcut>}\n      </Tooltip.Header>\n    </Tooltip>\n  );\n};\n","import React, { ForwardedRef, MutableRefObject, useContext } from \"react\";\nimport { AriaTooltipProps, useTooltip } from \"@react-aria/tooltip\";\nimport { useObjectRef } from \"@react-aria/utils\";\nimport { PositionAria } from \"@react-aria/overlays\";\nimport { css, styled } from \"@intellij-platform/core/styled\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { WINDOW_SHADOW } from \"@intellij-platform/core/style-constants\";\nimport { TooltipContext } from \"./TooltipContext\";\nimport { TooltipPointer, TooltipPointerPosition } from \"./TooltipPointer\";\nimport {\n  tooltipBackground,\n  tooltipBorderColor,\n  WITH_POINTER_BORDER_RADIUS,\n} from \"./tooltip-styles\";\n\nexport interface TooltipProps extends Omit<AriaTooltipProps, \"isOpen\"> {\n  children: React.ReactNode;\n  multiline?: boolean;\n  className?: string;\n  /**\n   * Whether (and in what position) the arrow pointer should be shown.\n   * When using {@link TooltipTrigger} or {@link PositionedTooltipTrigger}, the position of the pointer is calculated\n   * based on the target element, and a boolean value to define whether the arrow should be shown or not would suffice.\n   *\n   * Tooltips with pointer have slight style difference.\n   * {@see https://www.figma.com/file/nfDfMAdV7j2fnQlpYNAOfP/IntelliJ-Platform-UI-Kit-(Community)?type=design&node-id=15-51&mode=design&t=7PplrxG8ZfXB4hIK-0}\n   *\n   * @example\n   * <Tooltip withPointer />\n   * // shows the pointer in the position controlled by {@link TooltipTrigger} or {@link PositionedTooltipTrigger}\n   * // If there is not `TooltipTrigger` or `PositionedTooltipTrigger`, the arrow is shown on top center by default.\n   *\n   * @example\n   * <Tooltip withPointer={{side: 'top', offset: 30}} />\n   * // shows the pointer on the top side, with horizontal offset of 30px from the left of tooltip, regardless\n   * // of whether `TooltipTrigger` or `PositionedTooltipTrigger` is used.\n   *\n   * @example\n   * <Tooltip withPointer={{side: 'left', offset: -30}} />\n   * // shows the pointer on the left side, with vertidcal offset of 30px from the bottom of the tooltip, regardless\n   * // of whether `TooltipTrigger` or `PositionedTooltipTrigger` is used.\n   */\n  withPointer?: boolean | TooltipPointerPosition;\n}\n\n// Providing default value for paddings, based on intellijlaf theme. In Intellij Platform, themes extend either\n// intellijlaf or darcula. Which means some properties can be omitted in the custom theme, relying on the values\n// in the base theme. This is not how theming works here, at the moment, and there are other similar issues, but\n// this is just a mitigation for one case, spacing in tooltip.\nexport const DEFAULT_TEXT_BORDER_INSETS = \"0.5rem 0.8125rem 0.625rem 0.625rem\";\nexport const DEFAULT_SMALL_TEXT_BORDER_INSETS =\n  \"0.375rem 0.75rem 0.4375rem 0.625rem\";\nconst StyledTooltip = styled.div<{ multiline?: boolean; hasPointer?: boolean }>`\n  box-sizing: content-box;\n  max-width: ${\n    /**\n     * Max width is meant to be set on the multiline description (which is not used in ActionTooltip which would\n     * be right according to [the specs](https://jetbrains.github.io/ui/controls/tooltip/#09)).\n     * But if set on `Tooltip.Description`, title and link can still make the tooltip grow more that the expected max\n     * width. So it makes more sense to set the max width on the container anyway. But since the value of the max width\n     * is meant to be for description we set the box-sizing to \"content-box\" to exclude container's padding in max-width\n     * calculation.\n     */\n    ({ theme, multiline }) =>\n      multiline\n        ? `${\n            theme.value<number>(\n              \"HelpTooltip.maxWidth\" as UnknownThemeProp<\"HelpTooltip.maxWidth\">\n            ) ?? 250\n          }px`\n        : null\n  };\n  white-space: ${({ multiline }) => (!multiline ? \"nowrap\" : null)};\n  display: inline-flex;\n  flex-direction: column;\n  gap: ${({ theme }) =>\n    theme.value<number>(\n      \"HelpToolTip.verticalGap\" as UnknownThemeProp<\"HelpToolTip.verticalGap\">\n    ) ?? 4}px;\n  background: ${tooltipBackground};\n  color: ${({ theme }) =>\n    theme.color(\"ToolTip.foreground\", !theme.dark ? \"#000\" : \"#bfbfbf\")};\n  padding: ${({ theme, multiline }) =>\n    multiline\n      ? theme.inset(\"HelpTooltip.defaultTextBorderInsets\") ||\n        DEFAULT_TEXT_BORDER_INSETS\n      : theme.inset(\"HelpTooltip.smallTextBorderInsets\") ||\n        DEFAULT_SMALL_TEXT_BORDER_INSETS};\n  line-height: 1.2;\n  border-style: solid;\n  border-width: ${({ theme, hasPointer }) =>\n    theme.value<boolean>(\"ToolTip.paintBorder\") || hasPointer ? \"1px\" : \"0px\"};\n  border-color: ${tooltipBorderColor};\n  ${WINDOW_SHADOW};\n  ${({ hasPointer }) =>\n    hasPointer &&\n    css`\n      position: relative; // needed for absolute positioning of the pointer\n      border-radius: ${WITH_POINTER_BORDER_RADIUS}px;\n    `}\n`;\n\nconst StyledShortcut = styled.kbd`\n  all: unset;\n  color: ${({ theme }) =>\n    theme.color(\n      \"ToolTip.shortcutForeground\",\n      !theme.dark ? \"#787878\" : \"#999999\"\n    )};\n`;\n\nconst StyledHeader = styled.div`\n  font-size: ${({ theme }) => theme.fontSizeDelta(\"HelpTooltip.fontSizeDelta\")};\n  display: flex;\n  gap: 0.5rem;\n`;\nconst StyledDescription = styled.div`\n  color: ${({ theme }) =>\n    theme.color(\n      \"Tooltip.infoForeground\" as UnknownThemeProp<\"Tooltip.infoForeground\">,\n      theme.commonColors.contextHelpForeground\n    )};\n  font-size: ${({ theme }) =>\n    theme.fontSizeDelta(\"HelpTooltip.descriptionSizeDelta\")};\n`;\n\nconst StyledLink = styled.div`\n  color: ${({ theme }) =>\n    theme.color(\n      \"ToolTip.linkForeground\" as UnknownThemeProp<\"ToolTip.linkForeground\">,\n      theme.commonColors.linkForegroundEnabled\n    )};\n  a,\n  [role=\"link\"] {\n    // Maybe target Link instead, without important. It didn't work as expected, in the first try tho.\n    color: inherit !important;\n  }\n`;\n\nexport const placementToPointerSide: Record<\n  PositionAria[\"placement\"],\n  TooltipPointerPosition[\"side\"]\n> = {\n  bottom: \"top\",\n  top: \"bottom\",\n  left: \"right\",\n  right: \"left\",\n  center: \"top\", // doesn't make sense :-?\n};\n/**\n * Implements the UI of a Tooltip. For tooltip to be shown for a trigger, on hover, use {@link TooltipTrigger}.\n * The following components can be used to compose the content of a tooltip.\n * - {@link Tooltip.Header}\n * - {@link Tooltip.Description}\n * - {@link Tooltip.Link}\n * - {@link Tooltip.Shortcut}\n * Prefer using higher-level components like {@link HelpTooltip}, {@link ActionHelpTooltip} or {@link ActionTooltip}.\n * that ensure different pieces of tooltip content follow the\n * [design system recommendation](https://jetbrains.github.io/ui/controls/tooltip)\n *\n *\n * ### Reference:\n * Tooltip, Tooltip.* and TooltipTrigger are corresponding to [HelpTooltip](https://github.com/JetBrains/intellij-community/blob/854daf45b47a6ea9da0348978608bfbfe998d99c/platform/platform-api/src/com/intellij/ide/HelpTooltip.java#L102)\n * in the original impl.\n */\nconst Tooltip = React.forwardRef(function Tooltip(\n  { children, multiline, withPointer, ...props }: TooltipProps,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n): JSX.Element {\n  const ref: MutableRefObject<HTMLDivElement | null> =\n    useObjectRef(forwardedRef);\n  const {\n    state,\n    isInteractive,\n    pointerPositionStyle,\n    placement = \"bottom\",\n  } = useContext(TooltipContext) || {};\n  const { tooltipProps } = useTooltip(\n    props,\n    state\n      ? {\n          ...state,\n          // if the tooltip is not interactive, let it be closed even when it's hovered. That's the according to the reference impl.\n          open: isInteractive ? state?.open : () => {},\n        }\n      : state\n  );\n\n  const { side, offset } =\n    typeof withPointer === \"object\"\n      ? withPointer\n      : { side: placementToPointerSide[placement], offset: undefined };\n\n  return (\n    <StyledTooltip\n      hasPointer={Boolean(withPointer)}\n      multiline={multiline}\n      {...tooltipProps}\n      className={props.className}\n      ref={ref}\n    >\n      {withPointer && (\n        <TooltipPointer\n          tooltipRef={ref}\n          side={side}\n          offset={\n            offset || !pointerPositionStyle\n              ? { type: \"specific\", value: offset }\n              : { type: \"calculated\", value: pointerPositionStyle }\n          }\n        />\n      )}\n      {children}\n    </StyledTooltip>\n  );\n});\n\nconst _Tooltip = Object.assign(Tooltip, {\n  Header: StyledHeader,\n  Shortcut: StyledShortcut,\n  Description: StyledDescription,\n  Link: StyledLink,\n});\n\nexport { _Tooltip as Tooltip };\n","import React, { CSSProperties } from \"react\";\nimport { TooltipTriggerState } from \"@react-stately/tooltip\";\nimport { PositionAria } from \"@react-aria/overlays\";\n\ninterface TooltipContextObject {\n  state: TooltipTriggerState;\n  isInteractive: boolean;\n  placement: PositionAria[\"placement\"];\n  pointerPositionStyle?: CSSProperties;\n}\n\nexport const TooltipContext = React.createContext<TooltipContextObject | null>(\n  null\n);\n","import { compose, identity } from \"ramda\";\nimport React, { CSSProperties, RefObject, useEffect, useState } from \"react\";\nimport { css, styled } from \"@intellij-platform/core/styled\";\n\nimport {\n  tooltipBackground,\n  WITH_POINTER_BORDER_RADIUS,\n} from \"./tooltip-styles\";\n\ntype OffsetValue = number | `${number}%`;\nexport type TooltipPointerPosition = {\n  /**\n   * The side of the tooltip the pointer is shown\n   */\n  side: \"top\" | \"bottom\" | \"left\" | \"right\";\n  /**\n   * - When side is \"top\" or \"bottom\":\n   *   Horizontal offset (in px) with respect to the left (or right, if negative) of the tooltip.\n   * - When side is \"left\" or \"right\":\n   *   Vertical offset (in px) with respect to the top (or bottom, if negative) of the tooltip.\n   *\n   * @default: '50%'\n   */\n  offset?: OffsetValue | { value: OffsetValue; invert?: boolean };\n};\n\nconst POINTER_WIDTH = 6;\nconst POINTER_HEIGHT = 9;\nconst POINTER_THICKNESS = 1.5;\nconst TRANSLATE = `translate(-${POINTER_WIDTH}px, -${POINTER_HEIGHT}px)`;\nconst sideStyles = {\n  top: css`\n    top: 0;\n    transform: ${TRANSLATE};\n  `,\n  bottom: css`\n    bottom: 0;\n    transform: rotateX(180deg) ${TRANSLATE};\n  `,\n  left: css`\n    left: 0;\n    transform: rotate(-90deg) ${TRANSLATE};\n  `,\n  right: css`\n    right: 0;\n    transform: rotate(90deg) ${TRANSLATE};\n  `,\n};\nconst StyledTooltipPointer = styled.span<{\n  side: TooltipPointerPosition[\"side\"];\n}>`\n  position: absolute;\n  width: 0;\n  height: 0;\n  ${({ side }) => sideStyles[side]};\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    border-left: ${POINTER_WIDTH + POINTER_THICKNESS}px solid transparent;\n    border-right: ${POINTER_WIDTH + POINTER_THICKNESS}px solid transparent;\n    border-bottom: ${POINTER_HEIGHT + POINTER_THICKNESS}px solid #636569;\n    left: -${POINTER_THICKNESS}px;\n    top: -${POINTER_THICKNESS}px;\n  }\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    border-left: ${POINTER_WIDTH}px solid transparent;\n    border-right: ${POINTER_WIDTH}px solid transparent;\n    border-bottom: ${POINTER_HEIGHT}px solid ${tooltipBackground};\n  }\n`;\n\nfunction normalizeCssValue(value: string | number) {\n  return typeof value === \"number\" ? `${value}px` : value;\n}\n\nconst withMin = (min: number) => (value: string | number | undefined) =>\n  value != undefined ? `max(${min}px, ${normalizeCssValue(value)})` : value;\nconst withMax = (max: number) => (value: string | number | undefined) =>\n  value != undefined ? `min(${max}px, ${normalizeCssValue(value)})` : value;\nconst HEIGHT_OFFSET = POINTER_HEIGHT + WITH_POINTER_BORDER_RADIUS;\nconst WIDTH_OFFSET = POINTER_WIDTH + WITH_POINTER_BORDER_RADIUS;\n\n/**\n * Ensures pointer is not offset too much or too little that would make the arrow appear\n * outside the tooltip boundary.\n */\nfunction limitPointerPositionStyles(\n  { width, height }: { width: number | undefined; height: number | undefined },\n  { top, left, right, bottom }: CSSProperties\n) {\n  const applyVerticalMinMax = compose(\n    height ? withMax(height - HEIGHT_OFFSET) : identity,\n    withMin(HEIGHT_OFFSET)\n  );\n  const applyHorizontalMinMax = compose(\n    width ? withMax(width - WIDTH_OFFSET) : identity,\n    withMin(WIDTH_OFFSET)\n  );\n  return {\n    top: applyVerticalMinMax(top),\n    bottom: applyVerticalMinMax(bottom),\n    left: applyHorizontalMinMax(left),\n    right: applyHorizontalMinMax(right),\n  };\n}\n\nconst getOffsetCssProp = (\n  side: TooltipPointerPosition[\"side\"],\n  invert?: boolean\n): \"top\" | \"bottom\" | \"left\" | \"right\" => {\n  if (side === \"top\" || side === \"bottom\") {\n    return invert ? \"right\" : \"left\";\n  }\n  return invert ? \"bottom\" : \"top\";\n};\n\nfunction pointerPositionToOffsetStyle({\n  side,\n  offset = \"50%\",\n}: TooltipPointerPosition): CSSProperties {\n  const { invert = false, value: offsetValue } =\n    typeof offset === \"object\" ? offset : { invert: false, value: offset };\n  return {\n    [getOffsetCssProp(side, invert)]: offsetValue,\n  };\n}\n\nexport function TooltipPointer({\n  side,\n  offset,\n  tooltipRef,\n}: {\n  side: TooltipPointerPosition[\"side\"];\n  offset:\n    | { type: \"calculated\"; value: CSSProperties }\n    | { type: \"specific\"; value: TooltipPointerPosition[\"offset\"] };\n  tooltipRef: RefObject<HTMLElement>;\n}) {\n  const [size, setSize] = useState<{\n    height: number | undefined;\n    width: number | undefined;\n  }>({ height: undefined, width: undefined });\n  useEffect(() => {\n    const { offsetHeight, offsetWidth } = tooltipRef.current || {};\n    if (offsetHeight != size?.height || offsetWidth != size?.width) {\n      setSize({ height: offsetHeight, width: offsetWidth });\n    }\n  });\n\n  return (\n    <StyledTooltipPointer\n      side={side}\n      style={limitPointerPositionStyles(\n        size,\n        offset.type === \"specific\"\n          ? pointerPositionToOffsetStyle({ side, offset: offset.value })\n          : offset.value\n      )}\n    />\n  );\n}\n","import React, {\n  HTMLAttributes,\n  ReactElement,\n  RefObject,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { TooltipTriggerProps as AriaTooltipTriggerProps } from \"@react-aria/tooltip\";\nimport { AriaPositionProps } from \"@react-aria/overlays\";\nimport { useTooltipTriggerState } from \"@react-stately/tooltip\";\nimport { useMouseEventOverlayPosition } from \"@intellij-platform/core/utils/useMouseEventOverlayPosition\";\nimport { useTheme } from \"@intellij-platform/core/styled\";\nimport { TooltipTriggerAndOverlay } from \"@intellij-platform/core/Tooltip/TooltipTriggerAndOverlay\";\n\nexport interface TooltipTriggerProps\n  // controlling isOpen state is not supported since positioning is based on cursor.\n  // PositionedTooltipTrigger can be used for controlled isOpen state\n  extends Omit<AriaTooltipTriggerProps, \"isOpen\" | \"defaultOpen\" | \"trigger\"> {\n  /**\n   * Tooltip content. The value should be an element of type {@link Tooltip}.\n   */\n  tooltip: ReactElement;\n  /**\n   * Placement of the tooltip with respect to the cursor\n   * @default \"bottom left\"\n   */\n  placement?: AriaPositionProps[\"placement\"];\n  /**\n   * The additional offset applied along the main axis between the element and its\n   * anchor element.\n   * @default theme.value<number>(\"HelpTooltip.mouseCursorOffset\") ?? 20\n   */\n  offset?: number;\n  /**\n   * Either a focusable component, or a render function which accepts trigger props and passes it to some component.\n   */\n  children:\n    | React.ReactNode\n    | ((\n        props: HTMLAttributes<HTMLElement> & { ref: RefObject<HTMLElement> }\n      ) => React.ReactNode);\n}\n\n/**\n * Sets {@param tooltip} for its {@param children}.\n * Showing tooltip on focus and controlled open state are not supported at the moment, based on how tooltip works in the\n * reference impl, and since tooltip is positioned based on cursor position. Positioning the tooltip based on cursor\n * position requires tooltip to be opened on hover. That's why neither controlling opened state nor showing the tooltip\n * on focus are supported here. {@link PositionedTooltipTrigger} allows for positioning the tooltip with respect to the\n * trigger element, and offers more options.\n */\nexport const TooltipTrigger = ({\n  tooltip,\n  children,\n  /**\n   * ide.tooltip.initialReshowDelay registry key. [Docs](https://jetbrains.github.io/ui/controls/tooltip/#19) says\n   * it's 300 by default, but it's 500 in the code currently.\n   */\n  delay = 500,\n  offset,\n  placement = \"bottom left\",\n  ...props\n}: TooltipTriggerProps): JSX.Element => {\n  const triggerRef = useRef<HTMLElement>(null);\n  const theme = useTheme();\n  const state = useTooltipTriggerState({\n    ...props,\n    delay,\n  });\n\n  const overlayRef = useRef<HTMLDivElement>(null);\n\n  const positionAria = useMouseEventOverlayPosition({\n    overlayRef,\n    isOpen: state.isOpen,\n    placement,\n    shouldFlip: true,\n    offset:\n      offset ?? theme.value<number>(\"HelpTooltip.mouseCursorOffset\") ?? 20,\n  });\n\n  // FIXME: Find the explanation for why it happens, and fix it properly, if it's a legit issue.\n  useEffect(() => {\n    if (state.isOpen) {\n      requestAnimationFrame(() => {\n        positionAria.updatePosition();\n      });\n    }\n  }, [state.isOpen]);\n\n  return (\n    <TooltipTriggerAndOverlay\n      tooltip={tooltip}\n      positionAria={positionAria}\n      trigger={children}\n      state={state}\n      overlayRef={overlayRef}\n      triggerRef={triggerRef}\n      /**\n       * If we want to support showing tooltip on focus, or if we want to allow controlled open state, we should let it\n       * be positioned by the trigger element in that case, rather than mouse position.\n       * One solution would be to use useOverlayPosition as well, and conditionally use the right `overlayProps`, based on\n       * whether the position determined by mouse is within `triggerRef.current?.getBoundingClientRect()`. Another way\n       * (maybe better) would be to have `useMouseEventOverlayPosition` accept `bounds` or `containerBounds`, which if\n       * passed, makes sure the position is kept within that boundary. Outside positions would be mapped to the closest\n       * point on the border of the boundary.\n       */\n      showOnFocus={false}\n      isDisabled={props.isDisabled}\n    />\n  );\n};\n","import React, {\n  HTMLAttributes,\n  ReactElement,\n  RefObject,\n  useState,\n} from \"react\";\nimport { useTooltipTrigger as useAriaTooltipTrigger } from \"@react-aria/tooltip\";\nimport { TooltipTriggerState } from \"@react-stately/tooltip\";\nimport { FocusableProvider } from \"@react-aria/focus\";\nimport { Overlay, PositionAria } from \"@react-aria/overlays\";\nimport { mergeProps, useLayoutEffect } from \"@react-aria/utils\";\n\nimport { TooltipContext } from \"./TooltipContext\";\n\ninterface TooltipTriggerBaseProps<T extends HTMLElement = HTMLElement> {\n  /**\n   * Tooltip content. The value should be an element of type {@link Tooltip}.\n   */\n  tooltip: ReactElement;\n  /**\n   * Either a focusable component, or a render function which accepts trigger props and passes it to some component.\n   */\n  trigger:\n    | React.ReactNode\n    | ((\n        props: HTMLAttributes<HTMLElement> & { ref: RefObject<T> }\n      ) => React.ReactNode);\n\n  state: TooltipTriggerState;\n\n  showOnFocus?: boolean;\n  positionAria: PositionAria;\n  overlayRef: RefObject<HTMLDivElement>;\n  triggerRef: RefObject<T>;\n  isDisabled?: boolean;\n}\n\n/**\n * Sets {@param tooltip} for its {@param children}. It doesn't handle tooltip positioning, and so shouldn't be used\n * directly. {@param tooltipOverlayProps} should be used to apply the intended positioning.\n *\n * TODO: Implement timeout-based auto-hide (https://jetbrains.github.io/ui/controls/tooltip/#19)\n * TODO: shadow\n */\nexport const TooltipTriggerAndOverlay = <T extends HTMLElement>({\n  tooltip,\n  trigger,\n  state,\n  overlayRef,\n  triggerRef,\n  showOnFocus,\n  positionAria,\n  ...props\n}: TooltipTriggerBaseProps<T>): JSX.Element => {\n  const [isInteractive, setInteractive] = useState(false);\n  const { triggerProps, tooltipProps } = useTooltipTrigger(\n    props,\n    // In Intellij Platform. The tooltip hides right away. We follow the same, unless the tooltip is interactive.\n    // Maybe something to rethink if it's worth following the reference impl for.\n    { ...state, close: isInteractive ? state.close : () => state.close(true) },\n    triggerRef\n  );\n\n  if (!showOnFocus) {\n    delete triggerProps.onFocus;\n  }\n\n  useLayoutEffect(() => {\n    setInteractive(\n      overlayRef.current?.querySelector(\n        'a, button, [role=\"button\"], [role=link]'\n      ) !== null\n    );\n  });\n  return (\n    <>\n      {normalizeChildren(trigger, { ...triggerProps, ref: triggerRef })}\n      {state.isOpen && !props.isDisabled && (\n        <Overlay>\n          <TooltipContext.Provider\n            value={{\n              state,\n              isInteractive,\n              placement: positionAria.placement,\n              pointerPositionStyle: positionAria.arrowProps.style,\n            }}\n          >\n            <div\n              {...mergeProps(\n                positionAria.overlayProps,\n                // Is it ok to apply tooltip props on this wrapper?\n                tooltipProps\n              )}\n              ref={overlayRef}\n            >\n              {tooltip}\n            </div>\n          </TooltipContext.Provider>\n        </Overlay>\n      )}\n    </>\n  );\n};\n\nfunction normalizeChildren<T extends HTMLElement = HTMLElement>(\n  children: TooltipTriggerBaseProps<T>[\"trigger\"],\n  triggerProps: HTMLAttributes<HTMLElement> & { ref: RefObject<T> }\n) {\n  if (typeof children === \"function\") {\n    return children(triggerProps);\n  }\n  if (React.isValidElement(children) && typeof children.type === \"string\") {\n    return React.cloneElement(children, triggerProps);\n  }\n  return <FocusableProvider {...triggerProps}>{children}</FocusableProvider>;\n}\n\n/**\n * A wrapper around react-aria's useTooltipTrigger, adjusting it for Intellij Platform.\n */\nconst useTooltipTrigger: typeof useAriaTooltipTrigger = (props, state, ref) => {\n  const { triggerProps, tooltipProps } = useAriaTooltipTrigger(\n    props,\n    state,\n    ref\n  );\n  // onPointerDown returned from the underlying usePress stops propagation which messes with some usages of tooltip\n  // like in tab or tool window stripe button. We replace onPointerDown handler with a similar handler that closes\n  // the tooltip.\n  triggerProps.onPointerDown = () => {\n    if (!(ref.current instanceof HTMLInputElement)) {\n      state.close(true);\n    }\n  };\n  /**\n   * onMouseDown is preventDefault-ed which interferes with functionality of the tooltip trigger, in use cases like\n   * tool window stripe button. Note that since pointerDown is handled for calling the tooltip trigger's onPressStart\n   * handler (which hides the tooltip), there is no issue in excluding onMouseDown, because it's only used to preventDefault\n   * the event, because of some edge cases focus handling which is not our concern.\n   */\n  delete triggerProps.onMouseDown;\n\n  return {\n    triggerProps,\n    tooltipProps,\n  };\n};\n","import { Theme } from \"@intellij-platform/core/Theme\";\n\nexport const WITH_POINTER_BORDER_RADIUS = 4;\nexport const tooltipBackground = ({ theme }: { theme: Theme }) =>\n  theme.color(\"ToolTip.background\", !theme.dark ? \"#f2f2f2\" : \"#3c3f41\");\nexport const tooltipBorderColor = ({ theme }: { theme: Theme }) =>\n  theme.color(\"ToolTip.borderColor\", !theme.dark ? \"#adadad\" : \"#636569\");\n","import { usePrevious } from \"@intellij-platform/core/utils/usePrevious\";\nimport { CacheInvalidationContext } from \"./Item\";\n\nexport interface CollectionCacheInvalidationProps {\n  /**\n   * Defines cache invalidation policy for items. By default, the render result is cached based on the item objects.\n   * This is equivalent of passing false or not passing anything for `cacheInvalidation`. If `true` is passed, it will\n   * always invalidate the render result, causing the collection to be recreated on each re-render. It can\n   * considerably affect performance in large collections. in addition to boolean value, an object with the list of\n   * invalidators can also be passed. renderer function is called each time any of the invalidators are changed.\n   * Think of it as [dependency array in react hooks](https://reactjs.org/docs/hooks-reference.html#usememo). Except\n   * that the length of the array can also safely change.\n   */\n  cacheInvalidation?: boolean | { invalidators: ReadonlyArray<unknown> };\n}\n\n/**\n * Allows cache invalidation options based on input props, for components that use collection\n */\nexport const useCollectionCacheInvalidation = ({\n  cacheInvalidation,\n}: CollectionCacheInvalidationProps): CacheInvalidationContext => {\n  const invalidators =\n    typeof cacheInvalidation === \"object\" ? cacheInvalidation.invalidators : [];\n  const lastInvalidators = usePrevious(invalidators);\n\n  const invalidated =\n    typeof cacheInvalidation === \"object\"\n      ? cacheInvalidation.invalidators.length !== lastInvalidators.length ||\n        cacheInvalidation.invalidators.some(\n          (anInvalidator, index) => anInvalidator !== lastInvalidators[index]\n        )\n      : cacheInvalidation;\n\n  return {\n    invalidated,\n  };\n};\n","//@ts-nocheck\n/**\n * Not exported from @react-stately/tree, but needed in the custom implementation of useTreeState\n */\n\nimport { Key } from \"react\";\nimport { Collection, Node } from \"@react-types/shared\";\n\nexport class TreeCollection<T> implements Collection<Node<T>> {\n  private keyMap: Map<Key, Node<T>> = new Map();\n  private iterable: Iterable<Node<T>>;\n  private firstKey: Key;\n  private lastKey: Key;\n\n  constructor(\n    nodes: Iterable<Node<T>>,\n    { expandedKeys }: { expandedKeys?: Set<Key> } = {}\n  ) {\n    this.iterable = nodes;\n    expandedKeys = expandedKeys || new Set();\n\n    let visit = (node: Node<T>) => {\n      this.keyMap.set(node.key, node);\n\n      if (\n        node.childNodes &&\n        (node.type === \"section\" || expandedKeys.has(node.key))\n      ) {\n        for (let child of node.childNodes) {\n          visit(child);\n        }\n      }\n    };\n\n    for (let node of nodes) {\n      visit(node);\n    }\n\n    let last: Node<T>;\n    let index = 0;\n    for (let [key, node] of this.keyMap) {\n      if (last) {\n        last.nextKey = key;\n        node.prevKey = last.key;\n      } else {\n        this.firstKey = key;\n        node.prevKey = undefined;\n      }\n\n      if (node.type === \"item\") {\n        node.index = index++;\n      }\n\n      last = node;\n\n      // Set nextKey as undefined since this might be the last node\n      // If it isn't the last node, last.nextKey will properly set at start of new loop\n      last.nextKey = undefined;\n    }\n\n    this.lastKey = last?.key;\n  }\n\n  *[Symbol.iterator]() {\n    yield* this.iterable;\n  }\n\n  get size() {\n    return this.keyMap.size;\n  }\n\n  getKeys() {\n    return this.keyMap.keys();\n  }\n\n  getKeyBefore(key: Key) {\n    let node = this.keyMap.get(key);\n    return node?.prevKey ?? null;\n  }\n\n  getKeyAfter(key: Key) {\n    let node = this.keyMap.get(key);\n    return node?.nextKey ?? null;\n  }\n\n  getFirstKey() {\n    return this.firstKey;\n  }\n\n  getLastKey() {\n    return this.lastKey;\n  }\n\n  getItem(key: Key) {\n    return this.keyMap.get(key) ?? null;\n  }\n\n  at(idx: number) {\n    const keys = [...this.getKeys()];\n    return this.getItem(keys[idx]);\n  }\n}\n","import { Node } from \"@react-types/shared\";\nimport { Key } from \"react\";\n\n/**\n * given a node, returns keys of all consecutive single children\n */\nexport function getSingleChildrenKeys<T>(\n  node: Node<T> | null | undefined\n): Key[] {\n  return getSingleChildrenKeysRecursive(node, []);\n}\n\nfunction getSingleChildrenKeysRecursive<T>(\n  node: Node<T> | null | undefined,\n  previousKeys: Key[]\n): Key[] {\n  if (!node) {\n    return [];\n  }\n  const childNodesIterator: Iterator<\n    Node<T>,\n    Node<T> | undefined\n  > = node.childNodes[Symbol.iterator]();\n  const { value: firstChild, done } = childNodesIterator.next();\n  const noMoreChildren = done || childNodesIterator.next().value == null;\n  if (firstChild != null && noMoreChildren && isExpandable(firstChild)) {\n    return getSingleChildrenKeysRecursive(\n      firstChild,\n      previousKeys.concat((firstChild as Node<T>).key)\n    );\n  }\n  return previousKeys;\n}\n\nconst isExpandable = <T>(node: Node<T>) =>\n  node.hasChildNodes || !isEmptyIterable(node.childNodes);\n\nfunction isEmptyIterable(iterable: Iterable<unknown> | undefined | null) {\n  for (const _ of iterable || []) {\n    // eslint-disable-line no-unused-vars, no-unreachable-loop\n    return false;\n  }\n  return true;\n}\n","import {\n  MultipleSelectionState,\n  SelectionManager,\n  SelectionManagerOptions,\n} from \"@react-stately/selection\";\nimport { Collection, Node } from \"@react-types/shared\";\nimport React, { Key } from \"react\";\n\nexport class TreeSelectionManager extends SelectionManager {\n  private readonly collection: Collection<Node<unknown>>;\n\n  constructor(\n    collection: Collection<Node<unknown>>,\n    state: MultipleSelectionState,\n    options?: SelectionManagerOptions\n  ) {\n    super(collection, state, options);\n    this.collection = collection;\n  }\n\n  expandSelection() {\n    if (this.focusedKey) {\n      const node = this.collection.getItem(this.focusedKey);\n      if (node) {\n        const { expandKeys } = this.getExpandAndShrinkKeys(node);\n        if (expandKeys.length > 0) {\n          this.setSelectedKeys([...this.selectedKeys, ...expandKeys]);\n        }\n      }\n    }\n  }\n  shrinkSelection() {\n    if (this.focusedKey) {\n      const node = this.collection.getItem(this.focusedKey);\n      if (node) {\n        const { shrinkKeys } = this.getExpandAndShrinkKeys(node);\n        if (shrinkKeys.length > 0) {\n          this.setSelectedKeys(\n            [...this.selectedKeys].filter((key) => !shrinkKeys.includes(key))\n          );\n        }\n      }\n    }\n  }\n\n  private getExpandAndShrinkKeys(node: Node<unknown>) {\n    return this.recursivelyGetExpandAndShrinkKeys(\n      node,\n      [...this.collection.getKeys()],\n      null\n    );\n  }\n  /**\n   * Starting from a node, traverses the tree up, until it reaches the root of the fully selected subtree that includes\n   * the starting node. The root itself may or may not be selected. Returns:\n   * - keys to be added to selection, when expanding selection\n   * - keys to be removed from selection, when shrinking selection\n   */\n  private recursivelyGetExpandAndShrinkKeys(\n    node: Node<unknown>,\n    keys: Array<Key>,\n    previousChild: Key | null\n  ): { expandKeys: Key[]; shrinkKeys: Key[] } {\n    const parent =\n      node && node.parentKey ? this.collection.getItem(node.parentKey) : null;\n    const newKeys = keys.filter((key) => key !== previousChild);\n    const parentDescendants = parent\n      ? getAllDescendants(parent, newKeys).map(({ key }) => key)\n      : this.getAllRoots().flatMap((key) => {\n          const item = this.collection.getItem(key);\n          return key !== node.key && item\n            ? getAllDescendants(item, newKeys)\n                .map(({ key }) => key)\n                .concat(key)\n            : [];\n        });\n    if (parent && parentDescendants.every((key) => this.isSelected(key))) {\n      return this.recursivelyGetExpandAndShrinkKeys(parent, keys, node.key);\n    }\n    const descendants = getAllDescendants(\n      node,\n      keys.filter((key) => key !== previousChild)\n    ).map(({ key }) => key);\n\n    return {\n      expandKeys: descendants.some((key) => !this.isSelected(key))\n        ? descendants\n        : !this.isSelected(node.key)\n        ? [node.key]\n        : parentDescendants,\n      shrinkKeys:\n        parentDescendants.length > 0 &&\n        parentDescendants.every((key) => this.isSelected(key))\n          ? parentDescendants\n          : this.isSelected(node.key) && previousChild\n          ? [node.key]\n          : descendants.filter((key) => this.isSelected(key)),\n    };\n  }\n\n  private getAllRoots() {\n    return [...this.collection.getKeys()].filter(\n      (key) => this.collection.getItem(key)?.parentKey == null\n    );\n  }\n}\n\nfunction getAllDescendants<T>(\n  node: Node<T>,\n  stopKeys: Array<React.Key>\n): Node<T>[] {\n  const childNodes = (node.hasChildNodes ? [...node.childNodes] : []).filter(\n    (node) => stopKeys.includes(node.key)\n  );\n  return node.hasChildNodes\n    ? childNodes.concat(\n        childNodes.map((node) => getAllDescendants(node, stopKeys)).flat()\n      )\n    : [];\n}\n","import {\n  Collection,\n  CollectionStateBase,\n  Expandable,\n  MultipleSelection,\n  Node,\n} from \"@react-types/shared\";\nimport { TreeProps as _TreeProps, TreeState } from \"@react-stately/tree\";\nimport {\n  TreeRefValue,\n  useTreeRef,\n} from \"@intellij-platform/core/Tree/useTreeRef\";\nimport { ForwardedRef, Key, useCallback, useEffect, useMemo } from \"react\";\nimport { useMultipleSelectionState } from \"@react-stately/selection\";\nimport { useCollection } from \"@react-stately/collections\";\nimport { useControlledState } from \"@react-stately/utils\";\nimport {\n  CollectionCacheInvalidationProps,\n  useCollectionCacheInvalidation,\n} from \"@intellij-platform/core/Collections/useCollectionCacheInvalidation\";\nimport { TreeCollection as _TreeCollection } from \"./__copied__TreeCollection\";\nimport { getSingleChildrenKeys } from \"./getSingleChildrenKeys\";\nimport { TreeSelectionManager } from \"@intellij-platform/core/Tree/TreeSelectionManager\";\nimport { notNull } from \"@intellij-platform/core/utils/array-utils\";\n\nexport class TreeCollection<T> extends _TreeCollection<T> {\n  public readonly rootKeys: Key[];\n  constructor(\n    nodes: Iterable<Node<T>>,\n    { expandedKeys }: { expandedKeys: Set<Key> }\n  ) {\n    super(nodes, { expandedKeys });\n    this.rootKeys = Array.from(nodes).map(({ key }) => key);\n  }\n\n  getAllExpandableKeys(): Set<Key> {\n    const rootNodes = this.rootKeys\n      .map((key) => this.getItem(key))\n      .filter(notNull);\n    return this.recursivelyAddExpandableKeys(rootNodes, new Set<Key>());\n  }\n\n  private recursivelyAddExpandableKeys(\n    nodes: Iterable<Node<T>>,\n    result: Set<Key>\n  ) {\n    for (const node of nodes) {\n      if (node?.hasChildNodes) {\n        result.add(node.key);\n        this.recursivelyAddExpandableKeys(node.childNodes, result);\n      }\n    }\n    return result;\n  }\n}\nexport interface TreeProps<T>\n  extends CollectionStateBase<T, TreeCollection<T>>,\n    Expandable,\n    MultipleSelection,\n    CollectionCacheInvalidationProps {\n  childExpansionBehaviour?: \"multi\" | \"single\";\n}\n/**\n * Provides state management for tree-like components. Handles building a collection\n * of items from props, item expanded state, and manages multiple selection state.\n *\n * Similar to (and initially copied from) useTreeState from @react-stately/tree, but with the following changes:\n * - Supports exposing some imperative API via ref.\n *   Could be done via a wrapper too.\n * - Different onToggle implementation with two adjustments to match Intellij Platform:\n *   - Collapsing a key collapses all descendants as well.\n *   - Expanding a single-child node will recursively expand all single-child descendants.\n *   Couldn't be done with a wrapper in a clean and optimal way. Access to setExpandedKey is not provided. We would need\n *   to either maintain a new state for expanded keys and ignore the one returned from the wrapped hook, or\n *   inefficiently call the returned `toggleKey` function many times.\n * - Supports collection invalidation via CollectionCacheInvalidationProps\n *   Perhaps not the most important addition, but not possible to be done via a wrapper.\n * - Uses TreeSelectionManager instead of the default SelectionManager, which implements expand/shrink selection.\n *   Could be done in a wrapper, with a little hack. Would need to replace selection manager.\n * - returned `collection` is of type `TreeCollection` (which is an improved version of react-stately `TreeCollection`),\n *   instead of the more generic `Collection`.\n */\nexport function useTreeState<T extends object>(\n  { childExpansionBehaviour = \"multi\", ...props }: TreeProps<T>,\n  treeRef?: ForwardedRef<TreeRefValue>\n): TreeState<T> {\n  let [expandedKeys, setExpandedKeys] = useControlledState(\n    props.expandedKeys ? new Set(props.expandedKeys) : undefined!,\n    props.defaultExpandedKeys ? new Set(props.defaultExpandedKeys) : new Set(),\n    props.onExpandedChange!\n  );\n\n  let selectionState = useMultipleSelectionState({\n    ...props,\n    selectionBehavior: \"replace\",\n  });\n  let disabledKeys = useMemo(\n    () => (props.disabledKeys ? new Set(props.disabledKeys) : new Set<Key>()),\n    [props.disabledKeys]\n  );\n\n  const context = useCollectionCacheInvalidation(props);\n\n  let tree = useCollection<T, TreeCollection<T>>(\n    props,\n    useCallback(\n      (nodes) => new TreeCollection(nodes, { expandedKeys }),\n      [expandedKeys]\n    ),\n    context\n  );\n\n  const selectionManager = new TreeSelectionManager(\n    tree as Collection<Node<T>>,\n    selectionState\n  );\n\n  useTreeRef({ selectionManager, setExpandedKeys, tree }, treeRef);\n\n  // Reset focused key if that item is deleted from the collection.\n  useEffect(() => {\n    if (\n      selectionState.focusedKey != null &&\n      !tree.getItem(selectionState.focusedKey)\n    ) {\n      // @ts-expect-error imprecise typing in @react-stately/selection\n      selectionState.setFocusedKey(null);\n    }\n  }, [tree, selectionState.focusedKey]);\n\n  const toggleKey = (key: Key) => {\n    let newExpandedKeys = toggleTreeNode(\n      tree as Collection<Node<T>>,\n      expandedKeys,\n      key\n    );\n    if (childExpansionBehaviour === \"single\") {\n      const expandedSiblings = getSiblings(tree, key).filter(\n        (aKey) => aKey !== key && expandedKeys.has(aKey)\n      );\n      newExpandedKeys = expandedSiblings.reduce((expandedKeys, expandedKey) => {\n        return toggleTreeNode(\n          tree as Collection<Node<T>>,\n          expandedKeys,\n          expandedKey\n        );\n      }, newExpandedKeys);\n    }\n    setExpandedKeys(newExpandedKeys);\n  };\n\n  return {\n    collection: tree as Collection<Node<T>>,\n    expandedKeys,\n    disabledKeys,\n    toggleKey,\n    selectionManager,\n    setExpandedKeys,\n  };\n}\n\nfunction getChildItems<T>(node: Node<T>): Node<T>[] {\n  const childNodes = [...(node.childNodes || [])];\n  const childItems = childNodes.filter(({ type }) => type === \"item\");\n  const sectionItems = childNodes.filter(({ type }) => type === \"section\");\n\n  return childItems.concat(sectionItems.flatMap(getChildItems));\n}\n\nfunction getRootItemKeys(tree: TreeCollection<unknown>) {\n  return tree.rootKeys\n    .map((key) => tree.getItem(key))\n    .filter(notNull)\n    .flatMap(getChildItems)\n    .map(({ key }) => key);\n}\n/**\n * Returns the siblings of an item in tree, ignoring sections.\n * Disclaimer: The code is done quick and dirty and in a rush. Unpleasant code, good candidate for refactoring :D\n */\nfunction getSiblings(tree: TreeCollection<unknown>, key: Key): Key[] {\n  const parentKey = tree.getItem(key)?.parentKey;\n  if (!parentKey) {\n    return [...tree.rootKeys].concat(getRootItemKeys(tree));\n  }\n  let parent = parentKey ? tree.getItem(parentKey) : null;\n  if (parent?.type === \"item\") {\n    return getChildItems(parent).map(({ key }) => key);\n  }\n  const siblings: Key[] = [];\n  while (parent) {\n    siblings.push(...getChildItems(parent).map(({ key }) => key));\n    if (parent.type === \"section\") {\n      if (parent.parentKey) {\n        parent = tree.getItem(parent.parentKey);\n      } else {\n        siblings.push(...getRootItemKeys(tree));\n        parent = null;\n      }\n    } else {\n      parent = null;\n    }\n  }\n  return Array.from(new Set(siblings));\n}\nfunction toggleTreeNode(\n  tree: Collection<Node<unknown>>,\n  expandedKeys: Set<Key>,\n  key: Key\n): Set<Key> {\n  // toggling a non-expandable node should be no-op\n  if (!expandedKeys.has(key) && !tree.getItem(key)?.hasChildNodes) {\n    return expandedKeys;\n  }\n  const newKeys = toggleKey(expandedKeys, key);\n  // In Intellij impl, when a node is collapsed, all descendants are also collapsed. In other words, keys that are\n  // not a part of the list of visible nodes, will be excluded from the expanded keys, with the toggle action.\n  for (const aKey of newKeys) {\n    if (tree.getItem(aKey) == null) {\n      newKeys.delete(aKey);\n    }\n  }\n\n  // If we are toggling it open, expand all expandable single-child items\n  if (newKeys.has(key)) {\n    for (const aKey of getSingleChildrenKeys(tree.getItem(key))) {\n      newKeys.add(aKey);\n    }\n  }\n  return newKeys;\n}\n\nfunction toggleKey(set: Set<Key>, key: Key): Set<Key> {\n  let res = new Set(set);\n  if (res.has(key)) {\n    res.delete(key);\n  } else {\n    res.add(key);\n  }\n\n  return res;\n}\n","import { ForwardedRef, Key, useImperativeHandle } from \"react\";\nimport { useLatest } from \"@intellij-platform/core/utils/useLatest\";\nimport { TreeSelectionManager } from \"./TreeSelectionManager\";\nimport { TreeCollection } from \"./useTreeState\";\n\nexport interface TreeRefValue {\n  focus(key: Key): void;\n  replaceSelection(key: Key): void;\n\n  /**\n   * Extends selection to all siblings of the currently focused node.\n   */\n  expandSelection(): void;\n  /**\n   * Shrinks selection towards currently focused node.\n   */\n  shrinkSelection(): void;\n\n  expandAll(): void;\n  collapseAll(): void;\n}\n\n/**\n * Sets up a tree ref for imperatively working with tree from outside. For imperatively focusing, expanding to\n * specific key, etc.\n */\nexport function useTreeRef<T extends {}>(\n  props: {\n    tree: TreeCollection<T>;\n    selectionManager: TreeSelectionManager;\n    setExpandedKeys: (keys: Set<Key>) => void;\n  },\n  forwardedRef?: ForwardedRef<TreeRefValue>\n) {\n  const latestState = useLatest(props);\n\n  useImperativeHandle(\n    forwardedRef,\n    () => {\n      return {\n        replaceSelection: (key: Key) => {\n          latestState.current.selectionManager.replaceSelection(key);\n        },\n        focus: (key: Key) => {\n          const selectionManager = latestState.current.selectionManager;\n          selectionManager.setFocused(true);\n          /**\n           * NOTE: we set focus key to null and set it to key again, to make sure scroll into view works even when\n           * the key is currently focused but not in view. It wouldn't be needed if there was an imperative handle\n           * for scrolling an item into view, but it's only implemented in way that is reactive to changes to the\n           * focused key. {@see useCollectionAutoScroll}\n           */\n          selectionManager.setFocusedKey(null);\n          setTimeout(() => {\n            selectionManager.setFocusedKey(key);\n          });\n        },\n        expandSelection() {\n          latestState.current.selectionManager.expandSelection();\n        },\n        shrinkSelection() {\n          latestState.current.selectionManager.shrinkSelection();\n        },\n        expandAll() {\n          latestState.current.setExpandedKeys(\n            latestState.current.tree.getAllExpandableKeys()\n          );\n        },\n        collapseAll() {\n          const { tree, setExpandedKeys, selectionManager } =\n            latestState.current;\n          const focusedKey = selectionManager.focusedKey;\n          setExpandedKeys(new Set());\n\n          // Find the root node that is a grandparent of focused node, and focus/select it.\n          // NOTE: this behaviour of updating selection when nodes are collapsed is something to be fixed in general,\n          // and then this custom logic here would be not necessary.\n          if (focusedKey && !tree.rootKeys.includes(focusedKey)) {\n            let item = tree.getItem(focusedKey);\n            while (item?.parentKey != null) {\n              item = tree.getItem(item.parentKey);\n            }\n            if (item) {\n              selectionManager.setFocusedKey(item.key);\n              if (selectionManager.isSelected(focusedKey)) {\n                selectionManager.select(item.key);\n              }\n            }\n          }\n        },\n      };\n    },\n    []\n  );\n}\n","/**\n * Drop shadow of windows and other overlays.\n * The current value is not accurate and needs to be revisited. It should also be os-dependant.\n * FIXME: On windows, there is only a border-like shadow. No drop shadow\n * FIXME: On Mac, there is a border-like shadow and a drop shadow. the border-like shadow is missing in the current value\n */\nexport const WINDOW_SHADOW = \"box-shadow: 0 5px 15px rgb(0 0 0 / 30%)\";\n","import * as styledComponents from \"styled-components\";\nimport { ThemedStyledComponentsModule } from \"styled-components\";\nimport { Theme } from \"./Theme\";\nimport { KnownThemePropertyPath } from \"./Theme/types\";\n\ntype JuiStyledComponentsModule = ThemedStyledComponentsModule<\n  Theme<KnownThemePropertyPath>\n>;\n\nexport const styled =\n  styledComponents.default as JuiStyledComponentsModule[\"default\"];\nexport const useTheme =\n  styledComponents.useTheme as JuiStyledComponentsModule[\"useTheme\"];\nexport const css = styledComponents.css as JuiStyledComponentsModule[\"css\"];\nexport const ThemeConsumer =\n  styledComponents.ThemeConsumer as JuiStyledComponentsModule[\"ThemeConsumer\"];\n","import {\n  FocusManager,\n  FocusScope as WrappedFocusScope,\n  FocusScopeProps,\n  useFocusManager,\n} from \"@react-aria/focus\";\nimport React, { ForwardedRef, useImperativeHandle, useRef } from \"react\";\n\nexport type FocusScopeRef = { focus: (forceFocusFirst?: boolean) => void };\n/**\n * A version of FocusScope which also allows for imperatively moving focus to the scope.\n * and has tiny patches/improvements\n * It's useful for\n */\nexport const FocusScope = React.forwardRef(function BetterFocusScope(\n  { children, ...otherProps }: FocusScopeProps,\n  ref: ForwardedRef<FocusScopeRef>\n) {\n  const directChildRef = useRef<HTMLSpanElement>(null);\n  const focusManagerRef = useRef<FocusManager>(null);\n  useImperativeHandle(\n    ref,\n    () => ({\n      focus: (forceFocusFirst?: boolean) => {\n        const focusManager = focusManagerRef.current;\n        const containerElement = directChildRef.current?.parentElement;\n        if (!focusManager) {\n          throw new Error(\"focus manager not found!\");\n        }\n        if (!containerElement) {\n          throw new Error(\"container element not found\");\n        }\n        if (forceFocusFirst) {\n          return focusManager.focusFirst();\n        }\n        const alreadyHasFocused =\n          document.activeElement &&\n          document.activeElement !== containerElement &&\n          containerElement.contains(document.activeElement);\n        if (!alreadyHasFocused) {\n          focusManager.focusNext({ tabbable: true });\n        }\n      },\n    }),\n    []\n  );\n\n  return (\n    <WrappedFocusScope {...otherProps}>\n      <GetFocusManager ref={focusManagerRef} />\n      <span data-focus-root-direct-child=\"\" hidden ref={directChildRef} />\n      {children}\n    </WrappedFocusScope>\n  );\n});\nconst GetFocusManager = React.forwardRef(function FocusScopeHandle(\n  props: {},\n  ref: ForwardedRef<FocusManager>\n) {\n  const focusManager = useFocusManager()!;\n  useImperativeHandle(ref, () => focusManager, [focusManager]);\n  return null;\n});\n","/**\n * Properly typed filter function for filtering out null/undefined items in array.\n */\nexport const notNull = <T>(\n  item: T | undefined | null\n): item is NonNullable<T> => item != null;\n","import { notNull } from \"@intellij-platform/core/utils/array-utils\";\n\nexport interface OverflowObserverRecord {\n  target: Element;\n  overflowedElements: Element[];\n  previouslyOverflowedElements: Element[];\n}\n\nexport type OverflowObserverCallback = (\n  change: OverflowObserverRecord,\n  observer: OverflowObserver\n) => void;\n\n/**\n * Allows observing the list of overflowing children of a given target element.\n * An `IntersectionObserver` is created for each target to observe the intersection between the target and each child\n * element. The child elements are observed/unobserved by the intersection observer as they are added/removed to the\n * DOM, which is observed using a `MutationObserver`.\n * `IntersectionObserver` options such as `rootMargin` are supported, to fine tune what should be considered as\n * overflowed.\n *\n * TODO: add a takeRecords method to allow processing pending mutations before disconnect\n * TODO: maybe add direction option?\n *\n */\nexport class OverflowObserver {\n  private mutationObserver: MutationObserver;\n  private data: Map<\n    Element,\n    {\n      intersectionObserver: IntersectionObserver;\n      currentOverflowElements: Element[];\n    }\n  > = new Map();\n\n  constructor(private callback: OverflowObserverCallback) {\n    this.mutationObserver = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        const target = mutation.target;\n        if (!(target instanceof Element)) {\n          return;\n        }\n        mutation.removedNodes.forEach((node) => {\n          if (node instanceof Element) {\n            this.data.get(target)?.intersectionObserver.unobserve(node);\n          }\n        });\n        mutation.addedNodes.forEach((node) => {\n          if (node instanceof Element) {\n            this.data.get(target)?.intersectionObserver.observe(node);\n          }\n        });\n      });\n    });\n  }\n\n  observe(target: Element, options: Omit<IntersectionObserverInit, \"root\">) {\n    this.data.get(target)?.intersectionObserver.disconnect();\n\n    const intersectionObserver = new IntersectionObserver(\n      (entries) => {\n        const data = this.data.get(target);\n        const newHiddenElements = entries\n          .map((entry) =>\n            !entry.isIntersecting && entry.target instanceof Element\n              ? entry.target\n              : undefined\n          )\n          .filter(notNull);\n        const newVisibleElements = entries\n          .map((entry) =>\n            entry.isIntersecting && entry.target instanceof Element\n              ? entry.target\n              : null\n          )\n          .filter(notNull);\n\n        //  Also cover this in Toolbar with a test case\n        const previouslyOverflowedElements =\n          data?.currentOverflowElements || [];\n        const overflowedElements = previouslyOverflowedElements\n          .filter((element) => !newVisibleElements.includes(element))\n          .concat(newHiddenElements)\n          .filter((element) => {\n            // In some cases some elements may be hidden by some styles (e.g. the first/last separator in a toolbar).\n            // It doesn't make sense to report them as overflowed.\n            const isHidden =\n              element instanceof HTMLElement &&\n              element.offsetWidth === 0 &&\n              element.offsetHeight === 0;\n            return !isHidden;\n          });\n        this.callback(\n          {\n            previouslyOverflowedElements,\n            overflowedElements: overflowedElements,\n            target,\n          },\n          this\n        );\n        if (data) {\n          data.currentOverflowElements = overflowedElements;\n        }\n      },\n      {\n        ...options,\n        root: target,\n      }\n    );\n    [...(target?.children || [])].forEach((childElement) => {\n      intersectionObserver.observe(childElement);\n    });\n    this.data.set(target, {\n      intersectionObserver,\n      currentOverflowElements: [],\n    });\n    this.mutationObserver.observe(target, {\n      childList: true,\n    });\n  }\n\n  unobserve(target: Element) {\n    this.data.get(target)?.intersectionObserver.disconnect();\n  }\n\n  disconnect() {\n    [...this.data.values()].forEach(({ intersectionObserver }) =>\n      intersectionObserver.disconnect()\n    );\n    this.data = new Map();\n    this.mutationObserver.disconnect();\n  }\n}\n","import { RefObject, useEffect, useState } from \"react\";\nimport { OverflowObserver } from \"@intellij-platform/core/utils/overflow-utils/OverflowObserver\";\n\n/**\n * Given a ref to a scrollable container, returns the child elements that are not completely visible and\n * are off view because of scroll.\n * @param scrollableContainerRef\n * @param threshold\n */\nexport function useOverflowObserver(\n  scrollableContainerRef: RefObject<HTMLElement>,\n  {\n    threshold = 0.9,\n    rootMargin = \"0px\",\n  }: Omit<IntersectionObserverInit, \"root\"> = {}\n) {\n  const [overflowedElements, setOverflowedElements] = useState<Element[]>([]);\n\n  useEffect(() => {\n    const overflowObserver = new OverflowObserver((change) => {\n      setOverflowedElements(change.overflowedElements);\n    });\n    overflowObserver.observe(scrollableContainerRef.current!, {\n      rootMargin,\n      threshold,\n    });\n    return () => {\n      overflowObserver.disconnect();\n    };\n  }, [\n    /**\n     * It's ok and needed to have the ref value as a dependency here. We don't know if ref is attached to different\n     * elements in each render, and it's ok that it's not a state, since we don't change it, and it's not supposed to\n     * change without a rerender\n     **/\n    scrollableContainerRef.current,\n  ]);\n\n  return {\n    overflowedElements,\n  };\n}\n","import React, { useContext } from \"react\";\n\nexport const useContextOrThrow = <ContextType extends unknown>(\n  Context: React.Context<ContextType | null>,\n  nullErrorMessage: string\n) => {\n  const context = useContext<ContextType | null>(Context);\n\n  if (context == null) {\n    throw new Error(nullErrorMessage);\n  }\n\n  return context;\n};\n","import React, { useRef } from \"react\";\n\n/**\n * For when a component needs to forward ref, but it too needs to use the same ref. Since forwarded ref can be in form\n * of a callback too, this will normalize it as a RefObject.\n * NOTE: Should we keep the ref in state because of edge cases?\n */\nexport default function useForwardedRef<T>(\n  forwardedRef: React.Ref<T>\n): React.RefObject<T> {\n  const innerRef = useRef<T>(null);\n  React.useEffect(() => {\n    if (!forwardedRef) {\n      return;\n    }\n\n    if (typeof forwardedRef === \"function\") {\n      forwardedRef(innerRef.current);\n    } else {\n      (forwardedRef as React.MutableRefObject<T | null>).current =\n        innerRef.current;\n    }\n  });\n\n  return innerRef;\n}\n","import { useLayoutEffect, useRef } from \"react\";\n\nexport function useLatest<T>(value: T) {\n  const ref = useRef(value);\n  useLayoutEffect(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n","import React, { useRef } from \"react\";\nimport { useLayoutEffect } from \"@react-aria/utils\";\nimport {\n  AriaPositionProps,\n  PositionAria,\n  useOverlayPosition,\n} from \"@react-aria/overlays\";\n\n/**\n * `useOverlayPosition` only supports positioning overlay relative to an element, at the moment.\n *  For context menu or tooltip, we may want to position the overlay based on the coordinates of the mouse event which\n *  has triggered the overlay.\n *  This hook wraps `useOverlayPosition`, and is very similar to it, but you don't need to pass `targetRef`. Instead,\n *  you have to call the updatePosition in the event handler that triggers the overlay, passing the `MouseEvent` object.\n *\n * This is hopefully a temporary solution to circumvents the limitation of `useOverlayPosition`, until it supports\n * non-element based positioning as well. It works by appending a dummy 1x1 px element to body and positioning it\n * based on React.MouseEvent objects. Then it uses a ref to that element as the `targetRef`, passed to `useOverlayPosition`\n *\n * @example\n * ```ts\n * const { updatePosition, overlyProps} = useMouseEventOverlayPosition({ overlayRef });\n *\n * const onContextMenu = (event: React.ReactEvent) => {\n *  updatePosition(event);\n *  // ...\n * }\n * ```\n */\nlet globalMoveHandler: null | ((e: MouseEvent) => void) = null;\nlet lastMouseClientPos: { clientX: number; clientY: number } | undefined;\n\nexport function useMouseEventOverlayPosition(\n  options: Omit<AriaPositionProps, \"targetRef\">\n): Omit<PositionAria, \"updatePosition\"> & {\n  updatePosition: (event?: React.MouseEvent) => void;\n} {\n  const targetRef = useRef<HTMLElement>(null);\n\n  useLayoutEffect(() => {\n    if (!globalMoveHandler) {\n      // After the first use of the hook, the listener will be attached forever. Not a big deal but can be improved.\n      globalMoveHandler = ({ clientX, clientY }) => {\n        lastMouseClientPos = { clientX, clientY };\n      };\n      document.addEventListener(\"mousemove\", globalMoveHandler);\n    }\n    if (!targetRef.current) {\n      const fakeTarget = document.createElement(\"span\");\n      Object.assign(fakeTarget.style, {\n        width: \"0px\",\n        height: \"0px\",\n        pointerEvents: \"none\",\n        position: \"fixed\",\n        visibility: \"hidden\",\n      });\n      document.body.appendChild(fakeTarget);\n      // @ts-expect-error We intentionally don't pass null to generic argument, to not have it as a mutable nullable\n      // ref, since we are mimicking an element ref.\n      targetRef.current = fakeTarget;\n      return () => {\n        fakeTarget.remove();\n      };\n    }\n  }, []);\n\n  const updatePosition = (e?: React.MouseEvent) => {\n    const coordinatesSource = e || lastMouseClientPos;\n    if (targetRef.current && coordinatesSource) {\n      const { clientX, clientY } = coordinatesSource;\n      targetRef.current.style.left = `${\n        // not sure why crossOffset passed to useOverlayPosition doesn't work, so compensating for it here.\n        clientX + (options.crossOffset ?? 0)\n      }px`;\n      targetRef.current.style.top = `${clientY}px`;\n    }\n    _updatePosition();\n  };\n  useLayoutEffect(() => {\n    if (options.isOpen) {\n      updatePosition();\n    }\n  }, [options.isOpen, targetRef.current]);\n\n  const { updatePosition: _updatePosition, ...result } = useOverlayPosition({\n    ...options,\n    targetRef,\n  });\n\n  return {\n    ...result,\n    /**\n     * Ref to be passed to be passed as targetRef\n     */\n    updatePosition,\n  };\n}\n","import { useEffect, useRef } from \"react\";\n\nexport function usePrevious<T>(value: T): T {\n  const ref = useRef(value);\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n","import React, { useEffect, useMemo } from \"react\";\nimport BrowserOnly from \"@docusaurus/BrowserOnly\";\n\nimport darculaTheme from \"../../../jui/themes/darcula.theme.json\";\nimport highContrastTheme from \"../../../jui/themes/HighContrast.theme.json\";\nimport lightTheme from \"../../../jui/themes/intellijlaf.theme.json\";\nimport { Theme, ThemeProvider } from \"../../../jui/src\";\n\nexport type ExampleContextThemeName = \"light\" | \"darcula\" | \"highContrast\";\n\nexport const ExampleContext: React.FC<{\n  themeName?: ExampleContextThemeName;\n  children?: React.ReactNode;\n}> = ({ children, themeName = \"darcula\" }) => {\n  const themeJson = (\n    {\n      light: lightTheme,\n      highContrast: highContrastTheme,\n      darcula: darculaTheme,\n    } as const\n  )[themeName];\n\n  // IMPORTANT: passing a function that returns Theme is crucial in get it working. Otherwise, ThemeProvider will try\n  // to \"merge\" themes, and the end result is an POJO, with prototype link lost.\n  // @ts-expect-error ThemeJson type is not accurate ATM.\n  const theme = useMemo(() => new Theme(themeJson), [themeJson]);\n\n  useFixDocusaurusStyleBleeds();\n  return (\n    <BrowserOnly fallback={<>Loading...</>}>\n      {() => <ThemeProvider theme={theme}>{children}</ThemeProvider>}\n    </BrowserOnly>\n  );\n};\n\n/**\n * TODO: add a surrounding UI for examples, with tools for theme selection for example.\n */\nexport const Example: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => (\n  <ExampleContext>\n    <div\n      // @ts-expect-error: css prop is not working for some reason\n      css={`\n        background: ${({ theme }: { theme: Theme }) =>\n          theme.color(\"*.background\")};\n      `}\n    >\n      {children}\n    </div>\n  </ExampleContext>\n);\n\nexport const withExampleContext = <P extends {}>(\n  Component: React.ComponentType<P>\n) => {\n  function WithExampleContext(props: P) {\n    return (\n      <ExampleContext>\n        <Component {...props} />\n      </ExampleContext>\n    );\n  }\n\n  return WithExampleContext;\n};\n\nconst useFixDocusaurusStyleBleeds = () => {\n  useEffect(() => {\n    const FLAG_CLASSNAME = \"example-context-patch\";\n    if (!document.body.classList.contains(FLAG_CLASSNAME)) {\n      try {\n        undoUseKeyboardNavigation();\n        document.body.classList.add(FLAG_CLASSNAME);\n      } catch (e) {\n        console.error(\"Could not undo useKeyboardNavigation\");\n      }\n    }\n  }, []);\n};\n\n/**\n * Reverts the \"improvement\" [useKeyboardNavigation][1] does :|\n *\n * [1]: https://github.com/facebook/docusaurus/blob/f87a3ead4664b301901c12466cb2c82cd95d141b/packages/docusaurus-theme-common/src/hooks/useKeyboardNavigation.ts#L14\n */\nfunction undoUseKeyboardNavigation() {\n  document\n    .querySelectorAll<HTMLLinkElement>(\"link[rel=stylesheet]\")\n    .forEach((linkEl) => {\n      if (linkEl.sheet) {\n        for (let i = 0; i < linkEl.sheet.cssRules.length; i++) {\n          const rule = linkEl.sheet.cssRules.item(i);\n          if (\n            rule?.cssText?.startsWith(\"body:not(.navigation-with-keyboard)\")\n          ) {\n            linkEl.sheet.deleteRule(i); // We can change the rule to only disable it within the boundary of example\n          }\n        }\n      }\n    });\n}\n","import React from \"react\";\n\n/**\n * To make relation between things in jui and original reference impl in Intellij Platform\n */\nexport const RefToIntellijPlatform = ({\n  path,\n  name,\n}: {\n  path: string;\n  name?: string;\n}) => {\n  return (\n    // TODO: make it some nice box with an icon and a hint text which says something like \"Intellij Platform\" or\n    //  \"Reference\" or something better :D\n    <a\n      href={`https://github.com/JetBrains/intellij-community/blob/master/${path}`}\n      target=\"_blank\"\n    >\n      {name || path.split(\"/\").pop()}\n    </a>\n  );\n};\n","import { Meta, StoryObj } from \"@storybook/react\";\nimport { PlatformIcon } from \"../Icon\";\nimport { DebuggerTabContent } from \"./DebuggerTabs/DebuggerTabContent\";\nimport { EditorTabContent } from \"./EditorTabs/EditorTabContent\";\nimport { EditorTabs, EditorTabsProps } from \"./EditorTabs/EditorTabs\";\nimport { DebuggerTabs } from \"./DebuggerTabs/DebuggerTabs\";\nimport { Tabs, TabsProps } from \"./Tabs\";\nimport { TabContentLayout } from \"./TabContentLayout\";\nimport { ToolWindowTabs } from \"./ToolWindowTabs/ToolWindowTabs\";\nimport React from \"react\";\nimport { Item } from \"../Collections\";\n\ntype StoryProps<T extends TabsProps<unknown> = TabsProps<unknown>> = Pick<\n  T,\n  \"active\" | \"defaultSelectedKey\"\n>;\n\nexport default {\n  title: \"Components/Tabs/Tab Themes\",\n  component: Tabs,\n  parameters: {\n    controls: { exclude: \"TabComponent\" },\n  },\n} as Meta;\n\nexport const EditorTheme: StoryObj<StoryProps> = {\n  render: (props) => {\n    return (\n      <EditorTabs {...props} items={editorTabs} active>\n        {(tab: (typeof editorTabs)[number]) => (\n          <Item key={tab.title} textValue={tab.title}>\n            <EditorTabContent\n              icon={<PlatformIcon icon={tab.icon} />}\n              title={tab.title}\n              pinned={tab.pinned}\n            />\n          </Item>\n        )}\n      </EditorTabs>\n    );\n  },\n};\nexport const DebuggerTheme: StoryObj<StoryProps> = {\n  render: (props) => {\n    return (\n      <DebuggerTabs {...props} items={debuggerTabs}>\n        {(tab: (typeof debuggerTabs)[number]) => (\n          <Item key={tab.title} textValue={tab.title}>\n            <DebuggerTabContent\n              icon={tab.icon && <PlatformIcon icon={tab.icon} />}\n              title={tab.title}\n            />\n          </Item>\n        )}\n      </DebuggerTabs>\n    );\n  },\n};\nexport const ToolWindowTheme: StoryObj<StoryProps> = {\n  render: (props) => {\n    return (\n      <ToolWindowTabs {...props} items={toolWindowTabs}>\n        {(tab: (typeof toolWindowTabs)[number]) => (\n          <Item key={tab.title} textValue={tab.title}>\n            <TabContentLayout\n              startIcon={<PlatformIcon icon={tab.icon} />}\n              title={tab.title}\n            />\n          </Item>\n        )}\n      </ToolWindowTabs>\n    );\n  },\n};\nconst editorTabs = [\n  {\n    title: \"Tabs.tsx\",\n    pinned: true,\n    icon: \"fileTypes/javaScript\",\n  },\n  {\n    title: \"Tabs.stories.tsx\",\n    pinned: false,\n    icon: \"fileTypes/javaScript\",\n  },\n  {\n    title: \"index.ts\",\n    pinned: false,\n    icon: \"fileTypes/javaScript\",\n  },\n  {\n    title: \"Tabs.test.ts\",\n    pinned: false,\n    icon: \"fileTypes/javaScript\",\n  },\n];\nconst toolWindowTabs = [\n  {\n    title: \"Project\",\n    icon: \"nodes/project\",\n  },\n  {\n    title: \"Project Files\",\n    icon: \"nodes/folder\",\n  },\n  {\n    title: \"Tests\",\n    icon: \"scope/tests\",\n  },\n];\nconst debuggerTabs = [\n  {\n    title: \"Console\",\n    icon: \"debugger/console\",\n  },\n  {\n    title: \"Frames\",\n    icon: null,\n  },\n  {\n    title: \"Variables | Coroutines | idea.log\",\n    icon: null,\n  },\n];\n","import { Meta, StoryObj } from \"@storybook/react\";\nimport { MenuItemLayout, PlatformIcon } from \"@intellij-platform/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { TabContentLayout, TabItem, TabsProps } from \".\";\nimport { Tabs } from \"./Tabs\";\nimport { DOMProps } from \"@react-types/shared\";\n\ntype StoryProps<T extends TabsProps<unknown> = TabsProps<unknown>> = Pick<\n  T,\n  | \"active\"\n  | \"focusable\"\n  | \"defaultSelectedKey\"\n  | \"multiRow\"\n  | \"noOverflowMenu\"\n  | \"noBorders\"\n  | keyof DOMProps\n>;\n\nexport default {\n  title: \"Components/Tabs\",\n  component: Tabs,\n  parameters: {\n    controls: { exclude: \"TabComponent\" },\n  },\n} as Meta;\n\nexport const StaticItems: StoryObj<StoryProps> = {\n  render: (props) => {\n    return (\n      <Tabs {...props}>\n        <TabItem>Tab 1</TabItem>\n        <TabItem>Tab 2</TabItem>\n        <TabItem>Tab 3</TabItem>\n      </Tabs>\n    );\n  },\n};\n\nexport const DynamicItems: StoryObj<StoryProps> = {\n  render: (props: StoryProps) => {\n    return (\n      <Tabs\n        {...props}\n        items={[\"Tab 1\", \"Tab 2\", \"Tab 3\"].map((title) => ({ title }))}\n      >\n        {({ title }: { title: string }) => (\n          <TabItem key={title}>{title}</TabItem>\n        )}\n      </Tabs>\n    );\n  },\n};\n\nexport const Overflow: StoryObj<StoryProps & { maxWidth: number }> = {\n  render: ({ maxWidth = 800, ...props }) => {\n    const [tabs, setTabs] = useState(\n      Array(10)\n        .fill(null)\n        .map((_, index) => ({\n          title: `Big tab title #${index}`,\n          icon: \"nodes/folder\",\n        }))\n    );\n    return (\n      <div style={{ maxWidth }}>\n        <Tabs {...props} items={tabs}>\n          {(tab) => {\n            const icon = <PlatformIcon icon={tab.icon} />;\n            return (\n              <TabItem\n                key={tabs.indexOf(tab)}\n                textValue={tab.title}\n                inOverflowMenu={\n                  <MenuItemLayout content={tab.title} icon={icon} />\n                }\n              >\n                <TabContentLayout startIcon={icon} title={tab.title} />\n              </TabItem>\n            );\n          }}\n        </Tabs>\n        <div style={{ marginTop: \"1rem\" }}>\n          <button\n            onClick={() => {\n              setTabs((tabs) => [\n                ...tabs,\n                {\n                  title: `Big tab title #${tabs.length}`,\n                  icon: \"nodes/folder\",\n                },\n              ]);\n            }}\n          >\n            Add tab\n          </button>\n          <button\n            onClick={() => {\n              setTabs((tabs) =>\n                tabs.map((tab, index) => {\n                  if (index === 4) {\n                    const title = tab.title;\n                    return {\n                      ...tab,\n                      title:\n                        title.replace(/ \\(.*\\)/, \"\") +\n                        ` ( edited - ${\n                          title.includes(\"short\")\n                            ? \"long long long long\"\n                            : \"short\"\n                        })`,\n                    };\n                  }\n                  return tab;\n                })\n              );\n            }}\n          >\n            Change title of tab #4\n          </button>\n        </div>\n      </div>\n    );\n  },\n};\n","\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n/* @jsxFrag React.Fragment */\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n\n\nexport const frontMatter = {};\nexport const contentTitle = 'Tabs';\nexport const metadata = {\n  \"unversionedId\": \"components/Tabs\",\n  \"id\": \"components/Tabs\",\n  \"title\": \"Tabs\",\n  \"description\": \"Features\",\n  \"source\": \"@site/docs/components/Tabs.mdx\",\n  \"sourceDirName\": \"components\",\n  \"slug\": \"/components/Tabs\",\n  \"permalink\": \"/jui/docs/components/Tabs\",\n  \"draft\": false,\n  \"editUrl\": \"https://github.com/alirezamirian/jui/edit/master/packages/website/docs/components/Tabs.mdx\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"frontMatter\": {},\n  \"sidebar\": \"tutorialSidebar\",\n  \"previous\": {\n    \"title\": \"StatusBar\",\n    \"permalink\": \"/jui/docs/components/StatusBar\"\n  },\n  \"next\": {\n    \"title\": \"ToolWindows\",\n    \"permalink\": \"/jui/docs/components/ToolWindows\"\n  }\n};\nexport const assets = {\n\n};\n\nimport { RefToIntellijPlatform } from \"@site/src/components/RefToIntellijPlatform.tsx\";\nimport {\n  EditorTheme,\n  DebuggerTheme,\n  ToolWindowTheme,\n} from \"@intellij-platform/core/Tabs/3-TabThemes.stories\";\nimport { Overflow } from \"@intellij-platform/core/Tabs/2-Tabs.stories\";\nimport { Example } from \"@site/src/components/ExampleContext\";\nexport const toc = [{\n  value: 'Features',\n  id: 'features',\n  level: 3\n}, {\n  value: 'Remaining',\n  id: 'remaining',\n  level: 4\n}, {\n  value: 'Simple usage',\n  id: 'simple-usage',\n  level: 2\n}, {\n  value: 'Overflow behavior',\n  id: 'overflow-behavior',\n  level: 2\n}, {\n  value: 'Customization',\n  id: 'customization',\n  level: 2\n}, {\n  value: 'Editor Theme',\n  id: 'editor-theme',\n  level: 3\n}, {\n  value: 'Debugger Theme',\n  id: 'debugger-theme',\n  level: 3\n}, {\n  value: 'Tool Window Theme',\n  id: 'tool-window-theme',\n  level: 3\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"tabs\"\n    }}>{`Tabs`}</h1>\n    <h3 {...{\n      \"id\": \"features\"\n    }}>{`Features`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Fully customizable and themeable`}</li>\n      <li parentName=\"ul\">{`Support for different ways of handling overflow`}</li>\n      <li parentName=\"ul\">{`Default tab themes, with support for icon, close button and pinned tabs.`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"remaining\"\n    }}>{`Remaining`}</h4>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`drag and drop`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"simple-usage\"\n    }}>{`Simple usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\",\n        \"metastring\": \"live\",\n        \"live\": true\n      }}>{`<Tabs>\n  <Item>Tab 1</Item>\n  <Item>Tab 2</Item>\n  <Item>Tab 3</Item>\n</Tabs>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"overflow-behavior\"\n    }}>{`Overflow behavior`}</h2>\n    <p>{`There are a few was of handling the overflow, when there is not enough space for showing all tabs. By default tabs will\nscroll horizontally and a small arrow down icon button is added next to the tabs which opens an overflow menu for the\ntabs that are not fully visible, based on the current scroll position.`}</p>\n    <admonition {...{\n      \"type\": \"tip\"\n    }}><p parentName=\"admonition\">{`Use `}<inlineCode parentName=\"p\">{`TabItem`}</inlineCode>{` instead of `}<inlineCode parentName=\"p\">{`Item`}</inlineCode>{` to specify via `}<inlineCode parentName=\"p\">{`inOverflowMenu`}</inlineCode>{` prop, a different react node to be shown when the tab\nis rendered in the overflow menu.`}</p></admonition>\n    <Example mdxType=\"Example\">\n  <Overflow.render maxWidth={1800} />\n    </Example>\n    <br />\n    <p>{`Overflow menu can be disabled via `}<inlineCode parentName=\"p\">{`noOverflow`}</inlineCode>{` prop:`}</p>\n    <Example mdxType=\"Example\">\n  <Overflow.render maxWidth={1800} noOverflowMenu />\n    </Example>\n    <br />\n    <p>{`Horizontal scroll can be disabled via `}<inlineCode parentName=\"p\">{`noScroll`}</inlineCode>{` prop. If overflow is also disabled, tabs will be shrunk to fit\nthe available space.`}</p>\n    <admonition {...{\n      \"type\": \"warning\"\n    }}><p parentName=\"admonition\">{`Support for `}<inlineCode parentName=\"p\">{`noScroll`}</inlineCode>{` is under development.`}</p></admonition>\n    <h2 {...{\n      \"id\": \"customization\"\n    }}>{`Customization`}</h2>\n    <p><inlineCode parentName=\"p\">{`Tabs`}</inlineCode>{` component allows for `}<inlineCode parentName=\"p\">{`TabsComponent`}</inlineCode>{` (the container) and `}<inlineCode parentName=\"p\">{`TabComponent`}</inlineCode>{` to allow for customizing look and feel.\nBy default `}<inlineCode parentName=\"p\">{`StyledDefaultTabs`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`StyledDefaultTab`}</inlineCode>{` are used. The following variations are a thin wrapper around\n`}<inlineCode parentName=\"p\">{`Tabs`}</inlineCode>{`, which use those two props. They also expose a customized version of `}<inlineCode parentName=\"p\">{`TabContentLayout`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"editor-theme\"\n    }}>{`Editor Theme`}</h3>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`EditorTabs`}</inlineCode>{` together with `}<inlineCode parentName=\"p\">{`EditorTabContent`}</inlineCode>{` for editor tab style.`}</p>\n    <Example mdxType=\"Example\">\n  <EditorTheme.render />\n    </Example>\n    <h3 {...{\n      \"id\": \"debugger-theme\"\n    }}>{`Debugger Theme`}</h3>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`DebuggerTabs`}</inlineCode>{` together with `}<inlineCode parentName=\"p\">{`DebuggerTabContent`}</inlineCode>{` for editor tab style.`}</p>\n    <Example mdxType=\"Example\">\n  <DebuggerTheme.render />\n    </Example>\n    <h3 {...{\n      \"id\": \"tool-window-theme\"\n    }}>{`Tool Window Theme`}</h3>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`ToolWindowTabs`}</inlineCode>{` together with the default `}<inlineCode parentName=\"p\">{`TabContentLayout`}</inlineCode>{` for editor tab style.`}</p>\n    <Example mdxType=\"Example\">\n  <ToolWindowTheme.render />\n    </Example>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n"],"names":["BareButton","React","_ref","forwardedRef","elementType","elementTypeProp","props","children","type","undefined","ref","useObjectRef","buttonProps","useButton","domProps","filterDOMProps","autoFocus","mergeProps","__docgenInfo","Item","_Item","getCollectionNode","context","result","StatelyItem","next","value","originalShouldInvalidate","shouldInvalidate","invalidated","ItemStateContext","ICONS_DIR_PREFIX","useIconPath","iconDescriptor","themePath","theme","useTheme","resolvedValue","modifiers","name","isUnderDarcula","filter","modifier","Disabled","includes","reduce","soFar","findIconPath","LafIcon","icon","size","resolvedIconPath","useForwardedRef","useSvgIcon","path","StyledIconWrapper","_extends","amendName","iconNameOrPath","amendment","ext","split","getPlatformIconPath","relativePath","startsWith","slice","PlatformIcon","darkIcon","iconName","dark","getDarkPath","darkPath","fallbackPath","DEFAULT_ICON_SIZE","styled","span","_ref2","_ref3","role","itemState","useContext","selected","isSelected","isContainerFocused","useEffect","canceled","async","console","error","current","ariaBusy","svg","getSvgIcon","catch","e","finally","element","querySelector","remove","svgElement","document","createElement","appendChild","outerHTML","randomPostfix","Math","random","toFixed","idMatches","matchAll","modifiedSvg","_","id","newId","replaceAll","makeIdsUnique","fetchIcon","theOld","theNew","str","replaced","replace","replacedAgain","DEFAULT_MINIMUM_BUTTON_SIZE","NAVBAR_MINIMUM_BUTTON_SIZE","StyledIconButton","button","minSize","color","_ref4","_ref5","_ref6","_ref7","_ref8","IconButton","_ref9","preventFocusOnPress","excludeFromTabOrder","isPressed","isPressedInput","isDisabled","onPress","onPressChange","onPressEnd","onPressStart","onPressUp","shouldCancelOnPointerExit","otherProps","focusableProps","useFocusable","pressProps","usePress","className","disabled","tabIndex","ListDivider","StyledVerticalSeparator","as","useSeparator","orientation","separatorProps","patchCollectionItem","nodes","partialNode","childNodes","result2","partialChildNode","partialChildNodeWithoutType","PatchedItem","bind","PatchedSection","Section","convertChildren","Array","isArray","map","Item2","key","MenuOverlayContext","close","defaultAutoFocus","MenuContext","useMenu","state","onAction","onActionProp","submenuBehavior","onClose","collection","getItem","hasChildNodes","menuContextValue","menuProps","useMenuAria","useMenuState","node","patchCollectionProps","useTreeState","childExpansionBehaviour","expandedKeys","expandedKey","onExpandedChange","firstKey","onExpandedKeyChange","defaultExpandedKeys","defaultExpandedKey","Menu","minWidth","Provider","StyledMenu","style","fillAvailableSpace","renderMenuNodes","StyledMenuItemText","StyledMenuItemPlatformIcon","StyledMenuItemLafIcon","MenuItemContext","descriptionProps","labelProps","keyboardShortcutProps","useMenuItemLayout","MenuItem","item","nestedMenuRef","disabledKeys","has","isExpanded","selectionManager","selectedKeys","isFocused","focusedKey","renderSubmenu","Submenu","itemWrapper","i","menuItemProps","hasSubmenu","ariaMenuItemProps","useMenuItemAria","onMouseEnter","onPointerEnter","onPointerDown","hoverProps","useHover","onHoverStart","isAnySubmenuOpen","some","parentKey","toggleKey","isFocusVisible","setFocused","setFocusedKey","keyboardProps","onKeyDown","stopPropagation","togglePressProps","useMenuItem","overlayProps","positionProps","useOverlayPosition","targetRef","overlayRef","placement","shouldFlip","offset","crossOffset","MENU_VERTICAL_PADDING","MENU_BORDER_WIDTH","isOpen","arrowProps","onPointerUp","StyledMenuItem","isActive","StyledMenuItemIcon","Selected","rendered","StyledNestedArrow","Overlay","OverlayComponent","SimpleOverlay","parentState","rootKey","portalContainer","body","ReactDOM","StyledMenuItemLayout","div","Content","Shortcut","kbd","currentForegroundAware","MenuItemLayout","content","shortcut","useContextOrThrow","allowedIcon","MenuOverlay","restoreFocus","FocusScope","MenuTrigger","renderMenu","direction","align","positioningTargetRef","useMenuTriggerState","triggerRef","menuTriggerProps","triggerProps","useMenuTrigger","ariaButtonProps","useOverlay","shouldCloseOnBlur","isKeyboardDismissDisabled","isDismissable","shouldCloseOnInteractOutside","matches","getPlacement","containerPadding","ul","WINDOW_SHADOW","css","highlightedStyle","asCurrentForeground","defaultStyle","disabledStyle","li","useSubmenu","keyboardDelegate","rootItem","textValue","MenuKeyboardDelegate","submenuProps","useSubmenuAria","submenuBehaviorProps","setTimeout","focus","useRef","useSubmenuState","ListKeyboardDelegate","constructor","collator","super","keys","this","getKeys","flatMap","getFirstKey","getLastKey","getKeyBelow","keyBelow","getKeyAbove","keyAbove","useKeyboard","contains","target","continuePropagation","root","useState","isFocusedRef","focusedKeyRef","Object","defineProperties","get","SelectionManager","StyledMenuHeading","StyledMenuSectionItemsContainer","MenuSection","itemProps","headingProps","groupProps","useMenuSection","heading","length","hasDivider","ParentOverlayContext","AriaOverlay","containerRef","areInNestedOverlays","element1","element2","overlayRoot1","closest","overlayRoot2","Boolean","DarculaSeparatorUI","defaultSize","StyledSeparator","hr","backgroundColor","backgroundClip","boxSizing","margin","border","flexShrink","StyledHorizontalSeparator","DebuggerTabContent","title","closeButton","TabContentLayout","startIcon","endIcon","StyledDebuggerTab","StyledDefaultTab","getTabThemeStyles","underlineHeight","underlinedTabBackground","debuggerTabTheme","DebuggerTabs","Tabs","TabComponent","focusable","EditorTabContent","onUnpin","pinned","containerProps","TooltipTrigger","tooltip","ActionTooltip","actionName","editorTabTheme","borderColor","background","underlinedTabInactiveBackground","hoverInactiveBackground","hoverBackground","inactiveUnderlineColor","underlineColor","underlinedTabInactiveForeground","underlinedTabForeground","StyledEditorTab","StyledEditorTabs","StyledDefaultTabs","getTabsThemeStyles","EditorTabs","TabsComponent","noBorders","commonColors","contrastBorder","StyledTabItemLayout","iconStyle","StyledStartIconWrapper","StyledEndIconWrapper","TabItem","active","horizontalOverflowIndicatorStyles","StyledHorizontalOverflowShadows","hasOverflowAtStart","panelBackground","hasOverflowAtEnd","Tab","forwardRef","shouldSelectOnPressUp","Component","tabProps","useTab","selectedKey","scrollBarDisabledStyle","StyledTabList","multiRow","noOverflowMenu","noScroll","useTabListState","tabListProps","useTabList","scrolledIndicatorProps","hasOverflow","threshold","setHasOverflow","left","right","top","bottom","update","offsetLeft","scrollLeft","offsetRight","scrollWidth","offsetWidth","offsetTop","scrollTop","offsetBottom","scrollHeight","offsetHeight","newHasOverflow","onScroll","useHasOverflow","overflowedElements","useOverflowObserver","overflowedKeys","Set","HTMLElement","dataset","notNull","scrollableContainer","selectedTabElement","scrollIntoView","Error","TabsOverflowMenu","onSelect","setSelectedKey","items","menuItem","inOverflowMenu","toolWindowTabTheme","StyledToolWindowTab","StyledToolWindowTabs","ToolWindowTabs","tooltipProps","Tooltip","Header","StyledTooltip","multiline","tooltipBackground","inset","hasPointer","tooltipBorderColor","WITH_POINTER_BORDER_RADIUS","StyledShortcut","StyledHeader","fontSizeDelta","StyledDescription","_ref10","contextHelpForeground","_ref11","StyledLink","_ref12","linkForegroundEnabled","placementToPointerSide","center","_ref13","withPointer","isInteractive","pointerPositionStyle","TooltipContext","useTooltip","open","side","TooltipPointer","tooltipRef","_Tooltip","assign","Description","Link","POINTER_THICKNESS","TRANSLATE","sideStyles","StyledTooltipPointer","POINTER_WIDTH","POINTER_HEIGHT","normalizeCssValue","withMin","min","withMax","max","HEIGHT_OFFSET","WIDTH_OFFSET","limitPointerPositionStyles","width","height","applyVerticalMinMax","compose","identity","applyHorizontalMinMax","getOffsetCssProp","invert","pointerPositionToOffsetStyle","offsetValue","setSize","delay","useTooltipTriggerState","positionAria","useMouseEventOverlayPosition","requestAnimationFrame","updatePosition","TooltipTriggerAndOverlay","trigger","showOnFocus","setInteractive","useTooltipTrigger","onFocus","useLayoutEffect","FocusableProvider","normalizeChildren","useAriaTooltipTrigger","HTMLInputElement","onMouseDown","useCollectionCacheInvalidation","cacheInvalidation","invalidators","lastInvalidators","usePrevious","anInvalidator","index","Symbol","iterator","TreeCollection","_temp","keyMap","Map","iterable","lastKey","last","visit","set","child","nextKey","prevKey","_Symbol$iterator","getKeyBefore","getKeyAfter","at","idx","getSingleChildrenKeys","getSingleChildrenKeysRecursive","previousKeys","childNodesIterator","firstChild","done","noMoreChildren","isExpandable","concat","isEmptyIterable","TreeSelectionManager","options","expandSelection","expandKeys","getExpandAndShrinkKeys","setSelectedKeys","shrinkSelection","shrinkKeys","recursivelyGetExpandAndShrinkKeys","previousChild","parent","newKeys","parentDescendants","getAllDescendants","getAllRoots","every","descendants","stopKeys","flat","_TreeCollection","rootKeys","from","getAllExpandableKeys","rootNodes","recursivelyAddExpandableKeys","add","treeRef","setExpandedKeys","useControlledState","selectionState","useMultipleSelectionState","selectionBehavior","useMemo","tree","useCollection","useCallback","latestState","useLatest","useImperativeHandle","replaceSelection","expandAll","collapseAll","select","useTreeRef","newExpandedKeys","toggleTreeNode","expandedSiblings","getRootItemKeys","getChildItems","siblings","push","getSiblings","aKey","childItems","sectionItems","res","delete","styledComponents","ThemeConsumer","directChildRef","focusManagerRef","forceFocusFirst","focusManager","containerElement","parentElement","focusFirst","activeElement","focusNext","tabbable","WrappedFocusScope","GetFocusManager","hidden","useFocusManager","OverflowObserver","callback","mutationObserver","data","MutationObserver","mutations","forEach","mutation","Element","removedNodes","intersectionObserver","unobserve","addedNodes","observe","disconnect","IntersectionObserver","entries","newHiddenElements","entry","isIntersecting","newVisibleElements","previouslyOverflowedElements","currentOverflowElements","childElement","childList","values","scrollableContainerRef","rootMargin","setOverflowedElements","overflowObserver","change","Context","nullErrorMessage","innerRef","lastMouseClientPos","globalMoveHandler","clientX","clientY","addEventListener","fakeTarget","pointerEvents","position","visibility","coordinatesSource","_updatePosition","ExampleContext","themeName","themeJson","light","lightTheme","highContrast","highContrastTheme","darcula","darculaTheme","Theme","useFixDocusaurusStyleBleeds","BrowserOnly","fallback","ThemeProvider","Example","_StyledDiv","FLAG_CLASSNAME","classList","querySelectorAll","linkEl","sheet","cssRules","rule","cssText","deleteRule","_styled","withConfig","displayName","componentId","RefToIntellijPlatform","href","pop","EditorTheme","render","editorTabs","tab","DebuggerTheme","debuggerTabs","ToolWindowTheme","toolWindowTabs","Overflow","maxWidth","tabs","setTabs","fill","indexOf","marginTop","onClick","frontMatter","contentTitle","metadata","assets","toc","level","layoutProps","MDXLayout","MDXContent","components","mdx","mdxType","parentName","isMDXComponent"],"sourceRoot":""}