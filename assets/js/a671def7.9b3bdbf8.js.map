{"version":3,"file":"assets/js/a671def7.9b3bdbf8.js","mappings":"oPAKO,MAAMA,EAAc,GACdC,EAAe,SACfC,EAAW,CACtB,cAAiB,oBACjB,GAAM,oBACN,MAAS,SACT,YAAe,0CACf,OAAU,mCACV,cAAiB,aACjB,KAAQ,qBACR,UAAa,8BACb,QAAW,+FACX,KAAQ,GACR,QAAW,UACX,YAAe,GACf,QAAW,kBACX,SAAY,CACV,MAAS,iBACT,UAAa,sCAEf,KAAQ,CACN,MAAS,WACT,UAAa,kCASJC,EAAM,CAAC,CAClBC,MAAO,WACPC,GAAI,WACJC,SAAU,CAAC,CACTF,MAAO,YACPC,GAAI,YACJC,SAAU,GACVC,MAAO,IAETA,MAAO,IAGHC,EAAc,CAClBL,IAAAA,GAGa,SAASM,EAAT,GAGX,IAH+B,WACjCC,KACGC,GACF,EACD,OAAO,QALS,WAKT,UAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,cACE,GAAM,UACH,WACL,iBAAK,eAAa,aAAGC,WAAW,IAC5B,KAAQ,mDACL,UAAc,2BACrB,cACE,GAAM,YACH,aACL,mBACE,cAAIA,WAAW,MAAO,gBAAc,sBAAYA,WAAW,MAAO,WAAwB,eAC1F,cAAIA,WAAW,MAAO,8BAA4B,sBAAYA,WAAW,MAAO,uBAAoC,MAAI,sBAAYA,WAAW,MAAO,uBAAoC,OAE5L,cACE,GAAM,aACH,cACL,cACE,UAAa,uBAEb,cAAIA,WAAW,KACb,UAAa,mBACZ,iBAAOA,WAAW,KACjB,KAAQ,WACR,SAAW,EACX,UAAY,IACD,KAAG,aAAGA,WAAW,KAC5B,KAAQ,2DACL,4BAAgC,sEAEvC,cAAIA,WAAW,KACb,UAAa,mBACZ,iBAAOA,WAAW,KACjB,KAAQ,WACR,SAAW,EACX,UAAY,IACD,IAAK,8DACpB,cAAIA,WAAW,KACb,UAAa,mBACZ,iBAAOA,WAAW,KACjB,KAAQ,WACR,SAAW,EACX,UAAY,IACD,IAAK,4BAEtB,oBAAK,gBAAMA,WAAW,MAClB,UAAa,eACb,WAAc,cACd,MAAQ,EACR,QAAU,GACP,uTAQP,eACE,UAAa,uDACZ,eAAKA,WAAW,MACf,UAAa,uBACZ,cAAIA,WAAW,QAAM,gBAAMA,WAAW,KACnC,UAAa,oBACZ,eAAKA,WAAW,OACf,MAAS,6BACT,MAAS,KACT,OAAU,KACV,QAAW,cACV,gBAAMA,WAAW,MAChB,SAAY,UACZ,EAAK,4PACkB,0BAAiC,eAAKA,WAAW,MAChF,UAAa,uBACZ,aAAGA,WAAW,OAAQ,2IACf,sBAAYA,WAAW,KAAM,uBAAoC,gBAC7E,eACE,UAAa,iDACZ,eAAKA,WAAW,MACf,UAAa,uBACZ,cAAIA,WAAW,QAAM,gBAAMA,WAAW,KACnC,UAAa,oBACZ,eAAKA,WAAW,OACf,MAAS,6BACT,MAAS,KACT,OAAU,KACV,QAAW,cACV,gBAAMA,WAAW,MAChB,SAAY,UACZ,EAAK,yLACkB,sBAA6B,eAAKA,WAAW,MAC5E,UAAa,uBACZ,aAAGA,WAAW,OAAQ,iQAO/BJ,EAAWK,gBAAiB","sources":["webpack://website/./docs/components/Button.mdx"],"sourcesContent":["\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n\n\nexport const frontMatter = {};\nexport const contentTitle = 'Button';\nexport const metadata = {\n  \"unversionedId\": \"components/Button\",\n  \"id\": \"components/Button\",\n  \"title\": \"Button\",\n  \"description\": \"Standalone Button with a textual label.\",\n  \"source\": \"@site/docs/components/Button.mdx\",\n  \"sourceDirName\": \"components\",\n  \"slug\": \"/components/Button\",\n  \"permalink\": \"/jui/docs/components/Button\",\n  \"editUrl\": \"https://github.com/alirezamirian/jui/edit/master/packages/website/docs/components/Button.mdx\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"frontMatter\": {},\n  \"sidebar\": \"tutorialSidebar\",\n  \"previous\": {\n    \"title\": \"Action Toolbar\",\n    \"permalink\": \"/jui/docs/components/ActionToolbar\"\n  },\n  \"next\": {\n    \"title\": \"Checkbox\",\n    \"permalink\": \"/jui/docs/components/Checkbox\"\n  }\n};\n\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { RefToIntellijPlatform } from \"../../src/components/RefToIntellijPlatform.tsx\";\nimport { Example } from \"../../src/components/ExampleContext\";\nexport const toc = [{\n  value: 'Features',\n  id: 'features',\n  children: [{\n    value: 'Remaining',\n    id: 'remaining',\n    children: [],\n    level: 4\n  }],\n  level: 3\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"button\"\n    }}>{`Button`}</h1>\n    <p>{`Standalone `}<a parentName=\"p\" {...{\n        \"href\": \"https://jetbrains.github.io/ui/controls/button/\"\n      }}>{`Button`}</a>{` with a textual label.`}</p>\n    <h3 {...{\n      \"id\": \"features\"\n    }}>{`Features`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Support for `}<inlineCode parentName=\"li\">{`default`}</inlineCode>{` button UI`}</li>\n      <li parentName=\"ul\">{`Focus management options (`}<inlineCode parentName=\"li\">{`preventFocusOnPress`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`excludeFromTabOrder`}</inlineCode>{`)`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"remaining\"\n    }}>{`Remaining`}</h4>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}<a parentName=\"li\" {...{\n          \"href\": \"https://jetbrains.github.io/ui/controls/button/#default\"\n        }}>{`Default button behaviour`}</a>{` is not implemented yet. It's\njust the appearance at the moment.`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Platform Specific UI. It's based on Mac UI at the moment.`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Support for mnemonics.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live themed\",\n        \"live\": true,\n        \"themed\": true\n      }}>{`<>\n  <Button>Button</Button> <br /><br />\n  <Button isDefault>Default</Button> <br /><br />\n  <Button isDisabled>Disabled</Button> <br /><br />\n  <Button excludeFromTabOrder>Exclude from tab order</Button> <br /><br />\n  <Button preventFocusOnPress>Prevent focus on press</Button> <br /><br />\n</>\n`}</code></pre>\n    <div {...{\n      \"className\": \"admonition admonition-caution alert alert--warning\"\n    }}><div parentName=\"div\" {...{\n        \"className\": \"admonition-heading\"\n      }}><h5 parentName=\"div\"><span parentName=\"h5\" {...{\n            \"className\": \"admonition-icon\"\n          }}><svg parentName=\"span\" {...{\n              \"xmlns\": \"http://www.w3.org/2000/svg\",\n              \"width\": \"16\",\n              \"height\": \"16\",\n              \"viewBox\": \"0 0 16 16\"\n            }}><path parentName=\"svg\" {...{\n                \"fillRule\": \"evenodd\",\n                \"d\": \"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"\n              }}></path></svg></span>{`Accessibility Caveat`}</h5></div><div parentName=\"div\" {...{\n        \"className\": \"admonition-content\"\n      }}><p parentName=\"div\">{`Following the original implementation, there is currently no visual feedback for pressed (active) state. That's more of\nan issue when `}<inlineCode parentName=\"p\">{`preventFocusOnPress`}</inlineCode>{` is used.`}</p></div></div>\n    <div {...{\n      \"className\": \"admonition admonition-info alert alert--info\"\n    }}><div parentName=\"div\" {...{\n        \"className\": \"admonition-heading\"\n      }}><h5 parentName=\"div\"><span parentName=\"h5\" {...{\n            \"className\": \"admonition-icon\"\n          }}><svg parentName=\"span\" {...{\n              \"xmlns\": \"http://www.w3.org/2000/svg\",\n              \"width\": \"14\",\n              \"height\": \"16\",\n              \"viewBox\": \"0 0 14 16\"\n            }}><path parentName=\"svg\" {...{\n                \"fillRule\": \"evenodd\",\n                \"d\": \"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"\n              }}></path></svg></span>{`focus visibility`}</h5></div><div parentName=\"div\" {...{\n        \"className\": \"admonition-content\"\n      }}><p parentName=\"div\">{`Following the original implementation, the focus ring is visible even when the interaction is done by mouse.\nIt's more common to show focus ring only when interacted with keyboard, but focus being always visible\nmitigates accessibility issue above.`}</p></div></div>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n"],"names":["frontMatter","contentTitle","metadata","toc","value","id","children","level","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}