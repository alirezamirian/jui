{"version":3,"file":"assets/js/e3b22f57.18333f08.js","mappings":"6IAiBA,QAPA,YAA+C,IAA1B,SAAEA,EAAF,SAAYC,GAAa,EAE1C,OADkBC,EAAAA,EAAAA,MACW,MAAZF,EACNG,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMH,KAE9CC,GAAY,O,uGCNvB,MAAMG,EAAMD,EAAAA,MAAW,IAAM,6EAEvBE,EAAkBC,EAAAA,OAAAA,GAAW;;;;gBAInB,QAAC,MAAEC,GAAH,SAAeA,EAAMC,MAAM;EAGrCC,EAAeH,EAAAA,OAAAA,GAAW;gBAChB,QAAC,MAAEC,GAAH,SACZ,IAAIG,EAAAA,MAAMH,EAAMC,MAAM,iBAAiBG,SAASC;WACzC,QAAC,MAAEL,GAAH,SAAeA,EAAMC,MAAM;;EAIhCK,GAAmBP,EAAAA,EAAAA,QAAOQ,EAAAA,EAAM;;;;;;;kBAOpB,QAAC,MAAEP,GAAH,SACZA,EAAMC,MAAM,+BAAgC;;;;EAM5CO,EAAeT,EAAAA,OAAAA,IAAY;;EAIlB,SAASU,IACtB,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,UAEhC,WAEF,OACE,gCACE,gBAAC,IAAD,MACG,IACC,gBAAC,KAAD,CAAgBF,UAAWA,GACzB,gBAAC,WAAD,CAAgBhB,SAAS,cACvB,gBAACI,EAAD,KACE,gBAACI,EAAD,KACE,gBAACI,EAAD,CAAkBO,GAAG,KACnB,gBAAC,EAAAC,aAAD,CAAcC,KAAK,qBADrB,yBAIA,gBAACP,EAAD,MACA,2CAEE,0BACEQ,MAAON,EACPO,SAAU,QAAC,OAAEC,GAAH,SACRP,EAAaO,EAAOF,SAGtB,0BAAQA,MAAM,WAAd,WACA,0BAAQA,MAAM,SAAd,SACA,0BAAQA,MAAM,gBAAd,oBAIN,gBAACnB,EAAD","sources":["webpack://website/../../node_modules/@docusaurus/core/lib/client/exports/BrowserOnly.js","webpack://website/./src/pages/example-app.tsx"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport useIsBrowser from '@docusaurus/useIsBrowser';\n// Similar comp to the one described here:\n// https://www.joshwcomeau.com/react/the-perils-of-rehydration/#abstractions\nfunction BrowserOnly({ children, fallback, }) {\n    const isBrowser = useIsBrowser();\n    if (isBrowser && children != null) {\n        return React.createElement(React.Fragment, null, children());\n    }\n    return fallback || null;\n}\nexport default BrowserOnly;\n","import React, { ComponentProps, useState } from \"react\";\nimport BrowserOnly from \"@docusaurus/BrowserOnly\";\nimport Link from \"@docusaurus/Link\";\nimport { PlatformIcon, styled, Color } from \"@intellij-platform/core\";\nimport {\n  ExampleContext,\n  ExampleContextThemeName,\n} from \"../components/ExampleContext\";\n\nconst App = React.lazy(() => import(\"../../../example-app/src\"));\n\nconst ColumnContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background: ${({ theme }) => theme.color(\"*.background\")};\n`;\n\nconst StyledBanner = styled.div`\n  background: ${({ theme }) =>\n    new Color(theme.color(\"*.background\")).darker().toString()};\n  color: ${({ theme }) => theme.color(\"*.foreground\")};\n  display: flex;\n`;\n\nconst BannerLinkButton = styled(Link)`\n  color: inherit;\n  padding: 0 6px;\n  height: 100%;\n  display: inline-flex;\n  align-items: center;\n  &:hover {\n    background: ${({ theme }) =>\n      theme.color(\"ActionButton.hoverBackground\", \"#DFDFDF\")};\n    color: inherit;\n    text-decoration: none;\n  }\n`;\n\nconst StyledSpacer = styled.span`\n  flex: 1;\n`;\n\nexport default function ExampleAppPage(): JSX.Element {\n  const [themeName, setThemeName] = useState<\n    ComponentProps<typeof ExampleContext>[\"themeName\"]\n  >(\"darcula\");\n\n  return (\n    <>\n      <BrowserOnly>\n        {() => (\n          <ExampleContext themeName={themeName}>\n            <React.Suspense fallback=\"loading...\">\n              <ColumnContainer>\n                <StyledBanner>\n                  <BannerLinkButton to=\"/\">\n                    <PlatformIcon icon=\"actions/exit.svg\" />\n                    &nbsp; Quit example app\n                  </BannerLinkButton>\n                  <StyledSpacer />\n                  <label>\n                    Theme: &nbsp;\n                    <select\n                      value={themeName}\n                      onChange={({ target }) =>\n                        setThemeName(target.value as ExampleContextThemeName)\n                      }\n                    >\n                      <option value=\"darcula\">Darcula</option>\n                      <option value=\"light\">Light</option>\n                      <option value=\"highContrast\">High Contrast</option>\n                    </select>\n                  </label>\n                </StyledBanner>\n                <App />\n              </ColumnContainer>\n            </React.Suspense>\n          </ExampleContext>\n        )}\n      </BrowserOnly>\n    </>\n  );\n}\n"],"names":["children","fallback","useIsBrowser","React","App","ColumnContainer","styled","theme","color","StyledBanner","Color","darker","toString","BannerLinkButton","Link","StyledSpacer","ExampleAppPage","themeName","setThemeName","useState","to","PlatformIcon","icon","value","onChange","target"],"sourceRoot":""}