{"version":3,"file":"assets/js/375aa0c7.cb9b3fff.js","sources":["webpack://website/../jui/src/Button/BareButton.tsx","webpack://website/../jui/src/Collections/Item.ts","webpack://website/../jui/src/Collections/ItemStateContext.tsx","webpack://website/../jui/src/Icon/LafIcon.tsx","webpack://website/../jui/src/Icon/PlatformIcon.tsx","webpack://website/../jui/src/Icon/StyledIconWrapper.tsx","webpack://website/../jui/src/Icon/useSvgIcon.tsx","webpack://website/../jui/src/IconButton/IconButton.tsx","webpack://website/../jui/src/List/ListDivider.tsx","webpack://website/../jui/src/Collections/patchCollectionProps.tsx","webpack://website/../jui/src/Menu/Menu.tsx","webpack://website/../jui/src/Menu/MenuItem.tsx","webpack://website/../jui/src/Menu/MenuItemLayout.tsx","webpack://website/../jui/src/Menu/MenuOverlay.tsx","webpack://website/../jui/src/Menu/MenuTrigger.tsx","webpack://website/../jui/src/Menu/StyledMenu.tsx","webpack://website/../jui/src/Menu/StyledMenuItem.tsx","webpack://website/../jui/src/Menu/Submenu.tsx","webpack://website/../jui/src/Menu/_useSubmenu.ts","webpack://website/../jui/src/Menu/_useSubmenuState.tsx","webpack://website/../jui/src/Menu/MenuSection.tsx","webpack://website/../jui/src/Menu/renderMenuNodes.tsx","webpack://website/../jui/src/Overlay/Overlay.tsx","webpack://website/../jui/src/StyledSeparator.tsx","webpack://website/../jui/src/Tabs/DebuggerTabs/DebuggerTabContent.tsx","webpack://website/../jui/src/Tabs/DebuggerTabs/StyledDebuggerTab.ts","webpack://website/../jui/src/Tabs/DebuggerTabs/DebuggerTabs.tsx","webpack://website/../jui/src/Tabs/EditorTabs/EditorTabContent.tsx","webpack://website/../jui/src/Tabs/EditorTabs/StyledEditorTab.ts","webpack://website/../jui/src/Tabs/EditorTabs/StyledEditorTabs.ts","webpack://website/../jui/src/Tabs/EditorTabs/EditorTabs.tsx","webpack://website/../jui/src/Tabs/StyledDefaultTab.ts","webpack://website/../jui/src/Tabs/StyledDefaultTabs.ts","webpack://website/../jui/src/Tabs/TabContentLayout.tsx","webpack://website/../jui/src/Tabs/TabItem.tsx","webpack://website/../jui/src/Tabs/TabTheme.ts","webpack://website/../jui/src/Tabs/StyledHorizontalOverflowShadows.tsx","webpack://website/../jui/src/Tabs/Tab.tsx","webpack://website/../jui/src/Tabs/Tabs.tsx","webpack://website/../jui/src/Tabs/useHasOverflow.tsx","webpack://website/../jui/src/Tabs/TabsOverflowMenu.tsx","webpack://website/../jui/src/Tabs/ToolWindowTabs/StyledToolWindowTab.ts","webpack://website/../jui/src/Tabs/ToolWindowTabs/StyledToolWindowTabs.ts","webpack://website/../jui/src/Tabs/ToolWindowTabs/ToolWindowTabs.tsx","webpack://website/../jui/src/Tooltip/ActionTooltip.tsx","webpack://website/../jui/src/Tooltip/tooltip-styles.ts","webpack://website/../jui/src/Tooltip/TooltipPointer.tsx","webpack://website/../jui/src/Tooltip/Tooltip.tsx","webpack://website/../jui/src/Tooltip/TooltipContext.tsx","webpack://website/../jui/src/utils/useMouseEventOverlayPosition.tsx","webpack://website/../jui/src/Tooltip/TooltipTrigger.tsx","webpack://website/../jui/src/Tooltip/TooltipTriggerAndOverlay.tsx","webpack://website/../jui/src/Collections/useCollectionCacheInvalidation.ts","webpack://website/../jui/src/Tree/__copied__TreeCollection.ts","webpack://website/../jui/src/Tree/getSingleChildrenKeys.ts","webpack://website/../jui/src/Tree/TreeSelectionManager.ts","webpack://website/../jui/src/Tree/useTreeState.ts","webpack://website/../jui/src/Tree/useTreeRef.tsx","webpack://website/../jui/src/style-constants.ts","webpack://website/../jui/src/styled.ts","webpack://website/../jui/src/utils/FocusScope.tsx","webpack://website/../jui/src/utils/array-utils.ts","webpack://website/../jui/src/utils/overflow-utils/OverflowObserver.ts","webpack://website/../jui/src/utils/overflow-utils/useOverflowObserver.tsx","webpack://website/../jui/src/utils/useContextOrThrow.tsx","webpack://website/../jui/src/utils/useLatest.ts","webpack://website/../jui/src/utils/usePrevious.ts","webpack://website/./src/components/ExampleContext.tsx","webpack://website/./src/components/RefToIntellijPlatform.tsx","webpack://website/../jui/src/Tabs/3-TabThemes.stories.tsx","webpack://website/../jui/src/Tabs/2-Tabs.stories.tsx","webpack://website/./docs/components/Tabs.mdx"],"sourcesContent":["import React, { ForwardedRef, JSXElementConstructor } from \"react\";\nimport { useButton } from \"@react-aria/button\";\nimport { filterDOMProps, mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport {\n  AriaBaseButtonProps,\n  AriaButtonProps,\n  ButtonProps,\n} from \"@react-types/button\";\n\nexport interface BareButtonProps extends AriaBaseButtonProps, ButtonProps {\n  children: React.ReactElement;\n  elementType?: AriaButtonProps[\"elementType\"];\n\n  // NOTE: there is a chance of unchecked breaking change here, since this is not explicitly mentioned as public API\n  // of useButton, but it is passed to the underlying usePress.\n  preventFocusOnPress?: boolean; // Should this be become true by default?\n}\n\n/**\n * A component to make arbitrary content an accessible button which is also able to be a tooltip trigger.\n */\nexport const BareButton = React.forwardRef(function BareButton(\n  { elementType: elementTypeProp, ...props }: BareButtonProps,\n  forwardedRef: ForwardedRef<HTMLElement>\n) {\n  const elementType =\n    elementTypeProp ||\n    (React.isValidElement(props.children) &&\n    typeof props.children.type === \"string\"\n      ? (props.children.type as unknown as JSXElementConstructor<unknown>)\n      : undefined) ||\n    \"button\";\n  const ref = useObjectRef(forwardedRef);\n  const { buttonProps } = useButton(\n    {\n      elementType,\n      ...props,\n    },\n    ref\n  );\n  const domProps = filterDOMProps(props);\n  const { autoFocus } = props;\n\n  return React.cloneElement(\n    props.children,\n    mergeProps(domProps, buttonProps, { autoFocus, ref })\n  );\n});\n","import React, { ReactElement } from \"react\";\nimport { ItemProps } from \"@react-types/shared\";\nimport { Item as StatelyItem, PartialNode } from \"@react-stately/collections\";\n\n// noinspection JSUnusedLocalSymbols\n/**\n * Item for collection components, which by default disables caching, unless `invalidated` prop is set to false on the\n * context passed to useCollection. Control over cache invalidation policy can be enabled by using\n * `useCollectionCacheInvalidation` for creating such context object.\n */\nfunction Item<T>(props: ItemProps<T>): ReactElement {\n  return null as any as React.ReactElement;\n}\n\nexport type CacheInvalidationContext = { invalidated?: boolean };\n\n// We don't want getCollectionNode to show up in the type definition\nlet _Item = Item as <T>(props: ItemProps<T>) => JSX.Element;\nexport { _Item as Item };\n\n/**\n * @private @preapproved\n */\nItem.getCollectionNode = function* getCollectionNode<T>(\n  props: ItemProps<T>,\n  context: CacheInvalidationContext\n): Generator<PartialNode<T>> {\n  const itemGenerator: Generator<PartialNode<T>> = (\n    StatelyItem as any\n  ).getCollectionNode(props, context);\n  const result = itemGenerator.next().value;\n  const originalShouldInvalidate = result.shouldInvalidate;\n  result.shouldInvalidate = (context: CacheInvalidationContext) =>\n    originalShouldInvalidate?.(context) || context.invalidated;\n  yield result;\n};\n","import React from \"react\";\nimport { Node } from \"@react-types/shared\";\n\n/**\n * Generic state of items in collections, provided via a context.\n * To be used in Menu, Tree, or anything that deals with a collection of items for which the common states like\n * **disabled** or **selected** is applicable.\n */\nexport interface ItemStateContextType {\n  node: Node<unknown>;\n  isSelected: boolean;\n  isContainerFocused: boolean;\n  isDisabled: boolean;\n}\n\nexport const ItemStateContext =\n  React.createContext<ItemStateContextType | null>(null);\n","import React, { ForwardedRef } from \"react\";\nimport { useTheme } from \"styled-components\";\nimport { Theme } from \"../Theme/Theme\";\nimport { IconProps } from \"./IconProps\";\nimport { StyledIconWrapper } from \"./StyledIconWrapper\";\nimport { useSvgIcon } from \"./useSvgIcon\";\nimport { useObjectRef } from \"@react-aria/utils\";\n\ninterface IconModifiers {\n  Selected?: boolean;\n  Focused?: boolean;\n  Disabled?: boolean;\n  Editable?: boolean;\n  Pressed?: boolean;\n}\n\nexport interface ThemeIconProps extends IconProps {\n  /**\n   * Icon which will be resolved against the default icon location based on theme type\n   */\n  icon: string | { name: string; modifiers: IconModifiers };\n\n  /**\n   * A theme key that can optionally override the icon.\n   */\n  themePath?: string;\n}\n\nconst ICONS_DIR_PREFIX = \"com/intellij/ide/ui/laf/icons/\";\n\n// Similar to LafIconLookup\nfunction findIconPath(\n  theme: Theme,\n  name: string,\n  modifiers: IconModifiers = {}\n) {\n  const basePath = `${ICONS_DIR_PREFIX}${\n    theme.isUnderDarcula() ? \"darcula/\" : \"intellij/\"\n  }`;\n  const suffix = (\n    [\"Editable\", \"Selected\", \"Pressed\", \"Focused\", \"Disabled\"] as Array<\n      keyof typeof modifiers\n    >\n  )\n    .filter((modifier) =>\n      // Focused or Pressed can't coexist with Disabled\n      modifiers.Disabled ? ![\"Focused\", \"Pressed\"].includes(modifier) : true\n    )\n    .reduce(\n      (soFar, modifier) => soFar + (modifiers[modifier] ? modifier : \"\"),\n      \"\"\n    );\n  return `${basePath}${name}${suffix}.svg`;\n}\n\nfunction useIconPath(\n  iconDescriptor: string | { name: string; modifiers?: IconModifiers },\n  themePath?: string\n) {\n  const theme = useTheme() as Theme; // TODO: investigate why useTheme is typed like this\n  const resolvedValue = themePath && theme.value(themePath);\n  if (resolvedValue) {\n    return resolvedValue;\n  }\n  const { modifiers = {}, name } =\n    typeof iconDescriptor === \"string\"\n      ? { name: iconDescriptor }\n      : iconDescriptor;\n  return findIconPath(theme, name, modifiers);\n}\n\nexport const LafIcon = React.forwardRef(\n  (\n    { themePath, icon, size, ...props }: ThemeIconProps,\n    forwardedRef: ForwardedRef<HTMLElement>\n  ) => {\n    const resolvedIconPath = useIconPath(icon, themePath);\n\n    const ref = useObjectRef(forwardedRef);\n    useSvgIcon({ path: `platform/platform-impl/src/${resolvedIconPath}` }, ref);\n    return <StyledIconWrapper {...props} ref={ref} size={size} />;\n  }\n);\n","import React, { ForwardedRef } from \"react\";\nimport { useTheme } from \"@intellij-platform/core/styled\";\nimport { IconProps } from \"./IconProps\";\nimport { StyledIconWrapper } from \"./StyledIconWrapper\";\nimport { useSvgIcon } from \"./useSvgIcon\";\nimport { useObjectRef } from \"@react-aria/utils\";\n\nexport interface PlatformIconProps extends IconProps {\n  /**\n   * Icon path in intellij platform repo.\n   * If starts with \"/\", the path will be from the repo root. Otherwise, it's relative to \"platform/icons/src\".\n   * \".svg\" extension is optional.\n   */\n  icon: string;\n  /**\n   * Similar to icon, but for dark themes.\n   */\n  darkIcon?: string;\n}\n\nexport const amendName = (iconNameOrPath: string, amendment: string) => {\n  const [name, ext] = iconNameOrPath.split(\".\");\n  return `${name}${amendment}${ext ? `.${ext}` : \"\"}`;\n};\n\nexport const getDarkPath = (path: string, darkPath?: string) => {\n  const [name, ext] = path.split(\".\");\n  return darkPath || `${name}_dark${ext ? `.${ext}` : \"\"}`;\n};\n\nconst getPlatformIconPath = (relativePath: string) =>\n  relativePath.startsWith(\"/\")\n    ? relativePath.slice(1)\n    : `platform/icons/src/${relativePath}`;\n\n/**\n * Renders an icon from the predefined list of platform icons.\n * icon name must follow the directory structure in platform icons.\n * @example <PlatformIcon icon=\"general/hideToolWindow\" />\n * @example <PlatformIcon icon=\"toolbar/pin\" />\n * @example <PlatformIcon icon=\"toolbar/pin.svg\" />\n * @example <PlatformIcon icon=\"/platform/dvcs-impl/resources/icons/currentBranchLabel.svg\" />\n */\nexport const PlatformIcon = React.forwardRef(\n  (\n    { icon, darkIcon, ...props }: PlatformIconProps,\n    forwardedRef: ForwardedRef<HTMLElement>\n  ) => {\n    const ref = useObjectRef(forwardedRef);\n    const theme = useTheme();\n    const iconName = theme.dark ? getDarkPath(icon, darkIcon) : icon;\n    useSvgIcon(\n      {\n        path: getPlatformIconPath(iconName),\n        fallbackPath: getPlatformIconPath(icon),\n      },\n      ref\n    );\n\n    return <StyledIconWrapper {...props} ref={ref} />;\n  }\n);\n","import { styled } from \"../styled\";\nimport { IconSize } from \"@intellij-platform/core/Icon/IconProps\";\n\nconst DEFAULT_ICON_SIZE: IconSize = 16;\n\nexport const StyledIconWrapper = styled.span<{\n  size?: IconSize;\n  useCurrentColor?: boolean;\n  role?: string;\n}>`\n  box-sizing: border-box;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 0;\n  width: ${({ size = DEFAULT_ICON_SIZE }) => `${size}px`};\n  height: ${({ size = DEFAULT_ICON_SIZE }) => `${size}px`};\n  position: relative; // to allow absolute positioned indicators and overlays on icon\n  cursor: ${({ role }) => (role === \"button\" ? \"pointer\" : undefined)};\n`;\n","import {\n  RefObject,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useState,\n} from \"react\";\nimport { useTheme } from \"@intellij-platform/core/styled\";\nimport { ItemStateContext } from \"@intellij-platform/core/Collections\";\n\nexport function useSvgIcon(\n  { path, fallbackPath }: { path: string; fallbackPath?: string },\n  /**\n   * ref to the icon wrapper element in which the svg should be injected.\n   * This hook used to return svg string, and that svg was set as dangerouslySetInnerHTML. But now it injects the svg.\n   * by direct DOM manipulation. That's to eliminate the need for using dangerouslySetInnerHTML, so that we can allow\n   * arbitrary children (like LiveIndicator) as overlays on top of icons.\n   */\n  ref: RefObject<HTMLElement>\n) {\n  const theme = useTheme();\n  const itemState = useContext(ItemStateContext);\n  const selected = itemState?.isSelected || itemState?.isContainerFocused;\n  const [svg, setSvg] = useState<null | string>(null);\n\n  useLayoutEffect(() => {\n    const element = ref.current;\n    if (element) {\n      element.ariaBusy = svg === null ? \"true\" : null;\n      element.querySelector(\"svg\")?.remove();\n      if (svg) {\n        const svgElement = document.createElement(\"svg\");\n        element.appendChild(svgElement);\n        svgElement.outerHTML = makeIdsUnique(svg); // UNSAFE! Would require sanitization, or icon sources must be trusted.\n      }\n    } else {\n      console.log(`unexpected state - ${path}`);\n    }\n  }, [svg]);\n\n  useEffect(() => {\n    let canceled = false;\n    const fetchIcon = async () => {\n      if (!path) {\n        console.error(\"icon path is empty\");\n        return;\n      }\n      setSvg(null);\n      const svg = await theme\n        .getSvgIcon(path, selected)\n        .catch((e) => {\n          if (fallbackPath) {\n            return theme.getSvgIcon(fallbackPath, selected);\n          }\n          throw e;\n        })\n        .catch((e) => {\n          console.error(`Could not resolve icon \"${path}\"`, e);\n          return \"\";\n        });\n      if (!canceled) {\n        setSvg(svg);\n      }\n    };\n    fetchIcon().catch(console.error);\n    return () => {\n      canceled = true;\n    };\n  }, [path, selected]);\n}\n\n/**\n * If multiple instance of the same icon is rendered at the same time, and the SVG includes\n * url(#...) references to locally defined ids, in some cases the icon is not rendered properly.\n * because of ids colliding. We make sure the ids are unique in each rendered icon.\n */\nfunction makeIdsUnique(svg: string): string {\n  const randomPostfix = (Math.random() * 1000).toFixed(0);\n  const idMatches = svg.matchAll(/id=\"(.*?)\"/g);\n  return [...idMatches].reduce((modifiedSvg, [_, id]) => {\n    const newId = `${id}-${randomPostfix}`;\n    return replaceAll(\n      `id=\"${id}\"`,\n      `id=\"${newId}\"`,\n      replaceAll(`url(#${id})`, `url(#${newId})`, modifiedSvg)\n    );\n  }, svg);\n}\n\nfunction replaceAll(theOld: string, theNew: string, str: string): string {\n  const replaced = str.replace(theOld, theNew);\n  const replacedAgain = replaced.replace(theOld, theNew);\n  if (replaced === replacedAgain) {\n    return replaced;\n  }\n  return replaceAll(theOld, theNew, replacedAgain);\n}\n","import { PressProps, usePress } from \"@react-aria/interactions\";\nimport React, { ForwardedRef, HTMLProps } from \"react\";\nimport { styled } from \"../styled\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport { useFocusable } from \"@react-aria/focus\";\n\nexport interface IconButtonProps\n  extends PressProps,\n    // Maybe we should allow any arbitrary HTMLProps<HTMLButtonElement> props, instead of whitelisting?\n    Pick<\n      HTMLProps<HTMLButtonElement>,\n      \"onFocus\" | \"onBlur\" | \"style\" | \"className\"\n    > {\n  children?: React.ReactNode;\n  /**\n   * The minimum width/height of the button.\n   */\n  minSize?: number;\n  /**\n   * Whether the button should be focusable by pressing tab. The default is true for icon buttons (aka. action buttons),\n   * which means they are not included in the tab order.\n   */\n  excludeFromTabOrder?: boolean;\n}\n\nexport const DEFAULT_MINIMUM_BUTTON_SIZE = 22;\nexport const NAVBAR_MINIMUM_BUTTON_SIZE = 20;\n\nexport const StyledIconButton = styled.button<{ minSize: number }>`\n  position: relative; // to allow absolutely positioned overlays like an dropdown icon at the bottom right corner\n  background: none;\n  color: inherit;\n  border: 1px solid transparent;\n  border-radius: 3px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  min-height: ${({ minSize }) => `${minSize}px`};\n  min-width: ${({ minSize }) => `${minSize}px`};\n  padding: 0;\n  margin: 0;\n  &:disabled {\n    opacity: 0.25; // not quite accurate implementation. There might be better ways to style disabled state.\n  }\n  &:hover:not(:disabled) {\n    background: ${({ theme }) =>\n      theme.color(\"ActionButton.hoverBackground\", \"#DFDFDF\")};\n    border-color: ${({ theme }) =>\n      theme.color(\"ActionButton.hoverBorderColor\", \"#DFDFDF\")};\n  }\n  &:focus-visible:not(:disabled) {\n    outline: none;\n    background: ${({ theme }) =>\n      theme.color(\"ActionButton.pressedBackground\", \"#CFCFCF\")};\n    border-color: ${({ theme }) =>\n      theme.color(\n        \"ActionButton.focusedBorderColor\",\n        theme.dark ? \"#5eacd0\" : \"#62b8de\"\n      )};\n  }\n  &:active:not(:disabled),\n  &.active:not(:disabled) {\n    background: ${({ theme }) =>\n      theme.color(\"ActionButton.pressedBackground\", \"#CFCFCF\")};\n    border-color: ${({ theme }) =>\n      theme.color(\"ActionButton.pressedBorderColor\", \"#CFCFCF\")};\n  }\n`;\n\n/**\n * Icon button, aka Action Button, in the reference implementation.\n * @see https://jetbrains.github.io/ui/controls/icon_button/\n */\nexport const IconButton = React.forwardRef(function IconButton(\n  {\n    minSize = DEFAULT_MINIMUM_BUTTON_SIZE,\n    preventFocusOnPress = true,\n    excludeFromTabOrder = true,\n    isPressed: isPressedInput,\n    isDisabled,\n    onPress,\n    onPressChange,\n    onPressEnd,\n    onPressStart,\n    onPressUp,\n    shouldCancelOnPointerExit,\n    ...otherProps\n  }: IconButtonProps,\n  forwardedRef: ForwardedRef<HTMLButtonElement>\n) {\n  // FIXME: use useButton\n\n  const ref = useObjectRef(forwardedRef);\n  const { focusableProps } = useFocusable({ isDisabled }, ref);\n  const { pressProps, isPressed } = usePress({\n    ref,\n    isPressed: isPressedInput,\n    isDisabled,\n    onPress,\n    onPressChange,\n    onPressEnd,\n    onPressStart,\n    onPressUp,\n    shouldCancelOnPointerExit,\n    preventFocusOnPress,\n  });\n\n  return (\n    <StyledIconButton\n      className={isPressed ? \"active\" : \"\"}\n      disabled={isDisabled}\n      {...mergeProps(pressProps, otherProps, focusableProps)}\n      minSize={minSize}\n      tabIndex={excludeFromTabOrder && !isDisabled ? -1 : undefined}\n      ref={ref}\n    />\n  );\n});\n","import React from \"react\";\nimport { StyledVerticalSeparator } from \"../StyledSeparator\";\nimport { useSeparator } from \"@react-aria/separator\";\n\nexport const ListDivider: React.FC = () => {\n  return (\n    <StyledVerticalSeparator\n      as={\"li\"}\n      {...useSeparator({ elementType: \"li\", orientation: \"vertical\" })\n        .separatorProps}\n    />\n  );\n};\n","import { Item, PartialNode, Section } from \"@react-stately/collections\";\nimport { Item as Item2 } from \"./Item\";\nimport {\n  CollectionBase,\n  CollectionElement,\n  ItemProps,\n  SectionProps,\n} from \"@react-types/shared\";\nimport React from \"react\";\n\nfunction* patchCollectionItem<T>(nodes: Generator<PartialNode<T>>) {\n  for (const partialNode of nodes)\n    yield {\n      ...partialNode,\n      *childNodes() {\n        const result2 = partialNode.childNodes?.();\n        if (result2) {\n          for (const partialChildNode of result2) {\n            const { type, ...partialChildNodeWithoutType } = partialChildNode;\n            yield partialChildNodeWithoutType;\n          }\n        }\n      },\n    };\n}\n\nconst PatchedItem = Item.bind(null);\n\n// @ts-expect-error: getCollectionNode is not public\nPatchedItem.getCollectionNode = function getCollectionNode<T>(\n  props: ItemProps<T>,\n  context: any\n): Generator<PartialNode<T>> {\n  // @ts-expect-error getCollectionNode is not public API\n  return patchCollectionItem(Item.getCollectionNode(props, context));\n};\n\nconst PatchedSection = Section.bind(null);\n\n// @ts-expect-error: getCollectionNode is not public\nPatchedSection.getCollectionNode = function getCollectionNode<T>(\n  props: SectionProps<T>,\n  context: any\n): Generator<PartialNode<T>> {\n  // @ts-expect-error getCollectionNode is not public API\n  return patchCollectionItem(Section.getCollectionNode(props, context));\n};\nfunction convertCollectionElement<T>(\n  result: CollectionElement<T> | React.ReactNode\n): CollectionElement<T> {\n  if (\n    React.isValidElement(result) &&\n    (result.type === Item || result.type === Item2)\n  ) {\n    return React.createElement(\n      PatchedItem,\n      {\n        key: result.key != null ? result.key : undefined,\n        ...(result.props as ItemProps<T>),\n      },\n      convertChildren(result.props.children)\n    ) as CollectionElement<T>;\n  }\n  if (React.isValidElement(result) && result.type === Section) {\n    return React.createElement(\n      PatchedSection,\n      {\n        key: result.key != null ? result.key : undefined,\n        ...(result.props as SectionProps<T>),\n      } as any,\n      convertChildren((result.props as any).children)\n    ) as CollectionElement<T>;\n  }\n  return result as CollectionElement<T>;\n}\n\nfunction convertChildren<T>(children: React.ReactNode): React.ReactNode {\n  return Array.isArray(children)\n    ? // NOTE: We intentionally avoid using React.Children.map as it messes with keys.\n      children.map(convertChildren)\n    : convertCollectionElement(children);\n}\n\n/**\n * CollectionBuilder expects child type to be the same as parent type, which is weird in the first place:\n * https://github.com/adobe/react-spectrum/blob/cae83ff95f2f709b761c70d47ace96d6346ed873/packages/%40react-stately/collections/src/CollectionBuilder.ts#L148\n * On the other hand, the default Item components sets the `type` to item, for all child PartialNode objects:\n * https://github.com/adobe/react-spectrum/blob/c49d9819adc2cb63377f39557352440c72072caf/packages/%40react-stately/collections/src/Item.ts#L40-L54\n * Which is also a little unexpected, as in many nested collections, an item can have all types of children.\n * This function patches that, replacing Item elements with PatchedItem element which doesn't set type on children\n * PartialNodes.\n */\nexport function patchCollectionProps<T>({\n  children,\n  ...props\n}: Partial<CollectionBase<T>>): CollectionBase<T> {\n  return {\n    ...props,\n    children:\n      typeof children === \"function\"\n        ? (node: T) => convertChildren(children(node)) as CollectionElement<T>\n        : (convertChildren(children) as CollectionElement<T>),\n  };\n}\n","import React, { CSSProperties, Key, RefObject, useContext } from \"react\";\nimport { AriaMenuOptions, useMenu as useMenuAria } from \"@react-aria/menu\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { AriaMenuProps } from \"@react-types/menu\";\nimport { Node } from \"@react-types/shared\";\nimport { patchCollectionProps } from \"@intellij-platform/core/Collections/patchCollectionProps\";\nimport { TreeProps, useTreeState } from \"../Tree/useTreeState\"; // shared dependency between tree and menu, that could be lifted up import {Submenu} from '@intellij-platform/core/Menu/Submenu'\nimport { renderMenuNodes } from \"./renderMenuNodes\";\nimport { StyledMenu } from \"./StyledMenu\";\nimport { SubmenuProps } from \"./Submenu\"; // internal export\n\nexport interface MenuProps<T>\n  extends Omit<\n    AriaMenuProps<T>,\n    // selection is not properly supported for nested menus. Plus, it's not even that meaningful for a nested menu\n    // at least the way it's implemented now.\n    | \"onSelectionChange\"\n    | \"defaultSelectedKeys\"\n    | \"selectionMode\"\n    | \"disallowEmptySelection\"\n  > {\n  /**\n   * Indicates currently expanded menu item (controlled).\n   */\n  expandedKey?: Key; // FIXME: should be keys\n  /**\n   * Called when expanded menu item is changed by user interaction, which can be either hovering over the menu item\n   */\n  onExpandedKeyChange?: (expandedKey: Key) => void; // FIXME: should be keys\n  defaultExpandedKey?: Key; // FIXME: should be keys\n  /**\n   * @deprecated\n   */\n  expandOn?: \"hover\" | \"press\"; // hover delay doesn't seem to be needed as an option\n\n  /**\n   * Defines the press behaviour (either by mouse or by pressing Enter when focused) on menu items with submenu.\n   * By default (undefined), pressing or hovering over a menu item with submenu, opens the submenu.\n   * When set to \"toggle\", pressing a menu item with submenu will toggle the submenu. Hovering over such items will\n   * no longer open the submenu.\n   * When set to \"action\", pressing a menu item with submenu will call onAction for that item, and closes the menu.\n   * Hovering over such items will no longer open the submenu.\n   *\n   * In all cases, pressing the right arrow will always open the submenu.\n   */\n  submenuBehavior?: \"default\" | \"toggleOnPress\" | \"actionOnPress\";\n\n  /**\n   * fills the available horizontal or vertical space, when rendered in a flex container.\n   */\n  fillAvailableSpace?: boolean;\n\n  /**\n   * Minimum width of the menu\n   * @default: 120px\n   */\n  minWidth?: CSSProperties[\"minWidth\"];\n}\n\n/**\n * Can be provided by the overlay where the menu is rendered in. If provided, menu will call the provided close function\n * on actions. Note that there is no `closeOnSelect` option as of now, on this context, since no use case seems to exist\n * for keeping the menu overlay open after a menu item is selected.\n * **Update**: there are use cases where the menu is not closed after an item is clicked. Most of the toggle-able\n * actions (the ones with a checkmark) seem to be like this.\n * TODO: Make \"close on selection\" more flexible. Some ideas:\n *  - instead of calling close, pass it to `onAction` handler. Then on each action, one would need to call close if\n *    needed.\n *  - Offer a `MenuItem` component to be used instead of generic `Item`, where it accepts `closeOnSelect` boolean, which\n *    is true by default.\n *  - pass a `keepOpen` function to `onAction`.\n *  - Allow signaling whether the menu should kept open, via the returned value of onAction. e.g. return false means keep open.\n *  Last two suggestions are based on the assumption that most of the menu items are not selectable.\n *  Note that MenuOverlayContext could be used directly in action handlers too, but baking it into the menu makes it\n *  much more convenient, which seems more important than breaking the nice separation between Menu and MenuTrigger.\n */\nexport const MenuOverlayContext = React.createContext<{\n  close: () => void;\n  defaultAutoFocus: MenuProps<unknown>[\"autoFocus\"];\n}>({\n  close: () => {},\n  defaultAutoFocus: undefined,\n});\nexport const MenuContext = React.createContext<\n  Pick<\n    MenuProps<unknown>,\n    \"onClose\" | \"onAction\" | \"submenuBehavior\" | \"autoFocus\"\n  > & {\n    itemWrapper?: (\n      renderedItem: React.ReactNode,\n      item: Node<unknown>\n    ) => React.ReactNode;\n    renderSubmenu?: (props: SubmenuProps<unknown>) => React.ReactNode;\n  }\n>({});\n\nexport function useMenu<T>(\n  {\n    onAction: onActionProp,\n    submenuBehavior = \"default\",\n    ...props\n  }: MenuProps<T> & AriaMenuOptions<T>,\n  state: TreeState<T>,\n  ref: RefObject<HTMLElement>\n) {\n  const { close, defaultAutoFocus } = useContext(MenuOverlayContext);\n  const autoFocus = props.autoFocus ?? defaultAutoFocus;\n  const onClose = () => {\n    props.onClose?.();\n    close();\n  };\n  const onAction = (key: Key) => {\n    if (\n      // The following check should have been in useMenu, but it's not currently. Probably because they haven't yet\n      // covered nested menus.\n      !state.collection.getItem(key)?.hasChildNodes\n    ) {\n      return onActionProp?.(key);\n    } else if (submenuBehavior === \"actionOnPress\") {\n      onClose();\n      return onActionProp?.(key);\n    }\n  };\n  const menuContextValue: React.ContextType<typeof MenuContext> = {\n    submenuBehavior,\n    autoFocus,\n    onAction,\n    onClose,\n  };\n  const { menuProps } = useMenuAria(\n    { ...props, onAction, onClose, autoFocus },\n    state,\n    ref\n  );\n\n  return {\n    menuProps,\n    menuContextValue,\n  };\n}\n\nexport function useMenuState<T extends object>(\n  props: TreeProps<T> &\n    Pick<\n      MenuProps<T>,\n      \"expandedKey\" | \"defaultExpandedKey\" | \"onExpandedKeyChange\"\n    >\n) {\n  props = patchCollectionProps(props);\n  return useTreeState({\n    ...props,\n    childExpansionBehaviour: \"single\",\n    expandedKeys: props.expandedKey ? [props.expandedKey] : undefined,\n    onExpandedChange: ([firstKey]) => props?.onExpandedKeyChange?.(firstKey),\n    defaultExpandedKeys: props.defaultExpandedKey\n      ? [props.defaultExpandedKey]\n      : undefined,\n  });\n}\n\n/**\n * UI for menus which are normally shown in a popover. Being rendered as an overlay is not handled here.\n * Also, there is no coupling with any higher level entity like \"Action\", since this is just for the UI layer.\n * Something like ActionMenu which creates a menu out of a list of actions can be implemented on top of this.\n *\n * @example\n *  <Menu>\n *    <Item>Item one</Item>\n *    <Item>\n *      <MenuItemLayout\n *        icon={<PlatformIcon icon={\"actions/copy\"} />}\n *        content=\"Copy\"\n *        shortcut={\"⌘C\"} />\n *    </Item>\n *  </Menu>\n *\n *  Current issues and limitations:\n *  - Divider in sub-menu's is not supported. because of a constraint in @react-stately/collections, which results in\n *    this error: Unsupported type <Divider> in <Item>. Only <Item> is supported. Maybe supporting section would\n *    be a workaround for it.\n *  - when a parent menu item which has an open submenu is hovered, it gets focus.\n */\nexport function Menu<T extends object>({ minWidth, ...props }: MenuProps<T>) {\n  const ref = React.useRef<HTMLUListElement>(null);\n  const state = useMenuState(props);\n  const { menuContextValue, menuProps } = useMenu(props, state, ref);\n\n  return (\n    /**\n     * MenuContext is used to pass onAction and onClose to be passed to useMenu in submenus.\n     * That's needed because in useMenuItem onAction and onClose are read off a WeakMap which has the menu state\n     * (TreeState) as key. So we have to pass onAction and onClose everytime we call useMenu in submenus, to let the\n     * menu items in that submenu access the right value of onAction and onClose. To avoid drilling these props down,\n     * we keep it in a context.\n     */\n    <MenuContext.Provider value={menuContextValue}>\n      <StyledMenu\n        {...menuProps}\n        ref={ref}\n        style={{ minWidth }}\n        fillAvailableSpace={props.fillAvailableSpace}\n      >\n        {renderMenuNodes(state, [...state.collection])}\n      </StyledMenu>\n    </MenuContext.Provider>\n  );\n}\n","import React, { HTMLAttributes, ReactNode, RefObject, useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { isFocusVisible, useHover, usePress } from \"@react-aria/interactions\";\nimport {\n  AriaMenuItemProps,\n  MenuItemAria,\n  useMenuItem as useMenuItemAria,\n} from \"@react-aria/menu\";\nimport { useOverlayPosition } from \"@react-aria/overlays\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { FocusableElement, Node } from \"@react-types/shared\";\nimport { ItemStateContext } from \"@intellij-platform/core/Collections/ItemStateContext\";\nimport { Overlay } from \"@intellij-platform/core/Overlay\";\n\nimport { LafIcon, PlatformIcon } from \"../Icon\";\nimport { styled } from \"../styled\";\nimport { MenuContext, MenuProps } from \"./Menu\";\nimport { MENU_BORDER_WIDTH, MENU_VERTICAL_PADDING } from \"./StyledMenu\";\nimport {\n  StyledMenuItem,\n  StyledMenuItemIcon,\n  StyledNestedArrow,\n} from \"./StyledMenuItem\";\nimport { Submenu, SubmenuProps } from \"@intellij-platform/core/Menu/Submenu\";\n\nexport interface MenuItemProps<T> {\n  item: Node<T>;\n  state: TreeState<T>;\n  onSubmenuClose?: () => void;\n}\n\nconst StyledMenuItemText = styled.span`\n  flex: 1;\n`;\n\nconst StyledMenuItemPlatformIcon = styled(PlatformIcon)`\n  svg path {\n    stroke: currentColor;\n  }\n`;\n\nconst StyledMenuItemLafIcon = styled(LafIcon)`\n  svg path {\n    stroke: currentColor;\n  }\n`;\n\nfunction useMenuItem<T extends unknown>(\n  {\n    submenuBehavior,\n    ...props\n  }: AriaMenuItemProps & { submenuBehavior: MenuProps<T>[\"submenuBehavior\"] },\n  state: TreeState<T>,\n  ref: RefObject<FocusableElement>\n): MenuItemAria {\n  const item = state.collection.getItem(props.key!)!;\n  const isDisabled = state.disabledKeys.has(item.key);\n  const isExpanded = state.expandedKeys.has(item.key);\n  const hasSubmenu = item.hasChildNodes;\n  const { menuItemProps: ariaMenuItemProps, ...result } = useMenuItemAria(\n    {\n      key: item.key,\n      // hack to prevent react-aria to call onClose when nested items are selected, which is incorrect, and because\n      // react-aria doesn't officially support nested menus at the moment\n      onClose: hasSubmenu ? () => {} : undefined,\n    },\n    state,\n    ref\n  );\n\n  // useMenuItem in react aria utilizes useHover to focus item on hover. The logic there conflicts with nested menus\n  // requirements (at least based on how nested menu is implemented here currently). Also, submenuBehavior requires\n  // some more customization. So we delete the handlers set by useHover in useMenuItem, and add a custom useHover.\n  delete ariaMenuItemProps.onMouseEnter;\n  delete ariaMenuItemProps.onPointerEnter;\n\n  if (submenuBehavior === \"default\" && isExpanded) {\n    // When menu item has its submenu opened, clicking it should not move focus or do anything.\n    delete ariaMenuItemProps.onPointerDown;\n  }\n\n  const { hoverProps } = useHover({\n    isDisabled: isDisabled,\n    onHoverStart: () => {\n      const isAnySubmenuOpen = [...state.expandedKeys].some(\n        (expandedKey) =>\n          state.collection.getItem(expandedKey)?.parentKey === item.parentKey\n      );\n\n      if (submenuBehavior === \"default\" && !isExpanded) {\n        state.toggleKey(item.key);\n      }\n\n      if (!isFocusVisible()) {\n        const shouldFocus =\n          submenuBehavior === \"default\" ? !isExpanded : !isAnySubmenuOpen;\n        if (shouldFocus) {\n          state.selectionManager.setFocused(true);\n        }\n        state.selectionManager.setFocusedKey(item.key);\n      }\n    },\n  });\n\n  const keyboardProps = {\n    onKeyDown: (e: React.KeyboardEvent) => {\n      if (\n        ((e.key === \"Enter\" || e.key === \" \") &&\n          submenuBehavior !== \"actionOnPress\") ||\n        \"ArrowRight\" === e.key\n      ) {\n        state.toggleKey(item.key);\n        e.stopPropagation();\n        return;\n      }\n    },\n  };\n\n  const { pressProps: togglePressProps } = usePress({\n    isDisabled: isDisabled,\n    onPressUp: () => {\n      state.toggleKey(item.key);\n      if (isExpanded) {\n        // submenu was expanded and is closed now. moving focus back to the parent item\n        state.selectionManager.setFocusedKey(item.key);\n      }\n    },\n  });\n\n  return {\n    ...result,\n    menuItemProps: mergeProps(\n      hasSubmenu\n        ? {\n            \"aria-expanded\": isExpanded,\n            \"aria-haspopup\": \"menu\",\n          }\n        : {},\n      ariaMenuItemProps,\n      hoverProps,\n      keyboardProps,\n      submenuBehavior === \"toggleOnPress\" ? togglePressProps : {}\n    ),\n  };\n}\n\nconst MenuItemContext = React.createContext<{\n  labelProps: HTMLAttributes<HTMLElement>;\n  descriptionProps: HTMLAttributes<HTMLElement>;\n  keyboardShortcutProps: HTMLAttributes<HTMLElement>;\n}>({ descriptionProps: {}, labelProps: {}, keyboardShortcutProps: {} });\n\nexport const useMenuItemLayout = () => {\n  return useContext(MenuItemContext);\n};\n\nexport function MenuItem<T>({ item, state }: MenuItemProps<T>) {\n  // Get props for the menu item element\n  const ref = React.useRef<HTMLLIElement>(null);\n  const nestedMenuRef = React.useRef<HTMLDivElement>(null);\n  const isDisabled = state.disabledKeys.has(item.key);\n  const isExpanded = state.expandedKeys.has(item.key);\n  const isSelected = state.selectionManager.selectedKeys.has(item.key);\n  const isFocused = state.selectionManager.focusedKey === item.key;\n  const {\n    onClose,\n    submenuBehavior,\n    renderSubmenu = (props: SubmenuProps<T>) => <Submenu {...props} />,\n    itemWrapper = (i: React.ReactNode) => i,\n  } = useContext(MenuContext);\n\n  const { menuItemProps, labelProps, descriptionProps, keyboardShortcutProps } =\n    useMenuItem(\n      {\n        submenuBehavior,\n        key: item.key,\n      },\n      state,\n      ref\n    );\n\n  const { pressProps: togglePressProps } = usePress({\n    isDisabled: isDisabled,\n    onPressUp: () => {\n      state.toggleKey(item.key);\n      if (isExpanded) {\n        // submenu was expanded and is closed now. moving focus back to the parent item\n        state.selectionManager.setFocusedKey(item.key);\n      }\n    },\n  });\n\n  let { overlayProps: positionProps } = useOverlayPosition({\n    targetRef: ref,\n    overlayRef: nestedMenuRef,\n    placement: \"right top\",\n    shouldFlip: true,\n    onClose,\n    offset: 0,\n    crossOffset: -(MENU_VERTICAL_PADDING + MENU_BORDER_WIDTH),\n    isOpen: isExpanded,\n  });\n\n  const arrowProps: HTMLAttributes<HTMLElement> =\n    submenuBehavior !== \"default\"\n      ? {\n          role: \"button\",\n          \"aria-label\": \"Open\",\n          ...mergeProps(togglePressProps, {\n            // to prevent pointer up event handler on the item, which would trigger action.\n            onPointerUp: (e: React.PointerEvent) => e.stopPropagation(),\n          }),\n        }\n      : {};\n  return (\n    <>\n      <StyledMenuItem\n        {...menuItemProps}\n        isDisabled={isDisabled}\n        isActive={isFocused}\n        ref={ref}\n      >\n        {isSelected && (\n          <StyledMenuItemIcon>\n            <StyledMenuItemLafIcon\n              icon={{\n                name: \"checkmark\",\n                modifiers: { Selected: isFocused },\n              }}\n            />\n          </StyledMenuItemIcon>\n        )}\n        <ItemStateContext.Provider\n          value={{\n            isDisabled,\n            isContainerFocused: state.selectionManager.isFocused,\n            isSelected,\n            node: item,\n          }}\n        >\n          <MenuItemContext.Provider\n            value={{ labelProps, descriptionProps, keyboardShortcutProps }}\n          >\n            {itemWrapper(\n              typeof item.rendered === \"string\" ? (\n                <StyledMenuItemText {...labelProps}>\n                  {item.rendered}\n                </StyledMenuItemText>\n              ) : (\n                item.rendered\n              ),\n              item\n            )}\n          </MenuItemContext.Provider>\n        </ItemStateContext.Provider>\n        {item.hasChildNodes && (\n          <StyledNestedArrow {...arrowProps}>\n            <StyledMenuItemPlatformIcon icon=\"icons/ide/menuArrow\" />\n          </StyledNestedArrow>\n        )}\n      </StyledMenuItem>\n      {isExpanded && (\n        /**\n         * A note about using Overlay:\n         * If sub-menu is not rendered in a portal, useOverlayPosition doesn't work properly and the submenu may\n         * be rendered offscreen. Worse, it may introduce scroll in body (or some scrollable ancestor), which will\n         * trigger a scroll event which closes the menu if the menu is rendered in an overlay (like in MenuTrigger),\n         * which is almost always the case.\n         *\n         */\n        <Overlay\n          OverlayComponent={\n            /**\n             *  The FocusScope included in the default Overlay, messes with a particular expected behavior. So we use\n             *  SimpleOverlay, which just renders its children as a portal. There may be a better solution for that\n             *  problem, which would eliminate the need for the funky `OverlayComponent` prop on our `Overlay`\n             *  component. Something to look into in the future.\n             */\n            SimpleOverlay\n          }\n        >\n          <div ref={nestedMenuRef} {...positionProps}>\n            {renderSubmenu({ parentState: state, rootKey: item.key })}\n          </div>\n        </Overlay>\n      )}\n    </>\n  );\n}\n\n/**\n * A replacement for react-aria Overlay, which doesn't render FocusScope\n */\nfunction SimpleOverlay({\n  children,\n  portalContainer = document.body,\n}: {\n  children: ReactNode;\n  portalContainer?: Element | undefined;\n}) {\n  return ReactDOM.createPortal(children, portalContainer);\n}\n","import React from \"react\";\nimport { ItemStateContext } from \"@intellij-platform/core/Collections/ItemStateContext\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { useContextOrThrow } from \"@intellij-platform/core/utils/useContextOrThrow\";\n\nimport { useMenuItemLayout } from \"./MenuItem\";\nimport { StyledMenuItemIcon } from \"./StyledMenuItem\";\n\ninterface MenuItemLayoutProps {\n  icon?: React.ReactNode;\n  content: React.ReactNode;\n  shortcut?: React.ReactNode;\n}\n\nconst StyledMenuItemLayout = styled.div`\n  display: flex;\n  align-items: center;\n  flex: 1; // to make sure it takes as much space as available in the menu item row, so that the suffix (shortcut) is pushed to the right\n`;\nconst Content = styled.span`\n  flex: 1;\n`;\n\nconst Shortcut = styled.kbd`\n  font-family: system-ui, sans-serif;\n  margin-left: 30px;\n  margin-right: -0.625rem;\n  color: ${({ theme }) =>\n    theme.currentForegroundAware(\n      theme.color(\"MenuItem.acceleratorForeground\")\n    )};\n`;\n\nexport const MenuItemLayout = ({\n  content,\n  shortcut,\n  icon,\n}: MenuItemLayoutProps) => {\n  const { isSelected } = useContextOrThrow(\n    ItemStateContext,\n    \"MenuItemLayout is meant to be rendered in Item component in Menus\"\n  );\n  const { labelProps, keyboardShortcutProps } = useMenuItemLayout();\n  const allowedIcon = !isSelected && icon;\n  return (\n    <StyledMenuItemLayout>\n      {allowedIcon && <StyledMenuItemIcon>{allowedIcon}</StyledMenuItemIcon>}\n      <Content {...labelProps}>{content}</Content>\n      {shortcut && <Shortcut {...keyboardShortcutProps}>{shortcut}</Shortcut>}\n    </StyledMenuItemLayout>\n  );\n};\n","import React, { HTMLProps, useEffect } from \"react\";\nimport { FocusScope } from \"@intellij-platform/core/utils/FocusScope\";\nimport {\n  MenuOverlayContext,\n  MenuProps,\n} from \"@intellij-platform/core/Menu/Menu\";\nimport { areInNestedOverlays, Overlay } from \"@intellij-platform/core/Overlay\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport { useOverlay, usePreventScroll } from \"@react-aria/overlays\";\n\nexport interface MenuOverlayProps {\n  children: React.ReactNode;\n  restoreFocus?: boolean;\n  overlayProps: HTMLProps<HTMLDivElement>;\n  overlayRef?: React.Ref<HTMLDivElement>;\n  /**\n   * Sets the default value of {@link Menu}'s {@link MenuProps#autoFocus} prop.\n   */\n  defaultAutoFocus?: MenuProps<unknown>[\"autoFocus\"];\n  onClose: () => void;\n}\n\n/**\n * Overlay container for Menu.\n * Positioning is not implemented at this layer.\n * {@link MenuOverlayProps#overlayProps} should be used for positioning.\n */\nexport function MenuOverlay({\n  children,\n  restoreFocus,\n  overlayProps: otherOverlayProps,\n  overlayRef: inputOverlayRef,\n  defaultAutoFocus,\n  onClose,\n}: MenuOverlayProps) {\n  const overlayRef = useObjectRef(inputOverlayRef);\n  const { overlayProps } = useOverlay(\n    {\n      onClose,\n      shouldCloseOnBlur: false,\n      isOpen: true,\n      isKeyboardDismissDisabled: false,\n      isDismissable: true,\n      shouldCloseOnInteractOutside: (element) => {\n        // FIXME: this is kind of hacky and should be removed when nested menu is properly supported\n        return !areInNestedOverlays(overlayRef.current, element);\n      },\n    },\n    overlayRef\n  );\n\n  usePreventScroll();\n\n  /**\n   * right clicks outside are not currently captured as \"outside interaction\" by react-aria's useOverlay hook.\n   * so we set up a global listener to close the context menu when contextmenu event is triggered outside the\n   * context menu container.\n   * NOTE: event handler is set up for the `capture` phase, to have it run before the handler for context menu\n   * when the menu is used as a context menu\n   */\n  useEffect(() => {\n    const onOutsideContextMenu = () => {\n      onClose();\n    };\n    document.addEventListener(\"contextmenu\", onOutsideContextMenu, {\n      capture: true,\n    });\n    return () =>\n      document.removeEventListener(\"contextmenu\", onOutsideContextMenu);\n  }, []);\n\n  return (\n    <Overlay>\n      <FocusScope restoreFocus={restoreFocus} autoFocus>\n        <MenuOverlayContext.Provider\n          value={{\n            close: onClose,\n            defaultAutoFocus,\n          }}\n        >\n          <div\n            {...mergeProps(overlayProps, otherOverlayProps)}\n            ref={overlayRef}\n          >\n            {children}\n          </div>\n        </MenuOverlayContext.Provider>\n      </FocusScope>\n    </Overlay>\n  );\n}\n","import React, { HTMLAttributes, RefObject } from \"react\";\nimport { useButton } from \"@react-aria/button\";\nimport { AriaMenuOptions, useMenuTrigger } from \"@react-aria/menu\";\nimport { useOverlayPosition } from \"@react-aria/overlays\";\nimport { useMenuTriggerState } from \"@react-stately/menu\";\nimport { MenuTriggerProps as AriaMenuTriggerProps } from \"@react-types/menu\";\n\nimport { MenuOverlay } from \"./MenuOverlay\";\nimport { AriaButtonProps } from \"@react-types/button\";\nimport { Alignment } from \"@react-types/shared\";\n\nexport interface MenuTriggerProps\n  extends Omit<AriaMenuTriggerProps, \"closeOnSelect\"> {\n  restoreFocus?: boolean;\n  // TODO: replace render function children with normal children, and utilize PressResponder. Add a story for the\n  //  edge case of custom trigger, using PressResponder\n  children: (\n    props: HTMLAttributes<HTMLButtonElement>,\n    ref: RefObject<any> // Using a generic didn't seem to work for some reason\n  ) => React.ReactNode;\n  // NOTE: there is a chance of unchecked breaking change here, since this is not explicitly mentioned as public API\n  // of useButton, but it is passed to the underlying usePress.\n  preventFocusOnPress?: boolean;\n  /**\n   * By default, the menu is positioned relative to the trigger. `positioningTargetRef` can be used to have the menu\n   * positioned to another element. An example use case is when the menu trigger is a button inside some list item or\n   * text box, but the menu semantically belongs to the container list item or text box.\n   */\n  positioningTargetRef?: React.RefObject<HTMLElement>;\n  renderMenu: (props: {\n    // AriaMenuOptions contains more properties than needed\n    menuProps: Pick<\n      AriaMenuOptions<unknown>,\n      \"id\" | \"aria-labelledby\" | \"autoFocus\" | \"onClose\"\n    >;\n  }) => React.ReactNode;\n\n  /**\n   * Alignment of the menu relative to the trigger.\n   * @default 'start'\n   */\n  align?: Alignment;\n  /**\n   * Where the Menu opens relative to its trigger.\n   * @default 'bottom'\n   */\n  direction?: \"bottom\" | \"top\" | \"left\" | \"right\" | \"start\" | \"end\";\n  /**\n   * Whether the menu should automatically flip direction when space is limited.\n   * @default true\n   */\n  shouldFlip?: boolean;\n}\n\n// FIXME: Escape doesn't close the menu\n// FIXME: Focus is not restored if nested menu are opened. It may be solved by using useOverlay and closing submenu in click outside.\n// FIXME: use PressResponder and replace render prop children with a normal react dom children. Issues with current impl:\n//  disabled trigger doesn't work as expected. props passed to children fn is html props, which is limiting for button\n//  components that don't accept arbitrary dom props.\n/**\n * Makes its children a trigger for a menu, rendered via {@link MenuTriggerProps#renderMenu} prop.\n * Closes the menu when a menu action is triggered.\n */\nexport const MenuTrigger: React.FC<MenuTriggerProps> = ({\n  children,\n  renderMenu,\n  direction = \"bottom\",\n  align = \"start\",\n  shouldFlip = true,\n  restoreFocus = true,\n  preventFocusOnPress = true,\n  positioningTargetRef,\n  ...otherProps\n}) => {\n  const state = useMenuTriggerState(otherProps);\n  const triggerRef = React.useRef(null);\n  const overlayRef = React.useRef(null);\n  // FIXME: Menu props is not used, but it's just about labelBy and id. Only needed for accessibility, but it would\n  //  require a `renderMenu` prop, instead of `menu`.\n  const { menuTriggerProps: triggerProps, menuProps } = useMenuTrigger(\n    { type: \"menu\" },\n    state,\n    triggerRef\n  );\n  const ariaButtonProps: AriaButtonProps<\"button\"> = {\n    ...triggerProps,\n    // @ts-expect-error: preventFocusOnPress is not defined in public API of useButton\n    preventFocusOnPress,\n  };\n  const { buttonProps } = useButton(ariaButtonProps, triggerRef);\n\n  const { overlayProps: positionProps } = useOverlayPosition({\n    targetRef: positioningTargetRef ?? triggerRef,\n    overlayRef,\n    placement: getPlacement(direction, align),\n    shouldFlip,\n    offset: 0,\n    containerPadding: 0,\n    onClose: () => state.close(),\n    isOpen: state.isOpen,\n  });\n\n  return (\n    <>\n      {children(buttonProps, triggerRef)}\n      {state.isOpen && (\n        <MenuOverlay\n          overlayProps={positionProps}\n          overlayRef={overlayRef}\n          onClose={state.close}\n          restoreFocus={restoreFocus}\n        >\n          {renderMenu({ menuProps })}\n        </MenuOverlay>\n      )}\n    </>\n  );\n};\n\nfunction getPlacement(\n  direction: Required<MenuTriggerProps>[\"direction\"],\n  align: Required<MenuTriggerProps>[\"align\"]\n) {\n  switch (direction) {\n    case \"left\":\n    case \"right\":\n    case \"start\":\n    case \"end\":\n      return `${direction} ${align === \"end\" ? \"bottom\" : \"top\"}` as const;\n    case \"bottom\":\n    case \"top\":\n    default:\n      return `${direction} ${align}` as const;\n  }\n}\n","import { css } from \"styled-components\";\n\nimport { WINDOW_SHADOW } from \"../style-constants\";\nimport { styled } from \"../styled\";\nimport { StyledVerticalSeparator } from \"../StyledSeparator\";\nimport { UnknownThemeProp } from \"../Theme/Theme\";\n\nimport { StyledMenuItem, StyledMenuItemIcon } from \"./StyledMenuItem\";\n\nexport const MENU_VERTICAL_PADDING = 5;\nexport const MENU_BORDER_WIDTH = 1;\n\n// noinspection CssInvalidPropertyValue\nexport const StyledMenu = styled.ul<{ fillAvailableSpace?: boolean }>`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  font-size: 0.8rem;\n  margin: 0;\n  padding: ${MENU_VERTICAL_PADDING}px 0;\n  outline: none;\n  list-style: none;\n  width: fit-content;\n  min-width: 120px;\n  overflow: auto;\n  // Border doesn't seem to be painted in the original impl. IdeaPopupMenuUI.isUnderPopup(c) seemed to return false\n  // in all cases. More info: https://github.com/JetBrains/intellij-community/blob/c5ece483811a3ab546fc3880225efb02cc8b94dd/platform/platform-impl/src/com/intellij/ide/ui/laf/darcula/ui/DarculaPopupMenuBorder.java#L24\n  /*  border: ${MENU_BORDER_WIDTH}px solid\n    ${({ theme }) =>\n    theme.color(\"Menu.borderColor\", !theme.dark ? \"#CDCDCD\" : \"#515151\")};*/\n  ${WINDOW_SHADOW};\n  background: ${({ theme }) =>\n    theme.color(\n      \"PopupMenu.background\" as UnknownThemeProp<\"PopupMenu.background\">\n    )};\n  color: ${({ theme }) =>\n    theme.color(\n      \"PopupMenu.foreground\" as UnknownThemeProp<\"PopupMenu.foreground\">\n    )};\n\n  ${StyledVerticalSeparator}:first-child,\n  ${StyledVerticalSeparator}:last-child, \n  ${StyledVerticalSeparator} + ${StyledVerticalSeparator} {\n    display: none;\n  }\n  ${StyledVerticalSeparator} {\n    background-color: ${({ theme }) => theme.color(\"Menu.separatorColor\")};\n    height: ${({ theme }) =>\n      `${theme.value(\"PopupMenuSeparator.height\") ?? 3}px`};\n    padding: ${({ theme }) =>\n      `${theme.value(\"PopupMenuSeparator.stripeIndent\") ?? 1}px 0`};\n    margin: ${({ theme }) =>\n      `0 ${theme.value(\"PopupMenuSeparator.withToEdge\") ?? 1}px`};\n  }\n  ${({ fillAvailableSpace }) =>\n    fillAvailableSpace &&\n    css`\n      flex: 1;\n      width: fill-available; // will be converted to --webkit-fill-available and --moz-available, but doesn't work in FF\n      height: fill-available;\n    `}\n\n  --jui-menu-item-padding: 1rem;\n  --jui-menu-item-icon-width: 1rem;\n  --jui-menu-item-icon-spacing: 0.3125rem;\n\n  ${StyledMenuItem} {\n    // NOTE: The left margin seems not to be consistent in all menus.\n    padding-left: var(--jui-menu-item-padding);\n  }\n  &:has(${StyledMenuItemIcon}) {\n    // Adjusting item padding for menus with icon to be slightly smaller. Based on observations on the reference impl.\n    // Could be handled by a negative margin on icons as well.\n    --jui-menu-item-padding: 0.75rem;\n\n    // CSS-only solution to conditionally add left margin to menu items without icon, if there is at least one menu item\n    // with icon, in the current menu. To have text in all menu items aligned. The extra margin is avoided if there is no\n    // menu item with icon. It relies on :has() css pseudo-class which is not supported in FF at the moment.\n    ${StyledMenuItem}:not(:has(${StyledMenuItemIcon})) {\n      padding-left: calc(\n        var(--jui-menu-item-padding) + var(--jui-menu-item-icon-width) +\n          var(--jui-menu-item-icon-spacing)\n      );\n    }\n  }\n  ${StyledMenuItemIcon} {\n    width: var(--jui-menu-item-icon-width);\n    margin-right: var(--jui-menu-item-icon-spacing);\n  }\n`;\n","import { css, styled } from \"@intellij-platform/core/styled\";\n\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nexport const StyledMenuItemIcon = styled.span`\n  display: inline-flex; // prevents unwanted increased height\n`;\n\nexport const StyledNestedArrow = styled.span`\n  display: inline-flex; // to make it not take more height than the icon\n  margin-right: -0.75rem;\n  margin-left: 0.75rem;\n`;\n\nconst highlightedStyle = css`\n  color: ${({ theme }) =>\n    theme.asCurrentForeground(\n      theme.color(\n        \"MenuItem.selectionForeground\" as UnknownThemeProp<\"MenuItem.selectionForeground\">\n      )\n    )};\n  background: ${({ theme }) =>\n    theme.color(\n      \"MenuItem.selectionBackground\" as UnknownThemeProp<\"MenuItem.selectionBackground\">\n    )};\n`;\nconst defaultStyle = css`\n  color: ${({ theme }) =>\n    theme.color(\n      \"MenuItem.foreground\" as UnknownThemeProp<\"MenuItem.foreground\">\n    )};\n  background: unset;\n`;\nconst disabledStyle = css`\n  color: ${({ theme }) =>\n    theme.color(\"MenuItem.disabledForeground\") + \"!important\"};\n  background: unset !important;\n`;\nexport const StyledMenuItem = styled.li<{\n  isDisabled: boolean;\n  isActive: boolean;\n}>`\n  position: relative; // for being able to position arrow icon absolutely\n  outline: none;\n  cursor: default;\n  white-space: nowrap;\n\n  // bg/fg style for different states. Order is based on how they should override each other\n  ${defaultStyle};\n  ${({ isActive }) => isActive && highlightedStyle};\n  ${({ isDisabled }) => isDisabled && disabledStyle};\n\n  padding-right: 1.25rem;\n  line-height: 1.3125rem; // to make the item have the right height\n  display: flex;\n  align-items: center;\n`;\n","import React, { useContext, useEffect, useRef } from \"react\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { AriaMenuOptions, useMenu } from \"@react-aria/menu\";\nimport { mergeProps } from \"@react-aria/utils\";\n\nimport {\n  MenuKeyboardDelegate,\n  useSubmenu as useSubmenuAria,\n} from \"./_useSubmenu\";\nimport { useSubmenuState } from \"./_useSubmenuState\";\nimport { MenuContext } from \"./Menu\";\nimport { StyledMenu } from \"./StyledMenu\";\nimport { renderMenuNodes } from \"./renderMenuNodes\";\n\nexport function useSubmenu<T>(\n  {\n    rootKey,\n    parentState,\n    keyboardDelegate,\n  }: { rootKey: React.Key; parentState: TreeState<T> } & Pick<\n    AriaMenuOptions<T>,\n    \"keyboardDelegate\"\n  >,\n  state: TreeState<T>,\n  ref: React.RefObject<HTMLElement>\n) {\n  const rootItem = state.collection.getItem(rootKey);\n  const {\n    submenuBehavior,\n    autoFocus = true,\n    onClose,\n    onAction,\n  } = useContext(MenuContext);\n  let { menuProps } = useMenu(\n    {\n      \"aria-label\": rootItem?.[\"aria-label\"] || rootItem?.textValue,\n      onAction,\n      onClose,\n      selectedKeys: state.selectionManager.selectedKeys,\n      keyboardDelegate:\n        keyboardDelegate ||\n        new MenuKeyboardDelegate(\n          rootKey,\n          state.collection,\n          state.disabledKeys,\n          ref\n        ),\n      autoFocus,\n    },\n    state,\n    ref\n  );\n  const { submenuProps } = useSubmenuAria({ rootKey }, parentState, ref);\n\n  const submenuBehaviorProps = {\n    onKeyDown: (e: React.KeyboardEvent) => {\n      if (e.key === \"Escape\") {\n        // Close the menu and submenu root node.\n        state.toggleKey(rootKey);\n        state.selectionManager.setFocusedKey(rootKey);\n        parentState.selectionManager.setFocused(true);\n        if (submenuBehavior !== \"default\") {\n          e.stopPropagation();\n        }\n        return;\n      }\n    },\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      // we need this hack until the nested menu is properly supported. That's because when the element is hovered\n      // it sets the focus key, which will move focus to that item.\n      // noinspection PointlessBooleanExpressionJS seems to be false positive. autoFocus can be \"first\" or \"last\"\n      if (autoFocus === true) {\n        ref.current?.focus();\n      }\n    });\n  }, []);\n\n  return {\n    submenuProps: mergeProps(menuProps, submenuProps, submenuBehaviorProps),\n  };\n}\n\nexport interface SubmenuProps<T> {\n  parentState: TreeState<T>;\n  rootKey: React.Key;\n}\n\nexport function Submenu<T>({ parentState, rootKey }: SubmenuProps<T>) {\n  const ref = useRef<HTMLUListElement>(null);\n  const state = useSubmenuState(parentState);\n  const rootItem = state.collection.getItem(rootKey);\n\n  const { submenuProps } = useSubmenu({ rootKey, parentState }, state, ref);\n\n  return (\n    <StyledMenu {...submenuProps} ref={ref}>\n      {renderMenuNodes(state, [...(rootItem?.childNodes || [])])}\n    </StyledMenu>\n  );\n}\n","import { Collection, Node } from \"@react-types/shared\";\nimport { TreeState } from \"@react-stately/tree\";\nimport React, { Key, RefObject } from \"react\";\nimport { useKeyboard } from \"@react-aria/interactions\";\nimport { ListKeyboardDelegate } from \"@react-aria/selection\";\n\nexport class MenuKeyboardDelegate<T> extends ListKeyboardDelegate<T> {\n  private keys: React.Key[];\n  constructor(\n    rootKey: Key | null,\n    private collection: Collection<Node<T>>,\n    disabledKeys: Set<React.Key>,\n    ref: React.RefObject<HTMLElement>,\n    collator?: Intl.Collator\n  ) {\n    super(collection, disabledKeys, ref, collator);\n    this.keys = [...collection.getKeys()]\n      .map((key) => collection.getItem(key))\n      .flatMap((item) => {\n        if (item && item.parentKey == rootKey) {\n          if (item.type === \"item\") {\n            return [item.key];\n          } else if (item.type === \"section\") {\n            return [...item.childNodes].map(({ key }) => key);\n          }\n        }\n        return [];\n      });\n  }\n\n  getFirstKey(): React.Key {\n    return this.keys[0];\n  }\n  getLastKey(): React.Key {\n    return this.keys.slice(-1)[0];\n  }\n\n  getKeyBelow(key: React.Key): React.Key {\n    const keyBelow = super.getKeyBelow(key);\n    // @ts-expect-error: getKeyBelow should be allowed to return null, but typing is currently inaccurate in react-aria\n    return this.keys.includes(keyBelow) ? keyBelow : null;\n  }\n  getKeyAbove(key: React.Key): React.Key {\n    const keyAbove = super.getKeyAbove(key);\n    // @ts-expect-error: getKeyBelow should be allowed to return null, but typing is currently inaccurate in react-aria\n    return this.keys.includes(keyAbove) ? keyAbove : null;\n  }\n}\n\n/**\n * Behavior accessibility of submenus:\n * - Closing submenu on ArrowLeft key press.\n *   Note that it can't be implemented in useMenuItem, because the focus might be on no the submenu itself and not any\n *   of its items\n * @param rootKey: Key of the root node, the submenu is created from its children\n * @param state\n * @param ref\n */\nexport function useSubmenu<T>(\n  { rootKey }: { rootKey: Key },\n  state: TreeState<T>,\n  ref: RefObject<HTMLElement>\n) {\n  const { keyboardProps: submenuProps } = useKeyboard({\n    onKeyDown: (e) => {\n      // Keyboard events bubble through portals. Don't handle keyboard events\n      // for elements outside the collection (e.g. menus).\n      if (!ref.current?.contains(e.target as Element)) {\n        e.continuePropagation();\n        return;\n      }\n      const root = state.collection.getItem(rootKey);\n      if (e.key === \"ArrowLeft\" && root && state.expandedKeys.has(root.key)) {\n        state.toggleKey(root.key);\n        state.selectionManager.setFocused(true);\n        return;\n      }\n      e.continuePropagation();\n    },\n  });\n\n  return {\n    submenuProps,\n  };\n}\n","import { TreeState } from \"@react-stately/tree\";\nimport { Key, useRef, useState } from \"react\";\nimport {\n  MultipleSelectionState,\n  SelectionManager,\n} from \"@react-stately/selection\";\n\n/**\n * Creates a TreeState corresponding to the submenu, from the state of a parent (sub)menu.\n * The collection and everything is the same, and the only difference from the parent state is selection manager\n * having a separate focused state to keep the focused state of each menu container separately, as the submenus\n * are usually rendered in separate overlays.\n */\nexport function useSubmenuState<T>(parentState: TreeState<T>) {\n  // We want synchronous updates to `isFocused` and `focusedKey` after their setters are called.\n  // But we also need to trigger a re-render. So, we have both a ref (sync) and state (async).\n  const [, setFocused] = useState(false);\n  const [, setFocusedKey] = useState<Key | null>(null);\n  const isFocusedRef = useRef(false);\n  const focusedKeyRef = useRef<Key | null>(null);\n\n  const state: MultipleSelectionState = {\n    // @ts-expect-error state is private\n    ...parentState.selectionManager.state,\n    setFocused: (isFocused: boolean) => {\n      isFocusedRef.current = isFocused;\n      setFocused(isFocused);\n    },\n    setFocusedKey(key: Key) {\n      focusedKeyRef.current = key;\n      setFocusedKey(key);\n    },\n  };\n  Object.defineProperties(state, {\n    isFocused: {\n      get() {\n        return isFocusedRef.current;\n      },\n    },\n    focusedKey: {\n      get() {\n        return focusedKeyRef.current!;\n      },\n    },\n  });\n\n  return {\n    ...parentState,\n    selectionManager: new SelectionManager(parentState.collection, state),\n  };\n}\n","import React from \"react\";\nimport { useMenuSection } from \"@react-aria/menu\";\nimport { Node } from \"@react-types/shared\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { styled } from \"@intellij-platform/core/styled\";\n\nimport { renderMenuNodes } from \"./renderMenuNodes\";\n\nexport interface MenuSectionProps<T> {\n  item: Node<T>;\n  state: TreeState<T>;\n  filter?: (node: Node<T>) => boolean;\n}\n\nconst StyledMenuHeading = styled.div`\n  cursor: default;\n  padding: 2px 0 2px 12px;\n  font-weight: bold;\n  font-size: 0.8125rem;\n  color: ${({ theme }) =>\n    theme.color(\n      \"MenuItem.disabledForeground\"\n    )}; // TODO: make sure about it. It's probably not correct color\n`;\n\nconst StyledMenuSectionItemsContainer = styled.ul`\n  padding: 0;\n  margin: 0;\n`;\n\nexport const MenuSection = <T extends unknown>({\n  item,\n  state,\n  filter = () => true,\n}: MenuSectionProps<T>): React.ReactElement => {\n  let { itemProps, headingProps, groupProps } = useMenuSection({\n    heading: item.rendered,\n    \"aria-label\": item[\"aria-label\"],\n  });\n\n  const nodes = [...item.childNodes].filter(filter);\n  if (nodes.filter(({ type }) => type === \"item\").length === 0) {\n    return <></>;\n  }\n  return (\n    <>\n      <li {...itemProps}>\n        {item.rendered && (\n          <StyledMenuHeading {...headingProps}>\n            {item.rendered}\n          </StyledMenuHeading>\n        )}\n        <StyledMenuSectionItemsContainer {...groupProps}>\n          {renderMenuNodes(state, nodes)}\n        </StyledMenuSectionItemsContainer>\n      </li>\n    </>\n  );\n};\n","import React from \"react\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { Node } from \"@react-types/shared\";\nimport { ListDivider } from \"@intellij-platform/core/List/ListDivider\"; // private import\n\nimport { MenuItem } from \"./MenuItem\";\nimport { MenuSection } from \"./MenuSection\";\n\nexport function renderMenuNodes<T>(\n  state: TreeState<T>,\n  nodes: Node<T>[],\n  filter: (node: Node<T>) => boolean = () => true\n) {\n  return nodes.filter(filter).map((node) => {\n    switch (node.type) {\n      case \"item\":\n        return <MenuItem key={node.key} item={node} state={state} />;\n      case \"section\":\n        return (\n          <>\n            {node.props.hasDivider && (\n              <ListDivider key={node.key + \"-divider1\"} />\n            )}\n            <MenuSection\n              key={node.key}\n              item={node}\n              state={state}\n              filter={filter}\n            />\n            {node.props.hasDivider && (\n              <ListDivider key={node.key + \"-divider2\"} />\n            )}\n          </>\n        );\n      case \"divider\":\n        return <ListDivider key={node.key} />;\n    }\n  });\n}\n","import React, { useContext, useRef } from \"react\";\nimport { Overlay as AriaOverlay, OverlayProps } from \"@react-aria/overlays\";\n\nconst ParentOverlayContext = React.createContext<HTMLElement | null>(null);\n\n/**\n * A (drop-in replacement) wrapper around Overlay, which makes sure overlays created in nested\n * react components will be ported to the same top level container. This is especially useful to detect\n * \"outside clicks\" when overlays are nested. The most common example would be nested menu in popup.\n *\n */\nexport function Overlay({\n  children,\n  OverlayComponent = AriaOverlay,\n}: {\n  children: React.ReactNode;\n  OverlayComponent?: React.ComponentType<OverlayProps>;\n}) {\n  const root = useContext(ParentOverlayContext);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  if (root) {\n    return (\n      <OverlayComponent portalContainer={root}>{children}</OverlayComponent>\n    );\n  }\n  return (\n    <ParentOverlayContext.Provider value={containerRef.current}>\n      <OverlayComponent>\n        <div ref={containerRef} data-overlay-root=\"\">\n          {children}\n        </div>\n      </OverlayComponent>\n    </ParentOverlayContext.Provider>\n  );\n}\n\n/**\n * Returns true, if element1 and element2 are in nested overlays. \"Nested\" being in terms of React component tree.\n * Useful for detecting \"outside click\" when overlay components are nested in each other.\n */\nexport function areInNestedOverlays(\n  element1: Element | null,\n  element2: Element | null\n) {\n  const overlayRoot1 = element1?.closest(\"[data-overlay-root]\");\n  const overlayRoot2 = element2?.closest(\"[data-overlay-root]\");\n  return Boolean(overlayRoot1) && overlayRoot1 === overlayRoot2;\n}\n","import React from \"react\";\nimport { styled } from \"./styled\";\n\ntype SeparatorUI = {\n  STRIPE_INDENT: number;\n  STRIPE_WIDTH: number;\n};\n\n// based on implementation in com.intellij.ide.ui.laf.darcula.ui.DarculaSeparatorUI, which seems to be used for all themes\nconst DarculaSeparatorUI: SeparatorUI = {\n  STRIPE_INDENT: 1,\n  STRIPE_WIDTH: 1,\n};\n\nconst defaultSize =\n  2 * DarculaSeparatorUI.STRIPE_INDENT + DarculaSeparatorUI.STRIPE_WIDTH;\n\nexport const StyledSeparator = styled.hr(({ theme }) => ({\n  backgroundColor: theme.color(\n    \"Separator.separatorColor\",\n    theme.dark ? \"#cdcdcd\" : \"#515151\"\n  ),\n  backgroundClip: \"content-box\",\n  boxSizing: \"border-box\",\n  margin: 0,\n  border: \"none\",\n  flexShrink: 0,\n}));\n\nexport const StyledHorizontalSeparator = styled(StyledSeparator)`\n  height: inherit; // should it be auto?\n  padding: 0 ${DarculaSeparatorUI.STRIPE_INDENT}px;\n  width: ${defaultSize}px;\n`;\nexport const StyledVerticalSeparator = styled(StyledSeparator)`\n  width: auto;\n  padding: ${DarculaSeparatorUI.STRIPE_INDENT}px 0;\n  height: ${defaultSize}px;\n`;\n","import { TabCloseButton } from \"@intellij-platform/core/Tabs/TabCloseButton\";\nimport { TabContentLayout } from \"@intellij-platform/core/Tabs/TabContentLayout\";\nimport React from \"react\";\n\nexport const DebuggerTabContent = ({\n  icon,\n  title,\n  closeButton,\n}: {\n  icon: React.ReactNode;\n  title: React.ReactNode;\n  /**\n   * Close button for the tab. Use {@link TabCloseButton} to render the close button\n   * for the tab.\n   *\n   * @example\n   * ```tsx\n   * <DebuggerTabContent\n   *   closeButton={\n   *     <TooltipTrigger\n   *       tooltip={<ActionTooltip actionName=\"Close Tab\" shortcut=\"^⇧F4\" />}\n   *     >\n   *       <TabCloseButton onPress={}></TabCloseButton>\n   *     </TooltipTrigger>\n   *   }\n   * />\n   * ```\n   */\n  closeButton?: React.ReactElement;\n}) => {\n  return (\n    <TabContentLayout startIcon={icon} title={title} endIcon={closeButton} />\n  );\n};\n","import { Theme } from \"@intellij-platform/core/Theme\";\nimport { styled } from \"@intellij-platform/core/styled\";\n\nimport { StyledDefaultTab } from \"@intellij-platform/core/Tabs/StyledDefaultTab\";\nimport {\n  getTabThemeStyles,\n  TabTheme,\n} from \"@intellij-platform/core/Tabs/TabTheme\";\n\nexport const debuggerTabTheme = ({ theme }: { theme: Theme }): TabTheme => ({\n  underlineHeight: theme.value<number>(\"DebuggerTabs.underlineHeight\") ?? 2,\n  underlinedTabBackground: theme.color(\"DebuggerTabs.underlinedTabBackground\"),\n});\nexport const StyledDebuggerTab = styled(StyledDefaultTab)`\n  ${({ theme }) => getTabThemeStyles(debuggerTabTheme({ theme }))};\n`;\n","import { Tabs, TabsProps } from \"@intellij-platform/core/Tabs/Tabs\";\nimport { StyledDebuggerTab } from \"./StyledDebuggerTab\";\nimport React from \"react\";\n\ntype DebuggerTabsProps<T extends object> = Omit<\n  TabsProps<T>,\n  \"TabComponent\" | \"focusable\"\n>;\n\nexport const DebuggerTabs = <T extends object>(props: DebuggerTabsProps<T>) => (\n  <Tabs {...props} TabComponent={StyledDebuggerTab} focusable={false} />\n);\n","import React from \"react\";\nimport { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport { TabCloseButton } from \"@intellij-platform/core/Tabs/TabCloseButton\";\nimport {\n  TabContentLayout,\n  TabItemLayoutProps,\n} from \"@intellij-platform/core/Tabs/TabContentLayout\";\nimport { ActionTooltip, TooltipTrigger } from \"@intellij-platform/core/Tooltip\";\nimport { BareButton } from \"@intellij-platform/core/Button\";\n\ninterface EditorTabContentProps {\n  icon: React.ReactNode;\n  title: React.ReactNode;\n  /**\n   * Close button, shown in place of \"pin\" button if not pinned. Use {@link TabCloseButton} to render the close button\n   * for the tab.\n   *\n   * @example\n   * ```tsx\n   * <EditorTabContent\n   *   closeButton={\n   *     <TooltipTrigger\n   *       tooltip={<ActionTooltip actionName=\"Close Tab\" shortcut=\"^⇧F4\" />}\n   *     >\n   *       <TabCloseButton onPress={}></TabCloseButton>\n   *     </TooltipTrigger>\n   *   }\n   * />\n   * ```\n   */\n  closeButton?: React.ReactElement;\n  onUnpin?: () => void;\n  pinned?: boolean;\n  containerProps?: TabItemLayoutProps[\"containerProps\"];\n}\n/**\n * For rendering the content of Editor tabs. supports for file icon which is shown on the left and close or unpin\n * button shown on the right.\n */\nexport const EditorTabContent = ({\n  icon,\n  title,\n  closeButton,\n  onUnpin,\n  pinned,\n  containerProps,\n}: EditorTabContentProps) => {\n  return (\n    <TabContentLayout\n      startIcon={icon}\n      title={title}\n      containerProps={containerProps}\n      endIcon={\n        pinned ? (\n          <TooltipTrigger tooltip={<ActionTooltip actionName=\"Unpin Tab\" />}>\n            <BareButton\n              onPress={onUnpin}\n              excludeFromTabOrder\n              preventFocusOnPress\n            >\n              <PlatformIcon icon=\"actions/pinTab\" />\n            </BareButton>\n          </TooltipTrigger>\n        ) : (\n          closeButton\n        )\n      }\n    />\n  );\n};\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { Theme, UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { StyledDefaultTab } from \"@intellij-platform/core/Tabs/StyledDefaultTab\";\nimport {\n  getTabThemeStyles,\n  TabTheme,\n} from \"@intellij-platform/core/Tabs/TabTheme\";\n\nexport const editorTabTheme = ({ theme }: { theme: Theme }): TabTheme => ({\n  borderColor: theme.color(\"EditorTabs.borderColor\"),\n  underlineHeight: theme.value<number>(\"EditorTabs.underlineHeight\"),\n  background: theme.color(\"EditorTabs.background\"),\n  underlinedTabInactiveBackground: theme.color(\n    \"EditorTabs.underlinedTabBackground\" // that's correctly not underlinedTabInactiveBackground!\n  ), // TODO: use EditorColorsScheme when available\n  underlinedTabBackground: theme.color(\"EditorTabs.underlinedTabBackground\"), // TODO: use EditorColorsScheme when available\n  hoverInactiveBackground: theme.color(\n    \"EditorTabs.hoverInactiveBackground\" as UnknownThemeProp<\"EditorTabs.hoverInactiveBackground\">\n  ),\n  hoverBackground: theme.color(\"EditorTabs.hoverBackground\"),\n  inactiveUnderlineColor: theme.color(\"EditorTabs.inactiveUnderlineColor\"), // TODO: use EditorColorsScheme when available\n  underlineColor: theme.color(\"EditorTabs.underlineColor\"), // TODO: use EditorColorsScheme when available\n\n  underlinedTabInactiveForeground: theme.color(\n    \"EditorTabs.underlinedTabForeground\" // that's correctly not underlinedTabInactiveForeground!\n  ), // TODO: use EditorColorsScheme when available\n  underlinedTabForeground: theme.color(\"EditorTabs.underlinedTabForeground\"), // TODO: use EditorColorsScheme when available\n});\nexport const StyledEditorTab = styled(StyledDefaultTab)`\n  font-size: 0.7rem;\n  ${({ theme }) => getTabThemeStyles(editorTabTheme({ theme }))};\n`;\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { getTabsThemeStyles } from \"@intellij-platform/core/Tabs/TabTheme\";\nimport { StyledDefaultTabs } from \"@intellij-platform/core/Tabs/StyledDefaultTabs\";\nimport { editorTabTheme } from \"./StyledEditorTab\";\n\nexport const StyledEditorTabs = styled(StyledDefaultTabs)`\n  ${({ theme }) => getTabsThemeStyles(editorTabTheme({ theme }))};\n`;\n","import { Tabs, TabsProps } from \"@intellij-platform/core/Tabs/Tabs\";\nimport { StyledEditorTab } from \"./StyledEditorTab\";\nimport { StyledEditorTabs } from \"./StyledEditorTabs\";\nimport React from \"react\";\n\nexport type EditorTabsProps<T extends object> = Omit<\n  TabsProps<T>,\n  \"TabComponent\" | \"TabsComponent\" | \"focusable\"\n>;\n\nexport const EditorTabs = <T extends object>(props: EditorTabsProps<T>) => (\n  <Tabs\n    {...props}\n    TabComponent={StyledEditorTab}\n    TabsComponent={StyledEditorTabs}\n    focusable={false}\n  />\n);\n","import { getTabThemeStyles } from \"./TabTheme\";\nimport { styled } from \"../styled\";\nimport { Theme, UnknownThemeProp } from \"../Theme\";\nimport { HTMLProps } from \"react\";\n\nexport interface TabComponentProps extends HTMLProps<HTMLElement> {\n  selected?: boolean;\n  disabled?: boolean;\n  active?: boolean;\n}\n\nconst defaultTabTheme = ({ theme }: { theme: Theme }) =>\n  getTabThemeStyles({\n    underlineHeight: theme.value<number>(\"DefaultTabs.underlineHeight\") ?? 3,\n    inactiveUnderlineColor: theme.color(\n      \"DefaultTabs.inactiveUnderlineColor\",\n      theme.dark ? \"#747a80\" : \"#9ca7b8\"\n    ),\n    underlineColor: theme.color(\n      \"DefaultTabs.underlineColor\",\n      theme.dark ? \"#4A88C7\" : \"#4083C9\"\n    ),\n\n    underlinedTabInactiveForeground: theme.color(\n      \"DefaultTabs.underlinedTabInactiveForeground\" as UnknownThemeProp<\"DefaultTabs.underlinedTabInactiveForeground\">\n    ),\n    underlinedTabForeground: theme.color(\"DefaultTabs.underlinedTabForeground\"),\n\n    background: theme.color(\n      \"DefaultTabs.background\",\n      theme.dark ? \"#3C3F41\" : \"#ECECEC\"\n    ),\n    underlinedTabInactiveBackground: theme.color(\n      \"DefaultTabs.underlinedTabInactiveBackground\" as UnknownThemeProp<\"DefaultTabs.underlinedTabInactiveBackground\">\n    ),\n    underlinedTabBackground: theme.color(\n      \"DefaultTabs.underlinedTabBackground\" as UnknownThemeProp<\"DefaultTabs.underlinedTabBackground\">\n    ),\n    hoverInactiveBackground: theme.color(\n      \"DefaultTabs.hoverInactiveBackground\" as UnknownThemeProp<\"DefaultTabs.hoverInactiveBackground\">,\n      theme.dark ? \"rgba(0,0,0,.35)\" : \"rgba(0,0,0,.1)\"\n    ),\n    hoverBackground: theme.color(\n      \"DefaultTabs.hoverBackground\",\n      theme.dark ? \"rgba(0,0,0,.35)\" : \"rgba(0,0,0,.1)\"\n    ),\n  });\n\nexport const StyledDefaultTab = styled.div<TabComponentProps>`\n  box-sizing: border-box;\n  display: inline-flex;\n  letter-spacing: 0.015rem;\n  font-size: 0.85rem;\n  cursor: default;\n  white-space: nowrap;\n\n  // spacing\n  padding: 0 0.5rem;\n  line-height: 1.7rem; // vertical spacing handled by line-height\n\n  // disabled state doesn't seem to be supported in Intellij Platform at all.\n  opacity: ${({ disabled }) => (disabled ? \".5\" : \"1\")};\n  color: ${({ theme }) =>\n    theme.color(\n      \"DefaultTabs.foreground\" as UnknownThemeProp<\"DefaultTabs.foreground\">\n    )};\n\n  position: relative;\n  &::after {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    left: 0;\n    bottom: 0;\n  }\n\n  ${defaultTabTheme};\n`;\n","import { HTMLProps } from \"react\";\nimport { Theme } from \"../Theme\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { getTabsThemeStyles } from \"./TabTheme\";\n\nconst defaultTabsTheme = ({ theme }: { theme: Theme }) =>\n  getTabsThemeStyles({\n    borderColor: theme.color(\n      \"DefaultTabs.borderColor\",\n      theme.commonColors.contrastBorder\n    ),\n    background: theme.color(\"DefaultTabs.background\"),\n  });\n\nexport interface TabsComponentProps extends HTMLProps<HTMLElement> {\n  noBorders?: boolean;\n}\n\nexport const StyledDefaultTabs = styled.div<TabsComponentProps>`\n  display: flex;\n  align-items: center;\n  box-sizing: border-box;\n  border-style: solid;\n  border-width: ${({ noBorders }) => (noBorders ? \"0\" : \"1px 0\")};\n\n  ${defaultTabsTheme};\n`;\n","import React, { ForwardedRef, HTMLProps } from \"react\";\nimport { css, styled } from \"../styled\";\nimport { useFocusable } from \"@react-aria/focus\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\n\nconst StyledTabItemLayout = styled.div`\n  display: inline-flex;\n  align-items: center;\n`;\n\nconst iconStyle = css`\n  display: inline-flex; // without this, the wrapper takes the full height, causing icon to be placed on top\n  margin-top: -0.1rem; // seems necessary for pixel perfect match with the original impl\n`;\n\nconst StyledStartIconWrapper = styled.span`\n  ${iconStyle};\n  margin-right: 0.25rem;\n`;\n\nconst StyledEndIconWrapper = styled.span`\n  ${iconStyle};\n  margin-left: 0.25rem;\n  margin-right: -0.25rem; // default padding of the tab should be a little reduced when close icon is there.\n  border-radius: 16px;\n`;\n\nexport interface TabItemLayoutProps {\n  /**\n   * the icon placed before the text.\n   */\n  startIcon?: React.ReactNode;\n  /**\n   * title of the tab. Normally just a string\n   */\n  title?: React.ReactNode;\n  /**\n   * the icon placed after the text. Typical use cases: close or pin icon.\n   */\n  endIcon?: React.ReactNode;\n\n  /**\n   * Generic HTML props passed to the container div.\n   */\n  containerProps?: Omit<HTMLProps<HTMLDivElement>, \"ref\" | \"as\">;\n}\n\n/**\n * Helper component for rendering the common layout of tab content.\n */\nexport const TabContentLayout = React.forwardRef(\n  (\n    { startIcon, title, endIcon, containerProps = {} }: TabItemLayoutProps,\n    ref: ForwardedRef<HTMLDivElement>\n  ) => {\n    // To allow tooltip be used easily. TooltipTrigger passes props via FocusableContext.\n    const { focusableProps } = useFocusable({}, useObjectRef(ref));\n    return (\n      <StyledTabItemLayout\n        {...mergeProps(focusableProps, containerProps)}\n        ref={ref}\n      >\n        {startIcon && (\n          <StyledStartIconWrapper>{startIcon}</StyledStartIconWrapper>\n        )}\n        {title}\n        {endIcon && <StyledEndIconWrapper>{endIcon}</StyledEndIconWrapper>}\n      </StyledTabItemLayout>\n    );\n  }\n);\n","import { ItemProps } from \"@react-types/shared\";\nimport { Item } from \"@react-stately/collections\";\nimport React from \"react\";\n\nexport interface TabItemProps extends ItemProps<never> {\n  /**\n   * Determines how the tab item should look when rendered as a menu item in overflow menu.\n   * If not passed, `textValue` will be used.\n   * @example\n   * <TabItem\n   *   key={tab.id}\n   *   textValue={tab.title}\n   *   inOverflowMenu={\n   *     <MenuItemLayout content={tab.title} icon={icon} />\n   *   }\n   *  >\n   *   <TabContentLayout startIcon={icon} title={tab.title} />\n   * </TabItem>\n   */\n  inOverflowMenu?: React.ReactNode;\n}\n\n/**\n * Same as {@link Item}, but allows for specifying the tab content for when it's rendered in the overflow menu item.\n */\nexport const TabItem: (props: TabItemProps) => React.ReactElement = Item;\n","import { css } from \"@intellij-platform/core/styled\";\nimport { TabComponentProps } from \"./StyledDefaultTab\";\n\n/**\n * Describes theme-able properties of a tab, which can then be passed to {@link getTabThemeStyles}\n */\nexport interface TabTheme {\n  underlineHeight?: number;\n\n  borderColor?: string;\n\n  inactiveUnderlineColor?: string;\n  underlineColor?: string;\n\n  underlinedTabInactiveForeground?: string;\n  underlinedTabForeground?: string;\n\n  background?: string;\n  underlinedTabBackground?: string;\n  underlinedTabInactiveBackground?: string;\n  hoverInactiveBackground?: string;\n  hoverBackground?: string;\n  inactiveColoredTabBackground?: string; // not used for now\n}\n\nexport const getTabsThemeStyles = ({\n  background,\n  borderColor,\n}: Pick<TabTheme, \"background\" | \"borderColor\">) => css`\n  border-color: ${borderColor};\n  background: ${background};\n`;\n\n/**\n * Converts tab theme properties to a chunk of style that can be dropped in a styled version of StyledDefaultTab\n *\n * @example\n * ```ts\n * const StyledCustomTab = styled(StyledDefaultTab)`\n *   ${getTabThemeStyles({background: 'red'})}\n * `\n * ```\n */\nexport const getTabThemeStyles = ({\n  underlineHeight,\n\n  background,\n  underlinedTabBackground,\n  underlinedTabInactiveBackground,\n  hoverInactiveBackground,\n  hoverBackground,\n\n  underlinedTabForeground,\n  underlinedTabInactiveForeground,\n\n  inactiveUnderlineColor,\n  underlineColor,\n}: TabTheme) =>\n  css<TabComponentProps>`\n    // active indicator\n    &::after {\n      height: ${underlineHeight != null ? `${underlineHeight}px` : undefined};\n      background-color: ${({ selected }) => selected && inactiveUnderlineColor};\n      background-color: ${({ selected, active }) =>\n        selected && active && underlineColor};\n    }\n\n    // foreground rules\n    color: ${({ selected }) => selected && underlinedTabInactiveForeground};\n    color: ${({ selected, active }) =>\n      selected && active && underlinedTabForeground};\n\n    //  background rules\n    background: ${background};\n    background: ${({ selected }) =>\n      selected && underlinedTabInactiveBackground};\n    background: ${({ selected, active }) =>\n      selected && active && underlinedTabBackground};\n\n    ${({ disabled, active }) =>\n      !disabled &&\n      css`\n        &:hover,\n        &.hover /* for testing purposes */ {\n          background: ${hoverInactiveBackground};\n          background: ${active && hoverBackground};\n        }\n      `}\n  `;\n","import { css, styled } from \"@intellij-platform/core/styled\";\n\ninterface Props {\n  hasOverflowAtStart: boolean;\n  hasOverflowAtEnd: boolean;\n}\n\nconst horizontalOverflowIndicatorStyles = css`\n  content: \"\";\n  pointer-events: none;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  width: 10px;\n  z-index: 1;\n`;\nexport const StyledHorizontalOverflowShadows = styled.div<Props>`\n  position: relative; // for overflow indicator (pseudo-)elements to be positioned absolute\n\n  /* FIXME: find out what color, width and gradient parameters are used in the original implementation */\n  ${({ hasOverflowAtStart }) =>\n    hasOverflowAtStart &&\n    css`\n      ::before {\n        ${horizontalOverflowIndicatorStyles};\n        background: linear-gradient(\n          90deg,\n          ${({ theme }) => theme.commonColors.panelBackground} 0%,\n          transparent 100%\n        );\n        left: 0;\n      }\n    `};\n  ${({ hasOverflowAtEnd }) =>\n    hasOverflowAtEnd &&\n    css`\n      ::after {\n        ${horizontalOverflowIndicatorStyles};\n        background: linear-gradient(\n          -90deg,\n          ${({ theme }) => theme.commonColors.panelBackground} 0%,\n          transparent 100%\n        );\n        right: 0;\n      }\n    `};\n`;\n","import { useTab } from \"@react-aria/tabs\";\nimport { TabListState } from \"@react-stately/tabs\";\nimport { Node } from \"@react-types/shared\";\nimport { StyledDefaultTab, TabComponentProps } from \"./StyledDefaultTab\";\nimport React, { ComponentType, ForwardedRef, forwardRef } from \"react\";\nimport { useObjectRef } from \"@react-aria/utils\";\n\ntype TabProps<T extends object> = {\n  state: TabListState<object>;\n  item: Node<T>;\n  /**\n   * {@see TabsProps#focusable}\n   */\n  focusable?: boolean;\n  /**\n   * {@see TabsProps#active}\n   */\n  active?: boolean;\n  shouldSelectOnPressUp?: boolean;\n  Component?: ComponentType<TabComponentProps>;\n};\n\nexport const Tab = forwardRef(function Tab<T extends object>(\n  {\n    state,\n    item,\n    focusable,\n    active,\n    shouldSelectOnPressUp,\n    Component = StyledDefaultTab,\n  }: TabProps<T>,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n): React.ReactElement {\n  const { key, rendered } = item;\n  const ref = useObjectRef(forwardedRef);\n  const {\n    tabProps: {\n      /**\n       * by extracting out tabIndex, all keyboard support of the tabs is disabled, since we prevent the tab from being\n       * focusable.\n       */\n      tabIndex,\n      ...tabProps\n    },\n  } = useTab(\n    {\n      key,\n      shouldSelectOnPressUp,\n    },\n    state,\n    ref\n  );\n  const isSelected = state.selectedKey === key;\n  const isDisabled = state.disabledKeys.has(key);\n\n  return (\n    <Component\n      {...tabProps}\n      tabIndex={focusable ? tabIndex : undefined}\n      ref={ref}\n      active={active}\n      selected={isSelected}\n      disabled={isDisabled}\n    >\n      {rendered}\n    </Component>\n  );\n});\n","import React, { ComponentType, HTMLAttributes, Key, useEffect } from \"react\";\nimport { useTabList } from \"@react-aria/tabs\";\nimport { filterDOMProps, mergeProps, scrollIntoView } from \"@react-aria/utils\";\nimport { useTabListState } from \"@react-stately/tabs\";\nimport { AriaTabListProps } from \"@react-types/tabs\";\nimport { StyledHorizontalOverflowShadows } from \"./StyledHorizontalOverflowShadows\";\nimport { TabsOverflowMenu } from \"./TabsOverflowMenu\";\nimport { useOverflowObserver } from \"../utils/overflow-utils/useOverflowObserver\";\nimport { useHasOverflow } from \"./useHasOverflow\";\nimport { css, styled } from \"@intellij-platform/core/styled\";\nimport { notNull } from \"@intellij-platform/core/utils/array-utils\";\nimport { TabComponentProps } from \"./StyledDefaultTab\";\nimport { StyledDefaultTabs, TabsComponentProps } from \"./StyledDefaultTabs\";\nimport { Tab } from \"./Tab\";\n\nexport type TabsProps<T> = Omit<\n  AriaTabListProps<T>,\n  \"orientation\" | \"isDisabled\" | \"\"\n> & {\n  /**\n   * Whether tabs should be focusable or not. By default, following the Intellij Platform implementation, tabs are\n   * not focusable and therefore lack the keyboard accessibility support specified in WAI-ARIA.\n   * You can change this default behaviour and make the tabs keyboard accessible by passing `focusable`.\n   * focus styles are not perfect at the moment, since it's not considered an important feature.\n   * @default false\n   */\n  focusable?: boolean;\n\n  /**\n   * Whether selected tab should change on press up instead of press down.\n   * @default false.\n   */\n  shouldSelectOnPressUp?: boolean;\n\n  /**\n   * Enables \"active\" style on tabs. Is usually related to a container having focus.\n   */\n  active?: boolean;\n\n  /**\n   * If set to true, tabs will be wrapped into multiple rows if needed.\n   * NOTE: In the original implementation, in multi row mode, rows are separated by a border. It's not easy to achieve\n   * this when we are implementing this feature with a simple `flex-wrap: wrap` css rule. It doesn't seem that\n   * important, but we can achieve something similar by some css tricks like the ones suggested here:\n   * https://stackoverflow.com/questions/36128333/row-lines-for-flex-container-css\n   * @default false\n   */\n  multiRow?: boolean;\n\n  /**\n   * Only effective when {@link multiRow} is not true.\n   * If set to true and multiRow is not true, it will prevent horizontal scroll of tabs. Depending on the value of\n   * In this case:\n   * - if {@link noOverflowMenu} is not set to true, tabs that can't be fitted into the available space will be\n   *   accessible via an overflow menu.\n   * - if {@link noOverflowMenu} is set to true, the tabs will be fitted into the available space, and they will\n   *   be shrunk when needed.\n   *\n   * @todo: not implemented yet.\n   * @default false\n   */\n  noScroll?: boolean;\n\n  /**\n   * Only effective when {@link multiRow} is not true.\n   * When set to true, tabs that couldn't be fitted into the available space, are either shrunk (if {@link noScroll}\n   * is set to true), or are just accessible by scroll.\n   */\n  noOverflowMenu?: boolean;\n\n  /**\n   * Removes the top and bottom border when passed.\n   * It's still not clear whether such option makes sense or not, but\n   * at least in common use cases like in tool windows, it seems borders are already there and there should be a way\n   * of removing tab borders. On the other hand, when Tabs is used without any assumption about the surrounding UI,\n   * it kind of makes sense to have the top and bottom borders by default. So that's why this is made an option for\n   * now, maybe until things are clearer.\n   *\n   * @default false\n   */\n  noBorders?: boolean;\n\n  TabsComponent?: ComponentType<TabsComponentProps>;\n  /**\n   *\n   */\n  TabComponent?: ComponentType<TabComponentProps>;\n};\n\nconst scrollBarDisabledStyle = css`\n  -ms-overflow-style: none; /* for Internet Explorer, Edge */\n  scrollbar-width: none; /* for Firefox */\n  &::-webkit-scrollbar {\n    /* for Chrome/Safari/Webkit */\n    display: none;\n  }\n`;\n\nconst StyledTabList = styled.div<{ multiRow?: boolean }>`\n  display: flex;\n  flex-wrap: ${({ multiRow }) => (multiRow ? \"wrap\" : \"nowrap\")};\n  overflow: auto;\n\n  ${scrollBarDisabledStyle};\n`;\n\n/**\n *\n * TODO: add support for overflow:\n *  - have vertical scroll also scroll tabs\n *  - add support for re-reordering tabs.\n *  - FIX: When a tab that was not selected is removed, selection should not change. It now changes to the tab before the removed one.\n */\nexport const Tabs = <T extends object>({\n  focusable,\n  shouldSelectOnPressUp,\n  active,\n  TabComponent,\n  TabsComponent = StyledDefaultTabs,\n  multiRow,\n  noOverflowMenu,\n  noScroll,\n  noBorders,\n  ...props\n}: TabsProps<T>): React.ReactElement => {\n  const state = useTabListState(props);\n  const ref = React.useRef<HTMLDivElement>(null);\n  const { tabListProps } = useTabList(props, state, ref);\n\n  const { scrolledIndicatorProps, hasOverflow } = useHasOverflow({ ref });\n  const { overflowedElements } = useOverflowObserver(ref);\n  const overflowedKeys = new Set(\n    overflowedElements\n      .map((element) =>\n        element instanceof HTMLElement ? element.dataset[\"key\"] : null\n      )\n      .filter(notNull)\n  );\n\n  useEffect(() => {\n    if (!noScroll) {\n      const scrollableContainer = ref.current;\n      const selectedTabElement = scrollableContainer?.querySelector(\n        `[data-key=\"${state.selectedKey}\"]`\n      ) as HTMLElement;\n      if (scrollableContainer && selectedTabElement) {\n        scrollIntoView(scrollableContainer, selectedTabElement);\n      }\n    } else {\n      // TODO maybe? sample use case: project tool window tabs, when not grouped.\n    }\n  }, [state.selectedKey]);\n  const onOverflowMenuItemSelected = (key: Key) => {\n    state.setSelectedKey(key);\n  };\n  if (noScroll) {\n    throw new Error(\"noScroll is not supported yet.\");\n  }\n  return (\n    <TabsComponent noBorders={noBorders} {...filterDOMProps(props)}>\n      <StyledHorizontalOverflowShadows\n        hasOverflowAtStart={hasOverflow.left}\n        hasOverflowAtEnd={hasOverflow.right}\n        style={{ minWidth: 0 }}\n      >\n        <StyledTabList\n          {...mergeProps(tabListProps, scrolledIndicatorProps)}\n          multiRow={multiRow}\n          ref={ref}\n        >\n          {[...state.collection].map((item) => (\n            <Tab\n              key={item.key}\n              item={item}\n              state={state}\n              focusable={focusable}\n              shouldSelectOnPressUp={shouldSelectOnPressUp}\n              active={active}\n              Component={TabComponent}\n            />\n          ))}\n        </StyledTabList>\n      </StyledHorizontalOverflowShadows>\n      {!noOverflowMenu && (\n        <TabsOverflowMenu\n          collection={state.collection}\n          overflowedKeys={overflowedKeys}\n          onSelect={onOverflowMenuItemSelected}\n        />\n      )}\n    </TabsComponent>\n  );\n};\n","import { RefObject, UIEventHandler, useEffect, useState } from \"react\";\n\nexport function useHasOverflow<T extends HTMLElement>({\n  threshold = 5,\n  ref,\n}: {\n  threshold?: number;\n  ref: RefObject<T>;\n}) {\n  const [hasOverflow, setHasOverflow] = useState({\n    left: false,\n    right: false,\n    top: false,\n    bottom: false,\n  });\n\n  const update = () => {\n    const element = ref.current;\n    if (element) {\n      const offsetLeft = element.scrollLeft;\n      const offsetRight =\n        element.scrollWidth - (element.offsetWidth + element.scrollLeft);\n      const offsetTop = element.scrollTop;\n      const offsetBottom =\n        element.scrollHeight - (element.offsetHeight + element.scrollTop);\n      const newHasOverflow = {\n        top: offsetTop > threshold,\n        bottom: offsetBottom > threshold,\n        left: offsetLeft > threshold,\n        right: offsetRight > threshold,\n      };\n      if (\n        hasOverflow.top !== newHasOverflow.top ||\n        hasOverflow.bottom !== newHasOverflow.bottom ||\n        hasOverflow.left !== newHasOverflow.left ||\n        hasOverflow.right !== newHasOverflow.right\n      ) {\n        setHasOverflow(newHasOverflow);\n      }\n    }\n  };\n  useEffect(update);\n\n  return {\n    scrolledIndicatorProps: {\n      onScroll: update as UIEventHandler<T>,\n    },\n    hasOverflow,\n  };\n}\n","import { Collection, Node } from \"@react-types/shared\";\nimport { Item } from \"@react-stately/collections\";\nimport { Menu, MenuTrigger } from \"@intellij-platform/core/Menu\";\nimport { IconButton } from \"@intellij-platform/core/IconButton\";\nimport { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport React, { Key } from \"react\";\n\nexport const TabsOverflowMenu = <T extends unknown>({\n  collection,\n  overflowedKeys,\n  onSelect,\n}: {\n  collection: Collection<Node<T>>;\n  overflowedKeys: Set<Key>;\n  onSelect: (key: Key) => void;\n}) => (\n  <>\n    {overflowedKeys.size > 0 && (\n      <MenuTrigger\n        align=\"end\"\n        renderMenu={({ menuProps }) => {\n          const items: Iterable<Node<unknown>> = [...collection].filter(\n            (menuItem) => overflowedKeys.has(menuItem.key)\n          );\n          return (\n            <Menu\n              {...menuProps}\n              onAction={(key) => {\n                onSelect(key);\n              }}\n              items={items}\n            >\n              {(item) => (\n                <Item key={item.key} textValue={item.textValue}>\n                  {item.props.inOverflowMenu || item.textValue}\n                </Item>\n              )}\n            </Menu>\n          );\n        }}\n      >\n        {(props, ref) => (\n          <IconButton {...props} ref={ref}>\n            <PlatformIcon icon=\"actions/findAndShowNextMatches\" />\n          </IconButton>\n        )}\n      </MenuTrigger>\n    )}\n  </>\n);\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { Theme } from \"@intellij-platform/core/Theme\";\nimport { StyledDefaultTab } from \"@intellij-platform/core/Tabs/StyledDefaultTab\";\nimport {\n  getTabThemeStyles,\n  TabTheme,\n} from \"@intellij-platform/core/Tabs/TabTheme\";\n\nexport const toolWindowTabTheme = ({ theme }: { theme: Theme }): TabTheme => ({\n  borderColor: theme.color(\"ToolWindow.HeaderTab.borderColor\"),\n  underlineHeight: theme.value<number>(\"ToolWindow.HeaderTab.underlineHeight\"),\n  background: \"transparent\",\n  underlinedTabInactiveBackground: theme.color(\n    \"ToolWindow.HeaderTab.underlinedTabInactiveBackground\"\n  ),\n  underlinedTabBackground: theme.color(\n    \"ToolWindow.HeaderTab.underlinedTabBackground\"\n  ),\n  hoverInactiveBackground:\n    theme.color(\"ToolWindow.HeaderTab.hoverInactiveBackground\") ??\n    theme.color(\"ToolWindow.HeaderTab.hoverBackground\"),\n  hoverBackground: theme.color(\"ToolWindow.HeaderTab.hoverBackground\"),\n  inactiveUnderlineColor: theme.color(\n    \"ToolWindow.HeaderTab.inactiveUnderlineColor\"\n  ),\n  underlineColor: theme.color(\"ToolWindow.HeaderTab.underlineColor\"),\n\n  underlinedTabInactiveForeground:\n    theme.color(\"ToolWindow.HeaderTab.underlinedTabInactiveForeground\") ??\n    theme.color(\"ToolWindow.HeaderTab.underlinedTabForeground\"),\n  underlinedTabForeground: theme.color(\n    \"ToolWindow.HeaderTab.underlinedTabForeground\"\n  ),\n});\nexport const StyledToolWindowTab = styled(StyledDefaultTab)`\n  padding: 0 0.7rem;\n  ${({ theme }) => getTabThemeStyles(toolWindowTabTheme({ theme }))};\n`;\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { getTabsThemeStyles } from \"@intellij-platform/core/Tabs/TabTheme\";\nimport { StyledDefaultTabs } from \"@intellij-platform/core/Tabs/StyledDefaultTabs\";\nimport { toolWindowTabTheme } from \"./StyledToolWindowTab\";\n\nexport const StyledToolWindowTabs = styled(StyledDefaultTabs)`\n  ${({ theme }) => getTabsThemeStyles(toolWindowTabTheme({ theme }))};\n`;\n","import React from \"react\";\nimport { Tabs, TabsProps } from \"@intellij-platform/core/Tabs/Tabs\";\nimport { StyledToolWindowTab } from \"./StyledToolWindowTab\";\nimport { StyledToolWindowTabs } from \"./StyledToolWindowTabs\";\n\ntype ToolWindowTabsProps<T extends object> = Omit<\n  TabsProps<T>,\n  \"TabComponent\" | \"TabsComponent\" | \"focusable\"\n>;\n\nexport const ToolWindowTabs = <T extends object>(\n  props: ToolWindowTabsProps<T>\n) => (\n  <Tabs\n    {...props}\n    TabComponent={StyledToolWindowTab}\n    TabsComponent={StyledToolWindowTabs}\n    focusable={false}\n    shouldSelectOnPressUp\n  />\n);\n","import React from \"react\";\nimport { Tooltip, TooltipProps } from \"@intellij-platform/core/Tooltip/Tooltip\";\n\nexport interface ActionTooltipProps\n  extends Omit<TooltipProps, \"children\" | \"multiline\"> {\n  actionName: React.ReactNode;\n  shortcut?: React.ReactNode;\n}\n\n/**\n * Tooltip of type \"Action\"\n * @see {@link ActionHelpTooltip} {@link HelpTooltip}\n * @see https://jetbrains.github.io/ui/controls/tooltip/#02\n */\nexport const ActionTooltip = ({\n  actionName,\n  shortcut,\n  ...tooltipProps\n}: ActionTooltipProps): JSX.Element => {\n  return (\n    <Tooltip {...tooltipProps}>\n      <Tooltip.Header>\n        {actionName}\n        {shortcut && <Tooltip.Shortcut>{shortcut}</Tooltip.Shortcut>}\n      </Tooltip.Header>\n    </Tooltip>\n  );\n};\n","import { Theme } from \"@intellij-platform/core/Theme\";\n\nexport const WITH_POINTER_BORDER_RADIUS = 4;\nexport const tooltipBackground = ({ theme }: { theme: Theme }) =>\n  theme.color(\"ToolTip.background\", !theme.dark ? \"#f2f2f2\" : \"#3c3f41\");\nexport const tooltipBorderColor = ({ theme }: { theme: Theme }) =>\n  theme.color(\"ToolTip.borderColor\", !theme.dark ? \"#adadad\" : \"#636569\");\n","import { compose, identity } from \"ramda\";\nimport React, { CSSProperties } from \"react\";\nimport { css, styled } from \"@intellij-platform/core/styled\";\n\nimport {\n  tooltipBackground,\n  WITH_POINTER_BORDER_RADIUS,\n} from \"./tooltip-styles\";\n\ntype OffsetValue = number | `${number}%`;\nexport type TooltipPointerPosition = {\n  /**\n   * The side of the tooltip the pointer is shown\n   */\n  side: \"top\" | \"bottom\" | \"left\" | \"right\";\n  /**\n   * - When side is \"top\" or \"bottom\":\n   *   Horizontal offset (in px) with respect to the left (or right, if negative) of the tooltip.\n   * - When side is \"left\" or \"right\":\n   *   Vertical offset (in px) with respect to the top (or bottom, if negative) of the tooltip.\n   *\n   * @default: '50%'\n   */\n  offset?: OffsetValue | { value: OffsetValue; invert?: boolean };\n};\n\nconst POINTER_WIDTH = 6;\nconst POINTER_HEIGHT = 9;\nconst POINTER_THICKNESS = 1.5;\nconst TRANSLATE = `translate(-${POINTER_WIDTH}px, -${POINTER_HEIGHT}px)`;\nconst sideStyles = {\n  top: css`\n    top: 0;\n    transform: ${TRANSLATE};\n  `,\n  bottom: css`\n    bottom: 0;\n    transform: rotateX(180deg) ${TRANSLATE};\n  `,\n  left: css`\n    left: 0;\n    transform: rotate(-90deg) ${TRANSLATE};\n  `,\n  right: css`\n    right: 0;\n    transform: rotate(90deg) ${TRANSLATE};\n  `,\n};\nconst StyledTooltipPointer = styled.span<{\n  side: TooltipPointerPosition[\"side\"];\n}>`\n  position: absolute;\n  width: 0;\n  height: 0;\n  ${({ side }) => sideStyles[side]};\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    border-left: ${POINTER_WIDTH + POINTER_THICKNESS}px solid transparent;\n    border-right: ${POINTER_WIDTH + POINTER_THICKNESS}px solid transparent;\n    border-bottom: ${POINTER_HEIGHT + POINTER_THICKNESS}px solid #636569;\n    left: -${POINTER_THICKNESS}px;\n    top: -${POINTER_THICKNESS}px;\n  }\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    border-left: ${POINTER_WIDTH}px solid transparent;\n    border-right: ${POINTER_WIDTH}px solid transparent;\n    border-bottom: ${POINTER_HEIGHT}px solid ${tooltipBackground};\n  }\n`;\n\nfunction normalizeCssValue(value: string | number) {\n  return typeof value === \"number\" ? `${value}px` : value;\n}\n\nconst withMin = (min: number) => (value: string | number | undefined) =>\n  value != undefined ? `max(${min}px, ${normalizeCssValue(value)})` : value;\nconst withMax = (max: number) => (value: string | number | undefined) =>\n  value != undefined ? `min(${max}px, ${normalizeCssValue(value)})` : value;\nconst HEIGHT_OFFSET = POINTER_HEIGHT + WITH_POINTER_BORDER_RADIUS;\nconst WIDTH_OFFSET = POINTER_WIDTH + WITH_POINTER_BORDER_RADIUS;\n\n/**\n * Ensures pointer is not offset too much or too little that would make the arrow appear\n * outside the tooltip boundary.\n */\nfunction limitPointerPositionStyles(\n  { width, height }: { width: number | undefined; height: number | undefined },\n  { top, left, right, bottom }: CSSProperties\n) {\n  const applyVerticalMinMax = compose(\n    height ? withMax(height - HEIGHT_OFFSET) : identity,\n    withMin(HEIGHT_OFFSET)\n  );\n  const applyHorizontalMinMax = compose(\n    width ? withMax(width - WIDTH_OFFSET) : identity,\n    withMin(WIDTH_OFFSET)\n  );\n  return {\n    top: applyVerticalMinMax(top),\n    bottom: applyVerticalMinMax(bottom),\n    left: applyHorizontalMinMax(left),\n    right: applyHorizontalMinMax(right),\n  };\n}\n\nconst getOffsetCssProp = (\n  side: TooltipPointerPosition[\"side\"],\n  invert?: boolean\n): \"top\" | \"bottom\" | \"left\" | \"right\" => {\n  if (side === \"top\" || side === \"bottom\") {\n    return invert ? \"right\" : \"left\";\n  }\n  return invert ? \"bottom\" : \"top\";\n};\n\nfunction pointerPositionToOffsetStyle({\n  side,\n  offset = \"50%\",\n}: TooltipPointerPosition): CSSProperties {\n  const { invert = false, value: offsetValue } =\n    typeof offset === \"object\" ? offset : { invert: false, value: offset };\n  return {\n    [getOffsetCssProp(side, invert)]: offsetValue,\n  };\n}\n\nexport function TooltipPointer({\n  side,\n  offset,\n  tooltipSize,\n}: {\n  side: TooltipPointerPosition[\"side\"];\n  offset:\n    | { type: \"calculated\"; value: CSSProperties }\n    | { type: \"specific\"; value: TooltipPointerPosition[\"offset\"] };\n  tooltipSize: { width: number; height: number };\n}) {\n  return (\n    <StyledTooltipPointer\n      side={side}\n      style={limitPointerPositionStyles(\n        tooltipSize,\n        offset.type === \"specific\"\n          ? pointerPositionToOffsetStyle({ side, offset: offset.value })\n          : offset.value\n      )}\n    />\n  );\n}\n","import React, {\n  ForwardedRef,\n  MutableRefObject,\n  useContext,\n  useLayoutEffect,\n  useState,\n} from \"react\";\nimport { AriaTooltipProps, useTooltip } from \"@react-aria/tooltip\";\nimport { useObjectRef } from \"@react-aria/utils\";\nimport { PositionAria } from \"@react-aria/overlays\";\nimport { css, styled } from \"@intellij-platform/core/styled\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { WINDOW_SHADOW } from \"@intellij-platform/core/style-constants\";\nimport { TooltipContext } from \"./TooltipContext\";\nimport { TooltipPointer, TooltipPointerPosition } from \"./TooltipPointer\";\nimport {\n  tooltipBackground,\n  tooltipBorderColor,\n  WITH_POINTER_BORDER_RADIUS,\n} from \"./tooltip-styles\";\n\nexport interface TooltipProps extends Omit<AriaTooltipProps, \"isOpen\"> {\n  children: React.ReactNode;\n  multiline?: boolean;\n  className?: string;\n  /**\n   * Whether (and in what position) the arrow pointer should be shown.\n   * When using {@link TooltipTrigger} or {@link PositionedTooltipTrigger}, the position of the pointer is calculated\n   * based on the target element, and a boolean value to define whether the arrow should be shown or not would suffice.\n   *\n   * Tooltips with pointer have slight style difference.\n   * {@see https://www.figma.com/file/nfDfMAdV7j2fnQlpYNAOfP/IntelliJ-Platform-UI-Kit-(Community)?type=design&node-id=15-51&mode=design&t=7PplrxG8ZfXB4hIK-0}\n   *\n   * @example\n   * <Tooltip withPointer />\n   * // shows the pointer in the position controlled by {@link TooltipTrigger} or {@link PositionedTooltipTrigger}\n   * // If there is not `TooltipTrigger` or `PositionedTooltipTrigger`, the arrow is shown on top center by default.\n   *\n   * @example\n   * <Tooltip withPointer={{side: 'top', offset: 30}} />\n   * // shows the pointer on the top side, with horizontal offset of 30px from the left of tooltip, regardless\n   * // of whether `TooltipTrigger` or `PositionedTooltipTrigger` is used.\n   *\n   * @example\n   * <Tooltip withPointer={{side: 'left', offset: -30}} />\n   * // shows the pointer on the left side, with vertidcal offset of 30px from the bottom of the tooltip, regardless\n   * // of whether `TooltipTrigger` or `PositionedTooltipTrigger` is used.\n   */\n  withPointer?: boolean | TooltipPointerPosition;\n}\n\n// Providing default value for paddings, based on intellijlaf theme. In Intellij Platform, themes extend either\n// intellijlaf or darcula. Which means some properties can be omitted in the custom theme, relying on the values\n// in the base theme. This is not how theming works here, at the moment, and there are other similar issues, but\n// this is just a mitigation for one case, spacing in tooltip.\nexport const DEFAULT_TEXT_BORDER_INSETS = \"0.5rem 0.8125rem 0.625rem 0.625rem\";\nexport const DEFAULT_SMALL_TEXT_BORDER_INSETS =\n  \"0.375rem 0.75rem 0.4375rem 0.625rem\";\nconst StyledTooltip = styled.div<{ multiline?: boolean; hasPointer?: boolean }>`\n  box-sizing: content-box;\n  max-width: ${\n    /**\n     * Max width is meant to be set on the multiline description (which is not used in ActionTooltip which would\n     * be right according to [the specs](https://jetbrains.github.io/ui/controls/tooltip/#09)).\n     * But if set on `Tooltip.Description`, title and link can still make the tooltip grow more that the expected max\n     * width. So it makes more sense to set the max width on the container anyway. But since the value of the max width\n     * is meant to be for description we set the box-sizing to \"content-box\" to exclude container's padding in max-width\n     * calculation.\n     */\n    ({ theme, multiline }) =>\n      multiline\n        ? `${\n            theme.value<number>(\n              \"HelpTooltip.maxWidth\" as UnknownThemeProp<\"HelpTooltip.maxWidth\">\n            ) ?? 250\n          }px`\n        : null\n  };\n  white-space: ${({ multiline }) => (!multiline ? \"nowrap\" : null)};\n  display: inline-flex;\n  flex-direction: column;\n  gap: ${({ theme }) =>\n    theme.value<number>(\n      \"HelpToolTip.verticalGap\" as UnknownThemeProp<\"HelpToolTip.verticalGap\">\n    ) ?? 4}px;\n  background: ${tooltipBackground};\n  color: ${({ theme }) =>\n    theme.color(\"ToolTip.foreground\", !theme.dark ? \"#000\" : \"#bfbfbf\")};\n  padding: ${({ theme, multiline }) =>\n    multiline\n      ? theme.inset(\"HelpTooltip.defaultTextBorderInsets\") ||\n        DEFAULT_TEXT_BORDER_INSETS\n      : theme.inset(\"HelpTooltip.smallTextBorderInsets\") ||\n        DEFAULT_SMALL_TEXT_BORDER_INSETS};\n  line-height: 1.2;\n  border-style: solid;\n  border-width: ${({ theme, hasPointer }) =>\n    theme.value<boolean>(\"ToolTip.paintBorder\") || hasPointer ? \"1px\" : \"0px\"};\n  border-color: ${tooltipBorderColor};\n  ${WINDOW_SHADOW};\n  ${({ hasPointer }) =>\n    hasPointer &&\n    css`\n      position: relative; // needed for absolute positioning of the pointer\n      border-radius: ${WITH_POINTER_BORDER_RADIUS}px;\n    `}\n`;\n\nconst StyledShortcut = styled.kbd`\n  all: unset;\n  color: ${({ theme }) =>\n    theme.color(\n      \"ToolTip.shortcutForeground\",\n      !theme.dark ? \"#787878\" : \"#999999\"\n    )};\n`;\n\nconst StyledHeader = styled.div`\n  font-size: ${({ theme }) => theme.fontSizeDelta(\"HelpTooltip.fontSizeDelta\")};\n  display: flex;\n  gap: 0.5rem;\n`;\nconst StyledDescription = styled.div`\n  color: ${({ theme }) =>\n    theme.color(\n      \"Tooltip.infoForeground\" as UnknownThemeProp<\"Tooltip.infoForeground\">,\n      theme.commonColors.contextHelpForeground\n    )};\n  font-size: ${({ theme }) =>\n    theme.fontSizeDelta(\"HelpTooltip.descriptionSizeDelta\")};\n`;\n\nconst StyledLink = styled.div`\n  color: ${({ theme }) =>\n    theme.color(\n      \"ToolTip.linkForeground\" as UnknownThemeProp<\"ToolTip.linkForeground\">,\n      theme.commonColors.linkForegroundEnabled\n    )};\n  a,\n  [role=\"link\"] {\n    // Maybe target Link instead, without important. It didn't work as expected, in the first try tho.\n    color: inherit !important;\n  }\n`;\n\nexport const placementToPointerSide: Record<\n  PositionAria[\"placement\"],\n  TooltipPointerPosition[\"side\"]\n> = {\n  bottom: \"top\",\n  top: \"bottom\",\n  left: \"right\",\n  right: \"left\",\n  center: \"top\", // doesn't make sense :-?\n};\n/**\n * Implements the UI of a Tooltip. For tooltip to be shown for a trigger, on hover, use {@link TooltipTrigger}.\n * The following components can be used to compose the content of a tooltip.\n * - {@link Tooltip.Header}\n * - {@link Tooltip.Description}\n * - {@link Tooltip.Link}\n * - {@link Tooltip.Shortcut}\n * Prefer using higher-level components like {@link HelpTooltip}, {@link ActionHelpTooltip} or {@link ActionTooltip}.\n * that ensure different pieces of tooltip content follow the\n * [design system recommendation](https://jetbrains.github.io/ui/controls/tooltip)\n *\n *\n * ### Reference:\n * Tooltip, Tooltip.* and TooltipTrigger are corresponding to [HelpTooltip](https://github.com/JetBrains/intellij-community/blob/854daf45b47a6ea9da0348978608bfbfe998d99c/platform/platform-api/src/com/intellij/ide/HelpTooltip.java#L102)\n * in the original impl.\n */\nconst Tooltip = React.forwardRef(function Tooltip(\n  { children, multiline, withPointer, ...props }: TooltipProps,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n): JSX.Element {\n  const ref: MutableRefObject<HTMLDivElement | null> =\n    useObjectRef(forwardedRef);\n  const {\n    state,\n    isInteractive,\n    pointerPositionStyle,\n    placement = \"bottom\",\n  } = useContext(TooltipContext) || {};\n  const { tooltipProps } = useTooltip(\n    props,\n    state\n      ? {\n          ...state,\n          // if the tooltip is not interactive, let it be closed even when it's hovered. That's the according to the reference impl.\n          open: isInteractive ? state?.open : () => {},\n        }\n      : state\n  );\n  const measuredSize = useMeasuredSize(ref);\n\n  const { side, offset } =\n    typeof withPointer === \"object\"\n      ? withPointer\n      : { side: placementToPointerSide[placement], offset: undefined };\n\n  return (\n    <StyledTooltip\n      hasPointer={Boolean(withPointer)}\n      multiline={multiline}\n      {...tooltipProps}\n      className={props.className}\n      ref={ref}\n    >\n      {withPointer && measuredSize && (\n        <TooltipPointer\n          tooltipSize={measuredSize}\n          side={side}\n          offset={\n            offset || !pointerPositionStyle\n              ? { type: \"specific\", value: offset }\n              : { type: \"calculated\", value: pointerPositionStyle }\n          }\n        />\n      )}\n      {children}\n    </StyledTooltip>\n  );\n});\n\nconst useMeasuredSize = (\n  ref: React.MutableRefObject<HTMLDivElement | null>\n) => {\n  const [measuredSize, setMeasuredSize] = useState<\n    | undefined\n    | {\n        height: number;\n        width: number;\n      }\n  >(undefined);\n\n  useLayoutEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n    const { offsetHeight, offsetWidth } = ref.current;\n    if (\n      offsetHeight != measuredSize?.height ||\n      offsetWidth != measuredSize?.width\n    ) {\n      setMeasuredSize({ height: offsetHeight, width: offsetWidth });\n    }\n  });\n  return measuredSize;\n};\n\nconst _Tooltip = Object.assign(Tooltip, {\n  Header: StyledHeader,\n  Shortcut: StyledShortcut,\n  Description: StyledDescription,\n  Link: StyledLink,\n});\n\nexport { _Tooltip as Tooltip };\n","import React, { CSSProperties } from \"react\";\nimport { TooltipTriggerState } from \"@react-stately/tooltip\";\nimport { PositionAria } from \"@react-aria/overlays\";\n\ninterface TooltipContextObject {\n  state: TooltipTriggerState;\n  isInteractive: boolean;\n  placement: PositionAria[\"placement\"];\n  pointerPositionStyle?: CSSProperties;\n}\n\nexport const TooltipContext = React.createContext<TooltipContextObject | null>(\n  null\n);\n","import React, { useRef } from \"react\";\nimport { useLayoutEffect } from \"@react-aria/utils\";\nimport {\n  AriaPositionProps,\n  PositionAria,\n  useOverlayPosition,\n} from \"@react-aria/overlays\";\n\n/**\n * `useOverlayPosition` only supports positioning overlay relative to an element, at the moment.\n *  For context menu or tooltip, we may want to position the overlay based on the coordinates of the mouse event which\n *  has triggered the overlay.\n *  This hook wraps `useOverlayPosition`, and is very similar to it, but you don't need to pass `targetRef`. Instead,\n *  you have to call the updatePosition in the event handler that triggers the overlay, passing the `MouseEvent` object.\n *\n * This is hopefully a temporary solution to circumvents the limitation of `useOverlayPosition`, until it supports\n * non-element based positioning as well. It works by appending a dummy 1x1 px element to body and positioning it\n * based on React.MouseEvent objects. Then it uses a ref to that element as the `targetRef`, passed to `useOverlayPosition`\n *\n * @example\n * ```ts\n * const { updatePosition, overlyProps} = useMouseEventOverlayPosition({ overlayRef });\n *\n * const onContextMenu = (event: React.ReactEvent) => {\n *  updatePosition(event);\n *  // ...\n * }\n * ```\n */\nlet globalMoveHandler: null | ((e: MouseEvent) => void) = null;\nlet lastMouseClientPos: { clientX: number; clientY: number } | undefined;\n\nexport function useMouseEventOverlayPosition(\n  options: Omit<AriaPositionProps, \"targetRef\">\n): Omit<PositionAria, \"updatePosition\"> & {\n  updatePosition: (event?: React.MouseEvent) => void;\n} {\n  const targetRef = useRef<HTMLElement>(null);\n\n  useLayoutEffect(() => {\n    if (!globalMoveHandler) {\n      // After the first use of the hook, the listener will be attached forever. Not a big deal but can be improved.\n      globalMoveHandler = ({ clientX, clientY }) => {\n        lastMouseClientPos = { clientX, clientY };\n      };\n      document.addEventListener(\"mousemove\", globalMoveHandler);\n    }\n    if (!targetRef.current) {\n      const fakeTarget = document.createElement(\"span\");\n      Object.assign(fakeTarget.style, {\n        width: \"0px\",\n        height: \"0px\",\n        pointerEvents: \"none\",\n        position: \"fixed\",\n        visibility: \"hidden\",\n      });\n      document.body.appendChild(fakeTarget);\n      // @ts-expect-error We intentionally don't pass null to generic argument, to not have it as a mutable nullable\n      // ref, since we are mimicking an element ref.\n      targetRef.current = fakeTarget;\n      return () => {\n        fakeTarget.remove();\n      };\n    }\n  }, []);\n\n  const updatePosition = (e?: React.MouseEvent) => {\n    const coordinatesSource = e || lastMouseClientPos;\n    if (targetRef.current && coordinatesSource) {\n      const { clientX, clientY } = coordinatesSource;\n      targetRef.current.style.left = `${\n        // not sure why crossOffset passed to useOverlayPosition doesn't work, so compensating for it here.\n        clientX + (options.crossOffset ?? 0)\n      }px`;\n      targetRef.current.style.top = `${clientY}px`;\n    }\n    _updatePosition();\n  };\n  useLayoutEffect(() => {\n    if (options.isOpen) {\n      updatePosition();\n    }\n  }, [options.isOpen, targetRef.current]);\n\n  const { updatePosition: _updatePosition, ...result } = useOverlayPosition({\n    ...options,\n    targetRef,\n  });\n\n  return {\n    ...result,\n    /**\n     * Ref to be passed to be passed as targetRef\n     */\n    updatePosition,\n  };\n}\n","import React, {\n  HTMLAttributes,\n  ReactElement,\n  RefObject,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { TooltipTriggerProps as AriaTooltipTriggerProps } from \"@react-aria/tooltip\";\nimport { AriaPositionProps } from \"@react-aria/overlays\";\nimport { useTooltipTriggerState } from \"@react-stately/tooltip\";\nimport { useMouseEventOverlayPosition } from \"@intellij-platform/core/utils/useMouseEventOverlayPosition\";\nimport { useTheme } from \"@intellij-platform/core/styled\";\nimport { TooltipTriggerAndOverlay } from \"@intellij-platform/core/Tooltip/TooltipTriggerAndOverlay\";\n\nexport interface TooltipTriggerProps\n  // controlling isOpen state is not supported since positioning is based on cursor.\n  // PositionedTooltipTrigger can be used for controlled isOpen state\n  extends Omit<AriaTooltipTriggerProps, \"isOpen\" | \"defaultOpen\" | \"trigger\"> {\n  /**\n   * Tooltip content. The value should be an element of type {@link Tooltip}.\n   */\n  tooltip: ReactElement;\n  /**\n   * Placement of the tooltip with respect to the cursor\n   * @default \"bottom left\"\n   */\n  placement?: AriaPositionProps[\"placement\"];\n  /**\n   * The additional offset applied along the main axis between the element and its\n   * anchor element.\n   * @default theme.value<number>(\"HelpTooltip.mouseCursorOffset\") ?? 20\n   */\n  offset?: number;\n  /**\n   * Either a focusable component, or a render function which accepts trigger props and passes it to some component.\n   */\n  children:\n    | React.ReactNode\n    | ((\n        props: HTMLAttributes<HTMLElement> & { ref: RefObject<HTMLElement> }\n      ) => React.ReactNode);\n}\n\n/**\n * Sets {@param tooltip} for its {@param children}.\n * Showing tooltip on focus and controlled open state are not supported at the moment, based on how tooltip works in the\n * reference impl, and since tooltip is positioned based on cursor position. Positioning the tooltip based on cursor\n * position requires tooltip to be opened on hover. That's why neither controlling opened state nor showing the tooltip\n * on focus are supported here. {@link PositionedTooltipTrigger} allows for positioning the tooltip with respect to the\n * trigger element, and offers more options.\n */\nexport const TooltipTrigger = ({\n  tooltip,\n  children,\n  /**\n   * ide.tooltip.initialReshowDelay registry key. [Docs](https://jetbrains.github.io/ui/controls/tooltip/#19) says\n   * it's 300 by default, but it's 500 in the code currently.\n   */\n  delay = 500,\n  offset,\n  placement = \"bottom left\",\n  ...props\n}: TooltipTriggerProps): JSX.Element => {\n  const triggerRef = useRef<HTMLElement>(null);\n  const theme = useTheme();\n  const state = useTooltipTriggerState({\n    ...props,\n    delay,\n  });\n\n  const overlayRef = useRef<HTMLDivElement>(null);\n\n  const positionAria = useMouseEventOverlayPosition({\n    overlayRef,\n    isOpen: state.isOpen,\n    placement,\n    shouldFlip: true,\n    offset:\n      offset ?? theme.value<number>(\"HelpTooltip.mouseCursorOffset\") ?? 20,\n  });\n\n  // FIXME: Find the explanation for why it happens, and fix it properly, if it's a legit issue.\n  useEffect(() => {\n    if (state.isOpen) {\n      requestAnimationFrame(() => {\n        positionAria.updatePosition();\n      });\n    }\n  }, [state.isOpen]);\n\n  return (\n    <TooltipTriggerAndOverlay\n      tooltip={tooltip}\n      positionAria={positionAria}\n      trigger={children}\n      state={state}\n      overlayRef={overlayRef}\n      triggerRef={triggerRef}\n      /**\n       * If we want to support showing tooltip on focus, or if we want to allow controlled open state, we should let it\n       * be positioned by the trigger element in that case, rather than mouse position.\n       * One solution would be to use useOverlayPosition as well, and conditionally use the right `overlayProps`, based on\n       * whether the position determined by mouse is within `triggerRef.current?.getBoundingClientRect()`. Another way\n       * (maybe better) would be to have `useMouseEventOverlayPosition` accept `bounds` or `containerBounds`, which if\n       * passed, makes sure the position is kept within that boundary. Outside positions would be mapped to the closest\n       * point on the border of the boundary.\n       */\n      showOnFocus={false}\n      isDisabled={props.isDisabled}\n    />\n  );\n};\n","import React, {\n  HTMLAttributes,\n  ReactElement,\n  RefObject,\n  useState,\n} from \"react\";\nimport { useTooltipTrigger as useAriaTooltipTrigger } from \"@react-aria/tooltip\";\nimport { TooltipTriggerState } from \"@react-stately/tooltip\";\nimport { FocusableProvider } from \"@react-aria/focus\";\nimport { Overlay, PositionAria } from \"@react-aria/overlays\";\nimport { mergeProps, useLayoutEffect } from \"@react-aria/utils\";\n\nimport { TooltipContext } from \"./TooltipContext\";\n\ninterface TooltipTriggerBaseProps<T extends HTMLElement = HTMLElement> {\n  /**\n   * Tooltip content. The value should be an element of type {@link Tooltip}.\n   */\n  tooltip: ReactElement;\n  /**\n   * Either a focusable component, or a render function which accepts trigger props and passes it to some component.\n   */\n  trigger:\n    | React.ReactNode\n    | ((\n        props: HTMLAttributes<HTMLElement> & { ref: RefObject<T> }\n      ) => React.ReactNode);\n\n  state: TooltipTriggerState;\n\n  showOnFocus?: boolean;\n  positionAria: PositionAria;\n  overlayRef: RefObject<HTMLDivElement>;\n  triggerRef: RefObject<T>;\n  isDisabled?: boolean;\n}\n\n/**\n * Sets {@param tooltip} for its {@param children}. It doesn't handle tooltip positioning, and so shouldn't be used\n * directly. {@param tooltipOverlayProps} should be used to apply the intended positioning.\n *\n * TODO: Implement timeout-based auto-hide (https://jetbrains.github.io/ui/controls/tooltip/#19)\n * TODO: shadow\n */\nexport const TooltipTriggerAndOverlay = <T extends HTMLElement>({\n  tooltip,\n  trigger,\n  state,\n  overlayRef,\n  triggerRef,\n  showOnFocus,\n  positionAria,\n  ...props\n}: TooltipTriggerBaseProps<T>): JSX.Element => {\n  const [isInteractive, setInteractive] = useState(false);\n  const { triggerProps, tooltipProps } = useTooltipTrigger(\n    props,\n    // In Intellij Platform. The tooltip hides right away. We follow the same, unless the tooltip is interactive.\n    // Maybe something to rethink if it's worth following the reference impl for.\n    { ...state, close: isInteractive ? state.close : () => state.close(true) },\n    triggerRef\n  );\n\n  if (!showOnFocus) {\n    delete triggerProps.onFocus;\n  }\n\n  useLayoutEffect(() => {\n    setInteractive(\n      overlayRef.current?.querySelector(\n        'a, button, [role=\"button\"], [role=link]'\n      ) !== null\n    );\n  });\n  return (\n    <>\n      {normalizeChildren(trigger, { ...triggerProps, ref: triggerRef })}\n      {state.isOpen && !props.isDisabled && (\n        <Overlay>\n          <TooltipContext.Provider\n            value={{\n              state,\n              isInteractive,\n              placement: positionAria.placement,\n              pointerPositionStyle: positionAria.arrowProps.style,\n            }}\n          >\n            <div\n              {...mergeProps(\n                positionAria.overlayProps,\n                // Is it ok to apply tooltip props on this wrapper?\n                tooltipProps\n              )}\n              ref={overlayRef}\n            >\n              {tooltip}\n            </div>\n          </TooltipContext.Provider>\n        </Overlay>\n      )}\n    </>\n  );\n};\n\nfunction normalizeChildren<T extends HTMLElement = HTMLElement>(\n  children: TooltipTriggerBaseProps<T>[\"trigger\"],\n  triggerProps: HTMLAttributes<HTMLElement> & { ref: RefObject<T> }\n) {\n  if (typeof children === \"function\") {\n    return children(triggerProps);\n  }\n  if (React.isValidElement(children) && typeof children.type === \"string\") {\n    return React.cloneElement(children, triggerProps);\n  }\n  return <FocusableProvider {...triggerProps}>{children}</FocusableProvider>;\n}\n\n/**\n * A wrapper around react-aria's useTooltipTrigger, adjusting it for Intellij Platform.\n */\nconst useTooltipTrigger: typeof useAriaTooltipTrigger = (props, state, ref) => {\n  const { triggerProps, tooltipProps } = useAriaTooltipTrigger(\n    props,\n    state,\n    ref\n  );\n  // onPointerDown returned from the underlying usePress stops propagation which messes with some usages of tooltip\n  // like in tab or tool window stripe button. We replace onPointerDown handler with a similar handler that closes\n  // the tooltip.\n  triggerProps.onPointerDown = () => {\n    if (!(ref.current instanceof HTMLInputElement)) {\n      state.close(true);\n    }\n  };\n  /**\n   * onMouseDown is preventDefault-ed which interferes with functionality of the tooltip trigger, in use cases like\n   * tool window stripe button. Note that since pointerDown is handled for calling the tooltip trigger's onPressStart\n   * handler (which hides the tooltip), there is no issue in excluding onMouseDown, because it's only used to preventDefault\n   * the event, because of some edge cases focus handling which is not our concern.\n   */\n  delete triggerProps.onMouseDown;\n\n  return {\n    triggerProps,\n    tooltipProps,\n  };\n};\n","import { usePrevious } from \"@intellij-platform/core/utils/usePrevious\";\nimport { CacheInvalidationContext } from \"./Item\";\n\nexport interface CollectionCacheInvalidationProps {\n  /**\n   * Defines cache invalidation policy for items. By default, the render result is cached based on the item objects.\n   * This is equivalent of passing false or not passing anything for `cacheInvalidation`. If `true` is passed, it will\n   * always invalidate the render result, causing the collection to be recreated on each re-render. It can\n   * considerably affect performance in large collections. in addition to boolean value, an object with the list of\n   * invalidators can also be passed. renderer function is called each time any of the invalidators are changed.\n   * Think of it as [dependency array in react hooks](https://reactjs.org/docs/hooks-reference.html#usememo). Except\n   * that the length of the array can also safely change.\n   */\n  cacheInvalidation?: boolean | { invalidators: ReadonlyArray<unknown> };\n}\n\n/**\n * Allows cache invalidation options based on input props, for components that use collection\n */\nexport const useCollectionCacheInvalidation = ({\n  cacheInvalidation,\n}: CollectionCacheInvalidationProps): CacheInvalidationContext => {\n  const invalidators =\n    typeof cacheInvalidation === \"object\" ? cacheInvalidation.invalidators : [];\n  const lastInvalidators = usePrevious(invalidators);\n\n  const invalidated =\n    typeof cacheInvalidation === \"object\"\n      ? cacheInvalidation.invalidators.length !== lastInvalidators.length ||\n        cacheInvalidation.invalidators.some(\n          (anInvalidator, index) => anInvalidator !== lastInvalidators[index]\n        )\n      : cacheInvalidation;\n\n  return {\n    invalidated,\n  };\n};\n","//@ts-nocheck\n/**\n * Not exported from @react-stately/tree, but needed in the custom implementation of useTreeState\n */\n\nimport { Key } from \"react\";\nimport { Collection, Node } from \"@react-types/shared\";\n\nexport class TreeCollection<T> implements Collection<Node<T>> {\n  private keyMap: Map<Key, Node<T>> = new Map();\n  private iterable: Iterable<Node<T>>;\n  private firstKey: Key;\n  private lastKey: Key;\n\n  constructor(\n    nodes: Iterable<Node<T>>,\n    { expandedKeys }: { expandedKeys?: Set<Key> } = {}\n  ) {\n    this.iterable = nodes;\n    expandedKeys = expandedKeys || new Set();\n\n    let visit = (node: Node<T>) => {\n      this.keyMap.set(node.key, node);\n\n      if (\n        node.childNodes &&\n        (node.type === \"section\" || expandedKeys.has(node.key))\n      ) {\n        for (let child of node.childNodes) {\n          visit(child);\n        }\n      }\n    };\n\n    for (let node of nodes) {\n      visit(node);\n    }\n\n    let last: Node<T>;\n    let index = 0;\n    for (let [key, node] of this.keyMap) {\n      if (last) {\n        last.nextKey = key;\n        node.prevKey = last.key;\n      } else {\n        this.firstKey = key;\n        node.prevKey = undefined;\n      }\n\n      if (node.type === \"item\") {\n        node.index = index++;\n      }\n\n      last = node;\n\n      // Set nextKey as undefined since this might be the last node\n      // If it isn't the last node, last.nextKey will properly set at start of new loop\n      last.nextKey = undefined;\n    }\n\n    this.lastKey = last?.key;\n  }\n\n  *[Symbol.iterator]() {\n    yield* this.iterable;\n  }\n\n  get size() {\n    return this.keyMap.size;\n  }\n\n  getKeys() {\n    return this.keyMap.keys();\n  }\n\n  getKeyBefore(key: Key) {\n    let node = this.keyMap.get(key);\n    return node?.prevKey ?? null;\n  }\n\n  getKeyAfter(key: Key) {\n    let node = this.keyMap.get(key);\n    return node?.nextKey ?? null;\n  }\n\n  getFirstKey() {\n    return this.firstKey;\n  }\n\n  getLastKey() {\n    return this.lastKey;\n  }\n\n  getItem(key: Key) {\n    return this.keyMap.get(key) ?? null;\n  }\n\n  at(idx: number) {\n    const keys = [...this.getKeys()];\n    return this.getItem(keys[idx]);\n  }\n}\n","import { Node } from \"@react-types/shared\";\nimport { Key } from \"react\";\n\n/**\n * given a node, returns keys of all consecutive single children\n */\nexport function getSingleChildrenKeys<T>(\n  node: Node<T> | null | undefined\n): Key[] {\n  return getSingleChildrenKeysRecursive(node, []);\n}\n\nfunction getSingleChildrenKeysRecursive<T>(\n  node: Node<T> | null | undefined,\n  previousKeys: Key[]\n): Key[] {\n  if (!node) {\n    return [];\n  }\n  const childNodesIterator: Iterator<\n    Node<T>,\n    Node<T> | undefined\n  > = node.childNodes[Symbol.iterator]();\n  const { value: firstChild, done } = childNodesIterator.next();\n  const noMoreChildren = done || childNodesIterator.next().value == null;\n  if (firstChild != null && noMoreChildren && isExpandable(firstChild)) {\n    return getSingleChildrenKeysRecursive(\n      firstChild,\n      previousKeys.concat((firstChild as Node<T>).key)\n    );\n  }\n  return previousKeys;\n}\n\nconst isExpandable = <T>(node: Node<T>) =>\n  node.hasChildNodes || !isEmptyIterable(node.childNodes);\n\nfunction isEmptyIterable(iterable: Iterable<unknown> | undefined | null) {\n  for (const _ of iterable || []) {\n    // eslint-disable-line no-unused-vars, no-unreachable-loop\n    return false;\n  }\n  return true;\n}\n","import {\n  MultipleSelectionState,\n  SelectionManager,\n  SelectionManagerOptions,\n} from \"@react-stately/selection\";\nimport { Collection, Node } from \"@react-types/shared\";\nimport React, { Key } from \"react\";\n\nexport class TreeSelectionManager extends SelectionManager {\n  private readonly collection: Collection<Node<unknown>>;\n\n  constructor(\n    collection: Collection<Node<unknown>>,\n    state: MultipleSelectionState,\n    options?: SelectionManagerOptions\n  ) {\n    super(collection, state, options);\n    this.collection = collection;\n  }\n\n  expandSelection() {\n    if (this.focusedKey) {\n      const node = this.collection.getItem(this.focusedKey);\n      if (node) {\n        const { expandKeys } = this.getExpandAndShrinkKeys(node);\n        if (expandKeys.length > 0) {\n          this.setSelectedKeys([...this.selectedKeys, ...expandKeys]);\n        }\n      }\n    }\n  }\n  shrinkSelection() {\n    if (this.focusedKey) {\n      const node = this.collection.getItem(this.focusedKey);\n      if (node) {\n        const { shrinkKeys } = this.getExpandAndShrinkKeys(node);\n        if (shrinkKeys.length > 0) {\n          this.setSelectedKeys(\n            [...this.selectedKeys].filter((key) => !shrinkKeys.includes(key))\n          );\n        }\n      }\n    }\n  }\n\n  private getExpandAndShrinkKeys(node: Node<unknown>) {\n    return this.recursivelyGetExpandAndShrinkKeys(\n      node,\n      [...this.collection.getKeys()],\n      null\n    );\n  }\n  /**\n   * Starting from a node, traverses the tree up, until it reaches the root of the fully selected subtree that includes\n   * the starting node. The root itself may or may not be selected. Returns:\n   * - keys to be added to selection, when expanding selection\n   * - keys to be removed from selection, when shrinking selection\n   */\n  private recursivelyGetExpandAndShrinkKeys(\n    node: Node<unknown>,\n    keys: Array<Key>,\n    previousChild: Key | null\n  ): { expandKeys: Key[]; shrinkKeys: Key[] } {\n    const parent =\n      node && node.parentKey ? this.collection.getItem(node.parentKey) : null;\n    const newKeys = keys.filter((key) => key !== previousChild);\n    const parentDescendants = parent\n      ? getAllDescendants(parent, newKeys).map(({ key }) => key)\n      : this.getAllRoots().flatMap((key) => {\n          const item = this.collection.getItem(key);\n          return key !== node.key && item\n            ? getAllDescendants(item, newKeys)\n                .map(({ key }) => key)\n                .concat(key)\n            : [];\n        });\n    if (parent && parentDescendants.every((key) => this.isSelected(key))) {\n      return this.recursivelyGetExpandAndShrinkKeys(parent, keys, node.key);\n    }\n    const descendants = getAllDescendants(\n      node,\n      keys.filter((key) => key !== previousChild)\n    ).map(({ key }) => key);\n\n    return {\n      expandKeys: descendants.some((key) => !this.isSelected(key))\n        ? descendants\n        : !this.isSelected(node.key)\n        ? [node.key]\n        : parentDescendants,\n      shrinkKeys:\n        parentDescendants.length > 0 &&\n        parentDescendants.every((key) => this.isSelected(key))\n          ? parentDescendants\n          : this.isSelected(node.key) && previousChild\n          ? [node.key]\n          : descendants.filter((key) => this.isSelected(key)),\n    };\n  }\n\n  private getAllRoots() {\n    return [...this.collection.getKeys()].filter(\n      (key) => this.collection.getItem(key)?.parentKey == null\n    );\n  }\n}\n\nfunction getAllDescendants<T>(\n  node: Node<T>,\n  stopKeys: Array<React.Key>\n): Node<T>[] {\n  const childNodes = (node.hasChildNodes ? [...node.childNodes] : []).filter(\n    (node) => stopKeys.includes(node.key)\n  );\n  return node.hasChildNodes\n    ? childNodes.concat(\n        childNodes.map((node) => getAllDescendants(node, stopKeys)).flat()\n      )\n    : [];\n}\n","import {\n  Collection,\n  CollectionStateBase,\n  Expandable,\n  MultipleSelection,\n  Node,\n} from \"@react-types/shared\";\nimport { TreeProps as _TreeProps, TreeState } from \"@react-stately/tree\";\nimport {\n  TreeRefValue,\n  useTreeRef,\n} from \"@intellij-platform/core/Tree/useTreeRef\";\nimport { ForwardedRef, Key, useCallback, useEffect, useMemo } from \"react\";\nimport { useMultipleSelectionState } from \"@react-stately/selection\";\nimport { useCollection } from \"@react-stately/collections\";\nimport { useControlledState } from \"@react-stately/utils\";\nimport {\n  CollectionCacheInvalidationProps,\n  useCollectionCacheInvalidation,\n} from \"@intellij-platform/core/Collections/useCollectionCacheInvalidation\";\nimport { TreeCollection as _TreeCollection } from \"./__copied__TreeCollection\";\nimport { getSingleChildrenKeys } from \"./getSingleChildrenKeys\";\nimport { TreeSelectionManager } from \"@intellij-platform/core/Tree/TreeSelectionManager\";\nimport { notNull } from \"@intellij-platform/core/utils/array-utils\";\n\nexport class TreeCollection<T> extends _TreeCollection<T> {\n  public readonly rootKeys: Key[];\n  constructor(\n    nodes: Iterable<Node<T>>,\n    { expandedKeys }: { expandedKeys: Set<Key> }\n  ) {\n    super(nodes, { expandedKeys });\n    this.rootKeys = Array.from(nodes).map(({ key }) => key);\n  }\n\n  getAllExpandableKeys(): Set<Key> {\n    const rootNodes = this.rootKeys\n      .map((key) => this.getItem(key))\n      .filter(notNull);\n    return this.recursivelyAddExpandableKeys(rootNodes, new Set<Key>());\n  }\n\n  private recursivelyAddExpandableKeys(\n    nodes: Iterable<Node<T>>,\n    result: Set<Key>\n  ) {\n    for (const node of nodes) {\n      if (node?.hasChildNodes) {\n        result.add(node.key);\n        this.recursivelyAddExpandableKeys(node.childNodes, result);\n      }\n    }\n    return result;\n  }\n}\nexport interface TreeProps<T>\n  extends CollectionStateBase<T, TreeCollection<T>>,\n    Expandable,\n    MultipleSelection,\n    CollectionCacheInvalidationProps {\n  childExpansionBehaviour?: \"multi\" | \"single\";\n}\n/**\n * Provides state management for tree-like components. Handles building a collection\n * of items from props, item expanded state, and manages multiple selection state.\n *\n * Similar to (and initially copied from) useTreeState from @react-stately/tree, but with the following changes:\n * - Supports exposing some imperative API via ref.\n *   Could be done via a wrapper too.\n * - Different onToggle implementation with two adjustments to match Intellij Platform:\n *   - Collapsing a key collapses all descendants as well.\n *   - Expanding a single-child node will recursively expand all single-child descendants.\n *   Couldn't be done with a wrapper in a clean and optimal way. Access to setExpandedKey is not provided. We would need\n *   to either maintain a new state for expanded keys and ignore the one returned from the wrapped hook, or\n *   inefficiently call the returned `toggleKey` function many times.\n * - Supports collection invalidation via CollectionCacheInvalidationProps\n *   Perhaps not the most important addition, but not possible to be done via a wrapper.\n * - Uses TreeSelectionManager instead of the default SelectionManager, which implements expand/shrink selection.\n *   Could be done in a wrapper, with a little hack. Would need to replace selection manager.\n * - returned `collection` is of type `TreeCollection` (which is an improved version of react-stately `TreeCollection`),\n *   instead of the more generic `Collection`.\n */\nexport function useTreeState<T extends object>(\n  { childExpansionBehaviour = \"multi\", ...props }: TreeProps<T>,\n  treeRef?: ForwardedRef<TreeRefValue>\n): TreeState<T> {\n  let [expandedKeys, setExpandedKeys] = useControlledState(\n    props.expandedKeys ? new Set(props.expandedKeys) : undefined!,\n    props.defaultExpandedKeys ? new Set(props.defaultExpandedKeys) : new Set(),\n    props.onExpandedChange!\n  );\n\n  let selectionState = useMultipleSelectionState({\n    ...props,\n    selectionBehavior: \"replace\",\n  });\n  let disabledKeys = useMemo(\n    () => (props.disabledKeys ? new Set(props.disabledKeys) : new Set<Key>()),\n    [props.disabledKeys]\n  );\n\n  const context = useCollectionCacheInvalidation(props);\n\n  let tree = useCollection<T, TreeCollection<T>>(\n    props,\n    useCallback(\n      (nodes) => new TreeCollection(nodes, { expandedKeys }),\n      [expandedKeys]\n    ),\n    context\n  );\n\n  const selectionManager = new TreeSelectionManager(\n    tree as Collection<Node<T>>,\n    selectionState\n  );\n\n  useTreeRef({ selectionManager, setExpandedKeys, tree }, treeRef);\n\n  // Reset focused key if that item is deleted from the collection.\n  useEffect(() => {\n    if (\n      selectionState.focusedKey != null &&\n      !tree.getItem(selectionState.focusedKey)\n    ) {\n      // @ts-expect-error imprecise typing in @react-stately/selection\n      selectionState.setFocusedKey(null);\n    }\n  }, [tree, selectionState.focusedKey]);\n\n  const toggleKey = (key: Key) => {\n    let newExpandedKeys = toggleTreeNode(\n      tree as Collection<Node<T>>,\n      expandedKeys,\n      key\n    );\n    if (childExpansionBehaviour === \"single\") {\n      const expandedSiblings = getSiblings(tree, key).filter(\n        (aKey) => aKey !== key && expandedKeys.has(aKey)\n      );\n      newExpandedKeys = expandedSiblings.reduce((expandedKeys, expandedKey) => {\n        return toggleTreeNode(\n          tree as Collection<Node<T>>,\n          expandedKeys,\n          expandedKey\n        );\n      }, newExpandedKeys);\n    }\n    setExpandedKeys(newExpandedKeys);\n  };\n\n  return {\n    collection: tree as Collection<Node<T>>,\n    expandedKeys,\n    disabledKeys,\n    toggleKey,\n    selectionManager,\n    setExpandedKeys,\n  };\n}\n\nfunction getChildItems<T>(node: Node<T>): Node<T>[] {\n  const childNodes = [...(node.childNodes || [])];\n  const childItems = childNodes.filter(({ type }) => type === \"item\");\n  const sectionItems = childNodes.filter(({ type }) => type === \"section\");\n\n  return childItems.concat(sectionItems.flatMap(getChildItems));\n}\n\nfunction getRootItemKeys(tree: TreeCollection<unknown>) {\n  return tree.rootKeys\n    .map((key) => tree.getItem(key))\n    .filter(notNull)\n    .flatMap(getChildItems)\n    .map(({ key }) => key);\n}\n/**\n * Returns the siblings of an item in tree, ignoring sections.\n * Disclaimer: The code is done quick and dirty and in a rush. Unpleasant code, good candidate for refactoring :D\n */\nfunction getSiblings(tree: TreeCollection<unknown>, key: Key): Key[] {\n  const parentKey = tree.getItem(key)?.parentKey;\n  if (!parentKey) {\n    return [...tree.rootKeys].concat(getRootItemKeys(tree));\n  }\n  let parent = parentKey ? tree.getItem(parentKey) : null;\n  if (parent?.type === \"item\") {\n    return getChildItems(parent).map(({ key }) => key);\n  }\n  const siblings: Key[] = [];\n  while (parent) {\n    siblings.push(...getChildItems(parent).map(({ key }) => key));\n    if (parent.type === \"section\") {\n      if (parent.parentKey) {\n        parent = tree.getItem(parent.parentKey);\n      } else {\n        siblings.push(...getRootItemKeys(tree));\n        parent = null;\n      }\n    } else {\n      parent = null;\n    }\n  }\n  return Array.from(new Set(siblings));\n}\nfunction toggleTreeNode(\n  tree: Collection<Node<unknown>>,\n  expandedKeys: Set<Key>,\n  key: Key\n): Set<Key> {\n  // toggling a non-expandable node should be no-op\n  if (!expandedKeys.has(key) && !tree.getItem(key)?.hasChildNodes) {\n    return expandedKeys;\n  }\n  const newKeys = toggleKey(expandedKeys, key);\n  // In Intellij impl, when a node is collapsed, all descendants are also collapsed. In other words, keys that are\n  // not a part of the list of visible nodes, will be excluded from the expanded keys, with the toggle action.\n  for (const aKey of newKeys) {\n    if (tree.getItem(aKey) == null) {\n      newKeys.delete(aKey);\n    }\n  }\n\n  // If we are toggling it open, expand all expandable single-child items\n  if (newKeys.has(key)) {\n    for (const aKey of getSingleChildrenKeys(tree.getItem(key))) {\n      newKeys.add(aKey);\n    }\n  }\n  return newKeys;\n}\n\nfunction toggleKey(set: Set<Key>, key: Key): Set<Key> {\n  let res = new Set(set);\n  if (res.has(key)) {\n    res.delete(key);\n  } else {\n    res.add(key);\n  }\n\n  return res;\n}\n","import { ForwardedRef, Key, useImperativeHandle } from \"react\";\nimport { useLatest } from \"@intellij-platform/core/utils/useLatest\";\nimport { TreeSelectionManager } from \"./TreeSelectionManager\";\nimport { TreeCollection } from \"./useTreeState\";\n\nexport interface TreeRefValue {\n  focus(key: Key): void;\n  replaceSelection(key: Key): void;\n\n  /**\n   * Extends selection to all siblings of the currently focused node.\n   */\n  expandSelection(): void;\n  /**\n   * Shrinks selection towards currently focused node.\n   */\n  shrinkSelection(): void;\n\n  expandAll(): void;\n  collapseAll(): void;\n}\n\n/**\n * Sets up a tree ref for imperatively working with tree from outside. For imperatively focusing, expanding to\n * specific key, etc.\n */\nexport function useTreeRef<T extends {}>(\n  props: {\n    tree: TreeCollection<T>;\n    selectionManager: TreeSelectionManager;\n    setExpandedKeys: (keys: Set<Key>) => void;\n  },\n  forwardedRef?: ForwardedRef<TreeRefValue>\n) {\n  const latestState = useLatest(props);\n\n  useImperativeHandle(\n    forwardedRef,\n    () => {\n      return {\n        replaceSelection: (key: Key) => {\n          latestState.current.selectionManager.replaceSelection(key);\n        },\n        focus: (key: Key) => {\n          const selectionManager = latestState.current.selectionManager;\n          selectionManager.setFocused(true);\n          /**\n           * NOTE: we set focus key to null and set it to key again, to make sure scroll into view works even when\n           * the key is currently focused but not in view. It wouldn't be needed if there was an imperative handle\n           * for scrolling an item into view, but it's only implemented in way that is reactive to changes to the\n           * focused key. {@see useCollectionAutoScroll}\n           */\n          selectionManager.setFocusedKey(null);\n          setTimeout(() => {\n            selectionManager.setFocusedKey(key);\n          });\n        },\n        expandSelection() {\n          latestState.current.selectionManager.expandSelection();\n        },\n        shrinkSelection() {\n          latestState.current.selectionManager.shrinkSelection();\n        },\n        expandAll() {\n          latestState.current.setExpandedKeys(\n            latestState.current.tree.getAllExpandableKeys()\n          );\n        },\n        collapseAll() {\n          const { tree, setExpandedKeys, selectionManager } =\n            latestState.current;\n          const focusedKey = selectionManager.focusedKey;\n          setExpandedKeys(new Set());\n\n          // Find the root node that is a grandparent of focused node, and focus/select it.\n          // NOTE: this behaviour of updating selection when nodes are collapsed is something to be fixed in general,\n          // and then this custom logic here would be not necessary.\n          if (focusedKey && !tree.rootKeys.includes(focusedKey)) {\n            let item = tree.getItem(focusedKey);\n            while (item?.parentKey != null) {\n              item = tree.getItem(item.parentKey);\n            }\n            if (item) {\n              selectionManager.setFocusedKey(item.key);\n              if (selectionManager.isSelected(focusedKey)) {\n                selectionManager.select(item.key);\n              }\n            }\n          }\n        },\n      };\n    },\n    []\n  );\n}\n","/**\n * Drop shadow of windows and other overlays.\n * The current value is not accurate and needs to be revisited. It should also be os-dependant.\n * FIXME: On windows, there is only a border-like shadow. No drop shadow\n * FIXME: On Mac, there is a border-like shadow and a drop shadow. the border-like shadow is missing in the current value\n */\nexport const WINDOW_SHADOW = \"box-shadow: 0 5px 15px rgb(0 0 0 / 30%)\";\n","import * as styledComponents from \"styled-components\";\nimport { ThemedStyledComponentsModule } from \"styled-components\";\nimport { Theme } from \"./Theme\";\nimport { KnownThemePropertyPath } from \"./Theme/types\";\n\ntype JuiStyledComponentsModule = ThemedStyledComponentsModule<\n  Theme<KnownThemePropertyPath>\n>;\n\nexport const styled =\n  styledComponents.default as JuiStyledComponentsModule[\"default\"];\nexport const useTheme =\n  styledComponents.useTheme as JuiStyledComponentsModule[\"useTheme\"];\nexport const css = styledComponents.css as JuiStyledComponentsModule[\"css\"];\nexport const ThemeConsumer =\n  styledComponents.ThemeConsumer as JuiStyledComponentsModule[\"ThemeConsumer\"];\n","import {\n  FocusManager,\n  FocusScope as WrappedFocusScope,\n  FocusScopeProps,\n  useFocusManager,\n} from \"@react-aria/focus\";\nimport React, { ForwardedRef, useImperativeHandle, useRef } from \"react\";\n\nexport type FocusScopeRef = { focus: (forceFocusFirst?: boolean) => void };\n/**\n * A version of FocusScope which also allows for imperatively moving focus to the scope.\n * and has tiny patches/improvements\n * It's useful for\n */\nexport const FocusScope = React.forwardRef(function BetterFocusScope(\n  { children, ...otherProps }: FocusScopeProps,\n  ref: ForwardedRef<FocusScopeRef>\n) {\n  const directChildRef = useRef<HTMLSpanElement>(null);\n  const focusManagerRef = useRef<FocusManager>(null);\n  useImperativeHandle(\n    ref,\n    () => ({\n      focus: (forceFocusFirst?: boolean) => {\n        const focusManager = focusManagerRef.current;\n        const containerElement = directChildRef.current?.parentElement;\n        if (!focusManager) {\n          throw new Error(\"focus manager not found!\");\n        }\n        if (!containerElement) {\n          throw new Error(\"container element not found\");\n        }\n        if (forceFocusFirst) {\n          return focusManager.focusFirst();\n        }\n        const alreadyHasFocused =\n          document.activeElement &&\n          document.activeElement !== containerElement &&\n          containerElement.contains(document.activeElement);\n        if (!alreadyHasFocused) {\n          focusManager.focusNext({ tabbable: true });\n        }\n      },\n    }),\n    []\n  );\n\n  return (\n    <WrappedFocusScope {...otherProps}>\n      <GetFocusManager ref={focusManagerRef} />\n      <span data-focus-root-direct-child=\"\" hidden ref={directChildRef} />\n      {children}\n    </WrappedFocusScope>\n  );\n});\nconst GetFocusManager = React.forwardRef(function FocusScopeHandle(\n  props: {},\n  ref: ForwardedRef<FocusManager>\n) {\n  const focusManager = useFocusManager()!;\n  useImperativeHandle(ref, () => focusManager, [focusManager]);\n  return null;\n});\n","/**\n * Properly typed filter function for filtering out null/undefined items in array.\n */\nexport const notNull = <T>(\n  item: T | undefined | null\n): item is NonNullable<T> => item != null;\n","import { sortBy, uniqBy } from \"ramda\";\nimport { notNull } from \"@intellij-platform/core/utils/array-utils\";\n\nexport interface OverflowObserverRecord {\n  target: Element;\n  overflowedElements: Element[];\n  previouslyOverflowedElements: Element[];\n}\n\nexport type OverflowObserverCallback = (\n  change: OverflowObserverRecord,\n  observer: OverflowObserver\n) => void;\n\n/**\n * Allows observing the list of overflowing children of a given target element.\n * An `IntersectionObserver` is created for each target to observe the intersection between the target and each child\n * element. The child elements are observed/unobserved by the intersection observer as they are added/removed to the\n * DOM, which is observed using a `MutationObserver`.\n * `IntersectionObserver` options such as `rootMargin` are supported, to fine tune what should be considered as\n * overflowed.\n *\n * TODO: add a takeRecords method to allow processing pending mutations before disconnect\n * TODO: maybe add direction option?\n *\n */\nexport class OverflowObserver {\n  private mutationObserver: MutationObserver;\n  private data: Map<\n    Element,\n    {\n      intersectionObserver: IntersectionObserver;\n      currentOverflowElements: Element[];\n    }\n  > = new Map();\n\n  constructor(private callback: OverflowObserverCallback) {\n    this.mutationObserver = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        const target = mutation.target;\n        if (!(target instanceof Element)) {\n          return;\n        }\n        mutation.removedNodes.forEach((node) => {\n          if (node instanceof Element) {\n            this.data.get(target)?.intersectionObserver.unobserve(node);\n          }\n        });\n        mutation.addedNodes.forEach((node) => {\n          if (node instanceof Element) {\n            this.data.get(target)?.intersectionObserver.observe(node);\n          }\n        });\n      });\n    });\n  }\n\n  observe(target: Element, options: Omit<IntersectionObserverInit, \"root\">) {\n    this.data.get(target)?.intersectionObserver.disconnect();\n\n    const intersectionObserver = new IntersectionObserver(\n      (entries) => {\n        const data = this.data.get(target);\n        const sortedEntries = sortBy((entry) => -entry.time, entries);\n        const validEntries = uniqBy((entry) => entry.target, sortedEntries);\n\n        const newHiddenElements = validEntries\n          .map((entry) =>\n            !entry.isIntersecting && entry.target instanceof Element\n              ? entry.target\n              : undefined\n          )\n          .filter(notNull);\n        const newVisibleElements = validEntries\n          .map((entry) =>\n            entry.isIntersecting && entry.target instanceof Element\n              ? entry.target\n              : null\n          )\n          .filter(notNull);\n\n        //  Also cover this in Toolbar with a test case\n        const previouslyOverflowedElements =\n          data?.currentOverflowElements || [];\n        const overflowedElements = previouslyOverflowedElements\n          .filter((element) => !newVisibleElements.includes(element))\n          .concat(newHiddenElements)\n          .filter((element) => {\n            // In some cases some elements may be hidden by some styles (e.g. the first/last separator in a toolbar).\n            // It doesn't make sense to report them as overflowed.\n            const isHidden =\n              element instanceof HTMLElement &&\n              element.offsetWidth === 0 &&\n              element.offsetHeight === 0;\n            return !isHidden;\n          });\n        this.callback(\n          {\n            previouslyOverflowedElements,\n            overflowedElements: overflowedElements,\n            target,\n          },\n          this\n        );\n        if (data) {\n          data.currentOverflowElements = overflowedElements;\n        }\n      },\n      {\n        ...options,\n        root: target,\n      }\n    );\n    [...(target?.children || [])].forEach((childElement) => {\n      intersectionObserver.observe(childElement);\n    });\n    this.data.set(target, {\n      intersectionObserver,\n      currentOverflowElements: [],\n    });\n    this.mutationObserver.observe(target, {\n      childList: true,\n    });\n  }\n\n  unobserve(target: Element) {\n    this.data.get(target)?.intersectionObserver.disconnect();\n  }\n\n  disconnect() {\n    [...this.data.values()].forEach(({ intersectionObserver }) =>\n      intersectionObserver.disconnect()\n    );\n    this.data = new Map();\n    this.mutationObserver.disconnect();\n  }\n}\n","import { RefObject, useEffect, useState } from \"react\";\nimport { OverflowObserver } from \"@intellij-platform/core/utils/overflow-utils/OverflowObserver\";\n\n/**\n * Given a ref to a scrollable container, returns the child elements that are not completely visible and\n * are off view because of scroll.\n * @param scrollableContainerRef\n * @param threshold\n */\nexport function useOverflowObserver(\n  scrollableContainerRef: RefObject<HTMLElement>,\n  {\n    threshold = 0.9,\n    rootMargin = \"0px\",\n  }: Omit<IntersectionObserverInit, \"root\"> = {}\n) {\n  const [overflowedElements, setOverflowedElements] = useState<Element[]>([]);\n\n  useEffect(() => {\n    const overflowObserver = new OverflowObserver((change) => {\n      setOverflowedElements(change.overflowedElements);\n    });\n    overflowObserver.observe(scrollableContainerRef.current!, {\n      rootMargin,\n      threshold,\n    });\n    return () => {\n      overflowObserver.disconnect();\n    };\n  }, [\n    /**\n     * It's ok and needed to have the ref value as a dependency here. We don't know if ref is attached to different\n     * elements in each render, and it's ok that it's not a state, since we don't change it, and it's not supposed to\n     * change without a rerender\n     **/\n    scrollableContainerRef.current,\n  ]);\n\n  return {\n    overflowedElements,\n  };\n}\n","import React, { useContext } from \"react\";\n\nexport const useContextOrThrow = <ContextType extends unknown>(\n  Context: React.Context<ContextType | null>,\n  nullErrorMessage: string\n) => {\n  const context = useContext<ContextType | null>(Context);\n\n  if (context == null) {\n    throw new Error(nullErrorMessage);\n  }\n\n  return context;\n};\n","import { useLayoutEffect, useRef } from \"react\";\n\nexport function useLatest<T>(value: T) {\n  const ref = useRef(value);\n  useLayoutEffect(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n","import { useEffect, useRef } from \"react\";\n\nexport function usePrevious<T>(value: T): T {\n  const ref = useRef(value);\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n","import React, { useEffect, useMemo } from \"react\";\nimport BrowserOnly from \"@docusaurus/BrowserOnly\";\n\nimport darculaTheme from \"../../../jui/themes/darcula.theme.json\";\nimport highContrastTheme from \"../../../jui/themes/HighContrast.theme.json\";\nimport lightTheme from \"../../../jui/themes/intellijlaf.theme.json\";\nimport { Theme, ThemeProvider } from \"../../../jui/src\";\n\nexport type ExampleContextThemeName = \"light\" | \"darcula\" | \"highContrast\";\n\nexport const ExampleContext: React.FC<{\n  themeName?: ExampleContextThemeName;\n  children?: React.ReactNode;\n}> = ({ children, themeName = \"darcula\" }) => {\n  const themeJson = (\n    {\n      light: lightTheme,\n      highContrast: highContrastTheme,\n      darcula: darculaTheme,\n    } as const\n  )[themeName];\n\n  // IMPORTANT: passing a function that returns Theme is crucial in get it working. Otherwise, ThemeProvider will try\n  // to \"merge\" themes, and the end result is an POJO, with prototype link lost.\n  const theme = useMemo(() => new Theme(themeJson), [themeJson]);\n\n  useFixDocusaurusStyleBleeds();\n  return (\n    <BrowserOnly fallback={<>Loading...</>}>\n      {() => <ThemeProvider theme={theme}>{children}</ThemeProvider>}\n    </BrowserOnly>\n  );\n};\n\n/**\n * TODO: add a surrounding UI for examples, with tools for theme selection for example.\n */\nexport const Example: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => (\n  <ExampleContext>\n    <div\n      // @ts-expect-error: css prop is not working for some reason\n      css={`\n        background: ${({ theme }: { theme: Theme }) =>\n          theme.color(\"*.background\")};\n      `}\n    >\n      {children}\n    </div>\n  </ExampleContext>\n);\n\nexport const withExampleContext = <P extends {}>(\n  Component: React.ComponentType<P>\n) => {\n  function WithExampleContext(props: P) {\n    return (\n      <ExampleContext>\n        <Component {...props} />\n      </ExampleContext>\n    );\n  }\n\n  return WithExampleContext;\n};\n\nconst useFixDocusaurusStyleBleeds = () => {\n  useEffect(() => {\n    const FLAG_CLASSNAME = \"example-context-patch\";\n    if (!document.body.classList.contains(FLAG_CLASSNAME)) {\n      try {\n        undoUseKeyboardNavigation();\n        document.body.classList.add(FLAG_CLASSNAME);\n      } catch (e) {\n        console.error(\"Could not undo useKeyboardNavigation\");\n      }\n    }\n  }, []);\n};\n\n/**\n * Reverts the \"improvement\" [useKeyboardNavigation][1] does :|\n *\n * [1]: https://github.com/facebook/docusaurus/blob/f87a3ead4664b301901c12466cb2c82cd95d141b/packages/docusaurus-theme-common/src/hooks/useKeyboardNavigation.ts#L14\n */\nfunction undoUseKeyboardNavigation() {\n  document\n    .querySelectorAll<HTMLLinkElement>(\"link[rel=stylesheet]\")\n    .forEach((linkEl) => {\n      if (linkEl.sheet) {\n        for (let i = 0; i < linkEl.sheet.cssRules.length; i++) {\n          const rule = linkEl.sheet.cssRules.item(i);\n          if (\n            rule?.cssText?.startsWith(\"body:not(.navigation-with-keyboard)\")\n          ) {\n            linkEl.sheet.deleteRule(i); // We can change the rule to only disable it within the boundary of example\n          }\n        }\n      }\n    });\n}\n","import React from \"react\";\n\n/**\n * To make relation between things in jui and original reference impl in Intellij Platform\n */\nexport const RefToIntellijPlatform = ({\n  path,\n  name,\n}: {\n  path: string;\n  name?: string;\n}) => {\n  return (\n    // TODO: make it some nice box with an icon and a hint text which says something like \"Intellij Platform\" or\n    //  \"Reference\" or something better :D\n    <a\n      href={`https://github.com/JetBrains/intellij-community/blob/master/${path}`}\n      target=\"_blank\"\n    >\n      {name || path.split(\"/\").pop()}\n    </a>\n  );\n};\n","import { Meta, StoryObj } from \"@storybook/react\";\nimport { PlatformIcon } from \"../Icon\";\nimport { DebuggerTabContent } from \"./DebuggerTabs/DebuggerTabContent\";\nimport { EditorTabContent } from \"./EditorTabs/EditorTabContent\";\nimport { EditorTabs, EditorTabsProps } from \"./EditorTabs/EditorTabs\";\nimport { DebuggerTabs } from \"./DebuggerTabs/DebuggerTabs\";\nimport { Tabs, TabsProps } from \"./Tabs\";\nimport { TabContentLayout } from \"./TabContentLayout\";\nimport { ToolWindowTabs } from \"./ToolWindowTabs/ToolWindowTabs\";\nimport React from \"react\";\nimport { Item } from \"../Collections\";\n\ntype StoryProps<T extends TabsProps<unknown> = TabsProps<unknown>> = Pick<\n  T,\n  \"active\" | \"defaultSelectedKey\"\n>;\n\nexport default {\n  title: \"Components/Tabs/Tab Themes\",\n  component: Tabs,\n  parameters: {\n    controls: { exclude: \"TabComponent\" },\n  },\n} as Meta;\n\nexport const EditorTheme: StoryObj<StoryProps> = {\n  render: (props) => {\n    return (\n      <EditorTabs {...props} items={editorTabs} active>\n        {(tab: (typeof editorTabs)[number]) => (\n          <Item key={tab.title} textValue={tab.title}>\n            <EditorTabContent\n              icon={<PlatformIcon icon={tab.icon} />}\n              title={tab.title}\n              pinned={tab.pinned}\n            />\n          </Item>\n        )}\n      </EditorTabs>\n    );\n  },\n};\nexport const DebuggerTheme: StoryObj<StoryProps> = {\n  render: (props) => {\n    return (\n      <DebuggerTabs {...props} items={debuggerTabs}>\n        {(tab: (typeof debuggerTabs)[number]) => (\n          <Item key={tab.title} textValue={tab.title}>\n            <DebuggerTabContent\n              icon={tab.icon && <PlatformIcon icon={tab.icon} />}\n              title={tab.title}\n            />\n          </Item>\n        )}\n      </DebuggerTabs>\n    );\n  },\n};\nexport const ToolWindowTheme: StoryObj<StoryProps> = {\n  render: (props) => {\n    return (\n      <ToolWindowTabs {...props} items={toolWindowTabs}>\n        {(tab: (typeof toolWindowTabs)[number]) => (\n          <Item key={tab.title} textValue={tab.title}>\n            <TabContentLayout\n              startIcon={<PlatformIcon icon={tab.icon} />}\n              title={tab.title}\n            />\n          </Item>\n        )}\n      </ToolWindowTabs>\n    );\n  },\n};\nconst editorTabs = [\n  {\n    title: \"Tabs.tsx\",\n    pinned: true,\n    icon: \"fileTypes/javaScript\",\n  },\n  {\n    title: \"Tabs.stories.tsx\",\n    pinned: false,\n    icon: \"fileTypes/javaScript\",\n  },\n  {\n    title: \"index.ts\",\n    pinned: false,\n    icon: \"fileTypes/javaScript\",\n  },\n  {\n    title: \"Tabs.test.ts\",\n    pinned: false,\n    icon: \"fileTypes/javaScript\",\n  },\n];\nconst toolWindowTabs = [\n  {\n    title: \"Project\",\n    icon: \"nodes/project\",\n  },\n  {\n    title: \"Project Files\",\n    icon: \"nodes/folder\",\n  },\n  {\n    title: \"Tests\",\n    icon: \"scope/tests\",\n  },\n];\nconst debuggerTabs = [\n  {\n    title: \"Console\",\n    icon: \"debugger/console\",\n  },\n  {\n    title: \"Frames\",\n    icon: null,\n  },\n  {\n    title: \"Variables | Coroutines | idea.log\",\n    icon: null,\n  },\n];\n","import { Meta, StoryObj } from \"@storybook/react\";\nimport { MenuItemLayout, PlatformIcon } from \"@intellij-platform/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { TabContentLayout, TabItem, TabsProps } from \".\";\nimport { Tabs } from \"./Tabs\";\nimport { DOMProps } from \"@react-types/shared\";\n\ntype StoryProps<T extends TabsProps<unknown> = TabsProps<unknown>> = Pick<\n  T,\n  | \"active\"\n  | \"focusable\"\n  | \"defaultSelectedKey\"\n  | \"multiRow\"\n  | \"noOverflowMenu\"\n  | \"noBorders\"\n  | keyof DOMProps\n>;\n\nexport default {\n  title: \"Components/Tabs\",\n  component: Tabs,\n  parameters: {\n    controls: { exclude: \"TabComponent\" },\n  },\n} as Meta;\n\nexport const StaticItems: StoryObj<StoryProps> = {\n  render: (props) => {\n    return (\n      <Tabs {...props}>\n        <TabItem>Tab 1</TabItem>\n        <TabItem>Tab 2</TabItem>\n        <TabItem>Tab 3</TabItem>\n      </Tabs>\n    );\n  },\n};\n\nexport const DynamicItems: StoryObj<StoryProps> = {\n  render: (props: StoryProps) => {\n    return (\n      <Tabs\n        {...props}\n        items={[\"Tab 1\", \"Tab 2\", \"Tab 3\"].map((title) => ({ title }))}\n      >\n        {({ title }: { title: string }) => (\n          <TabItem key={title}>{title}</TabItem>\n        )}\n      </Tabs>\n    );\n  },\n};\n\nexport const Overflow: StoryObj<StoryProps & { maxWidth: number }> = {\n  render: ({ maxWidth = 800, ...props }) => {\n    const [tabs, setTabs] = useState(\n      Array(10)\n        .fill(null)\n        .map((_, index) => ({\n          title: `Big tab title #${index}`,\n          icon: \"nodes/folder\",\n        }))\n    );\n    return (\n      <div style={{ maxWidth }}>\n        <Tabs {...props} items={tabs}>\n          {(tab) => {\n            const icon = <PlatformIcon icon={tab.icon} />;\n            return (\n              <TabItem\n                key={tabs.indexOf(tab)}\n                textValue={tab.title}\n                inOverflowMenu={\n                  <MenuItemLayout content={tab.title} icon={icon} />\n                }\n              >\n                <TabContentLayout startIcon={icon} title={tab.title} />\n              </TabItem>\n            );\n          }}\n        </Tabs>\n        <div style={{ marginTop: \"1rem\" }}>\n          <button\n            onClick={() => {\n              setTabs((tabs) => [\n                ...tabs,\n                {\n                  title: `Big tab title #${tabs.length}`,\n                  icon: \"nodes/folder\",\n                },\n              ]);\n            }}\n          >\n            Add tab\n          </button>\n          <button\n            onClick={() => {\n              setTabs((tabs) =>\n                tabs.map((tab, index) => {\n                  if (index === 4) {\n                    const title = tab.title;\n                    return {\n                      ...tab,\n                      title:\n                        title.replace(/ \\(.*\\)/, \"\") +\n                        ` ( edited - ${\n                          title.includes(\"short\")\n                            ? \"long long long long\"\n                            : \"short\"\n                        })`,\n                    };\n                  }\n                  return tab;\n                })\n              );\n            }}\n          >\n            Change title of tab #4\n          </button>\n        </div>\n      </div>\n    );\n  },\n};\n","\n\nexport const frontMatter = {};\nexport const contentTitle = 'Tabs';\nexport {default as metadata} from '@site/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-components-tabs-mdx-375.json'\nexport const assets = {\n\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {RefToIntellijPlatform} from \"@site/src/components/RefToIntellijPlatform.tsx\";\nimport {EditorTheme, DebuggerTheme, ToolWindowTheme} from \"@intellij-platform/core/Tabs/3-TabThemes.stories\";\nimport {Overflow} from \"@intellij-platform/core/Tabs/2-Tabs.stories\";\nimport {Example} from \"@site/src/components/ExampleContext\";\nexport const toc = [{\n  \"value\": \"Features\",\n  \"id\": \"features\",\n  \"level\": 3\n}, {\n  \"value\": \"Remaining\",\n  \"id\": \"remaining\",\n  \"level\": 4\n}, {\n  \"value\": \"Simple usage\",\n  \"id\": \"simple-usage\",\n  \"level\": 2\n}, {\n  \"value\": \"Overflow behavior\",\n  \"id\": \"overflow-behavior\",\n  \"level\": 2\n}, {\n  \"value\": \"Customization\",\n  \"id\": \"customization\",\n  \"level\": 2\n}, {\n  \"value\": \"Editor Theme\",\n  \"id\": \"editor-theme\",\n  \"level\": 3\n}, {\n  \"value\": \"Debugger Theme\",\n  \"id\": \"debugger-theme\",\n  \"level\": 3\n}, {\n  \"value\": \"Tool Window Theme\",\n  \"id\": \"tool-window-theme\",\n  \"level\": 3\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    admonition: \"admonition\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\",\n    header: \"header\",\n    input: \"input\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!DebuggerTheme) _missingMdxReference(\"DebuggerTheme\", false);\n  if (!DebuggerTheme.render) _missingMdxReference(\"DebuggerTheme.render\", true);\n  if (!EditorTheme) _missingMdxReference(\"EditorTheme\", false);\n  if (!EditorTheme.render) _missingMdxReference(\"EditorTheme.render\", true);\n  if (!Overflow) _missingMdxReference(\"Overflow\", false);\n  if (!Overflow.render) _missingMdxReference(\"Overflow.render\", true);\n  if (!ToolWindowTheme) _missingMdxReference(\"ToolWindowTheme\", false);\n  if (!ToolWindowTheme.render) _missingMdxReference(\"ToolWindowTheme.render\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.header, {\n      children: _jsx(_components.h1, {\n        id: \"tabs\",\n        children: \"Tabs\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"features\",\n      children: \"Features\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Fully customizable and themeable\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Support for different ways of handling overflow\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Default tab themes, with support for icon, close button and pinned tabs.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"remaining\",\n      children: \"Remaining\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      className: \"contains-task-list\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \"drag and drop\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"simple-usage\",\n      children: \"Simple usage\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        metastring: \"live\",\n        live: true,\n        children: \"<Tabs>\\n  <Item>Tab 1</Item>\\n  <Item>Tab 2</Item>\\n  <Item>Tab 3</Item>\\n</Tabs>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"overflow-behavior\",\n      children: \"Overflow behavior\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"There are a few was of handling the overflow, when there is not enough space for showing all tabs. By default tabs will\\nscroll horizontally and a small arrow down icon button is added next to the tabs which opens an overflow menu for the\\ntabs that are not fully visible, based on the current scroll position.\"\n    }), \"\\n\", _jsx(_components.admonition, {\n      type: \"tip\",\n      children: _jsxs(_components.p, {\n        children: [\"Use \", _jsx(_components.code, {\n          children: \"TabItem\"\n        }), \" instead of \", _jsx(_components.code, {\n          children: \"Item\"\n        }), \" to specify via \", _jsx(_components.code, {\n          children: \"inOverflowMenu\"\n        }), \" prop, a different react node to be shown when the tab\\nis rendered in the overflow menu.\"]\n      })\n    }), \"\\n\", _jsx(Example, {\n      children: _jsx(Overflow.render, {\n        maxWidth: 1800\n      })\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"Overflow menu can be disabled via \", _jsx(_components.code, {\n        children: \"noOverflow\"\n      }), \" prop:\"]\n    }), \"\\n\", _jsx(Example, {\n      children: _jsx(Overflow.render, {\n        maxWidth: 1800,\n        noOverflowMenu: true\n      })\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"Horizontal scroll can be disabled via \", _jsx(_components.code, {\n        children: \"noScroll\"\n      }), \" prop. If overflow is also disabled, tabs will be shrunk to fit\\nthe available space.\"]\n    }), \"\\n\", _jsx(_components.admonition, {\n      type: \"warning\",\n      children: _jsxs(_components.p, {\n        children: [\"Support for \", _jsx(_components.code, {\n          children: \"noScroll\"\n        }), \" is under development.\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"customization\",\n      children: \"Customization\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Tabs\"\n      }), \" component allows for \", _jsx(_components.code, {\n        children: \"TabsComponent\"\n      }), \" (the container) and \", _jsx(_components.code, {\n        children: \"TabComponent\"\n      }), \" to allow for customizing look and feel.\\nBy default \", _jsx(_components.code, {\n        children: \"StyledDefaultTabs\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"StyledDefaultTab\"\n      }), \" are used. The following variations are a thin wrapper around\\n\", _jsx(_components.code, {\n        children: \"Tabs\"\n      }), \", which use those two props. They also expose a customized version of \", _jsx(_components.code, {\n        children: \"TabContentLayout\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"editor-theme\",\n      children: \"Editor Theme\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use \", _jsx(_components.code, {\n        children: \"EditorTabs\"\n      }), \" together with \", _jsx(_components.code, {\n        children: \"EditorTabContent\"\n      }), \" for editor tab style.\"]\n    }), \"\\n\", _jsx(Example, {\n      children: _jsx(EditorTheme.render, {})\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"debugger-theme\",\n      children: \"Debugger Theme\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use \", _jsx(_components.code, {\n        children: \"DebuggerTabs\"\n      }), \" together with \", _jsx(_components.code, {\n        children: \"DebuggerTabContent\"\n      }), \" for editor tab style.\"]\n    }), \"\\n\", _jsx(Example, {\n      children: _jsx(DebuggerTheme.render, {})\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"tool-window-theme\",\n      children: \"Tool Window Theme\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use \", _jsx(_components.code, {\n        children: \"ToolWindowTabs\"\n      }), \" together with the default \", _jsx(_components.code, {\n        children: \"TabContentLayout\"\n      }), \" for editor tab style.\"]\n    }), \"\\n\", _jsx(Example, {\n      children: _jsx(ToolWindowTheme.render, {})\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n"],"names":["BareButton","React","_ref","forwardedRef","elementType","elementTypeProp","props","children","type","undefined","ref","useObjectRef","buttonProps","useButton","domProps","filterDOMProps","autoFocus","mergeProps","__docgenInfo","Item","_Item","getCollectionNode","context","result","itemGenerator","StatelyItem","next","value","originalShouldInvalidate","shouldInvalidate","invalidated","ItemStateContext","LafIcon","themePath","icon","size","resolvedIconPath","useIconPath","iconDescriptor","theme","useTheme","resolvedValue","modifiers","name","findIconPath","basePath","isUnderDarcula","suffix","filter","modifier","Disabled","includes","reduce","soFar","useSvgIcon","path","_jsx","StyledIconWrapper","amendName","iconNameOrPath","amendment","ext","split","getDarkPath","darkPath","getPlatformIconPath","relativePath","startsWith","slice","PlatformIcon","darkIcon","iconName","dark","fallbackPath","styled","_ref2","_ref3","role","itemState","useContext","selected","isSelected","isContainerFocused","svg","setSvg","useState","useLayoutEffect","element","current","ariaBusy","querySelector","remove","svgElement","document","createElement","appendChild","outerHTML","makeIdsUnique","randomPostfix","Math","random","toFixed","matchAll","modifiedSvg","_","id","newId","replaceAll","console","log","useEffect","canceled","fetchIcon","error","getSvgIcon","catch","e","theOld","theNew","str","replaced","replace","replacedAgain","DEFAULT_MINIMUM_BUTTON_SIZE","NAVBAR_MINIMUM_BUTTON_SIZE","StyledIconButton","minSize","color","_ref4","_ref5","_ref6","_ref7","_ref8","IconButton","_ref9","preventFocusOnPress","excludeFromTabOrder","isPressed","isPressedInput","isDisabled","onPress","onPressChange","onPressEnd","onPressStart","onPressUp","shouldCancelOnPointerExit","otherProps","focusableProps","useFocusable","pressProps","usePress","className","disabled","tabIndex","ListDivider","StyledVerticalSeparator","as","useSeparator","orientation","separatorProps","patchCollectionItem","nodes","partialNode","childNodes","result2","partialChildNode","partialChildNodeWithoutType","PatchedItem","PatchedSection","Section","convertChildren","Array","isArray","map","Item2","key","MenuOverlayContext","close","defaultAutoFocus","MenuContext","useMenu","state","onAction","onActionProp","submenuBehavior","onClose","collection","getItem","hasChildNodes","menuProps","useMenuAria","menuContextValue","useMenuState","patchCollectionProps","node","useTreeState","childExpansionBehaviour","expandedKeys","expandedKey","onExpandedChange","firstKey","onExpandedKeyChange","defaultExpandedKeys","defaultExpandedKey","Menu","minWidth","Provider","StyledMenu","style","fillAvailableSpace","renderMenuNodes","StyledMenuItemText","StyledMenuItemPlatformIcon","StyledMenuItemLafIcon","MenuItemContext","descriptionProps","labelProps","keyboardShortcutProps","useMenuItemLayout","MenuItem","item","nestedMenuRef","disabledKeys","has","isExpanded","selectionManager","selectedKeys","isFocused","focusedKey","renderSubmenu","Submenu","itemWrapper","i","menuItemProps","useMenuItem","hasSubmenu","ariaMenuItemProps","useMenuItemAria","onMouseEnter","onPointerEnter","onPointerDown","hoverProps","useHover","onHoverStart","isAnySubmenuOpen","some","parentKey","toggleKey","isFocusVisible","setFocused","setFocusedKey","togglePressProps","onKeyDown","stopPropagation","overlayProps","positionProps","useOverlayPosition","targetRef","overlayRef","placement","shouldFlip","offset","crossOffset","MENU_VERTICAL_PADDING","MENU_BORDER_WIDTH","isOpen","arrowProps","onPointerUp","_jsxs","_Fragment","StyledMenuItem","isActive","StyledMenuItemIcon","Selected","rendered","StyledNestedArrow","Overlay","OverlayComponent","SimpleOverlay","parentState","rootKey","portalContainer","body","ReactDOM","StyledMenuItemLayout","Content","Shortcut","currentForegroundAware","MenuItemLayout","content","shortcut","useContextOrThrow","allowedIcon","MenuOverlay","restoreFocus","otherOverlayProps","inputOverlayRef","useOverlay","shouldCloseOnBlur","isKeyboardDismissDisabled","isDismissable","shouldCloseOnInteractOutside","areInNestedOverlays","usePreventScroll","onOutsideContextMenu","addEventListener","capture","removeEventListener","FocusScope","MenuTrigger","renderMenu","direction","align","positioningTargetRef","useMenuTriggerState","triggerRef","menuTriggerProps","triggerProps","useMenuTrigger","ariaButtonProps","getPlacement","containerPadding","WINDOW_SHADOW","css","highlightedStyle","asCurrentForeground","defaultStyle","disabledStyle","useSubmenu","keyboardDelegate","rootItem","textValue","MenuKeyboardDelegate","submenuProps","useSubmenuAria","setTimeout","focus","useRef","useSubmenuState","ListKeyboardDelegate","constructor","collator","keys","getKeys","flatMap","getFirstKey","getLastKey","getKeyBelow","keyBelow","getKeyAbove","keyAbove","keyboardProps","useKeyboard","contains","target","continuePropagation","root","isFocusedRef","focusedKeyRef","Object","defineProperties","get","SelectionManager","StyledMenuHeading","StyledMenuSectionItemsContainer","MenuSection","itemProps","headingProps","groupProps","useMenuSection","heading","length","hasDivider","ParentOverlayContext","AriaOverlay","containerRef","element1","element2","overlayRoot1","closest","overlayRoot2","Boolean","defaultSize","StyledSeparator","backgroundColor","backgroundClip","boxSizing","margin","border","flexShrink","StyledHorizontalSeparator","DebuggerTabContent","title","closeButton","TabContentLayout","startIcon","endIcon","debuggerTabTheme","underlineHeight","underlinedTabBackground","StyledDebuggerTab","StyledDefaultTab","getTabThemeStyles","DebuggerTabs","Tabs","TabComponent","focusable","EditorTabContent","onUnpin","pinned","containerProps","TooltipTrigger","tooltip","ActionTooltip","actionName","editorTabTheme","borderColor","background","underlinedTabInactiveBackground","hoverInactiveBackground","hoverBackground","inactiveUnderlineColor","underlineColor","underlinedTabInactiveForeground","underlinedTabForeground","StyledEditorTab","StyledEditorTabs","StyledDefaultTabs","getTabsThemeStyles","EditorTabs","TabsComponent","noBorders","commonColors","contrastBorder","StyledTabItemLayout","iconStyle","StyledStartIconWrapper","StyledEndIconWrapper","TabItem","active","horizontalOverflowIndicatorStyles","StyledHorizontalOverflowShadows","hasOverflowAtStart","panelBackground","hasOverflowAtEnd","Tab","forwardRef","shouldSelectOnPressUp","Component","tabProps","useTab","selectedKey","scrollBarDisabledStyle","StyledTabList","multiRow","noOverflowMenu","noScroll","useTabListState","tabListProps","useTabList","scrolledIndicatorProps","hasOverflow","useHasOverflow","threshold","setHasOverflow","left","right","top","bottom","update","offsetLeft","scrollLeft","offsetRight","scrollWidth","offsetWidth","newHasOverflow","offsetTop","scrollTop","offsetBottom","scrollHeight","offsetHeight","onScroll","overflowedElements","useOverflowObserver","overflowedKeys","Set","HTMLElement","dataset","notNull","scrollableContainer","selectedTabElement","scrollIntoView","Error","TabsOverflowMenu","onSelect","setSelectedKey","items","menuItem","inOverflowMenu","toolWindowTabTheme","StyledToolWindowTab","StyledToolWindowTabs","ToolWindowTabs","tooltipProps","Tooltip","tooltipBackground","TRANSLATE","sideStyles","StyledTooltipPointer","side","POINTER_WIDTH","POINTER_HEIGHT","normalizeCssValue","withMin","min","withMax","max","getOffsetCssProp","invert","TooltipPointer","tooltipSize","limitPointerPositionStyles","width","height","applyVerticalMinMax","compose","identity","applyHorizontalMinMax","pointerPositionToOffsetStyle","offsetValue","StyledTooltip","multiline","inset","hasPointer","StyledShortcut","StyledHeader","fontSizeDelta","StyledDescription","_ref10","contextHelpForeground","_ref11","StyledLink","_ref12","linkForegroundEnabled","placementToPointerSide","center","_ref13","withPointer","isInteractive","pointerPositionStyle","TooltipContext","useTooltip","open","measuredSize","useMeasuredSize","setMeasuredSize","_Tooltip","assign","Header","Description","Link","lastMouseClientPos","globalMoveHandler","delay","useTooltipTriggerState","positionAria","useMouseEventOverlayPosition","options","clientX","clientY","fakeTarget","pointerEvents","position","visibility","updatePosition","coordinatesSource","_updatePosition","requestAnimationFrame","TooltipTriggerAndOverlay","trigger","showOnFocus","setInteractive","useTooltipTrigger","onFocus","FocusableProvider","useAriaTooltipTrigger","HTMLInputElement","onMouseDown","useCollectionCacheInvalidation","cacheInvalidation","invalidators","lastInvalidators","usePrevious","anInvalidator","index","TreeCollection","_temp","last","keyMap","Map","iterable","lastKey","visit","set","child","nextKey","prevKey","Symbol","iterator","getKeyBefore","getKeyAfter","at","idx","isExpandable","isEmptyIterable","TreeSelectionManager","expandSelection","expandKeys","getExpandAndShrinkKeys","setSelectedKeys","shrinkSelection","shrinkKeys","recursivelyGetExpandAndShrinkKeys","previousChild","parent","newKeys","parentDescendants","getAllDescendants","getAllRoots","concat","every","descendants","stopKeys","flat","_TreeCollection","rootKeys","from","getAllExpandableKeys","rootNodes","recursivelyAddExpandableKeys","add","treeRef","setExpandedKeys","useControlledState","selectionState","useMultipleSelectionState","selectionBehavior","useMemo","tree","useCollection","useCallback","useTreeRef","latestState","useLatest","useImperativeHandle","replaceSelection","expandAll","collapseAll","select","newExpandedKeys","toggleTreeNode","expandedSiblings","getSiblings","getRootItemKeys","getChildItems","siblings","push","aKey","childItems","sectionItems","res","delete","getSingleChildrenKeysRecursive","previousKeys","childNodesIterator","firstChild","done","noMoreChildren","styledComponents","ThemeConsumer","directChildRef","focusManagerRef","forceFocusFirst","focusManager","containerElement","parentElement","focusFirst","activeElement","focusNext","tabbable","WrappedFocusScope","GetFocusManager","hidden","useFocusManager","OverflowObserver","callback","mutationObserver","data","MutationObserver","mutations","forEach","mutation","Element","removedNodes","intersectionObserver","unobserve","addedNodes","observe","disconnect","IntersectionObserver","entries","sortedEntries","sortBy","entry","time","validEntries","uniqBy","newHiddenElements","isIntersecting","newVisibleElements","previouslyOverflowedElements","currentOverflowElements","childElement","childList","values","scrollableContainerRef","rootMargin","setOverflowedElements","overflowObserver","change","Context","nullErrorMessage","ExampleContext","themeName","themeJson","light","lightTheme","highContrast","highContrastTheme","darcula","darculaTheme","Theme","useFixDocusaurusStyleBleeds","BrowserOnly","fallback","ThemeProvider","Example","_StyledDiv","FLAG_CLASSNAME","classList","querySelectorAll","linkEl","sheet","cssRules","rule","cssText","deleteRule","_styled","withConfig","displayName","componentId","RefToIntellijPlatform","href","pop","EditorTheme","render","editorTabs","tab","DebuggerTheme","debuggerTabs","ToolWindowTheme","toolWindowTabs","Overflow","maxWidth","tabs","setTabs","fill","indexOf","marginTop","onClick","frontMatter","contentTitle","assets","toc","_createMdxContent","_components","_missingMdxReference","MDXContent","MDXLayout","component"],"mappings":"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"}