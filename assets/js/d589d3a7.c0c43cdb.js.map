{"version":3,"file":"assets/js/d589d3a7.c0c43cdb.js","mappings":"+OAUO,MAAMA,EAAc,CAC1BC,iBAAkB,GAENC,EAAe,kBACfC,EAAW,CACtB,cAAiB,kBACjB,GAAM,kBACN,MAAS,kBACT,YAAe,eACf,OAAU,gCACV,cAAiB,IACjB,KAAQ,mBACR,UAAa,4BACb,OAAS,EACT,QAAW,4FACX,KAAQ,GACR,QAAW,UACX,gBAAmB,EACnB,YAAe,CACb,iBAAoB,GAEtB,QAAW,kBACX,KAAQ,CACN,MAAS,iBACT,UAAa,uCAGJC,EAAS,GAKTC,EAAM,CAAC,CAClBC,MAAO,eACPC,GAAI,eACJC,MAAO,GACN,CACDF,MAAO,oBACPC,GAAI,oBACJC,MAAO,GACN,CACDF,MAAO,eACPC,GAAI,cACJC,MAAO,GACN,CACDF,MAAO,aACPC,GAAI,aACJC,MAAO,IAGHC,EAAc,CAClBJ,IAAAA,GAGa,SAASK,EAAT,GAGX,IAH+B,WACjCC,KACGC,GACF,EACD,OAAO,QALS,WAKT,UAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAE5E,cACE,GAAM,mBADR,oBAGA,cACE,GAAM,gBADR,iBAGA,+IACF,sBAAYC,WAAW,KAAvB,2BADE,qCAE4B,sBAAYA,WAAW,KAAvB,qBAF5B,yEAGA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,iBADZ,0DAIL,kCACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,iBADZ,uDAIL,cACE,GAAM,qBADR,sBAGA,4CAA8B,aAAGA,WAAW,IACxC,KAAQ,sBADkB,SAA9B,qEAGF,sBAAYA,WAAW,KAAvB,iBAHE,MAIA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,gBADZ,oRAWL,4DAA8C,sBAAYA,WAAW,KAAvB,SAA9C,qDACF,aAAGA,WAAW,IACR,KAAQ,0KADd,oBADE,UAIF,aAAGA,WAAW,IACR,KAAQ,kEADd,sBAJE,0BAOc,sBAAYA,WAAW,KAAvB,kCAPd,8CAQqC,aAAGA,WAAW,IAC/C,KAAQ,uCADyB,cARrC,MAWA,eACE,UAAa,mDACZ,eAAKA,WAAW,MACf,UAAa,uBACZ,cAAIA,WAAW,QAAM,gBAAMA,WAAW,KACnC,UAAa,oBACZ,eAAKA,WAAW,OACf,MAAS,6BACT,MAAS,KACT,OAAU,KACV,QAAW,cACV,gBAAMA,WAAW,MAChB,SAAY,UACZ,EAAK,ycATZ,SAU8C,eAAKA,WAAW,MAC/D,UAAa,uBACZ,aAAGA,WAAW,OAAd,QAA4B,sBAAYA,WAAW,KAAvB,qBAA5B,QAAiG,sBAAYA,WAAW,KAAvB,QAAjG,aAA8J,sBAAYA,WAAW,KAAvB,iBAA9J,4CACL,cACE,GAAM,eADR,iBAGA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,eACb,WAAc,OACd,MAAQ,GAHP,ofAoBL,cACE,GAAM,cADR,eAGA,4DAA8C,aAAGA,WAAW,IACxD,KAAQ,4BADkC,gBAA9C,gHAIF,aAAGA,WAAW,IACR,KAAQ,qCADd,mBAJE,MAMkC,aAAGA,WAAW,IAC5C,KAAQ,qCADsB,mBANlC,UASF,aAAGA,WAAW,IACR,KAAQ,qBADd,QATE,MAgBJJ,EAAWK,gBAAiB","sources":["webpack://website/./docs/getting-started.md"],"sourcesContent":["\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n/* @jsxFrag mdx.Fragment */\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n\n\nexport const frontMatter = {\n\tsidebar_position: 0\n};\nexport const contentTitle = 'Getting started';\nexport const metadata = {\n  \"unversionedId\": \"getting-started\",\n  \"id\": \"getting-started\",\n  \"title\": \"Getting started\",\n  \"description\": \"Installation\",\n  \"source\": \"@site/docs/getting-started.md\",\n  \"sourceDirName\": \".\",\n  \"slug\": \"/getting-started\",\n  \"permalink\": \"/jui/docs/getting-started\",\n  \"draft\": false,\n  \"editUrl\": \"https://github.com/alirezamirian/jui/edit/master/packages/website/docs/getting-started.md\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"sidebarPosition\": 0,\n  \"frontMatter\": {\n    \"sidebar_position\": 0\n  },\n  \"sidebar\": \"tutorialSidebar\",\n  \"next\": {\n    \"title\": \"Action Toolbar\",\n    \"permalink\": \"/jui/docs/components/ActionToolbar\"\n  }\n};\nexport const assets = {\n\n};\n\n\nexport const toc = [{\n  value: 'Installation',\n  id: 'installation',\n  level: 2\n}, {\n  value: 'Configuring theme',\n  id: 'configuring-theme',\n  level: 3\n}, {\n  value: 'Hello World!',\n  id: 'hello-world',\n  level: 3\n}, {\n  value: 'Next steps',\n  id: 'next-steps',\n  level: 2\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting started`}</h1>\n    <h2 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h2>\n    <p>{`The packaging may be subject to change as the library evolves. At the moment, everything is shipped in a single package,\n`}<inlineCode parentName=\"p\">{`@intellij-platform/core`}</inlineCode>{`.\nThere is a peer dependency on `}<inlineCode parentName=\"p\">{`styled-components`}</inlineCode>{`. While styled-components@4 might work too, only v5 has been tested.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`yarn add @intellij-platform/core styled-components\n`}</code></pre>\n    <p>{`Or with npm:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm i @intellij-platform/core styled-components\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"configuring-theme\"\n    }}>{`Configuring theme`}</h3>\n    <p>{`All components rely on `}<a parentName=\"p\" {...{\n        \"href\": \"./components/Theme\"\n      }}>{`Theme`}</a>{` to be provided. So you need to wrap your application code in a\n`}<inlineCode parentName=\"p\">{`ThemeProvider`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { ThemeProvider } from \"@intellij-platform/core\";\nimport darculaThemeJson from \"@intellij-platform/core/themes/darcula.theme.json\";\n\nconst theme = new Theme(darculaThemeJson);\n\nfunction App() {\n  return <ThemeProvider theme={theme}>...</ThemeProvider>;\n}\n`}</code></pre>\n    <p>{`The only required value for creating a `}<inlineCode parentName=\"p\">{`Theme`}</inlineCode>{` object is a theme json object. You can use any\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://raw.githubusercontent.com/JetBrains/intellij-community/e3c7d96daba1d5d84d5650bde6c220aed225bfda/plugins/devkit/devkit-core/resources/schemes/theme.schema.json\"\n      }}>{`valid theme json`}</a>{` but\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.jetbrains.com/help/idea/user-interface-themes.html\"\n      }}>{`the default themes`}</a>{` are\navailable under `}<inlineCode parentName=\"p\">{`@intellij-platform/core/themes`}</inlineCode>{`.\nSee more options for creating theme in `}<a parentName=\"p\" {...{\n        \"href\": \"./components/Theme#creating-a-theme\"\n      }}>{`Theme docs`}</a>{`.`}</p>\n    <div {...{\n      \"className\": \"admonition admonition-tip alert alert--success\"\n    }}><div parentName=\"div\" {...{\n        \"className\": \"admonition-heading\"\n      }}><h5 parentName=\"div\"><span parentName=\"h5\" {...{\n            \"className\": \"admonition-icon\"\n          }}><svg parentName=\"span\" {...{\n              \"xmlns\": \"http://www.w3.org/2000/svg\",\n              \"width\": \"12\",\n              \"height\": \"16\",\n              \"viewBox\": \"0 0 12 16\"\n            }}><path parentName=\"svg\" {...{\n                \"fillRule\": \"evenodd\",\n                \"d\": \"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"\n              }}></path></svg></span>{`tip`}</h5></div><div parentName=\"div\" {...{\n        \"className\": \"admonition-content\"\n      }}><p parentName=\"div\">{`Set `}<inlineCode parentName=\"p\">{`resolveJsonModule`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` in your `}<inlineCode parentName=\"p\">{`tsconfig.json`}</inlineCode>{` to allow importing theme json files.`}</p></div></div>\n    <h3 {...{\n      \"id\": \"hello-world\"\n    }}>{`Hello World!`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\",\n        \"metastring\": \"live\",\n        \"live\": true\n      }}>{`// import { Item, List, Theme, ThemeProvider } from \"@intellij-platform/core\";\n// import darculaThemeJson from \"@intellij-platform/core/themes/darcula.theme.json\";\n\nfunction App() {\n  const darculaTheme = new Theme(darculaThemeJson);\n  return (\n    <ThemeProvider theme={darculaTheme}>\n      <List selectionMode=\"multiple\">\n        <Item>Hello React!</Item>\n        <Item>Hello Intellij Platform</Item>\n        <Item>Hello World!</Item>\n      </List>\n    </ThemeProvider>\n  );\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"next-steps\"\n    }}>{`Next steps`}</h2>\n    <p>{`A good next step would be to check out `}<a parentName=\"p\" {...{\n        \"href\": \"./components/ToolWindows\"\n      }}>{`Tool Windows`}</a>{`, as it's the centric component in\nmost apps. A few other commonly used components to start with would be\n`}<a parentName=\"p\" {...{\n        \"href\": \"./components/Tree#speedsearchtree\"\n      }}>{`SpeedSearchTree`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"./components/List#speedsearchlist\"\n      }}>{`SpeedSearchList`}</a>{` and\n`}<a parentName=\"p\" {...{\n        \"href\": \"./components/Tabs\"\n      }}>{`Tabs`}</a>{`.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n"],"names":["frontMatter","sidebar_position","contentTitle","metadata","assets","toc","value","id","level","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}