{"version":3,"file":"assets/js/71e5fc34.cdbfd569.js","mappings":"+OAUO,MAAMA,EAAc,GACdC,EAAe,cACfC,EAAW,CACtB,cAAiB,yBACjB,GAAM,yBACN,MAAS,cACT,YAAe,WACf,OAAU,wCACV,cAAiB,aACjB,KAAQ,0BACR,UAAa,mCACb,OAAS,EACT,QAAW,oGACX,KAAQ,GACR,QAAW,UACX,YAAe,GACf,QAAW,kBACX,SAAY,CACV,MAAS,OACT,UAAa,6BAEf,KAAQ,CACN,MAAS,cACT,UAAa,qCAGJC,EAAS,GAKTC,EAAM,CAAC,CAClBC,MAAO,WACPC,GAAI,WACJC,MAAO,GACN,CACDF,MAAO,YACPC,GAAI,YACJC,MAAO,GACN,CACDF,MAAO,eACPC,GAAI,eACJC,MAAO,IAGHC,EAAc,CAClBJ,IAAAA,GAGa,SAASK,EAAT,GAGX,IAH+B,WACjCC,KACGC,GACF,EACD,OAAO,QALS,WAKT,UAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAE5E,cACE,GAAM,eADR,gBAGA,cACE,GAAM,YADR,aAGA,mBACE,cAAIC,WAAW,MAAf,uBAEF,cACE,GAAM,aADR,cAGA,cACE,UAAa,uBAEb,cAAIA,WAAW,KACb,UAAa,mBACZ,iBAAOA,WAAW,KACjB,KAAQ,WACR,SAAW,EACX,UAAY,IALhB,2BAQF,cACE,GAAM,gBADR,iBAGA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,eACb,WAAc,cACd,MAAQ,EACR,QAAU,GAJT,4jCAiDTJ,EAAWK,gBAAiB","sources":["webpack://website/./docs/components/ModalWindow.mdx"],"sourcesContent":["\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n/* @jsxFrag mdx.Fragment */\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n\n\nexport const frontMatter = {};\nexport const contentTitle = 'ModalWindow';\nexport const metadata = {\n  \"unversionedId\": \"components/ModalWindow\",\n  \"id\": \"components/ModalWindow\",\n  \"title\": \"ModalWindow\",\n  \"description\": \"Features\",\n  \"source\": \"@site/docs/components/ModalWindow.mdx\",\n  \"sourceDirName\": \"components\",\n  \"slug\": \"/components/ModalWindow\",\n  \"permalink\": \"/jui/docs/components/ModalWindow\",\n  \"draft\": false,\n  \"editUrl\": \"https://github.com/alirezamirian/jui/edit/master/packages/website/docs/components/ModalWindow.mdx\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"frontMatter\": {},\n  \"sidebar\": \"tutorialSidebar\",\n  \"previous\": {\n    \"title\": \"Menu\",\n    \"permalink\": \"/jui/docs/components/Menu\"\n  },\n  \"next\": {\n    \"title\": \"ProgressBar\",\n    \"permalink\": \"/jui/docs/components/ProgressBar\"\n  }\n};\nexport const assets = {\n\n};\n\n\nexport const toc = [{\n  value: 'Features',\n  id: 'features',\n  level: 3\n}, {\n  value: 'Remaining',\n  id: 'remaining',\n  level: 4\n}, {\n  value: 'Live example',\n  id: 'live-example',\n  level: 3\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"modalwindow\"\n    }}>{`ModalWindow`}</h1>\n    <h3 {...{\n      \"id\": \"features\"\n    }}>{`Features`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`ðŸš§ TODO`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"remaining\"\n    }}>{`Remaining`}</h4>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`ðŸš§ TODO`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"live-example\"\n    }}>{`Live example`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\",\n        \"metastring\": \"live themed\",\n        \"live\": true,\n        \"themed\": true\n      }}>{`function ModalWindowExample() {\n  const [open, setOpen] = useState(false);\n  const close = () => setOpen(false);\n  return (\n    <>\n      <Button onPress={() => setOpen(true)}>Open</Button>\n      {open && (\n        <ModalWindow\n          title=\"Window title\"\n          interactions=\"all\" // try \"none\" or \"move\"\n          onClose={close}\n          footer={\n            <WindowLayout.Footer\n              hasBorder\n              left={\n                <>\n                  <Button variant=\"icon\">?</Button>\n                  <Checkbox>Some settings</Checkbox>\n                </>\n              }\n              right={\n                <>\n                  <Button autoFocus onPress={close}>\n                    Cancel\n                  </Button>\n                  <Button variant=\"default\" onPress={close}>\n                    OK\n                  </Button>\n                </>\n              }\n            />\n          }\n        >\n          <div style={{ padding: \"1rem\" }}>Window content</div>\n        </ModalWindow>\n      )}\n    </>\n  );\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n"],"names":["frontMatter","contentTitle","metadata","assets","toc","value","id","level","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}