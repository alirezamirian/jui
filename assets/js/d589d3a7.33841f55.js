"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["3844"],{84190:function(e,n,t){t.r(n),t.d(n,{default:()=>h,frontMatter:()=>o,metadata:()=>i,assets:()=>d,toc:()=>a,contentTitle:()=>l});var i=JSON.parse('{"id":"getting-started","title":"Getting started","description":"Installation","source":"@site/docs/getting-started.md","sourceDirName":".","slug":"/getting-started","permalink":"/jui/docs/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/alirezamirian/jui/edit/master/packages/website/docs/getting-started.md","tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"id":"getting-started","sidebar_position":0},"sidebar":"tutorialSidebar","next":{"title":"Theming","permalink":"/jui/docs/guides/Theming"}}'),s=t("52322"),r=t("22840");let o={id:"getting-started",sidebar_position:0},l="Getting started",d={},a=[{value:"Installation",id:"installation",level:2},{value:"Configuring theme",id:"configuring-theme",level:3},{value:"Hello World!",id:"hello-world",level:3},{value:"Next steps",id:"next-steps",level:2}];function c(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"getting-started",children:"Getting started"})}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsxs)(n.p,{children:["The packaging may be subject to change as the library evolves. At the moment, everything is shipped in a single package,\n",(0,s.jsx)(n.code,{children:"@intellij-platform/core"}),".\nThere is a peer dependency on ",(0,s.jsx)(n.code,{children:"styled-components"}),". While styled-components@4 might work too, only v5 has been tested."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"yarn add @intellij-platform/core styled-components\n"})}),"\n",(0,s.jsx)(n.p,{children:"Or with npm:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm i @intellij-platform/core styled-components\n"})}),"\n",(0,s.jsx)(n.h3,{id:"configuring-theme",children:"Configuring theme"}),"\n",(0,s.jsxs)(n.p,{children:["All components rely on ",(0,s.jsx)(n.a,{href:"/jui/docs/guides/Theming#theme",children:"Theme"})," to be provided. So you need to wrap your application code in a\n",(0,s.jsx)(n.code,{children:"ThemeProvider"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'import { ThemeProvider } from "@intellij-platform/core";\nimport darculaThemeJson from "@intellij-platform/core/themes/darcula.theme.json";\n\nconst theme = new Theme(darculaThemeJson);\n\nfunction App() {\n  return <ThemeProvider theme={theme}>...</ThemeProvider>;\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The only required value for creating a ",(0,s.jsx)(n.code,{children:"Theme"})," object is a theme json object. You can use any\n",(0,s.jsx)(n.a,{href:"https://raw.githubusercontent.com/JetBrains/intellij-community/e3c7d96daba1d5d84d5650bde6c220aed225bfda/plugins/devkit/devkit-core/resources/schemes/theme.schema.json",children:"valid theme json"})," but\n",(0,s.jsx)(n.a,{href:"https://www.jetbrains.com/help/idea/user-interface-themes.html",children:"the default themes"})," are\navailable under ",(0,s.jsx)(n.code,{children:"@intellij-platform/core/themes"}),".\nSee more options for creating theme in ",(0,s.jsx)(n.a,{href:"/jui/docs/guides/Theming#creating-a-theme",children:"theming docs"}),"."]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["Set ",(0,s.jsx)(n.code,{children:"resolveJsonModule"})," to ",(0,s.jsx)(n.code,{children:"true"})," in your ",(0,s.jsx)(n.code,{children:"tsconfig.json"})," to allow importing theme json files."]})}),"\n",(0,s.jsx)(n.h3,{id:"hello-world",children:"Hello World!"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",metastring:"live",live:!0,children:'// import { Item, List, Theme, ThemeProvider } from "@intellij-platform/core";\n// import darculaThemeJson from "@intellij-platform/core/themes/darcula.theme.json";\n\nfunction App() {\n  const darculaTheme = new Theme(darculaThemeJson);\n  return (\n    <ThemeProvider theme={darculaTheme}>\n      <List selectionMode="multiple">\n        <Item>Hello React!</Item>\n        <Item>Hello Intellij Platform</Item>\n        <Item>Hello World!</Item>\n      </List>\n    </ThemeProvider>\n  );\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,s.jsxs)(n.p,{children:["A good next step would be to check out ",(0,s.jsx)(n.a,{href:"/jui/docs/components/ToolWindows",children:"Tool Windows"}),". It's the centric component in\nmost apps. A few other commonly used components to start with would be\n",(0,s.jsx)(n.a,{href:"/jui/docs/components/Tree#speedsearchtree",children:"SpeedSearchTree"}),", ",(0,s.jsx)(n.a,{href:"/jui/docs/components/List#speedsearchlist",children:"SpeedSearchList"})," and\n",(0,s.jsx)(n.a,{href:"/jui/docs/components/Tabs",children:"Tabs"}),"."]})]})}function h(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);
//# sourceMappingURL=d589d3a7.33841f55.js.map