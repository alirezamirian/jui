"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2841],{10809:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>r});var o=t(7896),i=(t(2784),t(30876));const a={},l="ModalWindow",s={unversionedId:"components/ModalWindow",id:"components/ModalWindow",title:"ModalWindow",description:"Features",source:"@site/docs/components/ModalWindow.mdx",sourceDirName:"components",slug:"/components/ModalWindow",permalink:"/jui/docs/components/ModalWindow",draft:!1,editUrl:"https://github.com/alirezamirian/jui/edit/master/packages/website/docs/components/ModalWindow.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Menu",permalink:"/jui/docs/components/Menu"},next:{title:"Popup",permalink:"/jui/docs/components/Popup"}},d={},r=[{value:"Features",id:"features",level:3},{value:"Remaining",id:"remaining",level:4},{value:"Live example",id:"live-example",level:3},{value:"WindowManager",id:"windowmanager",level:2}],u={toc:r};function c(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"modalwindow"},"ModalWindow"),(0,i.kt)("h3",{id:"features"},"Features"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\ud83d\udea7 TODO")),(0,i.kt)("h4",{id:"remaining"},"Remaining"),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","\ud83d\udea7 TODO")),(0,i.kt)("h3",{id:"live-example"},"Live example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live themed",live:!0,themed:!0},'function ModalWindowExample() {\n  const [open, setOpen] = useState(false);\n  const close = () => setOpen(false);\n  return (\n    <>\n      <Button onPress={() => setOpen(true)}>Open</Button>\n      {open && (\n        <ModalWindow\n          interactions="all" // try "none" or "move"\n          onClose={close}\n        >\n          <WindowLayout\n            header="Window title"\n            content={<div style={{ padding: "1rem" }}>Window content</div>}\n            footer={\n              <WindowLayout.Footer\n                hasBorder\n                left={\n                  <>\n                    <TooltipTrigger\n                      tooltip={<HelpTooltip helpText="Show Help Contents" />}\n                    >\n                      <Button variant="icon">\n                        <PlatformIcon icon="actions/help"></PlatformIcon>\n                      </Button>\n                    </TooltipTrigger>\n                    <Checkbox>Some settings</Checkbox>\n                  </>\n                }\n                right={\n                  <>\n                    <Button autoFocus onPress={close}>\n                      Cancel\n                    </Button>\n                    <Button variant="default" onPress={close}>\n                      OK\n                    </Button>\n                  </>\n                }\n              />\n            }\n          />\n        </ModalWindow>\n      )}\n    </>\n  );\n}\n')),(0,i.kt)("h2",{id:"windowmanager"},"WindowManager"),(0,i.kt)("p",null,"\ud83d\udea7"))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=71e5fc34.935f08c7.js.map