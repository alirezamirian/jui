{"version":3,"file":"assets/js/e3b22f57.2c1d666c.js","mappings":"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","sources":["webpack://website/../../node_modules/@docusaurus/core/lib/client/exports/BrowserOnly.js","webpack://website/../jui/src/Collections/ItemStateContext.tsx","webpack://website/../jui/src/Icon/PlatformIcon.tsx","webpack://website/../jui/src/Icon/StyledIconWrapper.tsx","webpack://website/../jui/src/Icon/useSvgIcon.tsx","webpack://website/../jui/src/Theme/parseColorString.ts","webpack://website/../jui/src/Theme/Color.ts","webpack://website/../jui/src/styled.ts","webpack://website/../jui/src/utils/useForwardedRef.ts","webpack://website/./src/pages/example-app.tsx","webpack://website/../../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { isValidElement } from 'react';\nimport useIsBrowser from '@docusaurus/useIsBrowser';\n// Similar comp to the one described here:\n// https://www.joshwcomeau.com/react/the-perils-of-rehydration/#abstractions\nexport default function BrowserOnly({ children, fallback, }) {\n    const isBrowser = useIsBrowser();\n    if (isBrowser) {\n        if (typeof children !== 'function' &&\n            process.env.NODE_ENV === 'development') {\n            throw new Error(`Docusaurus error: The children of <BrowserOnly> must be a \"render function\", e.g. <BrowserOnly>{() => <span>{window.location.href}</span>}</BrowserOnly>.\nCurrent type: ${isValidElement(children) ? 'React element' : typeof children}`);\n        }\n        return <>{children?.()}</>;\n    }\n    return fallback ?? null;\n}\n","import React from \"react\";\nimport { Node } from \"@react-types/shared\";\n\n/**\n * Generic state of items in collections, provided via a context.\n * To be used in Menu, Tree, or anything that deals with a collection of items for which the common states like\n * **disabled** or **selected** is applicable.\n */\nexport interface ItemStateContextType {\n  node: Node<unknown>;\n  isSelected: boolean;\n  isFocused: boolean;\n  isDisabled: boolean;\n}\n\nexport const ItemStateContext = React.createContext<ItemStateContextType | null>(\n  null\n);\n","import React, { ForwardedRef } from \"react\";\nimport useForwardedRef from \"@intellij-platform/core/utils/useForwardedRef\";\nimport { useTheme } from \"styled-components\";\nimport { Theme } from \"../Theme/Theme\";\nimport { IconProps } from \"./IconProps\";\nimport { StyledIconWrapper } from \"./StyledIconWrapper\";\nimport { useSvgIcon } from \"./useSvgIcon\";\n\nexport interface PlatformIconProps extends IconProps {\n  icon: string;\n  darkIcon?: string;\n}\n\nexport const amendName = (iconNameOrPath: string, amendment: string) => {\n  const [name, ext] = iconNameOrPath.split(\".\");\n  return `${name}${amendment}${ext ? `.${ext}` : \"\"}`;\n};\n\nexport const getDarkPath = (path: string, darkPath?: string) => {\n  const [name, ext] = path.split(\".\");\n  return darkPath || `${name}_dark${ext ? `.${ext}` : \"\"}`;\n};\n\nconst getPlatformIconPath = (relativePath: string) =>\n  `platform/icons/src/${relativePath}`;\n\n/**\n * Renders an icon from the predefined list of platform icons.\n * icon name must follow the directory structure in platform icons.\n * @example <PlatformIcon icon=\"general/hideToolWindow\" />\n * @example <PlatformIcon icon=\"toolbar/pin\" />\n * @example <PlatformIcon icon=\"toolbar/pin.svg\" />\n */\nexport const PlatformIcon = React.forwardRef(\n  (\n    { icon, darkIcon, ...props }: PlatformIconProps,\n    forwardedRef: ForwardedRef<HTMLElement>\n  ) => {\n    const ref = useForwardedRef(forwardedRef);\n    const theme = useTheme() as Theme; // TODO: investigate why useTheme is typed like this\n    const iconName = theme.dark ? getDarkPath(icon, darkIcon) : icon;\n    useSvgIcon(\n      {\n        path: getPlatformIconPath(iconName),\n        fallbackPath: getPlatformIconPath(icon),\n      },\n      ref\n    );\n\n    return <StyledIconWrapper {...props} ref={ref} />;\n  }\n);\n","import { styled } from \"../styled\";\nimport { IconSize } from \"@intellij-platform/core/Icon/IconProps\";\n\nconst DEFAULT_ICON_SIZE: IconSize = 16;\n\nexport const StyledIconWrapper = styled.span<{\n  size?: IconSize;\n  useCurrentColor?: boolean;\n}>`\n  box-sizing: border-box;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 0;\n  width: ${({ size = DEFAULT_ICON_SIZE }) => `${size}px`};\n  height: ${({ size = DEFAULT_ICON_SIZE }) => `${size}px`};\n  position: relative; // to allow absolute positioned indicators and overlays on icon\n`;\n","import { RefObject, useContext, useEffect } from \"react\";\nimport { useTheme } from \"@intellij-platform/core/styled\";\nimport { ItemStateContext } from \"@intellij-platform/core/Collections\";\n\nexport function useSvgIcon(\n  { path, fallbackPath }: { path: string; fallbackPath?: string },\n  /**\n   * ref to the icon wrapper element in which the svg should be injected.\n   * This hook used to return svg string, and that svg was set as dangerouslySetInnerHTML. But now it injects the svg.\n   * by direct DOM manipulation. That's to eliminate the need for using dangerouslySetInnerHTML, so that we can allow\n   * arbitrary children (like LiveIndicator) as overlays on top of icons.\n   */\n  ref: RefObject<HTMLElement>\n) {\n  const theme = useTheme();\n  const itemState = useContext(ItemStateContext);\n  const selected = itemState?.isSelected || itemState?.isFocused;\n  useEffect(() => {\n    let unmounted = false;\n    const fetchIcon = async () => {\n      if (!path) {\n        console.error(\"icon path is empty\");\n        return;\n      }\n      if (ref.current) {\n        // For querying for icons that are not loaded yet. Especially useful for visual testing\n        ref.current.dataset.loadingIcon = \"true\";\n      }\n      const svg = await theme.getSvgIcon(path, selected).catch((e) => {\n        if (fallbackPath) {\n          return theme.getSvgIcon(fallbackPath, selected);\n        }\n        throw e;\n      });\n      if (svg) {\n        if (!unmounted && ref?.current) {\n          if (ref) {\n            // potential SSR issues here?\n            ref.current?.querySelector(\"svg\")?.remove();\n            const svgElement = document.createElement(\"svg\");\n            ref.current?.appendChild(svgElement);\n            svgElement.outerHTML = svg;\n            delete ref.current?.dataset.loadingIcon;\n          }\n        }\n      } else {\n        console.error(\"Could not resolve icon:\", path);\n      }\n    };\n    fetchIcon().catch(console.error);\n    return () => {\n      unmounted = true;\n    };\n  }, [path, selected]);\n}\n","// language=JSRegexp\nconst numberPattern = \"[0-9]{0,3}.?[0-9]*\";\n\nconst parseComponent = (componentStr: string, index: number) =>\n  componentStr\n    ? index < 3\n      ? parseInt(componentStr)\n      : Math.round(Math.min(parseFloat(componentStr), 1) * 255)\n    : undefined;\n\nconst parseHexRgba = (str: string) =>\n  str\n    .match(/^#?([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})?$/i)\n    ?.slice(1, 5)\n    .map((i) => (i ? parseInt(i, 16) : undefined));\nconst parseShorthandHex = (str: string) =>\n  str\n    .match(/^#?([0-9A-F])([0-9A-F])([0-9A-F])$/i)\n    ?.slice(1, 4)\n    .map((i) => (i ? parseInt(i + i, 16) : undefined));\nconst parseRgb = (str: string) =>\n  str\n    .match(\n      new RegExp(\n        `^rgb\\\\(\\\\s*(${numberPattern})\\\\s*,\\\\s*(${numberPattern})\\\\s*,\\\\s*(${numberPattern}\\\\s*)\\\\)$`\n      )\n    )\n    ?.slice(1, 5)\n    .map(parseComponent);\nconst parseRgba = (str: string) =>\n  str\n    .match(\n      new RegExp(\n        `^rgba\\\\(\\\\s*(${numberPattern})\\\\s*,\\\\s*(${numberPattern})\\\\s*,\\\\s*(${numberPattern})\\\\s*,\\\\s*(${numberPattern}\\\\s*)\\\\)$`\n      )\n    )\n    ?.slice(1, 5)\n    .map(parseComponent);\n\n/**\n * parses a color string into rgba components.\n * @param str\n */\nexport const parseColorString = (\n  str: string\n): [number, number, number, number?] | null => {\n  const result = [parseHexRgba, parseShorthandHex, parseRgb, parseRgba].reduce<\n    (number | undefined)[] | undefined\n  >((result, parse) => result || parse(str), undefined);\n  return Array.isArray(result) &&\n    result.slice(0, 3).every((c) => Number.isInteger(c))\n    ? (result as [number, number, number, number?])\n    : null;\n};\n","import { parseColorString } from \"./parseColorString\";\n\n/**\n * A Color class resembling AWT Color\n */\nexport class Color {\n  public readonly r: number;\n  public readonly g: number;\n  public readonly b: number;\n  public readonly a: number;\n\n  private static readonly FACTOR = 0.7;\n\n  constructor(r: number, g: number, b: number, a?: number);\n  constructor(rgba: string);\n  constructor(rgba: Color);\n  constructor(\n    rgba: string | number | Color,\n    g?: number,\n    b?: number,\n    a: number = 255\n  ) {\n    let r: number;\n    if (typeof rgba === \"string\") {\n      [r = NaN, g = NaN, b = NaN, a = 255] = parseColorString(rgba) || [];\n    } else if (rgba instanceof Color) {\n      [r, g, b, a] = [rgba.r, rgba.g, rgba.b, rgba.a];\n    } else {\n      r = rgba;\n    }\n    this.r = r;\n    this.g = g!;\n    this.b = b!;\n    this.a = a < 1 ? Math.round(a * 255) : a;\n  }\n\n  isValid() {\n    return (\n      Number.isInteger(this.r) &&\n      Number.isInteger(this.g) &&\n      Number.isInteger(this.b) &&\n      Number.isInteger(this.a)\n    );\n  }\n\n  /**\n   * Extra method for changing transparency\n   */\n  withTransparency(alpha: number) {\n    return new Color(this.r, this.g, this.b, alpha);\n  }\n\n  brighter() {\n    let { r, g, b, a: alpha } = this;\n    const int = Math.floor,\n      FACTOR = Color.FACTOR;\n    // The rest is copy paste of java.awt.Color (only `int i` is changed to `let i` :D)\n    let i = int(1.0 / (1.0 - FACTOR));\n    if (r == 0 && g == 0 && b == 0) {\n      return new Color(i, i, i, alpha);\n    }\n    if (r > 0 && r < i) r = i;\n    if (g > 0 && g < i) g = i;\n    if (b > 0 && b < i) b = i;\n\n    return new Color(\n      Math.min(int(r / FACTOR), 255),\n      Math.min(int(g / FACTOR), 255),\n      Math.min(int(b / FACTOR), 255),\n      alpha\n    );\n  }\n\n  darker() {\n    const FACTOR = Color.FACTOR;\n    const int = Math.floor;\n\n    return new Color(\n      Math.max(int(this.r * FACTOR), 0),\n      Math.max(int(this.g * FACTOR), 0),\n      Math.max(int(this.b * FACTOR), 0),\n      this.a\n    );\n  }\n\n  static brighter(color: string): string {\n    // note: we can't type args simply with ConstructorParameters<typeof Color>.\n    // see more: https://github.com/microsoft/TypeScript/issues/37079\n    return new Color(color).brighter().toString();\n  }\n\n  blend(colorOrColorString: Color | string) {\n    const color =\n      typeof colorOrColorString === \"string\"\n        ? new Color(colorOrColorString)\n        : colorOrColorString;\n    const getBlendedValue = (component: \"r\" | \"g\" | \"b\") =>\n      Math.round(\n        (color.a / 255) * color[component] +\n          (this.a / 255) * (1 - color.a / 255) * this[component]\n      );\n    return new Color(\n      getBlendedValue(\"r\"),\n      getBlendedValue(\"g\"),\n      getBlendedValue(\"b\")\n    );\n  }\n\n  toString() {\n    const toString = (component: number) =>\n      Number.isNaN(component) ? \"\" : component.toString(16).padStart(2, \"0\");\n    const r = toString(this.r);\n    const g = toString(this.g);\n    const b = toString(this.b);\n    const a = this.a === 255 ? \"\" : toString(this.a);\n    return `#${r}${g}${b}${a}`;\n  }\n}\n","import * as styledComponents from \"styled-components\";\nimport { ThemedStyledComponentsModule } from \"styled-components\";\nimport { Theme } from \"./Theme\";\nimport { KnownThemePropertyPath } from \"./Theme/types\";\n\ntype JuiStyledComponentsModule = ThemedStyledComponentsModule<\n  Theme<KnownThemePropertyPath>\n>;\n\nexport const styled = styledComponents.default as JuiStyledComponentsModule[\"default\"];\nexport const useTheme = styledComponents.useTheme as JuiStyledComponentsModule[\"useTheme\"];\nexport const css = styledComponents.css as JuiStyledComponentsModule[\"css\"];\nexport const ThemeConsumer = styledComponents.ThemeConsumer as JuiStyledComponentsModule[\"ThemeConsumer\"];\n","import React, { useRef } from \"react\";\n\n/**\n * For when a component needs to forward ref, but it too needs to use the same ref. Since forwarded ref can be in form\n * of a callback too, this will normalize it as a RefObject.\n * NOTE: Should we keep the ref in state because of edge cases?\n */\nexport default function useForwardedRef<T>(\n  forwardedRef: React.Ref<T>\n): React.RefObject<T> {\n  const innerRef = useRef<T>(null);\n  React.useEffect(() => {\n    if (!forwardedRef) {\n      return;\n    }\n\n    if (typeof forwardedRef === \"function\") {\n      forwardedRef(innerRef.current);\n    } else {\n      (forwardedRef as React.MutableRefObject<T | null>).current =\n        innerRef.current;\n    }\n  });\n\n  return innerRef;\n}\n","import React, { ComponentProps, useState } from \"react\";\nimport BrowserOnly from \"@docusaurus/BrowserOnly\";\nimport Link from \"@docusaurus/Link\";\nimport { PlatformIcon, styled, Color } from \"@intellij-platform/core\";\nimport {\n  ExampleContext,\n  ExampleContextThemeName,\n} from \"../components/ExampleContext\";\n\nconst App = React.lazy(() => import(\"../../../example-app/src/App\"));\n\nconst ColumnContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background: ${({ theme }) => theme.color(\"*.background\")};\n`;\n\nconst StyledBanner = styled.div`\n  background: ${({ theme }) =>\n    new Color(theme.color(\"*.background\")).darker().toString()};\n  color: ${({ theme }) => theme.color(\"*.foreground\")};\n  display: flex;\n`;\n\nconst BannerLinkButton = styled(Link)`\n  color: inherit;\n  padding: 0 6px;\n  height: 100%;\n  display: inline-flex;\n  align-items: center;\n  &:hover {\n    background: ${({ theme }) =>\n      theme.color(\"ActionButton.hoverBackground\", \"#DFDFDF\")};\n    color: inherit;\n    text-decoration: none;\n  }\n`;\n\nconst StyledSpacer = styled.span`\n  flex: 1;\n`;\n\nexport default function ExampleAppPage(): JSX.Element {\n  const [themeName, setThemeName] = useState<\n    ComponentProps<typeof ExampleContext>[\"themeName\"]\n  >(\"darcula\");\n\n  return (\n    <>\n      <BrowserOnly>\n        {() => (\n          <ExampleContext themeName={themeName}>\n            <React.Suspense fallback=\"loading...\">\n              <ColumnContainer>\n                <StyledBanner>\n                  <BannerLinkButton to=\"/\">\n                    <PlatformIcon icon=\"actions/exit.svg\" />\n                    &nbsp; Quit example app\n                  </BannerLinkButton>\n                  <StyledSpacer />\n                  <label>\n                    Theme: &nbsp;\n                    <select\n                      value={themeName}\n                      onChange={({ target }) =>\n                        setThemeName(target.value as ExampleContextThemeName)\n                      }\n                    >\n                      <option value=\"darcula\">Darcula</option>\n                      <option value=\"light\">Light</option>\n                      <option value=\"highContrast\">High Contrast</option>\n                    </select>\n                  </label>\n                </StyledBanner>\n                <App />\n              </ColumnContainer>\n            </React.Suspense>\n          </ExampleContext>\n        )}\n      </BrowserOnly>\n    </>\n  );\n}\n","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}"],"names":["BrowserOnly","children","fallback","useIsBrowser","ItemStateContext","React","amendName","iconNameOrPath","amendment","name","ext","split","getPlatformIconPath","relativePath","PlatformIcon","forwardedRef","icon","darkIcon","props","ref","useForwardedRef","iconName","useTheme","dark","path","darkPath","getDarkPath","useSvgIcon","fallbackPath","DEFAULT_ICON_SIZE","StyledIconWrapper","styled","size","theme","itemState","useContext","selected","isSelected","isFocused","useEffect","unmounted","async","console","error","current","dataset","loadingIcon","svg","getSvgIcon","catch","e","querySelector","remove","svgElement","document","createElement","appendChild","outerHTML","fetchIcon","numberPattern","parseComponent","componentStr","index","parseInt","Math","round","min","parseFloat","undefined","parseHexRgba","str","match","slice","map","i","parseShorthandHex","parseRgb","RegExp","parseRgba","Color","constructor","rgba","g","b","a","r","NaN","result","reduce","parse","Array","isArray","every","c","Number","isInteger","parseColorString","this","isValid","withTransparency","alpha","brighter","int","floor","FACTOR","darker","max","color","toString","blend","colorOrColorString","getBlendedValue","component","isNaN","padStart","styledComponents","css","ThemeConsumer","innerRef","useRef","App","ColumnContainer","StyledBanner","BannerLinkButton","Link","StyledSpacer","ExampleAppPage","themeName","setThemeName","useState","to","value","onChange","target","_taggedTemplateLiteralLoose","strings","raw"],"sourceRoot":""}