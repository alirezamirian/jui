{"version":3,"file":"assets/js/17896441.8fcce099.js","mappings":"4KAWA,MAMA,EANuB,CACrBA,MADqB,KAElBA,KACAC,G,eCDL,MA8BA,EAf6BC,CAAAA,GAC3B,SAA6BC,GAC3B,MAAMC,GAAQC,EAAAA,EAAAA,MACRC,EAAU,gBAACJ,EAAcC,GACzBI,EAAQJ,EAAMK,OAChB,CACE,uBAAwBJ,EAAMK,MAAM,iBAEtC,GACJ,OAAO,uBAAKF,MAAOA,GAAQD,IAM/B,EA9BwBJ,EA8B0BQ,EAAAA,EA7BhD,SAAwBP,GACtB,OAAIA,EAAMQ,KAID,gBAACC,EAAA,GAAD,QAAYC,MAAOC,GAAoBX,IAGzC,gBAACD,EAAcC,MATFD,IAAAA","sources":["webpack://website/./src/theme/ReactLiveScope/index.js","webpack://website/./src/theme/CodeBlock/index.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as juiComponents from \"@intellij-platform/core\";\nimport React from \"react\";\n\n// Add react-live imports you need here\nconst ReactLiveScope = {\n  React,\n  ...React,\n  ...juiComponents,\n};\n\nexport default ReactLiveScope;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from \"react\";\nimport { useTheme } from \"styled-components\";\nimport Playground from \"@theme/Playground\";\nimport ReactLiveScope from \"@theme/ReactLiveScope\";\nimport CodeBlock from \"@theme-init/CodeBlock\";\n\nconst withLiveEditor = (Component) => {\n  function WithLiveEditor(props) {\n    if (props.live) {\n      // idea: We can support playground with alternative sources, where each of them will show up as a button\n      // below the default playground. Clicking on buttons will switch to that example. There can be a simple syntax\n      // for embedding multiple sources in one code block which then will be converted into examples here.\n      return <Playground scope={ReactLiveScope} {...props} />;\n    }\n\n    return <Component {...props} />;\n  }\n\n  return WithLiveEditor;\n};\n\nconst withThemeBackground = (Component) => {\n  function WithThemeBackground(props) {\n    const theme = useTheme();\n    const content = <Component {...props} />;\n    const style = props.themed\n      ? {\n          \"--ifm-pre-background\": theme.color(\"*.background\"),\n        }\n      : {};\n    return <div style={style}>{content}</div>;\n  }\n\n  return WithThemeBackground;\n};\n\nexport default withThemeBackground(withLiveEditor(CodeBlock));\n"],"names":["React","juiComponents","Component","props","theme","useTheme","content","style","themed","color","CodeBlock","live","Playground","scope","ReactLiveScope"],"sourceRoot":""}