"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[633],{20350:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>m,toc:()=>s});var o=t(7896),i=(t(2784),t(30876));const l={},a="ComboBox",m={unversionedId:"components/ComboBox",id:"components/ComboBox",title:"ComboBox",description:"Combobox implementation.",source:"@site/docs/components/ComboBox.mdx",sourceDirName:"components",slug:"/components/ComboBox",permalink:"/jui/docs/components/ComboBox",draft:!1,editUrl:"https://github.com/alirezamirian/jui/edit/master/packages/website/docs/components/ComboBox.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Checkbox",permalink:"/jui/docs/components/Checkbox"},next:{title:"Dropdown",permalink:"/jui/docs/components/Dropdown"}},r={},s=[{value:"Live example",id:"live-example",level:3},{value:"Filtering",id:"filtering",level:2},{value:"Label Alignment",id:"label-alignment",level:2},{value:"Known differences",id:"known-differences",level:2}],p={toc:s},d="wrapper";function u(e){let{components:n,...t}=e;return(0,i.kt)(d,(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"combobox"},"ComboBox"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://plugins.jetbrains.com/docs/intellij/combo-box.html"},"Combobox")," implementation.\nIt's also known as editable ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/JetBrains/intellij-community/blob/master/platform/platform-api/src/com/intellij/openapi/ui/ComboBox.java"},"ComboBox"),", in the reference implementation."),(0,i.kt)("p",null,"See also:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Dropdown"))),(0,i.kt)("h3",{id:"live-example"},"Live example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live themed",live:!0,themed:!0},'<div\n  style={{\n    display: "flex",\n    flexDirection: "column",\n    alignItems: "start",\n    gap: "1rem",\n    flexWrap: "wrap",\n  }}\n>\n  <ComboBox label="Script:" defaultSelectedKey="build">\n    <Item key="start">start</Item>\n    <Item key="build">build</Item>\n    <Item key="test">test</Item>\n    <Item key="deploy">deploy</Item>\n  </ComboBox>\n\n  <ComboBox\n    label="Validated:"\n    validationState="error"\n    defaultSelectedKey="Info"\n  >\n    <Item key="start">start</Item>\n    <Item key="build">build</Item>\n    <Item key="test">test</Item>\n    <Item key="deploy">deploy</Item>\n  </ComboBox>\n\n  <ComboBox\n    label="label placed above:"\n    labelPlacement="above"\n    defaultSelectedKey="option2"\n  >\n    <Item key="option1">Option 1</Item>\n    <Item key="option2">Option 2</Item>\n    <Item key="option3">Option 3</Item>\n    <Item key="option4">Option 4</Item>\n  </ComboBox>\n</div>\n')),(0,i.kt)("h2",{id:"filtering"},"Filtering"),(0,i.kt)("p",null,"By default, items are ",(0,i.kt)("strong",{parentName:"p"},"not filtered")," based the input value.\nFiltering options is possible by controlling ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"items")," props:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live themed noInline",live:!0,themed:!0,noInline:!0},'const items = [\n  { name: "start" },\n  { name: "build" },\n  { name: "test" },\n  { name: "deploy" },\n];\n\nfunction WithFiltering() {\n  const [value, setValue] = React.useState("");\n  const filteredItems = React.useMemo(\n    () =>\n      items.filter((item) =>\n        item.name.toLowerCase().startsWith(value.toLowerCase())\n      ),\n    [value]\n  );\n  return (\n    <ComboBox\n      items={filteredItems}\n      menuTrigger="input"\n      value={value}\n      onValueChange={setValue}\n    >\n      {({ name }) => <Item key={name}>{name}</Item>}\n    </ComboBox>\n  );\n}\n\nrender(<WithFiltering />);\n')),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"When filtering options based on input value, use ",(0,i.kt)("inlineCode",{parentName:"p"},'menuTrigger="input"')," to have the dropdown open as the input is typed in.")),(0,i.kt)("h2",{id:"label-alignment"},"Label Alignment"),(0,i.kt)("p",null,"Use ",(0,i.kt)("inlineCode",{parentName:"p"},"LabeledControlsAlignmentProvider")," to align combobox with other labeled controls, according to\n",(0,i.kt)("a",{parentName:"p",href:"https://jetbrains.github.io/ui/principles/layout/#05"},"the design guidelines"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live themed",live:!0,themed:!0},'<LabeledControlsAlignmentProvider>\n  <div\n    style={{\n      display: "flex",\n      flexDirection: "column",\n      gap: "1rem",\n      width: 400,\n    }}\n  >\n    <InputField label="Host name:" />\n    <ComboBox label="Port number:">\n      <Item key="80">80</Item>\n    </ComboBox>\n  </div>\n</LabeledControlsAlignmentProvider>\n')),(0,i.kt)("h2",{id:"known-differences"},"Known differences"),(0,i.kt)("p",null,"Combobox has the ",(0,i.kt)("a",{parentName:"p",href:"./Dropdown#known-differences"},"same differences")," with the reference implementation as\n",(0,i.kt)("a",{parentName:"p",href:"./Dropdown"},"Dropdown")," has."))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=db25ea3b.93ca8735.js.map