{"version":3,"file":"assets/js/4d0df159.55f13715.js","mappings":"8OAUO,MAAMA,EAAc,GACdC,EAAe,cACfC,EAAW,CACtB,cAAiB,qBACjB,GAAM,qBACN,MAAS,cACT,YAAe,+FACf,OAAU,oCACV,cAAiB,SACjB,KAAQ,sBACR,UAAa,+BACb,OAAS,EACT,QAAW,gGACX,KAAQ,GACR,QAAW,UACX,YAAe,GACf,QAAW,kBACX,SAAY,CACV,MAAS,OACT,UAAa,8BAGJC,EAAS,GAKTC,EAAM,CAAC,CAClBC,MAAO,gCACPC,GAAI,gCACJC,MAAO,GACN,CACDF,MAAO,gBACPC,GAAI,gBACJC,MAAO,GACN,CACDF,MAAO,kCACPC,GAAI,kCACJC,MAAO,GACN,CACDF,MAAO,8BACPC,GAAI,8BACJC,MAAO,IAGHC,EAAc,CAClBJ,IAAAA,GAGa,SAASK,EAAT,GAGX,IAH+B,WACjCC,KACGC,GACF,EACD,OAAO,QALS,WAKT,UAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAE5E,cACE,GAAM,eADR,gBAGA,mHACF,aAAGC,WAAW,IACR,KAAQ,mEADd,8BADE,2IAKA,cACE,GAAM,iCADR,kCAGA,qDAAuC,sBAAYA,WAAW,KAAvB,SAAvC,mCAA2H,sBAAYA,WAAW,KAAvB,YAA3H,gDACG,aAAGA,WAAW,IACb,KAAQ,qFADT,yBADH,iMAMA,eACE,UAAa,iDACZ,eAAKA,WAAW,MACf,UAAa,uBACZ,cAAIA,WAAW,QAAM,gBAAMA,WAAW,KACnC,UAAa,oBACZ,eAAKA,WAAW,OACf,MAAS,6BACT,MAAS,KACT,OAAU,KACV,QAAW,cACV,gBAAMA,WAAW,MAChB,SAAY,UACZ,EAAK,yLATZ,UAU+C,eAAKA,WAAW,MAChE,UAAa,uBACZ,aAAGA,WAAW,OAAd,0HAEL,6KAEA,cACE,GAAM,iBADR,kBAGA,6QAEA,cACE,GAAM,mCADR,oCAGA,0BACA,cACE,GAAM,+BADR,gCAGA,6BAAe,sBAAYA,WAAW,KAAvB,QAAf,QAAuE,sBAAYA,WAAW,KAAvB,qBAAvE,oKACgF,aAAGA,WAAW,IAC1F,KAAQ,sBADoE,QADhF,uEAKA,4HACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,gBADZ,gFAIL,+DAAiD,sBAAYA,WAAW,KAAvB,mBAAjD,iBAKJJ,EAAWK,gBAAiB","sources":["webpack://website/./docs/guides/Collections.mdx"],"sourcesContent":["\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n/* @jsxFrag mdx.Fragment */\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n\n\nexport const frontMatter = {};\nexport const contentTitle = 'Collections';\nexport const metadata = {\n  \"unversionedId\": \"guides/Collections\",\n  \"id\": \"guides/Collections\",\n  \"title\": \"Collections\",\n  \"description\": \"A good number of components like List, Tree, Menu, Tabs, etc. display a collection of items.\",\n  \"source\": \"@site/docs/guides/Collections.mdx\",\n  \"sourceDirName\": \"guides\",\n  \"slug\": \"/guides/Collections\",\n  \"permalink\": \"/jui/docs/guides/Collections\",\n  \"draft\": false,\n  \"editUrl\": \"https://github.com/alirezamirian/jui/edit/master/packages/website/docs/guides/Collections.mdx\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"frontMatter\": {},\n  \"sidebar\": \"tutorialSidebar\",\n  \"previous\": {\n    \"title\": \"Tree\",\n    \"permalink\": \"/jui/docs/components/Tree\"\n  }\n};\nexport const assets = {\n\n};\n\n\nexport const toc = [{\n  value: 'Rendering optimization caveat',\n  id: 'rendering-optimization-caveat',\n  level: 2\n}, {\n  value: 'Using context',\n  id: 'using-context',\n  level: 3\n}, {\n  value: 'Wrapping items with extra state',\n  id: 'wrapping-items-with-extra-state',\n  level: 3\n}, {\n  value: 'Disabling or limiting cache',\n  id: 'disabling-or-limiting-cache',\n  level: 3\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"collections\"\n    }}>{`Collections`}</h1>\n    <p>{`A good number of components like List, Tree, Menu, Tabs, etc. display a collection of items.\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://react-spectrum.adobe.com/react-stately/collections.html\"\n      }}>{`@react-stately/collections`}</a>{` is used for all of them\nto provide a uniform and flexible API that would allow for both static jsx-based or dynamic source of items.`}</p>\n    <h2 {...{\n      \"id\": \"rendering-optimization-caveat\"\n    }}>{`Rendering optimization caveat`}</h2>\n    <p>{`When the API for dynamic items (`}<inlineCode parentName=\"p\">{`items`}</inlineCode>{` prop and a render function as `}<inlineCode parentName=\"p\">{`children`}</inlineCode>{`) is used, the render result for each\nitem `}<a parentName=\"p\" {...{\n        \"href\": \"https://react-spectrum.adobe.com/react-stately/collections.html#why-not-array-map\"\n      }}>{`is subject to caching`}</a>{` based\non the item object. It's important to understand this assumption that the rendering should only depend on the item, and\nnot any other piece of state from the closure, for example.`}</p>\n    <div {...{\n      \"className\": \"admonition admonition-info alert alert--info\"\n    }}><div parentName=\"div\" {...{\n        \"className\": \"admonition-heading\"\n      }}><h5 parentName=\"div\"><span parentName=\"h5\" {...{\n            \"className\": \"admonition-icon\"\n          }}><svg parentName=\"span\" {...{\n              \"xmlns\": \"http://www.w3.org/2000/svg\",\n              \"width\": \"14\",\n              \"height\": \"16\",\n              \"viewBox\": \"0 0 14 16\"\n            }}><path parentName=\"svg\" {...{\n                \"fillRule\": \"evenodd\",\n                \"d\": \"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"\n              }}></path></svg></span>{`info`}</h5></div><div parentName=\"div\" {...{\n        \"className\": \"admonition-content\"\n      }}><p parentName=\"div\">{`Item renderer function is assumed to be a pure function that depends only on its single argument, the item\nobject.`}</p></div></div>\n    <p>{`In some cases however, there might be a need to render some UI based on a something other than the item object itself.\nBelow is a few ways to do that.`}</p>\n    <h3 {...{\n      \"id\": \"using-context\"\n    }}>{`Using context`}</h3>\n    <p>{`TODO (important point: especially useful for components that implement virtual rendering, as only a limited number of\nitems are mounted at each moment, and changes to the additional state would only affect those, without collection being rebuilt)`}</p>\n    <h3 {...{\n      \"id\": \"wrapping-items-with-extra-state\"\n    }}>{`Wrapping items with extra state`}</h3>\n    <p>{`TODO`}</p>\n    <h3 {...{\n      \"id\": \"disabling-or-limiting-cache\"\n    }}>{`Disabling or limiting cache`}</h3>\n    <p>{`Passing `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`cacheInvalidation`}</inlineCode>{` prop in components that support it will disable caching altogether, but can\ndrastically reduce the performance for large number of components. In a test on a `}<a parentName=\"p\" {...{\n        \"href\": \"../components/Tree\"\n      }}>{`Tree`}</a>{` with 400 elements,\nit was ~10x slower with cache being disabled.`}</p>\n    <p>{`A middle ground is to pass an array of cache invalidators instead of turning the cache off completely:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<Tree cacheInvalidation={{ invalidators: [nestedSelection] }}>...</Tree>\n`}</code></pre>\n    <p>{`This would invalidate the cache only when `}<inlineCode parentName=\"p\">{`nestedSelection`}</inlineCode>{` is changed.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n"],"names":["frontMatter","contentTitle","metadata","assets","toc","value","id","level","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}