{"version":3,"file":"assets/js/e3b22f57.19615320.js","mappings":"oHAeO,MAAMA,E,QACXC,cAAiD,K,iHCI5C,MAAMC,EAAYA,CAACC,EAAwBC,KAChD,MAAOC,EAAMC,GAAOH,EAAeI,MAAM,KACzC,MAAQ,GAAEF,IAAOD,IAAYE,EAAO,IAAGA,IAAQ,IAAI,EAQ/CE,EAAuBC,GAC3BA,EAAaC,WAAW,KACpBD,EAAaE,MAAM,GAClB,sBAAqBF,IAUfG,EAAeX,EAAAA,YAC1B,CAAAY,EAEEC,KACI,IAFJ,KAAEC,EAAI,SAAEC,KAAaC,GAA0BJ,EAG/C,MAAMK,GAAMC,EAAAA,EAAAA,GAAgBL,GAEtBM,GADQC,EAAAA,EAAAA,MACSC,KAzBAC,EAACC,EAAcC,KACxC,MAAOpB,EAAMC,GAAOkB,EAAKjB,MAAM,KAC/B,OAAOkB,GAAa,GAAEpB,SAAYC,EAAO,IAAGA,IAAQ,IAAI,EAuBxBiB,CAAYR,EAAMC,GAAYD,EAS5D,OARAW,EAAAA,EAAAA,GACE,CACEF,KAAMhB,EAAoBY,GAC1BO,aAAcnB,EAAoBO,IAEpCG,GAGKjB,EAAAA,cAAC2B,EAAAA,GAAiBC,EAAAA,EAAAA,GAAA,GAAKZ,EAAK,CAAEC,IAAKA,IAAO,IAEnDN,EAAAkB,aAAA,mxB,kDC1DF,MAAMC,EAA8B,GAEvBH,EAAoBI,EAAAA,GAAOC,IAIrC;;;;;;WAMQpB,IAAA,IAAC,KAAEqB,EAAOH,GAAmBlB,EAAA,MAAM,GAAEqB,KAAQ;YAC5CC,IAAA,IAAC,KAAED,EAAOH,GAAmBI,EAAA,MAAM,GAAED,KAAQ;;YAE7CE,IAAA,IAAC,KAAEC,GAAMD,EAAA,MAAe,WAATC,EAAoB,eAAYC,CAAS;wECd7D,SAASZ,EAAUb,EAQxBK,GACC,IARD,KAAEM,EAAI,aAAEG,GAAuDd,EAS/D,MAAM0B,GAAQlB,EAAAA,EAAAA,MACRmB,GAAYC,EAAAA,EAAAA,YAAWzC,EAAAA,GACvB0C,EAAWF,GAAWG,YAAcH,GAAWI,oBACrDC,EAAAA,EAAAA,YAAU,KACR,IAAIC,GAAY,EAoChB,MAnCkBC,WAChB,IAAKvB,EAEH,YADAwB,QAAQC,MAAM,sBAGZ/B,EAAIgC,UAENhC,EAAIgC,QAAQC,SAAW,QAEzB,MAAMC,QAAYb,EACfc,WAAW7B,EAAMkB,GACjBY,OAAOC,IACN,GAAI5B,EACF,OAAOY,EAAMc,WAAW1B,EAAce,GAExC,MAAMa,CAAC,IAERC,SAAQ,KACHtC,GAAKgC,UACPhC,EAAIgC,QAAQC,SAAW,QACzB,IAEJ,GAAIC,EAAK,CACP,MAAMK,EAAUvC,GAAKgC,QACrB,IAAKJ,GAAaW,EAAS,CACzBA,EAAQC,cAAc,QAAQC,SAC9B,MAAMC,EAAaC,SAASC,cAAc,OAC1CL,EAAQM,YAAYH,GACpBA,EAAWI,UAkBrB,SAAuBZ,GACrB,MAAMa,GAAiC,IAAhBC,KAAKC,UAAiBC,QAAQ,GAC/CC,EAAYjB,EAAIkB,SAAS,eAC/B,MAAO,IAAID,GAAWE,QAAO,CAACC,EAAWrC,KAAe,IAAZsC,EAAGC,GAAGvC,EAChD,MAAMwC,EAAS,GAAED,KAAMT,IACvB,OAAOW,EACJ,OAAMF,KACN,OAAMC,KACPC,EAAY,QAAOF,KAAQ,QAAOC,KAAUH,GAC7C,GACApB,EACL,CA7BiCyB,CAAczB,EACvC,CACF,MACEJ,QAAQC,MAAM,0BAA2BzB,EAC3C,EAEFsD,GAAYxB,MAAMN,QAAQC,OACnB,KACLH,GAAY,CAAI,CACjB,GACA,CAACtB,EAAMkB,GACZ,CAoBA,SAASkC,EAAWG,EAAgBC,EAAgBC,GAClD,MAAMC,EAAWD,EAAIE,QAAQJ,EAAQC,GAC/BI,EAAgBF,EAASC,QAAQJ,EAAQC,GAC/C,OAAIE,IAAaE,EACRF,EAEFN,EAAWG,EAAQC,EAAQI,EACpC,C,mCCpFA,MAAMC,EAAgB,qBAEhBC,EAAiBA,CAACC,EAAsBC,IAC5CD,EACIC,EAAQ,EACNC,SAASF,GACTrB,KAAKwB,MAA8C,IAAxCxB,KAAKyB,IAAIC,WAAWL,GAAe,SAChDjD,EAEAuD,EAAgBZ,GACpBA,EACGa,MAAM,+DACLnF,MAAM,EAAG,GACVoF,KAAKC,GAAOA,EAAIP,SAASO,EAAG,SAAM1D,IACjC2D,EAAqBhB,GACzBA,EACGa,MAAM,wCACLnF,MAAM,EAAG,GACVoF,KAAKC,GAAOA,EAAIP,SAASO,EAAIA,EAAG,SAAM1D,IACrC4D,EAAYjB,GAChBA,EACGa,MACC,IAAIK,OACD,eAAcd,eAA2BA,eAA2BA,gBAGvE1E,MAAM,EAAG,GACVoF,IAAIT,GACHc,EAAanB,GACjBA,EACGa,MACC,IAAIK,OACD,gBAAed,eAA2BA,eAA2BA,eAA2BA,gBAGnG1E,MAAM,EAAG,GACVoF,IAAIT,GChCF,MAAMe,EAWXC,WAAAA,CACEC,EACAC,EACAC,EACAC,GAEA,IAAIC,OAFK,IAATD,IAAAA,EAAY,KAAG,KAdDC,OAAC,OACDH,OAAC,OACDC,OAAC,OACDC,OAAC,EAcK,iBAATH,GACRI,EAAIC,IAAKJ,EAAII,IAAKH,EAAIG,IAAKF,EAAI,KDoBpCzB,KAEA,MAAM4B,EAAS,CAAChB,EAAcI,EAAmBC,EAAUE,GAAW7B,QAEpE,CAACsC,EAAQC,IAAUD,GAAUC,EAAM7B,SAAM3C,GAC3C,OAAOyE,MAAMC,QAAQH,IACnBA,EAAOlG,MAAM,EAAG,GAAGsG,OAAOC,GAAMC,OAAOC,UAAUF,KAC9CL,EACD,IAAI,EC5BmCQ,CAAiBd,IAAS,GACxDA,aAAgBF,GACxBM,EAAGH,EAAGC,EAAGC,GAAK,CAACH,EAAKI,EAAGJ,EAAKC,EAAGD,EAAKE,EAAGF,EAAKG,GAE7CC,EAAIJ,EAENe,KAAKX,EAAIA,EACTW,KAAKd,EAAIA,EACTc,KAAKb,EAAIA,EACTa,KAAKZ,EAAIA,EAAI,EAAIxC,KAAKwB,MAAU,IAAJgB,GAAWA,CACzC,CAEAa,OAAAA,GACE,OACEJ,OAAOC,UAAUE,KAAKX,IACtBQ,OAAOC,UAAUE,KAAKd,IACtBW,OAAOC,UAAUE,KAAKb,IACtBU,OAAOC,UAAUE,KAAKZ,EAE1B,CAKAc,gBAAAA,CAAiBC,GACf,OAAO,IAAIpB,EAAMiB,KAAKX,EAAGW,KAAKd,EAAGc,KAAKb,EAAGgB,EAC3C,CAEAC,QAAAA,GACE,IAAI,EAAEf,EAAC,EAAEH,EAAC,EAAEC,EAAGC,EAAGe,GAAUH,KAC5B,MAAMK,EAAMzD,KAAK0D,MACfC,EAASxB,EAAMwB,OAEjB,IAAI7B,EAAI2B,EAAI,GAAO,EAAME,IACzB,OAAS,GAALlB,GAAe,GAALH,GAAe,GAALC,EACf,IAAIJ,EAAML,EAAGA,EAAGA,EAAGyB,IAExBd,EAAI,GAAKA,EAAIX,IAAGW,EAAIX,GACpBQ,EAAI,GAAKA,EAAIR,IAAGQ,EAAIR,GACpBS,EAAI,GAAKA,EAAIT,IAAGS,EAAIT,GAEjB,IAAIK,EACTnC,KAAKyB,IAAIgC,EAAIhB,EAAIkB,GAAS,KAC1B3D,KAAKyB,IAAIgC,EAAInB,EAAIqB,GAAS,KAC1B3D,KAAKyB,IAAIgC,EAAIlB,EAAIoB,GAAS,KAC1BJ,GAEJ,CAEAK,MAAAA,GACE,MAAMD,EAASxB,EAAMwB,OACfF,EAAMzD,KAAK0D,MAEjB,OAAO,IAAIvB,EACTnC,KAAK6D,IAAIJ,EAAIL,KAAKX,EAAIkB,GAAS,GAC/B3D,KAAK6D,IAAIJ,EAAIL,KAAKd,EAAIqB,GAAS,GAC/B3D,KAAK6D,IAAIJ,EAAIL,KAAKb,EAAIoB,GAAS,GAC/BP,KAAKZ,EAET,CAEA,eAAOgB,CAASM,GAGd,OAAO,IAAI3B,EAAM2B,GAAON,WAAWO,UACrC,CAEAC,KAAAA,CAAMC,GACJ,MAAMH,EAC0B,iBAAvBG,EACH,IAAI9B,EAAM8B,GACVA,EACAC,EAAmBC,GACvBnE,KAAKwB,MACFsC,EAAMtB,EAAI,IAAOsB,EAAMK,GACrBf,KAAKZ,EAAI,KAAQ,EAAIsB,EAAMtB,EAAI,KAAOY,KAAKe,IAElD,OAAO,IAAIhC,EACT+B,EAAgB,KAChBA,EAAgB,KAChBA,EAAgB,KAEpB,CAEAH,QAAAA,GACE,MAAMA,EAAYI,GAChBlB,OAAOmB,MAAMD,GAAa,GAAKA,EAAUJ,SAAS,IAAIM,SAAS,EAAG,KAKpE,MAAQ,IAJEN,EAASX,KAAKX,KACdsB,EAASX,KAAKd,KACdyB,EAASX,KAAKb,KACH,MAAXa,KAAKZ,EAAY,GAAKuB,EAASX,KAAKZ,IAEhD,EA/GWL,EAMawB,OAAS,E,8ECF5B,MAAM7F,EACXwG,EAAAA,GACWnH,EACXmH,EAAAA,GACWC,EAAMD,EAAAA,GACNE,EACXF,EAAAA,E,iDCRa,SAASrH,EACtBL,GAEA,MAAM6H,GAAWC,EAAAA,EAAAA,QAAU,MAc3B,OAbA3I,EAAAA,WAAgB,KACTa,IAIuB,mBAAjBA,EACTA,EAAa6H,EAASzF,SAErBpC,EAAkDoC,QACjDyF,EAASzF,QACb,IAGKyF,CACT,C,sICfO,MAAME,EAGRhI,IAA0C,IAAzC,SAAEiI,EAAQ,UAAEC,EAAY,WAAWlI,EACvC,MAAMmI,EACJ,CACEC,MAAOC,EACPC,aAAcC,EACdC,QAASC,GAEXP,GAKIxG,GAAQgH,EAAAA,EAAAA,UAAQ,IAAM,IAAIC,EAAAA,EAAMR,IAAY,CAACA,IAGnD,OADAS,IAEExJ,EAAAA,cAACyJ,EAAAA,EAAW,CAACC,SAAU1J,EAAAA,cAAAA,EAAAA,SAAA,KAAE,gBACtB,IAAMA,EAAAA,cAAC2J,EAAAA,EAAa,CAACrH,MAAOA,GAAQuG,IACzB,EAOLe,EAAmD1H,IAAA,IAAC,SAC/D2G,GACD3G,EAAA,OACClC,EAAAA,cAAC4I,EAAc,KACb5I,EAAAA,cAAA6J,EAAA,KAOGhB,GAEY,EAiBbW,EAA8BA,MAClC5G,EAAAA,EAAAA,YAAU,KACR,MAAMkH,EAAiB,wBACvB,IAAKlG,SAASmG,KAAKC,UAAUC,SAASH,GACpC,IAgBJlG,SACGsG,iBAAkC,wBAClCC,SAASC,IACR,GAAIA,EAAOC,MACT,IAAK,IAAItE,EAAI,EAAGA,EAAIqE,EAAOC,MAAMC,SAASC,OAAQxE,IAAK,CACrD,MAAMyE,EAAOJ,EAAOC,MAAMC,SAASG,KAAK1E,GAEtCyE,GAAME,SAASjK,WAAW,wCAE1B2J,EAAOC,MAAMM,WAAW5E,EAE5B,CACF,IA1BEnC,SAASmG,KAAKC,UAAUY,IAAId,EAC9B,CAAE,MAAOxG,GACPP,QAAQC,MAAM,uCAChB,CACF,GACC,GAAG,EAuBP,IAAA6G,GAAAgB,EAAAA,EAAAA,IAAA,OAAAC,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAAAH,CAAA,qBAzDqB1I,IAAA,IAAC,MAAEG,GAAyBH,EAAA,OACxCG,EAAMyF,MAAM,eAAe,IAAAa,EAAA/G,aAAA,sIAAA+H,EAAA/H,aAAA,qI,uECzCrC,MAAMoJ,EAAMjL,EAAAA,MAAW,IAAM,uFAEhBkL,EAAiBtK,IAOM,IAPL,UAC7BkI,EAAY,UAAS,SACrBD,EAAY9C,IAAMA,MACfoF,GAIyBvK,EAC5B,OACEZ,EAAAA,cAACyJ,EAAAA,EAAW,MACT,IACCzJ,EAAAA,cAAC4I,EAAAA,GAAc,CAACE,UAAWA,GACzB9I,EAAAA,cAACA,EAAAA,SAAc,CAAC0J,SAAS,cACtBb,EAAS7I,EAAAA,cAACiL,EAAQE,OAIb,EAEhBD,EAAArJ,aAAA,kjB,oHCjBF,MAAMuJ,EAAkBrJ,EAAAA,GAAOsJ,GAAI;;;;gBAInBzK,IAAA,IAAC,MAAE0B,GAAO1B,EAAA,OAAK0B,EAAMyF,MAAM,eAAe;EAGpDuD,EAAevJ,EAAAA,GAAOsJ,GAAI;gBAChBnJ,IAAA,IAAC,MAAEI,GAAOJ,EAAA,OACtB,IAAIkE,EAAAA,EAAM9D,EAAMyF,MAAM,iBAAiBF,SAASG,UAAU;WACnD7F,IAAA,IAAC,MAAEG,GAAOH,EAAA,OAAKG,EAAMyF,MAAM,eAAe;;EAI/CwD,GAAmBxJ,EAAAA,EAAAA,IAAOyJ,EAAAA,EAAM;;;;;;;kBAOpBC,IAAA,IAAC,MAAEnJ,GAAOmJ,EAAA,OACtBnJ,EAAMyF,MAAM,+BAAgC,UAAU;;;;EAMtD2D,EAAe3J,EAAAA,GAAOC,IAAK;;EAIlB,SAAS2J,IACtB,MAAO7C,EAAW8C,IAChBC,EAAAA,EAAAA,UAA6D,WAE/D,OACE7L,EAAAA,cAACkL,EAAAA,EAAc,CAACpC,UAAWA,EAAWgD,qBAAmB,IACrDC,GACA/L,EAAAA,cAACoL,EAAe,KACdpL,EAAAA,cAACsL,EAAY,KACXtL,EAAAA,cAACuL,EAAgB,CAACS,GAAG,KACnBhM,EAAAA,cAACW,EAAAA,GAAY,CAACG,KAAK,qBAAqB,yBAG1Cd,EAAAA,cAAC0L,EAAY,MACb1L,EAAAA,cAAA,aAAO,cAELA,EAAAA,cAAA,UACEiM,MAAOnD,EACPoD,SAAUC,IAAA,IAAC,OAAEC,GAAQD,EAAA,OACnBP,EAAaQ,EAAOH,MAAiC,GAGvDjM,EAAAA,cAAA,UAAQiM,MAAM,WAAU,WACxBjM,EAAAA,cAAA,UAAQiM,MAAM,SAAQ,SACtBjM,EAAAA,cAAA,UAAQiM,MAAM,gBAAe,oBAIlCF,IAKX,CAACJ,EAAA9J,aAAA,wD","sources":["webpack://website/../jui/src/Collections/ItemStateContext.tsx","webpack://website/../jui/src/Icon/PlatformIcon.tsx","webpack://website/../jui/src/Icon/StyledIconWrapper.tsx","webpack://website/../jui/src/Icon/useSvgIcon.tsx","webpack://website/../jui/src/Theme/parseColorString.ts","webpack://website/../jui/src/Theme/Color.ts","webpack://website/../jui/src/styled.ts","webpack://website/../jui/src/utils/useForwardedRef.ts","webpack://website/./src/components/ExampleContext.tsx","webpack://website/./src/components/LazyExampleApp.tsx","webpack://website/./src/pages/example-app.tsx"],"sourcesContent":["import React from \"react\";\nimport { Node } from \"@react-types/shared\";\n\n/**\n * Generic state of items in collections, provided via a context.\n * To be used in Menu, Tree, or anything that deals with a collection of items for which the common states like\n * **disabled** or **selected** is applicable.\n */\nexport interface ItemStateContextType {\n  node: Node<unknown>;\n  isSelected: boolean;\n  isContainerFocused: boolean;\n  isDisabled: boolean;\n}\n\nexport const ItemStateContext =\n  React.createContext<ItemStateContextType | null>(null);\n","import React, { ForwardedRef } from \"react\";\nimport useForwardedRef from \"@intellij-platform/core/utils/useForwardedRef\";\nimport { useTheme } from \"@intellij-platform/core/styled\";\nimport { IconProps } from \"./IconProps\";\nimport { StyledIconWrapper } from \"./StyledIconWrapper\";\nimport { useSvgIcon } from \"./useSvgIcon\";\n\nexport interface PlatformIconProps extends IconProps {\n  /**\n   * Icon path in intellij platform repo.\n   * If starts with \"/\", the path will be from the repo root. Otherwise, it's relative to \"platform/icons/src\".\n   * \".svg\" extension is optional.\n   */\n  icon: string;\n  /**\n   * Similar to icon, but for dark themes.\n   */\n  darkIcon?: string;\n}\n\nexport const amendName = (iconNameOrPath: string, amendment: string) => {\n  const [name, ext] = iconNameOrPath.split(\".\");\n  return `${name}${amendment}${ext ? `.${ext}` : \"\"}`;\n};\n\nexport const getDarkPath = (path: string, darkPath?: string) => {\n  const [name, ext] = path.split(\".\");\n  return darkPath || `${name}_dark${ext ? `.${ext}` : \"\"}`;\n};\n\nconst getPlatformIconPath = (relativePath: string) =>\n  relativePath.startsWith(\"/\")\n    ? relativePath.slice(1)\n    : `platform/icons/src/${relativePath}`;\n\n/**\n * Renders an icon from the predefined list of platform icons.\n * icon name must follow the directory structure in platform icons.\n * @example <PlatformIcon icon=\"general/hideToolWindow\" />\n * @example <PlatformIcon icon=\"toolbar/pin\" />\n * @example <PlatformIcon icon=\"toolbar/pin.svg\" />\n * @example <PlatformIcon icon=\"/platform/dvcs-impl/resources/icons/currentBranchLabel.svg\" />\n */\nexport const PlatformIcon = React.forwardRef(\n  (\n    { icon, darkIcon, ...props }: PlatformIconProps,\n    forwardedRef: ForwardedRef<HTMLElement>\n  ) => {\n    const ref = useForwardedRef(forwardedRef);\n    const theme = useTheme();\n    const iconName = theme.dark ? getDarkPath(icon, darkIcon) : icon;\n    useSvgIcon(\n      {\n        path: getPlatformIconPath(iconName),\n        fallbackPath: getPlatformIconPath(icon),\n      },\n      ref\n    );\n\n    return <StyledIconWrapper {...props} ref={ref} />;\n  }\n);\n","import { styled } from \"../styled\";\nimport { IconSize } from \"@intellij-platform/core/Icon/IconProps\";\n\nconst DEFAULT_ICON_SIZE: IconSize = 16;\n\nexport const StyledIconWrapper = styled.span<{\n  size?: IconSize;\n  useCurrentColor?: boolean;\n  role?: string;\n}>`\n  box-sizing: border-box;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 0;\n  width: ${({ size = DEFAULT_ICON_SIZE }) => `${size}px`};\n  height: ${({ size = DEFAULT_ICON_SIZE }) => `${size}px`};\n  position: relative; // to allow absolute positioned indicators and overlays on icon\n  cursor: ${({ role }) => (role === \"button\" ? \"pointer\" : undefined)};\n`;\n","import { RefObject, useContext, useEffect } from \"react\";\nimport { useTheme } from \"@intellij-platform/core/styled\";\nimport { ItemStateContext } from \"@intellij-platform/core/Collections\";\n\nexport function useSvgIcon(\n  { path, fallbackPath }: { path: string; fallbackPath?: string },\n  /**\n   * ref to the icon wrapper element in which the svg should be injected.\n   * This hook used to return svg string, and that svg was set as dangerouslySetInnerHTML. But now it injects the svg.\n   * by direct DOM manipulation. That's to eliminate the need for using dangerouslySetInnerHTML, so that we can allow\n   * arbitrary children (like LiveIndicator) as overlays on top of icons.\n   */\n  ref: RefObject<HTMLElement>\n) {\n  const theme = useTheme();\n  const itemState = useContext(ItemStateContext);\n  const selected = itemState?.isSelected || itemState?.isContainerFocused;\n  useEffect(() => {\n    let unmounted = false;\n    const fetchIcon = async () => {\n      if (!path) {\n        console.error(\"icon path is empty\");\n        return;\n      }\n      if (ref.current) {\n        // For querying for icons that are not loaded yet. Especially useful for visual testing\n        ref.current.ariaBusy = \"true\";\n      }\n      const svg = await theme\n        .getSvgIcon(path, selected)\n        .catch((e) => {\n          if (fallbackPath) {\n            return theme.getSvgIcon(fallbackPath, selected);\n          }\n          throw e;\n        })\n        .finally(() => {\n          if (ref?.current) {\n            ref.current.ariaBusy = \"false\";\n          }\n        });\n      if (svg) {\n        const element = ref?.current;\n        if (!unmounted && element) {\n          element.querySelector(\"svg\")?.remove();\n          const svgElement = document.createElement(\"svg\");\n          element.appendChild(svgElement);\n          svgElement.outerHTML = makeIdsUnique(svg); // UNSAFE! Would require sanitization, or icon sources must be trusted.\n        }\n      } else {\n        console.error(\"Could not resolve icon:\", path);\n      }\n    };\n    fetchIcon().catch(console.error);\n    return () => {\n      unmounted = true;\n    };\n  }, [path, selected]);\n}\n\n/**\n * If multiple instance of the same icon is rendered at the same time, and the SVG includes\n * url(#...) references to locally defined ids, in some cases the icon is not rendered properly.\n * because of ids colliding. We make sure the ids are unique in each rendered icon.\n */\nfunction makeIdsUnique(svg: string): string {\n  const randomPostfix = (Math.random() * 1000).toFixed(0);\n  const idMatches = svg.matchAll(/id=\"(.*?)\"/g);\n  return [...idMatches].reduce((modifiedSvg, [_, id]) => {\n    const newId = `${id}-${randomPostfix}`;\n    return replaceAll(\n      `id=\"${id}\"`,\n      `id=\"${newId}\"`,\n      replaceAll(`url(#${id})`, `url(#${newId})`, modifiedSvg)\n    );\n  }, svg);\n}\n\nfunction replaceAll(theOld: string, theNew: string, str: string): string {\n  const replaced = str.replace(theOld, theNew);\n  const replacedAgain = replaced.replace(theOld, theNew);\n  if (replaced === replacedAgain) {\n    return replaced;\n  }\n  return replaceAll(theOld, theNew, replacedAgain);\n}\n","// language=JSRegexp\nconst numberPattern = \"[0-9]{0,3}.?[0-9]*\";\n\nconst parseComponent = (componentStr: string, index: number) =>\n  componentStr\n    ? index < 3\n      ? parseInt(componentStr)\n      : Math.round(Math.min(parseFloat(componentStr), 1) * 255)\n    : undefined;\n\nconst parseHexRgba = (str: string) =>\n  str\n    .match(/^#?([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})?$/i)\n    ?.slice(1, 5)\n    .map((i) => (i ? parseInt(i, 16) : undefined));\nconst parseShorthandHex = (str: string) =>\n  str\n    .match(/^#?([0-9A-F])([0-9A-F])([0-9A-F])$/i)\n    ?.slice(1, 4)\n    .map((i) => (i ? parseInt(i + i, 16) : undefined));\nconst parseRgb = (str: string) =>\n  str\n    .match(\n      new RegExp(\n        `^rgb\\\\(\\\\s*(${numberPattern})\\\\s*,\\\\s*(${numberPattern})\\\\s*,\\\\s*(${numberPattern}\\\\s*)\\\\)$`\n      )\n    )\n    ?.slice(1, 5)\n    .map(parseComponent);\nconst parseRgba = (str: string) =>\n  str\n    .match(\n      new RegExp(\n        `^rgba\\\\(\\\\s*(${numberPattern})\\\\s*,\\\\s*(${numberPattern})\\\\s*,\\\\s*(${numberPattern})\\\\s*,\\\\s*(${numberPattern}\\\\s*)\\\\)$`\n      )\n    )\n    ?.slice(1, 5)\n    .map(parseComponent);\n\n/**\n * parses a color string into rgba components.\n * @param str\n */\nexport const parseColorString = (\n  str: string\n): [number, number, number, number?] | null => {\n  const result = [parseHexRgba, parseShorthandHex, parseRgb, parseRgba].reduce<\n    (number | undefined)[] | undefined\n  >((result, parse) => result || parse(str), undefined);\n  return Array.isArray(result) &&\n    result.slice(0, 3).every((c) => Number.isInteger(c))\n    ? (result as [number, number, number, number?])\n    : null;\n};\n","import { parseColorString } from \"./parseColorString\";\n\n/**\n * A Color class resembling AWT Color\n */\nexport class Color {\n  public readonly r: number;\n  public readonly g: number;\n  public readonly b: number;\n  public readonly a: number;\n\n  private static readonly FACTOR = 0.7;\n\n  constructor(r: number, g: number, b: number, a?: number);\n  constructor(rgba: string);\n  constructor(rgba: Color);\n  constructor(\n    rgba: string | number | Color,\n    g?: number,\n    b?: number,\n    a: number = 255\n  ) {\n    let r: number;\n    if (typeof rgba === \"string\") {\n      [r = NaN, g = NaN, b = NaN, a = 255] = parseColorString(rgba) || [];\n    } else if (rgba instanceof Color) {\n      [r, g, b, a] = [rgba.r, rgba.g, rgba.b, rgba.a];\n    } else {\n      r = rgba;\n    }\n    this.r = r;\n    this.g = g!;\n    this.b = b!;\n    this.a = a < 1 ? Math.round(a * 255) : a;\n  }\n\n  isValid() {\n    return (\n      Number.isInteger(this.r) &&\n      Number.isInteger(this.g) &&\n      Number.isInteger(this.b) &&\n      Number.isInteger(this.a)\n    );\n  }\n\n  /**\n   * Extra method for changing transparency\n   */\n  withTransparency(alpha: number) {\n    return new Color(this.r, this.g, this.b, alpha);\n  }\n\n  brighter() {\n    let { r, g, b, a: alpha } = this;\n    const int = Math.floor,\n      FACTOR = Color.FACTOR;\n    // The rest is copy paste of java.awt.Color (only `int i` is changed to `let i` :D)\n    let i = int(1.0 / (1.0 - FACTOR));\n    if (r == 0 && g == 0 && b == 0) {\n      return new Color(i, i, i, alpha);\n    }\n    if (r > 0 && r < i) r = i;\n    if (g > 0 && g < i) g = i;\n    if (b > 0 && b < i) b = i;\n\n    return new Color(\n      Math.min(int(r / FACTOR), 255),\n      Math.min(int(g / FACTOR), 255),\n      Math.min(int(b / FACTOR), 255),\n      alpha\n    );\n  }\n\n  darker() {\n    const FACTOR = Color.FACTOR;\n    const int = Math.floor;\n\n    return new Color(\n      Math.max(int(this.r * FACTOR), 0),\n      Math.max(int(this.g * FACTOR), 0),\n      Math.max(int(this.b * FACTOR), 0),\n      this.a\n    );\n  }\n\n  static brighter(color: string): string {\n    // note: we can't type args simply with ConstructorParameters<typeof Color>.\n    // see more: https://github.com/microsoft/TypeScript/issues/37079\n    return new Color(color).brighter().toString();\n  }\n\n  blend(colorOrColorString: Color | string) {\n    const color =\n      typeof colorOrColorString === \"string\"\n        ? new Color(colorOrColorString)\n        : colorOrColorString;\n    const getBlendedValue = (component: \"r\" | \"g\" | \"b\") =>\n      Math.round(\n        (color.a / 255) * color[component] +\n          (this.a / 255) * (1 - color.a / 255) * this[component]\n      );\n    return new Color(\n      getBlendedValue(\"r\"),\n      getBlendedValue(\"g\"),\n      getBlendedValue(\"b\")\n    );\n  }\n\n  toString() {\n    const toString = (component: number) =>\n      Number.isNaN(component) ? \"\" : component.toString(16).padStart(2, \"0\");\n    const r = toString(this.r);\n    const g = toString(this.g);\n    const b = toString(this.b);\n    const a = this.a === 255 ? \"\" : toString(this.a);\n    return `#${r}${g}${b}${a}`;\n  }\n}\n","import * as styledComponents from \"styled-components\";\nimport { ThemedStyledComponentsModule } from \"styled-components\";\nimport { Theme } from \"./Theme\";\nimport { KnownThemePropertyPath } from \"./Theme/types\";\n\ntype JuiStyledComponentsModule = ThemedStyledComponentsModule<\n  Theme<KnownThemePropertyPath>\n>;\n\nexport const styled =\n  styledComponents.default as JuiStyledComponentsModule[\"default\"];\nexport const useTheme =\n  styledComponents.useTheme as JuiStyledComponentsModule[\"useTheme\"];\nexport const css = styledComponents.css as JuiStyledComponentsModule[\"css\"];\nexport const ThemeConsumer =\n  styledComponents.ThemeConsumer as JuiStyledComponentsModule[\"ThemeConsumer\"];\n","import React, { useRef } from \"react\";\n\n/**\n * For when a component needs to forward ref, but it too needs to use the same ref. Since forwarded ref can be in form\n * of a callback too, this will normalize it as a RefObject.\n * NOTE: Should we keep the ref in state because of edge cases?\n */\nexport default function useForwardedRef<T>(\n  forwardedRef: React.Ref<T>\n): React.RefObject<T> {\n  const innerRef = useRef<T>(null);\n  React.useEffect(() => {\n    if (!forwardedRef) {\n      return;\n    }\n\n    if (typeof forwardedRef === \"function\") {\n      forwardedRef(innerRef.current);\n    } else {\n      (forwardedRef as React.MutableRefObject<T | null>).current =\n        innerRef.current;\n    }\n  });\n\n  return innerRef;\n}\n","import React, { useEffect, useMemo } from \"react\";\nimport BrowserOnly from \"@docusaurus/BrowserOnly\";\n\nimport darculaTheme from \"../../../jui/themes/darcula.theme.json\";\nimport highContrastTheme from \"../../../jui/themes/HighContrast.theme.json\";\nimport lightTheme from \"../../../jui/themes/intellijlaf.theme.json\";\nimport { Theme, ThemeProvider } from \"../../../jui/src\";\n\nexport type ExampleContextThemeName = \"light\" | \"darcula\" | \"highContrast\";\n\nexport const ExampleContext: React.FC<{\n  themeName?: ExampleContextThemeName;\n  children?: React.ReactNode;\n}> = ({ children, themeName = \"darcula\" }) => {\n  const themeJson = (\n    {\n      light: lightTheme,\n      highContrast: highContrastTheme,\n      darcula: darculaTheme,\n    } as const\n  )[themeName];\n\n  // IMPORTANT: passing a function that returns Theme is crucial in get it working. Otherwise, ThemeProvider will try\n  // to \"merge\" themes, and the end result is an POJO, with prototype link lost.\n  // @ts-expect-error ThemeJson type is not accurate ATM.\n  const theme = useMemo(() => new Theme(themeJson), [themeJson]);\n\n  useFixDocusaurusStyleBleeds();\n  return (\n    <BrowserOnly fallback={<>Loading...</>}>\n      {() => <ThemeProvider theme={theme}>{children}</ThemeProvider>}\n    </BrowserOnly>\n  );\n};\n\n/**\n * TODO: add a surrounding UI for examples, with tools for theme selection for example.\n */\nexport const Example: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => (\n  <ExampleContext>\n    <div\n      // @ts-expect-error: css prop is not working for some reason\n      css={`\n        background: ${({ theme }: { theme: Theme }) =>\n          theme.color(\"*.background\")};\n      `}\n    >\n      {children}\n    </div>\n  </ExampleContext>\n);\n\nexport const withExampleContext = <P extends {}>(\n  Component: React.ComponentType<P>\n) => {\n  function WithExampleContext(props: P) {\n    return (\n      <ExampleContext>\n        <Component {...props} />\n      </ExampleContext>\n    );\n  }\n\n  return WithExampleContext;\n};\n\nconst useFixDocusaurusStyleBleeds = () => {\n  useEffect(() => {\n    const FLAG_CLASSNAME = \"example-context-patch\";\n    if (!document.body.classList.contains(FLAG_CLASSNAME)) {\n      try {\n        undoUseKeyboardNavigation();\n        document.body.classList.add(FLAG_CLASSNAME);\n      } catch (e) {\n        console.error(\"Could not undo useKeyboardNavigation\");\n      }\n    }\n  }, []);\n};\n\n/**\n * Reverts the \"improvement\" [useKeyboardNavigation][1] does :|\n *\n * [1]: https://github.com/facebook/docusaurus/blob/f87a3ead4664b301901c12466cb2c82cd95d141b/packages/docusaurus-theme-common/src/hooks/useKeyboardNavigation.ts#L14\n */\nfunction undoUseKeyboardNavigation() {\n  document\n    .querySelectorAll<HTMLLinkElement>(\"link[rel=stylesheet]\")\n    .forEach((linkEl) => {\n      if (linkEl.sheet) {\n        for (let i = 0; i < linkEl.sheet.cssRules.length; i++) {\n          const rule = linkEl.sheet.cssRules.item(i);\n          if (\n            rule?.cssText?.startsWith(\"body:not(.navigation-with-keyboard)\")\n          ) {\n            linkEl.sheet.deleteRule(i); // We can change the rule to only disable it within the boundary of example\n          }\n        }\n      }\n    });\n}\n","import React, { ComponentProps } from \"react\";\nimport BrowserOnly from \"@docusaurus/BrowserOnly\";\n\nimport { ExampleContext } from \"./ExampleContext\";\n\nconst App = React.lazy(() => import(\"../../../example-app/src/App\"));\n\nexport const LazyExampleApp = ({\n  themeName = \"darcula\",\n  children = (i) => i,\n  ...otherProps\n}: {\n  themeName?: ComponentProps<typeof ExampleContext>[\"themeName\"];\n  children?: (app: React.ReactNode) => React.ReactNode;\n} & ComponentProps<typeof App>) => {\n  return (\n    <BrowserOnly>\n      {() => (\n        <ExampleContext themeName={themeName}>\n          <React.Suspense fallback=\"loading...\">\n            {children(<App {...otherProps} />)}\n          </React.Suspense>\n        </ExampleContext>\n      )}\n    </BrowserOnly>\n  );\n};\n","import React, { ComponentProps, useState } from \"react\";\nimport Link from \"@docusaurus/Link\";\nimport { Color, PlatformIcon, styled } from \"@intellij-platform/core\";\nimport {\n  ExampleContext,\n  ExampleContextThemeName,\n} from \"../components/ExampleContext\";\nimport { LazyExampleApp } from \"../components/LazyExampleApp\";\n\nconst ColumnContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background: ${({ theme }) => theme.color(\"*.background\")};\n`;\n\nconst StyledBanner = styled.div`\n  background: ${({ theme }) =>\n    new Color(theme.color(\"*.background\")).darker().toString()};\n  color: ${({ theme }) => theme.color(\"*.foreground\")};\n  display: flex;\n`;\n\nconst BannerLinkButton = styled(Link)`\n  color: inherit;\n  padding: 0 6px;\n  height: 100%;\n  display: inline-flex;\n  align-items: center;\n  &:hover {\n    background: ${({ theme }) =>\n      theme.color(\"ActionButton.hoverBackground\", \"#DFDFDF\")};\n    color: inherit;\n    text-decoration: none;\n  }\n`;\n\nconst StyledSpacer = styled.span`\n  flex: 1;\n`;\n\nexport default function ExampleAppPage(): JSX.Element {\n  const [themeName, setThemeName] =\n    useState<ComponentProps<typeof ExampleContext>[\"themeName\"]>(\"darcula\");\n\n  return (\n    <LazyExampleApp themeName={themeName} autoCloneSampleRepo>\n      {(app) => (\n        <ColumnContainer>\n          <StyledBanner>\n            <BannerLinkButton to=\"/\">\n              <PlatformIcon icon=\"actions/exit.svg\" />\n              &nbsp; Quit example app\n            </BannerLinkButton>\n            <StyledSpacer />\n            <label>\n              Theme: &nbsp;\n              <select\n                value={themeName}\n                onChange={({ target }) =>\n                  setThemeName(target.value as ExampleContextThemeName)\n                }\n              >\n                <option value=\"darcula\">Darcula</option>\n                <option value=\"light\">Light</option>\n                <option value=\"highContrast\">High Contrast</option>\n              </select>\n            </label>\n          </StyledBanner>\n          {app}\n        </ColumnContainer>\n      )}\n    </LazyExampleApp>\n  );\n}\n"],"names":["ItemStateContext","React","amendName","iconNameOrPath","amendment","name","ext","split","getPlatformIconPath","relativePath","startsWith","slice","PlatformIcon","_ref","forwardedRef","icon","darkIcon","props","ref","useForwardedRef","iconName","useTheme","dark","getDarkPath","path","darkPath","useSvgIcon","fallbackPath","StyledIconWrapper","_extends","__docgenInfo","DEFAULT_ICON_SIZE","styled","span","size","_ref2","_ref3","role","undefined","theme","itemState","useContext","selected","isSelected","isContainerFocused","useEffect","unmounted","async","console","error","current","ariaBusy","svg","getSvgIcon","catch","e","finally","element","querySelector","remove","svgElement","document","createElement","appendChild","outerHTML","randomPostfix","Math","random","toFixed","idMatches","matchAll","reduce","modifiedSvg","_","id","newId","replaceAll","makeIdsUnique","fetchIcon","theOld","theNew","str","replaced","replace","replacedAgain","numberPattern","parseComponent","componentStr","index","parseInt","round","min","parseFloat","parseHexRgba","match","map","i","parseShorthandHex","parseRgb","RegExp","parseRgba","Color","constructor","rgba","g","b","a","r","NaN","result","parse","Array","isArray","every","c","Number","isInteger","parseColorString","this","isValid","withTransparency","alpha","brighter","int","floor","FACTOR","darker","max","color","toString","blend","colorOrColorString","getBlendedValue","component","isNaN","padStart","styledComponents","css","ThemeConsumer","innerRef","useRef","ExampleContext","children","themeName","themeJson","light","lightTheme","highContrast","highContrastTheme","darcula","darculaTheme","useMemo","Theme","useFixDocusaurusStyleBleeds","BrowserOnly","fallback","ThemeProvider","Example","_StyledDiv","FLAG_CLASSNAME","body","classList","contains","querySelectorAll","forEach","linkEl","sheet","cssRules","length","rule","item","cssText","deleteRule","add","_styled","withConfig","displayName","componentId","App","LazyExampleApp","otherProps","ColumnContainer","div","StyledBanner","BannerLinkButton","Link","_ref4","StyledSpacer","ExampleAppPage","setThemeName","useState","autoCloneSampleRepo","app","to","value","onChange","_ref5","target"],"sourceRoot":""}