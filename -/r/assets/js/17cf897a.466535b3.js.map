{"version":3,"file":"assets/js/17cf897a.466535b3.js","mappings":"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","sources":["webpack://website/./src/components/ExampleContext.tsx","webpack://website/./docs/components/Link.mdx"],"sourcesContent":["import React, { useEffect, useMemo } from \"react\";\nimport BrowserOnly from \"@docusaurus/BrowserOnly\";\n\nimport darculaTheme from \"../../../jui/themes/darcula.theme.json\";\nimport highContrastTheme from \"../../../jui/themes/HighContrast.theme.json\";\nimport lightTheme from \"../../../jui/themes/intellijlaf.theme.json\";\nimport { Theme, ThemeProvider } from \"../../../jui/src\";\n\nexport type ExampleContextThemeName = \"light\" | \"darcula\" | \"highContrast\";\n\nexport const ExampleContext: React.FC<{\n  themeName?: ExampleContextThemeName;\n  children?: React.ReactNode;\n}> = ({ children, themeName = \"darcula\" }) => {\n  const themeJson = (\n    {\n      light: lightTheme,\n      highContrast: highContrastTheme,\n      darcula: darculaTheme,\n    } as const\n  )[themeName];\n\n  // IMPORTANT: passing a function that returns Theme is crucial in get it working. Otherwise, ThemeProvider will try\n  // to \"merge\" themes, and the end result is an POJO, with prototype link lost.\n  // @ts-expect-error ThemeJson type is not accurate ATM.\n  const theme = useMemo(() => new Theme(themeJson), [themeJson]);\n\n  useFixDocusaurusStyleBleeds();\n  return (\n    <BrowserOnly fallback={<>Loading...</>}>\n      {() => <ThemeProvider theme={theme}>{children}</ThemeProvider>}\n    </BrowserOnly>\n  );\n};\n\n/**\n * TODO: add a surrounding UI for examples, with tools for theme selection for example.\n */\nexport const Example: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => (\n  <ExampleContext>\n    <div\n      // @ts-expect-error: css prop is not working for some reason\n      css={`\n        background: ${({ theme }: { theme: Theme }) =>\n          theme.color(\"*.background\")};\n      `}\n    >\n      {children}\n    </div>\n  </ExampleContext>\n);\n\nexport const withExampleContext = <P extends {}>(\n  Component: React.ComponentType<P>\n) => {\n  function WithExampleContext(props: P) {\n    return (\n      <ExampleContext>\n        <Component {...props} />\n      </ExampleContext>\n    );\n  }\n\n  return WithExampleContext;\n};\n\nconst useFixDocusaurusStyleBleeds = () => {\n  useEffect(() => {\n    const FLAG_CLASSNAME = \"example-context-patch\";\n    if (!document.body.classList.contains(FLAG_CLASSNAME)) {\n      try {\n        undoUseKeyboardNavigation();\n        document.body.classList.add(FLAG_CLASSNAME);\n      } catch (e) {\n        console.error(\"Could not undo useKeyboardNavigation\");\n      }\n    }\n  }, []);\n};\n\n/**\n * Reverts the \"improvement\" [useKeyboardNavigation][1] does :|\n *\n * [1]: https://github.com/facebook/docusaurus/blob/f87a3ead4664b301901c12466cb2c82cd95d141b/packages/docusaurus-theme-common/src/hooks/useKeyboardNavigation.ts#L14\n */\nfunction undoUseKeyboardNavigation() {\n  document\n    .querySelectorAll<HTMLLinkElement>(\"link[rel=stylesheet]\")\n    .forEach((linkEl) => {\n      if (linkEl.sheet) {\n        for (let i = 0; i < linkEl.sheet.cssRules.length; i++) {\n          const rule = linkEl.sheet.cssRules.item(i);\n          if (\n            rule?.cssText?.startsWith(\"body:not(.navigation-with-keyboard)\")\n          ) {\n            linkEl.sheet.deleteRule(i); // We can change the rule to only disable it within the boundary of example\n          }\n        }\n      }\n    });\n}\n","\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n/* @jsxFrag React.Fragment */\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n\n\nexport const frontMatter = {};\nexport const contentTitle = 'Link';\nexport const metadata = {\n  \"unversionedId\": \"components/Link\",\n  \"id\": \"components/Link\",\n  \"title\": \"Link\",\n  \"description\": \"Link component implementation. It uses a focusable interactive span\",\n  \"source\": \"@site/docs/components/Link.mdx\",\n  \"sourceDirName\": \"components\",\n  \"slug\": \"/components/Link\",\n  \"permalink\": \"/jui/-/r/docs/components/Link\",\n  \"draft\": false,\n  \"editUrl\": \"https://github.com/alirezamirian/jui/edit/master/packages/website/docs/components/Link.mdx\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"frontMatter\": {},\n  \"sidebar\": \"tutorialSidebar\",\n  \"previous\": {\n    \"title\": \"LabeledControlsAlignmentProvider\",\n    \"permalink\": \"/jui/-/r/docs/components/LabeledControlsAlignmentProvider\"\n  },\n  \"next\": {\n    \"title\": \"List\",\n    \"permalink\": \"/jui/-/r/docs/components/List\"\n  }\n};\nexport const assets = {\n\n};\n\nimport { Example } from \"@site/src/components/ExampleContext\";\nexport const toc = [{\n  value: 'Remaining features',\n  id: 'remaining-features',\n  level: 4\n}, {\n  value: 'Live example',\n  id: 'live-example',\n  level: 3\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"link\"\n    }}>{`Link`}</h1>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://jetbrains.github.io/ui/controls/link/\"\n      }}>{`Link component`}</a>{` implementation. It uses a focusable interactive span\nwith necessary a11y attributes, and supports disabled state.`}</p>\n    <h4 {...{\n      \"id\": \"remaining-features\"\n    }}>{`Remaining features`}</h4>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}<inlineCode parentName=\"li\">{`preventFocusOnPress`}</inlineCode></li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Support for using normal html anchor link. At least external link is a use case.`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Support for icon at left and right. A few specific icons like \"externalLink\", \"ContextHelp\", or \"DropdownLink\"\nare supported in `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/JetBrains/intellij-community/blob/82f201386c3f7a339ff25fc8f3389024c8078a87/platform/platform-api/src/com/intellij/ui/components/ActionLink.kt#L60-L63\"\n        }}><inlineCode parentName=\"a\">{`ActionLink`}</inlineCode>{` implementation`}</a></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"live-example\"\n    }}>{`Live example`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live themed\",\n        \"live\": true,\n        \"themed\": true\n      }}>{`<>\n  <Link onPress={console.log}>Configure servers...</Link> <br />\n  <Link onPress={console.log} isDisabled>\n    Disabled link\n  </Link> <br />\n</>\n`}</code></pre>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n"],"names":["ExampleContext","_ref","children","themeName","themeJson","light","lightTheme","highContrast","highContrastTheme","darcula","darculaTheme","theme","useMemo","Theme","useFixDocusaurusStyleBleeds","React","BrowserOnly","fallback","ThemeProvider","Example","_ref2","_StyledDiv","useEffect","FLAG_CLASSNAME","document","body","classList","contains","querySelectorAll","forEach","linkEl","sheet","i","cssRules","length","rule","item","cssText","startsWith","deleteRule","add","e","console","error","_styled","withConfig","displayName","componentId","_ref3","color","__docgenInfo","frontMatter","contentTitle","metadata","assets","toc","value","id","level","layoutProps","MDXLayout","MDXContent","components","props","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}