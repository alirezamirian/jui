{"version":3,"file":"assets/js/4a25e0cb.1a390198.js","mappings":"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","sources":["webpack://website/../jui/src/ActionSystem/ActionGroup.tsx","webpack://website/../jui/src/ActionSystem/ActionShortcut.tsx","webpack://website/../jui/src/ActionSystem/useShortcut.ts","webpack://website/../jui/src/ActionSystem/ActionsProvider.tsx","webpack://website/../jui/src/ActionSystem/CommonActionIds.ts","webpack://website/../jui/src/ActionSystem/KeymapProvider.tsx","webpack://website/../jui/src/ActionSystem/Shortcut.ts","webpack://website/../jui/src/ActionSystem/components/ActionButton.tsx","webpack://website/../jui/src/ActionSystem/components/ActionGroupMenu.tsx","webpack://website/../jui/src/ActionSystem/components/ActionsMenu.tsx","webpack://website/../jui/src/ActionSystem/components/useCreateDefaultActionGroup.tsx","webpack://website/../jui/src/ActionSystem/defaultKeymap.tsx","webpack://website/../jui/src/ActionSystem/shortcutToString.ts","webpack://website/../jui/src/ActionSystem/useActionGroup.tsx","webpack://website/../jui/src/AlertDialog/AlertDialog.tsx","webpack://website/../jui/src/AlertDialog/useAlertDialog.tsx","webpack://website/../jui/src/Balloon/Balloon.styled.tsx","webpack://website/../jui/src/Balloon/Balloon.tsx","webpack://website/../jui/src/Balloon/BalloonManager.tsx","webpack://website/../jui/src/Balloon/StyledBalloonsStack.tsx","webpack://website/../jui/src/Button/BareButton.tsx","webpack://website/../jui/src/Button/StyledButton.tsx","webpack://website/../jui/src/Button/Button.tsx","webpack://website/../jui/src/ButtonGroup/ButtonGroup.tsx","webpack://website/../jui/src/Checkbox/Checkbox.tsx","webpack://website/../jui/src/Checkbox/CheckboxIcon.tsx","webpack://website/../jui/src/CollectionSpeedSearch/CollectionSpeedSearchContext.tsx","webpack://website/../jui/src/CollectionSpeedSearch/HighlightedTextValue.tsx","webpack://website/../jui/src/CollectionSpeedSearch/useCollectionSpeedSearchResult.ts","webpack://website/../jui/src/CollectionSpeedSearch/createSpeedSearchSelectionManager.ts","webpack://website/../jui/src/CollectionSpeedSearch/useCollectionSpeedSearch.ts","webpack://website/../jui/src/CollectionSpeedSearch/createSpeedSearchKeyboardDelegate.ts","webpack://website/../jui/src/Collections/Divider.ts","webpack://website/../jui/src/Collections/Item.ts","webpack://website/../jui/src/Collections/ItemLayout.tsx","webpack://website/../jui/src/Collections/ItemStateContext.tsx","webpack://website/../jui/src/Collections/useCollectionAutoScroll.ts","webpack://website/../jui/src/Collections/useCollectionRef.ts","webpack://website/../jui/src/Collections/useCollectionSearchInput.ts","webpack://website/../jui/src/Icon/AutoHoverPlatformIcon.tsx","webpack://website/../jui/src/Icon/LafIcon.tsx","webpack://website/../jui/src/Icon/PlatformIcon.tsx","webpack://website/../jui/src/Icon/StyledIconWrapper.tsx","webpack://website/../jui/src/Icon/useSvgIcon.tsx","webpack://website/../jui/src/IconButton/IconButton.tsx","webpack://website/../jui/src/IconButtonWithMenu/IconButtonWithMenu.tsx","webpack://website/../jui/src/Img.tsx","webpack://website/../jui/src/InputField/Input.tsx","webpack://website/../jui/src/InputField/InputField.tsx","webpack://website/../jui/src/Label/StyledLabel.ts","webpack://website/../jui/src/Link/StyledLink.tsx","webpack://website/../jui/src/Link/Link.tsx","webpack://website/../jui/src/List/List.tsx","webpack://website/../jui/src/List/ListContext.tsx","webpack://website/../jui/src/List/ListDivider.tsx","webpack://website/../jui/src/List/ListItem.tsx","webpack://website/../jui/src/List/StyledList.tsx","webpack://website/../jui/src/List/StyledListItem.tsx","webpack://website/../jui/src/List/useList.ts","webpack://website/../jui/src/List/useSelectableList.ts","webpack://website/../jui/src/List/useListState.ts","webpack://website/../jui/src/List/StyledListSectionHeader.tsx","webpack://website/../jui/src/List/renderWrapper.tsx","webpack://website/../jui/src/List/useListVirtualizer.tsx","webpack://website/../jui/src/Menu/ContextMenuContainer.tsx","webpack://website/../jui/src/Menu/useContextMenu.tsx","webpack://website/../jui/src/Collections/patchCollectionProps.tsx","webpack://website/../jui/src/Menu/Menu.tsx","webpack://website/../jui/src/Menu/MenuItem.tsx","webpack://website/../jui/src/Menu/MenuItemLayout.tsx","webpack://website/../jui/src/Menu/MenuOverlay.tsx","webpack://website/../jui/src/Menu/MenuTrigger.tsx","webpack://website/../jui/src/Menu/SpeedSearchMenu.tsx","webpack://website/../jui/src/Menu/StyledMenu.tsx","webpack://website/../jui/src/Menu/StyledMenuItem.tsx","webpack://website/../jui/src/Menu/Submenu.tsx","webpack://website/../jui/src/Menu/_useSubmenu.ts","webpack://website/../jui/src/Menu/_useSubmenuState.tsx","webpack://website/../jui/src/Menu/MenuSection.tsx","webpack://website/../jui/src/Menu/renderMenuNodes.tsx","webpack://website/../jui/src/Mnemonic/MnemonicTrigger.tsx","webpack://website/../jui/src/Overlay/UNSAFE_React17SuspenseFix.tsx","webpack://website/../jui/src/ModalWindow/ModalWindow.tsx","webpack://website/../jui/src/ModalWindow/WindowContext.ts","webpack://website/../jui/src/ModalWindow/WindowFooter.tsx","webpack://website/../jui/src/ModalWindow/WindowHeader.tsx","webpack://website/../jui/src/ModalWindow/WindowLayout.tsx","webpack://website/../jui/src/ModalWindow/WindowManager.tsx","webpack://website/../jui/src/Overlay/Overlay.tsx","webpack://website/../jui/src/Overlay/OverlayInteractionHandler.tsx","webpack://website/../jui/src/Overlay/OverlayMoveHandle.tsx","webpack://website/../jui/src/Overlay/OverlayResizeHandles.tsx","webpack://website/../jui/src/Overlay/bounds-helpers.tsx","webpack://website/../jui/src/utils/useDebounce.ts","webpack://website/../jui/src/Overlay/useContentSize.tsx","webpack://website/../jui/src/Overlay/useResizableMovableOverlay.tsx","webpack://website/../jui/src/Popup/Popup.tsx","webpack://website/../jui/src/Popup/_useDialog.ts","webpack://website/../jui/src/utils/mergeNonNullProps.tsx","webpack://website/../jui/src/Popup/PopupContext.tsx","webpack://website/../jui/src/Popup/PopupHeader.tsx","webpack://website/../jui/src/Popup/PopupLayout.tsx","webpack://website/../jui/src/Popup/PopupManager.tsx","webpack://website/../jui/src/Popup/PopupTrigger.tsx","webpack://website/../jui/src/Popup/StyledPopupHint.tsx","webpack://website/../jui/src/ProgressBar/ProgressBar.tsx","webpack://website/../jui/src/ProgressBar/ProgressBarStopButton.tsx","webpack://website/../jui/src/ResizableView.tsx","webpack://website/../jui/src/Resizer/BottomResizer.tsx","webpack://website/../jui/src/Resizer/HorizontalResizer.tsx","webpack://website/../jui/src/Resizer/LeftResizer.tsx","webpack://website/../jui/src/Resizer/RightResizer.tsx","webpack://website/../jui/src/Resizer/TopResizer.tsx","webpack://website/../jui/src/Resizer/VerticalResizer.tsx","webpack://website/../jui/src/Resizer/useResizer.ts","webpack://website/../jui/src/SearchInput/SearchInput.tsx","webpack://website/../jui/src/SpeedSearch/SpeedSearchInput.tsx","webpack://website/../jui/src/SpeedSearch/SpeedSearchPopup.tsx","webpack://website/../jui/src/SpeedSearch/useGhostInput.tsx","webpack://website/../jui/src/SpeedSearch/useSpeedSearch.tsx","webpack://website/../jui/src/StatusBar/StatusBar.tsx","webpack://website/../jui/src/StatusBar/StatusBarWidget.tsx","webpack://website/../jui/src/StyledSeparator.tsx","webpack://website/../jui/src/Tabs/DebuggerTabs/DebuggerTabContent.tsx","webpack://website/../jui/src/Tabs/DebuggerTabs/StyledDebuggerTab.ts","webpack://website/../jui/src/Tabs/DebuggerTabs/DebuggerTabs.tsx","webpack://website/../jui/src/Tabs/EditorTabs/EditorTabContent.tsx","webpack://website/../jui/src/Tabs/EditorTabs/StyledEditorTab.ts","webpack://website/../jui/src/Tabs/EditorTabs/StyledEditorTabs.ts","webpack://website/../jui/src/Tabs/EditorTabs/EditorTabs.tsx","webpack://website/../jui/src/Tabs/StyledDefaultTab.ts","webpack://website/../jui/src/Tabs/StyledDefaultTabs.ts","webpack://website/../jui/src/Tabs/TabCloseButton.tsx","webpack://website/../jui/src/Tabs/TabContentLayout.tsx","webpack://website/../jui/src/Tabs/TabItem.tsx","webpack://website/../jui/src/Tabs/TabTheme.ts","webpack://website/../jui/src/Tabs/StyledHorizontalOverflowShadows.tsx","webpack://website/../jui/src/Tabs/Tab.tsx","webpack://website/../jui/src/Tabs/Tabs.tsx","webpack://website/../jui/src/Tabs/useHasOverflow.tsx","webpack://website/../jui/src/Tabs/TabsOverflowMenu.tsx","webpack://website/../jui/src/Tabs/ToolWindowTabs/ToolWindowTabContent.tsx","webpack://website/../jui/src/Tabs/ToolWindowTabs/StyledToolWindowTab.ts","webpack://website/../jui/src/Tabs/ToolWindowTabs/StyledToolWindowTabs.ts","webpack://website/../jui/src/Tabs/ToolWindowTabs/ToolWindowTabs.tsx","webpack://website/../jui/src/TextRange.ts","webpack://website/../jui/src/TextWithHighlights/TextWithHighlights.tsx","webpack://website/../jui/src/Theme/parseColorString.ts","webpack://website/../jui/src/Theme/Color.ts","webpack://website/../jui/src/ThreeViewSplitter/ThreeViewSplitter.tsx","webpack://website/../jui/src/ToolWindows/FloatView.tsx","webpack://website/../jui/src/ToolWindows/FloatToolWindows.tsx","webpack://website/../jui/src/ToolWindows/MovableToolWindowStripeProvider.tsx","webpack://website/../jui/src/ToolWindows/StyledToolWindowOuterLayout.tsx","webpack://website/../jui/src/ToolWindows/ToolWindowsState/ToolWindowsLayoutState.ts","webpack://website/../jui/src/ToolWindows/createGetDropPosition.tsx","webpack://website/../jui/src/ToolWindows/StyledToolWindowStripeButton.tsx","webpack://website/../jui/src/ToolWindows/StyledToolWindowStripe.tsx","webpack://website/../jui/src/ToolWindows/useElementMove.tsx","webpack://website/../jui/src/ToolWindows/findEffectiveBackgroundColor.tsx","webpack://website/../jui/src/ToolWindows/ToolWindowStripe.tsx","webpack://website/../jui/src/ToolWindows/UndockSide.tsx","webpack://website/../jui/src/ToolWindows/ToolWindows.tsx","webpack://website/../jui/src/ToolWindows/useOnFocusLost.tsx","webpack://website/../jui/src/ToolWindows/ToolWindowsState/ToolWindowStateProvider.tsx","webpack://website/../jui/src/ToolWindows/ToolWindowsState/ToolWindowsState.ts","webpack://website/../jui/src/ToolWindows/utils.ts","webpack://website/../jui/src/ToolWindowsImpl/useToolWindow.tsx","webpack://website/../jui/src/ToolWindowsImpl/ToolWindowSettingsIconMenu.tsx","webpack://website/../jui/src/ToolWindowsImpl/DefaultToolWindowHeader.tsx","webpack://website/../jui/src/ToolWindowsImpl/DefaultToolWindow.tsx","webpack://website/../jui/src/ToolWindowsImpl/DefaultToolWindowToolbarButton.tsx","webpack://website/../jui/src/ToolWindowsImpl/DefaultToolWindows.tsx","webpack://website/../jui/src/ToolWindowsImpl/MultiViewToolWindow.tsx","webpack://website/../jui/src/ToolWindowsImpl/ToolWindowActionIds.ts","webpack://website/../jui/src/ToolWindowsImpl/useToolWindowActions.tsx","webpack://website/../jui/src/ToolWindowsImpl/useToolWindowsActions.tsx","webpack://website/../jui/src/Toolbar/Toolbar.tsx","webpack://website/../jui/src/Tooltip/ActionHelpTooltip.tsx","webpack://website/../jui/src/Tooltip/ActionTooltip.tsx","webpack://website/../jui/src/Tooltip/HelpTooltip.tsx","webpack://website/../jui/src/Tooltip/PositionedTooltipTrigger.tsx","webpack://website/../jui/src/Tooltip/Tooltip.tsx","webpack://website/../jui/src/Tooltip/TooltipContext.tsx","webpack://website/../jui/src/Tooltip/TooltipPointer.tsx","webpack://website/../jui/src/Tooltip/TooltipTrigger.tsx","webpack://website/../jui/src/Tooltip/TooltipTriggerAndOverlay.tsx","webpack://website/../jui/src/Tooltip/ValidationTooltip.tsx","webpack://website/../jui/src/Tooltip/tooltip-styles.ts","webpack://website/../jui/src/Tree/SpeedSearchTree/SpeedSearchTreeNode.tsx","webpack://website/../jui/src/Tree/SpeedSearchTree/SpeedSearchTree.tsx","webpack://website/../jui/src/Tree/SpeedSearchTree/useSpeedSearchTree.ts","webpack://website/../jui/src/Tree/StyledTree.tsx","webpack://website/../jui/src/Tree/TreeContext.tsx","webpack://website/../jui/src/Tree/TreeKeyboardDelegate.tsx","webpack://website/../jui/src/Tree/TreeNodeIcon.tsx","webpack://website/../jui/src/Tree/useTreeNodeToggleButton.tsx","webpack://website/../jui/src/Tree/StyledTreeNode.tsx","webpack://website/../jui/src/Tree/TreeNode.tsx","webpack://website/../jui/src/Tree/useTreeNode.tsx","webpack://website/../jui/src/Tree/useSelectableTree.tsx","webpack://website/../jui/src/Collections/useCollectionCacheInvalidation.ts","webpack://website/../jui/src/Tree/__copied__TreeCollection.ts","webpack://website/../jui/src/Tree/getSingleChildrenKeys.ts","webpack://website/../jui/src/Tree/TreeSelectionManager.ts","webpack://website/../jui/src/Tree/useTreeState.ts","webpack://website/../jui/src/Tree/useTreeRef.tsx","webpack://website/../jui/src/Tree/useTreeVirtualizer.tsx","webpack://website/../jui/src/TreeActions/useTreeActions.tsx","webpack://website/../jui/src/TreeCheckboxes/NestedSelection.ts","webpack://website/../jui/src/TreeCheckboxes/SpeedSearchTreeWithCheckboxes.tsx","webpack://website/../jui/src/TreeCheckboxes/TreeNodeCheckbox.tsx","webpack://website/../jui/src/TreeCheckboxes/useNestedSelectionState.ts","webpack://website/../jui/src/VariableWidthListLayout.tsx","webpack://website/../jui/src/utils/string-utils.ts","webpack://website/../jui/src/minusculeMatch.ts","webpack://website/../jui/src/selection/useSelectableCollection.ts","webpack://website/../jui/src/selection/useSelectableItem.tsx","webpack://website/../jui/src/style-constants.ts","webpack://website/../jui/src/styled.ts","webpack://website/../jui/src/utils/FocusScope.tsx","webpack://website/../jui/src/utils/array-utils.ts","webpack://website/../jui/src/utils/interaction-utils/textSelection.ts","webpack://website/../jui/src/utils/interaction-utils/useMove.tsx","webpack://website/../jui/src/utils/keyboard-utils.ts","webpack://website/../jui/src/utils/overflow-utils/OverflowObserver.ts","webpack://website/../jui/src/utils/overflow-utils/useOverflowObserver.tsx","webpack://website/../jui/src/utils/tree-utils.ts","webpack://website/../jui/src/utils/useContextOrThrow.tsx","webpack://website/../jui/src/utils/useEventCallback.ts","webpack://website/../jui/src/utils/useFocusForwarder.ts","webpack://website/../jui/src/utils/useForwardedRef.ts","webpack://website/../jui/src/utils/useLatest.ts","webpack://website/../jui/src/utils/useMouseEventOverlayPosition.tsx","webpack://website/../jui/src/utils/usePrevious.ts","webpack://website/../jui/src/utils/immutableSet.ts","webpack://website/../jui/src/utils/useSet.ts","webpack://website/../../node_modules/markdown-to-jsx/dist/index.modern.js","webpack://website/./src/components/ApiDescription.tsx","webpack://website/./src/components/ExampleContext.tsx","webpack://website/./src/components/RefToIntellijPlatform.tsx","webpack://website/./src/components/component-linking.tsx","webpack://website/./src/theme/CodeBlock/Expandable.tsx","webpack://website/./src/theme/CodeBlock/Playground.tsx","webpack://website/../jui/src/SpeedSearch/SpeedSearchContainer.tsx","webpack://website/../jui/src/CollectionSpeedSearch/CollectionSpeedSearchContainer.tsx","webpack://website/../jui/src/List/SpeedSearchList/useSpeedSearchList.ts","webpack://website/../jui/src/List/SpeedSearchList/SpeedSearchList.tsx","webpack://website/../jui/src/Icon/StyledIconLiveIndicator.tsx","webpack://website/../jui/src/SpeedSearch/SpeedSearch.tsx","webpack://website/../jui/src/Tree/Tree.tsx","webpack://website/../jui/src/ProgressBar/ProgressBarPauseButton.tsx","webpack://website/../jui/src/Overlay/Popover.tsx","webpack://website/../jui/src/Dropdown/StatelessListBox.tsx","webpack://website/../jui/src/Dropdown/Dropdown.tsx","webpack://website/./src/theme/ReactLiveScope/index.js","webpack://website/./src/theme/Playground/style-overrides.module.css","webpack://website/./src/theme/CodeBlock/index.js","webpack://website/./src/theme/MDXComponents/Code.tsx","webpack://website/./src/theme/MDXComponents/index.ts","webpack://website/./docs/guides/Theming.mdx"],"sourcesContent":["import {\n  Action,\n  ActionDefinition,\n} from \"@intellij-platform/core/ActionSystem/Action\";\n\nexport type ActionInResolvedGroup = Action & { parent: ResolvedActionGroup };\n\n/**\n * Different ways to show a group of actions in a menu.\n * - `submenu`: renders children as submenu (corresponding, in the reference impl, to `isPopup` property of ActionGroup\n *   being set to `true` and 'SUPPRESS_SUBMENU' clientProperty not being set)\n * - `none`: renders the action group as a simple menu item, not rendering its children at all.\n *   The action group will be performed, which typically opens a popup (see {@link useCreateDefaultActionGroup}),\n *   showing the children.\n *   (corresponding, in the reference impl, to `isPopup` property and 'SUPPRESS_SUBMENU' clientProperty being set\n *   to true on the ActionGroup)\n * - `section`: renders children in a section with divider, but without section title\n * - `titledSection`: renders children in a section with divider and title.\n */\ntype ActionGroupMenuPresentation =\n  | \"section\"\n  | \"titledSection\"\n  | \"none\"\n  | \"submenu\";\n\nexport interface MutableActionGroup extends Action {\n  children: Action[];\n  /**\n   * Whether the action group is searchable. See {@link getAvailableActionsFor}.\n   */\n  isSearchable?: boolean;\n  /**\n   * How the action group should be rendered, in menus.\n   */\n  menuPresentation?: ActionGroupMenuPresentation;\n}\nexport type ActionGroup = Readonly<MutableActionGroup>;\n\nexport interface ResolvedActionGroup extends ActionGroup {\n  parent: ResolvedActionGroup | null;\n  children: ActionInResolvedGroup[];\n}\nexport interface ActionGroupDefinition extends ActionDefinition {\n  children: ActionDefinition[]; // Should DividerItem be supported first-class here?\n  /**\n   * Defines how the action group should be represented in menus.\n   * @default 'submenu'\n   * @see ActionGroupMenuPresentation\n   */\n  menuPresentation?: ActionGroupMenuPresentation;\n}\n\nexport function isInResolvedActionGroup(\n  action: Action\n): action is ActionInResolvedGroup {\n  return \"parent\" in action;\n}\nexport function isActionGroup(action: Action): action is ActionGroup {\n  return \"children\" in action; // probably better to use a discriminator field like `type`\n}\n\nexport function isResolvedActionGroup<T extends Action>(\n  action: Action\n): action is ResolvedActionGroup {\n  return \"children\" in action && \"parent\" in action; // probably better to use a discriminator field like `type`\n}\n\nexport function isActionGroupDefinition(\n  action: ActionDefinition\n): action is ActionGroupDefinition {\n  return \"children\" in action; // probably better to use a discriminator field like `type`\n}\n","import React from \"react\";\nimport { useKeymap } from \"./KeymapProvider\";\nimport { shortcutToString } from \"./shortcutToString\";\n\n/**\n * Renders the first keyboard shortcut for the action specified by {@param actionId}, based on the keymap context.\n * if {@param children} is provided, treats it as a render function that receives the shortcut string.\n */\nexport const ActionShortcut = ({\n  actionId,\n  children,\n}: {\n  actionId: string;\n  children?: (shortcut: string) => React.ReactNode;\n}) => {\n  const getShortcut = useGetActionShortcut();\n  const shortcutString = getShortcut(actionId);\n  return (\n    <>\n      {shortcutString && (children ? children(shortcutString) : shortcutString)}\n    </>\n  );\n};\n\n/**\n * Returns a function that gets first keyboard shortcut for the action specified by `actionId`, based on the\n * keymap context.\n */\nexport const useGetActionShortcut = (): ((actionId: string) => string) => {\n  const keymap = useKeymap();\n  return (actionId: string) => {\n    const keyboardShortcut = keymap?.[actionId]?.find(\n      ({ type }) => type === \"keyboard\"\n    );\n    return keyboardShortcut ? shortcutToString(keyboardShortcut) : \"\";\n  };\n};\n","import React, { KeyboardEventHandler, useRef } from \"react\";\nimport { useEventCallback } from \"@intellij-platform/core/utils/useEventCallback\";\nimport {\n  isKeyboardShortcut,\n  KeyboardShortcut,\n  KeyStroke,\n  Shortcut,\n  supportedModifiers,\n} from \"./Shortcut\";\n\nexport function useShortcuts(\n  shortcuts: { [actionId: string]: ReadonlyArray<Shortcut> },\n  onAction: (\n    actionId: string,\n    args: {\n      event: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>;\n    }\n  ) => void | boolean,\n  {\n    useCapture = false,\n  }: {\n    /**\n     * Experimental option to determine if event handling should be done on capture phase. Useful for cases where\n     * a descendant element handles events in capture phase, and that conflicts with an action.\n     */\n    useCapture?: boolean;\n  } = {}\n) {\n  const firstKeyActivatedShortcutsRef = useRef<\n    Array<{ actionId: string; shortcut: KeyboardShortcut }>\n  >([]);\n  const secondStrokeResetTimerIdRef = useRef<number | null>(null);\n  const onKeyDown: KeyboardEventHandler<HTMLElement> = useEventCallback((e) => {\n    // TODO: repeated key downs can trigger an action repeatedly, in the original impl. Example: expand/shrink selection\n    if (isModifierOnly(e.nativeEvent) || e.repeat) {\n      return;\n    }\n    // firstKeyActivatedShortcutsRef will be re-adjusted in any case. Cleaning whatever scheduled reset\n    if (secondStrokeResetTimerIdRef.current !== null) {\n      window.clearTimeout(secondStrokeResetTimerIdRef.current);\n    }\n\n    function triggerAction(actionId: string) {\n      const result = onAction(actionId, { event: e });\n      if (result !== false) {\n        // TODO: make sure about how propagation should be stopped and/or controlled\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    }\n    // If there are keyboard shortcuts that are half way handled (first keystroke triggered already, and we are within\n    // the valid wait for the second keystroke), they should be prioritized over first keystroke matching.\n    if (firstKeyActivatedShortcutsRef.current.length > 0) {\n      firstKeyActivatedShortcutsRef.current.some(({ shortcut, actionId }) => {\n        if (isKeyMatch(shortcut.secondKeyStroke, e, true)) {\n          triggerAction(actionId);\n          return true;\n        }\n      });\n      firstKeyActivatedShortcutsRef.current = [];\n    } else {\n      const firstKeyMatches = Object.entries(shortcuts)\n        .flatMap(([actionId, shortcuts]) =>\n          shortcuts.map((shortcut) => ({ actionId, shortcut }))\n        )\n        .filter(\n          (\n            input\n          ): input is {\n            actionId: string;\n            shortcut: KeyboardShortcut;\n          } => isKeyboardShortcut(input.shortcut)\n        )\n        .filter(({ shortcut }) => isKeyMatch(shortcut.firstKeyStroke, e));\n\n      firstKeyActivatedShortcutsRef.current = firstKeyMatches.filter(\n        ({ shortcut, actionId }) => shortcut.secondKeyStroke\n      );\n\n      if (firstKeyActivatedShortcutsRef.current.length > 0) {\n        secondStrokeResetTimerIdRef.current = window.setTimeout(() => {\n          firstKeyActivatedShortcutsRef.current = [];\n        }, 2000);\n        document.addEventListener(\n          \"keydown\",\n          () => {\n            document.addEventListener(\n              \"keyup\",\n              () => {\n                firstKeyActivatedShortcutsRef.current = [];\n              },\n              { once: true }\n            );\n          },\n          //  by passing capture: true, we skip the current keydown event, since it's already passed capture phase\n          { once: true, capture: true }\n        );\n      } else if (firstKeyMatches.length > 0) {\n        triggerAction(firstKeyMatches[0].actionId);\n      }\n    }\n  });\n  const shortcutHandlerProps = {\n    /**\n     * by setting onKeyDownCapture is set instead of onKeyDown, we can prioritize action event handler over\n     * component-specific handlers. That might be useful for some components that aggressively stop propagation of\n     * events they handle, if the action is considered of higher priority compared to the conflicting component-internal\n     * functionality. So maybe an option would be in order to define whether the shortcut's event handling should be done\n     * in capture or bubbling phase.\n     * Another thing to get clarified as action system is more used, is to decide if action handler should stop\n     * propagation or not. Or should it be an option?\n     * UPDATE: Added an option to determine whether event handling should be done in capture phase. The use case is\n     * \"Find in files\" action with Cmd+Shift+O shortcut, which overlaps with some action in Monaco editor (only in .ts\n     * files). Monaco uses capture phase, and stops propagation, so unless we use capture phase, useShortcut's event\n     * handler is never called.\n     * An apposite use case is in SpeedSearchTree in tool windows, where we want Escape to be handled by speed search,\n     * and propagation stopped, if speed search is currently active. The second Escape keystroke should move focus to\n     * the editor. That wouldn't work if we unconditionally handle events in capture phase.\n     */\n    [useCapture ? \"onKeyDownCapture\" : \"onKeyDown\"]: onKeyDown,\n  };\n  return { shortcutHandlerProps };\n}\n\nconst isKeyMatch = (\n  keyStroke: KeyStroke | undefined,\n  e: React.KeyboardEvent,\n  loose?: boolean\n) =>\n  e.code === keyStroke?.code &&\n  (loose ? keyStroke.modifiers || [] : supportedModifiers).every(\n    (modifier) =>\n      e.getModifierState(modifier) ===\n      Boolean(keyStroke.modifiers?.includes(modifier))\n  );\n\nfunction isModifierOnly(event: KeyboardEvent) {\n  return event.location === 1 || event.location === 2;\n}\n","import { sortBy } from \"ramda\";\nimport React, { HTMLAttributes, useContext, useEffect, useState } from \"react\";\nimport { useEventCallback } from \"@intellij-platform/core/utils/useEventCallback\";\nimport { dfsVisit } from \"@intellij-platform/core/utils/tree-utils\";\n\nimport { Keymap, useKeymap } from \"./KeymapProvider\";\nimport { shortcutToString } from \"./shortcutToString\";\nimport { useShortcuts } from \"./useShortcut\";\nimport {\n  ActionGroup,\n  ActionInResolvedGroup,\n  isActionGroup,\n  isActionGroupDefinition,\n  MutableActionGroup,\n} from \"./ActionGroup\";\nimport {\n  Action,\n  ActionContext,\n  ActionDefinition,\n  MutableAction,\n} from \"./Action\";\n\n/**\n * Represents the properties required for the ActionsProvider component.\n */\nexport interface ActionsProviderProps {\n  /**\n   * A collection of action definitions.\n   */\n  actions: ActionDefinition[];\n  children: (args: {\n    shortcutHandlerProps: HTMLAttributes<HTMLElement>;\n  }) => React.ReactElement;\n\n  /**\n   * Experimental option to determine if event handling should be done on capture phase. Useful for cases where\n   * a descendant element handles events in capture phase, and that conflicts with an action.\n   */\n  useCapture?: boolean;\n}\n\nconst ActionsContext = React.createContext<Action[]>([]);\n\nfunction generateId() {\n  return `jui-${Math.floor(Math.random() * 10000000)}`;\n}\n\nconst ACTION_PROVIDER_ID_ATTRIBUTE = \"data-action-provider\";\nconst ACTION_PROVIDER_ID_DATA_PREFIX = \"action_provider_id_\";\nconst actionProvidersMap = new Map<string, Action[]>();\n\n/**\n * Provides a set of actions for the wrapped UI. Uses the currently provided keymap to find the shortcuts\n * for each action, and passes the necessary event handlers for the shortcuts, to the `children` render function.\n *\n * @param {Array<Action>} props.actions - The actions to be provided.\n * @param {boolean} [props.useCapture] - Specifies whether to use capture phase for event handling.\n * @param {Function} props.children - Render function that accepts shortcutHandlerProps as argument.\n */\nexport function ActionsProvider(props: ActionsProviderProps): JSX.Element {\n  const parentContext = useContext(ActionsContext);\n  const keymap = useKeymap();\n  const actions: Action[] = [];\n  dfsVisit(\n    (action: Action | null) =>\n      action && isActionGroup(action) ? action.children : null,\n    (action) => actions.push(action),\n    recursivelyCreateActions(keymap, props.actions)\n  );\n\n  const shortcuts = Object.fromEntries(\n    actions.map((action) => [action.id, action.shortcuts || []])\n  );\n  const [actionProviderId] = useState(generateId);\n\n  const { shortcutHandlerProps } = useShortcuts(\n    shortcuts,\n    (actionId, { event }) => {\n      actions\n        .find((action) => action.id === actionId)\n        ?.perform({\n          event,\n          // it's important to use target and not currentTarget\n          element: event.target instanceof Element ? event.target : null,\n        });\n    },\n    { useCapture: props.useCapture }\n  );\n\n  const allActions = [...parentContext, ...actions]; // Maybe warn overrides?\n\n  // @ts-expect-error: not sure why data-* attribute is not accepted.\n  shortcutHandlerProps[ACTION_PROVIDER_ID_ATTRIBUTE] = actionProviderId;\n  // @ts-expect-error: not sure why data-* attribute is not accepted.\n  shortcutHandlerProps[\n    `data-${ACTION_PROVIDER_ID_DATA_PREFIX}${actionProviderId}`\n  ] = \"\";\n\n  useEffect(() => {\n    actionProvidersMap.set(actionProviderId, allActions);\n  });\n  useEffect(() => {\n    return () => {\n      actionProvidersMap.delete(actionProviderId);\n    };\n  }, []);\n  return (\n    <ActionsContext.Provider value={allActions}>\n      {props.children({ shortcutHandlerProps })}\n    </ActionsContext.Provider>\n  );\n}\n\nfunction isMutableActionGroup(\n  action: MutableAction\n): action is MutableActionGroup {\n  return \"children\" in action; // probably better to use a discriminator field like `type`\n}\n\nfunction recursivelyCreateActions(\n  keymap: Keymap | null,\n  actionDefinitions: ActionDefinition[],\n  parent: ActionGroup\n): Array<ActionInResolvedGroup>;\nfunction recursivelyCreateActions(\n  keymap: Keymap | null,\n  actionDefinitions: ActionDefinition[]\n): Array<Action | ActionGroup>;\nfunction recursivelyCreateActions(\n  keymap: Keymap | null,\n  actionDefinitions: ActionDefinition[],\n  parent?: ActionGroup\n): Array<Action | ActionInResolvedGroup | ActionGroup> {\n  return actionDefinitions.map((actionDefinition: ActionDefinition): Action => {\n    const shortcuts =\n      keymap?.[actionDefinition.id] ??\n      (actionDefinition.useShortcutsOf\n        ? keymap?.[actionDefinition.useShortcutsOf]\n        : undefined);\n    const firstShortcut = shortcuts?.[0];\n    const action: MutableAction | ActionInResolvedGroup = {\n      ...actionDefinition,\n      ...(isActionGroupDefinition(actionDefinition)\n        ? { parent: parent ?? null }\n        : {}),\n      shortcuts,\n      shortcut: firstShortcut ? shortcutToString(firstShortcut) : undefined, // Maybe it should be all shortcuts?\n      perform: (context) => {\n        if (!action.isDisabled) {\n          actionDefinition.actionPerformed(\n            context || { event: null, element: null }\n          );\n        }\n      },\n    };\n    if (\n      isMutableActionGroup(action) &&\n      isActionGroupDefinition(actionDefinition)\n    ) {\n      action.children = recursivelyCreateActions(\n        keymap,\n        actionDefinition.children,\n        action\n      );\n    }\n    return action;\n  });\n}\n\n/**\n * Experimental function to get list of all actions available from a given html elements. Useful for implementing\n * action search UI.\n * @experimental\n */\nexport function getAvailableActionsFor(element: Element): Action[] {\n  const closestActionProvider = element.closest(\n    `[${ACTION_PROVIDER_ID_ATTRIBUTE}]`\n  );\n  if (closestActionProvider instanceof HTMLElement) {\n    /**\n     * NOTE: initially, only one data attribute was used to hold the action provider id. Although simpler, that approach\n     * is subject to bug in some edge cases, where multiple nested action providers are rendered, but `actionProviderProps`\n     * is merged on a single dom element. In such cases, it's important that the props from the innermost action provider\n     * is merged last, overwriting other values for data-action-provider-id.\n     * Because that's error-prone, we keep unique data attributes (`data-action_provider_id_...`} for each action\n     * provider id, and to simplify querying part, we also add a constant data attribute (data-action-provider).\n     * This way we can read all action providers applied on the same dom element. Since action providers inherit actions\n     * from parent action providers, we can reliably pick the actions from the one with the highest number of actions.\n     */\n    const actionSets = Object.keys(closestActionProvider.dataset)\n      .filter((dataKey) => dataKey.startsWith(ACTION_PROVIDER_ID_DATA_PREFIX))\n      .map((dataKey) => {\n        const id = dataKey?.replace(ACTION_PROVIDER_ID_DATA_PREFIX, \"\");\n        const actions = id && actionProvidersMap.get(id);\n        // noinspection PointlessBooleanExpressionJS\n        return actions\n          ? Object.values(actions).filter(\n              ({ isSearchable }) => isSearchable !== false\n            )\n          : [];\n      })\n      .concat();\n    return sortBy((actionSet) => -actionSet.length, actionSets)[0] || [];\n  }\n  return [];\n}\n\nexport function useActions(): Action[] {\n  return useContext(ActionsContext);\n}\n\nexport const useAction = (actionId: string): Action | null => {\n  return useActions().find(({ id }) => id === actionId) ?? null;\n};\n\nexport const usePerformAction = (): ((\n  actionId: string,\n  context?: ActionContext\n) => void) => {\n  const actions = useActions();\n  return useEventCallback((actionId: string, context?: ActionContext) => {\n    const action = actions.find(({ id }) => id === actionId);\n    if (action) {\n      action.perform(context);\n    } else {\n      console.error(\n        `An attempt to perform action with id ${actionId} failed because action was not found`\n      );\n    }\n  });\n};\n","export const CommonActionId = {\n  EXPAND_ALL: \"ExpandAll\",\n  COLLAPSE_ALL: \"CollapseAll\",\n  EXPAND_SELECTION: \"EditorSelectWord\",\n  SHRINK_SELECTION: \"EditorUnSelectWord\",\n  GO_TO_ACTION: \"GotoAction\",\n  GO_TO_FILE: \"GotoFile\",\n  SHOW_INTENTION_ACTIONS: \"ShowIntentionActions\",\n  EDIT_SOURCE: \"Documentation.EditSource\",\n  SHOW_SEARCH_HISTORY: \"ShowSearchHistory\",\n  COPY_REFERENCE: \"CopyReference\",\n  REFRESH: \"Refresh\",\n  COPY: \"$Copy\",\n  CUT: \"$Cut\",\n  PASTE: \"$Paste\",\n  DELETE: \"$Delete\",\n};\n","import React, { useContext } from \"react\";\nimport { Shortcut } from \"./Shortcut\";\nimport { defaultKeymap } from \"./defaultKeymap\";\n\nexport interface Keymap {\n  [actionId: string]: ReadonlyArray<Shortcut>;\n}\n\nexport const KeymapContext = React.createContext<Keymap | null>(defaultKeymap);\n\nexport const KeymapProvider: React.FC<{\n  keymap: Keymap;\n  children?: React.ReactNode;\n}> = ({ keymap: keymapProp, children }) => {\n  const parentKeyMap = useContext(KeymapContext);\n  const keymap = Object.assign(Object.create(parentKeyMap), keymapProp);\n  return (\n    <KeymapContext.Provider value={keymap}>{children}</KeymapContext.Provider>\n  );\n};\n\nexport const useKeymap = () => useContext(KeymapContext);\n","type ShortcutType = \"mouse\" | \"keyboard\";\nexport type KeyStrokeModifier = \"Alt\" | \"Shift\" | \"Meta\" | \"Control\";\n\nexport interface KeyStroke {\n  /**\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key}\n   */\n  code: string;\n  modifiers?: Array<KeyStrokeModifier>;\n}\n\ninterface ShortcutBase {\n  type: ShortcutType;\n}\n\ninterface MouseShortcut extends ShortcutBase {\n  type: \"mouse\";\n}\n\nexport interface KeyboardShortcut extends ShortcutBase {\n  type: \"keyboard\";\n  firstKeyStroke: KeyStroke;\n  secondKeyStroke?: KeyStroke;\n}\n\nexport type Shortcut = MouseShortcut | KeyboardShortcut;\n\nexport const isKeyboardShortcut = (\n  shortcut: Shortcut\n): shortcut is KeyboardShortcut => shortcut.type === \"keyboard\";\n\nexport const supportedModifiers: KeyStrokeModifier[] = [\n  \"Alt\",\n  \"Meta\",\n  \"Shift\",\n  \"Control\",\n];\n","import React from \"react\";\nimport { useAction } from \"@intellij-platform/core/ActionSystem/ActionsProvider\";\nimport {\n  IconButton,\n  IconButtonProps,\n} from \"@intellij-platform/core/IconButton\";\nimport { ActionTooltip, TooltipTrigger } from \"@intellij-platform/core/Tooltip\";\n\nexport const ActionButton = ({\n  actionId,\n  children,\n  ...otherProps\n}: {\n  actionId: string;\n  /**\n   * Content to show instead of `action.icon`.\n   */\n  children?: React.ReactNode;\n} & IconButtonProps): JSX.Element => {\n  const action = useAction(actionId);\n  if (!action) {\n    return <></>;\n  }\n  const actionButton = (\n    <IconButton\n      isDisabled={action.isDisabled}\n      aria-label={action.title}\n      {...otherProps}\n      onPress={(e) => {\n        action?.perform();\n        otherProps.onPress?.(e);\n      }}\n    >\n      {children || action.icon}\n    </IconButton>\n  );\n  if (action.title) {\n    return (\n      <TooltipTrigger\n        tooltip={\n          <ActionTooltip actionName={action.title} shortcut={action.shortcut} />\n        }\n      >\n        {actionButton}\n      </TooltipTrigger>\n    );\n  }\n  return actionButton;\n};\n","import React from \"react\";\nimport { type ActionGroup } from \"@intellij-platform/core/ActionSystem/ActionGroup\";\nimport { type ActionMenuProps, ActionsMenu } from \"./ActionsMenu\";\n\nexport type ActionGroupMenuProps = Omit<ActionMenuProps, \"actions\"> & {\n  actionGroup: ActionGroup;\n};\n/**\n * Renders children of an action group as a menu.\n */\nexport const ActionGroupMenu = ({\n  actionGroup,\n  ...props\n}: ActionGroupMenuProps) => {\n  return (\n    <ActionsMenu\n      aria-label={actionGroup.title}\n      actions={actionGroup.children}\n      {...props}\n    />\n  );\n};\n","import React from \"react\";\nimport { flatten } from \"ramda\";\nimport { Menu, MenuItemLayout, MenuProps } from \"@intellij-platform/core/Menu\";\nimport { Divider, Item, Section } from \"@intellij-platform/core/Collections\";\nimport { DividerItem } from \"@intellij-platform/core/Collections/Divider\"; // Importing from /Collections breaks the build for some reason\nimport { type ActionGroup } from \"@intellij-platform/core/ActionSystem/ActionGroup\";\nimport {\n  type Action,\n  ActionContext,\n} from \"@intellij-platform/core/ActionSystem/Action\";\n\ntype ActionGroupAsMenuItem = Pick<\n  ActionGroup,\n  \"id\" | \"icon\" | \"title\" | \"isDisabled\" | \"children\" | \"menuPresentation\"\n>;\nexport type ActionItem = ActionGroupAsMenuItem | Action | DividerItem;\n\nfunction isAction(item: ActionItem): item is Action {\n  return \"perform\" in item;\n}\n\ntype ControlledMenuProps = Pick<\n  MenuProps<ActionItem>,\n  \"onAction\" | \"disabledKeys\" | \"items\" | \"children\"\n>;\ntype RenderMenu = (props: ControlledMenuProps) => React.ReactNode;\nexport type ActionMenuProps = {\n  actions: Array<ActionItem>;\n\n  /**\n   * Context with which actions should be performed.\n   * Usually the context by which the ActionsMenu itself is opened.\n   * Pass a function for lazy evaluation when the action is selected from the menu.\n   */\n  actionContext?: ActionContext | (() => ActionContext);\n  /**\n   * Allows for rendering a custom menu component, e.g. {@link SpeedSearchMenu}.\n   * If not provided, {@link Menu} is rendered, receiving additional props that\n   * are passed to `ActionsMenu`.\n   * If it is provided, additional {@link Menu} props are not allowed, and they\n   * can be passed directly to the returned menu element.\n   */\n  children?: RenderMenu;\n} & (\n  | {\n      children: RenderMenu;\n    }\n  | (Omit<MenuProps<ActionItem>, keyof ControlledMenuProps> & {\n      children?: never;\n    })\n);\n/**\n * Given a nested list of resolved actions, renders a menu corresponding to them.\n */\nexport function ActionsMenu({\n  actions,\n  actionContext,\n  children = (actionMenuProps) => <Menu {...otherProps} {...actionMenuProps} />,\n  ...otherProps\n}: ActionMenuProps) {\n  const allActions = getAllActions(actions);\n  const disabledKeys = allActions\n    .filter(({ isDisabled }) => isDisabled)\n    .map(({ id }) => id);\n\n  return (\n    <>\n      {children({\n        onAction: (key) => {\n          const action = allActions.find(({ id }) => id === key);\n          if (action && isAction(action)) {\n            action.perform(\n              typeof actionContext === \"function\"\n                ? actionContext?.()\n                : actionContext\n            );\n          }\n        },\n        disabledKeys,\n        // FIXME: keep isSelected on actions (toggle action) and control selectedKeys too?\n        items: actions,\n        children: (action) => {\n          if (action instanceof DividerItem) {\n            return <Divider />;\n          }\n          return renderActionAsMenuItem(action);\n        },\n      })}\n    </>\n  );\n}\n\ntype ActionAsMenuItem = Omit<Action, \"perform\" | \"shortcuts\">;\n\nexport function renderActionAsMenuItem(\n  action: ActionAsMenuItem | ActionGroupAsMenuItem\n) {\n  const isGroup = \"children\" in action;\n  if (\n    isGroup &&\n    (action.menuPresentation === \"section\" ||\n      action.menuPresentation === \"titledSection\")\n  ) {\n    return (\n      <Section\n        key={action.id}\n        // @ts-expect-error: hasDivider is not yet made a public API.\n        hasDivider\n        aria-label={\n          action.menuPresentation === \"section\" ? action.title : undefined\n        }\n        title={\n          action.menuPresentation === \"titledSection\" ? action.title : undefined\n        }\n        items={action.children}\n      >\n        {renderActionAsMenuItem}\n      </Section>\n    );\n  }\n  return (\n    <Item\n      key={action.id}\n      textValue={action.title}\n      aria-label={action.title}\n      childItems={\n        isGroup && action.menuPresentation === \"submenu\"\n          ? action.children\n          : undefined\n      }\n    >\n      <MenuItemLayout\n        content={action.title}\n        icon={action.icon}\n        shortcut={\"shortcut\" in action ? action.shortcut : undefined}\n      />\n    </Item>\n  );\n}\n\nfunction getAllActions(items: ActionItem[]): Action[] {\n  return flatten(\n    items.map((item) =>\n      [item].concat(\"children\" in item ? getAllActions(item.children) : [])\n    )\n  ).filter(isAction);\n}\n","import { flatten } from \"ramda\";\nimport React from \"react\";\nimport { Popup, usePopupManager } from \"@intellij-platform/core/Popup\";\nimport { SpeedSearchMenu } from \"@intellij-platform/core/Menu\";\nimport { MENU_POSITION_TARGET_DATA_ATTRIBUTE } from \"@intellij-platform/core/Menu/ContextMenuContainer\";\nimport { useEventCallback } from \"@intellij-platform/core/utils/useEventCallback\";\nimport {\n  ActionContext,\n  type ActionGroupDefinition,\n  isActionGroupDefinition,\n  useGetActionShortcut,\n} from \"@intellij-platform/core/ActionSystem\";\n\nimport { renderActionAsMenuItem } from \"./ActionsMenu\";\n\nexport const useCreateDefaultActionGroup = () => {\n  const { show } = usePopupManager();\n  const getActionShortcut = useGetActionShortcut();\n  const openActionsInPopup = useEventCallback(\n    (\n      { children, title }: Pick<ActionGroupDefinition, \"children\" | \"title\">,\n      context: ActionContext\n    ) => {\n      show(({ close }) => (\n        <Popup\n          // Maybe an option to conditionally use context-based positioning?\n          positioning={\n            context.element instanceof HTMLElement\n              ? {\n                  targetRef: {\n                    current:\n                      context.element.querySelector(\n                        `[${MENU_POSITION_TARGET_DATA_ATTRIBUTE}]`\n                      ) ?? context.element,\n                  },\n                  placement: \"bottom\",\n                }\n              : undefined\n          }\n        >\n          <Popup.Layout\n            content={\n              /**\n               * NOTE: It would be much nicer to use {@link ActionGroupMenu} component here. But the action group is not\n               * yet provided when the group definition is being created. It seems like a sign of bad design that needs\n               * to get addressed.\n               */\n              <SpeedSearchMenu\n                aria-label={title}\n                items={children}\n                onAction={(key) => {\n                  // The need for calculating `allActions` is a consequence of the issue explained in the note above.\n                  const allActions = flatten(\n                    children.map((item) =>\n                      isActionGroupDefinition(item) ? item.children : item\n                    )\n                  );\n                  const action = allActions.find((action) => action.id === key);\n                  if (action && !action.isDisabled) {\n                    action.actionPerformed(context);\n                  }\n                }}\n                onClose={close}\n                autoFocus=\"first\"\n              >\n                {(item) =>\n                  renderActionAsMenuItem({\n                    ...item,\n                    // a consequence of the issue explained in the note above.\n                    shortcut: getActionShortcut(item.id),\n                  })\n                }\n              </SpeedSearchMenu>\n            }\n            header={title}\n          />\n        </Popup>\n      ));\n    }\n  );\n\n  return (\n    groupDefinition: Omit<ActionGroupDefinition, \"actionPerformed\">\n  ): ActionGroupDefinition => {\n    return {\n      menuPresentation: \"submenu\",\n      ...groupDefinition,\n      actionPerformed: (context) =>\n        openActionsInPopup(groupDefinition, context),\n    };\n  };\n};\n","import {\n  FOCUS_EDITOR_ACTION_ID,\n  HIDE_ACTIVE_WINDOW_ACTION_ID,\n  HIDE_ALL_WINDOWS_ACTION_ID,\n  JUMP_TO_LAST_WINDOW_ACTION_ID,\n  MAXIMIZE_TOOL_WINDOW_ACTION_ID,\n  RESIZE_TOOL_WINDOW_BOTTOM_ACTION_ID,\n  RESIZE_TOOL_WINDOW_LEFT_ACTION_ID,\n  RESIZE_TOOL_WINDOW_RIGHT_ACTION_ID,\n  RESIZE_TOOL_WINDOW_TOP_ACTION_ID,\n  // For some reason importing from shorter paths doesn't work as expected in cypress ¯\\_(ツ)_/¯\n  // Weirdly, `import *` works in that case.\n} from \"@intellij-platform/core/ToolWindowsImpl/ToolWindowActionIds\";\n\nimport { Keymap } from \"./KeymapProvider\";\nimport { CommonActionId } from \"./CommonActionIds\";\n\n// TODO: OS specific defaults\n// TODO: extract and export action ids\n// NOTE: defaultKeymap doesn't belong to ActionSystem semantically. Would be something to be moved to a separate module\n/**\n * Default Intellij Idea keymapping for common action ids, including tool window actions.\n * @see CommonActionId\n */\nexport const defaultKeymap: Keymap = {\n  [RESIZE_TOOL_WINDOW_RIGHT_ACTION_ID]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"ArrowRight\",\n        modifiers: [\"Control\", \"Alt\"],\n      },\n    },\n  ],\n  [RESIZE_TOOL_WINDOW_LEFT_ACTION_ID]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"ArrowLeft\",\n        modifiers: [\"Control\", \"Alt\"],\n      },\n    },\n  ],\n  [RESIZE_TOOL_WINDOW_TOP_ACTION_ID]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"ArrowUp\",\n        modifiers: [\"Control\", \"Alt\"],\n      },\n    },\n  ],\n  [RESIZE_TOOL_WINDOW_BOTTOM_ACTION_ID]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"ArrowDown\",\n        modifiers: [\"Control\", \"Alt\"],\n      },\n    },\n  ],\n  [MAXIMIZE_TOOL_WINDOW_ACTION_ID]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"Quote\",\n        modifiers: [\"Shift\", \"Meta\"],\n      },\n    },\n  ],\n  [FOCUS_EDITOR_ACTION_ID]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"Escape\",\n      },\n    },\n  ],\n  [HIDE_ACTIVE_WINDOW_ACTION_ID]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"Escape\",\n        modifiers: [\"Shift\"],\n      },\n    },\n  ],\n  [HIDE_ALL_WINDOWS_ACTION_ID]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"F12\",\n        modifiers: [\"Shift\", \"Meta\"],\n      },\n    },\n  ],\n  [JUMP_TO_LAST_WINDOW_ACTION_ID]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"F12\",\n      },\n    },\n  ],\n  [CommonActionId.EXPAND_SELECTION]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"KeyW\",\n      },\n    },\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Alt\"],\n        code: \"ArrowUp\",\n      },\n    },\n  ],\n  [CommonActionId.SHRINK_SELECTION]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\", \"Shift\"],\n        code: \"KeyW\",\n      },\n    },\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Alt\"],\n        code: \"ArrowDown\",\n      },\n    },\n  ],\n  [CommonActionId.EXPAND_ALL]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"Equal\",\n      },\n    },\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"NumpadAdd\",\n      },\n    },\n  ],\n  [CommonActionId.COLLAPSE_ALL]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"Minus\",\n      },\n    },\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"NumpadSubtract\",\n      },\n    },\n  ],\n  [CommonActionId.GO_TO_ACTION]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\", \"Shift\"],\n        code: \"KeyA\",\n      },\n    },\n  ],\n  [CommonActionId.SHOW_INTENTION_ACTIONS]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Alt\"],\n        code: \"Enter\",\n      },\n    },\n  ],\n  [CommonActionId.GO_TO_FILE]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\", \"Shift\"],\n        code: \"KeyO\",\n      },\n    },\n  ],\n  [CommonActionId.EDIT_SOURCE]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"ArrowDown\",\n      },\n    },\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"F4\",\n      },\n    },\n  ],\n  [CommonActionId.SHOW_SEARCH_HISTORY]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Alt\"],\n        code: \"ArrowDown\",\n      },\n    },\n  ],\n  [CommonActionId.COPY_REFERENCE]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\", \"Shift\", \"Alt\"],\n        code: \"KeyC\",\n      },\n    },\n  ],\n  [CommonActionId.REFRESH]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"KeyR\",\n      },\n    },\n  ],\n  [CommonActionId.DELETE]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"Backspace\",\n      },\n    },\n  ],\n  [CommonActionId.COPY]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"KeyC\",\n      },\n    },\n  ],\n  [CommonActionId.CUT]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"KeyX\",\n      },\n    },\n  ],\n  [CommonActionId.PASTE]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"KeyV\",\n      },\n    },\n  ],\n};\n","import { fromPairs } from \"ramda\";\nimport { isMac } from \"@react-aria/utils\";\nimport {\n  isKeyboardShortcut,\n  KeyStroke,\n  KeyStrokeModifier,\n  Shortcut,\n} from \"./Shortcut\";\nimport {\n  KeyboardEventKey,\n  LinuxDeadKeys,\n  NumericKeypadKeys,\n  UpperAlpha,\n} from \"./KeyboardEventKey\";\n\nconst defaultKeyToStr: {\n  [key in Exclude<\n    KeyStrokeModifier | KeyboardEventKey,\n    LinuxDeadKeys | UpperAlpha | NumericKeypadKeys\n  >]: string;\n} = {\n  Control: \"Ctrl\",\n  \" \": \"Space\",\n  ArrowDown: \"↓\",\n  ArrowUp: \"↑\",\n  ArrowLeft: \"←\",\n  ArrowRight: \"→\",\n  Enter: \"⏎\",\n  Quote: \"'\",\n  Minus: \"-\",\n  Equal: \"+\",\n  Backspace: \"⌫\",\n  // lowercase to uppercase map\n  ...fromPairs(\n    Array.from(Array(26))\n      .map((e, i) => i + \"a\".charCodeAt(0))\n      .map((x) => String.fromCharCode(x))\n      .map((a) => [a, a.toUpperCase()])\n  ),\n};\nconst KeystrokeToString: {\n  separator: string;\n  codeToStr: Record<KeyStrokeModifier | KeyboardEventKey, string>;\n} = isMac()\n  ? {\n      separator: \"\",\n      codeToStr: {\n        ...defaultKeyToStr,\n        Alt: \"⌥\",\n        Shift: \"⇧\",\n        Meta: \"⌘\",\n        Control: \"^\",\n        Escape: \"⎋\",\n      },\n    }\n  : {\n      separator: \"+\",\n      codeToStr: defaultKeyToStr,\n    };\n\nconst modifiersOrder: KeyStrokeModifier[] = [\"Control\", \"Alt\", \"Shift\", \"Meta\"];\nexport const keystrokeToString = (keystroke: KeyStroke) => {\n  return [\n    ...(keystroke.modifiers || []).sort(\n      (a, b) => modifiersOrder.indexOf(a) - modifiersOrder.indexOf(b)\n    ),\n    keystroke.code,\n  ]\n    .map((code) => KeystrokeToString.codeToStr[code] || code)\n    .map((code) => code.replace(/^(Key|Digit|Numpad)(.)$/, \"$2\"))\n    .join(KeystrokeToString.separator);\n};\nexport const shortcutToString = (shortcut: Shortcut) => {\n  if (isKeyboardShortcut(shortcut)) {\n    return [shortcut.firstKeyStroke, shortcut.secondKeyStroke]\n      .filter((i): i is KeyStroke => i != undefined)\n      .map(keystrokeToString)\n      .join(\", \");\n  }\n  throw new Error(\"Not implemented yet\");\n};\n","import { useAction } from \"./ActionsProvider\";\nimport { isResolvedActionGroup, ResolvedActionGroup } from \"./ActionGroup\";\n\nexport const useActionGroup = (\n  actionGroupId: string\n): ResolvedActionGroup | null => {\n  const action = useAction(actionGroupId);\n  if (action) {\n    if (isResolvedActionGroup(action)) {\n      return action;\n    }\n    throw new Error(`Action with id ${actionGroupId} is not a group`);\n  }\n  return null;\n};\n","import React from \"react\";\nimport {\n  ModalWindow,\n  ModalWindowProps,\n} from \"@intellij-platform/core/ModalWindow\";\nimport { OverlayMoveHandle } from \"@intellij-platform/core/Overlay\";\nimport { styled } from \"../styled\";\nimport { StyledWindowContainer } from \"@intellij-platform/core/ModalWindow/ModalWindow\";\nimport { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport { ButtonGroup } from \"@intellij-platform/core/ButtonGroup\";\nimport { isEventOnEmptySpaces } from \"@intellij-platform/core/utils/interaction-utils/useMove\";\n\nexport interface AlertDialogProps\n  extends Pick<ModalWindowProps, \"minWidth\" | \"id\" | \"onClose\"> {\n  /**\n   * Content slot for the heading, aka. title of the dialog. Typically plain text.\n   */\n  heading?: React.ReactNode;\n  /**\n   * Content slot for the body, aka. message of the dialog. Typically plain text.\n   */\n  body?: React.ReactNode;\n  /**\n   * Content slot for the checkbox (\"Do not ask again\").\n   * @example\n   * ```jsx\n   * <AlertDialog checkbox={<Checkbox>Do not ask again</Checkbox>} />\n   * ```\n   * @see Checkbox\n   */\n  checkbox?: React.ReactNode;\n\n  /**\n   * Type of the alert dialog. The icon is set based on type.\n   */\n  type?: \"error\" | \"warning\" | \"information\" | \"question\";\n\n  /**\n   * Content slot for buttons.\n   * @example\n   * ```jsx\n   * <AlertDialog\n   *   buttons={\n   *     <>\n   *       <Button>Cancel</Button>\n   *       <Button variant=\"default\">Ok</Button>\n   *     </>\n   *   }\n   * />\n   * ```\n   * @see Button\n   */\n  buttons?: React.ReactNode;\n\n  /**\n   * Content slot for help icon button in the footer.\n   * @example\n   * ```jsx\n   * <AlertDialog\n   *   helpButton={\n   *     <TooltipTrigger tooltip={<HelpTooltip helpText=\"Show Help Contents\" />}>\n   *       <Button variant=\"icon\">\n   *         <PlatformIcon icon=\"actions/help\"></PlatformIcon>\n   *       </Button>\n   *     </TooltipTrigger>\n   *   }\n   * />\n   * ```\n   * @see Button\n   */\n  helpButton?: React.ReactNode;\n}\n\nconst StyledModalWindow = styled(ModalWindow)`\n  ${StyledWindowContainer} {\n    border-radius: 0;\n    outline: 0.5px solid rgba(0, 0, 0, 0.85); // FIXME\n  }\n`;\n\nconst StyledContainer = styled.div`\n  padding: 1.25rem;\n  display: grid;\n  grid-template-columns: auto 1fr;\n  grid-template-rows: auto auto;\n  align-items: center;\n  gap: 0.875rem;\n`;\n\nconst StyledHeading = styled.h2`\n  margin: 0;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  font-weight: bold;\n`;\n\nconst StyledBody = styled.div`\n  line-height: 1.2;\n`;\n\nconst StyledContent = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  cursor: default;\n`;\n\nconst StyledCheckbox = styled.div`\n  padding: 0.375rem 0;\n  // to align the checkbox with the content, since the box has a padding. Maybe Checkbox should not have any padding.\n  margin-left: -0.25rem;\n`;\n\nconst StyledButtons = styled(ButtonGroup)`\n  display: flex;\n  justify-self: end;\n  gap: 1rem;\n`;\n\nconst StyledIcon = styled.span`\n  align-self: start;\n`;\n\nconst StyledHelpIcon = styled.div`\n  justify-self: center;\n`;\n\n/**\n * A modal dialog implementing [Alert](https://jetbrains.github.io/ui/controls/alert), which is the\n * [notification](https://jetbrains.github.io/ui/controls/notifications/) pattern for use cases where\n * immediate user action is required.\n * Since the use cases are quite specific, and the component is expected to be used with pretty specific\n * content items, the layout is not implemented as a separate component, the way it is in components like\n * {@link ModalWindow} or {@link Menu}\n *\n *\n */\nexport const AlertDialog = ({\n  type = \"question\",\n  heading,\n  body,\n  checkbox,\n  helpButton,\n  buttons,\n  minWidth = 370,\n  ...otherProps\n}: AlertDialogProps): JSX.Element => {\n  return (\n    <StyledModalWindow\n      role=\"alertdialog\"\n      interactions=\"move\"\n      minWidth={minWidth}\n      defaultBounds={{\n        top: window.innerHeight / 4,\n      }}\n      // Reacting to content size, to make sure the content will be visible, considering the window is not resizable.\n      observeContentResize\n      {...otherProps}\n    >\n      <OverlayMoveHandle dragThreshold={6} canMoveStart={isEventOnEmptySpaces}>\n        {({ moveHandleProps }) => (\n          <StyledContainer {...moveHandleProps}>\n            <StyledIcon>\n              {/* Icon name is theme-able in the reference impl via OptionPane[`${icon}Icon`] */}\n              <PlatformIcon size={32} icon={`general/${type}Dialog`} />\n            </StyledIcon>\n            <StyledContent>\n              <StyledHeading>{heading}</StyledHeading>\n              <StyledBody>{body}</StyledBody>\n              {checkbox && <StyledCheckbox>{checkbox}</StyledCheckbox>}\n            </StyledContent>\n            <StyledHelpIcon>{helpButton}</StyledHelpIcon>\n            <StyledButtons>{buttons}</StyledButtons>\n          </StyledContainer>\n        )}\n      </OverlayMoveHandle>\n    </StyledModalWindow>\n  );\n};\n","import React, { ReactNode } from \"react\";\nimport { useWindowManager } from \"@intellij-platform/core/ModalWindow\";\nimport { Button } from \"@intellij-platform/core/Button\";\n\nimport { AlertDialog } from \"./AlertDialog\";\n\nexport interface AlertDialogApi {\n  confirm(options: {\n    title: ReactNode;\n    message: ReactNode;\n    okText?: string;\n    cancelText?: string;\n  }): Promise<boolean>;\n}\n\n/**\n * Similar to com.intellij.openapi.ui.Messages class in the reference impl, provides helper functions\n * to show different types of Alert dialog. The helper functions return a Promise of the selected option,\n * which makes it easy to use it imperatively, in a flow of statements, regardless of how the UI of the\n * alert dialog is handled.\n * {@link useAlertDialog} depends on {@link WindowManager}, to imperatively open modal windows.\n * @experimental\n */\nexport function useAlertDialog(): AlertDialogApi {\n  const { open } = useWindowManager();\n  return {\n    confirm: ({ title, message, okText = \"Ok\", cancelText = \"Cancel\" }) =>\n      new Promise((resolve) => {\n        open(({ close }) => (\n          <AlertDialog\n            type=\"question\"\n            body={message}\n            heading={title}\n            buttons={\n              <>\n                <Button onPress={close}>{cancelText}</Button>\n                <Button\n                  variant=\"default\"\n                  onPress={() => {\n                    resolve(true);\n                    close();\n                  }}\n                >\n                  {okText}\n                </Button>\n              </>\n            }\n            onClose={() => resolve(false)}\n          />\n        ));\n      }),\n  };\n}\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { Theme, UnknownThemeProp } from \"@intellij-platform/core/Theme\";\n\nconst CORNER_RADIUS = 12; // it used to be 8. After introduction of Notifications tool window, it's 12\n\nconst bgColor = ({ theme }: { theme: Theme }) =>\n  theme.color(\n    \"Notification.background\",\n    !theme.dark ? \"rgb(242,242,242)\" : \"#4E5052\"\n  );\n\nexport const StyledHeaderActions = styled.div`\n  position: absolute;\n  right: 0;\n  top: 0;\n  background: inherit;\n  padding: 0.375rem 0.5rem 0;\n  &::before {\n    content: \"\";\n    position: absolute;\n    right: 100%;\n    background: linear-gradient(90deg, transparent, ${bgColor});\n    width: 20px;\n    height: 100%;\n    z-index: 1;\n    top: 0;\n  }\n`;\n\nexport const StyledBalloonContainer = styled.div`\n  line-height: 1.2;\n  box-sizing: border-box;\n  overflow: hidden; // header actions overflows a little at the top right rounded corner\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2); // shadow doesn't seem to be themed\n  padding: 0.5rem 0;\n  border: 1px solid\n    ${({ theme }) =>\n      theme.color(\n        \"Notification.borderColor\",\n        !theme.dark ? \"#B2B2B2CD\" : \"#565A5CCD\"\n      )};\n  border-radius: ${({ theme }) =>\n    `${\n      (theme.value<number>(\n        \"Notification.arc\" as UnknownThemeProp<\"Notification.arc\">\n      ) ?? CORNER_RADIUS) / 2\n    }px`};\n  //display: inline-flex;\n  width: 23.3125rem;\n  position: relative;\n  background-color: ${bgColor};\n  color: ${({ theme }) =>\n    theme.color(\n      \"Notification.foreground\",\n      !theme.dark ? \"#000\" : \"rgb(191,191,191)\"\n    )};\n\n  ${StyledHeaderActions} {\n    display: none;\n  }\n  &:hover ${StyledHeaderActions} {\n    display: initial;\n  }\n`;\n\nexport const StyledIconContainer = styled.span`\n  position: absolute;\n  left: 0.75rem;\n  top: 0.5rem;\n`;\n\nexport const StyledBalloonHeader = styled.div`\n  line-height: 1rem;\n  font-weight: bold;\n  margin: 0 2.125rem 0.25rem;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis; // this is not the case in original impl, but it's a clear improvement\n`;\n\nexport const StyledBalloonBody = styled.div<{\n  lineClamp: number | false;\n}>`\n  margin: 0 2.125rem 0 2.125rem;\n  line-height: 1rem;\n  display: inline;\n  -webkit-line-clamp: ${({ lineClamp }) => lineClamp};\n  word-break: ${({ lineClamp }) => lineClamp === 1 && \"break-all\"};\n  text-overflow: ellipsis;\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  word-wrap: break-word;\n`;\n\nexport const StyledBalloonFooter = styled.div`\n  margin: 0.375rem 1.875rem 0 2.125rem;\n  display: inline-flex;\n  white-space: nowrap;\n  overflow: hidden;\n  gap: 1rem;\n\n  // could be -webkit-fill-available too, if it has good support. Probably it doesn't tho\n  max-width: calc(100% - 3.5rem);\n`;\n\nexport const StyledToggleIconContainer = styled.span`\n  display: inline-flex;\n  position: absolute;\n  right: 0.5rem;\n  bottom: 0;\n  background-color: ${bgColor};\n  padding-left: 0.5rem;\n`;\n\nexport const StyledToggleExpandButtonContainer = styled.span`\n  display: block;\n  position: relative; // for icon absolute positioning\n  cursor: pointer;\n  flex: 1;\n`;\n\nexport const StyledToggleExpandButtonFooterContainer = styled(\n  StyledToggleExpandButtonContainer\n)`\n  min-height: 1.5rem;\n  margin: -0.5rem 0;\n  position: relative;\n  z-index: 1;\n  ${StyledToggleIconContainer} {\n    bottom: 0.5rem;\n  }\n  ${StyledBalloonFooter} {\n    margin-top: 0.875rem;\n    margin-bottom: 0.5rem;\n  }\n  ${StyledBalloonFooter}:hover + * .icon[data-hover] {\n    display: none;\n  }\n  ${StyledBalloonFooter}:hover + * .icon {\n    display: unset;\n  }\n`;\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { IconProps } from \"@intellij-platform/core/Icon/IconProps\";\nimport {\n  AutoHoverPlatformIcon,\n  PlatformIcon,\n} from \"@intellij-platform/core/Icon\";\nimport { ControlledStateProps } from \"@intellij-platform/core/type-utils\";\nimport { useControlledState } from \"@react-stately/utils\";\nimport {\n  StyledBalloonBody,\n  StyledBalloonContainer,\n  StyledBalloonFooter,\n  StyledBalloonHeader,\n  StyledHeaderActions,\n  StyledIconContainer,\n  StyledToggleExpandButtonContainer,\n  StyledToggleExpandButtonFooterContainer,\n  StyledToggleIconContainer,\n} from \"@intellij-platform/core/Balloon/Balloon.styled\";\nimport { DOMProps } from \"@react-types/shared\";\nimport { Link } from \"@intellij-platform/core/Link\";\n\nexport type BalloonProps = ControlledStateProps<{ expanded: boolean }> &\n  DOMProps & {\n    /**\n     * Icon rendered in the top left\n     */\n    icon?: \"Info\" | \"Warning\" | \"Error\" | React.ReactElement<IconProps>;\n    /**\n     * Rendered beside close button. Can be used for rendering a \"notification settings\" icon button.\n     */\n    headerActions?: React.ReactNode;\n    /**\n     * Called when the close button is clicked. If not passed, close button will not be rendered.\n     */\n    onClose?: () => void;\n    /**\n     * Actions rendered in the footer.\n     */\n    actions?: React.ReactNode;\n  } & (\n    | {\n        title?: React.ReactNode;\n        body: React.ReactNode;\n      }\n    | {\n        title: React.ReactNode;\n        body?: React.ReactNode;\n      }\n  );\n\ntype BalloonContextObj = {\n  onClose?: () => void;\n};\nconst BalloonContext = React.createContext<BalloonContextObj | null>(null);\n\n/**\n * A tiny wrapper around {@link Link} component, to be used for actions in Balloon.\n * It closes the balloon when pressed.\n */\nexport const BalloonActionLink: typeof Link = React.forwardRef(\n  ({ onPress, ...props }, ref) => {\n    const context = useContext(BalloonContext);\n    if (context === null) {\n      throw new Error(\n        \"BalloonActionLink should only be rendered inside Balloon notifications\"\n      );\n    }\n    return (\n      <Link\n        ref={ref}\n        {...props}\n        onPress={(...args) => {\n          context?.onClose?.();\n          return onPress?.(...args);\n        }}\n      />\n    );\n  }\n);\n/**\n * [Balloon notification](https://jetbrains.github.io/ui/controls/balloon/) UI.\n *\n * Notes and TODO:\n * - Add support for \"error\" variant: https://github.com/JetBrains/intellij-community/blob/48c024fcd38bd8d1eccdada05489a8952a494270/platform/platform-impl/src/com/intellij/diagnostic/IdeMessagePanel.java#L215\n * - Add support for timeout. Although if the auto close behaviour is only timeout-based, maybe there is not much value in adding a prop for it and calling onClose on timeout.\n * - BalloonActions component to be used for rendering a bunch of links in the actions. It should encapsulate the\n *   behaviour of moving actions into a menu when there is not enough room.\n */\nexport const Balloon = ({\n  icon: iconProp = \"Info\",\n  expanded: expandedProp,\n  defaultExpanded = false,\n  onExpandedChange,\n  title,\n  headerActions,\n  onClose,\n  body,\n  actions,\n  ...containerProps\n}: BalloonProps): React.ReactElement => {\n  const bodyRef = useRef<HTMLDivElement>(null);\n  const [expandable, setExpandable] = useState(false);\n  const [expanded, setExpanded] = useControlledState(\n    expandedProp!,\n    defaultExpanded,\n    onExpandedChange!\n  );\n  const maxLinesWhenNotExpanded = 1 + (title ? 0 : 1) + (actions ? 0 : 1);\n\n  useEffect(() => {\n    const bodyElem = bodyRef.current;\n    if (bodyElem) {\n      setExpandable(\n        expanded\n          ? getNumLines(bodyElem) > maxLinesWhenNotExpanded\n          : bodyElem.scrollHeight > bodyElem.clientHeight\n      );\n    } else {\n      setExpandable(false);\n    }\n  }, [expanded]);\n  const validIconTypes = [\"Error\", \"Warning\", \"Info\"] as const;\n  const icon =\n    typeof iconProp === \"string\" ? (\n      <PlatformIcon\n        icon={`general/notification${validIconTypes.find(\n          (iconType, index, arr) =>\n            iconType === iconProp || index === arr.length - 1\n        )}.svg`}\n      />\n    ) : (\n      iconProp\n    );\n  // @ts-expect-error support for callback updater is removed from useControlledState. https://github.com/adobe/react-spectrum/issues/2320\n  const toggle = () => setExpanded((expanded) => !expanded);\n\n  const effectiveExpanded = expanded && Boolean(body);\n\n  return (\n    <BalloonContext.Provider value={{ onClose }}>\n      <StyledBalloonContainer data-testid=\"balloon\" {...containerProps}>\n        <StyledIconContainer>{icon}</StyledIconContainer>\n        {title && <StyledBalloonHeader>{title}</StyledBalloonHeader>}\n        <StyledHeaderActions>\n          {headerActions}\n          {onClose && (\n            <AutoHoverPlatformIcon\n              icon=\"ide/notification/close.svg\"\n              onClick={onClose}\n              role=\"button\"\n              data-testid=\"close-btn\"\n              style={{ marginLeft: \"0.75rem\" }}\n            />\n          )}\n        </StyledHeaderActions>\n        {body && (\n          <ToggleWrapper\n            expanded={effectiveExpanded}\n            enabled={expandable && !effectiveExpanded}\n            onToggle={toggle}\n          >\n            <StyledBalloonBody\n              lineClamp={!effectiveExpanded && maxLinesWhenNotExpanded}\n              ref={bodyRef}\n            >\n              {body}\n            </StyledBalloonBody>\n          </ToggleWrapper>\n        )}\n        <ToggleWrapper\n          expanded={effectiveExpanded}\n          enabled={expandable && effectiveExpanded}\n          onToggle={toggle}\n          Component={StyledToggleExpandButtonFooterContainer}\n        >\n          {actions && (\n            <StyledBalloonFooter onClick={(e) => e.stopPropagation()}>\n              {actions}\n            </StyledBalloonFooter>\n          )}\n        </ToggleWrapper>\n      </StyledBalloonContainer>\n    </BalloonContext.Provider>\n  );\n};\n\n/**\n * If enabled wraps its children in a clickable area (with the expand/collapse arrow),f for toggling expanded state.\n */\nconst ToggleWrapper: React.FC<{\n  children?: React.ReactNode;\n  enabled: boolean;\n  expanded: boolean;\n  Component?: typeof StyledToggleExpandButtonContainer;\n  onToggle: () => void;\n}> = ({\n  children,\n  onToggle,\n  expanded,\n  enabled,\n  Component = StyledToggleExpandButtonContainer,\n}) => {\n  const iconName = expanded ? \"collapse\" : \"expand\";\n  const toggleIcon = (\n    <StyledToggleIconContainer>\n      <AutoHoverPlatformIcon\n        hoverContainerSelector={`${Component}`}\n        icon={`ide/notification/${iconName}.svg`}\n        className=\"icon\"\n      />\n    </StyledToggleIconContainer>\n  );\n\n  return enabled ? (\n    <Component\n      onClick={onToggle}\n      role=\"button\"\n      data-testid={`${expanded ? \"collapse\" : \"expand\"}-btn`}\n    >\n      {children}\n      {toggleIcon}\n    </Component>\n  ) : (\n    <>{children}</>\n  );\n};\n\n/**\n * Based on the computed line-height and clientHeight of the element, returns the number of lines of the content.\n */\nfunction getNumLines(bodyElem: Element) {\n  return (\n    bodyElem.clientHeight / parseFloat(getComputedStyle(bodyElem).lineHeight)\n  );\n}\n","import React, {\n  ReactElement,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Balloon, BalloonProps } from \"./Balloon\";\nimport { StyledBalloonsStack } from \"./StyledBalloonsStack\";\n\ntype ShowProps = Pick<\n  BalloonProps,\n  \"title\" | \"icon\" | \"body\" | \"actions\" | \"headerActions\"\n>;\n\nexport interface BalloonManagerAPI {\n  /**\n   * Shows a Balloon notification on the bottom left of the screen.\n   * @param props: Props to pass to the Balloon component\n   * @param [autoHideTimeout=10_000] timeout in ms for hiding the balloon notification.\n   * @returns hide function, in case the notification can expire for some reason.\n   */\n  show(props: ShowProps, autoHideTimeout?: number): () => void;\n  showSticky(props: ShowProps): () => void;\n}\n\nconst NotImplementedFn = () => {\n  throw new Error(\"You must render a BalloonManager...\");\n};\n\nconst BalloonsContext = React.createContext<BalloonManagerAPI>({\n  show: NotImplementedFn,\n  showSticky: NotImplementedFn,\n});\n\nexport const useBalloonManager = (): BalloonManagerAPI =>\n  useContext(BalloonsContext);\n\ntype BalloonElement = ReactElement<BalloonProps, typeof Balloon>;\n\nexport interface BalloonManagerProps {\n  disablePortal?: boolean;\n  BalloonsContainer?: React.ElementType;\n  children?: React.ReactNode;\n}\n\n/**\n * Enables imperative API (via {@link useBalloonManager}) for showing Balloon notifications on the bottom right of the screen.\n * It renders notifications in a portal appended to `body`, unless `disablePortal` is `true`.\n *\n * @param disablePortal: if `true`, the container for notifications will not be rendered in a portal\n * @param BalloonsContainer: container component for the notifications. It's {@link StyledBalloonsStack} by default.\n *\n * TODO: fade in/out transition. Notes:\n *  - Doesn't seem fade-in is needed. Tho it's much easier than fade-out, as it can be achieved with a css animation.\n *  - Fade out should happen only when the balloon is being hidden by timeout.\n * TODO: Support for maximum number of notifications and showing \"x more notification(s)\" button if the limit exceeds\n */\n\nexport const BalloonManager: React.FC<BalloonManagerProps> = ({\n  children,\n  disablePortal,\n  BalloonsContainer = StyledBalloonsStack,\n}) => {\n  const [balloons, setBalloons] = useState<Array<BalloonElement>>([]);\n  const timeoutIdsRef = useRef<number[]>([]);\n  const lastIdRef = useRef<number>(0);\n\n  const api = useMemo<BalloonManagerAPI>(() => {\n    const show: BalloonManagerAPI[\"show\"] = (props, timeout = 10_000) => {\n      lastIdRef.current++;\n      const onClose = () => {\n        setBalloons((balloons) =>\n          balloons.filter((aBalloon) => aBalloon !== balloon)\n        );\n      };\n      const balloon = (\n        <Balloon\n          key={lastIdRef.current}\n          {...props}\n          title={props.title} // TS acts unreasonable without this\n          onClose={onClose}\n        />\n      );\n      setBalloons((balloons) => {\n        if (timeout > 0) {\n          const timeoutId = window.setTimeout(() => {\n            onClose();\n            timeoutIdsRef.current = timeoutIdsRef.current.filter(\n              (aTimeoutId) => aTimeoutId !== timeoutId\n            );\n          }, timeout);\n          timeoutIdsRef.current = [...timeoutIdsRef.current, timeoutId];\n        }\n        return balloons.concat(balloon);\n      });\n      return onClose;\n    };\n    return {\n      show,\n      showSticky: (props) => show(props, 0),\n    };\n  }, []);\n\n  // clear timeouts when unmounted\n  useEffect(() => {\n    return () => {\n      timeoutIdsRef.current.forEach((id) => {\n        window.clearTimeout(id);\n      });\n    };\n  }, []);\n\n  const notificationsStack = (\n    <BalloonsContainer\n      style={{ position: disablePortal ? \"absolute\" : undefined }}\n    >\n      {balloons}\n    </BalloonsContainer>\n  );\n\n  return (\n    <BalloonsContext.Provider value={api}>\n      {children}\n      {disablePortal\n        ? notificationsStack\n        : ReactDOM.createPortal(notificationsStack, document.body)}\n    </BalloonsContext.Provider>\n  );\n};\n","import styled from \"styled-components\";\nimport { StyledBalloonContainer } from \"@intellij-platform/core/Balloon/Balloon.styled\";\n\n/**\n * Container component for stacking a number of Balloons in an overlay placed on the bottom right of where it's rendered.\n */\nexport const StyledBalloonsStack = styled.div`\n  position: fixed;\n  z-index: 1;\n  bottom: 42px;\n  right: 26px;\n  ${StyledBalloonContainer} {\n    margin-bottom: 12px;\n  }\n`;\n","import React, { ForwardedRef, JSXElementConstructor } from \"react\";\nimport { useButton } from \"@react-aria/button\";\nimport { filterDOMProps, mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport {\n  AriaBaseButtonProps,\n  AriaButtonProps,\n  ButtonProps,\n} from \"@react-types/button\";\n\nexport interface BareButtonProps extends AriaBaseButtonProps, ButtonProps {\n  children: React.ReactElement;\n  elementType?: AriaButtonProps[\"elementType\"];\n\n  // NOTE: there is a chance of unchecked breaking change here, since this is not explicitly mentioned as public API\n  // of useButton, but it is passed to the underlying usePress.\n  preventFocusOnPress?: boolean; // Should this be become true by default?\n}\n\n/**\n * A component to make arbitrary content an accessible button which is also able to be a tooltip trigger.\n */\nexport const BareButton = React.forwardRef(function BareButton(\n  { elementType: elementTypeProp, ...props }: BareButtonProps,\n  forwardedRef: ForwardedRef<HTMLElement>\n) {\n  const elementType =\n    elementTypeProp ||\n    (React.isValidElement(props.children) &&\n    typeof props.children.type === \"string\"\n      ? (props.children.type as unknown as JSXElementConstructor<unknown>)\n      : undefined) ||\n    \"button\";\n  const ref = useObjectRef(forwardedRef);\n  const { buttonProps } = useButton(\n    {\n      elementType,\n      ...props,\n    },\n    ref\n  );\n  const domProps = filterDOMProps(props);\n  const { autoFocus } = props;\n\n  return React.cloneElement(\n    props.children,\n    mergeProps(domProps, buttonProps, { autoFocus, ref })\n  );\n});\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\n\nexport const StyledButton = styled.button<{ disabled?: boolean }>`\n  box-sizing: border-box;\n  min-width: 4.5rem; // https://jetbrains.github.io/ui/controls/button/#28\n  padding: 0 0.875rem; // https://jetbrains.github.io/ui/controls/button/#28\n  height: 1.5rem;\n  font-family: inherit;\n  background-color: ${({ theme, disabled }) =>\n    disabled ? \"transparent\" : theme.color(\"Button.startBackground\")};\n  color: ${({ theme, disabled }) =>\n    disabled\n      ? theme.color(\"Button.disabledText\")\n      : theme.color(\n          \"Button.foreground\" as UnknownThemeProp<\"Button.foreground\">\n        )};\n  border: 1px solid\n    ${({ theme, disabled }) =>\n      disabled\n        ? theme.color(\"Button.disabledBorderColor\")\n        : theme.color(\"Button.startBorderColor\")};\n  border-radius: ${({ theme }) =>\n    (theme.value<number>(\"Button.arc\") ?? 6) / 2}px;\n  box-shadow: ${({ theme }) =>\n    theme.value(\"Button.paintShadow\")\n      ? `0 0 0 ${theme.value(\"Button.shadowWidth\") ?? 2}px ${\n          theme.color(\"Button.shadowColor\") ?? // Button.darcula.shadowColor default is skipped.\n          (theme.dark ? \"#36363680\" : \"#a6a6a633\")\n        }`\n      : \"\"};\n  white-space: nowrap; // https://jetbrains.github.io/ui/controls/button/#29\n\n  flex-shrink: 0; // button should not shrink when rendered in a flex container\n\n  &:focus,\n  &.focus /* for testing purposes*/ {\n    border-color: ${({ theme }) =>\n      theme.color(\"Button.focusedBorderColor\", \"#87afda\")};\n    outline: none;\n    box-shadow: ${({ theme }) =>\n      `0 0 0 2px ${\n        // NOTE: by not using the second argument for default value, we prioritize *.focusColor over the rest.\n        theme.color(\"Component.focusColor\") ??\n        theme.color(\n          \"Focus.borderColor\" as UnknownThemeProp<\"Focus.borderColor\">,\n          \"#8ab2eb\"\n        )\n      }`};\n  }\n`;\nexport const StyledDefaultButton = styled(StyledButton)`\n  background-color: ${({ theme, disabled }) =>\n    !disabled && theme.color(\"Button.default.startBackground\", \"#384f6b\")};\n  color: ${({ theme, disabled }) =>\n    !disabled && theme.color(\"Button.default.foreground\")};\n  border-color: ${({ theme, disabled }) =>\n    !disabled && theme.color(\"Button.default.startBorderColor\", \"#BFBFBF\")};\n  &:focus,\n  &.focus /* for testing purposes*/ {\n    border-color: ${({ theme }) =>\n      theme.color(\"Button.default.focusedBorderColor\", \"#87afda\")};\n  }\n`;\n\nexport const StyledIconButton = styled(StyledButton)`\n  border-radius: 1000px;\n  padding: 0;\n  line-height: 0;\n  min-width: 0;\n  height: 1.5rem;\n  width: 1.5rem;\n`;\n","import React, {\n  ButtonHTMLAttributes,\n  CSSProperties,\n  ForwardedRef,\n} from \"react\";\nimport { useButton } from \"@react-aria/button\";\nimport { AriaButtonProps } from \"@react-types/button\";\nimport { filterDOMProps, mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport {\n  StyledButton,\n  StyledDefaultButton,\n  StyledIconButton,\n} from \"@intellij-platform/core/Button/StyledButton\";\nimport { MnemonicTrigger } from \"@intellij-platform/core/Mnemonic\";\nimport { PressEvent } from \"@react-types/shared/src/events\";\n\ntype ButtonVariant = \"default\" | \"icon\";\nexport interface ButtonProps extends AriaButtonProps {\n  variant?: ButtonVariant; // can allow for custom (styled) component too if needed.\n  // NOTE: there is a chance of unchecked breaking change here, since this is not explicitly mentioned as public API\n  // of useButton, but it is passed to the underlying usePress.\n  // Should this be become true by default? Maybe an context-based API to set defaults like this for a section?\n  preventFocusOnPress?: boolean;\n\n  form?: ButtonHTMLAttributes<HTMLButtonElement>[\"form\"];\n  style?: CSSProperties;\n  /**\n   * A character to be used as {@link https://jetbrains.design/intellij/principles/mnemonics/ mnemonic} for the button\n   * It will be shown as underlined in button text, when mnemonic is activated (by pressing Alt)\n   * Note: if you use mnemonic, and the direct child of the button is not a string, you should use `MnemonicText`\n   * to render the button text, to have the underlining behavior.\n   */\n  mnemonic?: string;\n  className?: string;\n\n  /**\n   * Called when the button is pressed, or triggered via mnemonic. If mnemonic is used, there won't be any event\n   * passed to onPress callback.\n   */\n  onPress?: (e?: PressEvent) => void;\n}\n\nconst variants: { [key in ButtonVariant]: typeof StyledButton } = {\n  default: StyledDefaultButton,\n  icon: StyledIconButton,\n};\n\n/**\n * https://jetbrains.github.io/ui/controls/button/\n *\n * TODO:\n * - Support for \"default\" button behaviour. it's kind of similar to a <button type=\"submit\" /> in html, but textarea\n * behaviour is different from what is explained here: https://jetbrains.github.io/ui/controls/button/#16\n * Cmd+Enter should always trigger onPress. Plus, maybe it should work independent of \"form\" being used? or maybe it's\n * not a big deal to expect an ancestor \"form\" element, when variant is \"default\"?\n * - \"Default\" style differences in Windows.\n * - Gradient colors (low hanging fruit, but negligible added value).\n *\n * Known issues:\n * - In the original impl, default button looks the same as normal button, when focus is not within the same area that\n * the button is. For example in the commit tool window, \"Commit\" button which is default, is not blue, unless the\n * \"Commit\" tool window is focused. This particular case can easily be achieved by conditionally setting variant to,\n * \"default\" based on tool window focus state, which is accessible via useDefaultToolWindowContext(), if\n * DefaultToolWindow is used. But we need to see if the same requirement exists in various places.\n * NOTE: this item is related to the first item in the to-do list above. There can be a container kind of component,\n * which enables \"default\" behaviour and look. Maybe it can be FocusScope or at least related to FocusScope.\n * - In the original impl, there is no visual clue for pressed state, which is poor accessibility. For now, the same\n * behaviour is followed here too. But we may reconsider deviating from the original impl for an improvement here.\n *\n */\nexport const Button: React.FC<ButtonProps> = React.forwardRef(function Button(\n  { variant, style, className, mnemonic, ...props }: ButtonProps,\n  forwardedRef: ForwardedRef<HTMLButtonElement>\n) {\n  const ref = useObjectRef(forwardedRef);\n  const { buttonProps } = useButton(props, ref);\n  const domProps = filterDOMProps(props);\n  const { autoFocus, form } = props;\n\n  const Component = (variant && variants[variant]) || StyledButton;\n  return (\n    <Component\n      {...mergeProps(domProps, buttonProps, { autoFocus, form })}\n      style={style}\n      className={className}\n      ref={ref}\n    >\n      {mnemonic ? (\n        <MnemonicTrigger\n          mnemonic={mnemonic}\n          isDisabled={props.isDisabled}\n          onTriggered={props.onPress}\n        >\n          {props.children}\n        </MnemonicTrigger>\n      ) : (\n        props.children\n      )}\n    </Component>\n  );\n});\n","import React, { CSSProperties, ReactNode } from \"react\";\nimport { DOMAttributes, FocusableElement } from \"@react-types/shared\";\nimport { FocusScope, useFocusManager } from \"@react-aria/focus\";\nimport { useKeyboard } from \"@react-aria/interactions\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { hasAnyModifier } from \"@intellij-platform/core/utils/keyboard-utils\";\nimport { styled } from \"@intellij-platform/core/styled\";\n\nexport interface ButtonGroupProps {\n  children: ReactNode;\n  className?: string;\n  style?: CSSProperties;\n}\n\nconst StyledButtonGroup = styled.div`\n  display: inline-flex;\n  align-items: center;\n  gap: 0.75rem;\n`;\n\n/**\n * `ButtonGroup` should be used as a wrapper around related {@link Button Buttons}, in places such as the\n * footer of a dialog. It does two things:\n * - allows for moving the focus between the buttons with left/right arrow keys.\n * - applies the right spacing between the buttons\n *\n * @see Button\n */\nexport function ButtonGroup(props: ButtonGroupProps) {\n  return (\n    <FocusScope>\n      <HorizontalArrowKeyNavigation>\n        {(arrowKeyNavigationProps) => (\n          <StyledButtonGroup {...mergeProps(props, arrowKeyNavigationProps)} />\n        )}\n      </HorizontalArrowKeyNavigation>\n    </FocusScope>\n  );\n}\n\nfunction HorizontalArrowKeyNavigation({\n  children,\n}: {\n  children: (props: DOMAttributes<FocusableElement>) => ReactNode;\n}) {\n  const focusManager = useFocusManager();\n  const { keyboardProps } = useKeyboard({\n    onKeyDown: (e) => {\n      if (!hasAnyModifier(e)) {\n        if (e.key === \"ArrowLeft\") {\n          return focusManager?.focusPrevious({ wrap: true });\n        } else if (e.key === \"ArrowRight\") {\n          return focusManager?.focusNext({ wrap: true });\n        }\n      }\n      e.continuePropagation();\n    },\n  });\n\n  return <>{children(keyboardProps)}</>;\n}\n","import React, { HTMLProps, ReactNode } from \"react\";\nimport { useToggleState } from \"@react-stately/toggle\";\nimport { useCheckbox } from \"@react-aria/checkbox\";\nimport {\n  AriaLabelingProps,\n  FocusableDOMProps,\n  FocusableProps,\n  InputBase,\n} from \"@react-types/shared\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { styled } from \"@intellij-platform/core/styled\";\n\nimport { CheckboxIcon } from \"./CheckboxIcon\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { MnemonicTrigger } from \"@intellij-platform/core/Mnemonic\";\n\nexport interface CheckboxProps\n  extends InputBase,\n    FocusableDOMProps,\n    AriaLabelingProps,\n    FocusableProps {\n  /**\n   * If set to true, the checkbox won't be focusable.\n   * Common use cases:\n   * - When checkbox is rendered in a focusable container, like a list item where the focus should not be taken away\n   *   from that container.\n   * - \"Amend\" checkbox in \"Commit\" tool window. The focus is kept in the commit message or changes tree, perhaps, for\n   *   a questionably better UX.\n   * Note: Passing {@link excludeFromTabOrder} will still let the checkbox be focusable, while `preventFocus`, doesn't\n   * let the component get focused at all.\n   * TODO(potential): it might be nicer to have a `preventFocusOnPress` prop consistent with IconButton, instead.\n   *  In that case preventing focus completely would be achieved with `preventFocusOnPres` and `excludeFromTabOrder`.\n   */\n  preventFocus?: boolean;\n\n  /**\n   * By default, focus ring is always shown when the checkbox is focused, independent of the interaction method.\n   * if set to false, the focus will be only visible if the interaction is done via keyboard or screen readers.\n   * Similar to how [:focus-visible](https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible) works.\n   */\n  disableFocusAlwaysVisible?: boolean;\n\n  /**\n   * Indeterminism is presentational only.\n   * The indeterminate visual representation remains regardless of user interaction.\n   */\n  isIndeterminate?: boolean;\n\n  /**\n   * The label for the element.\n   */\n  children?: ReactNode;\n\n  /**\n   * Whether the element should be selected (uncontrolled).\n   */\n  defaultSelected?: boolean;\n  /**\n   * Whether the element should be selected (controlled).\n   */\n  isSelected?: boolean;\n  /**\n   * Handler that is called when the element's selection state changes.\n   */\n  onChange?: (isSelected: boolean) => void;\n  /**\n   * The value of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefvalue).\n   */\n  value?: string;\n  /**\n   * The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).\n   */\n  name?: string;\n\n  className?: string; // to support styled-components\n\n  /**\n   * A character to be used as {@link https://jetbrains.design/intellij/principles/mnemonics/ mnemonic} for the button\n   * It will be shown as underlined in button text, when mnemonic is activated (by pressing Alt)\n   * Note: if you use mnemonic, and the direct child of the button is not a string, you should use `Mnemonic.Text`\n   * to render the button text, to have the underlining behavior.\n   */\n  mnemonic?: string;\n}\n\nconst StyledWrapperLabel = styled.label`\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n`;\n\nconst StyledCheckboxLabelText = styled.span<{\n  isDisabled: boolean | undefined;\n}>`\n  margin-left: 0.25rem;\n  color: ${({ theme, isDisabled }) =>\n    isDisabled\n      ? theme.color(\n          \"CheckBox.disabledText\" as UnknownThemeProp<\"CheckBox.disabledText\">,\n          \"#808080\" /* this default value was a bit tricky. Still not clear from where it comes in darcular \n          theme when there is no clue of Checkbox.disabledText or *.disabledText. Note that using \n          CheckBox.disabledForeground is not a good option, because it's something other than #808080 for darcula */\n        )\n      : theme.color(\"*.foreground\")};\n`;\n\nconst StyledInput = styled.input`\n  opacity: 0.0001;\n  position: absolute;\n  z-index: 1;\n  inset: 0;\n  cursor: default;\n  &:disabled {\n    cursor: default;\n  }\n`;\n\n/**\n * Checkbox component to be used with or without a label.\n *\n * While the checkbox without the label + preventFocus makes it usable in tree/list, it might be more optimized to\n * use a more lightweight component like ListItemCheckbox, which uses CheckboxIcon with a simple press handle. Without\n * any input, state, etc.\n */\nexport const Checkbox = ({\n  preventFocus,\n  className,\n  disableFocusAlwaysVisible,\n  mnemonic,\n  ...props\n}: CheckboxProps) => {\n  const state = useToggleState(props);\n  const ref = React.useRef<HTMLInputElement>(null);\n  const { inputProps } = useCheckbox(props, state, ref);\n\n  const { isFocusVisible, isFocused, focusProps } = useFocusRing({\n    autoFocus: props.autoFocus,\n  });\n\n  const focusDisabledProps: Pick<\n    HTMLProps<HTMLInputElement>,\n    \"onFocusCapture\" | \"tabIndex\"\n  > = preventFocus\n    ? {\n        onFocusCapture: (event) => {\n          event.stopPropagation();\n          event.preventDefault();\n          if (event.relatedTarget instanceof HTMLElement) {\n            event.relatedTarget.focus();\n          } else {\n            event.target.blur();\n          }\n        },\n        tabIndex: -1,\n      }\n    : {};\n\n  return (\n    <StyledWrapperLabel className={className}>\n      <StyledInput\n        {...mergeProps(inputProps, focusProps, focusDisabledProps)}\n        ref={ref}\n      />\n      <CheckboxIcon\n        isIndeterminate={props.isIndeterminate}\n        isFocused={disableFocusAlwaysVisible ? isFocusVisible : isFocused}\n        isSelected={props.isIndeterminate || state.isSelected}\n        isDisabled={props.isDisabled}\n        aria-hidden=\"true\"\n        style={{\n          pointerEvents: \"none\",\n        }}\n      />\n      {props.children && (\n        <StyledCheckboxLabelText isDisabled={props.isDisabled}>\n          {mnemonic ? (\n            <MnemonicTrigger\n              mnemonic={mnemonic}\n              isDisabled={props.isDisabled}\n              onTriggered={state.toggle}\n            >\n              {props.children}\n            </MnemonicTrigger>\n          ) : (\n            props.children\n          )}\n        </StyledCheckboxLabelText>\n      )}\n    </StyledWrapperLabel>\n  );\n};\n","import React, { ComponentProps } from \"react\";\nimport { LafIcon } from \"@intellij-platform/core/Icon\";\n\n/**\n * Renders checkbox UI in different states (focused, selected, indeterminate, etc.), without having anything to do\n * with the interactions\n */\nexport const CheckboxIcon = ({\n  isDisabled,\n  isFocused,\n  isIndeterminate,\n  isSelected,\n  ...otherProps\n}: Omit<ComponentProps<typeof LafIcon>, \"size\" | \"icon\"> & {\n  isIndeterminate: boolean | undefined;\n  isFocused: boolean;\n  isDisabled: boolean | undefined;\n  isSelected: boolean;\n}) => {\n  return (\n    <LafIcon\n      {...otherProps}\n      size={20}\n      icon={{\n        name: isIndeterminate ? \"checkBoxIndeterminate\" : \"checkBox\",\n        modifiers: {\n          Disabled: isDisabled,\n          Selected: isSelected || isIndeterminate,\n          Focused: isFocused,\n        },\n      }}\n    />\n  );\n};\n","import React from \"react\";\nimport { Collection, Node } from \"@react-types/shared\";\nimport { CollectionSpeedSearchMatches } from \"./useCollectionSpeedSearchResult\";\n\nexport type CollectionSpeedSearchContextValue = {\n  matches: CollectionSpeedSearchMatches;\n  collection: Collection<Node<unknown>>;\n};\n\nexport const CollectionSpeedSearchContext =\n  React.createContext<CollectionSpeedSearchContextValue | null>(null);\n","import React, { Key, useContext } from \"react\";\nimport { TextWithHighlights } from \"@intellij-platform/core/TextWithHighlights/TextWithHighlights\";\nimport { TextRange } from \"@intellij-platform/core/TextRange\";\nimport { CollectionSpeedSearchContext } from \"@intellij-platform/core/CollectionSpeedSearch/CollectionSpeedSearchContext\";\n\ntype CollectionSpeedSearchItemContextValue = {\n  text: string;\n  highlightedRanges: null | TextRange[];\n};\n\nconst CollectionSpeedSearchItemContext =\n  React.createContext<null | CollectionSpeedSearchItemContextValue>(null);\n\nexport const SpeedSearchItemHighlightsProvider: React.FC<{\n  children?: React.ReactNode;\n  itemKey: Key;\n}> = ({ children, itemKey }) => {\n  const context = useContext(CollectionSpeedSearchContext);\n  if (!context) {\n    throw new Error(\n      `SpeedSearchItemProvider is only meant to be rendered by collection components with speed search. \n      CollectionSpeedSearchContext is expected to be rendered as a wrapper around all items.`\n    );\n  }\n  const item = context.collection.getItem(itemKey);\n  const text = item?.textValue ?? \"\";\n  if (!text && item?.props.textValue === undefined) {\n    console.warn(\n      \"no textValue specified on Item. When using SpeedSearch, you need to specify textValue for item, which will be the basis for search\"\n    );\n  }\n  return (\n    <CollectionSpeedSearchItemContext.Provider\n      value={{\n        highlightedRanges: context.matches.get(itemKey) || null,\n        text: text,\n      }}\n    >\n      {children}\n    </CollectionSpeedSearchItemContext.Provider>\n  );\n};\n\n/**\n * Used inside Item content, to render the textValue of the Item, potentially with highlighted ranges if it's a match\n * in current search.\n */\nexport const HighlightedTextValue = function ({\n  Component = \"span\",\n}: {\n  /**\n   * When rendering in a flex parent (which is the case for tree or list), rendering a container is necessary to have\n   * the right spacing around highlights, when the highlighter span is immediately followed or proceeded by a white\n   * space. By default, a \"span\" is rendered.\n   */\n  Component?: React.ElementType;\n}) {\n  const speedSearchContext = React.useContext(CollectionSpeedSearchItemContext);\n  if (!speedSearchContext) {\n    throw new Error(\n      \"HighlightedTextValue should be rendered only in items of a speed search enabled collection component\"\n    );\n  }\n  const { highlightedRanges, text } = speedSearchContext;\n  return (\n    <Component>\n      {highlightedRanges ? (\n        <TextWithHighlights highlights={highlightedRanges}>\n          {text}\n        </TextWithHighlights>\n      ) : (\n        text\n      )}\n    </Component>\n  );\n};\n","import { Key, useEffect, useMemo } from \"react\";\nimport { minusculeMatch } from \"../minusculeMatch\";\nimport { SpeedSearchState } from \"../SpeedSearch/useSpeedSearch\";\nimport { Collection, Node } from \"@react-types/shared\";\nimport { SelectionManager } from \"@react-stately/selection\";\nimport { createSpeedSearchSelectionManager } from \"./createSpeedSearchSelectionManager\";\nimport { TextRange } from \"@intellij-platform/core/TextRange\";\nimport { useLatest } from \"@intellij-platform/core/utils/useLatest\";\n\nexport type CollectionSpeedSearchMatches = Map<Key, TextRange[]>;\n\nexport function useCollectionSpeedSearchResult<T>({\n  collection,\n  selectionManager: inputSelectionManager,\n  speedSearch,\n  focusBestMatch = false,\n}: {\n  collection: Collection<Node<T>>;\n  selectionManager: SelectionManager;\n  speedSearch: SpeedSearchState;\n  /**\n   * If true, focusing the best match (the longest \"start-with\" match) will be preferred.\n   * By default, the focus is moved to the first match that comes after the currently focused item, if currently\n   * focused item itself is not a match.\n   * A typical use case would be collections that filter out non-match items.\n   * @default false\n   */\n  focusBestMatch?: boolean;\n}) {\n  const { searchTerm, active } = speedSearch;\n\n  /**\n   * Note: when a component is implemented using react-aria's useCollection, any re-render of that component causes\n   * a new collection. That's because prop.children is normally an inline function, and therefore the collection is\n   * re-created: https://github.com/adobe/react-spectrum/blob/4a1cff846018e449487ccf54d7474bdfa4d4f57c/packages/@react-stately/collections/src/useCollection.ts#L29\n   * This means we will unnecessarily perform the search in such cases. it might be a non-issue, but if it turned out\n   * to be an issue, a sub-optimum improvement would be to use `collection.size` as a dependency instead of `collection`,\n   * assuming that searchable text in collections won't change, and assuming that the important changes (search-wise)\n   * will usually involve a size change in the collection.\n   */\n  const { matches } = useMemo(() => {\n    const matches: CollectionSpeedSearchMatches = new Map(); // maybe make it nullable makes more sense\n    if (speedSearch.active) {\n      // it's important not to iterate on items, since they can be nested.\n      [...collection.getKeys()]\n        .map((key) => collection.getItem(key)!)\n        .filter(({ type }) => type === \"item\")\n        .forEach((item) => {\n          const matchedRanges = minusculeMatch(item.textValue, searchTerm);\n          if (matchedRanges) {\n            matches.set(item.key, matchedRanges);\n          }\n        });\n    }\n\n    return {\n      matches,\n    };\n  }, [searchTerm, collection, active]);\n\n  const selectionManager = createSpeedSearchSelectionManager(\n    inputSelectionManager,\n    active ? matches : null\n  );\n  const latestValues = useLatest({\n    matches,\n    selectionManager,\n    collection,\n    focusBestMatch,\n  });\n\n  // On every query change, if the current selection doesn't include any of the matched items, move selection to the\n  // first matched item.\n  useEffect(() => {\n    const { selectionManager, matches, collection } = latestValues.current;\n    const matchedKeys = [...matches.keys()];\n    const noneOfTheMatchesAreSelected = !matchedKeys.some((matchedKey) =>\n      selectionManager.isSelected(matchedKey)\n    );\n    let keyToFocus: Key | undefined;\n    if (latestValues.current.focusBestMatch) {\n      keyToFocus = getLongestCommonPrefixMatch(matches);\n    }\n    if (!keyToFocus && matchedKeys.length > 0 && noneOfTheMatchesAreSelected) {\n      keyToFocus = getMatchToSelect({\n        collection,\n        selectionManager,\n        matchedKeys,\n      });\n    }\n    if (keyToFocus) {\n      selectionManager.setFocusedKey(keyToFocus);\n      selectionManager.replaceSelection(keyToFocus);\n    }\n  }, [\n    searchTerm,\n    latestValues /*it's a ref object, so no harm in listing it here to comply with rules of hooks*/,\n  ]);\n  return {\n    matches,\n    selectionManager,\n  };\n}\n\n/**\n * given a non-empty array of matched keys, returns the one that should be selected\n */\nfunction getMatchToSelect({\n  collection,\n  selectionManager,\n  matchedKeys,\n}: {\n  collection: Collection<Node<unknown>>;\n  selectionManager: SelectionManager;\n  matchedKeys: Key[];\n}): Key {\n  let passedFirstSelection = false;\n  for (const key of collection.getKeys()) {\n    if (key === selectionManager.firstSelectedKey) {\n      passedFirstSelection = true;\n    }\n    if (passedFirstSelection && matchedKeys.includes(key)) {\n      return key;\n    }\n  }\n  return matchedKeys[0];\n}\n\n/**\n * Returns the longest match from the beginning, if exists.\n */\nfunction getLongestCommonPrefixMatch(matches: CollectionSpeedSearchMatches) {\n  return [...matches.entries()]\n    .filter(([, [firstRange]]) => firstRange?.from === 0)\n    .sort(\n      ([, [rangeA]], [, [rangeB]]) =>\n        rangeB.to - rangeB.from - rangeA.to - rangeA.from\n    )?.[0]?.[0];\n}\n","import { SelectionManager } from \"@react-stately/selection\";\nimport { Key } from \"react\";\n\nexport function createSpeedSearchSelectionManager(\n  wrappedSelectionManager: SelectionManager,\n  matches: Map<Key, unknown /* We don't care what a match is here */> | null\n): SelectionManager {\n  return Object.create(wrappedSelectionManager, {\n    selectAll: {\n      value: () => {\n        if (matches) {\n          // @ts-expect-error: state is private and there is no API on SelectionManager for bulk\n          // setting selected keys (which would ideally check for not selecting disabled keys internally).\n          const state = wrappedSelectionManager.state;\n          state.setSelectedKeys(\n            new Set(\n              [...matches.keys()].filter((key) => !state.disabledKeys.has(key))\n            )\n          );\n        } else {\n          wrappedSelectionManager.selectAll();\n        }\n      },\n    },\n  });\n}\n","import { HTMLAttributes, RefObject, useMemo } from \"react\";\nimport { Collection, KeyboardDelegate, Node } from \"@react-types/shared\";\nimport { SelectionManager } from \"@react-stately/selection\";\nimport {\n  SpeedSearchPopupProps,\n  SpeedSearchProps,\n} from \"@intellij-platform/core/SpeedSearch\";\nimport {\n  SpeedSearchState,\n  SpeedSearchStateProps,\n  useSpeedSearch,\n  useSpeedSearchState,\n} from \"../SpeedSearch/useSpeedSearch\";\nimport { CollectionSpeedSearchContextValue } from \"./CollectionSpeedSearchContext\";\nimport {\n  CollectionSpeedSearchMatches,\n  useCollectionSpeedSearchResult,\n} from \"./useCollectionSpeedSearchResult\";\nimport { createSpeedSearchKeyboardDelegate } from \"./createSpeedSearchKeyboardDelegate\";\n\nexport interface CollectionSpeedSearch {\n  containerProps: HTMLAttributes<HTMLElement>;\n  selectionManager: SelectionManager;\n  keyboardDelegate: KeyboardDelegate;\n  speedSearch: SpeedSearchState & { matches: CollectionSpeedSearchMatches };\n  searchPopupProps: SpeedSearchPopupProps;\n  speedSearchContextValue: CollectionSpeedSearchContextValue;\n}\n\n/**\n * Given a `collection`, a `selectionManager` and a `keyboardDelegate`, it returns:\n * - `speedSearch`: search term, if speed search is active or not, and the matched keys\n * - `matches`: A Set of matched keys, or `null` if speed search is not active\n * - `containerProps`: The props you need to pass to the collection container element to enable\n * speedSearch on it.\n * - `selectionManager`: a selection manager in which select all is overridden to only select\n * matched items if speed search is active.\n * - `keyboardDelegate`: a keyboard delegate in which limits navigation to matched items, when\n * speed search is active.\n *\n * Speed search options, including the ones for optionally controlling the state of the speed search\n * are also accepted in inputs.\n */\nexport function useCollectionSpeedSearch<T>({\n  collection,\n  selectionManager,\n  keepSearchActiveOnBlur,\n  keyboardDelegate,\n  focusBestMatch,\n  ref,\n  ...speedSearchStateProps\n}: {\n  collection: Collection<Node<T>>;\n  selectionManager: SelectionManager;\n  keyboardDelegate: KeyboardDelegate;\n  ref: RefObject<HTMLElement>;\n  focusBestMatch?: boolean;\n} & SpeedSearchStateProps &\n  Pick<SpeedSearchProps, \"keepSearchActiveOnBlur\">): CollectionSpeedSearch {\n  const speedSearch = useSpeedSearchState(speedSearchStateProps);\n\n  const { matches, selectionManager: speedSearchSelectionManager } =\n    useCollectionSpeedSearchResult({\n      collection,\n      selectionManager,\n      speedSearch,\n      focusBestMatch,\n    });\n  const { containerProps } = useSpeedSearch(\n    { keepSearchActiveOnBlur },\n    speedSearch,\n    ref\n  );\n  const speedSearchKeyboardDelegate = useMemo(\n    () =>\n      createSpeedSearchKeyboardDelegate(\n        keyboardDelegate,\n        speedSearch.active ? matches : null\n      ),\n    [speedSearch.active, keyboardDelegate, matches]\n  );\n\n  // Doesn't seem necessary to wrap with useMemo, but can be rethink-ed\n  const speedSearchContextValue = { matches, collection };\n\n  return {\n    containerProps,\n    selectionManager: speedSearchSelectionManager,\n    keyboardDelegate: speedSearchKeyboardDelegate,\n    speedSearch: {\n      ...speedSearch,\n      matches,\n    },\n    searchPopupProps: {\n      active: speedSearch.active,\n      match: matches.size > 0,\n      children: speedSearch.searchTerm,\n    },\n    speedSearchContextValue,\n  };\n}\n","import React, { Key } from \"react\";\nimport { KeyboardDelegate } from \"@react-types/shared\";\n\n/**\n * Creates a new KeyboardDelegate in which keyKeyBelow and getKeyAbove are overridden in a way that\n * navigation is limited to matched items.\n * Note: select all action is not handled in KeyboardDelegate.\n * Note: when virtualization is added, this probably need to change, like how it's handled\n * in `useListBoxLayout` in react spectrum.\n */\nexport function createSpeedSearchKeyboardDelegate(\n  wrappedKeyboardDelegate: KeyboardDelegate,\n  matches: Map<Key, unknown /*We don't care what a match is, here*/> | null\n): KeyboardDelegate {\n  // TODO: page up and down deactivate speed search. If we want that, we can pass the speedSearch\n  //  object too. but doesn't seem like the best way to do it, even it the same behavior is expected\n  const findFirstMatch = <T extends React.Key | undefined, K>(\n    fromKey: React.Key | undefined | null,\n    direction: \"up\" | \"down\"\n  ) => {\n    let currentKey: React.Key | undefined | null = fromKey;\n    while (currentKey != null) {\n      if (!matches || matches.has(currentKey)) {\n        return currentKey;\n      }\n      currentKey =\n        direction === \"up\"\n          ? wrappedKeyboardDelegate.getKeyAbove?.(currentKey)\n          : wrappedKeyboardDelegate.getKeyBelow?.(currentKey);\n    }\n    return currentKey ?? undefined;\n  };\n  return Object.create(wrappedKeyboardDelegate, {\n    getKeyBelow: {\n      value: (key) =>\n        findFirstMatch(wrappedKeyboardDelegate.getKeyBelow?.(key), \"down\"),\n    },\n    getKeyAbove: {\n      value: (key) =>\n        findFirstMatch(wrappedKeyboardDelegate.getKeyAbove?.(key), \"up\"),\n    },\n    getFirstKey: {\n      value: (key?: React.Key, global?: boolean): React.Key | null => {\n        const firstKey = findFirstMatch(\n          wrappedKeyboardDelegate.getFirstKey?.(key, global),\n          \"down\"\n        );\n        return firstKey == null ? matches?.values().next().value : firstKey;\n      },\n    },\n    getLastKey: {\n      value: (key?: React.Key, global?: boolean): React.Key | null => {\n        const lastKey = findFirstMatch(\n          wrappedKeyboardDelegate.getLastKey?.(key, global),\n          \"down\"\n        );\n        return lastKey == null\n          ? [...(matches?.keys() || [])].pop() ?? null\n          : lastKey;\n      },\n    },\n  } as { [key in keyof KeyboardDelegate]: { value: KeyboardDelegate[key] } });\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport { ReactElement } from \"react\";\nimport { ItemProps } from \"@react-types/shared\";\nimport { PartialNode } from \"@react-stately/collections\";\n\ninterface DividerProps {}\n\n/**\n * To be used in dynamic collections, just to provide a key and make it easy to check in the render\n * function to figure out what to render (an Item or a Divider)\n */\nexport class DividerItem {\n  private static seq = 0;\n  key = \"divider_\" + DividerItem.seq++;\n  get id() {\n    return this.key;\n  }\n}\n\nfunction Divider({}: DividerProps): ReactElement {\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null as any;\n}\n// We don't want getCollectionNode to show up in the type definition\nlet _Divider = Divider as (props: DividerProps) => JSX.Element;\nexport { _Divider as Divider };\n\nDivider.getCollectionNode = function* getCollectionNode<T>(\n  props: ItemProps<T>\n): Generator<PartialNode<T>> {\n  let rendered = null;\n\n  yield {\n    type: \"divider\",\n    element: null as any, // to prevent check on key, which is not necessary for divider\n    props: props,\n    rendered,\n    hasChildNodes: false,\n  };\n};\n","import React, { ReactElement } from \"react\";\nimport { ItemProps } from \"@react-types/shared\";\nimport { Item as StatelyItem, PartialNode } from \"@react-stately/collections\";\n\n// noinspection JSUnusedLocalSymbols\n/**\n * Item for collection components, which by default disables caching, unless `invalidated` prop is set to false on the\n * context passed to useCollection. Control over cache invalidation policy can be enabled by using\n * `useCollectionCacheInvalidation` for creating such context object.\n */\nfunction Item<T>(props: ItemProps<T>): ReactElement {\n  return null as any as React.ReactElement;\n}\n\nexport type CacheInvalidationContext = { invalidated?: boolean };\n\n// We don't want getCollectionNode to show up in the type definition\nlet _Item = Item as <T>(props: ItemProps<T>) => JSX.Element;\nexport { _Item as Item };\n\n/**\n * @private @preapproved\n */\nItem.getCollectionNode = function* getCollectionNode<T>(\n  props: ItemProps<T>,\n  context: CacheInvalidationContext\n): Generator<PartialNode<T>> {\n  const itemGenerator: Generator<PartialNode<T>> = (\n    StatelyItem as any\n  ).getCollectionNode(props, context);\n  const result = itemGenerator.next().value;\n  const originalShouldInvalidate = result.shouldInvalidate;\n  result.shouldInvalidate = (context: CacheInvalidationContext) =>\n    originalShouldInvalidate?.(context) || context.invalidated;\n  yield result;\n};\n","import React from \"react\";\nimport { styled } from \"../styled\";\nimport { DOMAttributes } from \"@react-types/shared\";\nimport { MENU_POSITION_TARGET_DATA_ATTRIBUTE } from \"@intellij-platform/core/Menu/ContextMenuContainer\";\n\nconst GAP = \"0.1875rem\";\nconst StyledItemLayout = styled.div`\n  display: flex;\n  align-items: center;\n  padding-right: 0.25rem;\n  gap: ${GAP};\n`;\n\nconst StyledHint = styled.span<{ small?: boolean }>`\n  display: inline-flex;\n  color: ${({ theme }) =>\n    theme.currentForegroundAware(theme.commonColors.inactiveTextColor)};\n  padding-left: 0.1rem;\n  font-size: ${({ small }) => small && \"0.9em\"};\n`;\n\nconst StyledGroup = styled.span.attrs({\n  role: \"presentation\" as string,\n})`\n  display: inline-flex;\n  display: flex;\n  align-items: center;\n  gap: ${GAP};\n`;\n/**\n * Generic layout component capturing common use cases of tree or list items.\n * It handles the spacing between parts, and provides styled components for parts that need specific styling.\n * For more flexibility over the order of various pieces of content in list/tree items, there is no specific props\n * for parts. Different parts should just be rendered in children.\n *\n * @example\n * ```tsx\n * <ItemLayout>\n *   <PlatformIcon icon=\"nodes/folder\" />\n *   <HighlightedTextValue />\n *   <ItemLayout.Hint>~/workspace/jui</ItemLayout.Hint>\n * </ItemLayout>\n * ```\n * @beta\n */\nexport const ItemLayout = (\n  props: { children: React.ReactNode } & DOMAttributes\n) => {\n  return (\n    <StyledItemLayout\n      {...{ [MENU_POSITION_TARGET_DATA_ATTRIBUTE]: true }}\n      {...props}\n    />\n  );\n};\n\n/**\n * A more subtle text usually rendered next to the main text in the item.\n * @example: project path in project root node, in project view\n * @example: \"library root\" rendered next to \"node_modules\" folders in project view.\n */\nItemLayout.Hint = StyledHint;\n\n/**\n * Useful when a number of items need to be grouped by a wrapper, e.g. to have a tooltip.\n * @example: project path in project root node, in project view\n * @example: \"library root\" rendered next to \"node_modules\" folders in project view.\n */\nItemLayout.Group = StyledGroup;\n","import React from \"react\";\nimport { Node } from \"@react-types/shared\";\n\n/**\n * Generic state of items in collections, provided via a context.\n * To be used in Menu, Tree, or anything that deals with a collection of items for which the common states like\n * **disabled** or **selected** is applicable.\n */\nexport interface ItemStateContextType {\n  node: Node<unknown>;\n  isSelected: boolean;\n  isContainerFocused: boolean;\n  isDisabled: boolean;\n}\n\nexport const ItemStateContext =\n  React.createContext<ItemStateContextType | null>(null);\n","import { RefObject, useEffect } from \"react\";\nimport { SelectionManager } from \"@react-stately/selection\";\nimport { scrollIntoView } from \"@react-aria/utils\";\n\ntype CollectionAutoScrollProps = {\n  isVirtualized?: boolean;\n  selectionManager: SelectionManager;\n};\n\nexport function useCollectionAutoScroll(\n  { isVirtualized, selectionManager }: CollectionAutoScrollProps,\n  ref: RefObject<HTMLElement>\n) {\n  // If not virtualized, scroll the focused element into view when the focusedKey changes.\n  // When virtualized, Virtualizer handles this internally.\n  useEffect(() => {\n    if (!isVirtualized && selectionManager.focusedKey && ref?.current) {\n      let element = ref.current.querySelector(\n        `[data-key=\"${selectionManager.focusedKey}\"]`\n      ) as HTMLElement;\n      if (element) {\n        scrollIntoView(ref.current, element);\n      }\n    }\n  }, [isVirtualized, ref, selectionManager.focusedKey]);\n}\n","import { SelectionManager } from \"@react-stately/selection\";\nimport { RefObject, useImperativeHandle } from \"react\";\n\nexport type CollectionRefProps = {\n  /**\n   * Gives imperative access to selection manager.\n   */\n  selectionManagerRef?: RefObject<SelectionManager>;\n};\n\n/**\n * Common imperative API for collections. Used in Lists at the moment. Tree components implement a different imperative\n * API that can be refactored later for more consistency.\n */\nexport function useCollectionRef(\n  { selectionManagerRef }: CollectionRefProps,\n  state: { selectionManager: SelectionManager }\n) {\n  useImperativeHandle(selectionManagerRef, () => state.selectionManager);\n}\n","import React, { Key, RefObject } from \"react\";\nimport { SelectionManager } from \"@react-stately/selection\";\nimport { useEventCallback } from \"@intellij-platform/core/utils/useEventCallback\";\nimport { DOMAttributes } from \"@react-types/shared\";\n\n/**\n * A solution for connecting a collection to a search input, so that collection can still be navigated by keyboard\n * while the input is focused. It works by replaying certain keyboard events on the collection container and focused\n * item. An alternative approach (which is used in react-aria's useCombobox) is to use useSelectableCollection\n * separately for the input, but the biggest issue with that approach is that it's limiting in the following ways:\n * - Rendering input should be a part of the same component that renders the collection. Having specific components\n *   for use cases that requires a search input is not flexible enough. For example one may want to use SpeedSearchList\n *   or List connected to an input. Also, the input and the collection may need to be in different layouts in different\n *   use cases. Decoupling the rendering of the input and collection is a more flexible solution.\n * - The same options used for collection should be passed to the input field for behavior consistency, and that can be\n *   prone to error. Some of these options, like `keyboardDelegate` can even have a default value in hooks like\n *   `useSelectableList`, which means for making sure the same value is passed to the useSelectableCollection for input,\n *   would require to not use the default value, since the same value can't be accessed.\n *\n * With this event forwarding approach, it's an arrow up or down event would behave exactly like it was triggered on\n * the collection itself, leaving no room for behavior discrepancies. But it has a few drawbacks:\n * - Although small, there is still some coupling between this code and implementation of the collection component.\n *   More specifically, the following things are assumed by this implementation:\n *   - \"Enter\" keys (selection or action) are handled on items, but arrow keys are handled on the collection element.\n *   - \"[data-key] attribute is set on items. That is used to find the element for the focused item (which of course is\n *     not actually focused while the input is).\n */\nexport const useCollectionSearchInput = ({\n  collectionRef,\n  selectionManager,\n  onAction,\n}: {\n  /**\n   * ref to the html element of the collection component\n   */\n  collectionRef: RefObject<HTMLElement>;\n  /**\n   * SelectionManager instance, returned from the state management hook for the collection component.\n   * {@link CollectionRefProps.selectionManagerRef} can be used on collection components that implement\n   * `useCollectionRef`, to get a hold of selection manager, from outside.\n   */\n  selectionManager: SelectionManager | null | undefined;\n  /**\n   * onAction callback passed to the collection component. It's needed since some upgrade of @react-aria/interactions,\n   * since a check is added to not have keyup events on outside elements trigger onPress. That's to prevent scenarios\n   * where focus is moved between keydown and keyup, but is also breaking the previous solution of just replying\n   * input keyboard events on the list item.\n   * @param key\n   */\n  onAction?: (key: Key) => void;\n}): { collectionSearchInputProps: DOMAttributes<HTMLInputElement> } => {\n  const relayEventsToCollection = useEventCallback(\n    (event: React.KeyboardEvent<HTMLInputElement>) => {\n      // Relay ArrowUp and ArrowDown to the container\n      if (\n        event.type === \"keydown\" &&\n        (event.key === \"ArrowUp\" || event.key === \"ArrowDown\")\n      ) {\n        event.preventDefault();\n        event.stopPropagation();\n        collectionRef.current?.dispatchEvent(\n          new KeyboardEvent(event.type, event.nativeEvent)\n        );\n      } else if (\n        event.type === \"keydown\" &&\n        event.key === \"Enter\" &&\n        selectionManager?.focusedKey != null\n      ) {\n        event.currentTarget.addEventListener(\n          \"keyup\",\n          (event: KeyboardEvent) => {\n            if (event.key === \"Enter\" && selectionManager?.focusedKey != null) {\n              onAction?.(selectionManager?.focusedKey);\n            }\n          },\n          { once: true, capture: true }\n        );\n      }\n    }\n  );\n\n  return {\n    collectionSearchInputProps: {\n      onKeyDown: relayEventsToCollection,\n      onKeyPress: relayEventsToCollection,\n    },\n  };\n};\n","import { styled } from \"@intellij-platform/core/styled\";\nimport React, { ForwardedRef } from \"react\";\nimport { amendName, PlatformIcon, PlatformIconProps } from \"./PlatformIcon\";\n\nexport const StyledHoverContainer = styled.span<{\n  hoverContainerSelector?: string;\n}>`\n  ${({ hoverContainerSelector }) =>\n    hoverContainerSelector\n      ? `${hoverContainerSelector} &`\n      : \"\"} .icon[data-hover] {\n    display: none;\n  }\n\n  ${({ hoverContainerSelector }) =>\n    hoverContainerSelector ? `${hoverContainerSelector}:hover &` : \"&:hover\"} {\n    .icon {\n      display: none;\n    }\n\n    .icon[data-hover] {\n      display: inline-flex;\n    }\n  }\n`;\n\nconst StyledIconHoverContainer = styled(StyledHoverContainer)`\n  display: inline-flex;\n`;\n\n/**\n * A common use case for PlatformIcons is to have a default icon and a hover icon.\n * This component captures that simple use case, by rendering both icons, and hiding one based on a hover selector.\n *\n * ### Parent hover container\n *\n * If the hover-able element is a parent of the icon, and not the icon itself (i.e., the icon should change if the\n * that parent is hovered), you can use `StyledHoverContainer` to define that parent element:\n *\n * ```tsx\n * const SomeParent = styled(StyledHoverContainer)`...`;\n * <SomeParent><AutoHoverPlatformIcon icon=\"...\" /></SomeParent>\n * ```\n *\n * If the hover-able element is a parent of the icon, with a known selector, you can pass `hoverContainerSelector`,\n * instead of using `StyledHoverContainer`:\n *\n * ```tsx\n * <AutoHoverPlatformIcon icon=\"...\" hoverContainerSelector=\"[role=menuitem]\" />\n * ```\n *\n * If the hover container is a styled component, you can have it converted to selector like this:\n *\n * ```tsx\n * <AutoHoverPlatformIcon icon=\"...\" hoverContainerSelector={`${MyStyledHoverContainer}`} />\n * ```\n *\n * In all examples above, the hover icon is shown when the parent is hovered, instead of the icon itself.\n *\n */\nexport const AutoHoverPlatformIcon = React.forwardRef(\n  function AutoHoverPlatformIcon(\n    {\n      hoverIcon,\n      hoverContainerSelector,\n      ...props\n    }: PlatformIconProps & {\n      /**\n       * The icon to be used when hovered. If not provided, it will be the \"somethingHovered\" where \"something\" is the `icon`\n       */\n      hoverIcon?: string;\n      hoverContainerSelector?: string;\n    },\n    ref: ForwardedRef<HTMLSpanElement>\n  ) {\n    const className = `icon ${props.className || \"\"}`;\n    return (\n      <StyledIconHoverContainer\n        ref={ref}\n        hoverContainerSelector={hoverContainerSelector}\n      >\n        <PlatformIcon {...props} className={className} />\n        <PlatformIcon\n          {...props}\n          className={className}\n          icon={hoverIcon ?? amendName(props.icon, \"Hover\")}\n          data-hover\n        />\n      </StyledIconHoverContainer>\n    );\n  }\n);\n","import useForwardedRef from \"@intellij-platform/core/utils/useForwardedRef\";\nimport React, { ForwardedRef } from \"react\";\nimport { useTheme } from \"styled-components\";\nimport { Theme } from \"../Theme/Theme\";\nimport { IconProps } from \"./IconProps\";\nimport { StyledIconWrapper } from \"./StyledIconWrapper\";\nimport { useSvgIcon } from \"./useSvgIcon\";\n\ninterface IconModifiers {\n  Selected?: boolean;\n  Focused?: boolean;\n  Disabled?: boolean;\n  Editable?: boolean;\n  Pressed?: boolean;\n}\n\nexport interface ThemeIconProps extends IconProps {\n  /**\n   * Icon which will be resolved against the default icon location based on theme type\n   */\n  icon: string | { name: string; modifiers: IconModifiers };\n\n  /**\n   * A theme key that can optionally override the icon.\n   */\n  themePath?: string;\n}\n\nconst ICONS_DIR_PREFIX = \"com/intellij/ide/ui/laf/icons/\";\n\n// Similar to LafIconLookup\nfunction findIconPath(\n  theme: Theme,\n  name: string,\n  modifiers: IconModifiers = {}\n) {\n  const basePath = `${ICONS_DIR_PREFIX}${\n    theme.isUnderDarcula() ? \"darcula/\" : \"intellij/\"\n  }`;\n  const suffix = (\n    [\"Editable\", \"Selected\", \"Pressed\", \"Focused\", \"Disabled\"] as Array<\n      keyof typeof modifiers\n    >\n  )\n    .filter((modifier) =>\n      // Focused or Pressed can't coexist with Disabled\n      modifiers.Disabled ? ![\"Focused\", \"Pressed\"].includes(modifier) : true\n    )\n    .reduce(\n      (soFar, modifier) => soFar + (modifiers[modifier] ? modifier : \"\"),\n      \"\"\n    );\n  return `${basePath}${name}${suffix}.svg`;\n}\n\nfunction useIconPath(\n  iconDescriptor: string | { name: string; modifiers?: IconModifiers },\n  themePath?: string\n) {\n  const theme = useTheme() as Theme; // TODO: investigate why useTheme is typed like this\n  const resolvedValue = themePath && theme.value(themePath);\n  if (resolvedValue) {\n    return resolvedValue;\n  }\n  const { modifiers = {}, name } =\n    typeof iconDescriptor === \"string\"\n      ? { name: iconDescriptor }\n      : iconDescriptor;\n  return findIconPath(theme, name, modifiers);\n}\n\nexport const LafIcon = React.forwardRef(\n  (\n    { themePath, icon, size, ...props }: ThemeIconProps,\n    forwardedRef: ForwardedRef<HTMLElement>\n  ) => {\n    const resolvedIconPath = useIconPath(icon, themePath);\n\n    const ref = useForwardedRef(forwardedRef);\n    useSvgIcon({ path: `platform/platform-impl/src/${resolvedIconPath}` }, ref);\n    return <StyledIconWrapper {...props} ref={ref} size={size} />;\n  }\n);\n","import React, { ForwardedRef } from \"react\";\nimport useForwardedRef from \"@intellij-platform/core/utils/useForwardedRef\";\nimport { useTheme } from \"@intellij-platform/core/styled\";\nimport { IconProps } from \"./IconProps\";\nimport { StyledIconWrapper } from \"./StyledIconWrapper\";\nimport { useSvgIcon } from \"./useSvgIcon\";\n\nexport interface PlatformIconProps extends IconProps {\n  /**\n   * Icon path in intellij platform repo.\n   * If starts with \"/\", the path will be from the repo root. Otherwise, it's relative to \"platform/icons/src\".\n   * \".svg\" extension is optional.\n   */\n  icon: string;\n  /**\n   * Similar to icon, but for dark themes.\n   */\n  darkIcon?: string;\n}\n\nexport const amendName = (iconNameOrPath: string, amendment: string) => {\n  const [name, ext] = iconNameOrPath.split(\".\");\n  return `${name}${amendment}${ext ? `.${ext}` : \"\"}`;\n};\n\nexport const getDarkPath = (path: string, darkPath?: string) => {\n  const [name, ext] = path.split(\".\");\n  return darkPath || `${name}_dark${ext ? `.${ext}` : \"\"}`;\n};\n\nconst getPlatformIconPath = (relativePath: string) =>\n  relativePath.startsWith(\"/\")\n    ? relativePath.slice(1)\n    : `platform/icons/src/${relativePath}`;\n\n/**\n * Renders an icon from the predefined list of platform icons.\n * icon name must follow the directory structure in platform icons.\n * @example <PlatformIcon icon=\"general/hideToolWindow\" />\n * @example <PlatformIcon icon=\"toolbar/pin\" />\n * @example <PlatformIcon icon=\"toolbar/pin.svg\" />\n * @example <PlatformIcon icon=\"/platform/dvcs-impl/resources/icons/currentBranchLabel.svg\" />\n */\nexport const PlatformIcon = React.forwardRef(\n  (\n    { icon, darkIcon, ...props }: PlatformIconProps,\n    forwardedRef: ForwardedRef<HTMLElement>\n  ) => {\n    const ref = useForwardedRef(forwardedRef);\n    const theme = useTheme();\n    const iconName = theme.dark ? getDarkPath(icon, darkIcon) : icon;\n    useSvgIcon(\n      {\n        path: getPlatformIconPath(iconName),\n        fallbackPath: getPlatformIconPath(icon),\n      },\n      ref\n    );\n\n    return <StyledIconWrapper {...props} ref={ref} />;\n  }\n);\n","import { styled } from \"../styled\";\nimport { IconSize } from \"@intellij-platform/core/Icon/IconProps\";\n\nconst DEFAULT_ICON_SIZE: IconSize = 16;\n\nexport const StyledIconWrapper = styled.span<{\n  size?: IconSize;\n  useCurrentColor?: boolean;\n  role?: string;\n}>`\n  box-sizing: border-box;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 0;\n  width: ${({ size = DEFAULT_ICON_SIZE }) => `${size}px`};\n  height: ${({ size = DEFAULT_ICON_SIZE }) => `${size}px`};\n  position: relative; // to allow absolute positioned indicators and overlays on icon\n  cursor: ${({ role }) => (role === \"button\" ? \"pointer\" : undefined)};\n`;\n","import { RefObject, useContext, useEffect } from \"react\";\nimport { useTheme } from \"@intellij-platform/core/styled\";\nimport { ItemStateContext } from \"@intellij-platform/core/Collections\";\n\nexport function useSvgIcon(\n  { path, fallbackPath }: { path: string; fallbackPath?: string },\n  /**\n   * ref to the icon wrapper element in which the svg should be injected.\n   * This hook used to return svg string, and that svg was set as dangerouslySetInnerHTML. But now it injects the svg.\n   * by direct DOM manipulation. That's to eliminate the need for using dangerouslySetInnerHTML, so that we can allow\n   * arbitrary children (like LiveIndicator) as overlays on top of icons.\n   */\n  ref: RefObject<HTMLElement>\n) {\n  const theme = useTheme();\n  const itemState = useContext(ItemStateContext);\n  const selected = itemState?.isSelected || itemState?.isContainerFocused;\n  useEffect(() => {\n    let unmounted = false;\n    const fetchIcon = async () => {\n      if (!path) {\n        console.error(\"icon path is empty\");\n        return;\n      }\n      if (ref.current) {\n        // For querying for icons that are not loaded yet. Especially useful for visual testing\n        ref.current.ariaBusy = \"true\";\n      }\n      const svg = await theme\n        .getSvgIcon(path, selected)\n        .catch((e) => {\n          if (fallbackPath) {\n            return theme.getSvgIcon(fallbackPath, selected);\n          }\n          throw e;\n        })\n        .finally(() => {\n          if (ref?.current) {\n            ref.current.ariaBusy = \"false\";\n          }\n        });\n      if (svg) {\n        const element = ref?.current;\n        if (!unmounted && element) {\n          element.querySelector(\"svg\")?.remove();\n          const svgElement = document.createElement(\"svg\");\n          element.appendChild(svgElement);\n          svgElement.outerHTML = makeIdsUnique(svg); // UNSAFE! Would require sanitization, or icon sources must be trusted.\n        }\n      } else {\n        console.error(\"Could not resolve icon:\", path);\n      }\n    };\n    fetchIcon().catch(console.error);\n    return () => {\n      unmounted = true;\n    };\n  }, [path, selected]);\n}\n\n/**\n * If multiple instance of the same icon is rendered at the same time, and the SVG includes\n * url(#...) references to locally defined ids, in some cases the icon is not rendered properly.\n * because of ids colliding. We make sure the ids are unique in each rendered icon.\n */\nfunction makeIdsUnique(svg: string): string {\n  const randomPostfix = (Math.random() * 1000).toFixed(0);\n  const idMatches = svg.matchAll(/id=\"(.*?)\"/g);\n  return [...idMatches].reduce((modifiedSvg, [_, id]) => {\n    const newId = `${id}-${randomPostfix}`;\n    return replaceAll(\n      `id=\"${id}\"`,\n      `id=\"${newId}\"`,\n      replaceAll(`url(#${id})`, `url(#${newId})`, modifiedSvg)\n    );\n  }, svg);\n}\n\nfunction replaceAll(theOld: string, theNew: string, str: string): string {\n  const replaced = str.replace(theOld, theNew);\n  const replacedAgain = replaced.replace(theOld, theNew);\n  if (replaced === replacedAgain) {\n    return replaced;\n  }\n  return replaceAll(theOld, theNew, replacedAgain);\n}\n","import { PressProps, usePress } from \"@react-aria/interactions\";\nimport React, { ForwardedRef, HTMLProps } from \"react\";\nimport { styled } from \"../styled\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport { useFocusable } from \"@react-aria/focus\";\n\nexport interface IconButtonProps\n  extends PressProps,\n    // Maybe we should allow any arbitrary HTMLProps<HTMLButtonElement> props, instead of whitelisting?\n    Pick<\n      HTMLProps<HTMLButtonElement>,\n      \"onFocus\" | \"onBlur\" | \"style\" | \"className\"\n    > {\n  children?: React.ReactNode;\n  /**\n   * The minimum width/height of the button.\n   */\n  minSize?: number;\n  /**\n   * Whether the button should be focusable by pressing tab. The default is true for icon buttons (aka. action buttons),\n   * which means they are not included in the tab order.\n   */\n  excludeFromTabOrder?: boolean;\n}\n\nexport const DEFAULT_MINIMUM_BUTTON_SIZE = 22;\nexport const NAVBAR_MINIMUM_BUTTON_SIZE = 20;\n\nexport const StyledIconButton = styled.button<{ minSize: number }>`\n  position: relative; // to allow absolutely positioned overlays like an dropdown icon at the bottom right corner\n  background: none;\n  color: inherit;\n  border: 1px solid transparent;\n  border-radius: 3px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  min-height: ${({ minSize }) => `${minSize}px`};\n  min-width: ${({ minSize }) => `${minSize}px`};\n  padding: 0;\n  margin: 0;\n  &:disabled {\n    opacity: 0.25; // not quite accurate implementation. There might be better ways to style disabled state.\n  }\n  &:hover:not(:disabled) {\n    background: ${({ theme }) =>\n      theme.color(\"ActionButton.hoverBackground\", \"#DFDFDF\")};\n    border-color: ${({ theme }) =>\n      theme.color(\"ActionButton.hoverBorderColor\", \"#DFDFDF\")};\n  }\n  &:focus-visible:not(:disabled) {\n    outline: none;\n    background: ${({ theme }) =>\n      theme.color(\"ActionButton.pressedBackground\", \"#CFCFCF\")};\n    border-color: ${({ theme }) =>\n      theme.color(\n        \"ActionButton.focusedBorderColor\",\n        theme.dark ? \"#5eacd0\" : \"#62b8de\"\n      )};\n  }\n  &:active:not(:disabled),\n  &.active:not(:disabled) {\n    background: ${({ theme }) =>\n      theme.color(\"ActionButton.pressedBackground\", \"#CFCFCF\")};\n    border-color: ${({ theme }) =>\n      theme.color(\"ActionButton.pressedBorderColor\", \"#CFCFCF\")};\n  }\n`;\n\n/**\n * Icon button, aka Action Button, in the reference implementation.\n * @see https://jetbrains.github.io/ui/controls/icon_button/\n */\nexport const IconButton = React.forwardRef(function IconButton(\n  {\n    minSize = DEFAULT_MINIMUM_BUTTON_SIZE,\n    preventFocusOnPress = true,\n    excludeFromTabOrder = true,\n    isPressed: isPressedInput,\n    isDisabled,\n    onPress,\n    onPressChange,\n    onPressEnd,\n    onPressStart,\n    onPressUp,\n    shouldCancelOnPointerExit,\n    ...otherProps\n  }: IconButtonProps,\n  forwardedRef: ForwardedRef<HTMLButtonElement>\n) {\n  // FIXME: use useButton\n\n  const ref = useObjectRef(forwardedRef);\n  const { focusableProps } = useFocusable({ isDisabled }, ref);\n  const { pressProps, isPressed } = usePress({\n    ref,\n    isPressed: isPressedInput,\n    isDisabled,\n    onPress,\n    onPressChange,\n    onPressEnd,\n    onPressStart,\n    onPressUp,\n    shouldCancelOnPointerExit,\n    preventFocusOnPress,\n  });\n\n  return (\n    <StyledIconButton\n      className={isPressed ? \"active\" : \"\"}\n      disabled={isDisabled}\n      {...mergeProps(pressProps, otherProps, focusableProps)}\n      minSize={minSize}\n      tabIndex={excludeFromTabOrder && !isDisabled ? -1 : undefined}\n      ref={ref}\n    />\n  );\n});\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  IconButton,\n  IconButtonProps,\n} from \"@intellij-platform/core/IconButton\";\nimport { MenuTrigger, MenuTriggerProps } from \"@intellij-platform/core/Menu\";\nimport { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport { mergeProps } from \"@react-aria/utils\";\n\nconst ArrowIcon = styled(PlatformIcon)`\n  position: absolute;\n  right: 1px;\n  bottom: 1px;\n`;\n\ntype IconButtonWithMenuProps = IconButtonProps &\n  Pick<MenuTriggerProps, \"renderMenu\"> & {\n    /**\n     * whether the default arrow should be removed or not. false by default.\n     */\n    noArrow?: boolean;\n  };\n/**\n * Renders an IconButton which opens a menu. by default a down arrow icon is shown as an overlay on the rendered\n * icon, but it can be disabled by passing `noArrow`. It also restores the focus to the previously focused element,\n * when the menu is closed.\n * @param renderMenu: render prop for rendering the menu\n * @param children: the content of the icon button\n * @param noArrow: whether the default arrow should be removed or not. false by default.\n * @param buttonProps: the rest of the props that will be passed down to IconButton\n *\n * TODO: Add story and write test for focus restoration, noArrow, and basic functionality.\n */\nexport const IconButtonWithMenu = ({\n  renderMenu,\n  children,\n  noArrow = false,\n  ...buttonProps\n}: IconButtonWithMenuProps) => {\n  const previouslyFocusedElementRef = useRef<HTMLElement>();\n  return (\n    <MenuTrigger\n      renderMenu={renderMenu}\n      onOpenChange={(open) => {\n        if (!open && previouslyFocusedElementRef.current) {\n          previouslyFocusedElementRef.current.focus();\n        }\n      }}\n    >\n      {(props, ref) => (\n        <IconButton\n          {...mergeProps(buttonProps, props, {\n            onFocus: (e: FocusEvent) => {\n              if (e.relatedTarget && e.relatedTarget instanceof HTMLElement) {\n                previouslyFocusedElementRef.current = e.relatedTarget;\n              }\n            },\n          })}\n          ref={ref}\n        >\n          {children}\n          {!noArrow && <ArrowIcon icon=\"general/dropdown.svg\" />}\n        </IconButton>\n      )}\n    </MenuTrigger>\n  );\n};\n","import React, { ComponentProps, HTMLAttributes, HTMLProps } from \"react\";\nimport { useTheme } from \"styled-components\";\nimport { Theme } from \"./Theme/Theme\";\n\ninterface Props extends React.ImgHTMLAttributes<HTMLImageElement> {\n  /**\n   * src for when a dark theme is active. if `darkSrc` doesn't have a non-empty string value, src will be used both\n   * for dark and light themes.\n   */\n  darkSrc?: string;\n}\n/**\n * Same as default `img`, but theme aware. Meaning that you can specify different sources for normal and dark mode.\n */\nexport const Img: React.FC<Props> = ({ darkSrc, ...props }) => {\n  const theme = useTheme() as Theme;\n  if (theme.dark) {\n    return <img {...props} src={darkSrc || props.src} />;\n  }\n  return <img {...props} />;\n};\n","import React, {\n  ForwardedRef,\n  InputHTMLAttributes,\n  useEffect,\n  useState,\n} from \"react\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport { FocusableOptions, useFocusable } from \"@react-aria/focus\";\nimport { ValidationState } from \"@react-types/shared\";\nimport { useFocusWithin } from \"@react-aria/interactions\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { styled, css } from \"@intellij-platform/core/styled\";\n\nconst StyledInputBox = styled.div<{\n  disabled?: boolean;\n  focused?: boolean;\n  validationState: InputProps[\"validationState\"];\n  appearance: InputProps[\"appearance\"];\n}>`\n  box-sizing: border-box;\n  display: inline-flex;\n  min-width: 4rem; // https://jetbrains.github.io/ui/controls/input_field/#28\n  background: ${({ theme, disabled }) =>\n    disabled\n      ? theme.color(\"TextField.disabledBackground\")\n      : theme.color(\"TextField.background\")};\n  border: 1px solid\n    ${({ theme, focused, disabled, validationState }) =>\n      theme.commonColors.border({\n        focused,\n        disabled,\n        validationState,\n      })};\n  box-shadow: 0 0 0 0.125rem\n    ${({ theme, focused = false, validationState, disabled }) =>\n      disabled\n        ? \"transparent\"\n        : theme.commonColors.focusRing({\n            validationState,\n            focused: focused,\n          })};\n  border-radius: 1px;\n  cursor: text; // the whole box moves focus to the input\n  overflow: hidden;\n  ${({ appearance, validationState, disabled }) =>\n    appearance === \"embedded\" &&\n    css`\n      border-color: ${validationState !== \"error\" && \"transparent\"};\n      box-shadow: ${validationState !== \"error\" && \"none\"};\n      background: ${!disabled && \"transparent\"};\n    `};\n`;\n\nconst StyledInput = styled.input<{ disabled?: boolean }>`\n  all: unset;\n  padding: 0.1875rem 0.375rem;\n  flex: 1; // fill in the available space within the input box\n  min-width: 0;\n  line-height: 1rem;\n  color: ${({ theme }) =>\n    theme.color(\n      \"TextField.foreground\" as UnknownThemeProp<\"TextField.foreground\">\n    )};\n  color: ${({ theme, disabled }) =>\n    disabled &&\n    theme.color(\n      \"TextField.inactiveForeground\" as UnknownThemeProp<\"TextField.inactiveForeground\">\n    )};\n\n  caret-color: ${({ theme }) =>\n    theme.color(\n      \"TextField.caretForeground\" as UnknownThemeProp<\"TextField.caretForeground\">\n    )};\n  &::selection {\n    background: ${({ theme }) =>\n      theme.color(\n        \"*.selectionBackground\"\n      )}; // Not checked with the reference impl\n    color: ${({ theme }) =>\n      theme.color(\n        \"*.selectionForeground\"\n      )}; // Not checked with the reference impl\n  }\n  &::placeholder {\n    color: ${({ theme }) => theme.commonColors.inactiveTextColor};\n  }\n`;\n\nconst StyledAddons = styled.div`\n  display: inline-flex;\n  align-items: center;\n  gap: 0.25rem; /* TODO: check */\n  padding: 1px 0;\n`;\nconst StyledRightAddons = styled(StyledAddons)`\n  margin-right: 0.125rem; /* TODO: check */\n`;\n\nconst StyledLeftAddons = styled(StyledAddons)`\n  margin-left: 0.375rem; /* TODO: check */\n`;\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  /**\n   *\n   */\n  validationState?: \"valid\" | \"error\" | \"warning\";\n  /**\n   * Whether to auto select the value initially\n   */\n  autoSelect?: boolean;\n\n  /**\n   * Rendered inside the input box and after the input element.\n   * Used to render [Built-in buttons](https://jetbrains.github.io/ui/controls/built_in_button/).\n   */\n  addonAfter?: React.ReactNode;\n  /**\n   * Rendered inside the input box and before the input element.\n   */\n  addonBefore?: React.ReactNode;\n\n  /**\n   * Ref to the underlying input element\n   */\n  inputRef?: React.Ref<HTMLInputElement>;\n\n  /**\n   * Appearance of the input.\n   * - \"ghost\": Without the border and shadow in valid state.\n   * - \"boxed\" With the border and shadow.\n   * @default \"box\"\n   */\n  appearance?: \"embedded\" | \"box\";\n}\n\n/**\n * Bare input, themed, and with a few extra features:\n * - Support for \"error\" and \"warning\" state ({@param validationState}\n * - Support for autoSelect.\n * - Disables spell check by default. It can be overwritten.\n * Use {@link InputField} for more features like an associated label, error message and context help.\n */\nexport const Input = React.forwardRef(function Input(\n  {\n    validationState,\n    autoSelect,\n    addonBefore,\n    addonAfter,\n    style,\n    className,\n    inputRef: inputRefProp,\n    onKeyDown,\n    onKeyUp,\n    onFocus,\n    onBlur,\n    autoFocus,\n    appearance,\n    ...props\n  }: InputProps,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n) {\n  const ref = useObjectRef(forwardedRef);\n  const inputRef = useObjectRef(inputRefProp);\n  const { focusableProps } = useFocusable(\n    {\n      isDisabled: props.disabled,\n      autoFocus,\n      onFocus,\n      onBlur,\n      onKeyDown,\n      onKeyUp,\n    } as FocusableOptions,\n    inputRef\n  );\n  const [isFocused, setIsFocused] = useState(false);\n  const { focusWithinProps } = useFocusWithin({\n    onFocusWithinChange: setIsFocused,\n  });\n\n  useEffect(() => {\n    if (autoSelect) {\n      inputRef.current?.select();\n    }\n  }, [autoSelect]);\n\n  return (\n    <StyledInputBox\n      ref={ref}\n      spellCheck={false}\n      appearance={appearance}\n      {...mergeProps(focusWithinProps, {\n        className,\n        style,\n        onMouseDown: (event: MouseEvent) => {\n          if (event.target !== inputRef.current) {\n            event.preventDefault();\n            inputRef.current?.focus();\n          }\n        },\n      })}\n      focused={isFocused}\n      validationState={validationState}\n      disabled={props.disabled}\n    >\n      {addonBefore && <StyledLeftAddons>{addonBefore}</StyledLeftAddons>}\n      <StyledInput ref={inputRef} {...mergeProps(props, focusableProps)} />\n      {addonAfter && <StyledRightAddons>{addonAfter}</StyledRightAddons>}\n    </StyledInputBox>\n  );\n});\n","import React, {\n  ChangeEvent,\n  CSSProperties,\n  ForwardedRef,\n  HTMLProps,\n} from \"react\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { AriaFieldProps, useField } from \"@react-aria/label\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport { FocusableProps } from \"@react-types/shared\";\nimport { Label } from \"@intellij-platform/core/Label\";\nimport {\n  PositionedTooltipTrigger,\n  ValidationTooltip,\n} from \"@intellij-platform/core/Tooltip\";\nimport { Input, InputProps } from \"@intellij-platform/core/InputField/Input\";\n\ntype LabelPlacement = \"above\" | \"before\";\n\nexport interface InputFieldProps\n  extends Omit<\n      AriaFieldProps,\n      \"labelElementType\" | \"validationState\" | \"errorMessage\"\n    >,\n    FocusableProps,\n    Pick<\n      InputProps,\n      \"addonBefore\" | \"addonAfter\" | \"inputRef\" | \"validationState\"\n    > {\n  /**\n   * className applied on the field's wrapper div.\n   */\n  className?: string;\n  /**\n   * style applied on the field's wrapper div.\n   */\n  style?: CSSProperties;\n  /**\n   * Label to be associated with the input.\n   */\n  label?: React.ReactNode;\n  /**\n   * Context help, shown below the input. A typical use case is\n   * [to provide example values](https://jetbrains.github.io/ui/principles/context_help/#07).\n   */\n  contextHelp?: React.ReactNode;\n  /**\n   * Placement of the label with respect to the input box.\n   */\n  labelPlacement?: LabelPlacement;\n\n  /**\n   * Whether the input is disabled. Use this prop\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Convenient prop to be used instead of inputProps.placeholder\n   **/\n  placeholder?: string;\n  /**\n   * Convenient prop to be used instead of inputProps.value\n   **/\n  value?: HTMLProps<HTMLInputElement>[\"value\"];\n  /**\n   * Convenient prop to be used instead of inputProps.defaultValue\n   **/\n  defaultValue?: HTMLProps<HTMLInputElement>[\"defaultValue\"];\n  /**\n   * Convenient prop to be used instead of inputProps.onChange. It also calls the passed callback with the\n   * change value instead of input.\n   **/\n  onChange?: (newValue: string) => void;\n  /**\n   * Props to be passed to the underlying input element.\n   **/\n  inputProps?: Omit<\n    HTMLProps<HTMLInputElement>,\n    \"as\" | \"ref\" | \"disabled\" //isDisabled should be used\n  >;\n  /**\n   * Whether to auto select the value initially\n   */\n  autoSelect?: boolean;\n\n  /**\n   * Validation message shown as a {@link ValidationTooltip} above the field.\n   * {@link ValidationTooltipProps#type} is defined based on `validationState`.\n   */\n  validationMessage?: React.ReactNode;\n}\n\nconst StyledLabelContainer = styled.div<{ labelPlacement?: LabelPlacement }>`\n  display: inline-flex;\n  flex-direction: ${({ labelPlacement }) =>\n    labelPlacement === \"above\" ? \"column\" : \"row\"};\n  align-items: start;\n  gap: 0.375rem;\n`;\n\nconst StyledLabel = styled(Label)`\n  margin-top: 0.25rem;\n  line-height: 1.2;\n`;\nconst StyledContextHelp = styled.div`\n  color: ${({ theme }) => theme.commonColors.contextHelpForeground};\n`;\n\nconst StyledBoxAndContextHelpWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.25rem; /* Not checked with the reference impl */\n`;\n\n/**\n * An input box with an associated label, error message, and context help.\n */\nexport const InputField = React.forwardRef(function InputField(\n  {\n    validationState,\n    validationMessage,\n    className,\n    style,\n    labelPlacement = \"before\",\n    contextHelp,\n    inputProps = {},\n    addonBefore,\n    addonAfter,\n    inputRef,\n    ...props\n  }: InputFieldProps,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n): JSX.Element {\n  const ref = useObjectRef(forwardedRef);\n  const { fieldProps, errorMessageProps, labelProps, descriptionProps } =\n    useField({\n      ...props,\n      errorMessage: validationMessage,\n      validationState:\n        validationState === \"error\" || validationState === \"warning\"\n          ? \"invalid\"\n          : \"valid\",\n    });\n\n  return (\n    <StyledLabelContainer\n      ref={ref}\n      labelPlacement={labelPlacement}\n      className={className}\n      style={style}\n    >\n      <StyledLabel {...labelProps} disabled={props.isDisabled}>\n        {props.label}\n      </StyledLabel>\n      <StyledBoxAndContextHelpWrapper>\n        <PositionedTooltipTrigger\n          placement=\"top start\"\n          crossOffset={36}\n          showOnFocus\n          isDisabled={!validationMessage}\n          tooltip={\n            <ValidationTooltip\n              type={validationState !== \"valid\" ? validationState : undefined}\n            >\n              <div {...errorMessageProps}>{validationMessage}</div>\n            </ValidationTooltip>\n          }\n          delay={0}\n        >\n          <Input\n            inputRef={inputRef}\n            placeholder={props.placeholder}\n            disabled={props.isDisabled}\n            validationState={validationState}\n            autoSelect={props.autoSelect}\n            autoFocus={props.autoFocus}\n            addonAfter={addonAfter}\n            addonBefore={addonBefore}\n            {...mergeProps(fieldProps, inputProps, {\n              value: props.value,\n              defaultValue: props.defaultValue,\n              onChange: (e: ChangeEvent<HTMLInputElement>) =>\n                props.onChange?.(e.target.value),\n            })}\n          />\n        </PositionedTooltipTrigger>\n        {contextHelp && (\n          <StyledContextHelp {...descriptionProps}>\n            {contextHelp}\n          </StyledContextHelp>\n        )}\n      </StyledBoxAndContextHelpWrapper>\n    </StyledLabelContainer>\n  );\n});\n","import { styled } from \"@intellij-platform/core/styled\";\n\nexport const StyledLabel = styled.label<{ disabled?: boolean }>`\n  color: ${({ theme, disabled }) => theme.commonColors.label({ disabled })};\n`;\n","import { Theme, UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { styled } from \"@intellij-platform/core/styled\";\n\nconst getDefaultLinkColor = ({ theme }: { theme: Theme }) =>\n  theme.commonColors.linkForegroundEnabled;\n\nexport const StyledLink = styled.a`\n  cursor: pointer;\n  text-decoration: none;\n  outline: none;\n  // &:focus-visible didn't work as expected, so FocusRing is used\n  &.focus-visible {\n    outline: 1px solid\n      ${({ theme }) =>\n        theme.color(\n          \"Link.focusedBorderColor\" as UnknownThemeProp<\"Link.focusedBorderColor\">,\n          theme.commonColors.focusBorderColor\n        )};\n    border-radius: 2px; // Registry.intValue(\"ide.link.button.focus.round.arc\", 4)\n  }\n  color: ${getDefaultLinkColor};\n\n  &:hover,\n  &.hover /* for testing purposes*/ {\n    text-decoration: underline;\n    color: ${({ theme }) =>\n      theme.color(\n        \"Link.hoverForeground\",\n        theme.color(\n          \"link.hover.foreground\" as UnknownThemeProp<\"link.hover.foreground\">,\n          \"\" /*FIXME: check*/\n        )\n      )};\n  }\n  &:active,\n  &.active {\n    color: ${({ theme }) =>\n      theme.color(\n        \"Link.pressedForeground\",\n        theme.color(\n          \"link.pressed.foreground\" as UnknownThemeProp<\"link.pressed.foreground\">,\n          !theme.dark ? \"#F00000\" : \"#BA6F25\"\n        )\n      )};\n  }\n  &:disabled,\n  &.disabled {\n    cursor: default;\n    text-decoration: none;\n    color: ${({ theme }) =>\n      theme.color(\n        \"Link.disabledForeground\" as UnknownThemeProp<\"Link.disabledForeground\">,\n        theme.color(\n          \"Label.disabledForeground\",\n          theme.color(\"Label.disabledText\", \"#999\")\n        )\n      )};\n  }\n  // We may need to refine this to allow passing visited as a prop for links that don't have href, and not apply the\n  // styles in that case, since it seems no href is considered visited by default. Although, in all main themes\n  // Link.visitedForeground is set to the default link color.\n  &:visited,\n  &.visited {\n    color: ${({ theme }) =>\n      theme.color(\n        \"Link.visitedForeground\",\n        theme.color(\n          \"link.visited.foreground\" as UnknownThemeProp<\"link.visited.foreground\">,\n          !theme.dark ? \"#800080\" : \"#9776A9\"\n        )\n      )};\n  }\n`;\n","import React, { ForwardedRef } from \"react\";\nimport { AriaLinkProps } from \"@react-types/link\";\nimport useForwardedRef from \"@intellij-platform/core/utils/useForwardedRef\";\nimport { FocusRing, useFocusable } from \"@react-aria/focus\";\nimport { StyledLink } from \"@intellij-platform/core/Link/StyledLink\";\nimport { usePress } from \"@react-aria/interactions\";\nimport { filterDOMProps, mergeProps } from \"@react-aria/utils\";\n\nexport type LinkProps = AriaLinkProps & {\n  isDisabled?: boolean;\n  className?: string;\n  children: React.ReactNode;\n  preventFocusOnPress?: boolean; // Should this be become true by default?\n  excludeFromTabOrder?: boolean;\n};\n\n/**\n * A focusable span in style of [Link](https://jetbrains.github.io/ui/controls/link/) and with accessibility role of link.\n *\n * TODO and known issues:\n * - in the reference impl, Space presses the link, Enter doesn't. It's vice versa here, because of how usePress is implemented.\n * - Support for External links\n * - Support for Anchor elements?\n *\n * Unknowns:\n * - What are ActionLink and DefaultLinkButtonUI?\n * - What is HyperLinkLabel compared to LabelLink (which was looked into in implementation of this component)?\n */\nexport const Link = React.forwardRef(\n  (\n    props: LinkProps,\n    forwardedRef: ForwardedRef<HTMLAnchorElement>\n  ): React.ReactElement => {\n    const ref = useForwardedRef(forwardedRef);\n\n    const { focusableProps } = useFocusable(props, ref);\n    const { pressProps, isPressed } = usePress({ ...props, ref });\n    const domProps = filterDOMProps(props, { labelable: true });\n    const interactionHandlers = mergeProps(focusableProps, pressProps);\n\n    return (\n      <FocusRing focusRingClass=\"focus-visible\">\n        <StyledLink\n          {...mergeProps(focusableProps, interactionHandlers, domProps)}\n          as=\"span\"\n          role=\"link\"\n          ref={ref}\n          // maybe use clsx\n          className={`${props.isDisabled ? \"disabled\" : \"\"} ${\n            isPressed ? \"active\" : \"\"\n          } ${props.className || \"\"}`}\n          aria-disabled={props.isDisabled || undefined}\n          tabIndex={\n            !props.isDisabled ? (props.excludeFromTabOrder ? -1 : 0) : undefined\n          }\n        >\n          {props.children}\n        </StyledLink>\n      </FocusRing>\n    );\n  }\n);\n","import { AriaListBoxProps } from \"@react-types/listbox\";\nimport { AsyncLoadable, Node } from \"@react-types/shared\";\nimport React, { ForwardedRef, Key } from \"react\";\nimport { useList } from \"./useList\";\nimport { ListItem } from \"./ListItem\";\nimport { StyledList } from \"./StyledList\";\nimport { useListState } from \"./useListState\";\nimport { filterDOMProps, useObjectRef } from \"@react-aria/utils\";\n\nimport { CollectionRefProps } from \"@intellij-platform/core/Collections/useCollectionRef\";\nimport { Virtualizer } from \"@react-aria/virtualizer\";\nimport { useListVirtualizer } from \"@intellij-platform/core/List/useListVirtualizer\";\nimport { ListContext } from \"@intellij-platform/core/List/ListContext\";\n\nexport type ListProps<T extends object> = Omit<\n  Omit<AriaListBoxProps<T>, \"disallowEmptySelection\">,\n  keyof AsyncLoadable\n> &\n  CollectionRefProps & {\n    /**\n     * fills the available horizontal or vertical space, when rendered in a flex container.\n     */\n    fillAvailableSpace?: boolean;\n    /**\n     * When true, shows the list in focused style, even when it's not focused. A common use case is when the list\n     * is virtually focused. i.e. the focus is physically on some other element (like a search input) which handles\n     * keyboard events as if the list was focused.\n     * Another (maybe questionable) use case is master detail views, where the master view is shown as focused, even\n     * when the details view has physical focus.\n     */\n    showAsFocused?: boolean;\n    allowEmptySelection?: boolean;\n    /**\n     * Called when the action for the item should be triggered, which can be by double click or pressing Enter.\n     * Enter not implemented yet :D\n     */\n    onAction?: (key: Key) => void;\n\n    /**\n     * Useful when list items have a custom height, to hint layout calculation logic about the item height which\n     * increases rendering efficiency and also prevents flash of items with wrong height.\n     */\n    estimatedItemHeight?: number;\n\n    className?: string;\n  };\n\n/**\n * List view\n */\nexport const List = React.forwardRef(function List<T extends object>(\n  {\n    allowEmptySelection = false,\n    fillAvailableSpace = false,\n    estimatedItemHeight,\n    className,\n    ...inputProps\n  }: ListProps<T>,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n) {\n  const props: AriaListBoxProps<T> & CollectionRefProps = {\n    ...inputProps,\n    disallowEmptySelection: !allowEmptySelection,\n  };\n  const ref = useObjectRef(forwardedRef);\n  const state = useListState(props);\n  const { listProps, listContext } = useList(\n    {\n      ...props,\n      isVirtualized: true,\n    },\n    state,\n    ref\n  );\n\n  const {\n    virtualizerProps: { children: renderNode, ...virtualizerProps },\n  } = useListVirtualizer({\n    state,\n    estimatedItemHeight,\n    renderItem: (item) => <ListItem key={item.key} item={item} />,\n  });\n\n  return (\n    <ListContext.Provider value={listContext}>\n      <StyledList\n        as={Virtualizer<Node<any>, any>}\n        {...virtualizerProps}\n        {...listProps}\n        {...filterDOMProps(props, { labelable: true })}\n        fillAvailableSpace={fillAvailableSpace}\n        className={className}\n        ref={ref}\n      >\n        {renderNode}\n      </StyledList>\n    </ListContext.Provider>\n  );\n});\n","import React, { Key } from \"react\";\nimport { ListState } from \"@react-stately/list\";\n\nexport type ListContextType<T> = {\n  state: ListState<T>;\n  focused: boolean;\n  onAction: ((key: Key) => void) | undefined;\n};\n\nexport const ListContext = React.createContext<ListContextType<any> | null>(\n  null\n);\n","import React from \"react\";\nimport { StyledVerticalSeparator } from \"../StyledSeparator\";\nimport { useSeparator } from \"@react-aria/separator\";\n\nexport const ListDivider: React.FC = () => {\n  return (\n    <StyledVerticalSeparator\n      as={\"li\"}\n      {...useSeparator({ elementType: \"li\", orientation: \"vertical\" })\n        .separatorProps}\n    />\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Node } from \"@react-types/shared\";\nimport { usePress } from \"@react-aria/interactions\";\nimport { useSelectableItem } from \"@intellij-platform/core/selection\";\nimport { ItemStateContext } from \"@intellij-platform/core/Collections\";\nimport { StyledListItem } from \"./StyledListItem\";\nimport { ListContext } from \"@intellij-platform/core/List/ListContext\";\n\nexport interface ListItemProps<T> {\n  item: Node<T>;\n  children?: React.ReactNode;\n}\n\nexport function ListItem<T>({ item, children }: ListItemProps<T>) {\n  const { state, focused: listFocused, onAction } = useContext(ListContext)!;\n  const ref = React.useRef(null);\n  const isDisabled = state.disabledKeys.has(item.key);\n  const isSelected = state.selectionManager.isSelected(item.key);\n\n  const { itemProps } = useSelectableItem({\n    key: item.key,\n    ref,\n    onAction: () => onAction?.(item.key),\n    selectionManager: state.selectionManager,\n  });\n\n  return (\n    <StyledListItem\n      containerFocused={listFocused}\n      selected={isSelected}\n      disabled={isDisabled}\n      aria-disabled={isDisabled}\n      aria-selected={isSelected}\n      aria-label={item[\"aria-label\"]}\n      {...itemProps}\n      ref={ref}\n    >\n      <ItemStateContext.Provider\n        value={{\n          isDisabled,\n          isSelected,\n          isContainerFocused: listFocused,\n          node: item,\n        }}\n      >\n        {children || item.rendered}\n      </ItemStateContext.Provider>\n    </StyledListItem>\n  );\n}\n","import { css } from \"styled-components\";\nimport { styled } from \"../styled\";\n\ntype StyledListProps = {\n  fillAvailableSpace?: boolean;\n};\nexport const StyledList = styled.div\n  .attrs<StyledListProps>((props) => ({ role: props.role || \"list\" }))\n  .withConfig<StyledListProps>({\n    shouldForwardProp: (prop) => prop !== \"fillAvailableSpace\",\n  })<StyledListProps>`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  max-height: 100%;\n  overflow: auto;\n  color: ${({ theme }) => theme.color(\"*.textForeground\")};\n  outline: none;\n  ${({ fillAvailableSpace }) =>\n    fillAvailableSpace &&\n    css`\n      flex: 1;\n      height: fill-available; // will be converted to --webkit-fill-available and --moz-available, but doesn't work in FF\n    `}\n  background: ${({ theme }) => theme.color(\"List.background\")};\n`;\n","import { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { styled } from \"../styled\";\n\nexport type StyledListItemProps = {\n  containerFocused: boolean;\n  selected: boolean;\n  disabled: boolean;\n};\n\nexport const StyledListItem = styled.div.attrs<StyledListItemProps>(\n  (props) => ({\n    role: props.role || \"listitem\",\n  })\n)<StyledListItemProps>`\n  ${({ containerFocused, selected, disabled, theme }) => {\n    let backgroundColor;\n    let color = disabled\n      ? theme.color(\"*.disabledForeground\")\n      : theme.color(\n          \"List.foreground\" as UnknownThemeProp<\"List.foreground\">,\n          theme.commonColors.labelForeground\n        );\n    if (selected) {\n      if (containerFocused) {\n        color = theme.asCurrentForeground(\n          theme.color(\n            \"List.selectionForeground\" as UnknownThemeProp<\"List.selectionForeground\">\n          ) || theme.commonColors.labelSelectedForeground\n        ) /* Prioritizing \"*.selectionForeground\" over labelSelectedForeground*/;\n        backgroundColor = theme.color(\n          \"List.selectionBackground\" as UnknownThemeProp<\"List.selectionBackground\">\n        );\n      } else {\n        color = theme.color(\n          \"List.selectionInactiveForeground\" as UnknownThemeProp<\"List.selectionInactiveForeground\">,\n          color\n        );\n        backgroundColor = theme.color(\n          \"List.selectionBackgroundInactive\" as UnknownThemeProp<\"List.selectionBackgroundInactive\">\n        );\n      }\n    }\n    return {\n      backgroundColor: theme.asCurrentBackground(backgroundColor),\n      color,\n    };\n  }};\n  position: relative;\n  display: flex;\n  white-space: nowrap;\n  padding: 0 0.5rem; // themed?\n  line-height: 1.25rem;\n  outline: none;\n  cursor: default;\n  min-width: min-content; // Needed for content sizing for when list/tree is used inside popup or modal window\n`;\n","import { AriaSelectableListOptions } from \"@react-aria/selection\";\nimport { ListState } from \"@react-stately/list\";\nimport React, { Key, useEffect, useMemo, useState } from \"react\";\nimport { useSelectableList } from \"./useSelectableList\";\nimport { useFocusWithin } from \"@react-aria/interactions\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { CollectionRefProps } from \"@intellij-platform/core/Collections/useCollectionRef\";\nimport { useEventCallback } from \"@intellij-platform/core/utils/useEventCallback\";\nimport { ListContextType } from \"@intellij-platform/core/List/ListContext\";\n\nexport interface ListProps\n  extends Omit<\n      AriaSelectableListOptions,\n      | \"disallowEmptySelection\"\n      | \"selectOnFocus\"\n      | \"selectionManager\" // Grouped as state, the second argument, like in useListBox\n      | \"collection\" // Grouped as state, the second argument, like in useListBox\n      | \"disabledKeys\" // Grouped as state, the second argument, like in useListBox\n      | \"ref\" // Third argument\n    >,\n    CollectionRefProps {\n  allowEmptySelection?: boolean;\n  /**\n   * Called when the action for the item should be triggered, which can be by double click or pressing Enter.\n   * Enter not implemented yet :D\n   */\n  onAction?: (key: Key) => void;\n  showAsFocused?: boolean;\n  id?: string;\n}\n// import { useSelectableList } from \"@react-aria/selection\";\n\nexport function useList<T>(\n  { onAction, showAsFocused, ...props }: ListProps,\n  state: ListState<T>,\n  ref: React.RefObject<HTMLElement>\n) {\n  const {\n    listProps: { onMouseDown, ...listProps },\n  } = useSelectableList({\n    ...props,\n    ref,\n    selectionManager: state.selectionManager,\n    disallowEmptySelection: !props.allowEmptySelection,\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    // if selectOnFocus is going to be an option (which is not in intellij UI), we should also conditionally show outline on items\n    selectOnFocus: true,\n  });\n  const [focused, setFocused] = useState(false);\n\n  const { focusWithinProps } = useFocusWithin({\n    onFocusWithinChange: setFocused,\n  });\n\n  // auto select the first item, if selection is empty and allowEmptySelection is false.\n  useEffect(() => {\n    const firstKey = state.collection.getFirstKey();\n    if (\n      !props.allowEmptySelection &&\n      state.selectionManager.isEmpty &&\n      firstKey\n    ) {\n      state.selectionManager.setFocusedKey(firstKey);\n      state.selectionManager.select(firstKey);\n    }\n  }, [!props.allowEmptySelection]);\n\n  const onActionCallback = useEventCallback(onAction ?? (() => {}));\n  const listContext: ListContextType<T> = useMemo(\n    () => ({\n      state,\n      focused: Boolean(focused || showAsFocused),\n      onAction: onActionCallback,\n    }),\n    [state, focused, showAsFocused]\n  );\n\n  return {\n    listProps: mergeProps(listProps, focusWithinProps),\n    listContext,\n    focused,\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n  Collection,\n  FocusStrategy,\n  KeyboardDelegate,\n  Node,\n} from \"@react-types/shared\";\nimport { HTMLAttributes, Key, RefObject, useMemo } from \"react\";\nimport { ListKeyboardDelegate } from \"@react-aria/selection\";\nimport {\n  MultipleSelectionManager,\n  SelectionManager,\n} from \"@react-stately/selection\";\nimport { useCollator } from \"@react-aria/i18n\";\nimport { useSelectableCollection } from \"@intellij-platform/core/selection\";\nimport { useCollectionAutoScroll } from \"@intellij-platform/core/Collections/useCollectionAutoScroll\";\n\ninterface SelectableListOptions {\n  /**\n   * An interface for reading and updating multiple selection state.\n   */\n  selectionManager: MultipleSelectionManager;\n  /**\n   * State of the collection.\n   */\n  collection: Collection<Node<unknown>>;\n  /**\n   * The item keys that are disabled. These items cannot be selected, focused, or otherwise\n   * interacted with.\n   */\n  disabledKeys: Set<Key>;\n  /**\n   * A ref to the item.\n   */\n  ref: RefObject<HTMLElement>;\n  /**\n   * A delegate that returns collection item keys with respect to visual layout.\n   */\n  keyboardDelegate?: KeyboardDelegate;\n  /**\n   * Whether the collection or one of its items should be automatically focused upon render.\n   * @default false\n   */\n  autoFocus?: boolean | FocusStrategy;\n  /**\n   * Whether focus should wrap around when the end/start is reached.\n   * @default false\n   */\n  shouldFocusWrap?: boolean;\n  /**\n   * Whether the option is contained in a virtual scroller.\n   */\n  isVirtualized?: boolean;\n  /**\n   * Whether the collection allows empty selection.\n   * @default false\n   */\n  disallowEmptySelection?: boolean;\n  /**\n   * Whether selection should occur automatically on focus.\n   * @default false\n   */\n  selectOnFocus?: boolean;\n  /**\n   * Whether typeahead is disabled.\n   * @default false\n   */\n  disallowTypeAhead?: boolean;\n  /**\n   * Whether the collection items should use virtual focus instead of being focused directly.\n   */\n  shouldUseVirtualFocus?: boolean;\n  /**\n   * Whether navigation through tab key is enabled.\n   */\n  allowsTabNavigation?: boolean;\n}\n\ninterface SelectableListAria {\n  /**\n   * Props for the option element.\n   */\n  listProps: HTMLAttributes<HTMLElement>;\n}\n\n/**\n * Handles interactions with a selectable list.\n */\nexport function useSelectableList(\n  props: SelectableListOptions\n): SelectableListAria {\n  let {\n    selectionManager,\n    collection,\n    disabledKeys,\n    ref,\n    keyboardDelegate,\n    autoFocus,\n    shouldFocusWrap,\n    isVirtualized,\n    disallowEmptySelection,\n    selectOnFocus = false,\n    disallowTypeAhead,\n    shouldUseVirtualFocus,\n    allowsTabNavigation,\n  } = props;\n\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = useCollator({ usage: \"search\", sensitivity: \"base\" });\n  let delegate = useMemo(\n    () =>\n      keyboardDelegate ||\n      new ListKeyboardDelegate(collection, disabledKeys, ref, collator),\n    [keyboardDelegate, collection, disabledKeys, ref, collator]\n  );\n  useCollectionAutoScroll(\n    { isVirtualized, selectionManager: selectionManager as SelectionManager },\n    ref\n  );\n\n  let { collectionProps } = useSelectableCollection({\n    ref,\n    selectionManager,\n    keyboardDelegate: delegate,\n    autoFocus,\n    shouldFocusWrap,\n    disallowEmptySelection,\n    selectOnFocus,\n    disallowTypeAhead,\n    shouldUseVirtualFocus,\n    allowsTabNavigation,\n  });\n\n  return {\n    listProps: collectionProps,\n  };\n}\n","import {\n  ListProps,\n  ListState,\n  useListState as originalUseListState,\n} from \"@react-stately/list\";\nimport {\n  CollectionRefProps,\n  useCollectionRef,\n} from \"@intellij-platform/core/Collections/useCollectionRef\";\n\nexport function useListState<T extends object>(\n  props: ListProps<T> & CollectionRefProps\n): ListState<T> {\n  const state = originalUseListState({\n    ...props,\n    selectionBehavior: \"replace\",\n  });\n  useCollectionRef(props, state);\n  return state;\n}\n","import { styled } from \"../styled\";\n\nexport const StyledListSectionHeader = styled.div(({ theme }) => ({\n  paddingLeft: 8,\n  fontWeight: \"bold\",\n  lineHeight: \"20px\",\n  outline: \"none\",\n  cursor: \"default\",\n  color: theme.color(\"*.textForeground\", theme.color(\"*.foreground\")),\n}));\n","import { ReusableView } from \"@react-stately/virtualizer\";\nimport { Node } from \"@react-types/shared\";\nimport React, { ReactNode, useRef } from \"react\";\nimport {\n  layoutInfoToStyle,\n  useVirtualizerItem,\n  VirtualizerItem,\n  VirtualizerProps,\n} from \"@react-aria/virtualizer\";\nimport { StyledListSectionHeader } from \"@intellij-platform/core/List/StyledListSectionHeader\";\n\ninterface SectionProps<T> {\n  reusableView: ReusableView<Node<T>, unknown>;\n  header: ReusableView<Node<T>, unknown>;\n  children?: ReactNode;\n}\n\nfunction ListSection<T extends object>({\n  reusableView,\n  header,\n  children,\n}: SectionProps<T>) {\n  const headerRef = useRef<HTMLDivElement>(null);\n  useVirtualizerItem({\n    reusableView: header,\n    ref: headerRef,\n  });\n  return (\n    <>\n      <StyledListSectionHeader\n        role=\"presentation\"\n        ref={headerRef}\n        style={layoutInfoToStyle(header.layoutInfo!, \"ltr\")}\n      >\n        {reusableView.content.rendered}\n      </StyledListSectionHeader>\n      <div\n        key={reusableView.key}\n        style={layoutInfoToStyle(reusableView.layoutInfo!, \"ltr\")}\n      >\n        {children}\n      </div>\n    </>\n  );\n}\n\nexport const renderWrapper: VirtualizerProps<\n  Node<any>,\n  unknown\n>[\"renderWrapper\"] = (parent, reusableView, children, renderChildren) => {\n  if (reusableView.viewType === \"section\") {\n    return (\n      <ListSection\n        key={reusableView.key}\n        reusableView={reusableView}\n        header={children.find((c) => c.viewType === \"header\")!}\n      >\n        {renderChildren(children.filter((c) => c.viewType === \"item\"))}\n      </ListSection>\n    );\n  }\n  return (\n    <VirtualizerItem\n      key={reusableView.key}\n      reusableView={reusableView}\n      parent={parent ?? undefined}\n    />\n  );\n};\n","import React, { HTMLAttributes, useMemo } from \"react\";\nimport { VirtualizerProps } from \"@react-aria/virtualizer\";\nimport { VariableWidthListLayout } from \"@intellij-platform/core/VariableWidthListLayout\";\nimport { ListState } from \"@react-stately/list\";\nimport { Node } from \"@react-types/shared\";\nimport { renderWrapper } from \"./renderWrapper\";\nimport { ListDivider } from \"@intellij-platform/core/List/ListDivider\";\n\ninterface ItemNode<T> extends Node<T> {\n  type: \"item\";\n}\nexport const useListVirtualizer = <T extends object>({\n  renderItem,\n  estimatedItemHeight = 20,\n  state,\n}: {\n  renderItem: (item: ItemNode<T>) => React.ReactNode;\n  estimatedItemHeight?: number;\n  state: ListState<T>;\n}): {\n  virtualizerProps: Omit<\n    VirtualizerProps<Node<T>, unknown>,\n    keyof HTMLAttributes<HTMLElement>\n  > & { children: (type: string, content: Node<T>) => React.ReactNode };\n} => {\n  const layout = useMemo(\n    () =>\n      new VariableWidthListLayout<T>({\n        /**\n         * there is currently no documentation available for these fields, but setting `rowHeight` enforces it, which\n         * wouldn't be good for custom tree UI with a different row height.\n         * wrong estimatedRowHeight seems to only affect small scrollbar position inaccuracy, which is a minor issue\n         * and not even noticeable in most cases. Also, it seems it slightly improves the performance if it exactly\n         * matches the real row height. But not even sure.\n         */\n        estimatedRowHeight: estimatedItemHeight,\n        estimatedHeadingHeight: 20,\n        dividerHeight: 2,\n      }),\n    []\n  );\n  layout.collection = state.collection;\n  layout.disabledKeys = state.disabledKeys;\n\n  return {\n    virtualizerProps: {\n      focusedKey: state.selectionManager.focusedKey,\n      collection: state.collection,\n      layout,\n      // Not clear how this sizeToFit is supposed to work, due to lack of documentation, but don't be tempted to\n      // think it solves the problem VariableWidthListLayout is trying to solve, because it doesn't :D\n      // Also, note that setting this to \"width\" prevents re-layout when container width is increased, which\n      // causes issues.\n      sizeToFit: \"height\",\n      scrollToItem: (key) => {\n        return layout.virtualizer.scrollToItem(key, {\n          shouldScrollX: false,\n          duration: 0,\n        });\n      },\n      children: (type, item) => {\n        if (type === \"item\") {\n          return renderItem(item as ItemNode<T>);\n        }\n        if (type === \"divider\") {\n          return <ListDivider key={item.key} />;\n        }\n      },\n      renderWrapper,\n\n      scrollDirection: \"both\",\n    },\n  };\n};\n","import React, { ForwardedRef, HTMLAttributes, HTMLProps } from \"react\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useMenuTriggerState } from \"@react-stately/menu\";\nimport { OverlayTriggerProps } from \"@react-types/overlays\";\n\nimport { useContextMenu, UseContextMenuProps } from \"./useContextMenu\";\nimport { MenuOverlay } from \"./MenuOverlay\";\n\ninterface ContextMenuContainerProps\n  extends Omit<HTMLProps<HTMLDivElement>, \"children\">,\n    UseContextMenuProps {\n  /**\n   * Will be called to return the Menu when context menu is triggered. Use {@link Menu} component to render a menu.\n   */\n  renderMenu: () => React.ReactNode;\n  /**\n   * If children is a function, context menu props is passed to it, to be passed to the underlying element.\n   * Otherwise, a div container will be rendered.\n   */\n  children:\n    | React.ReactNode\n    | ((props: HTMLAttributes<HTMLElement>) => React.ReactNode);\n}\n\n/**\n * A generic container for context menu. It's the same as a normal div, only with an additional `renderMenu` prop,\n * to be used to render context menu, when it's triggered.\n * Closes the menu when a menu action is triggered.\n */\nexport const ContextMenuContainer = React.forwardRef(\n  (\n    {\n      children,\n      renderMenu,\n      onOpen,\n      isDisabled,\n      ...props\n    }: ContextMenuContainerProps,\n    ref: ForwardedRef<HTMLDivElement>\n  ) => {\n    const state = useMenuTriggerState({} as OverlayTriggerProps);\n\n    const { overlayProps, containerProps, overlayRef } = useContextMenu(\n      { onOpen, isDisabled },\n      state\n    );\n    const allProps = mergeProps(props, containerProps);\n    return (\n      <>\n        {typeof children === \"function\" ? (\n          children(allProps)\n        ) : (\n          <div {...allProps} ref={ref}>\n            {children}\n          </div>\n        )}\n        <MenuOverlay\n          state={state}\n          overlayRef={overlayRef}\n          overlayProps={overlayProps}\n          restoreFocus\n          /**\n           * Context menus don't autofocus the first item in the reference impl.\n           * Note that this just defines the default value, and can always be controlled per case on the rendered Menu\n           */\n          defaultAutoFocus={true}\n        >\n          {renderMenu()}\n        </MenuOverlay>\n      </>\n    );\n  }\n);\n\n/**\n * Data attribute name to be used to mark an element as the reference for positioning a contextual menu.\n */\nexport const MENU_POSITION_TARGET_DATA_ATTRIBUTE =\n  \"data-context-menu-position-target\";\n","import React, { useEffect, useRef } from \"react\";\nimport { MenuTriggerState } from \"@react-stately/menu\";\nimport { useOverlay } from \"@react-aria/overlays\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useMouseEventOverlayPosition } from \"@intellij-platform/core/utils/useMouseEventOverlayPosition\";\nimport { areInNestedOverlays } from \"@intellij-platform/core/Overlay\";\n\nexport type UseContextMenuProps = {\n  /**\n   * Whether opening contextmenu is disabled.\n   */\n  isDisabled?: boolean;\n  /**\n   * Called when contextmenu is opened.\n   * @param args\n   */\n  onOpen?: (args: {\n    /**\n     * The target element on which contextmenu event was triggered.\n     */\n    target: Element;\n  }) => void;\n};\n/**\n * Functionality and accessibility of context menu.\n */\nexport const useContextMenu = (\n  { isDisabled = false, onOpen }: UseContextMenuProps,\n  state: MenuTriggerState\n) => {\n  const containerRef = useRef<number | null>(null);\n  /**\n   * NOTE: not using useMenuTrigger because:\n   * - There is no option to have a trigger like this: \"right click + long press only by touch\" which seems to be the\n   *   reasonable trigger for context menu. If we want to use it just for long press, we could disable it if it's not\n   *   a touch device, but that would be suboptimal, since both touch and mouse can be available, and it should depend\n   *   not on availability of touch, but on the triggered event type. Plus, isDisabled is broken in v<3.5.0\n   * - It's not quite clear at the moment, if the aria attributes that useMenuTrigger sets would be applicable in case\n   *   of this context menu component too. the trigger is not the container. For example, if there is a list rendered\n   *   inside, the selected item would be the trigger. Maybe even this component, as a container for context menu\n   *   is not the best way to allow for context menu, when comes to a11y concerns. For now, we skip a11y props of the\n   *   trigger. A11y props of the menu itself (e.g. aria-label) would also be up to the usage of this component.\n   *\n   *   TODO: add support for long touch\n   */\n  const onContextMenu = (e: React.MouseEvent<HTMLElement>) => {\n    containerRef.current = e.timeStamp;\n    updatePosition(e);\n    onOpen?.({ target: e.target as Element });\n    e.preventDefault();\n    // NOTE: we can't use offsetX/offsetY, because it would depend on the exact target that was clicked.\n    if (state.isOpen) {\n      /**\n       * If the context menu is already open, closing and reopening makes sure the menu properly gains the focus.\n       * Otherwise, the focus may go back to the background.\n       * It also better matches the reference impl.\n       */\n      state.close();\n      setTimeout(() => {\n        state.open(null);\n      });\n    } else {\n      state.open(null);\n    }\n  };\n  useEffect(() => {\n    const onOutsideContextMenu = (e: MouseEvent) => {\n      // Using timestamp an easy (and hopefully reliable) way to detect if it's the same\n      // event being handled by onContextMenu, avoiding the overhead of requiring a ref for the container.\n      if (containerRef.current !== e.timeStamp) {\n        state.close();\n      }\n    };\n    /**\n     * right clicks outside are not currently captured as \"outside interaction\" by react-aria's useOverlay hook.\n     * so we set up a global listener to close the context menu when contextmenu event is triggered outside the\n     * context menu container.\n     * to not require a ref just for this, the ref is manually updated when contextmenu event is triggered\n     * on the container (which happens before the event propagates to the document).\n     */\n    document.addEventListener(\"contextmenu\", onOutsideContextMenu);\n    return () =>\n      document.removeEventListener(\"contextmenu\", onOutsideContextMenu);\n  }, []);\n\n  const overlayRef = useRef(null);\n\n  const { overlayProps: positionProps, updatePosition } =\n    useMouseEventOverlayPosition({\n      overlayRef,\n      placement: \"bottom start\",\n      // shouldFlip should be false, but it doesn't work as expected. Overlay container is rendered within the view port\n      // but the menu overflows from the overlay container\n      shouldFlip: true,\n      offset: -8,\n      crossOffset: 2, // to not get the first item hovered on open\n      isOpen: state.isOpen,\n    });\n  const { overlayProps } = useOverlay(\n    {\n      onClose: () => {\n        return state.close();\n      },\n      shouldCloseOnBlur: false,\n      isOpen: state.isOpen,\n      isKeyboardDismissDisabled: false,\n      isDismissable: true,\n      shouldCloseOnInteractOutside: (element) => {\n        return !areInNestedOverlays(overlayRef.current, element);\n      },\n    },\n    overlayRef\n  );\n\n  const containerProps: React.HTMLAttributes<HTMLElement> = isDisabled\n    ? {}\n    : {\n        onContextMenu,\n      };\n  return {\n    /**\n     * props to be applied on the container element which is supposed to have the context menu\n     */\n    containerProps,\n    /**\n     * The ref to be applied on the menu overlay wrapper. It's usually an input instead of an output in similar\n     * react-aria hooks, but it seemed unnecessary here.\n     */\n    overlayRef,\n    /**\n     * props to be applied on the menu overlay wrapper.\n     */\n    overlayProps: mergeProps(overlayProps, positionProps),\n  };\n};\n","import { Item, PartialNode, Section } from \"@react-stately/collections\";\nimport { Item as Item2 } from \"./Item\";\nimport {\n  CollectionBase,\n  CollectionElement,\n  ItemProps,\n  SectionProps,\n} from \"@react-types/shared\";\nimport React from \"react\";\n\nfunction* patchCollectionItem<T>(nodes: Generator<PartialNode<T>>) {\n  for (const partialNode of nodes)\n    yield {\n      ...partialNode,\n      *childNodes() {\n        const result2 = partialNode.childNodes?.();\n        if (result2) {\n          for (const partialChildNode of result2) {\n            const { type, ...partialChildNodeWithoutType } = partialChildNode;\n            yield partialChildNodeWithoutType;\n          }\n        }\n      },\n    };\n}\n\nconst PatchedItem = Item.bind(null);\n\n// @ts-expect-error: getCollectionNode is not public\nPatchedItem.getCollectionNode = function getCollectionNode<T>(\n  props: ItemProps<T>,\n  context: any\n): Generator<PartialNode<T>> {\n  // @ts-expect-error getCollectionNode is not public API\n  return patchCollectionItem(Item.getCollectionNode(props, context));\n};\n\nconst PatchedSection = Section.bind(null);\n\n// @ts-expect-error: getCollectionNode is not public\nPatchedSection.getCollectionNode = function getCollectionNode<T>(\n  props: SectionProps<T>,\n  context: any\n): Generator<PartialNode<T>> {\n  // @ts-expect-error getCollectionNode is not public API\n  return patchCollectionItem(Section.getCollectionNode(props, context));\n};\nfunction convertCollectionElement<T>(\n  result: CollectionElement<T> | React.ReactNode\n): CollectionElement<T> {\n  if (\n    React.isValidElement(result) &&\n    (result.type === Item || result.type === Item2)\n  ) {\n    return React.createElement(\n      PatchedItem,\n      {\n        key: result.key != null ? result.key : undefined,\n        ...(result.props as ItemProps<T>),\n      },\n      convertChildren(result.props.children)\n    ) as CollectionElement<T>;\n  }\n  if (React.isValidElement(result) && result.type === Section) {\n    return React.createElement(\n      PatchedSection,\n      {\n        key: result.key != null ? result.key : undefined,\n        ...(result.props as SectionProps<T>),\n      } as any,\n      convertChildren((result.props as any).children)\n    ) as CollectionElement<T>;\n  }\n  return result as CollectionElement<T>;\n}\n\nfunction convertChildren<T>(children: React.ReactNode): React.ReactNode {\n  return Array.isArray(children)\n    ? // NOTE: We intentionally avoid using React.Children.map as it messes with keys.\n      children.map(convertChildren)\n    : convertCollectionElement(children);\n}\n\n/**\n * CollectionBuilder expects child type to be the same as parent type, which is weird in the first place:\n * https://github.com/adobe/react-spectrum/blob/cae83ff95f2f709b761c70d47ace96d6346ed873/packages/%40react-stately/collections/src/CollectionBuilder.ts#L148\n * On the other hand, the default Item components sets the `type` to item, for all child PartialNode objects:\n * https://github.com/adobe/react-spectrum/blob/c49d9819adc2cb63377f39557352440c72072caf/packages/%40react-stately/collections/src/Item.ts#L40-L54\n * Which is also a little unexpected, as in many nested collections, an item can have all types of children.\n * This function patches that, replacing Item elements with PatchedItem element which doesn't set type on children\n * PartialNodes.\n */\nexport function patchCollectionProps<T>({\n  children,\n  ...props\n}: Partial<CollectionBase<T>>): CollectionBase<T> {\n  return {\n    ...props,\n    children:\n      typeof children === \"function\"\n        ? (node: T) => convertChildren(children(node)) as CollectionElement<T>\n        : (convertChildren(children) as CollectionElement<T>),\n  };\n}\n","import React, { CSSProperties, Key, RefObject, useContext } from \"react\";\nimport { AriaMenuOptions, useMenu as useMenuAria } from \"@react-aria/menu\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { AriaMenuProps } from \"@react-types/menu\";\nimport { Node } from \"@react-types/shared\";\nimport { patchCollectionProps } from \"@intellij-platform/core/Collections/patchCollectionProps\";\nimport { TreeProps, useTreeState } from \"../Tree/useTreeState\"; // shared dependency between tree and menu, that could be lifted up import {Submenu} from '@intellij-platform/core/Menu/Submenu'\nimport { renderMenuNodes } from \"./renderMenuNodes\";\nimport { StyledMenu } from \"./StyledMenu\";\nimport { SubmenuProps } from \"./Submenu\"; // internal export\n\nexport interface MenuProps<T>\n  extends Omit<\n    AriaMenuProps<T>,\n    // selection is not properly supported for nested menus. Plus, it's not even that meaningful for a nested menu\n    // at least the way it's implemented now.\n    | \"onSelectionChange\"\n    | \"defaultSelectedKeys\"\n    | \"selectionMode\"\n    | \"disallowEmptySelection\"\n  > {\n  /**\n   * Indicates currently expanded menu item (controlled).\n   */\n  expandedKey?: Key; // FIXME: should be keys\n  /**\n   * Called when expanded menu item is changed by user interaction, which can be either hovering over the menu item\n   */\n  onExpandedKeyChange?: (expandedKey: Key) => void; // FIXME: should be keys\n  defaultExpandedKey?: Key; // FIXME: should be keys\n  /**\n   * @deprecated\n   */\n  expandOn?: \"hover\" | \"press\"; // hover delay doesn't seem to be needed as an option\n\n  /**\n   * Defines the press behaviour (either by mouse or by pressing Enter when focused) on menu items with submenu.\n   * By default (undefined), pressing or hovering over a menu item with submenu, opens the submenu.\n   * When set to \"toggle\", pressing a menu item with submenu will toggle the submenu. Hovering over such items will\n   * no longer open the submenu.\n   * When set to \"action\", pressing a menu item with submenu will call onAction for that item, and closes the menu.\n   * Hovering over such items will no longer open the submenu.\n   *\n   * In all cases, pressing the right arrow will always open the submenu.\n   */\n  submenuBehavior?: \"default\" | \"toggleOnPress\" | \"actionOnPress\";\n\n  /**\n   * fills the available horizontal or vertical space, when rendered in a flex container.\n   */\n  fillAvailableSpace?: boolean;\n\n  /**\n   * Minimum width of the menu\n   * @default: 120px\n   */\n  minWidth?: CSSProperties[\"minWidth\"];\n}\n\n/**\n * Can be provided by the overlay where the menu is rendered in. If provided, menu will call the provided close function\n * on actions. Note that there is no `closeOnSelect` option as of now, on this context, since no use case seems to exist\n * for keeping the menu overlay open after a menu item is selected.\n * **Update**: there are use cases where the menu is not closed after an item is clicked. Most of the toggle-able\n * actions (the ones with a checkmark) seem to be like this.\n * TODO: Make \"close on selection\" more flexible. Some ideas:\n *  - instead of calling close, pass it to `onAction` handler. Then on each action, one would need to call close if\n *    needed.\n *  - Offer a `MenuItem` component to be used instead of generic `Item`, where it accepts `closeOnSelect` boolean, which\n *    is true by default.\n *  - pass a `keepOpen` function to `onAction`.\n *  - Allow signaling whether the menu should kept open, via the returned value of onAction. e.g. return false means keep open.\n *  Last two suggestions are based on the assumption that most of the menu items are not selectable.\n *  Note that MenuOverlayContext could be used directly in action handlers too, but baking it into the menu makes it\n *  much more convenient, which seems more important than breaking the nice separation between Menu and MenuTrigger.\n */\nexport const MenuOverlayContext = React.createContext<{\n  close: () => void;\n  defaultAutoFocus: MenuProps<unknown>[\"autoFocus\"];\n}>({\n  close: () => {},\n  defaultAutoFocus: undefined,\n});\nexport const MenuContext = React.createContext<\n  Pick<\n    MenuProps<unknown>,\n    \"onClose\" | \"onAction\" | \"submenuBehavior\" | \"autoFocus\"\n  > & {\n    itemWrapper?: (\n      renderedItem: React.ReactNode,\n      item: Node<unknown>\n    ) => React.ReactNode;\n    renderSubmenu?: (props: SubmenuProps<unknown>) => React.ReactNode;\n  }\n>({});\n\nexport function useMenu<T>(\n  {\n    onAction: onActionProp,\n    submenuBehavior = \"default\",\n    ...props\n  }: MenuProps<T> & AriaMenuOptions<T>,\n  state: TreeState<T>,\n  ref: RefObject<HTMLElement>\n) {\n  const { close, defaultAutoFocus } = useContext(MenuOverlayContext);\n  const autoFocus = props.autoFocus ?? defaultAutoFocus;\n  const onClose = () => {\n    props.onClose?.();\n    close();\n  };\n  const onAction = (key: Key) => {\n    if (\n      // The following check should have been in useMenu, but it's not currently. Probably because they haven't yet\n      // covered nested menus.\n      !state.collection.getItem(key)?.hasChildNodes\n    ) {\n      return onActionProp?.(key);\n    } else if (submenuBehavior === \"actionOnPress\") {\n      onClose();\n      return onActionProp?.(key);\n    }\n  };\n  const menuContextValue: React.ContextType<typeof MenuContext> = {\n    submenuBehavior,\n    autoFocus,\n    onAction,\n    onClose,\n  };\n  const { menuProps } = useMenuAria(\n    { ...props, onAction, onClose, autoFocus },\n    state,\n    ref\n  );\n\n  return {\n    menuProps,\n    menuContextValue,\n  };\n}\n\nexport function useMenuState<T extends object>(\n  props: TreeProps<T> &\n    Pick<\n      MenuProps<T>,\n      \"expandedKey\" | \"defaultExpandedKey\" | \"onExpandedKeyChange\"\n    >\n) {\n  props = patchCollectionProps(props);\n  return useTreeState({\n    ...props,\n    childExpansionBehaviour: \"single\",\n    expandedKeys: props.expandedKey ? [props.expandedKey] : undefined,\n    onExpandedChange: ([firstKey]) => props?.onExpandedKeyChange?.(firstKey),\n    defaultExpandedKeys: props.defaultExpandedKey\n      ? [props.defaultExpandedKey]\n      : undefined,\n  });\n}\n\n/**\n * UI for menus which are normally shown in a popover. Being rendered as an overlay is not handled here.\n * Also, there is no coupling with any higher level entity like \"Action\", since this is just for the UI layer.\n * Something like ActionMenu which creates a menu out of a list of actions can be implemented on top of this.\n *\n * @example\n *  <Menu>\n *    <Item>Item one</Item>\n *    <Item>\n *      <MenuItemLayout\n *        icon={<PlatformIcon icon={\"actions/copy\"} />}\n *        content=\"Copy\"\n *        shortcut={\"⌘C\"} />\n *    </Item>\n *  </Menu>\n *\n *  Current issues and limitations:\n *  - Divider in sub-menu's is not supported. because of a constraint in @react-stately/collections, which results in\n *    this error: Unsupported type <Divider> in <Item>. Only <Item> is supported. Maybe supporting section would\n *    be a workaround for it.\n *  - when a parent menu item which has an open submenu is hovered, it gets focus.\n */\nexport function Menu<T extends object>({ minWidth, ...props }: MenuProps<T>) {\n  const ref = React.useRef<HTMLUListElement>(null);\n  const state = useMenuState(props);\n  const { menuContextValue, menuProps } = useMenu(props, state, ref);\n\n  return (\n    /**\n     * MenuContext is used to pass onAction and onClose to be passed to useMenu in submenus.\n     * That's needed because in useMenuItem onAction and onClose are read off a WeakMap which has the menu state\n     * (TreeState) as key. So we have to pass onAction and onClose everytime we call useMenu in submenus, to let the\n     * menu items in that submenu access the right value of onAction and onClose. To avoid drilling these props down,\n     * we keep it in a context.\n     */\n    <MenuContext.Provider value={menuContextValue}>\n      <StyledMenu\n        {...menuProps}\n        ref={ref}\n        style={{ minWidth }}\n        fillAvailableSpace={props.fillAvailableSpace}\n      >\n        {renderMenuNodes(state, [...state.collection])}\n      </StyledMenu>\n    </MenuContext.Provider>\n  );\n}\n","import React, { HTMLAttributes, ReactNode, RefObject, useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { isFocusVisible, useHover, usePress } from \"@react-aria/interactions\";\nimport {\n  AriaMenuItemProps,\n  MenuItemAria,\n  useMenuItem as useMenuItemAria,\n} from \"@react-aria/menu\";\nimport { useOverlayPosition } from \"@react-aria/overlays\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { FocusableElement, Node } from \"@react-types/shared\";\nimport { ItemStateContext } from \"@intellij-platform/core/Collections/ItemStateContext\";\nimport { Overlay } from \"@intellij-platform/core/Overlay\";\n\nimport { LafIcon, PlatformIcon } from \"../Icon\";\nimport { styled } from \"../styled\";\nimport { MenuContext, MenuProps } from \"./Menu\";\nimport { MENU_BORDER_WIDTH, MENU_VERTICAL_PADDING } from \"./StyledMenu\";\nimport {\n  StyledMenuItem,\n  StyledMenuItemIcon,\n  StyledNestedArrow,\n} from \"./StyledMenuItem\";\nimport { Submenu, SubmenuProps } from \"@intellij-platform/core/Menu/Submenu\";\n\nexport interface MenuItemProps<T> {\n  item: Node<T>;\n  state: TreeState<T>;\n  onSubmenuClose?: () => void;\n}\n\nconst StyledMenuItemText = styled.span`\n  flex: 1;\n`;\n\nconst StyledMenuItemPlatformIcon = styled(PlatformIcon)`\n  svg path {\n    stroke: currentColor;\n  }\n`;\n\nconst StyledMenuItemLafIcon = styled(LafIcon)`\n  svg path {\n    stroke: currentColor;\n  }\n`;\n\nfunction useMenuItem<T extends unknown>(\n  {\n    submenuBehavior,\n    ...props\n  }: AriaMenuItemProps & { submenuBehavior: MenuProps<T>[\"submenuBehavior\"] },\n  state: TreeState<T>,\n  ref: RefObject<FocusableElement>\n): MenuItemAria {\n  const item = state.collection.getItem(props.key!)!;\n  const isDisabled = state.disabledKeys.has(item.key);\n  const isExpanded = state.expandedKeys.has(item.key);\n  const hasSubmenu = item.hasChildNodes;\n  const { menuItemProps: ariaMenuItemProps, ...result } = useMenuItemAria(\n    {\n      key: item.key,\n      // hack to prevent react-aria to call onClose when nested items are selected, which is incorrect, and because\n      // react-aria doesn't officially support nested menus at the moment\n      onClose: hasSubmenu ? () => {} : undefined,\n    },\n    state,\n    ref\n  );\n\n  // useMenuItem in react aria utilizes useHover to focus item on hover. The logic there conflicts with nested menus\n  // requirements (at least based on how nested menu is implemented here currently). Also, submenuBehavior requires\n  // some more customization. So we delete the handlers set by useHover in useMenuItem, and add a custom useHover.\n  delete ariaMenuItemProps.onMouseEnter;\n  delete ariaMenuItemProps.onPointerEnter;\n\n  if (submenuBehavior === \"default\" && isExpanded) {\n    // When menu item has its submenu opened, clicking it should not move focus or do anything.\n    delete ariaMenuItemProps.onPointerDown;\n  }\n\n  const { hoverProps } = useHover({\n    isDisabled: isDisabled,\n    onHoverStart: () => {\n      const isAnySubmenuOpen = [...state.expandedKeys].some(\n        (expandedKey) =>\n          state.collection.getItem(expandedKey)?.parentKey === item.parentKey\n      );\n\n      if (submenuBehavior === \"default\" && !isExpanded) {\n        state.toggleKey(item.key);\n      }\n\n      if (!isFocusVisible()) {\n        const shouldFocus =\n          submenuBehavior === \"default\" ? !isExpanded : !isAnySubmenuOpen;\n        if (shouldFocus) {\n          state.selectionManager.setFocused(true);\n        }\n        state.selectionManager.setFocusedKey(item.key);\n      }\n    },\n  });\n\n  const keyboardProps = {\n    onKeyDown: (e: React.KeyboardEvent) => {\n      if (\n        ((e.key === \"Enter\" || e.key === \" \") &&\n          submenuBehavior !== \"actionOnPress\") ||\n        \"ArrowRight\" === e.key\n      ) {\n        state.toggleKey(item.key);\n        e.stopPropagation();\n        return;\n      }\n    },\n  };\n\n  const { pressProps: togglePressProps } = usePress({\n    isDisabled: isDisabled,\n    onPressUp: () => {\n      state.toggleKey(item.key);\n      if (isExpanded) {\n        // submenu was expanded and is closed now. moving focus back to the parent item\n        state.selectionManager.setFocusedKey(item.key);\n      }\n    },\n  });\n\n  return {\n    ...result,\n    menuItemProps: mergeProps(\n      hasSubmenu\n        ? {\n            \"aria-expanded\": isExpanded,\n            \"aria-haspopup\": \"menu\",\n          }\n        : {},\n      ariaMenuItemProps,\n      hoverProps,\n      keyboardProps,\n      submenuBehavior === \"toggleOnPress\" ? togglePressProps : {}\n    ),\n  };\n}\n\nconst MenuItemContext = React.createContext<{\n  labelProps: HTMLAttributes<HTMLElement>;\n  descriptionProps: HTMLAttributes<HTMLElement>;\n  keyboardShortcutProps: HTMLAttributes<HTMLElement>;\n}>({ descriptionProps: {}, labelProps: {}, keyboardShortcutProps: {} });\n\nexport const useMenuItemLayout = () => {\n  return useContext(MenuItemContext);\n};\n\nexport function MenuItem<T>({ item, state }: MenuItemProps<T>) {\n  // Get props for the menu item element\n  const ref = React.useRef<HTMLLIElement>(null);\n  const nestedMenuRef = React.useRef<HTMLDivElement>(null);\n  const isDisabled = state.disabledKeys.has(item.key);\n  const isExpanded = state.expandedKeys.has(item.key);\n  const isSelected = state.selectionManager.selectedKeys.has(item.key);\n  const isFocused = state.selectionManager.focusedKey === item.key;\n  const {\n    onClose,\n    submenuBehavior,\n    renderSubmenu = (props: SubmenuProps<T>) => <Submenu {...props} />,\n    itemWrapper = (i: React.ReactNode) => i,\n  } = useContext(MenuContext);\n\n  const { menuItemProps, labelProps, descriptionProps, keyboardShortcutProps } =\n    useMenuItem(\n      {\n        submenuBehavior,\n        key: item.key,\n      },\n      state,\n      ref\n    );\n\n  const { pressProps: togglePressProps } = usePress({\n    isDisabled: isDisabled,\n    onPressUp: () => {\n      state.toggleKey(item.key);\n      if (isExpanded) {\n        // submenu was expanded and is closed now. moving focus back to the parent item\n        state.selectionManager.setFocusedKey(item.key);\n      }\n    },\n  });\n\n  let { overlayProps: positionProps } = useOverlayPosition({\n    targetRef: ref,\n    overlayRef: nestedMenuRef,\n    placement: \"right top\",\n    shouldFlip: true,\n    onClose,\n    offset: 0,\n    crossOffset: -(MENU_VERTICAL_PADDING + MENU_BORDER_WIDTH),\n    isOpen: isExpanded,\n  });\n\n  const arrowProps: HTMLAttributes<HTMLElement> =\n    submenuBehavior !== \"default\"\n      ? {\n          role: \"button\",\n          \"aria-label\": \"Open\",\n          ...mergeProps(togglePressProps, {\n            // to prevent pointer up event handler on the item, which would trigger action.\n            onPointerUp: (e: React.PointerEvent) => e.stopPropagation(),\n          }),\n        }\n      : {};\n  return (\n    <>\n      <StyledMenuItem\n        {...menuItemProps}\n        isDisabled={isDisabled}\n        isActive={isFocused}\n        ref={ref}\n      >\n        {isSelected && (\n          <StyledMenuItemIcon>\n            <StyledMenuItemLafIcon\n              icon={{\n                name: \"checkmark\",\n                modifiers: { Selected: isFocused },\n              }}\n            />\n          </StyledMenuItemIcon>\n        )}\n        <ItemStateContext.Provider\n          value={{\n            isDisabled,\n            isContainerFocused: state.selectionManager.isFocused,\n            isSelected,\n            node: item,\n          }}\n        >\n          <MenuItemContext.Provider\n            value={{ labelProps, descriptionProps, keyboardShortcutProps }}\n          >\n            {itemWrapper(\n              typeof item.rendered === \"string\" ? (\n                <StyledMenuItemText {...labelProps}>\n                  {item.rendered}\n                </StyledMenuItemText>\n              ) : (\n                item.rendered\n              ),\n              item\n            )}\n          </MenuItemContext.Provider>\n        </ItemStateContext.Provider>\n        {item.hasChildNodes && (\n          <StyledNestedArrow {...arrowProps}>\n            <StyledMenuItemPlatformIcon icon=\"icons/ide/menuArrow\" />\n          </StyledNestedArrow>\n        )}\n      </StyledMenuItem>\n      {isExpanded && (\n        /**\n         * A note about using Overlay:\n         * If sub-menu is not rendered in a portal, useOverlayPosition doesn't work properly and the submenu may\n         * be rendered offscreen. Worse, it may introduce scroll in body (or some scrollable ancestor), which will\n         * trigger a scroll event which closes the menu if the menu is rendered in an overlay (like in MenuTrigger),\n         * which is almost always the case.\n         *\n         */\n        <Overlay\n          OverlayComponent={\n            /**\n             *  The FocusScope included in the default Overlay, messes with a particular expected behavior. So we use\n             *  SimpleOverlay, which just renders its children as a portal. There may be a better solution for that\n             *  problem, which would eliminate the need for the funky `OverlayComponent` prop on our `Overlay`\n             *  component. Something to look into in the future.\n             */\n            SimpleOverlay\n          }\n        >\n          <div ref={nestedMenuRef} {...positionProps}>\n            {renderSubmenu({ parentState: state, rootKey: item.key })}\n          </div>\n        </Overlay>\n      )}\n    </>\n  );\n}\n\n/**\n * A replacement for react-aria Overlay, which doesn't render FocusScope\n */\nfunction SimpleOverlay({\n  children,\n  portalContainer = document.body,\n}: {\n  children: ReactNode;\n  portalContainer?: Element | undefined;\n}) {\n  return ReactDOM.createPortal(children, portalContainer);\n}\n","import React from \"react\";\nimport { ItemStateContext } from \"@intellij-platform/core/Collections/ItemStateContext\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { useContextOrThrow } from \"@intellij-platform/core/utils/useContextOrThrow\";\n\nimport { useMenuItemLayout } from \"./MenuItem\";\nimport { StyledMenuItemIcon } from \"./StyledMenuItem\";\n\ninterface MenuItemLayoutProps {\n  icon?: React.ReactNode;\n  content: React.ReactNode;\n  shortcut?: React.ReactNode;\n}\n\nconst StyledMenuItemLayout = styled.div`\n  display: flex;\n  align-items: center;\n  flex: 1; // to make sure it takes as much space as available in the menu item row, so that the suffix (shortcut) is pushed to the right\n`;\nconst Content = styled.span`\n  flex: 1;\n`;\n\nconst Shortcut = styled.kbd`\n  font-family: system-ui, sans-serif;\n  margin-left: 30px;\n  margin-right: -0.625rem;\n  color: ${({ theme }) =>\n    theme.currentForegroundAware(\n      theme.color(\"MenuItem.acceleratorForeground\")\n    )};\n`;\n\nexport const MenuItemLayout = ({\n  content,\n  shortcut,\n  icon,\n}: MenuItemLayoutProps) => {\n  const { isSelected } = useContextOrThrow(\n    ItemStateContext,\n    \"MenuItemLayout is meant to be rendered in Item component in Menus\"\n  );\n  const { labelProps, keyboardShortcutProps } = useMenuItemLayout();\n  const allowedIcon = !isSelected && icon;\n  return (\n    <StyledMenuItemLayout>\n      {allowedIcon && <StyledMenuItemIcon>{allowedIcon}</StyledMenuItemIcon>}\n      <Content {...labelProps}>{content}</Content>\n      {shortcut && <Shortcut {...keyboardShortcutProps}>{shortcut}</Shortcut>}\n    </StyledMenuItemLayout>\n  );\n};\n","import React, { HTMLProps } from \"react\";\nimport { MenuTriggerState } from \"@react-stately/menu\";\nimport { FocusScope } from \"@intellij-platform/core/utils/FocusScope\";\nimport {\n  MenuOverlayContext,\n  MenuProps,\n} from \"@intellij-platform/core/Menu/Menu\";\nimport { Overlay } from \"@intellij-platform/core/Overlay\";\n\n/**\n * Overlay container for menu. Extracted into a separate component, to be used by components like MenuTrigger or\n * ContextMenuContainer, that need to render a menu as an overlay.\n * @private\n */\nexport function MenuOverlay({\n  children,\n  restoreFocus,\n  overlayProps,\n  overlayRef,\n  defaultAutoFocus,\n  state,\n}: {\n  children: React.ReactNode;\n  restoreFocus?: boolean;\n  overlayProps: HTMLProps<HTMLDivElement>;\n  overlayRef: React.Ref<HTMLDivElement>;\n  /**\n   * Sets the default value of {@link Menu}'s {@link MenuProps#autoFocus} prop.\n   */\n  defaultAutoFocus?: MenuProps<unknown>[\"autoFocus\"];\n  state: MenuTriggerState;\n}) {\n  if (!state.isOpen) {\n    return null;\n  }\n  return (\n    <Overlay>\n      <FocusScope restoreFocus={restoreFocus} autoFocus>\n        <MenuOverlayContext.Provider\n          value={{\n            ...state,\n            defaultAutoFocus,\n          }}\n        >\n          <div {...overlayProps} ref={overlayRef}>\n            {children}\n          </div>\n        </MenuOverlayContext.Provider>\n      </FocusScope>\n    </Overlay>\n  );\n}\n","import React, { HTMLAttributes, RefObject } from \"react\";\nimport { useButton } from \"@react-aria/button\";\nimport { AriaMenuOptions, useMenuTrigger } from \"@react-aria/menu\";\nimport { useOverlay, useOverlayPosition } from \"@react-aria/overlays\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useMenuTriggerState } from \"@react-stately/menu\";\nimport { MenuTriggerProps as AriaMenuTriggerProps } from \"@react-types/menu\";\n\nimport { MenuOverlay } from \"./MenuOverlay\";\nimport { AriaButtonProps } from \"@react-types/button\";\nimport { Alignment } from \"@react-types/shared\";\n\nexport interface MenuTriggerProps\n  extends Omit<AriaMenuTriggerProps, \"closeOnSelect\"> {\n  restoreFocus?: boolean;\n  // TODO: replace render function children with normal children, and utilize PressResponder. Add a story for the\n  //  edge case of custom trigger, using PressResponder\n  children: (\n    props: HTMLAttributes<HTMLButtonElement>,\n    ref: RefObject<any> // Using a generic didn't seem to work for some reason\n  ) => React.ReactNode;\n  // NOTE: there is a chance of unchecked breaking change here, since this is not explicitly mentioned as public API\n  // of useButton, but it is passed to the underlying usePress.\n  preventFocusOnPress?: boolean;\n  /**\n   * By default, the menu is positioned relative to the trigger. `positioningTargetRef` can be used to have the menu\n   * positioned to another element. An example use case is when the menu trigger is a button inside some list item or\n   * text box, but the menu semantically belongs to the container list item or text box.\n   */\n  positioningTargetRef?: React.RefObject<HTMLElement>;\n  renderMenu: (props: {\n    // AriaMenuOptions contains more properties than needed\n    menuProps: Pick<\n      AriaMenuOptions<unknown>,\n      \"id\" | \"aria-labelledby\" | \"autoFocus\" | \"onClose\"\n    >;\n  }) => React.ReactNode;\n\n  /**\n   * Alignment of the menu relative to the trigger.\n   * @default 'start'\n   */\n  align?: Alignment;\n  /**\n   * Where the Menu opens relative to its trigger.\n   * @default 'bottom'\n   */\n  direction?: \"bottom\" | \"top\" | \"left\" | \"right\" | \"start\" | \"end\";\n  /**\n   * Whether the menu should automatically flip direction when space is limited.\n   * @default true\n   */\n  shouldFlip?: boolean;\n}\n\n// FIXME: Escape doesn't close the menu\n// FIXME: Focus is not restored if nested menu are opened. It may be solved by using useOverlay and closing submenu in click outside.\n// FIXME: use PressResponder and replace render prop children with a normal react dom children. Issues with current impl:\n//  disabled trigger doesn't work as expected. props passed to children fn is html props, which is limiting for button\n//  components that don't accept arbitrary dom props.\n/**\n * Makes its children a trigger for a menu, rendered via {@link MenuTriggerProps#renderMenu} prop.\n * Closes the menu when a menu action is triggered.\n */\nexport const MenuTrigger: React.FC<MenuTriggerProps> = ({\n  children,\n  renderMenu,\n  direction = \"bottom\",\n  align = \"start\",\n  shouldFlip = true,\n  restoreFocus = true,\n  preventFocusOnPress = true,\n  positioningTargetRef,\n  ...otherProps\n}) => {\n  const state = useMenuTriggerState(otherProps);\n  const triggerRef = React.useRef(null);\n  const overlayRef = React.useRef(null);\n  // FIXME: Menu props is not used, but it's just about labelBy and id. Only needed for accessibility, but it would\n  //  require a `renderMenu` prop, instead of `menu`.\n  const { menuTriggerProps: triggerProps, menuProps } = useMenuTrigger(\n    { type: \"menu\" },\n    state,\n    triggerRef\n  );\n  const ariaButtonProps: AriaButtonProps<\"button\"> = {\n    ...triggerProps,\n    // @ts-expect-error: preventFocusOnPress is not defined in public API of useButton\n    preventFocusOnPress,\n  };\n  const { buttonProps } = useButton(ariaButtonProps, triggerRef);\n  const { overlayProps } = useOverlay(\n    {\n      onClose: () => {\n        return state.close();\n      },\n      shouldCloseOnBlur: false,\n      isOpen: state.isOpen,\n      isKeyboardDismissDisabled: false,\n      isDismissable: true,\n      shouldCloseOnInteractOutside: (element) => {\n        // FIXME: this is kind of hacky and should be removed when nested menu is properly supported\n        return !element.matches(\"[role=menu] *\");\n      },\n    },\n    overlayRef\n  );\n\n  const { overlayProps: positionProps } = useOverlayPosition({\n    targetRef: positioningTargetRef ?? triggerRef,\n    overlayRef,\n    placement: getPlacement(direction, align),\n    shouldFlip,\n    offset: 0,\n    containerPadding: 0,\n    isOpen: state.isOpen,\n  });\n\n  return (\n    <>\n      {children(buttonProps, triggerRef)}\n      <MenuOverlay\n        overlayProps={mergeProps(overlayProps, positionProps)}\n        overlayRef={overlayRef}\n        state={state}\n        restoreFocus={restoreFocus}\n      >\n        {renderMenu({ menuProps })}\n      </MenuOverlay>\n    </>\n  );\n};\n\nfunction getPlacement(\n  direction: Required<MenuTriggerProps>[\"direction\"],\n  align: Required<MenuTriggerProps>[\"align\"]\n) {\n  switch (direction) {\n    case \"left\":\n    case \"right\":\n    case \"start\":\n    case \"end\":\n      return `${direction} ${align === \"end\" ? \"bottom\" : \"top\"}` as const;\n    case \"bottom\":\n    case \"top\":\n    default:\n      return `${direction} ${align}` as const;\n  }\n}\n","import React, {\n  HTMLAttributes,\n  RefObject,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { Node } from \"@react-types/shared\";\nimport {\n  mergeProps,\n  useLayoutEffect,\n  useResizeObserver,\n} from \"@react-aria/utils\";\nimport { focusSafely } from \"@react-aria/focus\";\nimport { ListCollection } from \"@react-stately/list\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { useEventCallback } from \"@intellij-platform/core/utils/useEventCallback\";\nimport {\n  useCollectionSpeedSearch,\n  CollectionSpeedSearchMatches,\n} from \"@intellij-platform/core/CollectionSpeedSearch\";\nimport {\n  SpeedSearchInput,\n  SpeedSearchPopupProps,\n  SpeedSearchState,\n} from \"@intellij-platform/core/SpeedSearch\";\n\nimport { StyledMenu } from \"./StyledMenu\";\nimport { MenuContext, MenuProps, useMenu, useMenuState } from \"./Menu\";\nimport { renderMenuNodes } from \"./renderMenuNodes\";\nimport { SubmenuProps, useSubmenu } from \"./Submenu\";\nimport { useSubmenuState } from \"./_useSubmenuState\";\nimport { MenuKeyboardDelegate } from \"./_useSubmenu\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { StyledVerticalSeparator } from \"@intellij-platform/core/StyledSeparator\";\n\nexport interface SpeedSearchMenuProps<T>\n  extends Omit<MenuProps<T>, \"submenuBehavior\"> {\n  submenuBehavior?: Exclude<MenuProps<T>[\"submenuBehavior\"], \"default\">;\n  /**\n   * Text to show when the filtering is active but no match is found for the current query.\n   * @default \"Nothing to show\"\n   */\n  emptyText?: React.ReactNode;\n}\n\nconst StyledItemsContainer = styled.ul`\n  all: unset;\n  flex: 1;\n  overflow: auto;\n`;\n\nconst StyledSearchFieldWrapper = styled.div`\n  flex-shrink: 0;\n  padding: 0 0.2rem 0.3rem;\n`;\n\nconst StyledSpeedSearchMenu = styled(StyledMenu)`\n  --jui-menu-item-padding: 1.25rem;\n  ${StyledVerticalSeparator} {\n    margin: 0 3px; // FIXME: probably use theme\n  }\n`;\n\nconst StyledPlaceholder = styled.div`\n  color: ${({ theme }) =>\n    // Ref: StatusText => DEFAULT_ATTRIBUTES => SimpleTextAttributes.GRAYED_ATTRIBUTES\n    theme.color(\n      \"Component.infoForeground\",\n      theme.dark ? \"#787878\" : \"#999999\"\n    )};\n\n  // center positioning. Intentionally different from reference impl.\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n\n  white-space: nowrap;\n`;\n\nfunction useSpeedSearchMenu<T>(\n  state: TreeState<T>,\n  rootKey: React.Key | null,\n  ref: React.RefObject<HTMLUListElement>,\n  containerRef: React.RefObject<HTMLDivElement>\n) {\n  const {\n    speedSearch,\n    selectionManager,\n    keyboardDelegate,\n    containerProps: speedSearchContainerProps,\n    searchPopupProps,\n  } = useCollectionSpeedSearch({\n    collection: useMemo(\n      () =>\n        new ListCollection(\n          rootKey\n            ? state.collection.getItem(rootKey)?.childNodes ?? []\n            : state.collection\n        ),\n      [rootKey, state.collection]\n    ),\n    selectionManager: state.selectionManager,\n    keyboardDelegate: new MenuKeyboardDelegate(\n      rootKey,\n      state.collection,\n      state.disabledKeys,\n      ref\n    ),\n    keepSearchActiveOnBlur: true,\n    focusBestMatch: true,\n    ref,\n  });\n\n  // When a menu item which was focused is filtered out, the focus goes to body.\n  // We manually move focus back to the container.\n  useEffect(() => {\n    const element = ref.current;\n    if (\n      element &&\n      state.selectionManager.isFocused &&\n      !element?.contains(document.activeElement)\n    ) {\n      focusSafely(element);\n    }\n  });\n\n  const lastSize = useRef<{ width: number; height: number } | null>(null);\n  const [size, setSize] = useState<{ width: number; height: number } | null>(\n    null\n  );\n  const measureSize = () => {\n    const { offsetWidth = 0, offsetHeight = 0 } = containerRef.current || {};\n    if (offsetWidth > 0 && offsetHeight > 0) {\n      lastSize.current = {\n        width: offsetWidth,\n        height: offsetHeight,\n      };\n    }\n  };\n  const isSearchActive =\n    speedSearch.active && speedSearch.searchTerm.length > 0;\n  useResizeObserver({\n    ref: containerRef,\n    onResize: useEventCallback(() => {\n      if (!isSearchActive) {\n        measureSize();\n      }\n    }),\n  });\n  useLayoutEffect(() => {\n    if (isSearchActive) {\n      if (lastSize.current) {\n        setSize(lastSize.current);\n      }\n    } else {\n      if (!lastSize.current) {\n        measureSize();\n      }\n      setSize(null);\n    }\n  }, [isSearchActive]);\n\n  const sizeStyleProps: HTMLAttributes<HTMLElement> = size\n    ? {\n        style: {\n          ...size,\n          minHeight: size.height,\n          maxHeight: size.height,\n        },\n      }\n    : {};\n  return {\n    speedSearch,\n    keyboardDelegate,\n    selectionManager,\n    speedSearchContainerProps: mergeProps<HTMLAttributes<HTMLElement>[]>(\n      speedSearchContainerProps,\n      sizeStyleProps,\n      {\n        onMouseDown: (e: React.MouseEvent) => {\n          // Until SearchInput and connecting that to a selectable list is implemented, we should prevent menu from\n          // losing focus when the fake search input is clicked\n          e.preventDefault();\n        },\n      }\n    ),\n    searchPopupProps,\n  };\n}\n\n/**\n * Drop-in replacement for Menu, which implements SpeedSearch.\n *\n *\n */\nexport const SpeedSearchMenu = <T extends object>({\n  submenuBehavior = \"toggleOnPress\",\n  autoFocus = \"first\",\n  emptyText = \"Nothing to show\",\n  minWidth,\n  ...props\n}: SpeedSearchMenuProps<T>) => {\n  const onAction = (key: React.Key) => {\n    props.onAction?.(key);\n    speedSearch.clear();\n  };\n  const ref = React.useRef<HTMLUListElement>(null);\n  const containerRef = React.useRef<HTMLDivElement>(null);\n  const state = useMenuState({ ...props });\n  const {\n    speedSearch,\n    speedSearchContainerProps,\n    searchPopupProps,\n    keyboardDelegate,\n  } = useSpeedSearchMenu(state, null, ref, containerRef);\n  const { menuContextValue, menuProps } = useMenu(\n    {\n      ...props,\n      autoFocus,\n      onAction,\n      keyboardDelegate,\n      submenuBehavior,\n    },\n    state,\n    ref\n  );\n\n  return (\n    <MenuContext.Provider\n      value={{\n        ...menuContextValue,\n        renderSubmenu: (props) => (\n          <SpeedSearchSubmenu emptyText={emptyText} {...props} />\n        ),\n      }}\n    >\n      <StyledSpeedSearchMenu\n        as=\"div\"\n        ref={containerRef}\n        style={{ minWidth }}\n        {...speedSearchContainerProps}\n        fillAvailableSpace={props.fillAvailableSpace}\n      >\n        <SpeedSearchMenuContent\n          items={[...state.collection]}\n          emptyText={emptyText}\n          speedSearch={speedSearch}\n          searchPopupProps={searchPopupProps}\n          state={state}\n          menuProps={menuProps}\n          menuRef={ref}\n        />\n      </StyledSpeedSearchMenu>\n    </MenuContext.Provider>\n  );\n};\n\nfunction SpeedSearchMenuContent<T>({\n  items,\n  state,\n  speedSearch,\n  searchPopupProps,\n  menuProps,\n  menuRef,\n  emptyText,\n}: {\n  state: TreeState<T>;\n  items: Node<T>[];\n  speedSearch: SpeedSearchState & { matches: CollectionSpeedSearchMatches };\n  searchPopupProps: SpeedSearchPopupProps;\n  menuProps: HTMLAttributes<HTMLElement>;\n  menuRef: RefObject<HTMLUListElement>;\n  emptyText: React.ReactNode;\n}) {\n  const filter = speedSearch.active\n    ? ({ key, type }: Node<T>) =>\n        type !== \"item\" || speedSearch.matches.has(key)\n    : undefined;\n  return (\n    <>\n      {searchPopupProps.children && (\n        <StyledSearchFieldWrapper\n          onClick={(e) => {\n            e.preventDefault();\n          }}\n        >\n          <SpeedSearchInput {...searchPopupProps} clear={speedSearch.clear} />\n        </StyledSearchFieldWrapper>\n      )}\n      <StyledItemsContainer {...menuProps} ref={menuRef}>\n        {renderMenuNodes(state, items, filter)}\n        {speedSearch.active && speedSearch.matches.size === 0 && (\n          <StyledPlaceholder>{emptyText}</StyledPlaceholder>\n        )}\n      </StyledItemsContainer>\n    </>\n  );\n}\n\nfunction SpeedSearchSubmenu<T>({\n  parentState,\n  rootKey,\n  emptyText,\n}: SubmenuProps<T> & { emptyText: React.ReactNode }) {\n  const ref = useRef<HTMLUListElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const state = useSubmenuState(parentState);\n  const rootItem = state.collection.getItem(rootKey);\n\n  const {\n    speedSearch,\n    speedSearchContainerProps,\n    searchPopupProps,\n    keyboardDelegate,\n  } = useSpeedSearchMenu(state, rootKey, ref, containerRef);\n  const { submenuProps } = useSubmenu(\n    { rootKey, parentState, keyboardDelegate },\n    state,\n    ref\n  );\n\n  return (\n    <StyledSpeedSearchMenu\n      {...speedSearchContainerProps}\n      as=\"div\"\n      ref={containerRef}\n    >\n      <SpeedSearchMenuContent\n        items={[...(rootItem?.childNodes || [])]}\n        speedSearch={speedSearch}\n        searchPopupProps={searchPopupProps}\n        state={state}\n        menuProps={submenuProps}\n        menuRef={ref}\n        emptyText={emptyText}\n      />\n    </StyledSpeedSearchMenu>\n  );\n}\n","import { css } from \"styled-components\";\n\nimport { WINDOW_SHADOW } from \"../style-constants\";\nimport { styled } from \"../styled\";\nimport { StyledVerticalSeparator } from \"../StyledSeparator\";\nimport { UnknownThemeProp } from \"../Theme/Theme\";\n\nimport { StyledMenuItem, StyledMenuItemIcon } from \"./StyledMenuItem\";\n\nexport const MENU_VERTICAL_PADDING = 5;\nexport const MENU_BORDER_WIDTH = 1;\n\n// noinspection CssInvalidPropertyValue\nexport const StyledMenu = styled.ul<{ fillAvailableSpace?: boolean }>`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  font-size: 0.8rem;\n  margin: 0;\n  padding: ${MENU_VERTICAL_PADDING}px 0;\n  outline: none;\n  list-style: none;\n  width: fit-content;\n  min-width: 120px;\n  overflow: auto;\n  // Border doesn't seem to be painted in the original impl. IdeaPopupMenuUI.isUnderPopup(c) seemed to return false\n  // in all cases. More info: https://github.com/JetBrains/intellij-community/blob/c5ece483811a3ab546fc3880225efb02cc8b94dd/platform/platform-impl/src/com/intellij/ide/ui/laf/darcula/ui/DarculaPopupMenuBorder.java#L24\n  /*  border: ${MENU_BORDER_WIDTH}px solid\n    ${({ theme }) =>\n    theme.color(\"Menu.borderColor\", !theme.dark ? \"#CDCDCD\" : \"#515151\")};*/\n  ${WINDOW_SHADOW};\n  background: ${({ theme }) =>\n    theme.color(\n      \"PopupMenu.background\" as UnknownThemeProp<\"PopupMenu.background\">\n    )};\n  color: ${({ theme }) =>\n    theme.color(\n      \"PopupMenu.foreground\" as UnknownThemeProp<\"PopupMenu.foreground\">\n    )};\n\n  ${StyledVerticalSeparator}:first-child,\n  ${StyledVerticalSeparator}:last-child, \n  ${StyledVerticalSeparator} + ${StyledVerticalSeparator} {\n    display: none;\n  }\n  ${StyledVerticalSeparator} {\n    background-color: ${({ theme }) => theme.color(\"Menu.separatorColor\")};\n    height: ${({ theme }) =>\n      `${theme.value(\"PopupMenuSeparator.height\") ?? 3}px`};\n    padding: ${({ theme }) =>\n      `${theme.value(\"PopupMenuSeparator.stripeIndent\") ?? 1}px 0`};\n    margin: ${({ theme }) =>\n      `0 ${theme.value(\"PopupMenuSeparator.withToEdge\") ?? 1}px`};\n  }\n  ${({ fillAvailableSpace }) =>\n    fillAvailableSpace &&\n    css`\n      flex: 1;\n      width: fill-available; // will be converted to --webkit-fill-available and --moz-available, but doesn't work in FF\n      height: fill-available;\n    `}\n\n  --jui-menu-item-padding: 1rem;\n  --jui-menu-item-icon-width: 1rem;\n  --jui-menu-item-icon-spacing: 0.3125rem;\n\n  ${StyledMenuItem} {\n    // NOTE: The left margin seems not to be consistent in all menus.\n    padding-left: var(--jui-menu-item-padding);\n  }\n  &:has(${StyledMenuItemIcon}) {\n    // Adjusting item padding for menus with icon to be slightly smaller. Based on observations on the reference impl.\n    // Could be handled by a negative margin on icons as well.\n    --jui-menu-item-padding: 0.75rem;\n\n    // CSS-only solution to conditionally add left margin to menu items without icon, if there is at least one menu item\n    // with icon, in the current menu. To have text in all menu items aligned. The extra margin is avoided if there is no\n    // menu item with icon. It relies on :has() css pseudo-class which is not supported in FF at the moment.\n    ${StyledMenuItem}:not(:has(${StyledMenuItemIcon})) {\n      padding-left: calc(\n        var(--jui-menu-item-padding) + var(--jui-menu-item-icon-width) +\n          var(--jui-menu-item-icon-spacing)\n      );\n    }\n  }\n  ${StyledMenuItemIcon} {\n    width: var(--jui-menu-item-icon-width);\n    margin-right: var(--jui-menu-item-icon-spacing);\n  }\n`;\n","import { css, styled } from \"@intellij-platform/core/styled\";\n\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nexport const StyledMenuItemIcon = styled.span`\n  display: inline-flex; // prevents unwanted increased height\n`;\n\nexport const StyledNestedArrow = styled.span`\n  display: inline-flex; // to make it not take more height than the icon\n  margin-right: -0.75rem;\n  margin-left: 0.75rem;\n`;\n\nconst highlightedStyle = css`\n  color: ${({ theme }) =>\n    theme.asCurrentForeground(\n      theme.color(\n        \"MenuItem.selectionForeground\" as UnknownThemeProp<\"MenuItem.selectionForeground\">\n      )\n    )};\n  background: ${({ theme }) =>\n    theme.color(\n      \"MenuItem.selectionBackground\" as UnknownThemeProp<\"MenuItem.selectionBackground\">\n    )};\n`;\nconst defaultStyle = css`\n  color: ${({ theme }) =>\n    theme.color(\n      \"MenuItem.foreground\" as UnknownThemeProp<\"MenuItem.foreground\">\n    )};\n  background: unset;\n`;\nconst disabledStyle = css`\n  color: ${({ theme }) =>\n    theme.color(\"MenuItem.disabledForeground\") + \"!important\"};\n  background: unset !important;\n`;\nexport const StyledMenuItem = styled.li<{\n  isDisabled: boolean;\n  isActive: boolean;\n}>`\n  position: relative; // for being able to position arrow icon absolutely\n  outline: none;\n  cursor: default;\n  white-space: nowrap;\n\n  // bg/fg style for different states. Order is based on how they should override each other\n  ${defaultStyle};\n  ${({ isActive }) => isActive && highlightedStyle};\n  ${({ isDisabled }) => isDisabled && disabledStyle};\n\n  padding-right: 1.25rem;\n  line-height: 1.3125rem; // to make the item have the right height\n  display: flex;\n  align-items: center;\n`;\n","import React, { useContext, useEffect, useRef } from \"react\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { AriaMenuOptions, useMenu } from \"@react-aria/menu\";\nimport { mergeProps } from \"@react-aria/utils\";\n\nimport {\n  MenuKeyboardDelegate,\n  useSubmenu as useSubmenuAria,\n} from \"./_useSubmenu\";\nimport { useSubmenuState } from \"./_useSubmenuState\";\nimport { MenuContext } from \"./Menu\";\nimport { StyledMenu } from \"./StyledMenu\";\nimport { renderMenuNodes } from \"./renderMenuNodes\";\n\nexport function useSubmenu<T>(\n  {\n    rootKey,\n    parentState,\n    keyboardDelegate,\n  }: { rootKey: React.Key; parentState: TreeState<T> } & Pick<\n    AriaMenuOptions<T>,\n    \"keyboardDelegate\"\n  >,\n  state: TreeState<T>,\n  ref: React.RefObject<HTMLElement>\n) {\n  const rootItem = state.collection.getItem(rootKey);\n  const {\n    submenuBehavior,\n    autoFocus = true,\n    onClose,\n    onAction,\n  } = useContext(MenuContext);\n  let { menuProps } = useMenu(\n    {\n      \"aria-label\": rootItem?.[\"aria-label\"] || rootItem?.textValue,\n      onAction,\n      onClose,\n      selectedKeys: state.selectionManager.selectedKeys,\n      keyboardDelegate:\n        keyboardDelegate ||\n        new MenuKeyboardDelegate(\n          rootKey,\n          state.collection,\n          state.disabledKeys,\n          ref\n        ),\n      autoFocus,\n    },\n    state,\n    ref\n  );\n  const { submenuProps } = useSubmenuAria({ rootKey }, parentState, ref);\n\n  const submenuBehaviorProps = {\n    onKeyDown: (e: React.KeyboardEvent) => {\n      if (e.key === \"Escape\") {\n        // Close the menu and submenu root node.\n        state.toggleKey(rootKey);\n        state.selectionManager.setFocusedKey(rootKey);\n        parentState.selectionManager.setFocused(true);\n        if (submenuBehavior !== \"default\") {\n          e.stopPropagation();\n        }\n        return;\n      }\n    },\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      // we need this hack until the nested menu is properly supported. That's because when the element is hovered\n      // it sets the focus key, which will move focus to that item.\n      // noinspection PointlessBooleanExpressionJS seems to be false positive. autoFocus can be \"first\" or \"last\"\n      if (autoFocus === true) {\n        ref.current?.focus();\n      }\n    });\n  }, []);\n\n  return {\n    submenuProps: mergeProps(menuProps, submenuProps, submenuBehaviorProps),\n  };\n}\n\nexport interface SubmenuProps<T> {\n  parentState: TreeState<T>;\n  rootKey: React.Key;\n}\n\nexport function Submenu<T>({ parentState, rootKey }: SubmenuProps<T>) {\n  const ref = useRef<HTMLUListElement>(null);\n  const state = useSubmenuState(parentState);\n  const rootItem = state.collection.getItem(rootKey);\n\n  const { submenuProps } = useSubmenu({ rootKey, parentState }, state, ref);\n\n  return (\n    <StyledMenu {...submenuProps} ref={ref}>\n      {renderMenuNodes(state, [...(rootItem?.childNodes || [])])}\n    </StyledMenu>\n  );\n}\n","import { Collection, Node } from \"@react-types/shared\";\nimport { TreeState } from \"@react-stately/tree\";\nimport React, { Key, RefObject } from \"react\";\nimport { useKeyboard } from \"@react-aria/interactions\";\nimport { ListKeyboardDelegate } from \"@react-aria/selection\";\n\nexport class MenuKeyboardDelegate<T> extends ListKeyboardDelegate<T> {\n  private keys: React.Key[];\n  constructor(\n    rootKey: Key | null,\n    private collection: Collection<Node<T>>,\n    disabledKeys: Set<React.Key>,\n    ref: React.RefObject<HTMLElement>,\n    collator?: Intl.Collator\n  ) {\n    super(collection, disabledKeys, ref, collator);\n    this.keys = [...collection.getKeys()]\n      .map((key) => collection.getItem(key))\n      .flatMap((item) => {\n        if (item && item.parentKey == rootKey) {\n          if (item.type === \"item\") {\n            return [item.key];\n          } else if (item.type === \"section\") {\n            return [...item.childNodes].map(({ key }) => key);\n          }\n        }\n        return [];\n      });\n  }\n\n  getFirstKey(): React.Key {\n    return this.keys[0];\n  }\n  getLastKey(): React.Key {\n    return this.keys.slice(-1)[0];\n  }\n\n  getKeyBelow(key: React.Key): React.Key {\n    const keyBelow = super.getKeyBelow(key);\n    // @ts-expect-error: getKeyBelow should be allowed to return null, but typing is currently inaccurate in react-aria\n    return this.keys.includes(keyBelow) ? keyBelow : null;\n  }\n  getKeyAbove(key: React.Key): React.Key {\n    const keyAbove = super.getKeyAbove(key);\n    // @ts-expect-error: getKeyBelow should be allowed to return null, but typing is currently inaccurate in react-aria\n    return this.keys.includes(keyAbove) ? keyAbove : null;\n  }\n}\n\n/**\n * Behavior accessibility of submenus:\n * - Closing submenu on ArrowLeft key press.\n *   Note that it can't be implemented in useMenuItem, because the focus might be on no the submenu itself and not any\n *   of its items\n * @param rootKey: Key of the root node, the submenu is created from its children\n * @param state\n * @param ref\n */\nexport function useSubmenu<T>(\n  { rootKey }: { rootKey: Key },\n  state: TreeState<T>,\n  ref: RefObject<HTMLElement>\n) {\n  const { keyboardProps: submenuProps } = useKeyboard({\n    onKeyDown: (e) => {\n      // Keyboard events bubble through portals. Don't handle keyboard events\n      // for elements outside the collection (e.g. menus).\n      if (!ref.current?.contains(e.target as Element)) {\n        e.continuePropagation();\n        return;\n      }\n      const root = state.collection.getItem(rootKey);\n      if (e.key === \"ArrowLeft\" && root && state.expandedKeys.has(root.key)) {\n        state.toggleKey(root.key);\n        state.selectionManager.setFocused(true);\n        return;\n      }\n      e.continuePropagation();\n    },\n  });\n\n  return {\n    submenuProps,\n  };\n}\n","import { TreeState } from \"@react-stately/tree\";\nimport { Key, useRef, useState } from \"react\";\nimport {\n  MultipleSelectionState,\n  SelectionManager,\n} from \"@react-stately/selection\";\n\n/**\n * Creates a TreeState corresponding to the submenu, from the state of a parent (sub)menu.\n * The collection and everything is the same, and the only difference from the parent state is selection manager\n * having a separate focused state to keep the focused state of each menu container separately, as the submenus\n * are usually rendered in separate overlays.\n */\nexport function useSubmenuState<T>(parentState: TreeState<T>) {\n  // We want synchronous updates to `isFocused` and `focusedKey` after their setters are called.\n  // But we also need to trigger a re-render. So, we have both a ref (sync) and state (async).\n  const [, setFocused] = useState(false);\n  const [, setFocusedKey] = useState<Key | null>(null);\n  const isFocusedRef = useRef(false);\n  const focusedKeyRef = useRef<Key | null>(null);\n\n  const state: MultipleSelectionState = {\n    // @ts-expect-error state is private\n    ...parentState.selectionManager.state,\n    setFocused: (isFocused: boolean) => {\n      isFocusedRef.current = isFocused;\n      setFocused(isFocused);\n    },\n    setFocusedKey(key: Key) {\n      focusedKeyRef.current = key;\n      setFocusedKey(key);\n    },\n  };\n  Object.defineProperties(state, {\n    isFocused: {\n      get() {\n        return isFocusedRef.current;\n      },\n    },\n    focusedKey: {\n      get() {\n        return focusedKeyRef.current!;\n      },\n    },\n  });\n\n  return {\n    ...parentState,\n    selectionManager: new SelectionManager(parentState.collection, state),\n  };\n}\n","import React from \"react\";\nimport { useMenuSection } from \"@react-aria/menu\";\nimport { Node } from \"@react-types/shared\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { styled } from \"@intellij-platform/core/styled\";\n\nimport { renderMenuNodes } from \"./renderMenuNodes\";\n\nexport interface MenuSectionProps<T> {\n  item: Node<T>;\n  state: TreeState<T>;\n  filter?: (node: Node<T>) => boolean;\n}\n\nconst StyledMenuHeading = styled.div`\n  cursor: default;\n  padding: 2px 0 2px 12px;\n  font-weight: bold;\n  font-size: 0.8125rem;\n  color: ${({ theme }) =>\n    theme.color(\n      \"MenuItem.disabledForeground\"\n    )}; // TODO: make sure about it. It's probably not correct color\n`;\n\nconst StyledMenuSectionItemsContainer = styled.ul`\n  padding: 0;\n  margin: 0;\n`;\n\nexport const MenuSection = <T extends unknown>({\n  item,\n  state,\n  filter = () => true,\n}: MenuSectionProps<T>): React.ReactElement => {\n  let { itemProps, headingProps, groupProps } = useMenuSection({\n    heading: item.rendered,\n    \"aria-label\": item[\"aria-label\"],\n  });\n\n  const nodes = [...item.childNodes].filter(filter);\n  if (nodes.filter(({ type }) => type === \"item\").length === 0) {\n    return <></>;\n  }\n  return (\n    <>\n      <li {...itemProps}>\n        {item.rendered && (\n          <StyledMenuHeading {...headingProps}>\n            {item.rendered}\n          </StyledMenuHeading>\n        )}\n        <StyledMenuSectionItemsContainer {...groupProps}>\n          {renderMenuNodes(state, nodes)}\n        </StyledMenuSectionItemsContainer>\n      </li>\n    </>\n  );\n};\n","import React from \"react\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { Node } from \"@react-types/shared\";\nimport { ListDivider } from \"@intellij-platform/core/List/ListDivider\"; // private import\n\nimport { MenuItem } from \"./MenuItem\";\nimport { MenuSection } from \"./MenuSection\";\n\nexport function renderMenuNodes<T>(\n  state: TreeState<T>,\n  nodes: Node<T>[],\n  filter: (node: Node<T>) => boolean = () => true\n) {\n  return nodes.filter(filter).map((node) => {\n    switch (node.type) {\n      case \"item\":\n        return <MenuItem key={node.key} item={node} state={state} />;\n      case \"section\":\n        return (\n          <>\n            {node.props.hasDivider && (\n              <ListDivider key={node.key + \"-divider\"} />\n            )}\n            <MenuSection\n              key={node.key}\n              item={node}\n              state={state}\n              filter={filter}\n            />\n          </>\n        );\n      case \"divider\":\n        return <ListDivider key={node.key} />;\n    }\n  });\n}\n","import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { useEventCallback } from \"@intellij-platform/core/utils/useEventCallback\";\n\nexport interface MnemonicProps {\n  children: React.ReactNode;\n  /**\n   * Character to be used as {@link https://jetbrains.design/intellij/principles/mnemonics/ mnemonic}.\n   */\n  mnemonic: string;\n  /**\n   * Called when mnemonic key is pressed with the activator key\n   */\n  onTriggered?: () => void;\n\n  /**\n   * Whether the mnemonic is disabled. Useful when setting mnemonic on disable-able components, to just pass\n   * isDisabled prop down to MnemonicTrigger\n   */\n  isDisabled?: boolean;\n}\n\nconst MnemonicContext = createContext<{\n  character: string | null;\n  rendered: () => void;\n  /**\n   * Called when mnemonic is found in the text of the trigger component and rendered underlined, so the user\n   * can have a chance to know how to trigger the component's action via mnemonic.\n   */\n  active: boolean;\n}>({ character: null, active: false, rendered: () => {} });\n\nexport const MnemonicTrigger = ({\n  children,\n  mnemonic,\n  isDisabled,\n  onTriggered: onTriggeredProp = () => {},\n}: MnemonicProps): JSX.Element => {\n  const ref = useRef<HTMLElement>(null);\n  const onTriggered = useEventCallback(onTriggeredProp);\n  const [active, setActive] = useState(false);\n  const keydownListener = useEventCallback((e: KeyboardEvent) => {\n    if (isDisabled) {\n      return;\n    }\n    if (active && !e.repeat) {\n      const character = e.code.match(/Key([A-Z])/)?.[1];\n      if (character && character.toLowerCase() === mnemonic.toLowerCase()) {\n        onTriggered();\n      }\n    }\n    if (e.key === \"Alt\" && ref.current && isAccessible(ref.current)) {\n      setActive(true);\n    }\n  });\n\n  useEffect(() => {\n    // calling addEventListener with already registered listener is no-op.\n    document.addEventListener(\"keydown\", keydownListener);\n    document.addEventListener(\"keyup\", keyupListener);\n    window.addEventListener(\"blur\", onBlur);\n    function onBlur() {\n      setActive(false);\n    }\n    function keyupListener(e: KeyboardEvent) {\n      if (e.key === \"Alt\") {\n        setActive(false);\n      }\n    }\n    return () => {\n      document.removeEventListener(\"keydown\", keydownListener);\n      document.removeEventListener(\"keyup\", keyupListener);\n      window.removeEventListener(\"blur\", onBlur);\n    };\n  }, []);\n\n  const renderedMnemonicRef = useRef<string>(\"\");\n  useEffect(() => {\n    const timerId = setTimeout(() => {\n      if (renderedMnemonicRef.current !== mnemonic) {\n        console.warn(\n          `Mnemonic ${mnemonic} was set but not rendered to the user. \nMake sure the specified character is rendered directly in MnemonicTrigger, or wrapped by MnemonicText inside MnemonicTrigger children. \nElement:`,\n          ref.current?.parentElement\n        );\n      }\n    });\n    return () => {\n      clearTimeout(timerId);\n    };\n  }, [mnemonic]);\n  return (\n    <MnemonicContext.Provider\n      value={{\n        character: mnemonic,\n        active,\n        rendered: () => {\n          renderedMnemonicRef.current = mnemonic;\n        },\n      }}\n    >\n      <span hidden ref={ref} />\n      {typeof children === \"string\" ? (\n        <MnemonicText>{children}</MnemonicText>\n      ) : (\n        children\n      )}\n    </MnemonicContext.Provider>\n  );\n};\n\n/**\n * Checks if a\n * See more in ./design-decisions.md\n */\nfunction isAccessible(element: Element): boolean {\n  return (\n    !element.closest(\"[aria-hidden]\") &&\n    element.parentElement !== null &&\n    isVisible(element.parentElement)\n  );\n}\nfunction isVisible(e: HTMLElement) {\n  return !!(e.offsetWidth || e.offsetHeight || e.getClientRects().length);\n}\n/**\n * Used inside MnemonicTrigger children, when the direct child can't be a string.\n * @example\n * ```tsx\n * <MnemonicTrigger mnemonic=\"D\">\n *    <>\n *      <MnemonicText>Disconnect</MnemonicText>\n *    </>\n * </MnemonicTrigger>\n * ```\n */\nexport function MnemonicText({ children }: { children: string }) {\n  const { character, active, rendered } = useContext(MnemonicContext);\n  if (character) {\n    const index = children.toLowerCase().indexOf(character.toLowerCase());\n    const found = index > -1;\n    if (found) {\n      rendered();\n    }\n    if (found && active) {\n      return (\n        <>\n          {children.slice(0, index)}\n          <u>{children.slice(index, index + 1)}</u>\n          {children.slice(index + 1)}\n        </>\n      );\n    }\n  }\n  return <>{children}</>;\n}\n","import { useEventCallback } from \"@intellij-platform/core/utils/useEventCallback\";\nimport React, { useEffect } from \"react\";\n\n/**\n * A workaround for an issue in measuring overlay size, caused by a limitation/bug in how React 17 runs effects when\n * children suspend rendering: https://github.com/facebook/react/issues/21510\n *\n * Here is a simplified demonstration of the issue:\n * Expected behavior (React 18): https://codesandbox.io/s/parent-effects-suspense-v18-38m8p7?file=/src/App.tsx\n * Broken behavior (React 17): https://codesandbox.io/s/parent-effects-suspense-v17-h39g4g\n *\n * The overlay content size measuring runs in an effect, and that effect won't run when the content is rendered after\n * suspense.\n */\nexport function UNSAFE_React17SuspenseFix({\n  measureContentSize,\n  children,\n}: {\n  measureContentSize: () => void;\n  children: React.ReactNode;\n}) {\n  if (React.version.startsWith(\"17\")) {\n    return (\n      <React.Suspense\n        fallback={\n          <NullSuspenseFallback afterUnsuspended={measureContentSize} />\n        }\n      >\n        {children}\n      </React.Suspense>\n    );\n  }\n  return <>{children}</>;\n}\n\nfunction NullSuspenseFallback({\n  afterSuspended: afterSuspendedProp = () => {},\n  afterUnsuspended: afterUnsuspendedProp = () => {},\n}: {\n  afterUnsuspended?: () => void;\n  afterSuspended?: () => void;\n}) {\n  const afterSuspended = useEventCallback(afterSuspendedProp);\n  const afterUnsuspended = useEventCallback(afterUnsuspendedProp);\n  useEffect(() => {\n    afterSuspended?.();\n    return () => {\n      afterUnsuspended?.();\n    };\n  }, []);\n  return null;\n}\n","import React, { FocusEventHandler, useContext, useRef } from \"react\";\nimport { useOverlayTriggerState } from \"@react-stately/overlays\";\nimport { useModalOverlay, usePreventScroll } from \"@react-aria/overlays\";\nimport { focusSafely, FocusScope } from \"@react-aria/focus\";\nimport { useDialog } from \"@react-aria/dialog\";\nimport { AriaDialogProps } from \"@react-types/dialog\"; // temporary phantom dependency\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { WINDOW_SHADOW } from \"@intellij-platform/core/style-constants\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport {\n  OverlayInteractionHandler,\n  OverlayResizeHandles,\n  ResizableMovableOverlayOptions,\n  useResizableMovableOverlay,\n} from \"@intellij-platform/core/Overlay\";\nimport { WindowContext } from \"@intellij-platform/core/ModalWindow/WindowContext\";\nimport { UNSAFE_React17SuspenseFix } from \"@intellij-platform/core/Overlay/UNSAFE_React17SuspenseFix\";\n\nexport interface ModalWindowProps\n  extends AriaDialogProps,\n    ResizableMovableOverlayOptions {\n  children: React.ReactNode;\n  className?: string;\n  onClose?: () => void;\n}\n\nconst StyledWindowUnderlay = styled.div`\n  position: fixed;\n  z-index: 1000; // FIXME: z-index should not be hard-coded like this\n  inset: 0;\n`;\n\nexport const StyledWindowContainer = styled.div`\n  position: fixed;\n  // not checked if there should be a better substitute for * in the following colors. Maybe \"Component\"?\n  background-color: ${({ theme }) => theme.color(\"*.background\")};\n  color: ${({ theme }) => theme.color(\"*.foreground\")};\n  border-radius: 8px;\n  ${WINDOW_SHADOW}; // FIXME: OS-dependant style?\n  outline: 1px solid #555; // FIXME\n`;\n\n/**\n * only needed for setting overflow to hidden to make sure nothing will overflow a window under any circumstances.\n * The reason we can't set that overflow: \"hidden\" on the StyledWindowContainer itself is that we want resize handles\n * to overflow without bing clipped.\n */\nconst StyledWindowInnerContainer = styled.div`\n  height: inherit;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const DEFAULT_WINDOW_MIN_WIDTH = 50;\nexport const DEFAULT_WINDOW_MIN_HEIGHT = 24;\n\nexport const WindowControllerContext = React.createContext<\n  Partial<Pick<ModalWindowProps, \"onClose\">>\n>({});\n\n/**\n * A movable/resizable modal window. The window header which holds the title, can be used to drag the window around.\n * In the reference impl, modal windows are os-native, and contain os-level buttons for minimize/close/maximise, which\n * are not relevant here since they wouldn't be os-native windows. A close button is still relevant (and kind of\n * necessary) and will be added in next iterations.\n *\n * The content container doesn't come with any padding. Other related components should be used for common layouts in\n * modal windows.\n * Example use cases: Window for git operations such as push, update, revert, new branch, etc.\n *\n * ![img.png](https://user-images.githubusercontent.com/3150694/181095858-968c5c66-2ae7-4e40-84e3-e6df43cd4aa4.png)\n *\n * NOTE: The part regarding rendering OverlayInteractionHandler, and rendering as a dialog with a focus scope, in an\n * overlay container could be extracted into a component which is then used to create custom resizable/movable overlay\n * dialogs, like \"Branches\", or \"Search Everywhere\".\n *\n * TODO: show close button (maybe os-aware styles?)\n *\n */\nexport const ModalWindow = ({\n  interactions = \"all\",\n  minWidth = DEFAULT_WINDOW_MIN_WIDTH,\n  minHeight = DEFAULT_WINDOW_MIN_HEIGHT,\n  className,\n  ...props\n}: ModalWindowProps): React.ReactElement => {\n  const { children } = props;\n  const propsContext = useContext(WindowControllerContext);\n  const onClose = () => {\n    propsContext.onClose?.();\n    props.onClose?.();\n  };\n\n  const ref = React.useRef<HTMLDivElement>(null);\n  const { modalProps, underlayProps } = useModalOverlay(\n    {\n      isDismissable: false,\n      isKeyboardDismissDisabled: false,\n    },\n    // useModalOverlay doesn't really need the full `OverlayTriggerState` interface.\n    // It only requires `isOpen` and `close`.\n    // However, it's currently typed like this, so useOverlayTriggerState is used,\n    // just to comply with the required type, and in the unlikely case where a future minor version starts to use\n    // other properties from `OverlayTriggerState`\n    useOverlayTriggerState({\n      isOpen: true,\n      onOpenChange: (isOpen) => {\n        if (!isOpen) {\n          onClose();\n        }\n      },\n    }),\n    ref\n  );\n  usePreventScroll();\n\n  const { dialogProps, titleProps } = useDialog(props, ref);\n\n  const {\n    bounds: style,\n    overlayInteractionHandlerProps,\n    UNSAFE_measureContentSize,\n  } = useResizableMovableOverlay(ref, { ...props, minHeight, minWidth });\n\n  const { focusContainmentFixProps } = useFocusContainmentFix();\n\n  return (\n    <StyledWindowUnderlay {...underlayProps} className={className}>\n      <OverlayInteractionHandler {...overlayInteractionHandlerProps}>\n        <FocusScope contain restoreFocus autoFocus>\n          <StyledWindowContainer\n            {...mergeProps(dialogProps, modalProps, focusContainmentFixProps, {\n              style,\n            })}\n            ref={ref}\n          >\n            <StyledWindowInnerContainer>\n              <WindowContext.Provider\n                value={{\n                  isActive: true, // because it's modal. WindowContext would be used for non-modal windows too, in future\n                  titleProps,\n                  movable: interactions !== \"none\",\n                }}\n              >\n                <UNSAFE_React17SuspenseFix\n                  measureContentSize={UNSAFE_measureContentSize}\n                >\n                  {children}\n                </UNSAFE_React17SuspenseFix>\n              </WindowContext.Provider>\n            </StyledWindowInnerContainer>\n            {interactions === \"all\" && <OverlayResizeHandles />}\n          </StyledWindowContainer>\n        </FocusScope>\n      </OverlayInteractionHandler>\n    </StyledWindowUnderlay>\n  );\n};\n\n/**\n * The way FocusScope is implemented at the moment, it's possible for another focus scope to steal the focus,\n * right after the modal window is opened. The issue is not tracked down to the root cause. But with this hook,\n * we make sure there is no way for focus to go out of the modal window, when it's mounted.\n */\nfunction useFocusContainmentFix<T extends HTMLElement>() {\n  const lastFocusedElementRef = useRef<HTMLElement | null>(null);\n  const onFocus: FocusEventHandler<T> = (e) => {\n    lastFocusedElementRef.current = e.target;\n  };\n  const onBlur: FocusEventHandler = (e) => {\n    const probablyFocusedElement = e.relatedTarget;\n    if (\n      !probablyFocusedElement ||\n      (probablyFocusedElement instanceof Element &&\n        !e.currentTarget.contains(probablyFocusedElement))\n    ) {\n      const elementToFocus = lastFocusedElementRef.current;\n      if (elementToFocus) {\n        focusSafely(elementToFocus);\n      }\n    }\n  };\n  return {\n    focusContainmentFixProps: {\n      onFocus,\n      onBlur,\n    },\n  };\n}\n","import React from \"react\";\nimport { DOMAttributes } from \"@react-types/shared\";\n\nexport const WindowContext = React.createContext<{\n  isActive: boolean;\n  movable: boolean;\n  titleProps: DOMAttributes;\n}>({ isActive: false, movable: true, titleProps: {} });\n","import { styled } from \"@intellij-platform/core/styled\";\nimport React from \"react\";\nimport { ButtonGroup } from \"@intellij-platform/core/ButtonGroup\";\n\nconst StyledFooter = styled.div<{ hasBorder?: boolean }>`\n  padding: 0.625rem 0.875rem;\n  display: flex;\n  gap: 0.5rem;\n  justify-content: space-between;\n  align-items: center;\n  border-top: 1px solid transparent;\n  border-color: ${({ hasBorder, theme }) =>\n    hasBorder && theme.commonColors.contrastBorder};\n`;\nconst StyledFooterSide = styled.div`\n  display: flex;\n  gap: 0.75rem;\n`;\n\n/**\n * Implements the common layout for window footer, to be used in {@link ModalWindowProps#footer}.\n * Footer has a left and a right side. There is a standard gap between the children of each side.\n */\nexport function WindowFooter({\n  left,\n  right,\n  hasBorder,\n}: {\n  /**\n   * The content to go to the left side the footer. A help icon button is very common on the left side.\n   */\n  left?: React.ReactNode;\n  /**\n   * The content to go to the right side the footer.\n   * {@link Button}s are usually used inside the right content.\n   * A {@link ButtonGroup} is rendered around the content to allow for keyboard navigation with arrow keys.\n   */\n  right?: React.ReactNode;\n  /**\n   * Whether to show top border for footer or not\n   */\n  hasBorder?: boolean;\n}) {\n  return (\n    <StyledFooter hasBorder={hasBorder}>\n      <StyledFooterSide>{left}</StyledFooterSide>\n      <StyledFooterSide>\n        <ButtonGroup>{right}</ButtonGroup>\n      </StyledFooterSide>\n    </StyledFooter>\n  );\n}\n","import React, { HTMLAttributes, useContext } from \"react\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { OverlayMoveHandle } from \"@intellij-platform/core/Overlay\";\n\nimport { WindowContext } from \"./WindowContext\";\nimport { mergeProps } from \"@react-aria/utils\";\n\nconst StyledWindowTitle = styled.h1`\n  margin: 0;\n  text-align: center;\n  font-size: 13px; // not rem! intentional\n  line-height: 24px; // Double check\n  cursor: default;\n  user-select: none;\n  padding: 0 8px;\n`;\n\n/**\n * Implements appearance of Window header, and also acts as a handle for moving the window.\n * Expected to be used with {@link WindowLayout}:\n *\n * @example\n * ```tsx\n * <ModalWindow>\n *    <WindowLayout header={<WindowHeader>header</WindowHeader>} />\n * </ModalWindow>\n * ```\n */\nexport const WindowHeader = ({ children }: { children?: React.ReactNode }) => {\n  const { movable, titleProps } = useContext(WindowContext);\n  const renderTitle = (otherProps: HTMLAttributes<HTMLElement> = {}) => (\n    <StyledWindowTitle {...mergeProps(titleProps, otherProps)}>\n      {children || <>&nbsp;</>}\n    </StyledWindowTitle>\n  );\n  return movable ? (\n    <OverlayMoveHandle>\n      {({ moveHandleProps }) => renderTitle(moveHandleProps)}\n    </OverlayMoveHandle>\n  ) : (\n    renderTitle()\n  );\n};\n","import { styled } from \"@intellij-platform/core/styled\";\nimport React from \"react\";\nimport { WindowHeader } from \"./WindowHeader\";\nimport { WindowFooter } from \"@intellij-platform/core/ModalWindow/WindowFooter\";\n\nconst StyledWindowFooter = styled.div`\n  min-height: min-content;\n`;\n\nconst StyledWindowContentWrapper = styled.div`\n  overflow: auto;\n  flex: 1;\n`;\n\n/**\n * Window content layout, supporting fixed `header` and `footer` sections, and a scrollable `content` area.\n */\nexport function WindowLayout({\n  header,\n  footer,\n  content,\n}: {\n  /**\n   * Fixed position header of the window at the top. Use {@link WindowLayout.Header} for the default window header,\n   * which also acts as a move handle for the window. If a string is passed, it will be wrapped by\n   * {@link WindowLayout.Header} automatically.\n   */\n  header: React.ReactNode;\n  /**\n   * Scrollable content of the window.\n   */\n  content: React.ReactNode;\n  /**\n   * An area at the bottom of the window which is not scrolled as opposed to `content`. Use {@link WindowLayout.Footer}\n   * for rendering the common layout of a window footer.\n   */\n  footer?: React.ReactNode;\n}) {\n  return (\n    <>\n      {header &&\n        (typeof header === \"string\" ? (\n          <WindowHeader>{header}</WindowHeader>\n        ) : (\n          header\n        ))}\n      <StyledWindowContentWrapper>{content}</StyledWindowContentWrapper>\n      {footer && <StyledWindowFooter>{footer}</StyledWindowFooter>}\n    </>\n  );\n}\n\n// Just for improved discoverability. Might as well export WindowFooter and WindowHeader instead.\nWindowLayout.Footer = WindowFooter;\nWindowLayout.Header = WindowHeader;\n","import React, {\n  ReactElement,\n  ReactNode,\n  useContext,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport {\n  ModalWindow,\n  ModalWindowProps,\n  WindowControllerContext,\n} from \"./ModalWindow\";\n\nexport interface WindowManagerAPI {\n  /**\n   * Shows a modal window within the stack of windows managed by {@link WindowManager}.\n   * The opened windows will be closed when `onClose` interactions happen.\n   * Returns a Promise which is resolved when the modal window is closed.\n   *\n   * Modal window element, or a function that returns the modal window element can\n   * be passed.\n   * If a function is passed, it will receive a close function in its object argument,\n   * which can be used to resolve the returned promise with.\n   *\n   * @example\n   *\n   * ```\n   * const windowManager = useWindowManager();\n   *\n   * const showWindow = () => {\n   *   windowManager\n   *     .open<boolean>(({ close }) => (\n   *       <ModalWindow>\n   *         <WindowLayout\n   *           header=\"...\"\n   *           content={<>...</>}\n   *           footer={\n   *             <WindowLayout.Footer\n   *               right={\n   *                 <>\n   *                   <Button onPress={close}>Cancel</Button>\n   *                   <Button onPress={() => close(true)}>Ok</Button>\n   *                 </>\n   *               }\n   *             />\n   *           }\n   *         />\n   *       </ModalWindow>\n   *     ))\n   *     .then((confirmed) => alert(`confirmed: ${confirmed ?? false}`));\n   * };\n   * ```\n   */\n  open<T>(\n    props:\n      | React.ReactElement<ModalWindowProps, typeof ModalWindow>\n      | ((args: {\n          close: (result?: T) => void;\n        }) => React.ReactElement<ModalWindowProps, typeof ModalWindow>)\n  ): Promise<T | undefined>;\n}\n\nconst NotImplementedFn = () => {\n  throw new Error(\n    \"WindowManager not found. Wrap your application with WindowManager to be able to open windows imperatively\"\n  );\n};\n\nconst WindowsContext = React.createContext<WindowManagerAPI>({\n  open: NotImplementedFn,\n});\n\n/**\n * Returns imperative API for showing windows.\n *\n */\nexport const useWindowManager = (): WindowManagerAPI =>\n  useContext(WindowsContext);\n\ntype WindowElement = ReactElement<ModalWindowProps, typeof ModalWindow>;\n\nexport interface WindowManagerProps {\n  children?: ReactNode;\n}\n\n/**\n * Enables imperative API (via {@link useWindowManager}) for opening windows.\n * It renders windows in a portal appended to `body`, unless `disablePortal` is `true`.\n *\n */\nexport const WindowManager: React.FC<WindowManagerProps> = ({ children }) => {\n  const [windows, setWindows] = useState<Array<WindowElement>>([]);\n  const newKeyRef = useRef<number>(0);\n\n  const api = useMemo<WindowManagerAPI>(() => {\n    return {\n      open: function <T>(content: Parameters<WindowManagerAPI[\"open\"]>[0]) {\n        return new Promise<T | undefined>((resolve) => {\n          newKeyRef.current++;\n          const close = (result?: T) => {\n            setWindows((currentWindows) =>\n              currentWindows.filter((aWindow) => aWindow !== window)\n            );\n            // Make sure (?) to resolve the promise after the dialog is closed,\n            // for the focus to be restored to the previous element before the\n            // potential further actions take place.\n            requestAnimationFrame(() => {\n              resolve(result);\n            });\n          };\n          const window = (\n            <WindowControllerContext.Provider\n              value={{\n                onClose: () => {\n                  close();\n                },\n              }}\n              key={newKeyRef.current}\n            >\n              {typeof content === \"function\"\n                ? // @ts-expect-error close signature is not correctly inferred\n                  content({ close })\n                : content}\n            </WindowControllerContext.Provider>\n          );\n          setWindows((currentWindows) => currentWindows.concat(window));\n        });\n      },\n    };\n  }, []);\n\n  return (\n    <WindowsContext.Provider value={api}>\n      {children}\n      {windows}\n    </WindowsContext.Provider>\n  );\n};\n","import React, { useContext, useRef } from \"react\";\nimport { Overlay as AriaOverlay, OverlayProps } from \"@react-aria/overlays\";\n\nconst ParentOverlayContext = React.createContext<HTMLElement | null>(null);\n\n/**\n * A (drop-in replacement) wrapper around Overlay, which makes sure overlays created in nested\n * react components will be ported to the same top level container. This is especially useful to detect\n * \"outside clicks\" when overlays are nested. The most common example would be nested menu in popup.\n *\n */\nexport function Overlay({\n  children,\n  OverlayComponent = AriaOverlay,\n}: {\n  children: React.ReactNode;\n  OverlayComponent?: React.ComponentType<OverlayProps>;\n}) {\n  const root = useContext(ParentOverlayContext);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  if (root) {\n    return (\n      <OverlayComponent portalContainer={root}>{children}</OverlayComponent>\n    );\n  }\n  return (\n    <ParentOverlayContext.Provider value={containerRef.current}>\n      <OverlayComponent>\n        <div ref={containerRef} data-overlay-root=\"\">\n          {children}\n        </div>\n      </OverlayComponent>\n    </ParentOverlayContext.Provider>\n  );\n}\n\n/**\n * Returns true, if element1 and element2 are in nested overlays. \"Nested\" being in terms of React component tree.\n * Useful for detecting \"outside click\" when overlay components are nested in each other.\n */\nexport function areInNestedOverlays(\n  element1: Element | null,\n  element2: Element | null\n) {\n  const overlayRoot1 = element1?.closest(\"[data-overlay-root]\");\n  const overlayRoot2 = element2?.closest(\"[data-overlay-root]\");\n  return Boolean(overlayRoot1) && overlayRoot1 === overlayRoot2;\n}\n","import React, { useContext } from \"react\";\n\nexport type Bounds = {\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n};\n\n/**\n * TODO(docs): add a few words about this abstraction and it's use.\n */\nexport type OverlayInteractionHandlerProps = {\n  /**\n   * Signals start of a UI interaction like resize or move, in which overlay bounds change.\n   */\n  startInteraction: (type: \"move\" | \"resize\") => Bounds;\n  /**\n   * Used to update bounds state during a UI interaction.\n   */\n  updateBounds: (bounds: Bounds) => void;\n  /**\n   * Signals end of a UI interaction.\n   */\n  finishInteraction: () => void;\n\n  minWidth?: number;\n  minHeight?: number;\n};\n\nconst OverlayInteractionHandlerContext =\n  React.createContext<OverlayInteractionHandlerProps | null>(null);\n\n/**\n * Provides the context used by components like {@link OverlayMoveHandle} and {@link OverlayResizeHandles} that provide\n * user interactions that change the boundary of the overlay they are rendered in.\n * Use {@link useResizableMovableOverlay} which implements an efficient state management for overlay bounds and returns\n * props to be passed to `OverlayInteractionHandler`:\n *\n * @example\n *\n * const {\n *    bounds, // Bounds to be applied to the overlay element.\n *    overlayInteractionHandlerProps,\n *  } = useResizableMovableOverlay(props);\n *\n * return (\n *   <OverlayInteractionHandler {...overlayInteractionHandlerProps}>\n *     <div style={bounds}>...</div>\n *   </OverlayInteractionHandler>\n * );\n *\n * @see useResizableMovableOverlay\n */\nexport const OverlayInteractionHandler = ({\n  children,\n  ...props\n}: OverlayInteractionHandlerProps & { children: React.ReactNode }) => {\n  return (\n    <OverlayInteractionHandlerContext.Provider value={props}>\n      {children}\n    </OverlayInteractionHandlerContext.Provider>\n  );\n};\n\nexport const useOverlayInteractionHandler = () =>\n  useContext(OverlayInteractionHandlerContext);\n","import { useMove, UseMoveOptions } from \"../utils/interaction-utils/useMove\";\nimport { useOverlayInteractionHandler } from \"./OverlayInteractionHandler\";\nimport React from \"react\";\n\nexport type UseOverlayMoveHandleOptions = Omit<\n  UseMoveOptions<unknown>,\n  \"onMoveStart\" | \"onMove\" | \"onMoveEnd\"\n>;\n/**\n * Used for making a dom element a move handle for the overlay it's being rendered in.\n * It uses the context provided by {@link OverlayInteractionHandler}, and returns props to be applied on a dom element to\n * make it a move handle for the overlay it's being rendered in.\n *\n * @see OverlayMoveHandle\n */\nexport function useOverlayMoveHandle(options?: UseOverlayMoveHandleOptions) {\n  const interactionHandler = useOverlayInteractionHandler();\n  if (!interactionHandler) {\n    return { moveHandleProps: {} };\n  }\n  const { finishInteraction, startInteraction, updateBounds } =\n    interactionHandler;\n\n  const moveProps = useMove({\n    ...options,\n    onMoveStart: () => {\n      return startInteraction(\"move\");\n    },\n    onMove: ({ startState, movement }) => {\n      updateBounds({\n        ...startState,\n        top: startState.top + movement.y,\n        left: startState.left + movement.x,\n      });\n    },\n    onMoveEnd: () => {\n      finishInteraction();\n    },\n  });\n  return { moveHandleProps: moveProps || {} };\n}\n\n/**\n * Used for making a dom element a move handle for the overlay it's being rendered in.\n * It uses the context provided by {@link OverlayInteractionHandler}. A render function is expected as `children`. It's\n * passed the event handlers that need to be applied on a dom element to make it a move handle for the overlay it's\n * being rendered in.\n */\nexport const OverlayMoveHandle = ({\n  children,\n  ...props\n}: {\n  children: (\n    props: ReturnType<typeof useOverlayMoveHandle>\n  ) => React.ReactElement;\n} & UseOverlayMoveHandleOptions) => {\n  return children(useOverlayMoveHandle(props));\n};\n","import React, { useRef } from \"react\";\nimport {\n  BottomResizer,\n  LeftResizer,\n  RightResizer,\n  TopResizer,\n} from \"../Resizer\";\nimport {\n  HorizontalResizerProps,\n  VerticalResizerProps,\n} from \"../Resizer/ResizerProps\";\nimport {\n  Bounds,\n  useOverlayInteractionHandler,\n} from \"./OverlayInteractionHandler\";\n\ntype OverlayResizeHandlesProps = {\n  minWidth?: number;\n  minHeight?: number;\n};\n\n/**\n * Renders invisible resize handles at the edges of the overlay it's rendered in. It uses the context provided by\n * {@link OverlayInteractionHandler} to resize the overlay when the handles are used.\n */\nexport function OverlayResizeHandles(props: OverlayResizeHandlesProps) {\n  const overlayResizer = useOverlayResizer(props);\n  return (\n    overlayResizer && (\n      <>\n        <RightResizer {...overlayResizer.getResizerProps(\"right\")} />\n        <LeftResizer {...overlayResizer.getResizerProps(\"left\")} />\n        <TopResizer {...overlayResizer.getResizerProps(\"top\")} />\n        <BottomResizer {...overlayResizer.getResizerProps(\"bottom\")} />\n      </>\n    )\n  );\n}\n\n/**\n * overlay resizing logic and state. When resizing is in progress, the source of truth is a local state, for performance\n * reasons. When the resize is done (e.g. by mouse being released), `onBoundsChange` is called with the new bounds.\n */\nfunction useOverlayResizer(props: OverlayResizeHandlesProps = {}) {\n  const initialBoundsRef = useRef<Bounds>({\n    top: 0,\n    height: 0,\n    width: 0,\n    left: 0,\n  });\n  const interactionHandler = useOverlayInteractionHandler();\n  const {\n    minWidth = interactionHandler?.minWidth ?? 1,\n    minHeight = interactionHandler?.minHeight ?? 1,\n  } = props;\n  if (!interactionHandler) {\n    return null;\n  }\n  const { finishInteraction, startInteraction, updateBounds } =\n    interactionHandler;\n\n  const onResize = {\n    right: (size: number) =>\n      updateBounds({\n        ...initialBoundsRef.current,\n        width: Math.max(minWidth, initialBoundsRef.current.width + size),\n      }),\n    bottom: (size: number) =>\n      updateBounds({\n        ...initialBoundsRef.current,\n        height: Math.max(minHeight, initialBoundsRef.current.height + size),\n      }),\n    left: (size: number) => {\n      const newWidth = Math.max(\n        minWidth,\n        initialBoundsRef.current.width + size\n      );\n      const initialBounds = initialBoundsRef.current;\n      return updateBounds({\n        ...initialBounds,\n        left: initialBounds.left + initialBounds.width - newWidth,\n        width: newWidth,\n      });\n    },\n    top: (size: number) => {\n      const newHeight = Math.max(\n        minHeight,\n        initialBoundsRef.current.height + size\n      );\n      const initialBounds = initialBoundsRef.current;\n      return updateBounds({\n        ...initialBounds,\n        top: initialBounds.top + initialBounds.height - newHeight,\n        height: newHeight,\n      });\n    },\n  };\n\n  function getResizerProps(side: \"left\" | \"right\"): HorizontalResizerProps;\n  function getResizerProps(side: \"top\" | \"bottom\"): VerticalResizerProps;\n  function getResizerProps(\n    side: \"left\" | \"right\" | \"top\" | \"bottom\"\n  ): HorizontalResizerProps | VerticalResizerProps {\n    const horizontal = side === \"left\" || side === \"right\";\n    return {\n      size: 1,\n      cursor: horizontal ? \"ew\" : \"ns\",\n      onResizeStarted: () => {\n        initialBoundsRef.current = startInteraction(\"resize\");\n      },\n      onResize: onResize[side],\n      onResizeEnd: finishInteraction,\n      style: { position: \"absolute\", [side]: 0 },\n    };\n  }\n\n  return {\n    getResizerProps,\n  };\n}\n","import { Bounds } from \"@intellij-platform/core/Overlay/OverlayInteractionHandler\";\nimport { clamp } from \"ramda\";\nimport { ResizableMovableOverlayOptions } from \"@intellij-platform/core/Overlay/useResizableMovableOverlay\";\n\nexport const withMinSize =\n  ({ width: minWidth, height: minHeight }: { width: number; height: number }) =>\n  (bounds: Bounds) => {\n    const width = Math.max(minWidth, bounds.width);\n    const height = Math.max(minHeight, bounds.height);\n    if (bounds.width != width || bounds.height != height) {\n      return { ...bounds, width, height };\n    }\n    return bounds;\n  };\n\nexport function getCenteredBounds(width: number, height: number): Bounds {\n  return {\n    left: (window.innerWidth - width) / 2,\n    top: (window.innerHeight - height) / 2,\n    width,\n    height,\n  };\n}\n\n/**\n * A helper function to create interaction interceptor which ensures bounds are contained within a container.\n *\n * @example\n * const ensureInViewPort = containedWithin({left: 0, top: 0, width: window.innerWidth, height: window.innerHeight})\n *\n * useResizableMovableOverlay({ onBoundsChanging: ensureInViewPort});\n */\nexport const containedWithin =\n  (\n    containerBounds: Bounds\n  ): ResizableMovableOverlayOptions[\"onBoundsChanging\"] =>\n  (bounds, interactionType) => {\n    if (interactionType === \"move\") {\n      const left = clamp(\n        containerBounds.left,\n        containerBounds.left + containerBounds.width - bounds.width,\n        bounds.left\n      );\n      const top = clamp(\n        containerBounds.top,\n        containerBounds.top + containerBounds.height - bounds.height,\n        bounds.top\n      );\n      return {\n        ...bounds,\n        left,\n        top,\n      };\n    } else if (interactionType === \"resize\") {\n      const left = Math.max(containerBounds.left, bounds.left);\n      const top = Math.max(containerBounds.top, bounds.top);\n      // the logic here seems unnecessarily complicated\n      return {\n        left,\n        top,\n        width:\n          bounds.width -\n          Math.max(\n            0,\n            bounds.left +\n              bounds.width -\n              (containerBounds.left + containerBounds.width)\n          ) -\n          (left - bounds.left),\n        height:\n          bounds.height -\n          Math.max(\n            0,\n            bounds.top +\n              bounds.height -\n              (containerBounds.top + containerBounds.height)\n          ) -\n          (top - bounds.top),\n      };\n    }\n    return bounds;\n  };\nexport const position =\n  ({\n    targetElement,\n    placement = \"bottom\",\n  }: {\n    placement?: \"bottom\" | \"top\";\n    targetElement: HTMLElement;\n  }) =>\n  ({ height, width }: Bounds): Bounds => {\n    const targetBounds = targetElement.getBoundingClientRect();\n    return {\n      left: targetBounds.left,\n      top:\n        placement === \"bottom\"\n          ? targetBounds.top + targetBounds.height\n          : targetBounds.top - height,\n      width,\n      height,\n    };\n  };\n\nexport function ensureInViewport(\n  bounds: Bounds,\n  { gap = 0 }: { gap?: number } = {}\n): Bounds {\n  const viewportWidth = window.innerWidth - gap;\n  const viewportHeight = window.innerHeight - gap;\n  const left = clamp(gap, viewportWidth - bounds.width, bounds.left);\n  const top = clamp(gap, viewportHeight - bounds.height, bounds.top);\n  if (left !== bounds.left || top !== bounds.top) {\n    return {\n      left,\n      top,\n      width: bounds.width,\n      height: bounds.height,\n    };\n  }\n  return bounds;\n}\n","import { useCallback, useEffect, useLayoutEffect, useRef } from \"react\";\n\nexport const useDebouncedCallback = (\n  fn: () => void,\n  { timeout = 100 } = {}\n) => {\n  const fnRef = useRef(fn);\n  const currentTimeoutId = useRef<number | null>(null);\n  useLayoutEffect(() => {\n    fnRef.current = fn;\n  });\n  useEffect(() => {\n    return () => {\n      if (currentTimeoutId.current !== null) {\n        clearTimeout(currentTimeoutId.current);\n      }\n    };\n  }, []);\n  return useCallback(() => {\n    if (currentTimeoutId.current !== null) {\n      clearTimeout(currentTimeoutId.current);\n    }\n    currentTimeoutId.current = window.setTimeout(fnRef.current, timeout);\n  }, []);\n};\n","import { RefObject, useEffect, useLayoutEffect, useState } from \"react\";\nimport { useDebouncedCallback } from \"@intellij-platform/core/utils/useDebounce\";\n\n/**\n * Clones the element, applies the temporary styles, and calls {@param fn} on the clone.\n * Previously, we applied the temporary styles on the element itself, run fn, and then revert to previous styles,\n * but that can mess with the scroll bar in the content. If there is a scrollable part in some nested element,\n * applying temporary style (in our case width: fit-content, height: fit-content) can cause scroll to jump which is not\n * restored after the style reversion. Now the approach is changed to apply the temporary styles on a temporary clone\n * of the element. It's certainly not as efficient and some optimization may be needed.\n * @param style: temporary styles to apply before fn is invoked, and revert after.\n * @param fn the function to compute something on the element with temporary styles\n */\nconst withTemporaryStyle =\n  <T extends any>(\n    style: Partial<CSSStyleDeclaration>,\n    fn: (element: HTMLElement) => T\n  ) =>\n  (element: HTMLElement): T => {\n    const clone = element.cloneNode(true) as HTMLElement;\n    clone.style.position = \"absolute\";\n    clone.style.left = \"-9999px\";\n    document.body.appendChild(clone);\n\n    Object.assign(clone.style, style);\n    const returnValue = fn(clone);\n\n    document.body.removeChild(clone);\n    return returnValue;\n  };\n\n/**\n * FIXME: withTemporaryStyle is not side-effect free and can cause scroll jumps. It creates awfully hard-to-debug\n *  issues.\n */\nexport const getContentSize = withTemporaryStyle(\n  {\n    width: \"\",\n    minWidth: \"fit-content\", // Shouldn't it be min-content? :-?\n    height: \"\",\n    minHeight: \"fit-content\",\n  },\n  (element) => ({\n    width: Math.ceil(parseFloat(getComputedStyle(element).width)),\n    height: Math.ceil(parseFloat(getComputedStyle(element).height)),\n  })\n);\n\nexport const useContentSize = (\n  ref: RefObject<HTMLElement>,\n  {\n    observe = false,\n  }: {\n    /**\n     * if false, the content size is measured only initially. If true, the dom changes are observed, and content size\n     * is updated accordingly.\n     * @default false\n     */\n    observe?: boolean;\n  } = {}\n) => {\n  const [measuredSizes, setMeasuredSizes] = useState<Size[]>([]);\n  useLayoutEffect(() => {\n    const element = ref.current;\n    if (!element || measuredSizes.length > 5) {\n      return;\n    }\n    const size = getContentSize(element);\n\n    const lastMeasuredSize = measuredSizes.at(-1);\n    if (!lastMeasuredSize || !Size.isEqual(lastMeasuredSize, size)) {\n      setMeasuredSizes([size]);\n    }\n    const id = window.requestAnimationFrame(() => {\n      const newSize = getContentSize(element);\n      if (!Size.isEqual(newSize, size)) {\n        setMeasuredSizes([...measuredSizes, newSize]);\n      }\n    });\n    return () => {\n      window.cancelAnimationFrame(id);\n    };\n  }, [\n    measuredSizes,\n    // ref value shouldn't normally be an effect's dependency, but for some reason, ref value is null in the first call\n    // when built for website. Interestingly, it doesn't happen in storybook. So maybe something to investigate further\n    ref.current,\n  ]);\n  const measure = () => {\n    const lastMeasuredSize = measuredSizes.at(-1);\n    if (ref.current && lastMeasuredSize) {\n      const currentSize = getContentSize(ref.current);\n      if (\n        currentSize.height !== lastMeasuredSize.height ||\n        currentSize.width !== lastMeasuredSize.width\n      ) {\n        setMeasuredSizes(\n          measuredSizes.map((aSize) =>\n            aSize === lastMeasuredSize ? currentSize : aSize\n          )\n        );\n      }\n    }\n  };\n  const debouncedMeasure = useDebouncedCallback(measure);\n\n  useEffect(() => {\n    const element = ref.current;\n    if (observe && element) {\n      const mutationObserver = new MutationObserver(() => {\n        debouncedMeasure();\n      });\n      mutationObserver.observe(element, {\n        subtree: true,\n        childList: true,\n      });\n      return () => {\n        mutationObserver.disconnect();\n      };\n    }\n  }, [\n    observe,\n    // ref value shouldn't normally be an effect's dependency, but for some reason, ref value is null in the first call\n    // when built for website. Interestingly, it doesn't happen in storybook. So maybe something to investigate further\n    ref.current,\n  ]);\n  return [measuredSizes.at(-1) || { width: 0, height: 0 }, measure] as const;\n};\n\ninterface Size {\n  width: number;\n  height: number;\n}\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const Size = {\n  isEqual: (\n    { width, height }: Size,\n    { width: width2, height: height2 }: { width: number; height: number }\n  ) => width === width2 && height === height2,\n};\n","import { RefObject, useState } from \"react\";\nimport { useControlledState } from \"@react-stately/utils\";\nimport {\n  Bounds,\n  OverlayInteractionHandler,\n  OverlayInteractionHandlerProps,\n} from \"./OverlayInteractionHandler\";\nimport { clamp, filter } from \"ramda\";\nimport { useContentSize } from \"@intellij-platform/core/Overlay/useContentSize\";\nimport {\n  getCenteredBounds,\n  withMinSize,\n} from \"@intellij-platform/core/Overlay/bounds-helpers\";\n\n/**\n * Common props for resizable and movable overlays such as Windows or Popups.\n * There is currently no corresponding component/hook, and this is just a type helper.\n */\nexport interface ResizableMovableOverlayOptions {\n  onBoundsChange?: (bounds: Bounds, interactionType: \"move\" | \"resize\") => void;\n  /**\n   * For performance reason, overlay bounds is kept in a local state during a resize or move interaction, and\n   * `onBoundsChange` is called once at the end of interaction. `onBoundsChanging` gives a chance of rectifying\n   * bounds changes during an interaction to for example apply custom size/placement constraints.\n   */\n  onBoundsChanging?: (\n    newBounds: Bounds,\n    /**\n     * Whether the interaction is a \"move\" or \"resize\" considering the initial bounds when interaction was started.\n     */\n    interactionType: \"move\" | \"resize\"\n  ) => Bounds;\n  /**\n   * Controlled bounds. Can be a partially specified bounds.\n   * - If `top` not specified, the returned bounds will be centered vertically.\n   * - If `left` not specified, the returned bounds will be centered horizontally.\n   * - If `width` not specified, the width of the bounds will be based on content width.\n   * - If `height` not specified, the height of the bounds will be based on content height.\n   * Note that regardless of `bounds`, `onBoundsChange` always receives a full `bounds` object which is solely\n   * based on the bounds of the overlay, at the end of an interaction.\n   */\n  bounds?: Partial<Bounds>;\n  /**\n   * Default bounds in uncontrolled mode. Can be a partially specified bounds.\n   * - If `top` not specified, the returned bounds will be centered vertically.\n   * - If `left` not specified, the returned bounds will be centered horizontally.\n   * - If `width` not specified, the width of the bounds will be based on content width.\n   * - If `height` not specified, the height of the bounds will be based on content height.\n   * Note that regardless of `defaultBounds`, `onBoundsChange` always receives a full `bounds` object which is solely\n   * based on the bounds of the overlay, at the end of an interaction.\n   */\n  defaultBounds?: Partial<Bounds>;\n  minWidth?: number | \"content\"; // TODO: support function, receiving measured size, for more flexibility\n  minHeight?: number | \"content\"; // TODO: support function, receiving measured size, for more flexibility\n\n  /**\n   * Allowed interactions:\n   * - \"all\": both resizable and movable\n   * - \"move\": movable, but not resizable\n   * - \"none\": fixed size and position\n   * The reason there are no `resizable` and `movable` boolean props is that resizable=true,movable=false doesn't make\n   * sense from UX perspective.\n   * @default \"all\"\n   */\n  interactions?: \"all\" | \"move\" | \"none\"; // FIXME: it's not used in useResizableMovableOverlay, maybe separate props?\n\n  /**\n   * When the size is not specified by `bounds` or `defaultBounds` props, the content size is measured and used in the\n   * returned bounds. By default, the content size is measured initially. If `observeContentSize` is true, the DOM\n   * mutations will be observed and the content is re-measured as changes are observed.\n   */\n  observeContentResize?: boolean;\n}\n/**\n *\n * TODO: rename to something better? :D\n * TODO: maybe an option like ensureInViewport that would move the final bound into the viewport (if necessary), when\n *  calling onBoundsChange at the end of an interaction. That's important because if move handle(s) (usually rendered\n *  at the top of the overlay) are out of reach, there would be no way back.\n * TODO: description\n * Assumptions:\n * - The overlay is rendered in a portal, and with position \"fixed\".\n * - The returned bounds should be used to style the overlay.\n *   - There shouldn't be other style affecting the positioning, such as margin, or transform.\n *   - If the overlay has border, box-sizing should be \"border-box\"\n */\nexport function useResizableMovableOverlay(\n  overlayRef: RefObject<HTMLElement>,\n  {\n    bounds: inputBounds,\n    defaultBounds,\n    onBoundsChange,\n    onBoundsChanging = (i) => i,\n    minWidth,\n    minHeight,\n    observeContentResize,\n  }: ResizableMovableOverlayOptions\n): {\n  /**\n   * The bounds to be applied as `style` on the overlay, to position it. Even if the input `bounds` or `defaultBounds`\n   * is not defined, returned `bounds` is always a full bounds object. This eliminates any other need for styling,\n   * if the input bounds doesn't define size or position.\n   * NOTE: even when the size is not specified as input, and is to be based on content, the returned `bounds` include\n   * explicit, size, measured **after the first render**. This is because overlays such as windows are not expected to\n   * be resized without user interaction, and just based on the content size change. So we make sure even when the\n   * sizing is based on content, it's stable. If imperative re-measure of the size is needed, or even dynamic resizing\n   * based on content is needed in some cases, it is feasible to add it as an option.\n   */\n  bounds: Bounds;\n  /**\n   * `true` if the returned bounds has explicit position. `false` if it's centered as a fallback.\n   */\n  positioned: boolean;\n  /**\n   * `true` if the returned bounds has explicit size. `false` if it's measured based on content.\n   */\n  sized: boolean;\n  /**\n   * Props to be passed to {@link OverlayInteractionHandler}\n   */\n  overlayInteractionHandlerProps: OverlayInteractionHandlerProps;\n\n  /**\n   * Allow for remeasuring content size imperatively, when needed. Currently only used to work around\n   * an issue related to Suspense in React 17.\n   */\n  UNSAFE_measureContentSize: () => void;\n} {\n  const [bounds, setBounds] = useControlledState<Partial<Bounds> | undefined>(\n    inputBounds,\n    defaultBounds!,\n    // onBoundsChange is called with Bounds object. Not Partial<Bounds>, and not undefined.\n    onBoundsChange as (\n      value: Partial<Bounds> | undefined,\n      reason: \"resize\" | \"move\"\n    ) => void\n  );\n  const [contentSize, measureContentSize] = useContentSize(overlayRef, {\n    observe: observeContentResize,\n  });\n  // local state of bounds for when the overlay is in a UI interaction, like movement or resize with mouse.\n  // We don't want to update the state in the higher levels repeatedly in such transactions, and we just want to\n  // trigger on update when the UI interaction is done.\n  // It's maintained during a UI interaction and then reset to null.\n  const [currentInteraction, setCurrentInteraction] = useState<null | {\n    type: \"move\" | \"resize\";\n    bounds: Bounds;\n  }>(null);\n\n  const effectiveMinWidth =\n    minWidth === \"content\" ? contentSize.width : minWidth || 0;\n  const effectiveMinHeight =\n    minHeight === \"content\" ? contentSize.height : minHeight || 0;\n  const applyMinSize = withMinSize({\n    width: effectiveMinWidth,\n    height: effectiveMinHeight,\n  });\n  const overlayInteractionHandlerProps: OverlayInteractionHandlerProps = {\n    startInteraction: (type: \"move\" | \"resize\") => {\n      if (!overlayRef.current) {\n        throw new Error(\n          \"overlayRef value is not set. Make sure to have the ref passed to the resizable/movable overlay\"\n        );\n      }\n      const bounds = getBounds(overlayRef.current);\n      setCurrentInteraction({ bounds, type });\n      return bounds;\n    },\n    updateBounds: (updatedBounds) => {\n      setCurrentInteraction((currentInteraction) => {\n        if (currentInteraction) {\n          const { type } = currentInteraction;\n          return {\n            type,\n            bounds: onBoundsChanging(updatedBounds, type) || updatedBounds,\n          };\n        }\n        return currentInteraction;\n      });\n    },\n    finishInteraction: () => {\n      if (currentInteraction && overlayRef.current) {\n        // @ts-expect-error https://github.com/adobe/react-spectrum/issues/6784\n        setBounds(getBounds(overlayRef.current), currentInteraction.type);\n      }\n      setCurrentInteraction(null);\n    },\n    minWidth: effectiveMinWidth,\n    minHeight: effectiveMinHeight,\n  };\n\n  const partialBounds = currentInteraction?.bounds ?? bounds;\n  const centeredContentBounds = getCenteredBounds(\n    clamp(\n      effectiveMinWidth,\n      window.innerWidth,\n      bounds?.width ?? contentSize.width\n    ),\n    clamp(\n      effectiveMinHeight,\n      window.innerHeight,\n      bounds?.height ?? contentSize.height\n    )\n  );\n  return {\n    positioned:\n      partialBounds?.left != undefined && partialBounds?.top != undefined,\n    sized:\n      partialBounds?.width != undefined && partialBounds?.height != undefined,\n    bounds: applyMinSize({\n      /**\n       * Since input bounds may be partial (e.g. only specifying size), we create a full bounds object as a fallback,\n       * based on the measured size, positioned in center. We can introduce a \"loose\" mode, where the returned bound\n       * is not \"filled\" with default properties.\n       */\n      ...centeredContentBounds,\n      ...(partialBounds && filter((value) => value != null, partialBounds)),\n    }),\n    UNSAFE_measureContentSize: measureContentSize,\n    overlayInteractionHandlerProps,\n  };\n}\n\nfunction getBounds(element: HTMLElement) {\n  const { left, top, width, height } = element.getBoundingClientRect();\n  return { left, top, width, height };\n}\n","import React, { ForwardedRef, RefObject, useContext, useState } from \"react\";\nimport { DOMProps } from \"@react-types/shared\";\nimport { useFocusWithin, useInteractOutside } from \"@react-aria/interactions\";\nimport { FocusScope, useFocusable } from \"@react-aria/focus\";\nimport { useOverlay, usePreventScroll } from \"@react-aria/overlays\";\nimport { filterDOMProps, useObjectRef } from \"@react-aria/utils\";\nimport { pipe } from \"ramda\";\n\nimport {\n  ensureInViewport,\n  OverlayInteractionHandler,\n  OverlayResizeHandles,\n  position,\n  ResizableMovableOverlayOptions,\n  useResizableMovableOverlay,\n} from \"@intellij-platform/core/Overlay\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { WINDOW_SHADOW } from \"@intellij-platform/core/style-constants\";\nimport { areInNestedOverlays, Overlay } from \"@intellij-platform/core/Overlay\";\nimport { mergeNonNullProps } from \"@intellij-platform/core/utils/mergeNonNullProps\";\nimport { useFocusForwarder } from \"@intellij-platform/core/utils/useFocusForwarder\";\n\nimport { useDialog } from \"./_useDialog\";\nimport { PopupHeader } from \"./PopupHeader\";\nimport { PopupContext, PopupControllerContext } from \"./PopupContext\";\nimport { PopupLayout } from \"./PopupLayout\";\nimport { StyledPopupHint } from \"./StyledPopupHint\";\n\nexport const StyledPopupContainer = styled.div`\n  position: fixed;\n  box-sizing: border-box;\n  // not checked if there should be a better substitute for * in the following colors. Maybe \"Component\"?\n  background-color: ${({ theme }) => theme.color(\"*.background\")};\n  color: ${({ theme }) => theme.color(\"*.foreground\")};\n  outline: none; // Focus will be reflected in header. No need for outline or any other focus style on the container\n  ${WINDOW_SHADOW}; // FIXME: OS-dependant style?\n`;\n\n/**\n * only needed for setting overflow to hidden to make sure nothing will overflow a window under any circumstances.\n * The reason we can't set that overflow: \"hidden\" on the StyledWindowContainer itself is that we want resize handles\n * to overflow without bing clipped.\n */\nconst StyledInnerContainer = styled.div`\n  height: inherit;\n  overflow: hidden;\n`;\nexport interface PopupProps extends ResizableMovableOverlayOptions, DOMProps {\n  children: React.ReactNode;\n  onClose?: () => void;\n\n  nonDismissable?: boolean;\n\n  /**\n   * By default, Popup prevents scrolling on the scrollable ancestor, if popup is positioned relative to a target\n   * element. Allowing or disallowing scroll can be forced by passing boolean value.\n   */\n  allowScroll?: \"auto\" | boolean;\n\n  /**\n   * Used to position the popup relative to a target element, if there is no positioning information in the input\n   * `bounds`/`defaultBounds`.\n   */\n  positioning?: {\n    targetRef: RefObject<HTMLElement>;\n    placement?: \"bottom\" | \"top\";\n  };\n}\n\nexport const DEFAULT_POPUP_MIN_WIDTH = 50;\nexport const DEFAULT_POPUP_MIN_HEIGHT = 50;\n\n/**\n * [Popup](https://www.figma.com/file/nfDfMAdV7j2fnQlpYNAOfP/IntelliJ-Platform-UI-Kit-%28Community%29?node-id=75426%3A16881&t=vzpRGV2y2cDw5a6Z-0)\n * component, rendered as a draggable overlay which is positioned either in the center of the viewport or relative to a trigger element.\n * If there is a trigger element, use {@link PopupTrigger} instead.\n */\nexport const _Popup = (\n  // NOTE: export is only for __docgenInfo to be emitted for this.\n  {\n    interactions = \"move\",\n    nonDismissable = false,\n    allowScroll = \"auto\",\n    minWidth = DEFAULT_POPUP_MIN_WIDTH,\n    minHeight = DEFAULT_POPUP_MIN_HEIGHT,\n    positioning: positioningProp,\n    onClose: onCloseProp,\n    ...props\n  }: PopupProps,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n): JSX.Element => {\n  const propsContext = useContext(PopupControllerContext);\n  const positioning = positioningProp || propsContext.positioning;\n  const onClose = () => {\n    onCloseProp?.();\n    propsContext.onClose?.();\n  };\n  const ref = useObjectRef<HTMLDivElement>(forwardedRef);\n  const shouldCloseOnInteractOutside = (element: Element) => {\n    return (\n      !positioning?.targetRef.current?.contains(element) &&\n      !areInNestedOverlays(ref.current, element)\n    );\n  };\n  const { overlayProps } = useOverlay(\n    {\n      isOpen: true, // FIXME?\n      onClose,\n      shouldCloseOnBlur: !nonDismissable,\n      shouldCloseOnInteractOutside,\n    },\n    ref\n  );\n  // Passing isDismissable to useOverlay also utilizes useInteractOutside and closes the overlay, but it calls\n  // preventDefault() and stopPropagation() on the event, which prevents focus from going to elements outside the popup.\n  // Not sure why they do this in react-aria, but it seems we are better off not using that option and using\n  // useInteractOutside directly here like this:\n  useInteractOutside({\n    ref,\n    onInteractOutsideStart: (e) => {\n      if (\n        !nonDismissable &&\n        shouldCloseOnInteractOutside(e.target as Element)\n      ) {\n        onClose();\n      }\n    },\n    // onInteractOutsideStart will not be called if onInteractOutside is not passed!\n    onInteractOutside: () => {},\n  });\n\n  usePreventScroll({\n    isDisabled: allowScroll === \"auto\" ? !positioning : allowScroll,\n  });\n\n  const { bounds, positioned, overlayInteractionHandlerProps } =\n    useResizableMovableOverlay(ref, {\n      ...props,\n      minWidth,\n      minHeight,\n      observeContentResize: true,\n    });\n  const positionedBounds =\n    positioning?.targetRef.current && !positioned\n      ? pipe(\n          position({\n            targetElement: positioning.targetRef.current,\n            placement: positioning.placement,\n          }),\n          ensureInViewport\n        )(bounds)\n      : bounds;\n\n  const [isActive, setActive] = useState(false);\n  const { focusWithinProps } = useFocusWithin({\n    onFocusWithinChange: setActive,\n  });\n  const { focusableProps } = useFocusable(\n    {\n      excludeFromTabOrder: true,\n    },\n    ref\n  );\n  const { focusForwarderProps } = useFocusForwarder();\n\n  const { dialogProps, titleProps } = useDialog(props, ref);\n\n  /**\n   * A hook like useOverlayStack or useOverlayZIndex can be introduced which would handle focus/blur, and return/set\n   * the right z-index so that only the overlay holding the focus would have a higher z-index than others.\n   */\n  const zIndex = isActive ? 1 : 0;\n\n  return (\n    <Overlay>\n      <OverlayInteractionHandler {...overlayInteractionHandlerProps}>\n        {/* TODO: FocusScope is redundant. Test focus restoration without it (in status bar progress), and remove it if unnecessary */}\n        <FocusScope restoreFocus>\n          <StyledPopupContainer\n            ref={ref}\n            style={{\n              ...positionedBounds,\n              zIndex,\n            }}\n            tabIndex={-1}\n            {...mergeNonNullProps(\n              focusWithinProps,\n              focusableProps,\n              focusForwarderProps,\n              overlayProps,\n              propsContext.overlayProps || {},\n              dialogProps,\n              filterDOMProps(props)\n            )}\n          >\n            <PopupContext.Provider\n              value={{\n                isActive,\n                movable: interactions !== \"none\",\n                titleProps,\n              }}\n            >\n              <StyledInnerContainer>{props.children}</StyledInnerContainer>\n              {interactions === \"all\" && <OverlayResizeHandles />}\n            </PopupContext.Provider>\n          </StyledPopupContainer>\n        </FocusScope>\n      </OverlayInteractionHandler>\n    </Overlay>\n  );\n};\n\nexport const Popup = Object.assign(React.forwardRef(_Popup), {\n  Header: PopupHeader,\n  Layout: PopupLayout,\n  Hint: StyledPopupHint,\n});\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport { AriaDialogProps } from \"@react-types/dialog\";\nimport { FocusableElement } from \"@react-types/shared\";\nimport { filterDOMProps, useSlotId } from \"@react-aria/utils\";\nimport { focusSafely } from \"@react-aria/focus\";\nimport { RefObject, useEffect } from \"react\";\nimport { useOverlayFocusContain } from \"@react-aria/overlays\";\nimport { DialogAria } from \"@react-aria/dialog\";\n\n////////////////// NOTE //////////////////////////\n// This is a copy of useDialog from react-aria, with a little part removed from the useEffect call.\n// In the original code, inside the effect, there is a hack to fix an issue in Safari, which involves\n// blurring and refocusing the element. Even though there is a comment about an attempt to make it work\n// nice when used with `shouldCloseOnBlur` option of `useOverlay`, it didn't work and the refocusing causes\n// the popup to close. Probably because in our case useOverlay and useDialog are used in the same level, but\n// in what they've tested on in react-aria, useDialog is used in something nested in the component that uses\n// useDialog.\n// TODO: replace with original useDialog, if the issue explained above got fixed in some version of react-aria.\n//////////////////////////////////////////////////\n/**\n * Provides the behavior and accessibility implementation for a dialog component.\n * A dialog is an overlay shown above other content in an application.\n */\nexport function useDialog(\n  props: AriaDialogProps,\n  ref: RefObject<FocusableElement>\n): DialogAria {\n  let { role = \"dialog\" } = props;\n  let titleId: string | undefined = useSlotId();\n  titleId = props[\"aria-label\"] ? undefined : titleId;\n\n  // Focus the dialog itself on mount, unless a child element is already focused.\n  useEffect(() => {\n    if (ref.current && !ref.current.contains(document.activeElement)) {\n      focusSafely(ref.current);\n    }\n  }, [ref]);\n\n  useOverlayFocusContain();\n\n  return {\n    dialogProps: {\n      ...filterDOMProps(props, { labelable: true }),\n      role,\n      tabIndex: -1,\n      \"aria-labelledby\": props[\"aria-labelledby\"] || titleId,\n    },\n    titleProps: {\n      id: titleId,\n    },\n  };\n}\n","import { mergeProps } from \"@react-aria/utils\";\nimport { filter } from \"ramda\";\n\n/**\n * Like mergeProps, but doesn't merge props where value is null or undefined. That's needed because useFocusable (and\n * maybe some other react-aria hooks as well) return props like onFocus, with value set to null or undefined, which\n * overrides the same prop from other sources.\n */\n// @ts-expect-error not sure why!\nexport const mergeNonNullProps: typeof mergeProps = (...propsArray) => {\n  return mergeProps(\n    ...propsArray.map((props): typeof props =>\n      filter((value) => value != undefined, props ?? [])\n    )\n  );\n};\n","import { DOMAttributes } from \"@react-types/shared\";\nimport { createContext } from \"react\";\nimport { PopupProps } from \"./Popup\";\n\nexport const PopupContext = createContext<{\n  isActive: boolean;\n  movable: boolean;\n  titleProps: DOMAttributes;\n}>({ isActive: false, movable: true, titleProps: {} });\n\n/**\n * A context to provide some props that are necessary for PopupTrigger or PopupManager.\n * Passing those props via context helps with providing a nice API in those components.\n */\nexport const PopupControllerContext = createContext<\n  {\n    overlayProps?: DOMAttributes;\n  } & Partial<Pick<PopupProps, \"positioning\" | \"onClose\">>\n>({});\n","import React, { CSSProperties, HTMLAttributes, useContext } from \"react\";\nimport { mergeProps } from \"@react-aria/utils\";\n\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { OverlayMoveHandle } from \"@intellij-platform/core/Overlay\";\n\nimport { PopupContext } from \"./PopupContext\";\n\nconst StyledPopupHeader = styled.div<{\n  active?: boolean;\n  hasControls?: boolean;\n}>`\n  box-sizing: border-box;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 1.5rem;\n  min-height: ${({ hasControls }) => hasControls && \"1.75rem\"};\n  cursor: default;\n  white-space: nowrap;\n  color: ${({ theme, active }) =>\n    active\n      ? theme.color(\n          \"Popup.Header.activeForeground\" as UnknownThemeProp<\"Popup.Header.activeForeground\">,\n          theme.commonColors.labelForeground\n        )\n      : theme.color(\n          \"Popup.Header.inactiveForeground\" as UnknownThemeProp<\"Popup.Header.inactiveForeground\">,\n          theme.commonColors.labelDisabledForeground\n        )};\n  background-color: ${({ theme, active }) =>\n    active\n      ? theme.color(\"Popup.Header.activeBackground\", \"#e6e6e6\")\n      : theme.color(\"Popup.Header.inactiveBackground\", `#ededed`)};\n`;\n/**\n * Implements appearance of\n * [Popup Header](https://www.figma.com/file/nfDfMAdV7j2fnQlpYNAOfP/IntelliJ-Platform-UI-Kit-%28Community%29?node-id=75455%3A26566&t=Hzwse5j5R6iCEzVW-4),\n * and also acts as a handle for moving the panel.\n * Expected to be used with {@link Popup#Layout}:\n *\n * @example\n * ```tsx\n * <Popup>\n *    <Popup.Layout header={<Popup.Header>header</Popup.Header>} />\n * </Popup>\n * ```\n */\nexport const PopupHeader = ({\n  children,\n  hasControls,\n  className,\n  style,\n}: {\n  children?: React.ReactNode;\n  hasControls?: boolean;\n  className?: string;\n  style?: CSSProperties;\n}) => {\n  const { isActive, movable, titleProps } = useContext(PopupContext);\n  const renderHeader = (otherProps: HTMLAttributes<HTMLElement> = {}) => (\n    <StyledPopupHeader\n      active={isActive}\n      hasControls={hasControls}\n      className={className}\n      style={style}\n      {...mergeProps(titleProps, otherProps)}\n    >\n      {children}\n    </StyledPopupHeader>\n  );\n  return movable ? (\n    <OverlayMoveHandle>\n      {({ moveHandleProps }) => renderHeader(moveHandleProps)}\n    </OverlayMoveHandle>\n  ) : (\n    renderHeader()\n  );\n};\n","import React from \"react\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { Popup } from \"./Popup\";\nimport { PopupHeader } from \"./PopupHeader\";\nimport { StyledPopupHint } from \"@intellij-platform/core/Popup/StyledPopupHint\";\n\nconst StyledPopupLayout = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: inherit;\n`;\nconst StyledPopupLayoutHeader = styled.div`\n  flex-shrink: 0;\n`;\nconst StyledPopupLayoutContent = styled.div`\n  flex: 1;\n  overflow: auto;\n  // Not sure about making the content area a vertical flex container, but it seemed it makes sense as default.\n  // The use case at hand where this was added was \"Branches\" popup, which would of course be implementable without this\n  // too, with an extra flex container around the menu.\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledPopupLayoutFooter = styled.div`\n  flex-shrink: 0;\n`;\n\n/**\n * Popup content layout, supporting fixed `header` and `footer` sections, and a scrollable `content` area.\n */\nexport function PopupLayout({\n  header,\n  footer,\n  content,\n}: {\n  /**\n   * Fixed position header of the popup at the top. {@link Popup.Header} can be used for the content.\n   */\n  header?: React.ReactNode;\n  /**\n   * Scrollable content of the popup.\n   */\n  content: React.ReactNode;\n  /**\n   * Fixed position footer of the popup at the bottom. {@link Popup.Hint} can be used for the content.\n   */\n  footer?: React.ReactNode;\n}) {\n  return (\n    <StyledPopupLayout>\n      {header && (\n        <StyledPopupLayoutHeader>\n          {typeof header === \"string\" ? (\n            <PopupHeader>{header}</PopupHeader>\n          ) : (\n            header\n          )}\n        </StyledPopupLayoutHeader>\n      )}\n      <StyledPopupLayoutContent>{content}</StyledPopupLayoutContent>\n      {footer && (\n        <StyledPopupLayoutFooter>\n          {typeof footer === \"string\" ? (\n            <StyledPopupHint>{footer}</StyledPopupHint>\n          ) : (\n            footer\n          )}\n        </StyledPopupLayoutFooter>\n      )}\n    </StyledPopupLayout>\n  );\n}\n","import React, {\n  ReactElement,\n  ReactNode,\n  useContext,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { Popup, PopupProps } from \"./Popup\";\nimport { PopupControllerContext } from \"@intellij-platform/core/Popup/PopupContext\";\n\nexport interface PopupManagerAPI {\n  /**\n   * Shows a popup within the stack of popups managed by {@link PopupManager}.\n   * The opened popup will be closed when `onClose` interactions happen.\n   */\n  show(\n    popup:\n      | React.ReactElement<PopupProps, typeof Popup>\n      | ((args: {\n          close: () => void;\n        }) => React.ReactElement<PopupProps, typeof Popup>)\n  ): void;\n}\n\nconst NotImplementedFn = () => {\n  throw new Error(\n    \"PopupManager not found. Wrap your application with PopupManager to be able to open popups imperatively\"\n  );\n};\n\nconst PopupsContext = React.createContext<PopupManagerAPI>({\n  show: NotImplementedFn,\n});\n\n/**\n * Returns imperative API for showing popups.\n */\nexport const usePopupManager = (): PopupManagerAPI => useContext(PopupsContext);\n\ntype PopupElement = ReactElement<PopupProps, typeof Popup>;\n\nexport interface PopupManagerProps {\n  children?: ReactNode;\n}\n\n/**\n * Enables imperative API (via {@link usePopupManager}) for showing Popups.\n * It renders popups in a portal appended to `body`, unless `disablePortal` is `true`.\n */\nexport const PopupManager: React.FC<PopupManagerProps> = ({ children }) => {\n  const [popups, setPopups] = useState<Array<PopupElement>>([]);\n  const newKeyRef = useRef<number>(0);\n\n  const api = useMemo<PopupManagerAPI>(() => {\n    const show: PopupManagerAPI[\"show\"] = (popup) => {\n      newKeyRef.current++;\n      const close = () => {\n        setPopups((currentPopups) =>\n          currentPopups.filter((aPopup) => aPopup !== wrappedPopup)\n        );\n      };\n      const wrappedPopup = (\n        <PopupControllerContext.Provider\n          key={newKeyRef.current}\n          value={{ onClose: close }}\n        >\n          {typeof popup === \"function\" ? popup({ close }) : popup}\n        </PopupControllerContext.Provider>\n      );\n      setPopups((currentPopups) => currentPopups.concat(wrappedPopup));\n    };\n    return {\n      show,\n    };\n  }, []);\n\n  return (\n    <PopupsContext.Provider value={api}>\n      {children}\n      {popups}\n    </PopupsContext.Provider>\n  );\n};\n","import React, { ForwardedRef } from \"react\";\nimport { OverlayTriggerProps, useOverlayTrigger } from \"@react-aria/overlays\";\nimport { PressResponder } from \"@react-aria/interactions\";\nimport { useObjectRef } from \"@react-aria/utils\";\nimport {\n  OverlayTriggerProps as OverlayTriggerStateProps,\n  useOverlayTriggerState,\n} from \"@react-stately/overlays\";\n\nimport { PopupProps } from \"./Popup\";\nimport { PopupControllerContext } from \"./PopupContext\";\n\nexport interface PopupTriggerProps\n  extends Partial<OverlayTriggerProps>,\n    OverlayTriggerStateProps {\n  placement?: Required<PopupProps>[\"positioning\"][\"placement\"];\n  popup:\n    | React.ReactElement\n    | (({ close }: { close: () => void }) => React.ReactNode);\n  children: React.ReactElement;\n}\n\n/**\n * Popup opened by a trigger. `trigger` can be an element of any pressable component (such as {@link Button} or\n * {@link IconButton}), and is rendered in place. Similar to {@link Popup component}, `children` defines the content\n * of Popup.\n */\nexport const PopupTrigger = React.forwardRef(function PopupTrigger(\n  { placement, children, popup, ...props }: PopupTriggerProps,\n  forwardedRef: ForwardedRef<HTMLButtonElement>\n) {\n  const state = useOverlayTriggerState(props);\n  const triggerRef = useObjectRef(forwardedRef);\n  const { overlayProps, triggerProps } = useOverlayTrigger(\n    { type: props.type || \"menu\" },\n    state,\n    triggerRef\n  );\n  return (\n    <>\n      <PressResponder ref={triggerRef} {...triggerProps}>\n        {children}\n      </PressResponder>\n      {state.isOpen && (\n        <PopupControllerContext.Provider\n          value={{\n            overlayProps,\n            positioning: {\n              targetRef: triggerRef,\n              placement,\n            },\n            onClose: state.close,\n          }}\n        >\n          {typeof popup === \"function\" ? popup({ close: state.close }) : popup}\n        </PopupControllerContext.Provider>\n      )}\n    </>\n  );\n});\n","import { styled } from \"@intellij-platform/core/styled\";\n\n/**\n * Hint component (aka Advertiser) used in Popup's footer.\n * {@see Popup.Layout}\n */\nexport const StyledPopupHint = styled.div`\n  // NOTE: Following the reference implementation, would require to set fallback colors non-prior to\n  // *.(background|foreground) colors (by not passing the fallback color as the second argument to theme.color).\n  // It's only in BigPopup that the fallback colors are prioritized over *-fallback. But in Figma designs, this is\n  // simplified, and hint always has the muted color (like in BigPopup), instead of the default foreground.\n  // So we are intentionally deviating from the reference implementation here.\n  background: ${({ theme }) =>\n    theme.color(\n      \"Popup.Advertiser.background\",\n      theme.color(\"SearchEverywhere.Advertiser.background\")\n    )};\n  color: ${({ theme }) =>\n    theme.color(\n      \"Popup.Advertiser.foreground\",\n      theme.color(\"SearchEverywhere.Advertiser.foreground\")\n    )};\n  padding: 0.3125rem 0.9375rem 0.3125rem 0.625rem;\n  font-size: 0.875em;\n  line-height: normal;\n  user-select: none;\n  cursor: default;\n  // NOTE: white-space is intentionally not set as nowrap.\n`;\n","import React, {\n  CSSProperties,\n  HTMLAttributes,\n  Ref,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { keyframes } from \"styled-components\";\nimport { useProgressBar } from \"@react-aria/progress\";\nimport { AriaProgressBarProps } from \"@react-types/progress\";\nimport { PressProps, useHover } from \"@react-aria/interactions\";\nimport { useButton } from \"@react-aria/button\";\nimport { mergeProps } from \"@react-aria/utils\";\n\nimport { Theme } from \"@intellij-platform/core/Theme\";\nimport { css, styled } from \"@intellij-platform/core/styled\";\n\nexport interface ProgressBarProps extends Omit<AriaProgressBarProps, \"label\"> {\n  /**\n   * Process name, shown above or to the left of the progress bar. Placement is controlled by {@link namePosition}.\n   * @see https://jetbrains.github.io/ui/controls/progress_bar/#process-name\n   */\n  name?: React.ReactNode;\n\n  /**\n   * Process name position with respect to the progress bar.\n   * If `namePosition` is \"side\", {@link name} is **not** automatically appended with a colon.\n   * @default \"top\"\n   */\n  namePosition?: \"side\" | \"top\";\n\n  /**\n   * Process details, placed bellow the progress bar, with a de-emphasized color.\n   * @see https://jetbrains.github.io/ui/controls/progress_bar/#process-details\n   */\n  details?: React.ReactNode;\n\n  /**\n   * A second line of details. Not an officially documented feature, but it's supported in the reference impl.\n   */\n  secondaryDetails?: React.ReactNode;\n\n  /**\n   * Placed next to and aligned with the progress bar, used for\n   * [process control](https://jetbrains.github.io/ui/controls/progress_bar/#process-control) buttons.\n   */\n  button?: React.ReactNode;\n\n  /**\n   * Progress bar track width.\n   */\n  width?: CSSProperties[\"width\"];\n\n  /**\n   * Not supported in [the official specs](https://jetbrains.github.io/ui/controls/progress_bar/#25), but the progress\n   * bar in status bar has a denser spacing. It still won't be a pixel perfect match with the progress bar in the\n   * status bar.\n   */\n  dense?: boolean;\n\n  /** Whether the value's label is displayed. True by default if there's a label, false by default if not. */\n  showValueLabel?: boolean;\n\n  style?: HTMLAttributes<unknown>[\"style\"];\n  className?: HTMLAttributes<unknown>[\"className\"];\n}\n\ninterface ProgressBarContextObj {\n  setForcedDetails: (details: string | null) => void;\n  setTooltip: (tooltip: string | null) => void;\n}\n\n/**\n * @see https://jetbrains.github.io/ui/controls/progress_bar/\n * @see https://github.com/JetBrains/intellij-community/blob/82f201386c3f7a339ff25fc8f3389024c8078a87/platform/platform-api/src/com/intellij/openapi/ui/panel/ProgressPanelBuilder.java\n *\n * Known issues:\n * There are a couple of UI issues because of the current layout (which can be improved probably):\n * - max-width of the label and details, it's not necessarily aligned with the the progressbar track, because they don't\n *   share the same container\n * - when label is on the side, details is aligned with the label, instead of the progressbar track.\n */\nexport const ProgressBar = ({\n  value = 0,\n  maxValue = 100,\n  minValue = 0,\n  name,\n  namePosition = \"top\",\n  details,\n  secondaryDetails,\n  button,\n  width,\n  dense,\n  className,\n  style,\n  valueLabel,\n  showValueLabel = Boolean(valueLabel),\n  ...props\n}: ProgressBarProps): React.ReactElement => {\n  const { progressBarProps, labelProps } = useProgressBar({\n    ...props,\n    label: name,\n    value,\n    valueLabel,\n    maxValue,\n    minValue,\n  });\n  const percentage = (100 * (value / maxValue)).toFixed(0);\n  const [forcedDetails, setForcedDetails] = useState<null | string>(\"\");\n  const [tooltip, setTooltip] = useState<null | string>(\"\");\n\n  const contextValue: ProgressBarContextObj = useMemo(\n    () => ({\n      setForcedDetails,\n      setTooltip,\n    }),\n    []\n  );\n  const label = (\n    <StyledProgressBarLabel {...labelProps}>{name}</StyledProgressBarLabel>\n  );\n  const effectiveDetails = details ? tooltip || forcedDetails || details : null;\n  return (\n    <StyledProgressBarContainer style={style} className={className}>\n      {namePosition === \"top\" && label}\n      <StyledProgressBarLineContainer\n        dense={dense}\n        hasTopMargin={Boolean(name) && namePosition === \"top\"}\n        hasBottomMargin={Boolean(effectiveDetails)}\n      >\n        {namePosition === \"side\" && label}\n        <StyledProgressBarTrack\n          style={{ width }}\n          {...progressBarProps}\n          indeterminate={props.isIndeterminate}\n        >\n          {!props.isIndeterminate && (\n            <StyledProgressBarProgress style={{ width: `${percentage}%` }} />\n          )}\n        </StyledProgressBarTrack>\n        {showValueLabel && <span>{valueLabel ?? `${percentage}%`}</span>}\n        <ProgressBarContext.Provider value={contextValue}>\n          {button}\n        </ProgressBarContext.Provider>\n      </StyledProgressBarLineContainer>\n      <StyledProgressBarDetails>{effectiveDetails}</StyledProgressBarDetails>\n      <StyledProgressBarDetails>{secondaryDetails}</StyledProgressBarDetails>\n    </StyledProgressBarContainer>\n  );\n};\n\nconst ProgressBarContext = React.createContext<null | ProgressBarContextObj>(\n  null\n);\n\nconst StyledProgressBarContainer = styled.div`\n  color: ${({ theme }) => theme.commonColors.labelForeground /* TODO: check*/};\n  cursor: default; // prevent cursor on text\n`;\n\nconst StyledProgressBarLineContainer = styled.div<{\n  dense?: boolean;\n  hasTopMargin?: boolean;\n  hasBottomMargin?: boolean;\n}>`\n  display: flex;\n  align-items: center;\n  gap: ${({ dense }) => (dense ? \"0.5rem\" : \"0.625rem\")};\n  height: 4px;\n  // spacing is based on the reference impl and figma designs. top and bottom spacing is inverted in the spec document\n  // figma: https://www.figma.com/file/nfDfMAdV7j2fnQlpYNAOfP/IntelliJ-Platform-UI-Kit-(Community)?node-id=75426%3A16650\n  // spec document: https://jetbrains.github.io/ui/controls/progress_bar/#25\n  margin-top: ${({ hasTopMargin }) => hasTopMargin && \"0.375rem\"};\n  margin-bottom: ${({ hasBottomMargin }) => hasBottomMargin && \"0.25rem\"};\n`;\n\nconst StyledProgressBarLabel = styled.div`\n  white-space: nowrap;\n  max-width: calc(100% - 2rem);\n  overflow: hidden;\n`;\n\nconst StyledProgressBarDetails = styled.div`\n  color: ${({ theme }) => theme.commonColors.contextHelpForeground};\n  font-size: 0.82em;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  max-width: calc(100% - 2rem); // not the best way\n`;\n\nconst StyledProgressBarTrack = styled.div<{ indeterminate?: boolean }>`\n  height: inherit;\n  border-radius: 2px;\n  overflow: hidden;\n  display: flex;\n\n  // In case used in flex layout\n  min-width: 0;\n  flex: 1;\n\n  background: ${({ theme }) =>\n    theme.color(\n      \"ProgressBar.trackColor\",\n      theme.dark ? \"rgb(85,85,85)\" : \"rgb(196,196,196)\"\n    )};\n  ${({ indeterminate }) =>\n    indeterminate &&\n    css`\n      background: linear-gradient(\n        90deg,\n        ${getIndeterminateStartColor} 0%,\n        ${getIndeterminateEndColor} 50%,\n        ${getIndeterminateStartColor} 100%\n      );\n      background-size: 96px auto;\n      animation: 800ms ${indeterminateBackgroundAnimation} linear infinite;\n    `}\n`;\n\nconst getIndeterminateStartColor = ({ theme }: { theme: Theme }) =>\n  theme.color(\"ProgressBar.indeterminateStartColor\");\nconst getIndeterminateEndColor = ({ theme }: { theme: Theme }) =>\n  theme.color(\"ProgressBar.indeterminateEndColor\");\n\nconst indeterminateBackgroundAnimation = keyframes`\n  0% {\n    background-position: 0;\n  }\n  100% {\n    background-position: 96px;\n  }\n`;\n\nconst StyledProgressBarProgress = styled.div`\n  height: 100%;\n  background: ${({ theme }) =>\n    theme.color(\n      \"ProgressBar.progressColor\",\n      theme.dark ? \"rgb(160,160,160)\" : \"rgb(128,128,128)\"\n    )};\n`;\n\ntype ProgressBarIconButtonProps = Pick<PressProps, \"onPress\"> & {\n  hoverTooltip: string;\n};\n\n/**\n * Accessibility and functionality of progress bar icon buttons\n * @private maybe?\n */\nexport function useProgressBarIconButton(\n  { onPress, hoverTooltip }: ProgressBarIconButtonProps,\n  ref: Ref<HTMLElement>\n) {\n  const { buttonProps } = useButton(\n    {\n      onPress,\n      elementType: \"span\",\n      excludeFromTabOrder: true,\n      // @ts-expect-error: it works, but it's intentionally excluded from the type.\n      preventFocusOnPress: true,\n    },\n    ref\n  );\n  const context = useContext(ProgressBarContext);\n  const { hoverProps, isHovered } = useHover({});\n  useEffect(() => {\n    context?.setTooltip(isHovered ? hoverTooltip : null);\n  }, [hoverTooltip, isHovered]);\n  return {\n    buttonProps: mergeProps(buttonProps, hoverProps),\n  };\n}\n\n/**\n * @private maybe?\n * */\nexport function useProgressBarPauseIconButton(\n  { paused, ...props }: ProgressBarIconButtonProps & { paused: boolean },\n  ref: Ref<HTMLElement>\n) {\n  const context = useContext(ProgressBarContext);\n  useEffect(() => {\n    context?.setForcedDetails(paused ? \"Paused\" : null);\n  }, [paused]);\n  return useProgressBarIconButton(props, ref);\n}\n\n/**\n * Experimenting with an idea of exposing parts on each component, to maximize styling customizability, similar to\n * [classes](https://mui.com/joy-ui/api/button/#classes) API in MUI components. But instead of passing classes prop,\n * one would be able to create custom versions of a component by doing something like this:\n * const CustomComponent = styled(Component)`\n *   ${Component.part1} {\n *     // custom style here\n *   }\n * `;\n * The question is if this type of customizability is actually a good thing in the balance between flexibility for\n * catering for different use cases and not stepping out of the design system boundaries.\n * Another potential downside is that the public API expands to the anatomy of the component.\n */\nProgressBar.Container = StyledProgressBarContainer;\nProgressBar.Label = StyledProgressBarLabel;\nProgressBar.LineContainer = StyledProgressBarLineContainer;\nProgressBar.Track = StyledProgressBarTrack;\nProgressBar.Progress = StyledProgressBarProgress;\nProgressBar.Details = StyledProgressBarDetails;\n","import React, { useRef } from \"react\";\nimport { AutoHoverPlatformIcon } from \"@intellij-platform/core/Icon\";\nimport { useProgressBarIconButton } from \"./ProgressBar\";\n\ninterface ProgressBarCancelButtonProps {\n  /**\n   * whether small icon should be used.\n   */\n  small?: boolean;\n  onPress: () => void;\n}\n\n/**\n * Stop (cancel) icon button for progress bar, to be used in {@link ProgressBarProps#button}.\n */\nexport const ProgressBarStopButton = ({\n  small,\n  onPress,\n}: ProgressBarCancelButtonProps) => {\n  const ref = useRef<HTMLSpanElement>(null);\n  const { buttonProps } = useProgressBarIconButton(\n    { onPress, hoverTooltip: \"Cancel\" },\n    ref\n  );\n  return (\n    <AutoHoverPlatformIcon\n      ref={ref}\n      {...buttonProps}\n      icon={`process/stop${small ? \"Small\" : \"\"}.svg`}\n      hoverIcon={`process/stop${small ? \"Small\" : \"\"}Hovered.svg`}\n    />\n  );\n};\n","import React from \"react\";\nimport {\n  ThreeViewSplitter,\n  ThreeViewSplitterProps,\n} from \"./ThreeViewSplitter/ThreeViewSplitter\";\n\ntype ResizableViewProps = Omit<\n  ThreeViewSplitterProps,\n  | \"innerView\"\n  | \"firstView\"\n  | \"firstSize\"\n  | \"onFirstResize\"\n  | \"lastView\"\n  | \"lastSize\"\n  | \"onLastResize\"\n> & {\n  children: React.ReactNode;\n  onResize: ThreeViewSplitterProps[\"onFirstResize\"];\n  size: ThreeViewSplitterProps[\"firstSize\"];\n  /**\n   * Whether the resizer should be placed at before or after the resizable view.\n   */\n  resizerPlacement?: \"before\" | \"after\";\n};\n/**\n * A single resizable view, built on top of {@link ThreeViewSplitter}, just to provide better prop interface.\n * Like `ThreeViewSplitter` it supports \"horizontal\" or \"vertical orientations. There is an extra `resizerPlacement`\n * prop which determines where the resizer should be placed in relation with the view. When set to \"before\" the view\n * will be resizable from the start (\"left\" or \"top\"). When set to \"after\" the view will be resizable from end (\"right\"\n * or \"bottom\"). Default is \"after\"\n */\nexport const ResizableView = ({\n  children,\n  size,\n  onResize,\n  resizerPlacement = \"after\",\n  ...props\n}: ResizableViewProps) => (\n  <ThreeViewSplitter\n    {...(resizerPlacement === \"after\"\n      ? { firstView: children, firstSize: size, onFirstResize: onResize }\n      : { lastView: children, lastSize: size, onLastResize: onResize })}\n    {...props}\n  />\n);\n","import React from \"react\";\nimport { ResizerProps } from \"./ResizerProps\";\nimport { useBottomResizer } from \"./useResizer\";\nimport { VerticalResizer } from \"./VerticalResizer\";\n\n/**\n * Handle for resizing views in a vertical layout, where the resizer is at the top side of the resizable view. i.e.\n * moving mouse to bottom/top will increase/decrease the height\n */\nexport const BottomResizer: React.FC<ResizerProps<\"vertical\">> = ({\n  onResize,\n  onResizeEnd,\n  onResizeStarted,\n  ...props\n}) => {\n  const { resizerProps } = useBottomResizer({\n    onResize,\n    onResizeEnd,\n    onResizeStarted,\n  });\n  return <VerticalResizer resizerProps={resizerProps} {...props} />;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { ResizerViewProps } from \"./useResizer\";\n\ntype HorizontalResizerViewProps = ResizerViewProps<\"horizontal\">;\n\nconst StyledHorizontalResizer = styled.div`\n  top: 0;\n  height: 100%;\n  width: 0;\n  position: relative;\n  z-index: 1; // to keep resizer on top of sibling views, in case they are non-static\n`;\n\nconst StyledHorizontalResizerArea = styled.div<{\n  handleSize: number;\n  cursor: HorizontalResizerViewProps[\"cursor\"];\n}>`\n  position: absolute;\n  cursor: ${({ cursor }) => `${cursor}-resize`};\n  width: ${({ handleSize }) => `calc(100% + ${handleSize}px)`};\n  height: 100%;\n  left: ${({ handleSize }) => `-${handleSize / 2}px`};\n`;\n\n/**\n * Handle for resizing views in a horizontal layout. It just handles the\n * movement event and calls onResize with the new size. It has nothing to do\n * with actually applying the size.\n */\nexport const HorizontalResizer: React.FC<HorizontalResizerViewProps> = ({\n  outerPadding = 10,\n  background,\n  size = 0,\n  cursor = \"col\",\n  children,\n  style = {},\n  resizerProps,\n}) => {\n  return (\n    <StyledHorizontalResizer\n      {...resizerProps}\n      style={{ ...style, background, width: size }}\n    >\n      {children}\n      <StyledHorizontalResizerArea handleSize={outerPadding} cursor={cursor} />\n    </StyledHorizontalResizer>\n  );\n};\n","import React from \"react\";\nimport { HorizontalResizer } from \"./HorizontalResizer\";\nimport { ResizerProps } from \"./ResizerProps\";\nimport { useLeftResizer } from \"./useResizer\";\n\n/**\n * Handle for resizing views in a horizontal layout, where the resizer is at the left side of the resizable view. i.e.\n * moving mouse to right/left will decrease/increase the width\n */\nexport const LeftResizer: React.FC<ResizerProps<\"horizontal\">> = ({\n  onResize,\n  onResizeEnd,\n  onResizeStarted,\n  ...props\n}) => {\n  const { resizerProps } = useLeftResizer({\n    onResize,\n    onResizeEnd,\n    onResizeStarted,\n  });\n  return <HorizontalResizer resizerProps={resizerProps} {...props} />;\n};\n","import React from \"react\";\nimport { HorizontalResizer } from \"./HorizontalResizer\";\nimport { ResizerProps } from \"./ResizerProps\";\nimport { useRightResizer } from \"./useResizer\";\n\n/**\n * Handle for resizing views in a horizontal layout, where the resizer is at the right side of the resizable view. i.e.\n * moving mouse to right/left will increase/decrease the width\n */\nexport const RightResizer: React.FC<ResizerProps<\"horizontal\">> = ({\n  onResize,\n  onResizeEnd,\n  onResizeStarted,\n  ...props\n}) => {\n  const { resizerProps } = useRightResizer({\n    onResize,\n    onResizeEnd,\n    onResizeStarted,\n  });\n  return <HorizontalResizer resizerProps={resizerProps} {...props} />;\n};\n","import React from \"react\";\nimport { ResizerProps } from \"./ResizerProps\";\nimport { useTopResizer } from \"./useResizer\";\nimport { VerticalResizer } from \"./VerticalResizer\";\n\n/**\n * Handle for resizing views in a vertical layout, where the resizer is at the top side of the resizable view. i.e.\n * moving mouse to bottom/top will decrease/increase the height\n */\nexport const TopResizer: React.FC<ResizerProps<\"vertical\">> = ({\n  onResize,\n  onResizeEnd,\n  onResizeStarted,\n  ...props\n}) => {\n  const { resizerProps } = useTopResizer({\n    onResize,\n    onResizeEnd,\n    onResizeStarted,\n  });\n  return <VerticalResizer resizerProps={resizerProps} {...props} />;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { ResizerViewProps } from \"./useResizer\";\n\ntype VerticalResizerViewProps = ResizerViewProps<\"vertical\">;\n\nconst StyledVerticalResizer = styled.div`\n  width: 100%;\n  height: 0;\n  position: relative;\n  z-index: 1; // to keep resizer on top of sibling views, in case they are non-static\n`;\n\nconst StyledVerticalResizerArea = styled.div<{\n  handleSize: number;\n  cursor: VerticalResizerViewProps[\"cursor\"];\n}>`\n  position: absolute;\n  cursor: ${({ cursor }) => `${cursor}-resize`};\n  height: ${({ handleSize }) => `calc(100% + ${handleSize}px)`};\n  width: 100%;\n  top: ${({ handleSize }) => `-${handleSize / 2}px`};\n`;\n\n/**\n * Handle for resizing views in a vertical layout. It just handles the\n * movement event and calls onResize with the new size. It has nothing to do\n * with actually applying the size.\n */\nexport const VerticalResizer: React.FC<VerticalResizerViewProps> = ({\n  outerPadding = 10,\n  background,\n  size = 0,\n  cursor = \"row\",\n  resizerProps,\n  children,\n  style = {},\n}) => (\n  <StyledVerticalResizer\n    {...resizerProps}\n    style={{ ...style, background, height: size }}\n  >\n    {children}\n    <StyledVerticalResizerArea handleSize={outerPadding} cursor={cursor} />\n  </StyledVerticalResizer>\n);\n","import { useMove } from \"../utils/interaction-utils/useMove\";\nimport { ResizerProps } from \"./ResizerProps\";\n\ntype UseResizerProps = Pick<\n  ResizerProps,\n  \"onResize\" | \"onResizeEnd\" | \"onResizeStarted\"\n>;\n\nexport type ResizerViewProps<O = \"horizontal\" | \"vertical\"> = Omit<\n  ResizerProps<O>,\n  \"onResize\" | \"onResizeEnd\" | \"onResizeStarted\"\n> &\n  ReturnType<typeof useResizer>;\n\nconst useResizer = (\n  orientation: \"horizontal\" | \"vertical\",\n  invert: boolean,\n  { onResizeStarted, onResize, onResizeEnd }: UseResizerProps\n) => {\n  const props = useMove({\n    dragThreshold: 0,\n    onMoveStart: () => onResizeStarted() || 0,\n    onMoveEnd: () => onResizeEnd?.(),\n    onMove: ({ movement, startState }) =>\n      onResize(\n        startState +\n          (invert ? -1 : +1) *\n            movement[orientation === \"horizontal\" ? \"x\" : \"y\"]\n      ),\n  });\n  return {\n    resizerProps: props,\n  };\n};\n\nexport const useLeftResizer = (props: UseResizerProps) => {\n  return useResizer(\"horizontal\", true, props);\n};\n\nexport const useRightResizer = (props: UseResizerProps) => {\n  return useResizer(\"horizontal\", false, props);\n};\n\nexport const useTopResizer = (props: UseResizerProps) => {\n  return useResizer(\"vertical\", true, props);\n};\n\nexport const useBottomResizer = (props: UseResizerProps) => {\n  return useResizer(\"vertical\", false, props);\n};\n","import React, { ComponentProps, useState } from \"react\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport { useControlledState } from \"@react-stately/utils\";\n\nimport { styled } from \"@intellij-platform/core/styled\";\nimport {\n  ActionDefinition,\n  ActionsProvider,\n  CommonActionId,\n  useGetActionShortcut,\n} from \"@intellij-platform/core/ActionSystem\";\nimport { Input, InputProps } from \"@intellij-platform/core/InputField\";\nimport {\n  AutoHoverPlatformIcon,\n  PlatformIcon,\n} from \"@intellij-platform/core/Icon\";\nimport { Menu, MenuTrigger } from \"@intellij-platform/core/Menu\";\nimport { Item } from \"@intellij-platform/core/Collections\";\nimport { ActionTooltip, TooltipTrigger } from \"@intellij-platform/core/Tooltip\";\n\nexport interface SearchInputProps\n  extends Omit<InputProps, \"onSubmit\" | \"onChange\"> {\n  /**\n   * Search history to be shown as a menu when the search icon is pressed.\n   */\n  searchHistory?: Array<string>;\n  /**\n   * The content of \"show history\" button tooltip, and the corresponding action title.\n   * @default \"Recent Search\"\n   */\n  historyButtonTitle?: string;\n  /**\n   * Called when the search input is cleared by either clear button or `Escape` key.\n   * `onChange` is also called with an empty string, whenever the input is cleared,\n   * so there is no need for updating the state using `onClear`, when the value is controlled.\n   *\n   * @param clearedValue the value before clearing.\n   */\n  onClear?: (clearedValue: string) => void;\n  /**\n   * Called when the search is submitted by pressing `Enter`\n   * @param value submitted text\n   */\n  onSubmit?: (value: string) => void;\n  /**\n   * Controlled value of the search input\n   */\n  value?: string;\n  /**\n   * Default value of the search input, used for initialization when value is uncontrolled.\n   */\n  defaultValue?: string;\n  /**\n   * Called when the value is changed.\n   */\n  onChange?: (value: string) => void;\n  /**\n   * Called when a history item is selected. `onChange` is called with the selected text, so\n   * there is no need for updating the state using `onHistoryItemSelected`, when the value is controlled.\n   *\n   * @param value text selected from history.\n   * @param previousValue the value of the input before the history item was selected.\n   */\n  onHistoryItemSelected?: (value: string, previousValue: string) => void;\n}\n\nconst StyledInput = styled(Input)`\n  input[type=\"search\"] {\n    -webkit-appearance: none;\n    &::-webkit-search-cancel-button {\n      -webkit-appearance: none;\n    }\n    &::-webkit-search-decoration {\n      -webkit-appearance: none;\n    }\n  }\n`;\n\n/**\n * A wrapper around {@link Input} with a few additions:\n * - A Search icon, added as an {@link InputProps#addonBefore addonBefore}.\n * - A clear button, added as an {@link InputProps#addonAfter addonAfter}, when the input has value.\n *   {@link SearchInputProps#onClear onClear} is called when the clear button is clicked.\n * - A list of search queries shown as a menu, when the search icon is clicked,\n *   if {@link SearchInputProps#searchHistory searchHistory} is provided.\n * - An action provided on the input element, to open the search history via\n *   {@link CommonActionId.SHOW_SEARCH_HISTORY} shortcut.\n * - Search submission callback ({@link SearchInputProps#onSubmit onSubmit}) called when search is submitted by pressing Enter\n *\n * {@link InputProps#onChange onChange} and {@link InputProps#onSubmit onSubmit} props are also different in SearchInput, compared to\n * the corresponding props of the native input.\n *\n * Caveat: If the width is not set (either explicitly or via the entailing layout), the width of the input will change when clear button shows/hides.\n *\n * @see Input\n * @see InputField\n */\nexport const SearchInput = React.forwardRef(function SearchInput(\n  {\n    addonBefore,\n    addonAfter,\n    searchHistory,\n    onClear,\n    onSubmit,\n    onHistoryItemSelected,\n    historyButtonTitle = \"Recent Search\",\n    value: valueProp,\n    defaultValue = \"\",\n    onChange,\n    type = \"search\",\n    inputRef: inputRefProp,\n    ...props\n  }: SearchInputProps,\n  forwardedRef: React.Ref<HTMLDivElement>\n) {\n  const [value, setValue] = useControlledState(\n    valueProp!,\n    defaultValue,\n    onChange!\n  );\n  const inputContainerRef = useObjectRef(forwardedRef);\n  const inputRef = useObjectRef(inputRefProp);\n  const [isSearchHistoryOpen, setSearchHistoryOpen] = useState(false);\n  const showSearchHistoryAction: ActionDefinition = {\n    id: CommonActionId.SHOW_SEARCH_HISTORY,\n    title: historyButtonTitle,\n    actionPerformed: () => {\n      setSearchHistoryOpen(true);\n    },\n  };\n  // TODO: rename HelpTooltip, ActionTooltip, etc. to Tooltip.Action Tooltip.Help, then add ActionTooltip in action\n  //  components, and use that instead of the more low-level API used here.\n  const getShortcut = useGetActionShortcut();\n  const searchIcon = searchHistory ? (\n    <MenuTrigger\n      isOpen={isSearchHistoryOpen}\n      onOpenChange={setSearchHistoryOpen}\n      positioningTargetRef={inputContainerRef}\n      renderMenu={({ menuProps }) => (\n        <Menu\n          {...menuProps}\n          autoFocus=\"first\"\n          onAction={(key) => {\n            const historyItemText =\n              searchHistory[parseInt(`${key}`.split(\"_\")[0])];\n            if (historyItemText !== undefined) {\n              setValue(historyItemText);\n              onHistoryItemSelected?.(historyItemText, value);\n              inputRef.current?.focus();\n            }\n          }}\n        >\n          {searchHistory.map((historyItem, index) => (\n            <Item key={`${index}_${historyItem}`}>{historyItem}</Item>\n          ))}\n        </Menu>\n      )}\n    >\n      {(menuTriggerProps, ref) => (\n        <TooltipTrigger\n          tooltip={\n            <ActionTooltip\n              actionName={historyButtonTitle}\n              shortcut={getShortcut(CommonActionId.SHOW_SEARCH_HISTORY)}\n            />\n          }\n        >\n          {(tooltipTriggerProps) => (\n            <PlatformIcon\n              {...mergeProps(tooltipTriggerProps, menuTriggerProps)}\n              ref={ref}\n              icon=\"actions/searchWithHistory.svg\"\n              role=\"button\"\n              aria-label={historyButtonTitle}\n            />\n          )}\n        </TooltipTrigger>\n      )}\n    </MenuTrigger>\n  ) : (\n    <PlatformIcon icon=\"actions/search.svg\" />\n  );\n  const clear = () => {\n    setValue(\"\");\n    onClear?.(value);\n  };\n  const inputProps = mergeProps<ComponentProps<typeof Input>[]>(props, {\n    ref: inputContainerRef,\n    inputRef,\n    value,\n    type,\n    onChange: (event) => {\n      setValue(event.target.value);\n    },\n    addonBefore: (\n      <>\n        {searchIcon}\n        {addonBefore}\n      </>\n    ),\n    addonAfter: (\n      <>\n        {value && (\n          <AutoHoverPlatformIcon\n            onClick={clear}\n            role=\"button\"\n            aria-label=\"Clear search\"\n            icon=\"actions/close\"\n            hoverIcon=\"actions/closeHovered\"\n          />\n        )}\n        {addonAfter}\n      </>\n    ),\n    onKeyDown: (event) => {\n      if (event.repeat) {\n        return;\n      }\n      if (event.key === \"Enter\") {\n        onSubmit?.(event.currentTarget.value);\n      } else if (event.key === \"Escape\") {\n        clear();\n      }\n    },\n  });\n  if (searchHistory) {\n    return (\n      <ActionsProvider actions={[showSearchHistoryAction]}>\n        {({ shortcutHandlerProps }) => (\n          <StyledInput {...mergeProps(inputProps, shortcutHandlerProps)} />\n        )}\n      </ActionsProvider>\n    );\n  }\n  return <StyledInput {...inputProps} />;\n});\n","import React, { useRef } from \"react\";\nimport { useButton } from \"@react-aria/button\";\nimport {\n  AutoHoverPlatformIcon,\n  PlatformIcon,\n} from \"@intellij-platform/core/Icon\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\n\nexport interface SpeedSearchInputProps {\n  children: string | undefined;\n  match?: boolean;\n  active: boolean | undefined;\n  clear: () => void;\n}\n\nconst StyledSearchIcon = styled(PlatformIcon)`\n  margin-right: 0.25rem;\n`;\n\nconst StyledSpeedSearchInput = styled.span<{ noMatch?: boolean }>`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  background: ${({ theme, noMatch }) =>\n    noMatch\n      ? theme.color(\n          \"SearchField.errorBackground\",\n          theme.dark ? \"#743A3A\" : \"#ffcccc\"\n        )\n      : theme.color(\n          \"TextField.background\"\n        )}; // fallback logic not checked with the ref impl\n  color: ${({ theme }) =>\n    theme.color(\n      \"TextField.foreground\" as UnknownThemeProp<\"TextField.foreground\">\n    )}; // fallback logic not checked with the ref impl\n  height: 1.5rem; // 24px, JBTextField COMPACT_HEIGHT\n  padding: 0.125rem 0.375rem;\n  border: 1px solid ${({ theme }) => theme.getOutlineColor(true, false)};\n  border-radius: ${({ theme }) =>\n    ((theme.value(\"Component.arc\") as number) ?? 5) / 2}px;\n`;\nconst StyledSearchText = styled.span`\n  flex: 1;\n  font-size: 0.91em; // RelativeFont.SMALL\n`;\n\n/**\n * An input field to be rendered to show the filter value in speed search in menus and similar speedSearch-enabled\n * components.\n * @see SpeedSearchPopup\n */\nexport const SpeedSearchInput = React.forwardRef<\n  HTMLElement,\n  SpeedSearchInputProps\n>(({ active, match, children, clear }, ref) => {\n  const clearButtonRef = useRef<HTMLElement>(null);\n  const { buttonProps } = useButton(\n    {\n      elementType: \"span\",\n      \"aria-label\": \"Clear search\",\n      excludeFromTabOrder: true,\n      // @ts-expect-error: preventFocusOnPress is not defined in public API of useButton\n      preventFocusOnPress: true,\n      onPress: clear,\n    },\n    clearButtonRef\n  );\n\n  // Temporary styled components until SearchInput is implemented\n  return active ? (\n    <StyledSpeedSearchInput ref={ref} noMatch={!match}>\n      <StyledSearchIcon icon={\"actions/search\"} />\n      <StyledSearchText>\n        {(children || \"\").replace(/ /g, \"\\u00A0\")}\n      </StyledSearchText>\n      {children && (\n        <AutoHoverPlatformIcon\n          {...buttonProps}\n          ref={clearButtonRef}\n          icon=\"actions/close\"\n          hoverIcon=\"actions/closeHovered\"\n        />\n      )}\n    </StyledSpeedSearchInput>\n  ) : null;\n});\n","import { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport React from \"react\";\nimport { styled } from \"../styled\";\n\nexport interface SpeedSearchPopupProps {\n  children: string | undefined;\n  match?: boolean;\n  active: boolean | undefined;\n}\n\nconst StyledSearchIcon = styled(PlatformIcon)`\n  margin-right: 10px;\n  vertical-align: middle;\n`;\n\n/**\n * The little popup view shown in the top left corner of list, tree, etc., which shows the search\n * query.\n * @see SpeedSearchInput\n */\nexport const SpeedSearchPopup = React.forwardRef<\n  HTMLElement,\n  SpeedSearchPopupProps\n>(({ active, match, children }, ref) =>\n  active ? (\n    <StyledSpeedSearchPopup ref={ref} noMatch={!match}>\n      <StyledSearchIcon icon={\"actions/search\"} />\n      {(children || \"\").replace(/ /g, \"\\u00A0\")}\n    </StyledSpeedSearchPopup>\n  ) : null\n);\n\nconst StyledSpeedSearchPopup = styled.span<{ noMatch?: boolean }>`\n  // ref: https://github.com/JetBrains/intellij-community/blob/e3c7d96daba1d5d84d5650bde6c220aed225bfda/platform/platform-impl/src/com/intellij/ui/SpeedSearchBase.java#L53-L53\n  box-sizing: border-box;\n  position: absolute;\n  background: ${({ theme }) =>\n    theme.color(\n      \"SpeedSearch.background\",\n      theme.dark ? \"rgb(111,111,111)\" : \"#fff\"\n    )};\n  border: 1px solid\n    ${({ theme }) =>\n      theme.color(\n        \"SpeedSearch.borderColor\",\n        theme.dark ? \"rgb(64, 64, 64)\" : \"rgb(192, 192, 192)\"\n      )};\n  color: ${({ noMatch, theme }) =>\n    noMatch\n      ? theme.color(\"SpeedSearch.errorForeground\", theme.commonColors.red)\n      : theme.color(\n          \"SpeedSearch.foreground\",\n          theme.commonColors.tooltipForeground\n        )};\n  z-index: 1;\n  padding: 3px 7px;\n  height: 25px;\n  line-height: 1.2;\n  transform: translateY(-100%);\n`;\n","import React, { useRef } from \"react\";\n\nfunction isTypeableElement(elem: HTMLElement): boolean {\n  const nonTypeableInputTypes: Array<HTMLInputElement[\"type\"]> = [\n    \"checkbox\",\n    \"radio\",\n    \"button\",\n  ];\n  return (\n    elem.isContentEditable ||\n    (elem instanceof HTMLInputElement &&\n      !nonTypeableInputTypes.includes(elem.type)) ||\n    elem instanceof HTMLTextAreaElement\n  );\n}\n\n/**\n * Main use case is for a list of item, which can have keyboard focus, be filterable and capture\n * typing if the corresponding keyboard events are not happening on an inner element (like an input)\n * that already handles typing.\n * @param value\n * @param onChange\n * TODO: add support for removing word by word by alt+backspace like native text fields.\n * TODO: add support for removing the whole content by command/ctrl+backspace.\n */\nexport function useGhostInput({\n  value,\n  onChange,\n}: {\n  value: string;\n  onChange: (value: string) => void;\n}) {\n  const valueRef = useRef(value);\n  valueRef.current = value;\n  const onKeyDown = (event: React.KeyboardEvent | KeyboardEvent) => {\n    if (\n      !event.ctrlKey &&\n      !event.altKey &&\n      !event.metaKey &&\n      (!(event.target instanceof HTMLElement) ||\n        !isTypeableElement(event.target))\n    ) {\n      if (event.key.length === 1) {\n        // Seems reasonable to prevent default here generally, but the specific case this is added for is the space key,\n        // scrolling the page.\n        event.preventDefault();\n        return onChange(`${valueRef.current}${event.key}`);\n      }\n      if (event.key === \"Backspace\") {\n        const sliceEnd = event.metaKey ? 0 : -1;\n        onChange(valueRef.current.slice(0, sliceEnd));\n      }\n    }\n  };\n  return { onKeyDown } as const;\n}\n","import { useGhostInput } from \"./useGhostInput\";\nimport { useFocusWithin, useKeyboard } from \"@react-aria/interactions\";\nimport { useControlledState } from \"@react-stately/utils\";\nimport { ControlledStateProps } from \"../type-utils\";\nimport React, { RefObject } from \"react\";\nimport { hasAnyModifier } from \"@intellij-platform/core/utils/keyboard-utils\";\n\nexport interface SpeedSearchState {\n  /**\n   * Whether speed search is active. Speed search becomes active when the user starts to type and becomes inactive\n   * when Escape is pressed, or when the speed search container is blurred and `keepSearchActiveOnBlur` is false.\n   * Whenever speed search becomes inactive, search text is also cleared.\n   * Note that speed search can be active while search term is empty.\n   */\n  active: boolean;\n  setActive: (value: boolean) => void;\n  searchTerm: string;\n  setSearchTerm: (value: string) => void;\n  /**\n   * clears search term and sets active to false\n   */\n  clear: () => void;\n}\n\nexport interface SpeedSearchStateProps\n  extends ControlledStateProps<{\n    searchTerm: string;\n    isSearchActive: boolean;\n  }> {}\n\nexport function useSpeedSearchState(\n  props: SpeedSearchStateProps\n): SpeedSearchState {\n  const [active, setActive] = useControlledState(\n    props.isSearchActive!,\n    props.defaultIsSearchActive ?? false,\n    props.onIsSearchActiveChange!\n  );\n  const [searchTerm, setSearchTerm] = useControlledState(\n    props.searchTerm!,\n    props.defaultSearchTerm || \"\",\n    props.onSearchTermChange!\n  );\n\n  return {\n    active,\n    searchTerm,\n    setActive,\n    setSearchTerm,\n    clear: () => {\n      setSearchTerm(\"\");\n      setActive(false);\n    },\n  };\n}\n\nexport interface SpeedSearchProps {\n  keepSearchActiveOnBlur?: boolean | ((e: React.FocusEvent) => boolean);\n}\n\n/**\n * TODO: description\n * IMPORTANT: making the container element focusable is not a part of this hook. But it's a prerequisite for it to work.\n * Previously, a tabIndex:-1 was passed as a container prop, but it turns out it's not that simple. For collections for\n * example we usually want tab index to be 0 once it's not focused and then when an item is focused, we want it to be\n * -1, and such kind of logics are handled in their respective hooks. So, making the container focusable and how to do\n * it is NOT this hook's responsibility anymore.\n */\nexport function useSpeedSearch(\n  { keepSearchActiveOnBlur }: SpeedSearchProps,\n  { searchTerm, active, setActive, setSearchTerm }: SpeedSearchState,\n  ref: RefObject<HTMLElement>\n) {\n  const { onKeyDown: ghostInputKeydown } = useGhostInput({\n    value: searchTerm,\n    onChange: (value) => {\n      const trimmedValue = value.trimStart();\n      setSearchTerm(trimmedValue);\n      if (!active && trimmedValue !== \"\") {\n        setActive(true);\n      }\n    },\n  });\n  const clear = () => {\n    setSearchTerm(\"\");\n    setActive(false);\n  };\n\n  const {\n    keyboardProps: { onKeyDown, onKeyUp },\n  } = useKeyboard({\n    onKeyDown: (e) => {\n      if (!ref.current?.contains(e.target as HTMLElement)) {\n        // In case events are propagated through portals\n        return;\n      }\n      if (e.key === \"a\" && (e.metaKey || e.ctrlKey)) {\n        e.preventDefault();\n      }\n      if (e.key === \"Escape\") {\n        clear();\n      } else {\n        ghostInputKeydown(e);\n      }\n      /**\n       * In the reference impl, at least some action shortcuts are allowed\n       * while the search is active. But actions with some other shortcuts\n       * (like Delete) are not triggered while the speed search is active\n       * the current condition below is not 100% matching the reference impl,\n       * but seems to be good enough for now.\n       */\n      if (!active || hasAnyModifier(e)) {\n        e.continuePropagation();\n      }\n    },\n  });\n\n  const {\n    focusWithinProps: { onFocus, onBlur },\n  } = useFocusWithin({\n    onBlurWithin: (event) => {\n      if (\n        !(typeof keepSearchActiveOnBlur === \"function\"\n          ? keepSearchActiveOnBlur(event)\n          : keepSearchActiveOnBlur)\n      ) {\n        clear();\n      }\n    },\n  });\n\n  return {\n    containerProps: {\n      onFocus,\n      onBlur,\n      onKeyDown,\n      onKeyUp,\n    },\n  };\n}\n","import React from \"react\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\n\nexport interface StatusBarProps {\n  left: React.ReactNode;\n  right: React.ReactNode;\n}\n\n/**\n * Status bar rendered at the bottom of the main window. In the reference implementation, there are three slots for\n * content: left, right and center. It doesn't seem center is really necessary, so only left and right are supported\n * for now.\n * @param left content on the left side of the status bar.\n * @param right content on the right side of the status bar. Typically, a bunch of {@link StatusBarWidget}s\n */\nexport const StatusBar = ({\n  left,\n  right,\n}: StatusBarProps): React.ReactElement => {\n  return (\n    <StyledStatusBar\n      onMouseDown={(e) => {\n        // stop focus from going out of the currently focused element, when status bar is clicked\n        // might be too intrusive to prevent default unconditionally :-? Also, it may make sense for it to be an option\n        e.preventDefault();\n      }}\n    >\n      <StyledStatusBarLeft>{left}</StyledStatusBarLeft>\n      <StyledStatusBarRight>{right}</StyledStatusBarRight>\n    </StyledStatusBar>\n  );\n};\n\nconst StyledStatusBar = styled.div`\n  box-sizing: border-box;\n  padding: 0 0.25rem;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between; // because there is left and right sides\n  background-color: ${({ theme }) =>\n    theme.color(\n      \"StatusBar.background\" as UnknownThemeProp<\"StatusBar.background\">,\n      theme.color(\"Panel.background\" as UnknownThemeProp<\"Panel.background\">)\n    ) || \"#fff\"};\n  color: ${({ theme }) =>\n    theme.color(\n      \"StatusBar.Widget.foreground\" as UnknownThemeProp<\"StatusBar.Widget.foreground\">,\n      theme.commonColors.labelForeground\n    )};\n  border-top: 1px solid\n    ${({ theme }) => theme.color(\"StatusBar.borderColor\", \"rgb(145, 145, 145)\")};\n  height: calc(1.25rem + 1px /* border*/);\n  line-height: 1.25rem;\n  font-size: 0.656rem; // not verified\n  cursor: default;\n`;\n\nconst StyledStatusBarSection = styled.div`\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n`;\n\nconst StyledStatusBarRight = styled(StyledStatusBarSection)`\n  flex-shrink: 0;\n`;\nconst StyledStatusBarLeft = styled(StyledStatusBarSection)`\n  flex-shrink: 1;\n  min-width: 0;\n  overflow: hidden;\n`;\n","import React, { ForwardedRef } from \"react\";\nimport { PressProps, usePress } from \"@react-aria/interactions\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport { useFocusable } from \"@react-aria/focus\";\n\nexport interface StatusBarWidgetProps extends PressProps {\n  label?: React.ReactNode;\n  icon?: React.ReactNode;\n}\n\n/**\n * Status bar button (aka widget), with the right hover and pressed appearance.\n * It doesn't get focused when pressed, and is excluded from tab order.\n * Disabled style is not couldn't be found, so it's skipped at the moment.\n */\nexport const StatusBarWidget = React.forwardRef(function StatusBarWidget(\n  props: StatusBarWidgetProps,\n  forwardedRef: ForwardedRef<HTMLSpanElement>\n) {\n  const ref = useObjectRef(forwardedRef);\n  // Maybe it's better for a11y to use useButton, or at least use button element?\n  const { pressProps, isPressed } = usePress({\n    ref,\n    ...props,\n    preventFocusOnPress: true,\n  });\n  const { focusableProps } = useFocusable({ excludeFromTabOrder: true }, ref);\n\n  const StyledWrapper = props.label\n    ? StyledStatusBarWidget\n    : StyledStatusBarIconWidget;\n  return (\n    <StyledWrapper\n      {...mergeProps(pressProps, focusableProps)}\n      className={isPressed ? \"pressed\" : \"\"}\n      ref={ref}\n    >\n      {props.icon}\n      {props.icon && props.label && (\n        <>&nbsp;</> //not the nicest way to handle spacing!\n      )}\n      {props.label}\n    </StyledWrapper>\n  );\n});\n\nconst StyledStatusBarWidget = styled.span`\n  display: inline-flex;\n  align-items: center;\n  padding: ${({ theme }) =>\n    theme.inset(\n      \"StatusBar.Widget.widgetInsets\" as UnknownThemeProp<\"StatusBar.Widget.widgetInsets\">\n    ) ?? \"0 0.375rem\"};\n  height: 1.125rem;\n  white-space: nowrap;\n  &:hover {\n    background-color: ${({ theme }) =>\n      theme.color(\n        \"StatusBar.Widget.hoverBackground\" as UnknownThemeProp<\"StatusBar.Widget.hoverBackground\">,\n        theme.color(\"ActionButton.hoverBackground\", \"#dfdfdf\")\n      )};\n    color: ${({ theme }) =>\n      theme.color(\n        \"StatusBar.Widget.hoverForeground\" as UnknownThemeProp<\"StatusBar.Widget.hoverForeground\">,\n        theme.commonColors.labelForeground\n      )};\n  }\n  &.pressed {\n    background-color: ${({ theme }) =>\n      theme.color(\n        \"StatusBar.Widget.pressedBackground\" as UnknownThemeProp<\"StatusBar.Widget.pressedBackground\">,\n        theme.color(\"ActionButton.pressedBackground\", \"#cfcfcf\")\n      )};\n    color: ${({ theme }) =>\n      theme.color(\n        \"StatusBar.Widget.pressedForeground\" as UnknownThemeProp<\"StatusBar.Widget.pressedForeground\">,\n        theme.commonColors.labelForeground\n      )};\n  }\n`;\n\nconst StyledStatusBarIconWidget = styled(StyledStatusBarWidget)`\n  padding: ${({ theme }) =>\n    theme.inset(\n      \"StatusBar.Widget.widgetInsets\" as UnknownThemeProp<\"StatusBar.Widget.widgetInsets\">\n    ) ?? \"0 0.25rem\"};\n`;\n","import React from \"react\";\nimport { styled } from \"./styled\";\n\ntype SeparatorUI = {\n  STRIPE_INDENT: number;\n  STRIPE_WIDTH: number;\n};\n\n// based on implementation in com.intellij.ide.ui.laf.darcula.ui.DarculaSeparatorUI, which seems to be used for all themes\nconst DarculaSeparatorUI: SeparatorUI = {\n  STRIPE_INDENT: 1,\n  STRIPE_WIDTH: 1,\n};\n\nconst defaultSize =\n  2 * DarculaSeparatorUI.STRIPE_INDENT + DarculaSeparatorUI.STRIPE_WIDTH;\n\nexport const StyledSeparator = styled.hr(({ theme }) => ({\n  backgroundColor: theme.color(\n    \"Separator.separatorColor\",\n    theme.dark ? \"#cdcdcd\" : \"#515151\"\n  ),\n  backgroundClip: \"content-box\",\n  boxSizing: \"border-box\",\n  margin: 0,\n  border: \"none\",\n  flexShrink: 0,\n}));\n\nexport const StyledHorizontalSeparator = styled(StyledSeparator)`\n  height: inherit; // should it be auto?\n  padding: 0 ${DarculaSeparatorUI.STRIPE_INDENT}px;\n  width: ${defaultSize}px;\n`;\nexport const StyledVerticalSeparator = styled(StyledSeparator)`\n  width: auto;\n  padding: ${DarculaSeparatorUI.STRIPE_INDENT}px 0;\n  height: ${defaultSize}px;\n`;\n","import { TabCloseButton } from \"@intellij-platform/core/Tabs/TabCloseButton\";\nimport { TabContentLayout } from \"@intellij-platform/core/Tabs/TabContentLayout\";\nimport React from \"react\";\n\nexport const DebuggerTabContent = ({\n  icon,\n  title,\n  closeButton,\n}: {\n  icon: React.ReactNode;\n  title: React.ReactNode;\n  /**\n   * Close button for the tab. Use {@link TabCloseButton} to render the close button\n   * for the tab.\n   *\n   * @example\n   * ```tsx\n   * <DebuggerTabContent\n   *   closeButton={\n   *     <TooltipTrigger\n   *       tooltip={<ActionTooltip actionName=\"Close Tab\" shortcut=\"^⇧F4\" />}\n   *     >\n   *       <TabCloseButton onPress={}></TabCloseButton>\n   *     </TooltipTrigger>\n   *   }\n   * />\n   * ```\n   */\n  closeButton?: React.ReactElement;\n}) => {\n  return (\n    <TabContentLayout startIcon={icon} title={title} endIcon={closeButton} />\n  );\n};\n","import { Theme } from \"@intellij-platform/core/Theme\";\nimport { styled } from \"@intellij-platform/core/styled\";\n\nimport { StyledDefaultTab } from \"@intellij-platform/core/Tabs/StyledDefaultTab\";\nimport {\n  getTabThemeStyles,\n  TabTheme,\n} from \"@intellij-platform/core/Tabs/TabTheme\";\n\nexport const debuggerTabTheme = ({ theme }: { theme: Theme }): TabTheme => ({\n  underlineHeight: theme.value<number>(\"DebuggerTabs.underlineHeight\") ?? 2,\n  underlinedTabBackground: theme.color(\"DebuggerTabs.underlinedTabBackground\"),\n});\nexport const StyledDebuggerTab = styled(StyledDefaultTab)`\n  ${({ theme }) => getTabThemeStyles(debuggerTabTheme({ theme }))};\n`;\n","import { Tabs, TabsProps } from \"@intellij-platform/core/Tabs/Tabs\";\nimport { StyledDebuggerTab } from \"./StyledDebuggerTab\";\nimport React from \"react\";\n\ntype DebuggerTabsProps<T extends object> = Omit<\n  TabsProps<T>,\n  \"TabComponent\" | \"focusable\"\n>;\n\nexport const DebuggerTabs = <T extends object>(props: DebuggerTabsProps<T>) => (\n  <Tabs {...props} TabComponent={StyledDebuggerTab} focusable={false} />\n);\n","import React from \"react\";\nimport { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport { TabCloseButton } from \"@intellij-platform/core/Tabs/TabCloseButton\";\nimport {\n  TabContentLayout,\n  TabItemLayoutProps,\n} from \"@intellij-platform/core/Tabs/TabContentLayout\";\nimport { ActionTooltip, TooltipTrigger } from \"@intellij-platform/core/Tooltip\";\nimport { BareButton } from \"@intellij-platform/core/Button\";\n\ninterface EditorTabContentProps {\n  icon: React.ReactNode;\n  title: React.ReactNode;\n  /**\n   * Close button, shown in place of \"pin\" button if not pinned. Use {@link TabCloseButton} to render the close button\n   * for the tab.\n   *\n   * @example\n   * ```tsx\n   * <EditorTabContent\n   *   closeButton={\n   *     <TooltipTrigger\n   *       tooltip={<ActionTooltip actionName=\"Close Tab\" shortcut=\"^⇧F4\" />}\n   *     >\n   *       <TabCloseButton onPress={}></TabCloseButton>\n   *     </TooltipTrigger>\n   *   }\n   * />\n   * ```\n   */\n  closeButton?: React.ReactElement;\n  onUnpin?: () => void;\n  pinned?: boolean;\n  containerProps?: TabItemLayoutProps[\"containerProps\"];\n}\n/**\n * For rendering the content of Editor tabs. supports for file icon which is shown on the left and close or unpin\n * button shown on the right.\n */\nexport const EditorTabContent = ({\n  icon,\n  title,\n  closeButton,\n  onUnpin,\n  pinned,\n  containerProps,\n}: EditorTabContentProps) => {\n  return (\n    <TabContentLayout\n      startIcon={icon}\n      title={title}\n      containerProps={containerProps}\n      endIcon={\n        pinned ? (\n          <TooltipTrigger tooltip={<ActionTooltip actionName=\"Unpin Tab\" />}>\n            <BareButton\n              onPress={onUnpin}\n              excludeFromTabOrder\n              preventFocusOnPress\n            >\n              <PlatformIcon icon=\"actions/pinTab\" />\n            </BareButton>\n          </TooltipTrigger>\n        ) : (\n          closeButton\n        )\n      }\n    />\n  );\n};\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { Theme, UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { StyledDefaultTab } from \"@intellij-platform/core/Tabs/StyledDefaultTab\";\nimport {\n  getTabThemeStyles,\n  TabTheme,\n} from \"@intellij-platform/core/Tabs/TabTheme\";\n\nexport const editorTabTheme = ({ theme }: { theme: Theme }): TabTheme => ({\n  borderColor: theme.color(\"EditorTabs.borderColor\"),\n  underlineHeight: theme.value<number>(\"EditorTabs.underlineHeight\"),\n  background: theme.color(\"EditorTabs.background\"),\n  underlinedTabInactiveBackground: theme.color(\n    \"EditorTabs.underlinedTabBackground\" // that's correctly not underlinedTabInactiveBackground!\n  ), // TODO: use EditorColorsScheme when available\n  underlinedTabBackground: theme.color(\"EditorTabs.underlinedTabBackground\"), // TODO: use EditorColorsScheme when available\n  hoverInactiveBackground: theme.color(\n    \"EditorTabs.hoverInactiveBackground\" as UnknownThemeProp<\"EditorTabs.hoverInactiveBackground\">\n  ),\n  hoverBackground: theme.color(\"EditorTabs.hoverBackground\"),\n  inactiveUnderlineColor: theme.color(\"EditorTabs.inactiveUnderlineColor\"), // TODO: use EditorColorsScheme when available\n  underlineColor: theme.color(\"EditorTabs.underlineColor\"), // TODO: use EditorColorsScheme when available\n\n  underlinedTabInactiveForeground: theme.color(\n    \"EditorTabs.underlinedTabForeground\" // that's correctly not underlinedTabInactiveForeground!\n  ), // TODO: use EditorColorsScheme when available\n  underlinedTabForeground: theme.color(\"EditorTabs.underlinedTabForeground\"), // TODO: use EditorColorsScheme when available\n});\nexport const StyledEditorTab = styled(StyledDefaultTab)`\n  font-size: 0.7rem;\n  ${({ theme }) => getTabThemeStyles(editorTabTheme({ theme }))};\n`;\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { getTabsThemeStyles } from \"@intellij-platform/core/Tabs/TabTheme\";\nimport { StyledDefaultTabs } from \"@intellij-platform/core/Tabs/StyledDefaultTabs\";\nimport { editorTabTheme } from \"./StyledEditorTab\";\n\nexport const StyledEditorTabs = styled(StyledDefaultTabs)`\n  ${({ theme }) => getTabsThemeStyles(editorTabTheme({ theme }))};\n`;\n","import { Tabs, TabsProps } from \"@intellij-platform/core/Tabs/Tabs\";\nimport { StyledEditorTab } from \"./StyledEditorTab\";\nimport { StyledEditorTabs } from \"./StyledEditorTabs\";\nimport React from \"react\";\n\nexport type EditorTabsProps<T extends object> = Omit<\n  TabsProps<T>,\n  \"TabComponent\" | \"TabsComponent\" | \"focusable\"\n>;\n\nexport const EditorTabs = <T extends object>(props: EditorTabsProps<T>) => (\n  <Tabs\n    {...props}\n    TabComponent={StyledEditorTab}\n    TabsComponent={StyledEditorTabs}\n    focusable={false}\n  />\n);\n","import { getTabThemeStyles } from \"./TabTheme\";\nimport { styled } from \"../styled\";\nimport { Theme, UnknownThemeProp } from \"../Theme\";\n\nexport type StyledTabProps = {\n  selected?: boolean;\n  disabled?: boolean;\n  active?: boolean;\n};\n\nconst defaultTabTheme = ({ theme }: { theme: Theme }) =>\n  getTabThemeStyles({\n    underlineHeight: theme.value<number>(\"DefaultTabs.underlineHeight\") ?? 3,\n    inactiveUnderlineColor: theme.color(\n      \"DefaultTabs.inactiveUnderlineColor\",\n      theme.dark ? \"#747a80\" : \"#9ca7b8\"\n    ),\n    underlineColor: theme.color(\n      \"DefaultTabs.underlineColor\",\n      theme.dark ? \"#4A88C7\" : \"#4083C9\"\n    ),\n\n    underlinedTabInactiveForeground: theme.color(\n      \"DefaultTabs.underlinedTabInactiveForeground\" as UnknownThemeProp<\"DefaultTabs.underlinedTabInactiveForeground\">\n    ),\n    underlinedTabForeground: theme.color(\"DefaultTabs.underlinedTabForeground\"),\n\n    background: theme.color(\n      \"DefaultTabs.background\",\n      theme.dark ? \"#3C3F41\" : \"#ECECEC\"\n    ),\n    underlinedTabInactiveBackground: theme.color(\n      \"DefaultTabs.underlinedTabInactiveBackground\" as UnknownThemeProp<\"DefaultTabs.underlinedTabInactiveBackground\">\n    ),\n    underlinedTabBackground: theme.color(\n      \"DefaultTabs.underlinedTabBackground\" as UnknownThemeProp<\"DefaultTabs.underlinedTabBackground\">\n    ),\n    hoverInactiveBackground: theme.color(\n      \"DefaultTabs.hoverInactiveBackground\" as UnknownThemeProp<\"DefaultTabs.hoverInactiveBackground\">,\n      theme.dark ? \"rgba(0,0,0,.35)\" : \"rgba(0,0,0,.1)\"\n    ),\n    hoverBackground: theme.color(\n      \"DefaultTabs.hoverBackground\",\n      theme.dark ? \"rgba(0,0,0,.35)\" : \"rgba(0,0,0,.1)\"\n    ),\n  });\n\nexport const StyledDefaultTab = styled.div<StyledTabProps>`\n  box-sizing: border-box;\n  display: inline-flex;\n  letter-spacing: 0.015rem;\n  font-size: 0.85rem;\n  cursor: default;\n  white-space: nowrap;\n\n  // spacing\n  padding: 0 0.5rem;\n  line-height: 1.7rem; // vertical spacing handled by line-height\n\n  // disabled state doesn't seem to be supported in Intellij Platform at all.\n  opacity: ${({ disabled }) => (disabled ? \".5\" : \"1\")};\n  color: ${({ theme }) =>\n    theme.color(\n      \"DefaultTabs.foreground\" as UnknownThemeProp<\"DefaultTabs.foreground\">\n    )};\n\n  position: relative;\n  &::after {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    left: 0;\n    bottom: 0;\n  }\n\n  ${defaultTabTheme};\n`;\n","import { Theme } from \"../Theme\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { getTabsThemeStyles } from \"./TabTheme\";\n\nconst defaultTabsTheme = ({ theme }: { theme: Theme }) =>\n  getTabsThemeStyles({\n    borderColor: theme.color(\n      \"DefaultTabs.borderColor\",\n      theme.commonColors.contrastBorder\n    ),\n    background: theme.color(\"DefaultTabs.background\"),\n  });\n\nexport const StyledDefaultTabs = styled.div<{ noBorders?: boolean }>`\n  display: flex;\n  align-items: center;\n  box-sizing: border-box;\n  border-style: solid;\n  border-width: ${({ noBorders }) => (noBorders ? \"0\" : \"1px 0\")};\n\n  ${defaultTabsTheme};\n`;\n","import React from \"react\";\nimport { BareButton, BareButtonProps } from \"@intellij-platform/core/Button\";\nimport { PlatformIcon } from \"../Icon\";\nimport { styled } from \"../styled\";\n\nconst StyledIconWrapper = styled.span`\n  display: inherit;\n  .icon.hover {\n    display: none;\n  }\n  &:hover {\n    .icon {\n      display: none;\n    }\n    .icon.hover {\n      display: unset;\n    }\n  }\n`;\n/**\n * Close button for Tab\n */\nexport const TabCloseButton = (props: Omit<BareButtonProps, \"children\">) => {\n  // using useHover proved to be unstable.\n  return (\n    <BareButton {...props} excludeFromTabOrder preventFocusOnPress>\n      <StyledIconWrapper>\n        <PlatformIcon icon={\"actions/closeHovered\"} className=\"icon hover\" />\n        <PlatformIcon icon={\"actions/close\"} className=\"icon\" />\n      </StyledIconWrapper>\n    </BareButton>\n  );\n};\n","import React, { ForwardedRef, HTMLProps } from \"react\";\nimport { css, styled } from \"../styled\";\nimport { useFocusable } from \"@react-aria/focus\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\n\nconst StyledTabItemLayout = styled.div`\n  display: inline-flex;\n  align-items: center;\n`;\n\nconst iconStyle = css`\n  display: inline-flex; // without this, the wrapper takes the full height, causing icon to be placed on top\n  margin-top: -0.1rem; // seems necessary for pixel perfect match with the original impl\n`;\n\nconst StyledStartIconWrapper = styled.span`\n  ${iconStyle};\n  margin-right: 0.25rem;\n`;\n\nconst StyledEndIconWrapper = styled.span`\n  ${iconStyle};\n  margin-left: 0.25rem;\n  margin-right: -0.25rem; // default padding of the tab should be a little reduced when close icon is there.\n  border-radius: 16px;\n`;\n\nexport interface TabItemLayoutProps {\n  /**\n   * the icon placed before the text.\n   */\n  startIcon?: React.ReactNode;\n  /**\n   * title of the tab. Normally just a string\n   */\n  title?: React.ReactNode;\n  /**\n   * the icon placed after the text. Typical use cases: close or pin icon.\n   */\n  endIcon?: React.ReactNode;\n\n  /**\n   * Generic HTML props passed to the container div.\n   */\n  containerProps?: Omit<HTMLProps<HTMLDivElement>, \"ref\" | \"as\">;\n}\n\n/**\n * Helper component for rendering the common layout of tab content.\n */\nexport const TabContentLayout = React.forwardRef(\n  (\n    { startIcon, title, endIcon, containerProps = {} }: TabItemLayoutProps,\n    ref: ForwardedRef<HTMLDivElement>\n  ) => {\n    // To allow tooltip be used easily. TooltipTrigger passes props via FocusableContext.\n    const { focusableProps } = useFocusable({}, useObjectRef(ref));\n    return (\n      <StyledTabItemLayout\n        {...mergeProps(focusableProps, containerProps)}\n        ref={ref}\n      >\n        {startIcon && (\n          <StyledStartIconWrapper>{startIcon}</StyledStartIconWrapper>\n        )}\n        {title}\n        {endIcon && <StyledEndIconWrapper>{endIcon}</StyledEndIconWrapper>}\n      </StyledTabItemLayout>\n    );\n  }\n);\n","import { ItemProps } from \"@react-types/shared\";\nimport { Item } from \"@react-stately/collections\";\nimport React from \"react\";\n\nexport interface TabItemProps extends ItemProps<never> {\n  /**\n   * Determines how the tab item should look when rendered as a menu item in overflow menu.\n   * If not passed, `textValue` will be used.\n   * @example\n   * <TabItem\n   *   key={tab.id}\n   *   textValue={tab.title}\n   *   inOverflowMenu={\n   *     <MenuItemLayout content={tab.title} icon={icon} />\n   *   }\n   *  >\n   *   <TabContentLayout startIcon={icon} title={tab.title} />\n   * </TabItem>\n   */\n  inOverflowMenu?: React.ReactNode;\n}\n\n/**\n * Same as {@link Item}, but allows for specifying the tab content for when it's rendered in the overflow menu item.\n */\nexport const TabItem: (props: TabItemProps) => React.ReactElement = Item;\n","import { css } from \"@intellij-platform/core/styled\";\nimport { StyledTabProps } from \"./StyledDefaultTab\";\n\n/**\n * Describes theme-able properties of a tab, which can then be passed to {@link getTabThemeStyles}\n */\nexport interface TabTheme {\n  underlineHeight?: number;\n\n  borderColor?: string;\n\n  inactiveUnderlineColor?: string;\n  underlineColor?: string;\n\n  underlinedTabInactiveForeground?: string;\n  underlinedTabForeground?: string;\n\n  background?: string;\n  underlinedTabBackground?: string;\n  underlinedTabInactiveBackground?: string;\n  hoverInactiveBackground?: string;\n  hoverBackground?: string;\n  inactiveColoredTabBackground?: string; // not used for now\n}\n\nexport const getTabsThemeStyles = ({\n  background,\n  borderColor,\n}: Pick<TabTheme, \"background\" | \"borderColor\">) => css`\n  border-color: ${borderColor};\n  background: ${background};\n`;\n\n/**\n * Converts tab theme properties to a chunk of style that can be dropped in a styled version of StyledDefaultTab\n *\n * @example\n * ```ts\n * const StyledCustomTab = styled(StyledDefaultTab)`\n *   ${getTabThemeStyles({background: 'red'})}\n * `\n * ```\n */\nexport const getTabThemeStyles = ({\n  underlineHeight,\n\n  background,\n  underlinedTabBackground,\n  underlinedTabInactiveBackground,\n  hoverInactiveBackground,\n  hoverBackground,\n\n  underlinedTabForeground,\n  underlinedTabInactiveForeground,\n\n  inactiveUnderlineColor,\n  underlineColor,\n}: TabTheme) =>\n  css<StyledTabProps>`\n    // active indicator\n    &::after {\n      height: ${underlineHeight != null ? `${underlineHeight}px` : undefined};\n      background-color: ${({ selected }) => selected && inactiveUnderlineColor};\n      background-color: ${({ selected, active }) =>\n        selected && active && underlineColor};\n    }\n\n    // foreground rules\n    color: ${({ selected }) => selected && underlinedTabInactiveForeground};\n    color: ${({ selected, active }) =>\n      selected && active && underlinedTabForeground};\n\n    //  background rules\n    background: ${background};\n    background: ${({ selected }) =>\n      selected && underlinedTabInactiveBackground};\n    background: ${({ selected, active }) =>\n      selected && active && underlinedTabBackground};\n\n    ${({ disabled, active }) =>\n      !disabled &&\n      css`\n        &:hover,\n        &.hover /* for testing purposes */ {\n          background: ${hoverInactiveBackground};\n          background: ${active && hoverBackground};\n        }\n      `}\n  `;\n","import { css, styled } from \"@intellij-platform/core/styled\";\n\ninterface Props {\n  hasOverflowAtStart: boolean;\n  hasOverflowAtEnd: boolean;\n}\n\nconst horizontalOverflowIndicatorStyles = css`\n  content: \"\";\n  pointer-events: none;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  width: 10px;\n  z-index: 1;\n`;\nexport const StyledHorizontalOverflowShadows = styled.div<Props>`\n  position: relative; // for overflow indicator (pseudo-)elements to be positioned absolute\n\n  /* FIXME: find out what color, width and gradient parameters are used in the original implementation */\n  ${({ hasOverflowAtStart }) =>\n    hasOverflowAtStart &&\n    css`\n      ::before {\n        ${horizontalOverflowIndicatorStyles};\n        background: linear-gradient(\n          90deg,\n          ${({ theme }) => theme.commonColors.panelBackground} 0%,\n          transparent 100%\n        );\n        left: 0;\n      }\n    `};\n  ${({ hasOverflowAtEnd }) =>\n    hasOverflowAtEnd &&\n    css`\n      ::after {\n        ${horizontalOverflowIndicatorStyles};\n        background: linear-gradient(\n          -90deg,\n          ${({ theme }) => theme.commonColors.panelBackground} 0%,\n          transparent 100%\n        );\n        right: 0;\n      }\n    `};\n`;\n","import { useTab } from \"@react-aria/tabs\";\nimport { TabListState } from \"@react-stately/tabs\";\nimport { Node } from \"@react-types/shared\";\nimport { StyledDefaultTab } from \"./StyledDefaultTab\";\nimport React, { ForwardedRef, forwardRef, RefObject, useEffect } from \"react\";\nimport useForwardedRef from \"@intellij-platform/core/utils/useForwardedRef\";\n\ntype TabProps<T extends object> = {\n  state: TabListState<object>;\n  item: Node<T>;\n  /**\n   * {@see TabsProps#focusable}\n   */\n  focusable?: boolean;\n  /**\n   * {@see TabsProps#active}\n   */\n  active?: boolean;\n  shouldSelectOnPressUp?: boolean;\n  Component?: typeof StyledDefaultTab;\n};\n\nexport const Tab = forwardRef(function Tab<T extends object>(\n  {\n    state,\n    item,\n    focusable,\n    active,\n    shouldSelectOnPressUp,\n    Component = StyledDefaultTab,\n  }: TabProps<T>,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n): React.ReactElement {\n  const { key, rendered } = item;\n  const ref = useForwardedRef(forwardedRef);\n  const {\n    tabProps: {\n      /**\n       * by extracting out tabIndex, all keyboard support of the tabs is disabled, since we prevent the tab from being\n       * focusable.\n       */\n      tabIndex,\n      ...tabProps\n    },\n  } = useTab(\n    {\n      key,\n      shouldSelectOnPressUp,\n    },\n    state,\n    ref\n  );\n  const isSelected = state.selectedKey === key;\n  const isDisabled = state.disabledKeys.has(key);\n\n  return (\n    <Component\n      {...tabProps}\n      tabIndex={focusable ? tabIndex : undefined}\n      ref={ref}\n      active={active}\n      selected={isSelected}\n      disabled={isDisabled}\n    >\n      {rendered}\n    </Component>\n  );\n});\n","import React, { Key, useEffect } from \"react\";\nimport { useTabList } from \"@react-aria/tabs\";\nimport { filterDOMProps, mergeProps, scrollIntoView } from \"@react-aria/utils\";\nimport { useTabListState } from \"@react-stately/tabs\";\nimport { AriaTabListProps } from \"@react-types/tabs\";\nimport { StyledHorizontalOverflowShadows } from \"./StyledHorizontalOverflowShadows\";\nimport { TabsOverflowMenu } from \"./TabsOverflowMenu\";\nimport { useOverflowObserver } from \"../utils/overflow-utils/useOverflowObserver\";\nimport { useHasOverflow } from \"./useHasOverflow\";\nimport { css, styled } from \"@intellij-platform/core/styled\";\nimport { notNull } from \"@intellij-platform/core/utils/array-utils\";\nimport { StyledDefaultTab } from \"./StyledDefaultTab\";\nimport { StyledDefaultTabs } from \"./StyledDefaultTabs\";\nimport { Tab } from \"./Tab\";\n\nexport type TabsProps<T> = Omit<\n  AriaTabListProps<T>,\n  \"orientation\" | \"isDisabled\" | \"\"\n> & {\n  /**\n   * Whether tabs should be focusable or not. By default, following the Intellij Platform implementation, tabs are\n   * not focusable and therefore lack the keyboard accessibility support specified in WAI-ARIA.\n   * You can change this default behaviour and make the tabs keyboard accessible by passing `focusable`.\n   * focus styles are not perfect at the moment, since it's not considered an important feature.\n   * @default false\n   */\n  focusable?: boolean;\n\n  /**\n   * Whether selected tab should change on press up instead of press down.\n   * @default false.\n   */\n  shouldSelectOnPressUp?: boolean;\n\n  /**\n   * Enables \"active\" style on tabs. Is usually related to a container having focus.\n   */\n  active?: boolean;\n\n  /**\n   * If set to true, tabs will be wrapped into multiple rows if needed.\n   * NOTE: In the original implementation, in multi row mode, rows are separated by a border. It's not easy to achieve\n   * this when we are implementing this feature with a simple `flex-wrap: wrap` css rule. It doesn't seem that\n   * important, but we can achieve something similar by some css tricks like the ones suggested here:\n   * https://stackoverflow.com/questions/36128333/row-lines-for-flex-container-css\n   * @default false\n   */\n  multiRow?: boolean;\n\n  /**\n   * Only effective when {@link multiRow} is not true.\n   * If set to true and multiRow is not true, it will prevent horizontal scroll of tabs. Depending on the value of\n   * In this case:\n   * - if {@link noOverflowMenu} is not set to true, tabs that can't be fitted into the available space will be\n   *   accessible via an overflow menu.\n   * - if {@link noOverflowMenu} is set to true, the tabs will be fitted into the available space, and they will\n   *   be shrunk when needed.\n   *\n   * @todo: not implemented yet.\n   * @default false\n   */\n  noScroll?: boolean;\n\n  /**\n   * Only effective when {@link multiRow} is not true.\n   * When set to true, tabs that couldn't be fitted into the available space, are either shrunk (if {@link noScroll}\n   * is set to true), or are just accessible by scroll.\n   */\n  noOverflowMenu?: boolean;\n\n  /**\n   * Removes the top and bottom border when passed.\n   * It's still not clear whether such option makes sense or not, but\n   * at least in common use cases like in tool windows, it seems borders are already there and there should be a way\n   * of removing tab borders. On the other hand, when Tabs is used without any assumption about the surrounding UI,\n   * it kind of makes sense to have the top and bottom borders by default. So that's why this is made an option for\n   * now, maybe until things are clearer.\n   *\n   * @default false\n   */\n  noBorders?: boolean;\n\n  TabsComponent?: typeof StyledDefaultTabs;\n  /**\n   *\n   */\n  TabComponent?: typeof StyledDefaultTab;\n};\n\nconst scrollBarDisabledStyle = css`\n  -ms-overflow-style: none; /* for Internet Explorer, Edge */\n  scrollbar-width: none; /* for Firefox */\n  &::-webkit-scrollbar {\n    /* for Chrome/Safari/Webkit */\n    display: none;\n  }\n`;\n\nconst StyledTabList = styled.div<{ multiRow?: boolean }>`\n  display: flex;\n  flex-wrap: ${({ multiRow }) => (multiRow ? \"wrap\" : \"nowrap\")};\n  overflow: auto;\n\n  ${scrollBarDisabledStyle};\n`;\n\n/**\n *\n * TODO: add support for overflow:\n *  - have vertical scroll also scroll tabs\n *  - add support for re-reordering tabs.\n *  - FIX: When a tab that was not selected is removed, selection should not change. It now changes to the tab before the removed one.\n */\nexport const Tabs = <T extends object>({\n  focusable,\n  shouldSelectOnPressUp,\n  active,\n  TabComponent,\n  TabsComponent = StyledDefaultTabs,\n  multiRow,\n  noOverflowMenu,\n  noScroll,\n  noBorders,\n  ...props\n}: TabsProps<T>): React.ReactElement => {\n  const state = useTabListState(props);\n  const ref = React.useRef<HTMLDivElement>(null);\n  const { tabListProps } = useTabList(props, state, ref);\n\n  const { scrolledIndicatorProps, hasOverflow } = useHasOverflow({ ref });\n  const { overflowedElements } = useOverflowObserver(ref);\n  const overflowedKeys = new Set(\n    overflowedElements\n      .map((element) =>\n        element instanceof HTMLElement ? element.dataset[\"key\"] : null\n      )\n      .filter(notNull)\n  );\n\n  useEffect(() => {\n    if (!noScroll) {\n      const scrollableContainer = ref.current;\n      const selectedTabElement = scrollableContainer?.querySelector(\n        `[data-key=\"${state.selectedKey}\"]`\n      ) as HTMLElement;\n      if (scrollableContainer && selectedTabElement) {\n        scrollIntoView(scrollableContainer, selectedTabElement);\n      }\n    } else {\n      // TODO maybe? sample use case: project tool window tabs, when not grouped.\n    }\n  }, [state.selectedKey]);\n  const onOverflowMenuItemSelected = (key: Key) => {\n    state.setSelectedKey(key);\n  };\n  if (noScroll) {\n    throw new Error(\"noScroll is not supported yet.\");\n  }\n  return (\n    <TabsComponent noBorders={noBorders} {...filterDOMProps(props)}>\n      <StyledHorizontalOverflowShadows\n        hasOverflowAtStart={hasOverflow.left}\n        hasOverflowAtEnd={hasOverflow.right}\n        style={{ minWidth: 0 }}\n      >\n        <StyledTabList\n          {...mergeProps(tabListProps, scrolledIndicatorProps)}\n          multiRow={multiRow}\n          ref={ref}\n        >\n          {[...state.collection].map((item) => (\n            <Tab\n              key={item.key}\n              item={item}\n              state={state}\n              focusable={focusable}\n              shouldSelectOnPressUp={shouldSelectOnPressUp}\n              active={active}\n              Component={TabComponent}\n            />\n          ))}\n        </StyledTabList>\n      </StyledHorizontalOverflowShadows>\n      {!noOverflowMenu && (\n        <TabsOverflowMenu\n          collection={state.collection}\n          overflowedKeys={overflowedKeys}\n          onSelect={onOverflowMenuItemSelected}\n        />\n      )}\n    </TabsComponent>\n  );\n};\n","import { RefObject, UIEventHandler, useEffect, useState } from \"react\";\n\nexport function useHasOverflow<T extends HTMLElement>({\n  threshold = 5,\n  ref,\n}: {\n  threshold?: number;\n  ref: RefObject<T>;\n}) {\n  const [hasOverflow, setHasOverflow] = useState({\n    left: false,\n    right: false,\n    top: false,\n    bottom: false,\n  });\n\n  const update = () => {\n    const element = ref.current;\n    if (element) {\n      const offsetLeft = element.scrollLeft;\n      const offsetRight =\n        element.scrollWidth - (element.offsetWidth + element.scrollLeft);\n      const offsetTop = element.scrollTop;\n      const offsetBottom =\n        element.scrollHeight - (element.offsetHeight + element.scrollTop);\n      const newHasOverflow = {\n        top: offsetTop > threshold,\n        bottom: offsetBottom > threshold,\n        left: offsetLeft > threshold,\n        right: offsetRight > threshold,\n      };\n      if (\n        hasOverflow.top !== newHasOverflow.top ||\n        hasOverflow.bottom !== newHasOverflow.bottom ||\n        hasOverflow.left !== newHasOverflow.left ||\n        hasOverflow.right !== newHasOverflow.right\n      ) {\n        setHasOverflow(newHasOverflow);\n      }\n    }\n  };\n  useEffect(update);\n\n  return {\n    scrolledIndicatorProps: {\n      onScroll: update as UIEventHandler<T>,\n    },\n    hasOverflow,\n  };\n}\n","import { Collection, Node } from \"@react-types/shared\";\nimport { Item } from \"@react-stately/collections\";\nimport { Menu, MenuTrigger } from \"@intellij-platform/core/Menu\";\nimport { IconButton } from \"@intellij-platform/core/IconButton\";\nimport { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport React, { Key } from \"react\";\n\nexport const TabsOverflowMenu = <T extends unknown>({\n  collection,\n  overflowedKeys,\n  onSelect,\n}: {\n  collection: Collection<Node<T>>;\n  overflowedKeys: Set<Key>;\n  onSelect: (key: Key) => void;\n}) => (\n  <>\n    {overflowedKeys.size > 0 && (\n      <MenuTrigger\n        align=\"end\"\n        renderMenu={({ menuProps }) => {\n          const items: Iterable<Node<unknown>> = [...collection].filter(\n            (menuItem) => overflowedKeys.has(menuItem.key)\n          );\n          return (\n            <Menu\n              {...menuProps}\n              onAction={(key) => {\n                onSelect(key);\n              }}\n              items={items}\n            >\n              {(item) => (\n                <Item key={item.key} textValue={item.textValue}>\n                  {item.props.inOverflowMenu || item.textValue}\n                </Item>\n              )}\n            </Menu>\n          );\n        }}\n      >\n        {(props, ref) => (\n          <IconButton {...props} ref={ref}>\n            <PlatformIcon icon=\"actions/findAndShowNextMatches\" />\n          </IconButton>\n        )}\n      </MenuTrigger>\n    )}\n  </>\n);\n","import React, { ForwardedRef, HTMLProps } from \"react\";\nimport { TabCloseButton } from \"@intellij-platform/core/Tabs/TabCloseButton\";\nimport { TabContentLayout } from \"@intellij-platform/core/Tabs/TabContentLayout\";\n\ntype ToolWindowTabContentProps = {\n  icon?: React.ReactNode;\n  title: React.ReactNode;\n  /**\n   * Close button for the tab. Use {@link TabCloseButton} to render the close button\n   * for the tab.\n   *\n   * @example\n   * ```tsx\n   * <ToolWindowTabContent\n   *   closeButton={\n   *     <TooltipTrigger\n   *       tooltip={<ActionTooltip actionName=\"Close Tab\" shortcut=\"^⇧F4\" />}\n   *     >\n   *       <TabCloseButton onPress={}></TabCloseButton>\n   *     </TooltipTrigger>\n   *   }\n   * />\n   * ```\n   */\n  closeButton?: React.ReactNode;\n  containerProps?: Omit<HTMLProps<HTMLDivElement>, \"ref\" | \"as\">;\n};\n\nexport const ToolWindowTabContent = React.forwardRef(\n  (\n    { icon, title, closeButton, containerProps }: ToolWindowTabContentProps,\n    ref: ForwardedRef<HTMLDivElement>\n  ) => {\n    return (\n      <TabContentLayout\n        containerProps={containerProps}\n        ref={ref}\n        startIcon={icon}\n        title={title}\n        endIcon={closeButton}\n      />\n    );\n  }\n);\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { Theme } from \"@intellij-platform/core/Theme\";\nimport { StyledDefaultTab } from \"@intellij-platform/core/Tabs/StyledDefaultTab\";\nimport {\n  getTabThemeStyles,\n  TabTheme,\n} from \"@intellij-platform/core/Tabs/TabTheme\";\n\nexport const toolWindowTabTheme = ({ theme }: { theme: Theme }): TabTheme => ({\n  borderColor: theme.color(\"ToolWindow.HeaderTab.borderColor\"),\n  underlineHeight: theme.value<number>(\"ToolWindow.HeaderTab.underlineHeight\"),\n  background: \"transparent\",\n  underlinedTabInactiveBackground: theme.color(\n    \"ToolWindow.HeaderTab.underlinedTabInactiveBackground\"\n  ),\n  underlinedTabBackground: theme.color(\n    \"ToolWindow.HeaderTab.underlinedTabBackground\"\n  ),\n  hoverInactiveBackground:\n    theme.color(\"ToolWindow.HeaderTab.hoverInactiveBackground\") ??\n    theme.color(\"ToolWindow.HeaderTab.hoverBackground\"),\n  hoverBackground: theme.color(\"ToolWindow.HeaderTab.hoverBackground\"),\n  inactiveUnderlineColor: theme.color(\n    \"ToolWindow.HeaderTab.inactiveUnderlineColor\"\n  ),\n  underlineColor: theme.color(\"ToolWindow.HeaderTab.underlineColor\"),\n\n  underlinedTabInactiveForeground:\n    theme.color(\"ToolWindow.HeaderTab.underlinedTabInactiveForeground\") ??\n    theme.color(\"ToolWindow.HeaderTab.underlinedTabForeground\"),\n  underlinedTabForeground: theme.color(\n    \"ToolWindow.HeaderTab.underlinedTabForeground\"\n  ),\n});\nexport const StyledToolWindowTab = styled(StyledDefaultTab)`\n  padding: 0 0.7rem;\n  ${({ theme }) => getTabThemeStyles(toolWindowTabTheme({ theme }))};\n`;\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { getTabsThemeStyles } from \"@intellij-platform/core/Tabs/TabTheme\";\nimport { StyledDefaultTabs } from \"@intellij-platform/core/Tabs/StyledDefaultTabs\";\nimport { toolWindowTabTheme } from \"./StyledToolWindowTab\";\n\nexport const StyledToolWindowTabs = styled(StyledDefaultTabs)`\n  ${({ theme }) => getTabsThemeStyles(toolWindowTabTheme({ theme }))};\n`;\n","import React from \"react\";\nimport { Tabs, TabsProps } from \"@intellij-platform/core/Tabs/Tabs\";\nimport { StyledToolWindowTab } from \"./StyledToolWindowTab\";\nimport { StyledToolWindowTabs } from \"./StyledToolWindowTabs\";\n\ntype ToolWindowTabsProps<T extends object> = Omit<\n  TabsProps<T>,\n  \"TabComponent\" | \"TabsComponent\" | \"focusable\"\n>;\n\nexport const ToolWindowTabs = <T extends object>(\n  props: ToolWindowTabsProps<T>\n) => (\n  <Tabs\n    {...props}\n    TabComponent={StyledToolWindowTab}\n    TabsComponent={StyledToolWindowTabs}\n    focusable={false}\n    shouldSelectOnPressUp\n  />\n);\n","export type TextRange = { from: number; to: number };\n\nexport function isEmptyRange(range: TextRange) {\n  return range.from > range.to;\n}\n\nexport function getAllRanges(\n  ranges: TextRange[],\n  length: number\n): Array<[TextRange, boolean]> {\n  const result: Array<[TextRange, boolean]> = [];\n  if (!ranges?.length) {\n    return [[{ from: 0, to: length - 1 }, false]];\n  }\n  if (ranges[0].from > 0) {\n    result.push([{ from: 0, to: ranges[0].from - 1 }, false]);\n  }\n  ranges.forEach(({ from, to }, index) => {\n    result.push([{ from, to }, true]);\n    const gapRange: TextRange = ranges[index + 1]\n      ? { from: to + 1, to: ranges[index + 1].from - 1 }\n      : { from: to + 1, to: length - 1 };\n    if (!isEmptyRange(gapRange)) {\n      result.push([gapRange, false]);\n    }\n  });\n  return result;\n}\n\nexport function createRangesFromIndices(indices: number[]): TextRange[] {\n  return indices.reduce((ranges, index) => {\n    const lastRange = ranges.slice(-1)[0];\n    if (lastRange?.to === index - 1) {\n      return [...ranges.slice(0, -1), { from: lastRange.from, to: index }];\n    }\n    return [...ranges, { from: index, to: index }];\n  }, [] as TextRange[]);\n}\n","import React from \"react\";\nimport { getAllRanges, TextRange } from \"../TextRange\";\nimport { styled } from \"../styled\";\n\nconst HighlightedMatch = styled.span`\n  background: ${({ theme }) =>\n    `linear-gradient(${theme.color(\n      \"SearchMatch.startBackground\",\n      \"#ffeaa2b3\"\n    )}, ${theme.color(\"SearchMatch.endBackground\", \"#ffd042b3\")})`};\n  color: #000;\n  border-radius: 3px;\n`;\n\n/**\n * Renders the children (which must be a string), with highlights wrapped in spans with the highlight style.\n * Note: this component doesn't render a container. It just highlights the specified ranges.\n */\nexport function TextWithHighlights({\n  children,\n  highlights,\n}: {\n  children: string;\n  highlights: TextRange[] | null;\n}): React.ReactElement {\n  const parts: Array<[TextRange, boolean]> = highlights\n    ? getAllRanges(highlights, children.length)\n    : [[{ from: 0, to: children.length }, false]];\n  return (\n    <>\n      {parts.map(([{ from, to }, highlighted]) => {\n        const text = children.slice(from, to + 1);\n        return (\n          // TODO: key\n          <React.Fragment key={`${from}_${to}`}>\n            {highlighted ? <HighlightedMatch>{text}</HighlightedMatch> : text}\n          </React.Fragment>\n        );\n      })}\n    </>\n  );\n}\n","// language=JSRegexp\nconst numberPattern = \"[0-9]{0,3}.?[0-9]*\";\n\nconst parseComponent = (componentStr: string, index: number) =>\n  componentStr\n    ? index < 3\n      ? parseInt(componentStr)\n      : Math.round(Math.min(parseFloat(componentStr), 1) * 255)\n    : undefined;\n\nconst parseHexRgba = (str: string) =>\n  str\n    .match(/^#?([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})?$/i)\n    ?.slice(1, 5)\n    .map((i) => (i ? parseInt(i, 16) : undefined));\nconst parseShorthandHex = (str: string) =>\n  str\n    .match(/^#?([0-9A-F])([0-9A-F])([0-9A-F])$/i)\n    ?.slice(1, 4)\n    .map((i) => (i ? parseInt(i + i, 16) : undefined));\nconst parseRgb = (str: string) =>\n  str\n    .match(\n      new RegExp(\n        `^rgb\\\\(\\\\s*(${numberPattern})\\\\s*,\\\\s*(${numberPattern})\\\\s*,\\\\s*(${numberPattern}\\\\s*)\\\\)$`\n      )\n    )\n    ?.slice(1, 5)\n    .map(parseComponent);\nconst parseRgba = (str: string) =>\n  str\n    .match(\n      new RegExp(\n        `^rgba\\\\(\\\\s*(${numberPattern})\\\\s*,\\\\s*(${numberPattern})\\\\s*,\\\\s*(${numberPattern})\\\\s*,\\\\s*(${numberPattern}\\\\s*)\\\\)$`\n      )\n    )\n    ?.slice(1, 5)\n    .map(parseComponent);\n\n/**\n * parses a color string into rgba components.\n * @param str\n */\nexport const parseColorString = (\n  str: string\n): [number, number, number, number?] | null => {\n  const result = [parseHexRgba, parseShorthandHex, parseRgb, parseRgba].reduce<\n    (number | undefined)[] | undefined\n  >((result, parse) => result || parse(str), undefined);\n  return Array.isArray(result) &&\n    result.slice(0, 3).every((c) => Number.isInteger(c))\n    ? (result as [number, number, number, number?])\n    : null;\n};\n","import { parseColorString } from \"./parseColorString\";\n\n/**\n * A Color class resembling AWT Color\n */\nexport class Color {\n  public readonly r: number;\n  public readonly g: number;\n  public readonly b: number;\n  public readonly a: number;\n\n  private static readonly FACTOR = 0.7;\n\n  constructor(r: number, g: number, b: number, a?: number);\n  constructor(rgba: string);\n  constructor(rgba: Color);\n  constructor(\n    rgba: string | number | Color,\n    g?: number,\n    b?: number,\n    a: number = 255\n  ) {\n    let r: number;\n    if (typeof rgba === \"string\") {\n      [r = NaN, g = NaN, b = NaN, a = 255] = parseColorString(rgba) || [];\n    } else if (rgba instanceof Color) {\n      [r, g, b, a] = [rgba.r, rgba.g, rgba.b, rgba.a];\n    } else {\n      r = rgba;\n    }\n    this.r = r;\n    this.g = g!;\n    this.b = b!;\n    this.a = a < 1 ? Math.round(a * 255) : a;\n  }\n\n  isValid() {\n    return (\n      Number.isInteger(this.r) &&\n      Number.isInteger(this.g) &&\n      Number.isInteger(this.b) &&\n      Number.isInteger(this.a)\n    );\n  }\n\n  /**\n   * Extra method for changing transparency\n   */\n  withTransparency(alpha: number) {\n    return new Color(this.r, this.g, this.b, alpha);\n  }\n\n  brighter() {\n    let { r, g, b, a: alpha } = this;\n    const int = Math.floor,\n      FACTOR = Color.FACTOR;\n    // The rest is copy paste of java.awt.Color (only `int i` is changed to `let i` :D)\n    let i = int(1.0 / (1.0 - FACTOR));\n    if (r == 0 && g == 0 && b == 0) {\n      return new Color(i, i, i, alpha);\n    }\n    if (r > 0 && r < i) r = i;\n    if (g > 0 && g < i) g = i;\n    if (b > 0 && b < i) b = i;\n\n    return new Color(\n      Math.min(int(r / FACTOR), 255),\n      Math.min(int(g / FACTOR), 255),\n      Math.min(int(b / FACTOR), 255),\n      alpha\n    );\n  }\n\n  darker() {\n    const FACTOR = Color.FACTOR;\n    const int = Math.floor;\n\n    return new Color(\n      Math.max(int(this.r * FACTOR), 0),\n      Math.max(int(this.g * FACTOR), 0),\n      Math.max(int(this.b * FACTOR), 0),\n      this.a\n    );\n  }\n\n  static brighter(color: string): string {\n    // note: we can't type args simply with ConstructorParameters<typeof Color>.\n    // see more: https://github.com/microsoft/TypeScript/issues/37079\n    return new Color(color).brighter().toString();\n  }\n\n  blend(colorOrColorString: Color | string) {\n    const color =\n      typeof colorOrColorString === \"string\"\n        ? new Color(colorOrColorString)\n        : colorOrColorString;\n    const getBlendedValue = (component: \"r\" | \"g\" | \"b\") =>\n      Math.round(\n        (color.a / 255) * color[component] +\n          (this.a / 255) * (1 - color.a / 255) * this[component]\n      );\n    return new Color(\n      getBlendedValue(\"r\"),\n      getBlendedValue(\"g\"),\n      getBlendedValue(\"b\")\n    );\n  }\n\n  toString() {\n    const toString = (component: number) =>\n      Number.isNaN(component) ? \"\" : component.toString(16).padStart(2, \"0\");\n    const r = toString(this.r);\n    const g = toString(this.g);\n    const b = toString(this.b);\n    const a = this.a === 255 ? \"\" : toString(this.a);\n    return `#${r}${g}${b}${a}`;\n  }\n}\n","import React, { CSSProperties, useRef, useState } from \"react\";\nimport styled, { useTheme } from \"styled-components\";\nimport {\n  BottomResizer,\n  LeftResizer,\n  RightResizer,\n  TopResizer,\n} from \"../Resizer\";\nimport { ResizerProps } from \"../Resizer/ResizerProps\";\nimport { Theme } from \"../Theme/Theme\";\n\n/**\n * Props are named mostly based on ThreeComponentsSplitter in Intellij Platform.\n */\nexport interface ThreeViewSplitterProps {\n  orientation?: \"horizontal\" | \"vertical\";\n  resizerProps?: Partial<\n    Omit<ResizerProps, \"onResize\" | \"onResizeStarted\" | \"onResizeEnd\">\n  >;\n  innerView?: React.ReactNode;\n  innerViewMinSize?: number;\n  firstView?: React.ReactNode;\n  firstSize?: number | null;\n  firstViewMinSize?: number;\n  lastView?: React.ReactNode;\n  lastSize?: number | null;\n  lastViewMinSize?: number;\n  onFirstResize?: (size: number) => void;\n  onLastResize?: (size: number) => void;\n  style?: CSSProperties;\n  className?: string;\n}\n\nconst StyledSplitterContainer = styled.div<{\n  orientation: \"horizontal\" | \"vertical\";\n}>`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  flex-direction: ${({ orientation }) =>\n    orientation === \"vertical\" ? \"column\" : \"row\"};\n`;\n\nconst StyledView = styled.div`\n  // The default overflow visible should be changed obviously. Not sure if there is any layout implication\n  // in using 'auto' instead of hidden, to provide scroll behaviour by default, but even if we realize later\n  // that we need to set overflow to hidden here, we can have scrollable content inside the inner view via an\n  // intermediate element inside the inner view, with overflow set to auto and width set to 100%.\n  overflow: auto;\n`;\n\nconst StyledSplitterInnerView = styled(StyledView)`\n  flex: 1;\n`;\n\n/**\n * Corresponding to\n * [ThreeComponentsSplitter](https://github.com/JetBrains/intellij-community/blob/58dbd93e9ea527987466072fa0bfbf70864cd35f/platform/platform-api/src/com/intellij/openapi/ui/ThreeComponentsSplitter.java#L40-L40)\n * `firstView` and `lastView` are optional, and if not provided, the corresponding resizer is not rendered.\n * innerView is supposed to fill the remaining space, while firstView and lastView have specific sizes.\n * size changes in a resize interaction is not reported and is handled by local state in the component. That's\n * to prevent frequent state updates in a higher level which can be expensive. It's also based on this assumption\n * that in the usage side there is no need for any control over resizing or even knowing the intermediate state.\n * Maybe a minSize and maxSize would be the extent of the required control over resizing. But anyway, this model\n * of keeping the size as a local state during a resize session is something that can be changed if needed.\n *\n * Features:\n * - Relative sizing (fraction of the container)\n * - Default size by content\n * - Change handling only when resize is done.\n *\n * TODO: max and min size not implemented\n * TODO: add support for uncontrolled version\n */\nexport const ThreeViewSplitter: React.FC<ThreeViewSplitterProps> = ({\n  orientation = \"horizontal\",\n  firstView,\n  firstSize,\n  lastView,\n  lastSize,\n  onFirstResize,\n  onLastResize,\n  resizerProps: resizerPropsOverrides = {},\n  innerView,\n  firstViewMinSize,\n  lastViewMinSize,\n  innerViewMinSize,\n  ...containerProps\n}: ThreeViewSplitterProps): React.ReactElement => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const firstViewRef = useRef<HTMLDivElement>(null);\n  const lastViewRef = useRef<HTMLDivElement>(null);\n  const [firstSizeState, setFirstSizeState] = useState<number | null>(null);\n  const [lastSizeState, setLastSizeState] = useState<number | null>(null);\n  const theme = useTheme() as Theme;\n\n  const value = <T1, T2>(horizontalValue: T1, verticalValue: T2) =>\n    orientation === \"horizontal\" ? horizontalValue : verticalValue;\n\n  const FirstResizer: React.ComponentType<ResizerProps> = value(\n    RightResizer,\n    BottomResizer\n  );\n  const SecondResizer: React.ComponentType<ResizerProps> = value(\n    LeftResizer,\n    TopResizer\n  );\n  const sizeStyleProp = value(\"width\", \"height\");\n  const minSizeStyleProp = value(\"minWidth\", \"minHeight\");\n\n  const resizerProps: ThreeViewSplitterProps[\"resizerProps\"] = {\n    background: theme.commonColors.contrastBorder,\n    size: 1,\n    ...resizerPropsOverrides,\n  };\n\n  const isFractionSize = (size: number) => size < 1;\n\n  const normalizeSize = (\n    size: number | undefined | null\n  ): CSSProperties[\"width\" | \"height\"] =>\n    size != null\n      ? isFractionSize(size)\n        ? `${size * 100}%`\n        : Math.round(size)\n      : undefined;\n\n  const getSize = (elem: HTMLElement): number =>\n    value(elem.offsetWidth, elem.offsetHeight);\n\n  const getNewSize = (currentSize: number, newSize: number) => {\n    if (currentSize != null && isFractionSize(currentSize)) {\n      if (!containerRef.current) {\n        throw new Error(\n          \"ThreeViewSplitter: Could not locate container to calculate fraction size\"\n        );\n      }\n      const containerSize = value(\n        containerRef.current.offsetWidth,\n        containerRef.current.offsetHeight\n      );\n      const newFractionSize = newSize / containerSize;\n      return newFractionSize < 1 ? newFractionSize : currentSize;\n    } else {\n      return Math.max(newSize, 1);\n    }\n  };\n\n  const getActualSize = (viewElem: HTMLElement | null): number | null => {\n    if (!containerRef.current || !viewElem) {\n      return null;\n    }\n    const actualSize = getSize(viewElem);\n    if (viewElem.style[sizeStyleProp]?.includes(\"%\")) {\n      return actualSize / getSize(containerRef.current);\n    }\n    return actualSize;\n  };\n\n  const currentLastSize = normalizeSize(lastSizeState ?? lastSize);\n  const currentFirstSize = normalizeSize(firstSizeState ?? firstSize);\n  return (\n    <StyledSplitterContainer\n      ref={containerRef}\n      orientation={orientation}\n      {...containerProps}\n    >\n      {firstView && (\n        <>\n          <StyledView\n            ref={firstViewRef}\n            style={{\n              [sizeStyleProp]: currentFirstSize,\n              // if other side is resizing, minWidth/minHeight is set so that this side is not get affected.\n              // It may make sense to allow opting out of this behaviour, if it's considered a feature to be able to\n              // \"push\" the other side too when expanding one side.\n              [minSizeStyleProp]:\n                (lastSizeState !== null ? currentFirstSize : undefined) ??\n                firstViewMinSize,\n            }}\n          >\n            {firstView}\n          </StyledView>\n          <FirstResizer\n            onResizeStarted={() => {\n              const size = firstViewRef.current\n                ? getSize(firstViewRef.current)\n                : 0;\n              setFirstSizeState(firstSize ?? size);\n              return size;\n            }}\n            onResize={(newSize) => {\n              if (firstSizeState != null) {\n                setFirstSizeState(getNewSize(firstSizeState, newSize));\n              }\n            }}\n            onResizeEnd={() => {\n              const actualSize = getActualSize(firstViewRef.current);\n              if (actualSize !== null) {\n                onFirstResize?.(actualSize);\n              }\n              setFirstSizeState(null);\n            }}\n            {...resizerProps}\n          />\n        </>\n      )}\n      {innerView && (\n        <StyledSplitterInnerView\n          style={{\n            [minSizeStyleProp]: innerViewMinSize,\n          }}\n        >\n          {innerView}\n        </StyledSplitterInnerView>\n      )}\n      {lastView && (\n        <>\n          <SecondResizer\n            onResizeStarted={() => {\n              const size = getSize(lastViewRef.current!);\n              setLastSizeState(lastSize ?? size);\n              return size;\n            }}\n            onResize={(newSize) => {\n              if (lastSizeState != null) {\n                setLastSizeState(getNewSize(lastSizeState, newSize));\n              }\n            }}\n            onResizeEnd={() => {\n              const actualSize = getActualSize(lastViewRef.current);\n              if (actualSize !== null) {\n                onLastResize?.(actualSize);\n              }\n              setLastSizeState(null);\n            }}\n            {...resizerProps}\n          />\n          <StyledView\n            ref={lastViewRef}\n            style={{\n              [sizeStyleProp]: currentLastSize,\n              // if other side is resizing, minWidth/minHeight is set so that this side is not get affected.\n              // It may make sense to allow opting out of this behaviour, if it's considered a feature to be able to\n              // \"push\" the other side too when expanding one side.\n              [minSizeStyleProp]:\n                (firstSizeState !== null ? currentLastSize : undefined) ??\n                lastViewMinSize,\n            }}\n          >\n            {lastView}\n          </StyledView>\n        </>\n      )}\n    </StyledSplitterContainer>\n  );\n};\n","import { isMac } from \"@react-aria/utils\";\nimport React, { HTMLProps, useRef } from \"react\";\nimport { css } from \"styled-components\";\nimport { WINDOW_SHADOW } from \"../style-constants\";\nimport { styled } from \"../styled\";\nimport { Theme } from \"../Theme/Theme\";\nimport { FloatWindowState } from \"./ToolWindowsState/ToolWindowsLayoutState\";\nimport { WindowBounds } from \"./ToolWindowsState/ToolWindowsState\";\nimport {\n  OverlayInteractionHandler,\n  OverlayResizeHandles,\n  useResizableMovableOverlay,\n} from \"@intellij-platform/core/Overlay\";\nimport { Overlay } from \"@react-aria/overlays\";\n\nconst FLOAT_WINDOW_MIN_WIDTH = 100;\nconst FLOAT_WINDOW_MIN_HEIGHT = 40; // in Intellij Platform it's zero but there is window frame which doesn't exist here\n\nconst StyledFloatView = styled.div`\n  box-sizing: border-box;\n  position: fixed;\n  background: ${({ theme }) => theme.commonColors.panelBackground};\n  color: ${({ theme }) => theme.color(\"*.foreground\")};\n  // border color doesn't seem to be correct and needs more investigation. might be even os-specific and outside\n  // theme colors.\n  border: ${({ theme }) => `1px solid ${theme.color(\"Component.borderColor\")}`};\n  ${WINDOW_SHADOW};\n  ${isMac() &&\n  css<{ theme: Theme }>`\n    border-radius: 8px;\n  `}\n  z-index: 2;\n`;\n\n/**\n * Container for tool windows in float view mode. It handles some visual aspects like the border and shadow, as well as\n * UI interactions for changing the floatingBound of the tool window.\n */\nexport const FloatView: React.FC<\n  {\n    state: FloatWindowState;\n    onBoundsChange: (bounds: WindowBounds) => void;\n  } & Omit<HTMLProps<HTMLDivElement>, \"ref\" | \"as\">\n> = ({ children, state: { bounds }, onBoundsChange, ...otherProps }) => {\n  const ref = useRef(null);\n  const { bounds: boundsStyle, overlayInteractionHandlerProps } =\n    useResizableMovableOverlay(ref, {\n      bounds,\n      onBoundsChange,\n    });\n\n  return (\n    <Overlay>\n      <StyledFloatView\n        {...otherProps}\n        ref={ref}\n        style={{ ...otherProps.style, ...boundsStyle }}\n      >\n        <OverlayInteractionHandler {...overlayInteractionHandlerProps}>\n          <OverlayResizeHandles\n            minWidth={FLOAT_WINDOW_MIN_WIDTH}\n            minHeight={FLOAT_WINDOW_MIN_HEIGHT}\n          />\n          {children}\n        </OverlayInteractionHandler>\n      </StyledFloatView>\n    </Overlay>\n  );\n};\n","import { move } from \"ramda\";\nimport React, { HTMLProps, Key, useState } from \"react\";\nimport { FloatView } from \"./FloatView\";\nimport { FloatWindowState } from \"./ToolWindowsState/ToolWindowsLayoutState\";\nimport { WindowBounds } from \"./ToolWindowsState/ToolWindowsState\";\n\n// NOTE: useStackedLayersState and useStackedLayers are generic but kept here since there is no other use case at the\n// moment. They should be moved to their own file(s) when/if other use case came up.\n\ninterface StackedLayersState<T> {\n  /**\n   * Sorted list of items representing layers.\n   */\n  sorted: T[];\n  /**\n   * A function to be used when the layer should be brought to front, typically based on some UI interaction.\n   */\n  bringToFront: (index: number) => void;\n}\n\n/**\n * State management for a stacked list of layers with **bring to front** functionality.\n */\nfunction useStackedLayersState<T, K = React.Key>(\n  /**\n   * A list of arbitrary items representing stacked layers.\n   */\n  items: T[],\n  /**\n   * A function for converting each item into a key which consistently identifies each item, in subsequent renders.\n   * It's used to maintain current sorting state. Although it can be of any type, it's usually a string or number.\n   */\n  getKey: (item: T) => K\n): StackedLayersState<T> {\n  // Local state for now, but can easily change to controllable if needed.\n  const [sortedKeys, setSortedKeys] = useState<K[]>([]);\n  const sorted = items.sort(\n    (a, b) => sortedKeys.indexOf(getKey(a)) - sortedKeys.indexOf(getKey(b))\n  );\n  return {\n    sorted,\n    bringToFront: (index: number) => {\n      setSortedKeys(move(index, -1, sorted).map(getKey));\n    },\n  };\n}\n\n/**\n * Given the state of a stacked list of layers, returns DOM props to be applied to each layer for interaction-based\n * \"bring to front\" behaviour.\n */\nfunction useStackedLayers<T>(state: StackedLayersState<T>): {\n  layersProps: Array<HTMLProps<HTMLElement>>;\n} {\n  return {\n    layersProps: state.sorted.map((_, index) => ({\n      onFocus: () => {\n        state.bringToFront(index);\n      },\n    })),\n  };\n}\n\n/**\n * Renders float tool windows.\n * - handles resize and move actions for float windows.\n * - handles layering of float tool windows.\n */\nexport function FloatToolWindows({\n  floatWindows = [],\n  onBoundsChange,\n  renderToolWindow,\n}: {\n  floatWindows: FloatWindowState[] | undefined;\n  onBoundsChange: (key: Key, bounds: WindowBounds) => void;\n  renderToolWindow: (key: Key) => React.ReactNode;\n}) {\n  const stackedFloatWindows = useStackedLayersState(\n    floatWindows,\n    ({ key }) => key\n  );\n  const { layersProps } = useStackedLayers(stackedFloatWindows);\n  // sorted list is used to render layers. We could as well use z-index and always render with the same order, but\n  // it doesn't really matter as long as key is set.\n  return (\n    <>\n      {stackedFloatWindows.sorted.map((toolWindow, index) => (\n        <FloatView\n          key={toolWindow.key}\n          state={toolWindow}\n          {...layersProps[index]}\n          onBoundsChange={(bounds) => onBoundsChange(toolWindow.key, bounds)}\n        >\n          {renderToolWindow(toolWindow.key)}\n        </FloatView>\n      ))}\n    </>\n  );\n}\n","import React, {\n  Key,\n  MutableRefObject,\n  RefObject,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { useLatest } from \"../utils/useLatest\";\nimport { DropPosition } from \"./createGetDropPosition\";\nimport { UseElementMoveOptions } from \"./useElementMove\";\nimport { Anchor } from \"./utils\";\n\ntype Rect = Omit<ClientRect, \"toJSON\" | \"x\" | \"y\">;\n\ntype StripeLocation<T extends unknown> = {\n  index: number;\n  anchor: Anchor;\n  isSplit: boolean;\n};\ntype MovableStripeProps<T> = {\n  stripeElRef: React.RefObject<HTMLElement>;\n  getKey: (item: T) => Key;\n  anchor: Anchor;\n  mainItems: T[];\n  splitItems: T[];\n  createGetDropPosition: (\n    key: Key\n  ) => (draggedRect: Rect) => DropPosition | null;\n};\n\ntype MovableToolWindowStripeContextType<T> = {\n  addStripe: <T>(\n    id: string,\n    propsRef: MutableRefObject<MovableStripeProps<T>>\n  ) => () => void;\n  startMove: (id: string, args: { from: Rect; key: Key }) => void;\n  move: (args: { to: Rect }) => void;\n  endMove: () => void;\n  dropPosition: null | { id: string; dropPosition: DropPosition };\n  draggingKey: Key | null;\n  draggingRect: Rect | null;\n};\n\nexport type MovableToolWindowStripeProviderProps<T = unknown> = {\n  children: React.ReactNode;\n  onMove: (args: { from: StripeLocation<T>; to: StripeLocation<T> }) => void;\n};\n\nconst MovableToolWindowStripeContext =\n  React.createContext<MovableToolWindowStripeContextType<any> | null>(null);\n\n/**\n * A wrapper component to render around `ToolWindowStripe`s to make their button movable. Stripe buttons then become\n * draggable and can be moved either within the same `ToolWindowStripe` or across different ones.\n * @param onMove: called when a stripe button is moved from one anchor to another.\n * @param children: child element tree, containing one or more ToolWindowStripe elements. No need to be direct children.\n */\nexport const MovableToolWindowStripeProvider = <T extends unknown>({\n  onMove,\n  children,\n}: MovableToolWindowStripeProviderProps<T>) => {\n  const stripes = useRef<{\n    [id: string]: RefObject<MovableStripeProps<T>>;\n  }>({});\n  const [draggingRect, setDraggingRect] = useState<Rect | null>(null);\n  const [draggingKey, setDraggingKey] = useState<Key | null>(null);\n  const [dropPosition, setDropPosition] = useState<{\n    id: string;\n    dropPosition: DropPosition;\n  } | null>(null);\n  const getDropPositionRef = useRef<\n    (to: Rect) => {\n      id: string;\n      dropPosition: DropPosition;\n    } | null\n  >(() => null);\n  const moveStartLocationRef = useRef<null | {\n    id: string;\n    index: number;\n    anchor: Anchor;\n    isSplit: boolean;\n  }>(null);\n\n  const contextValue = useMemo(\n    (): MovableToolWindowStripeContextType<T> => ({\n      addStripe: (id, propsRef) => {\n        if (stripes.current[id]) {\n          console.error(`multiple stripes with the same id \"${id}`);\n        }\n        // @ts-expect-error\n        stripes.current[id] = propsRef;\n        return () => {\n          delete stripes.current[id];\n        };\n      },\n      startMove: (id, { from, key }) => {\n        const stripe = stripes.current[id]?.current;\n        if (!stripe) {\n          return;\n        }\n        const { stripeElRef } = stripe;\n        const stripeElement = stripeElRef.current!;\n        const getItemRect = (key: Key) =>\n          stripeElement\n            .querySelector(`[data-key=\"${key}\"]`)! // FIXME\n            .getBoundingClientRect();\n\n        // Running the following two state setters immediately affect the layout\n        // in a way that is necessary for drop position calculation, so the order\n        // is important\n        setDraggingRect(getItemRect(key).toJSON());\n        setDraggingKey(key);\n\n        const indexInMain = stripe.mainItems.findIndex(\n          (item) => stripe.getKey(item) === key\n        );\n        const indexInSplit = stripe.splitItems.findIndex(\n          (item) => stripe.getKey(item) === key\n        );\n        moveStartLocationRef.current = {\n          id,\n          anchor: stripe.anchor,\n          index: indexInMain > -1 ? indexInMain : indexInSplit,\n          isSplit: indexInSplit > -1,\n        };\n\n        const dropPositionGetters = Object.entries(stripes.current).map(\n          ([id, stripe]) =>\n            [id, stripe.current!.createGetDropPosition(key)] as const\n        );\n        const getDropPosition = (draggedRect: Rect) => {\n          for (const [id, getDropPosition] of dropPositionGetters) {\n            const dropPosition = getDropPosition(draggedRect);\n            if (dropPosition) {\n              return {\n                id,\n                dropPosition,\n              };\n            }\n          }\n          return null;\n        };\n\n        setDropPosition(getDropPosition(from));\n\n        getDropPositionRef.current = getDropPosition;\n      },\n      move: ({ to }) => {\n        setDropPosition(getDropPositionRef.current(to));\n      },\n      endMove: () => {\n        if (dropPosition && draggingKey) {\n          onMove({\n            from: moveStartLocationRef.current!,\n            to: {\n              anchor: dropPosition.id as Anchor /*FIXME*/,\n              index: dropPosition.dropPosition.index,\n              isSplit: dropPosition.dropPosition.split,\n            },\n          });\n        }\n        setDraggingKey(null);\n        setDropPosition(null);\n        setDraggingRect(null);\n      },\n      dropPosition,\n      draggingRect,\n      draggingKey,\n    }),\n    [dropPosition, draggingKey, draggingRect]\n  );\n\n  return (\n    <MovableToolWindowStripeContext.Provider value={contextValue}>\n      {children}\n    </MovableToolWindowStripeContext.Provider>\n  );\n};\n\nexport function useMovableStripeButtons<T>(props: MovableStripeProps<T>) {\n  // Seems reasonable to assume anchor is unique. Also current onMove signature is coupled with anchor, not a more generic id.\n  const id = props.anchor;\n  const context = useContext(MovableToolWindowStripeContext);\n  const latestPropsRef = useLatest(props);\n  useEffect(() => {\n    if (context) {\n      return context.addStripe(id, latestPropsRef);\n    }\n  }, [context, id]);\n\n  const getProps = (\n    key: Key\n  ): Pick<\n    Required<UseElementMoveOptions<unknown>>,\n    \"onMoveStart\" | \"onMove\" | \"onMoveEnd\"\n  > & { moveDisabled: boolean } => ({\n    moveDisabled: !context,\n    onMoveStart: ({ from }) => {\n      context?.startMove?.(id, { from, key });\n    },\n    onMove: ({ to }) => {\n      context?.move({ to });\n    },\n    onMoveEnd: () => {\n      context?.endMove();\n    },\n  });\n  return {\n    getProps,\n    draggingRect: context?.draggingRect ?? null,\n    dropPosition:\n      context?.dropPosition?.id === id\n        ? context?.dropPosition.dropPosition\n        : null,\n    draggingKey: context?.draggingKey ?? null,\n  };\n}\n","import { styled } from \"../styled\";\nimport { css } from \"styled-components\";\n\nconst TopStripe = styled.div`\n  display: flex; // default display, which is block causes an unwanted minimum height\n  grid-area: ts;\n`;\nconst BottomStripe = styled.div`\n  display: flex; // default display, which is block causes an unwanted minimum height\n  grid-area: bs;\n`;\nconst LeftStripe = styled.div`\n  grid-area: ls;\n`;\nconst RightStripe = styled.div`\n  grid-area: rs;\n`;\nconst InnerView = styled.div`\n  grid-area: main;\n  min-height: 0; // necessary to prevent overflow;\n  position: relative; // necessary for undock views which are absolute positioned\n  background: inherit;\n  min-width: 0; // very important for layout. If not set, resizing tool windows can cause weird scrollbar inside tool windows pane.\n`;\n\n/**\n * The container which renders top,bottom,left and right stripes with a centered content.\n * responsible only for the layout of the stripes and the centered content. layout doesn't\n * include the opened tool windows on different sides and is just about the stripes around\n * the center area.\n * It also supports toggling stripes visibility.\n */\nconst Shell = styled.div<{ hideStripes: boolean }>`\n  display: grid;\n  grid-template-columns: min-content auto min-content;\n  grid-template-rows: min-content auto min-content;\n  grid-template-areas:\n    \".   ts   .\"\n    \"ls main rs\"\n    \".   bs   .\";\n\n  background: ${({ theme }) => theme.commonColors.panelBackground};\n  color: ${({ theme }) => theme.color(\"*.foreground\")};\n  ${({ hideStripes }) =>\n    hideStripes &&\n    css`\n      ${TopStripe},\n      ${BottomStripe}, \n      ${LeftStripe}, \n      ${RightStripe} {\n        display: none;\n      }\n    `}\n`;\n\nexport const StyledToolWindowOuterLayout = {\n  Shell,\n  TopStripe,\n  BottomStripe,\n  LeftStripe,\n  RightStripe,\n  InnerView,\n};\n","import { compose, filter, groupBy, map, pipe, prop, sortBy } from \"ramda\";\nimport { Key } from \"react\";\nimport { Anchor, isHorizontalToolWindow } from \"../utils\";\nimport {\n  ToolWindowsState,\n  ToolWindowState,\n  ViewMode,\n} from \"./ToolWindowsState\";\n\ntype ToolWindowStateWithKey = { key: Key } & ToolWindowState;\n\nexport interface StripesState {\n  main: Key[];\n  split: Key[];\n  activeKeys: Key[];\n}\n\n/**\n * Represents UI state of the split view (aka secondary or side view) within a docked view at one of the four sides.\n */\ntype SideDockedSplitState = {\n  key: Key;\n  /**\n   * relative size of the split view inside a docked view. Note that this is intentionally a fraction size (0≤size<1),\n   * based on the expected behaviour. split views inside a docked view are not fixed sized and resizing the window\n   * affect their size. This is not the case for the docked views themselves inside the main layout, which have fixed\n   * size which is not affected by window resizing.\n   */\n  sizeFraction: number;\n};\n\n// A potential improvement for this and similar nullable types like SideDockedState.split might be to avoid null type\n// and have it like { open: false} | {open: true, ...relevantProps}\n// Not sure if it's really preferred in terms of usage in the react component.\nexport type SideDockedState = null | {\n  size: number;\n  mainKey: Key;\n  split: SideDockedSplitState | null;\n};\n\nexport type SideUnDockedState = null | {\n  size: number;\n  key: Key;\n};\n\nexport interface SideState {\n  docked: SideDockedState;\n  undocked: SideUnDockedState;\n  stripes: StripesState;\n}\n\nexport interface FloatWindowState {\n  key: Key;\n  bounds: Exclude<ToolWindowState[\"floatingBounds\"], undefined>;\n}\n\n/**\n * Derived from ToolWindowsState, it represents the same information in a away that is suitable for ToolWindows\n * component to render the layout.\n */\nexport interface ToolWindowsLayoutState {\n  left: SideState;\n  top: SideState;\n  right: SideState;\n  bottom: SideState;\n  floatWindows: Array<FloatWindowState>;\n  windows: Array<FloatWindowState>;\n}\n\ninterface ContainerSize {\n  width: number;\n  height: number;\n}\n\nconst getSizeInAnchor = (containerSize: ContainerSize, anchor: Anchor) =>\n  containerSize[isHorizontalToolWindow(anchor) ? \"height\" : \"width\"];\n\nconst mapToKey = map<ToolWindowStateWithKey, Key>(prop(\"key\"));\nconst sortAndMapToKey = compose(\n  mapToKey,\n  sortBy(({ order }: ToolWindowStateWithKey) => order)\n);\nconst filterMains = filter<ToolWindowStateWithKey, \"array\">(\n  ({ isSplit }: ToolWindowStateWithKey) => !isSplit\n);\nconst getMains = compose(sortAndMapToKey, filterMains);\nconst filterSplits = filter<ToolWindowStateWithKey, \"array\">(\n  ({ isSplit }: ToolWindowStateWithKey) => isSplit\n);\nconst filterVisible = (expectedViewMode: ViewMode | ViewMode[] = []) =>\n  filter<ToolWindowStateWithKey, \"array\">(\n    ({ viewMode, isVisible }: ToolWindowStateWithKey) =>\n      isVisible &&\n      ([] as ViewMode[]).concat(expectedViewMode).includes(viewMode)\n  );\nconst getSplits = compose(sortAndMapToKey, filterSplits);\n\nconst filterVisibleDocked = filterVisible([\"docked_unpinned\", \"docked_pinned\"]);\nconst filterVisibleUnDocked = filterVisible(\"undock\");\n\nconst getDocked = (\n  anchor: Anchor,\n  containerSize: ContainerSize,\n  toolWindows: ToolWindowStateWithKey[]\n): SideDockedState => {\n  const docks = filterVisibleDocked(toolWindows);\n  const mains = filterMains(docks);\n  const splits = filterSplits(docks);\n  if (mains.length > 1 || splits.length > 1) {\n    throw new Error(\n      \"More than one visible docked window in a side is not possible\"\n    );\n  }\n  if (mains[0] || splits[0]) {\n    const weight = mains[0]?.weight || splits[0]?.weight;\n    return {\n      mainKey: mains[0]?.key || splits[0]?.key,\n      split:\n        mains[0]?.key && splits[0]?.key\n          ? {\n              key: splits[0].key,\n              sizeFraction: mains[0].weight\n                ? 1 - mains[0].sideWeight\n                : splits[0].sideWeight,\n            }\n          : null,\n      size: weight * getSizeInAnchor(containerSize, anchor),\n    };\n  }\n  return null;\n};\n\nconst getUnDocked = (\n  anchor: Anchor,\n  containerSize: ContainerSize,\n  toolWindows: ToolWindowStateWithKey[]\n): SideUnDockedState => {\n  const windows = filterVisibleUnDocked(toolWindows);\n  if (windows.length === 1) {\n    return {\n      key: windows[0].key,\n      size: windows[0].weight * getSizeInAnchor(containerSize, anchor),\n    };\n  }\n  if (windows.length === 0) {\n    return null;\n  }\n  throw new Error(\n    \"More than one visible undocked window in a side is not possible\"\n  );\n};\n\nconst getSideState = (\n  anchor: Anchor,\n  containerSize: ContainerSize,\n  toolWindows: ToolWindowStateWithKey[]\n): SideState => ({\n  stripes: {\n    main: getMains(toolWindows),\n    split: getSplits(toolWindows),\n    activeKeys: mapToKey(toolWindows.filter(({ isVisible }) => isVisible)),\n  },\n  undocked: getUnDocked(anchor, containerSize, toolWindows),\n  docked: getDocked(anchor, containerSize, toolWindows),\n});\n\nconst DEFAULT_HEIGHT = 300;\nconst DEFAULT_WIDTH = 400;\nconst getFloatWindowState =\n  (containerSize: ContainerSize) =>\n  ({\n    floatingBounds: bounds = {\n      top: containerSize.height / 2 - DEFAULT_HEIGHT / 2,\n      left: containerSize.width / 2 - DEFAULT_WIDTH / 2,\n      height: DEFAULT_HEIGHT,\n      width: DEFAULT_WIDTH,\n    },\n    key,\n  }: ToolWindowStateWithKey): FloatWindowState => ({ bounds, key });\n\nconst getFloatWindowsState = (\n  viewMode: \"float\" | \"window\",\n  containerSize: ContainerSize,\n  toolWindows: ToolWindowStateWithKey[]\n) =>\n  pipe(\n    filterVisible(viewMode),\n    map<ToolWindowStateWithKey, FloatWindowState>(\n      getFloatWindowState(containerSize)\n    )\n  )(toolWindows);\n\nexport function getToolWindowsLayoutState(\n  state: Readonly<ToolWindowsState>,\n  containerSize: ContainerSize,\n  /**\n   * list of valid window ids. If state contains window ids that are not included here, they will be excluded in\n   * the returned state object.\n   */\n  windowIds: string[] = Object.keys(state.windows)\n): ToolWindowsLayoutState {\n  const toolWindows = Object.keys(state.windows)\n    .filter(\n      (key) => windowIds.includes(key) && !state.removedFromSideBarIds.has(key)\n    )\n    .map((key) => ({\n      ...state.windows[key],\n      key,\n    }));\n  const {\n    top = [],\n    bottom = [],\n    left = [],\n    right = [],\n  } = groupBy(({ anchor }) => anchor, toolWindows);\n  return {\n    left: getSideState(\"left\", containerSize, left),\n    top: getSideState(\"top\", containerSize, top),\n    right: getSideState(\"right\", containerSize, right),\n    bottom: getSideState(\"bottom\", containerSize, bottom),\n    windows: getFloatWindowsState(\"window\", containerSize, toolWindows),\n    floatWindows: getFloatWindowsState(\"float\", containerSize, toolWindows),\n  };\n}\n","import { Anchor, isHorizontalToolWindow } from \"./utils\";\nimport { Key } from \"react\";\ntype Rect = Omit<ClientRect, \"toJSON\" | \"x\" | \"y\">;\n\nexport interface DropPosition {\n  index: number;\n  split: boolean;\n\n  relative?: {\n    placement: \"before\" | \"after\";\n    key: Key;\n  };\n}\n\n/**\n * TODO: Add a few words about what this function do.\n */\nexport const createGetDropPosition = <T extends any>({\n  anchor,\n  stripeElement,\n  splitItems,\n  mainItems,\n  getItemRect,\n  getKey,\n}: {\n  stripeElement: HTMLElement;\n  anchor: Anchor;\n  getItemRect: (key: Key) => Rect;\n  getKey: (key: T) => Key;\n  mainItems: T[];\n  splitItems: T[];\n}): ((draggedRect: Rect) => DropPosition | null) => {\n  // Note: It may be tempting to calculate stripe element boundaries just once\n  // here, since it's not supposed to change during a drag session, but it\n  // can change due to getting empty when the only button is being dragged out.\n  const getStripeRect = () => stripeElement.getBoundingClientRect();\n\n  const getCanDrop = (draggingRect: Rect) => {\n    const stripeRect = getStripeRect();\n    return (\n      draggingRect.right > stripeRect.left - stripeRect.width &&\n      draggingRect.left < stripeRect.right &&\n      draggingRect.bottom > stripeRect.top - stripeRect.height &&\n      draggingRect.top < stripeRect.bottom\n    );\n  };\n\n  const start = (rect: Rect) =>\n    isHorizontalToolWindow(anchor) ? rect.left : rect.top;\n  const end = (rect: Rect) =>\n    isHorizontalToolWindow(anchor) ? rect.right : rect.bottom;\n\n  const getKeyToOffsets = (items: T[]) => {\n    const keyToOffsets: Record<Key, { start: number; end: number }> = {};\n    items.forEach((item) => {\n      const key = getKey(item);\n      const boundingRect = getItemRect(key);\n      keyToOffsets[key] = {\n        start: start(boundingRect),\n        end: end(boundingRect),\n      };\n    });\n    return keyToOffsets;\n  };\n\n  const getDropPositions = (\n    items: T[],\n    split = false\n    // FIXME: score is a bad name. it's quite the opposite! the less means the higher score.\n  ): Array<DropPosition & { score: (rect: Rect) => number }> => {\n    const getRef = split ? end : start;\n    if (items.length === 0) {\n      // if the section is empty, we should still allow adding to it.\n      return [\n        {\n          index: 0,\n          split,\n          score: (draggingRect: Rect) =>\n            Math.abs(getRef(draggingRect) - getRef(getStripeRect())),\n        },\n      ];\n    }\n    return items.flatMap((item, index) => {\n      const key = getKey(item);\n      return [\n        {\n          index,\n          split,\n          relative: { key, placement: \"before\" },\n          score: (draggingRect: Rect) =>\n            Math.abs(getRef(draggingRect) - keyToOffsets[key].start),\n        },\n        {\n          index: index + 1,\n          split,\n          relative: { key, placement: \"after\" },\n          score: (draggingRect: Rect) =>\n            Math.abs(getRef(draggingRect) - keyToOffsets[key].end),\n        },\n      ];\n    });\n  };\n\n  const keyToOffsets = getKeyToOffsets([...mainItems, ...splitItems]);\n\n  const dropPositions = [\n    ...getDropPositions(mainItems),\n    ...getDropPositions(splitItems, true),\n  ];\n\n  let lastDropPosition: DropPosition | null = null;\n  return (draggingRect: Rect) => {\n    if (!getCanDrop(draggingRect)) {\n      return null;\n    }\n    const result = dropPositions.reduce(\n      (bestMatch, candidate) => {\n        const score = candidate.score(draggingRect);\n        if (!bestMatch || score < bestMatch.score) {\n          return {\n            ...candidate,\n            score,\n          };\n        }\n        return bestMatch;\n      },\n      null as\n        | null\n        | (DropPosition & {\n            score: number;\n          })\n    );\n\n    if (!result) {\n      return null;\n    }\n    if (\n      result.split !== lastDropPosition?.split ||\n      result.index !== lastDropPosition?.index\n    ) {\n      lastDropPosition = result;\n    }\n    return lastDropPosition;\n  };\n};\n","import { StyledIconWrapper } from \"../Icon/StyledIconWrapper\";\nimport { styled } from \"../styled\";\nimport React from \"react\";\nimport { css } from \"styled-components\";\nimport { Anchor } from \"./utils\";\n\nexport interface StyledToolWindowStripeButtonProps {\n  anchor: Anchor;\n  active?: boolean;\n}\n\nexport const STRIPE_BUTTON_CROSS_PADDING = 2.5;\nexport const STRIPE_BUTTON_LINE_HEIGHT = \"1rem\";\n\nconst anchorStyles = ({ anchor }: { anchor: Anchor }) => {\n  const orientation =\n    anchor === \"left\" || anchor === \"right\" ? \"vertical\" : \"horizontal\";\n\n  return orientation === \"horizontal\"\n    ? css`\n        padding: ${STRIPE_BUTTON_CROSS_PADDING}px 10px;\n      `\n    : css`\n        padding: 10px ${STRIPE_BUTTON_CROSS_PADDING}px;\n        writing-mode: vertical-lr;\n        // writing-mode: sideways-lr is not supported anywhere other than FF, so, we need to rotate\n        transform: ${anchor === \"left\" ? \"rotateZ(180deg)\" : undefined};\n\n        // icons are not rotated like text in Intellij Platform implementation. It kind of makes sense.\n        ${StyledIconWrapper} {\n          transform: rotate(180deg);\n        }\n      `;\n};\n\nexport const StyledToolWindowStripeButton = styled.span<StyledToolWindowStripeButtonProps>`\n  box-sizing: border-box;\n  display: flex; // to allow icon and text alignment by default;\n  align-items: center;\n  cursor: default;\n  user-select: none;\n  overflow: hidden;\n  direction: ltr;\n  flex-shrink: 0;\n  font-size: 0.7rem;\n  line-height: ${STRIPE_BUTTON_LINE_HEIGHT}; // absolute value seems to be problematic when the base font size is changed\n  white-space: nowrap;\n  color: ${({ theme, active }) =>\n    active\n      ? theme.color(\n          \"ToolWindow.Button.selectedForeground\",\n          theme.dark ? \"rgb(255,255,255)\" : \"rgb(0,0,0)\"\n        )\n      : theme.color(\"*.foreground\")};\n  background: ${({ theme, active }) =>\n    active\n      ? theme.color(\n          \"ToolWindow.Button.selectedBackground\",\n          theme.dark ? \"rgba(15,15,15,.332)\" : \"rgba(85,85,85,.332)\"\n        )\n      : undefined};\n\n  ${anchorStyles}\n  ${({ active }) =>\n    !active &&\n    css`\n      &:hover {\n        background: ${({ theme }) =>\n          theme.color(\n            \"ToolWindow.Button.hoverBackground\",\n            theme.dark ? \"rgba(15,15,15,.156)\" : \"rgba(85,85,85,.156)\"\n          )};\n      }\n    `};\n`;\n","import {\n  STRIPE_BUTTON_CROSS_PADDING,\n  STRIPE_BUTTON_LINE_HEIGHT,\n  StyledToolWindowStripeButton,\n} from \"./StyledToolWindowStripeButton\";\nimport { Anchor, isHorizontalToolWindow, theOtherSide } from \"./utils\";\nimport { css } from \"styled-components\";\nimport { Theme } from \"../Theme/Theme\";\nimport { styled } from \"../styled\";\nimport { Color } from \"../Theme/Color\";\n\nconst minHeight = `calc(${STRIPE_BUTTON_LINE_HEIGHT} + ${\n  2 * STRIPE_BUTTON_CROSS_PADDING + 1 /*border*/\n}px)`;\n\nconst anchorStyles = ({\n  anchor,\n  preventCollapse,\n}: StyledToolWindowStripeProps) =>\n  isHorizontalToolWindow(anchor)\n    ? css`\n        flex-direction: row;\n        width: 100%;\n        min-height: ${preventCollapse ? minHeight : \"fit-content\"};\n        ${StyledToolWindowStripeButton} {\n          height: 1.25rem;\n        }\n      `\n    : css`\n        flex-direction: column;\n        height: 100%;\n        min-width: ${preventCollapse ? minHeight : \"fit-content\"};\n        ${StyledToolWindowStripeButton} {\n          width: 1.25rem;\n        }\n      `;\nconst borderStyle = ({ anchor, theme }: { anchor: Anchor; theme: Theme }) =>\n  css`border-${theOtherSide(anchor)}: 1px solid ${\n    theme.commonColors.contrastBorder\n  }`;\n\nexport interface StyledToolWindowStripeProps {\n  anchor: Anchor;\n  highlighted?: boolean;\n  preventCollapse?: boolean;\n}\n\nexport const StyledToolWindowStripe = styled.div<StyledToolWindowStripeProps>`\n  box-sizing: border-box;\n  background: ${({ theme, highlighted }) =>\n    highlighted\n      ? Color.brighter(theme.commonColors.panelBackground)\n      : theme.commonColors.panelBackground};\n  display: inline-flex;\n  overflow: hidden;\n  ${borderStyle};\n  ${anchorStyles}\n`;\n\nexport const StyledSpacer = styled.div`\n  flex: 1;\n`;\n","import { RefObject } from \"react\";\nimport {\n  useMove,\n  UseMoveOptions,\n  XY,\n} from \"../utils/interaction-utils/useMove\";\nimport { findEffectiveBackgroundColor } from \"./findEffectiveBackgroundColor\";\n\ntype Rect = Omit<ClientRect, \"toJSON\" | \"x\" | \"y\">;\n\nexport interface UseElementMoveOptions<S>\n  extends Omit<UseMoveOptions<S>, \"onMoveStart\" | \"onMove\"> {\n  ref: RefObject<HTMLElement>;\n  /**\n   * if true a clone of the element is created and used as ghost.\n   * A function can be passed to customize the default ghost element or return a completely\n   * different one.\n   */\n  ghost?: boolean | ((defaultGhost: HTMLElement) => HTMLElement);\n\n  onMoveStart: (args: { from: Rect }) => S;\n  onMove: (args: { from: Rect; to: Rect; movement: XY; startState: S }) => void;\n}\n\n/**\n * Provides necessary event handling props to be applied on an element to make it movable.\n * It's implemented on top of {@link useMove}. The differences are:\n * - The signature of `onMoveStart`, `onMove` and `onMoveEnd` are changed to pass\n *   {@link Rect} instead of {@link XY}.\n * - rendering a ghost element.\n *\n * ## A note about ghost:\n * There is no easy way to create a snapshot image of an html element. Native drag and drop API\n * supports [setting drag\n * image](https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/setDragImage) but we are\n * not using drag events mainly because of not being able to customize the offset after which drag\n * should start. See {@link UseMoveOptions#dragThreshold dragThreshold} for more details. There are\n * some libraries like html2canvas for creating an image from an html element, but they are very\n * big and using them doesn't make sense at all from a value/cost ratio perspective. There might be\n * some ways of implementing custom move threshold on top of native drag events. For example by\n * delaying the call to setDragImage, but it needs more investigation. Also, not sure if opacity of\n * the ghost is something you can control when using setDragImage.\n **/\nexport function useElementMove<S>({\n  ref,\n  onMoveStart,\n  onMove,\n  onMoveEnd,\n  ghost: ghostOption,\n  ...otherOptions\n}: UseElementMoveOptions<S>) {\n  return useMove({\n    ...otherOptions,\n    onMoveStart: () => {\n      const element = ref.current;\n      let ghost: HTMLElement | null = null;\n      if (!element) {\n        throw new Error(\n          \"Movement started but ref value is null. Make sure the passed ref is applied on the same element that other props are.\"\n        );\n      }\n      const updateGhostPosition = (rect: Rect) => {\n        if (ghost) {\n          ghost.style.left = `${rect.left}px`;\n          ghost.style.top = `${rect.top}px`;\n        }\n      };\n      const from: Rect = element.getBoundingClientRect();\n      if (ghostOption) {\n        const defaultGhost = createDefaultGhost(element);\n        ghost =\n          typeof ghostOption === \"function\"\n            ? ghostOption(defaultGhost) || defaultGhost\n            : defaultGhost;\n        ghost.style.position = \"fixed\";\n        document.body.append(ghost);\n        updateGhostPosition(from);\n      }\n      return {\n        ghost,\n        from,\n        updateGhostPosition,\n        startState: onMoveStart({ from }),\n      };\n    },\n    onMove: ({\n      movement,\n      startState: { from, updateGhostPosition, startState },\n    }) => {\n      const to: Rect = {\n        left: from.left + movement.x,\n        right: from.right + movement.x,\n        top: from.top + movement.y,\n        bottom: from.bottom + movement.y,\n        height: from.height,\n        width: from.width,\n      };\n      updateGhostPosition(to);\n      onMove({ from, to, movement, startState });\n    },\n    onMoveEnd: ({ startState: { ghost, startState } }) => {\n      ghost?.remove();\n      onMoveEnd?.({ startState });\n    },\n  });\n}\n\nfunction createDefaultGhost(element: HTMLElement) {\n  const ghost = element.cloneNode(true) as HTMLElement;\n  ghost.style.backgroundColor = findEffectiveBackgroundColor(element);\n  return ghost;\n}\n","import { Color } from \"../Theme/Color\";\n\n/**\n * Computes the effective background color of the element by blending translucent backgrounds of\n * the elements ancestors. It traverses up the parents, until reaches a solid background color.\n * all translucent backgrounds in between are blended with that solid color, with respect to their\n * transparency. It's meant to be used only for the simple cases where an element doesn't overflow\n * the parents. Obviously, in other cases there won't be one single effective background color\n * for the element.\n */\nexport function findEffectiveBackgroundColor(element: HTMLElement): string {\n  let elem: HTMLElement | null = element;\n  let colors: Color[] = [];\n  while (elem != null) {\n    const computedBackground = getComputedStyle(elem).backgroundColor;\n    if (computedBackground) {\n      const color = new Color(computedBackground);\n      colors.unshift(color);\n      if (color.a === 255) {\n        // if we've reached a solid color, we don't need to continue traversing ancestors\n        break;\n      }\n    }\n    elem = elem.parentElement;\n  }\n  return (\n    colors\n      .reduce<Color | null>((resultColor, nextColor) => {\n        return resultColor ? resultColor.blend(nextColor) : nextColor;\n      }, null)\n      ?.toString() || \"\"\n  );\n}\n","import { mergeProps } from \"@react-aria/utils\";\nimport React, { CSSProperties, HTMLAttributes, Key, useRef } from \"react\";\nimport { createGetDropPosition, DropPosition } from \"./createGetDropPosition\";\nimport { useMovableStripeButtons } from \"./MovableToolWindowStripeProvider\";\nimport { StyledSpacer, StyledToolWindowStripe } from \"./StyledToolWindowStripe\";\nimport { StyledToolWindowStripeButton } from \"./StyledToolWindowStripeButton\";\nimport { useElementMove, UseElementMoveOptions } from \"./useElementMove\";\nimport { Anchor, isHorizontalToolWindow } from \"./utils\";\n\ninterface ToolWindowStripeProps<T> {\n  anchor: Anchor;\n  items: T[];\n  splitItems?: T[];\n  getKey: (item: T) => Key;\n  renderItem: (item: T) => React.ReactNode;\n  selectedKeys?: Key[];\n  onItemPress?: (key: Key) => void;\n}\n\n/**\n * TODO: refactor to remove the key based interface.\n */\nexport function ToolWindowStripe<T>({\n  anchor,\n  items: mainItems,\n  renderItem: render,\n  splitItems = [],\n  selectedKeys = [],\n  onItemPress,\n  getKey,\n}: ToolWindowStripeProps<T>) {\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const { getProps, draggingRect, draggingKey, dropPosition } =\n    useMovableStripeButtons({\n      stripeElRef: containerRef,\n      getKey,\n      anchor,\n      mainItems,\n      splitItems,\n      createGetDropPosition: (key: Key) => {\n        const isNotCurrentItem = (anItem: T) => getKey(anItem) !== key;\n        const stripeElement = containerRef.current!;\n        const getItemRect = (key: Key) =>\n          stripeElement\n            .querySelector(`[data-key=\"${key}\"]`)! // FIXME\n            .getBoundingClientRect();\n        return createGetDropPosition({\n          stripeElement: stripeElement,\n          mainItems: mainItems.filter(isNotCurrentItem),\n          splitItems: splitItems.filter(isNotCurrentItem),\n          getKey,\n          anchor,\n          getItemRect,\n        });\n      },\n    });\n\n  const highlighted =\n    dropPosition != null &&\n    draggingKey != null &&\n    [...mainItems, ...splitItems].every((item) => getKey(item) !== draggingKey);\n\n  const renderItem = (item: T) => {\n    const key = getKey(item);\n\n    return (\n      <ToolWindowStripeButton\n        anchor={anchor}\n        key={key}\n        data-key={key}\n        style={{\n          ...getStripeButtonStyles({\n            key,\n            dropPosition,\n            anchor,\n            draggingRect,\n            draggingKey,\n          }),\n        }}\n        {...getProps(key)}\n        active={selectedKeys.includes(key)}\n        onPress={() => onItemPress?.(key)}\n      >\n        {render(item)}\n      </ToolWindowStripeButton>\n    );\n  };\n  return (\n    <>\n      <StyledToolWindowStripe\n        anchor={anchor}\n        preventCollapse={Boolean(dropPosition)}\n        highlighted={highlighted}\n        ref={containerRef}\n      >\n        {mainItems.map(renderItem)}\n        <StyledSpacer />\n        {splitItems.map(renderItem)}\n      </StyledToolWindowStripe>\n    </>\n  );\n}\ntype Rect = Omit<ClientRect, \"toJSON\" | \"x\" | \"y\">;\n\nfunction getStripeButtonStyles({\n  anchor,\n  key,\n  dropPosition,\n  draggingRect,\n  draggingKey,\n}: {\n  anchor: Anchor;\n  key: Key;\n  draggingKey: Key | null;\n  draggingRect: Rect | null;\n  dropPosition: DropPosition | null;\n}) {\n  const styles: CSSProperties = {\n    // transition: \"margin 100ms\", // maybe only when drag is in progress, if unwanted transition at drop\n  };\n  if (dropPosition?.relative?.key === key && draggingRect) {\n    const marginValue = isHorizontalToolWindow(anchor)\n      ? draggingRect.width\n      : draggingRect.height;\n\n    if (isHorizontalToolWindow(anchor)) {\n      styles[\n        dropPosition.relative.placement === \"before\"\n          ? \"marginLeft\"\n          : \"marginRight\"\n      ] = marginValue;\n    } else {\n      styles[\n        dropPosition.relative.placement === \"before\"\n          ? \"marginTop\"\n          : \"marginBottom\"\n      ] = marginValue;\n    }\n  }\n  if (key === draggingKey) {\n    styles.display = \"none\";\n  }\n  return styles;\n}\n\nfunction ToolWindowStripeButton<T, S>({\n  children,\n  anchor,\n  onMoveStart,\n  onMove,\n  onMoveEnd,\n  onPress,\n  moveDisabled,\n  ...otherProps\n}: {\n  children: React.ReactNode;\n  anchor: Anchor;\n  style: CSSProperties;\n  active: boolean;\n  onPress: () => void;\n  moveDisabled?: boolean;\n  onMoveStart: UseElementMoveOptions<S>[\"onMoveStart\"];\n  onMove: UseElementMoveOptions<S>[\"onMove\"];\n  onMoveEnd: UseElementMoveOptions<S>[\"onMoveEnd\"];\n}) {\n  const ref = useRef<HTMLElement>(null);\n\n  // for some reason, usePress and useMove (used in useElementMove) are not compatible.\n  // it seems onMouseDown in useMove is not called, even when handlers are merged by mergeProps.\n  // FIXME: fix compatibility of useMove and usePress, and switch to usePress({ onPress })\n  const { pressProps } = {\n    pressProps: {\n      onPointerUp: onPress,\n      onMouseDown: (e) => {\n        e.preventDefault();\n      },\n    } as HTMLAttributes<HTMLElement>,\n  }; //usePress({ onPress });\n  const props = useElementMove({\n    ref,\n    disabled: moveDisabled,\n    dragThreshold: 7,\n    ghost: true,\n    onMoveStart,\n    onMove,\n    onMoveEnd,\n  });\n\n  return (\n    <StyledToolWindowStripeButton\n      anchor={anchor}\n      {...mergeProps(otherProps, pressProps, props)}\n      ref={ref}\n    >\n      {children}\n    </StyledToolWindowStripeButton>\n  );\n}\n","import React from \"react\";\nimport { css } from \"styled-components\";\nimport { ResizableView } from \"../ResizableView\";\nimport { styled } from \"../styled\";\nimport { SideUnDockedState } from \"./ToolWindowsState/ToolWindowsLayoutState\";\nimport { Anchor, isHorizontalToolWindow } from \"./utils\";\n\nexport const StyledUndockSide = styled.div<{ anchor: Anchor }>`\n  position: absolute;\n  background: inherit;\n  z-index: 1;\n  ${({ anchor }) =>\n    isHorizontalToolWindow(anchor)\n      ? css`\n          left: 0;\n          right: 0;\n        `\n      : css`\n          top: 0;\n          bottom: 0;\n        `};\n  ${({ anchor }) =>\n    css`\n      ${anchor}: 0;\n    `};\n`;\n\nexport function UndockSide({\n  state,\n  anchor,\n  children,\n  onResize,\n}: {\n  state: Exclude<SideUnDockedState, null>;\n  anchor: Anchor;\n  children: React.ReactNode;\n  onResize: (size: number) => void;\n}) {\n  return (\n    state && (\n      <StyledUndockSide anchor={anchor}>\n        <ResizableView\n          orientation={\n            isHorizontalToolWindow(anchor) ? \"vertical\" : \"horizontal\"\n          }\n          resizerPlacement={\n            anchor === \"left\" || anchor === \"top\" ? \"after\" : \"before\"\n          }\n          size={state.size}\n          onResize={onResize}\n        >\n          {children}\n        </ResizableView>\n      </StyledUndockSide>\n    )\n  );\n}\n","import { indexBy } from \"ramda\";\nimport React, {\n  CSSProperties,\n  ForwardedRef,\n  HTMLProps,\n  Key,\n  useImperativeHandle,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { useLatest } from \"@intellij-platform/core/utils/useLatest\";\n\nimport { ThreeViewSplitter } from \"../ThreeViewSplitter/ThreeViewSplitter\";\nimport { FocusScope } from \"../utils/FocusScope\";\nimport { FloatToolWindows } from \"./FloatToolWindows\";\nimport { MovableToolWindowStripeProvider } from \"./MovableToolWindowStripeProvider\";\nimport { StyledToolWindowOuterLayout } from \"./StyledToolWindowOuterLayout\";\nimport {\n  getToolWindowsLayoutState,\n  SideDockedState,\n  StripesState,\n  ToolWindowsLayoutState,\n} from \"./ToolWindowsState/ToolWindowsLayoutState\";\nimport { ToolWindowsState } from \"./ToolWindowsState/ToolWindowsState\";\nimport { ToolWindowStateProvider } from \"./ToolWindowsState/ToolWindowStateProvider\";\nimport { ToolWindowStripe } from \"./ToolWindowStripe\";\nimport { UndockSide } from \"./UndockSide\";\nimport { Anchor, isHorizontalToolWindow } from \"./utils\";\nimport { useOnFocusLost } from \"./useOnFocusLost\";\nimport { useInteractOutside } from \"@react-aria/interactions\";\n\ninterface ToolWindow {\n  id: string;\n  toolbarButton: React.ReactNode;\n  content: React.ReactNode;\n}\n\nexport interface ToolWindowsProps {\n  children: React.ReactNode;\n  windows: ToolWindow[];\n  toolWindowsState: Readonly<ToolWindowsState>;\n  onToolWindowStateChange: (newState: ToolWindowsState) => void;\n\n  /**\n   * Whether stripe buttons should be hidden or not.\n   * `hideToolStripes` UISettings in Intellij Platform\n   */\n  hideToolWindowBars?: boolean;\n\n  /**\n   *\n   * `wideScreenSupport` in UISettings in Intellij Platform\n   */\n  useWidescreenLayout?: boolean;\n\n  /**\n   * min width applied to the main content (children).\n   * @default 50\n   */\n  mainContentMinWidth?: number;\n\n  height?: CSSProperties[\"height\"];\n  minHeight?: CSSProperties[\"minHeight\"];\n  margin?: CSSProperties[\"margin\"];\n\n  /**\n   * props to be passed to the container element.\n   */\n  containerProps?: Omit<HTMLProps<HTMLDivElement>, \"as\">;\n}\n\nexport interface ToolWindowRefValue {\n  focus(key: Key): void;\n  hasFocus(key: Key): void;\n  focusLastActiveWindow(): void;\n  focusMainContent(): void;\n  changeState(\n    updater: (currentState: Readonly<ToolWindowsState>) => ToolWindowsState\n  ): void;\n}\n\n/**\n * @constructor\n *\n * Corresponding to ToolWindowPane in Intellij Platform\n *\n * Known issues:\n * - in Firefox and Safari, left and right toolbars are not properly shown. Seems like a nasty bug, since adding and\n * then removing some min-width: fit-content style fixes it.\n * - in the dock view of a side, open only a window from the split ones. then open a window from main ones.\n *   focus is not moved to the just opened window. The reason is we rely on autofocusing and because the React tree\n *   changes for both windows, even the split one which was open will be unmounted and mounted again, and since it's\n *   placed after the main one, and hence mounted later, it will get the focus again. This becomes a bigger issue\n *   if the main one is unpinned, because it immediately gets closed after opening.\n *   Possible solutions:\n *   - make sure the split one won't unmount and mount again in such scenario.\n *   - decouple focusing logic from mounting logic, and only focus windows somehow, when the `isVisible` is changed\n *     from false to true, not when mounted.\n * - related to previous issue: open a tool window in split section of a side. set view mode for a tool window in main\n *   section of the same side to docked_unpinned. try to open the unpinned one while the split one is open. it doesn't\n *   work.\n */\nexport const ToolWindows = React.forwardRef(function ToolWindows(\n  {\n    hideToolWindowBars = false,\n    useWidescreenLayout = false,\n    height = \"100%\",\n    minHeight = \"0\",\n    toolWindowsState,\n    onToolWindowStateChange,\n    windows,\n    children,\n    mainContentMinWidth = 50,\n    containerProps = {},\n  }: ToolWindowsProps,\n  ref: ForwardedRef<ToolWindowRefValue>\n): React.ReactElement {\n  const windowsById = indexBy(({ id }) => id, windows);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const mainContentFocusScopeRef =\n    useRef<React.ComponentRef<typeof FocusScope>>(null);\n  const [layoutState, setLayoutState] = useState<ToolWindowsLayoutState>();\n  const windowFocusableRefs = useRef<{\n    [key: string]: React.RefObject<React.ComponentRef<typeof FocusScope>>;\n  }>({});\n\n  const latestRef = useLatest({ toolWindowsState, onToolWindowStateChange });\n\n  useLayoutEffect(() => {\n    const container = containerRef.current;\n    const _setLayoutState = () =>\n      setLayoutState(\n        getToolWindowsLayoutState(\n          toolWindowsState,\n          container!.getBoundingClientRect(),\n          windows.map(({ id }) => id)\n        )\n      );\n\n    // If container is rendered but has zero dimensions for any reason, we start observing size changes, until\n    // it's no longer collapsed. Note that we don't want to unconditionally observe resizes and update the layout state.\n    // because tool windows are not supposed to keep the fraction width as the window resizes. They are supposed to have\n    // a fixed width which is determined fraction-based, but only when the tool window is opened. In fact, updating the\n    // layout state, on each and every change to toolWindowsState is also not quite correct, as some state changes\n    // are unrelated and shouldn't cause a re-calculation of the size. FIXME: don't re-calculate fraction base sizes on\n    //  every state change.\n    if (container?.offsetWidth === 0 || container?.offsetHeight === 0) {\n      const observer = new ResizeObserver(([resize]) => {\n        if (resize.contentRect.width > 0 && resize.contentRect.height > 0) {\n          _setLayoutState();\n          observer.unobserve(container);\n        }\n      });\n      observer.observe(container);\n    }\n    _setLayoutState();\n  }, [toolWindowsState]);\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      focus: (key: Key) => {\n        windowFocusableRefs.current[key]?.current?.focus();\n      },\n      hasFocus: (key: Key) =>\n        document.activeElement?.closest(`[data-tool-window-id=\"${key}\"]`) !==\n        null,\n      focusLastActiveWindow: () => {\n        const { lastFocusedKey } = latestRef.current.toolWindowsState;\n        if (lastFocusedKey != null) {\n          if (\n            !latestRef.current.toolWindowsState.windows[lastFocusedKey]\n              .isVisible\n          ) {\n            latestRef.current.onToolWindowStateChange(\n              toolWindowsState.show(lastFocusedKey)\n            );\n          }\n          windowFocusableRefs.current[lastFocusedKey].current?.focus(true);\n        }\n      },\n      focusMainContent: () => {\n        mainContentFocusScopeRef.current?.focus();\n      },\n      changeState: (updater) => {\n        onToolWindowStateChange(updater(latestRef.current.toolWindowsState));\n      },\n    }),\n    []\n  );\n\n  const interactionOutsideRef = useRef(false);\n  useInteractOutside({\n    ref: containerRef,\n    onInteractOutsideStart: () => {\n      interactionOutsideRef.current = true;\n    },\n    onInteractOutside: () => {\n      interactionOutsideRef.current = false;\n    },\n  });\n\n  useOnFocusLost(({ focusReceivingElement }) => {\n    if (!focusReceivingElement && !interactionOutsideRef.current) {\n      mainContentFocusScopeRef.current?.focus();\n    }\n  }, containerRef);\n\n  // TODO: extract component candidate\n  const renderStripe = ({\n    anchor,\n    state,\n  }: {\n    anchor: Anchor;\n    state: StripesState;\n  }) => (\n    <ToolWindowStripe\n      anchor={anchor}\n      items={state.main}\n      splitItems={state.split}\n      getKey={(item) => item}\n      renderItem={(item) => windowsById[item]?.toolbarButton}\n      onItemPress={(key) =>\n        onToolWindowStateChange(toolWindowsState.toggle(key))\n      }\n      selectedKeys={state.activeKeys}\n    />\n  );\n\n  const renderToolWindow = (key: Key) => {\n    if (!windowFocusableRefs.current[key]) {\n      windowFocusableRefs.current[key] = React.createRef();\n    }\n    return (\n      <div\n        style={{ all: \"unset\" }}\n        data-tool-window-id={key}\n        onFocus={() => {\n          onToolWindowStateChange(toolWindowsState.lastFocused(key));\n        }}\n      >\n        <FocusScope ref={windowFocusableRefs.current[key]}>\n          <ToolWindowStateProvider\n            id={key}\n            containerRef={containerRef}\n            mainContentFocusableRef={mainContentFocusScopeRef}\n            toolWindowsState={toolWindowsState}\n            onToolWindowStateChange={onToolWindowStateChange}\n          >\n            {windowsById[key]?.content}\n          </ToolWindowStateProvider>\n        </FocusScope>\n      </div>\n    );\n  };\n  // TODO: candidate for component extraction\n  const renderSideDockedView = ({\n    anchor,\n    state,\n  }: {\n    anchor: Anchor;\n    state: SideDockedState;\n  }) => {\n    if (!state) {\n      return null;\n    }\n    return (\n      <ThreeViewSplitter\n        innerView={renderToolWindow(state.mainKey)}\n        innerViewMinSize={50}\n        lastView={state.split && renderToolWindow(state.split.key)}\n        lastSize={state.split?.sizeFraction}\n        onLastResize={(newSize) => {\n          onToolWindowStateChange(\n            toolWindowsState.resizeDockSplitView(anchor, newSize)\n          );\n        }}\n        orientation={isHorizontalToolWindow(anchor) ? \"horizontal\" : \"vertical\"}\n      />\n    );\n  };\n  const onDockResize = (anchor: Anchor) => (size: number) => {\n    const containerBounds = containerRef.current?.getBoundingClientRect();\n    // containerBounds should have value in normal course of events\n    if (containerBounds) {\n      onToolWindowStateChange(\n        toolWindowsState.resizeDock(anchor, size, containerBounds)\n      );\n    }\n  };\n  const getSplitViewProps = (\n    layoutState: ToolWindowsLayoutState,\n    orientation: \"horizontal\" | \"vertical\"\n  ) => {\n    const firstAnchor = orientation === \"horizontal\" ? \"left\" : \"top\";\n    const secondAnchor = orientation === \"horizontal\" ? \"right\" : \"bottom\";\n    return {\n      orientation,\n      firstView: renderSideDockedView({\n        anchor: firstAnchor,\n        state: layoutState[firstAnchor].docked,\n      }),\n      firstSize: layoutState[firstAnchor].docked?.size,\n      onFirstResize: onDockResize(firstAnchor),\n      lastView: renderSideDockedView({\n        anchor: secondAnchor,\n        state: layoutState[secondAnchor].docked,\n      }),\n      lastSize: layoutState[secondAnchor].docked?.size,\n      onLastResize: onDockResize(secondAnchor),\n    };\n  };\n  const renderInnerLayout = (layoutState: ToolWindowsLayoutState) => {\n    const horizontalSplitterProps = getSplitViewProps(\n      layoutState,\n      \"horizontal\"\n    );\n    const verticalSplitterProps = getSplitViewProps(layoutState, \"vertical\");\n\n    const [outerSplitterProps, innerSplitterProps] = useWidescreenLayout\n      ? [horizontalSplitterProps, verticalSplitterProps]\n      : [verticalSplitterProps, horizontalSplitterProps];\n\n    const undockLayers = ([\"left\", \"top\", \"right\", \"bottom\"] as const).map(\n      (anchor) => {\n        const state = layoutState[anchor].undocked;\n        return (\n          state && (\n            <UndockSide\n              key={anchor}\n              anchor={anchor}\n              state={state}\n              onResize={(size) => {\n                containerRef.current &&\n                  onToolWindowStateChange(\n                    toolWindowsState.resizeUndock(\n                      anchor,\n                      size,\n                      containerRef.current.getBoundingClientRect()\n                    )\n                  );\n              }}\n            >\n              {renderToolWindow(state.key)}\n            </UndockSide>\n          )\n        );\n      }\n    );\n\n    return (\n      <>\n        <MovableToolWindowStripeProvider\n          onMove={({ to, from }) => {\n            onToolWindowStateChange(\n              toolWindowsState.move(\n                layoutState[from.anchor].stripes[\n                  from.isSplit ? \"split\" : \"main\"\n                ][from.index],\n                { anchor: to.anchor, isSplit: to.isSplit },\n                to.index\n              )\n            );\n          }}\n        >\n          {/**\n           * ToolWindow bars, aka Stripes. Order of stripes is irrelevant for layout but relevant for\n           * priority when stripe buttons are moved across stripes.\n           * layout is handled by `StyledToolWindowOuterLayout`.\n           */}\n          <StyledToolWindowOuterLayout.LeftStripe>\n            {renderStripe({\n              anchor: \"left\",\n              state: layoutState[\"left\"].stripes,\n            })}\n          </StyledToolWindowOuterLayout.LeftStripe>\n          <StyledToolWindowOuterLayout.TopStripe>\n            {renderStripe({\n              anchor: \"top\",\n              state: layoutState[\"top\"].stripes,\n            })}\n          </StyledToolWindowOuterLayout.TopStripe>\n          <StyledToolWindowOuterLayout.RightStripe>\n            {renderStripe({\n              anchor: \"right\",\n              state: layoutState[\"right\"].stripes,\n            })}\n          </StyledToolWindowOuterLayout.RightStripe>\n          <StyledToolWindowOuterLayout.BottomStripe>\n            {renderStripe({\n              anchor: \"bottom\",\n              state: layoutState[\"bottom\"].stripes,\n            })}\n          </StyledToolWindowOuterLayout.BottomStripe>\n        </MovableToolWindowStripeProvider>\n        {/**\n         * The inner layout of the ToolWindow, including four tool windows and\n         * a main content in the center.\n         */}\n        <StyledToolWindowOuterLayout.InnerView>\n          <ThreeViewSplitter\n            {...outerSplitterProps}\n            innerView={\n              <ThreeViewSplitter\n                innerViewMinSize={mainContentMinWidth}\n                innerView={\n                  <FocusScope ref={mainContentFocusScopeRef}>\n                    {children}\n                  </FocusScope>\n                }\n                {...innerSplitterProps}\n              />\n            }\n          />\n          {undockLayers}\n          {\n            <FloatToolWindows\n              floatWindows={layoutState?.floatWindows}\n              renderToolWindow={renderToolWindow}\n              onBoundsChange={(key, bounds) =>\n                onToolWindowStateChange(\n                  toolWindowsState.setFloatingBound(key, bounds)\n                )\n              }\n            />\n          }\n        </StyledToolWindowOuterLayout.InnerView>\n      </>\n    );\n  };\n\n  return (\n    <StyledToolWindowOuterLayout.Shell\n      {...containerProps}\n      ref={containerRef}\n      /**\n       * Potential refactoring: hideStripes can also be handled by conditionally\n       * rendering tool window bars, instead of considering it as a feature of\n       * StyledToolWindowOuterLayout\n       **/\n      hideStripes={hideToolWindowBars}\n      style={{ height, minHeight, ...containerProps?.style }}\n    >\n      {layoutState && renderInnerLayout(layoutState)}\n    </StyledToolWindowOuterLayout.Shell>\n  );\n});\n","import { RefObject, useEffect } from \"react\";\n\n/**\n * Executes a callback function when focus is lost from the container element. i.e. when the currently focused element\n * was within the container and:\n * - The focus is going to an element outside the container, or\n * - The focus is about to get lost (i.e. go to `document.body`).\n *\n * Note: react-aria's `useFocusWithin` (and it's `onBlurWithin` option) can't be used, since (at least currently) it\n * doesn't cover the scenario where the focus is about to get lost due to the focused element getting unmounted.\n */\nexport function useOnFocusLost(\n  onFocusLost: (args: {\n    focusLosingElement: HTMLElement | null;\n    focusReceivingElement: Element | null;\n  }) => void,\n  containerRef: RefObject<HTMLElement>\n): void {\n  useEffect(() => {\n    const handleBodyFocus = (e: FocusEvent) => {\n      if (\n        e.target instanceof HTMLElement &&\n        containerRef.current?.contains(e.target) &&\n        (!e.relatedTarget || e.relatedTarget instanceof HTMLElement) &&\n        !containerRef.current?.contains(e.relatedTarget)\n      ) {\n        onFocusLost({\n          focusLosingElement: e.target,\n          focusReceivingElement: e.relatedTarget,\n        });\n      }\n    };\n    containerRef.current?.addEventListener(\"focusout\", handleBodyFocus);\n    return () => {\n      containerRef.current?.removeEventListener(\"focusout\", handleBodyFocus);\n    };\n  }, []);\n}\n","import React, { Key, RefObject, useContext, useMemo } from \"react\";\nimport { ToolWindowsProps } from \"../ToolWindows\";\nimport { ToolWindowState, ViewMode, WindowBounds } from \"./ToolWindowsState\";\nimport { Anchor } from \"../utils\";\nimport { useEventCallback } from \"@intellij-platform/core/utils/useEventCallback\";\n\ntype ToolWindowStateContextValue = {\n  state: Readonly<ToolWindowState>;\n  hide: () => void;\n  remove: () => void;\n  blur: () => void;\n  focusMainContent: () => void;\n  moveToSide: (args: { anchor: Anchor; isSplit: boolean }) => void;\n  changeViewMode: (viewMode: ViewMode) => void;\n  stretchWidth: (value: number) => void;\n  stretchHeight: (value: number) => void;\n  setFloatingBounds: (bounds: WindowBounds) => void;\n};\nconst ToolWindowStateContext =\n  React.createContext<ToolWindowStateContextValue | null>(null);\n\n/**\n * Used in a tool window's UI tree, to get access to the tool window state and actions for changing it.\n */\nexport const useToolWindowState = () => {\n  const context = useContext(ToolWindowStateContext);\n  if (!context) {\n    throw new Error(\n      \"useToolWindowContext is meant to be used inside a tool window.\"\n    );\n  }\n  return context;\n};\n\n/**\n * Used in ToolWindows to provide tool window state and necessary actions as a context, which will be accessible\n * within the tool window content tree, via {@link useToolWindowState}\n */\nexport const ToolWindowStateProvider: React.FC<\n  {\n    children?: React.ReactNode;\n    id: Key;\n    containerRef: RefObject<HTMLElement>;\n    mainContentFocusableRef: RefObject<{ focus: () => void }>;\n  } & Pick<ToolWindowsProps, \"toolWindowsState\" | \"onToolWindowStateChange\">\n> = ({\n  toolWindowsState,\n  containerRef,\n  mainContentFocusableRef,\n  onToolWindowStateChange,\n  id,\n  children,\n}) => {\n  const blur = useEventCallback(() => {\n    onToolWindowStateChange(toolWindowsState.blur(id));\n  });\n  const hide = useEventCallback(() => {\n    onToolWindowStateChange(toolWindowsState.hide(id));\n  });\n  const remove = useEventCallback(() => {\n    onToolWindowStateChange(toolWindowsState.removeFromSidebar(id));\n  });\n  const focusMainContent = useEventCallback(() => {\n    mainContentFocusableRef.current?.focus();\n  });\n  const moveToSide = useEventCallback(\n    (side: { anchor: Anchor; isSplit: boolean }) => {\n      onToolWindowStateChange(toolWindowsState.move(id, side));\n    }\n  );\n  const changeViewMode = useEventCallback((viewMode: ViewMode) => {\n    onToolWindowStateChange(toolWindowsState.changeViewMode(id, viewMode));\n  });\n  const stretchWidth = useEventCallback((value: number) => {\n    const container = containerRef.current;\n    if (!container) {\n      throw new Error(\"Couldn't resize since the container is not present\");\n    }\n    onToolWindowStateChange(\n      toolWindowsState.stretchWidth(\n        id,\n        value,\n        container.getBoundingClientRect()\n      )\n    );\n  });\n  const stretchHeight = useEventCallback((value: number) => {\n    const container = containerRef.current;\n    if (!container) {\n      throw new Error(\"Couldn't resize since the container is not present\");\n    }\n    onToolWindowStateChange(\n      toolWindowsState.stretchHeight(\n        id,\n        value,\n        container.getBoundingClientRect()\n      )\n    );\n  });\n  const setFloatingBounds = useEventCallback((bounds: WindowBounds) => {\n    onToolWindowStateChange(toolWindowsState.setFloatingBound(id, bounds));\n  });\n  const contextValue = useMemo((): ToolWindowStateContextValue => {\n    const state = toolWindowsState.windows[id];\n    return {\n      state,\n      hide,\n      blur,\n      remove,\n      focusMainContent,\n      moveToSide,\n      changeViewMode,\n      stretchWidth,\n      stretchHeight,\n      setFloatingBounds,\n    };\n  }, [toolWindowsState, id]);\n  return (\n    <ToolWindowStateContext.Provider value={contextValue}>\n      {children}\n    </ToolWindowStateContext.Provider>\n  );\n};\n","import { clamp, curry, fromPairs, insert, mapObjIndexed, move } from \"ramda\";\nimport { Key } from \"react\";\nimport { Anchor, isHorizontalToolWindow } from \"../utils\";\n\nexport type ViewMode =\n  | \"docked_pinned\"\n  | \"docked_unpinned\"\n  | \"undock\"\n  | \"float\"\n  /**\n   * @deprecated \"window\" ViewMode was initially added following the original impl. It doesn't seem reasonable to\n   * support it though. It's marked as deprecated to be removed in the future.\n   */\n  | \"window\";\n\nexport type WindowBounds = {\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n};\n\n/**\n * Data structure for keeping the state of a single tool window. very similar to WindowInfo in Intellij Platform\n *\n * A note about about the data structure:\n * Some fields like `isSplit`, `weight`, `floatingBound` are meaningful only\n * for a subset of viewModes. So it may be tempting to introduce a `viewMode`\n * type which minimally and more accurately describes the information\n * relevant for each viewMode. But it's not structured like that, and it's\n * orthogonal to viewMode, since we want to preserve the relevant information\n * for each viewMode, to be used when the viewMode is changed back.\n *\n * NOTE: consider renaming to `WindowState` to avoid confusion with `ToolWindowsState`\n */\nexport interface ToolWindowState {\n  /**\n   * The order of the tool window in its group. The group is specified by `anchor` and `isSplit`.\n   */\n  order: number;\n  /**\n   * Whether the tool window is visible (open) or not.\n   * NOTE: A maximum of 1 **docked** tool window within the same group (same `anchor` and `isSplit`) can be visible.\n   * You will get a render error in `ToolWindows` component otherwise.\n   */\n  isVisible: boolean;\n  /**\n   * Relative size (in the scale of 0-1) of the tool window in its anchor, when rendered in the primary group, i.e. when\n   * `isSplit` is false\n   */\n  weight: number;\n  /**\n   * Relative size (in the scale of 0-1) of the tool window in its anchor, when rendered in the secondary group. i.e.\n   * when `isSplit` is true.\n   */\n  sideWeight: number;\n  /**\n   * The side of the tool window, being \"left\", \"right\", \"top\" or \"bottom\"\n   */\n  anchor: Anchor;\n  /**\n   * Specifies whether the tool window should be shown in the split view, aka \"Secondary group\".\n   */\n  isSplit: boolean;\n  /**\n   * Tool windows view mode. See {@link ViewMode}\n   *\n   * NOTE: in Intellij Platform, there is a window `type` and also `docked` and\n   * `autoHide`.\n   * keeping one viewMode makes more sense and prevents invalid combinations\n   * like { type: \"window, \"docked\": true}, that would be unnecessarily allowed.\n   */\n  viewMode: ViewMode;\n  /**\n   * Boundaries of the tool window, when rendered in \"float\" view mode.\n   */\n  floatingBounds?: WindowBounds;\n}\n\nconst isDocked = (toolWindow: ToolWindowState) =>\n  toolWindow.viewMode === \"docked_unpinned\" ||\n  toolWindow.viewMode === \"docked_pinned\";\n\n/**\n * Determines whether the tool window should hide on focus. In the java implementation, it's a field on window\n * info instead of being a calculated field. We changed that to match viewMode with the 5 view modes that are possible\n * to choose from the UI, eliminating the combinations that are never allowed. If from UX perspective, having window\n * or float mode with autoHide feature is considered valid at some point, we may need to change the implementation\n * to something similar to the original implementation where isAutoHide and viewMode are separate.\n */\nconst isAutoHide = (toolWindow: ToolWindowState) =>\n  toolWindow.viewMode === \"docked_unpinned\" || toolWindow.viewMode === \"undock\";\n\nexport type SideInfo = Pick<ToolWindowState, \"anchor\" | \"isSplit\">;\nexport const areInSameSection = curry(\n  (window1: SideInfo, window2: SideInfo) =>\n    window1.anchor === window2.anchor && window1.isSplit === window2.isSplit\n);\n\nexport const getViewModeType = (viewMode: ViewMode) => {\n  if (viewMode === \"docked_pinned\" || viewMode === \"docked_unpinned\") {\n    return \"docked\";\n  }\n  if (viewMode === \"window\" || viewMode === \"float\") {\n    return \"float\";\n  }\n  return viewMode;\n};\ntype IdToWindowStateMap = Readonly<{\n  [key: string]: Readonly<ToolWindowState>;\n}>;\n\n/**\n * Represents UI state of a bunch of tool windows. What is rendered inside each window or toolbar button is irrelevant.\n *\n * TODO: document pros and cons of these two approaches\n * - Having a class for ToolWindowsState which keeps a readonly mapping of keys to window states.\n * - Having ToolWindowsState as an interface (a mapping from keys to window states), and a bunch of action functions\n *   which accept a window state and some arguments, and return a new window state.\n */\nexport class ToolWindowsState {\n  public readonly lastFocusedKey: Key | null;\n  public readonly removedFromSideBarIds: ReadonlySet<Key>;\n  private readonly layoutToRestore: IdToWindowStateMap;\n  constructor(\n    public readonly windows: IdToWindowStateMap,\n    {\n      lastFocusedKey = null,\n      layoutToRestore = {},\n      removedFromSideBarIds = [],\n    }: {\n      lastFocusedKey?: Key | null;\n      layoutToRestore?: IdToWindowStateMap;\n      removedFromSideBarIds?: Iterable<Key>;\n    } = {}\n  ) {\n    this.lastFocusedKey = lastFocusedKey;\n    this.layoutToRestore = layoutToRestore;\n    this.removedFromSideBarIds = new Set(removedFromSideBarIds);\n    // TODO: instead of keeping a set of removedFromSideBarIds showStripeButton can be a boolean on each window state.\n    //  if we want to avoid the invalid combination of `{ isVisible: true, showStripeButton: false }`, we can have a\n    //  a single property like : visibility: 'open' | 'closed' | 'removed'\n    const invalidWindows = Object.keys(this.windows).filter(\n      (key) =>\n        this.removedFromSideBarIds.has(key) && this.windows[key].isVisible\n    );\n    if (invalidWindows.length > 0) {\n      throw new Error(\n        `Invalid ToolWindowsState. The following windows are set as visible but are removed from the sidebar: ${invalidWindows}`\n      );\n    }\n  }\n\n  hide(targetKey: Key): ToolWindowsState {\n    return this.mapWindows((toolWindow, key) =>\n      key === targetKey\n        ? {\n            ...toolWindow,\n            isVisible: false,\n          }\n        : toolWindow\n    );\n  }\n  hideAll(): ToolWindowsState {\n    return this.mapWindows(\n      (toolWindow, key) =>\n        getViewModeType(toolWindow.viewMode) === \"float\"\n          ? toolWindow\n          : {\n              ...toolWindow,\n              isVisible: false,\n            },\n      { layoutToRestore: this.windows }\n    );\n  }\n\n  /**\n   * Restores windows to the state before hideAll.\n   */\n  restoreWindows(): ToolWindowsState {\n    return this.mapWindows(\n      (toolWindow, key) => this.layoutToRestore[key] || toolWindow\n    );\n  }\n\n  lastFocused(key: Key): ToolWindowsState {\n    return this.mapWindows((toolWindow) => toolWindow, {\n      lastFocusedKey: key,\n    });\n  }\n\n  show(targetKey: Key): ToolWindowsState {\n    const target = this.windows[targetKey];\n    if (!target) {\n      return this;\n    }\n    const closableViewModes: ViewMode[] = [];\n    if (target.viewMode === \"undock\") {\n      closableViewModes.push(\"undock\");\n    } else if (isDocked(target)) {\n      closableViewModes.push(\"docked_unpinned\", \"docked_pinned\", \"undock\");\n    }\n    return this.mapWindows(\n      (toolWindow, key) => {\n        if (key === targetKey) {\n          return {\n            ...toolWindow,\n            isVisible: true,\n          };\n        }\n        if (\n          toolWindow.isVisible &&\n          areInSameSection(target, toolWindow) &&\n          closableViewModes.includes(toolWindow.viewMode)\n        ) {\n          return { ...toolWindow, isVisible: false };\n        }\n        return toolWindow;\n      },\n      {\n        removedFromSideBarIds: [...this.removedFromSideBarIds].filter(\n          (key) => key !== targetKey\n        ),\n      }\n    );\n  }\n\n  toggle(targetKey: Key): ToolWindowsState {\n    return this.windows[targetKey]?.isVisible\n      ? this.hide(targetKey)\n      : this.show(targetKey);\n  }\n\n  blur(targetKey: Key): ToolWindowsState {\n    const target = this.windows[targetKey];\n    if (!target || !isAutoHide(target)) {\n      return this;\n    }\n    return this.mapWindows((toolWindow) => {\n      if (toolWindow === target) {\n        return {\n          ...toolWindow,\n          isVisible: false,\n        };\n      }\n      return toolWindow;\n    });\n  }\n\n  // TODO: initiate floatingBound when changing viewMode to float or window and there is no previous floatingBound\n  changeViewMode(targetKey: Key, viewMode: ViewMode): ToolWindowsState {\n    const target = this.windows[targetKey];\n    if (!target) {\n      return this;\n    }\n    return this.mapWindows((toolWindow) => {\n      if (toolWindow === target) {\n        return {\n          ...toolWindow,\n          viewMode,\n        };\n      }\n      const viewModeType = getViewModeType(toolWindow.viewMode);\n      if (\n        toolWindow.isVisible &&\n        viewModeType !== \"float\" &&\n        areInSameSection(toolWindow, target) &&\n        viewModeType === getViewModeType(viewMode)\n      ) {\n        return {\n          ...toolWindow,\n          isVisible: false,\n        };\n      }\n      return toolWindow;\n    });\n  }\n\n  move(targetKey: Key, index: number): ToolWindowsState;\n  move(targetKey: Key, side: SideInfo, index?: number): ToolWindowsState;\n  move(\n    targetKey: Key,\n    sideOrIndex: SideInfo | number,\n    index?: number\n  ): ToolWindowsState {\n    const target = this.windows[targetKey];\n    if (!target) {\n      return this;\n    }\n    const targetSide = typeof sideOrIndex === \"object\" ? sideOrIndex : target;\n    const targetIndex = typeof sideOrIndex === \"number\" ? sideOrIndex : index;\n    const targetSideWindows = Object.entries(this.windows).filter(([, value]) =>\n      areInSameSection(targetSide, value)\n    );\n    const indexInTargetSide = targetSideWindows.findIndex(\n      ([, window]) => window === target\n    );\n    const sortedTargetWindows: Array<[Key, ToolWindowState]> =\n      indexInTargetSide < 0\n        ? insert(\n            targetIndex ?? -1,\n            [targetKey, { ...target, ...targetSide }],\n            targetSideWindows\n          )\n        : move(\n            indexInTargetSide,\n            targetIndex ?? indexInTargetSide,\n            targetSideWindows\n          );\n    const newTargetSideWindows = fromPairs(\n      sortedTargetWindows.map(([key, value], index) => {\n        let newValue = value;\n        if (value.order !== index) {\n          newValue = { ...value, order: index };\n        }\n        const targetViewMode = getViewModeType(target.viewMode);\n        if (\n          key !== targetKey &&\n          target.isVisible &&\n          value.isVisible &&\n          targetViewMode !== \"float\" &&\n          getViewModeType(value.viewMode) === targetViewMode\n        ) {\n          newValue = { ...value, isVisible: false };\n        }\n        return [`${key}`, newValue];\n      })\n    );\n    return this.mapWindows((value, key) => newTargetSideWindows[key] || value);\n  }\n\n  stretchWidth(\n    targetKey: Key,\n    value: number,\n    containerBounds: { width: number; height: number }\n  ): ToolWindowsState {\n    return this.stretch(targetKey, value, containerBounds, \"width\");\n  }\n\n  stretchHeight(\n    targetKey: Key,\n    value: number,\n    containerBounds: { width: number; height: number }\n  ): ToolWindowsState {\n    return this.stretch(targetKey, value, containerBounds, \"height\");\n  }\n\n  setFloatingBound(\n    targetKey: Key,\n    floatingBounds: WindowBounds\n  ): ToolWindowsState {\n    return this.update(targetKey, \"floatingBounds\", floatingBounds);\n  }\n\n  removeFromSidebar(targetKey: Key): ToolWindowsState {\n    return this.mapWindows(\n      (state, key) =>\n        key === targetKey\n          ? {\n              ...state,\n              isVisible: false,\n            }\n          : state,\n      {\n        removedFromSideBarIds: [...this.removedFromSideBarIds, targetKey],\n      }\n    );\n  }\n\n  mapWindows(\n    mapFn: (toolWindow: ToolWindowState, key: string) => ToolWindowState,\n    options: ConstructorParameters<typeof ToolWindowsState>[1] = {}\n  ) {\n    return new ToolWindowsState(mapObjIndexed(mapFn, this.windows), {\n      lastFocusedKey: this.lastFocusedKey,\n      layoutToRestore: this.layoutToRestore,\n      removedFromSideBarIds: this.removedFromSideBarIds,\n      ...options,\n    });\n  }\n\n  private update<K extends keyof ToolWindowState>(\n    targetKey: Key,\n    key: K,\n    value: ToolWindowState[K]\n  ) {\n    const target = this.windows[targetKey];\n    if (!target) {\n      return this;\n    }\n    return this.mapWindows((window) => {\n      if (window === target) {\n        return {\n          ...window,\n          [key]: value,\n        };\n      }\n      return window;\n    });\n  }\n\n  private stretch(\n    targetKey: Key,\n    value: number,\n    containerBounds: { width: number; height: number },\n    property: \"width\" | \"height\"\n  ): ToolWindowsState {\n    const target = this.windows[targetKey];\n    if (!target) {\n      return this;\n    }\n    const viewModeType = getViewModeType(target.viewMode);\n    if (viewModeType === \"float\") {\n      return this.mapWindows((window) => {\n        if (window === target) {\n          const currentFloatingBound = window.floatingBounds!;\n          return {\n            ...window,\n            floatingBounds: {\n              ...currentFloatingBound,\n              [property]: currentFloatingBound[property] + value,\n            },\n          };\n        }\n        return window;\n      });\n    }\n    const expectedProperty = isHorizontalToolWindow(target.anchor)\n      ? \"height\"\n      : \"width\";\n    if (expectedProperty !== property) {\n      return this;\n    }\n    const containerSize = containerBounds[property];\n    const newValue = containerSize * target.weight + value;\n    const isNewValueValid = clamp(0, containerSize, newValue) === newValue;\n    if (isNewValueValid) {\n      if (viewModeType === \"docked\") {\n        return this.resizeDock(target.anchor, newValue, containerBounds);\n      } else {\n        return this.resizeUndock(target.anchor, newValue, containerBounds);\n      }\n    }\n    return this;\n  }\n\n  resizeDock(\n    anchor: Anchor,\n    size: number,\n    containerBounds: { width: number; height: number }\n  ): ToolWindowsState {\n    return this.resizeSide(true, anchor, size, containerBounds);\n  }\n\n  resizeUndock(\n    anchor: Anchor,\n    size: number,\n    containerBounds: { width: number; height: number }\n  ): ToolWindowsState {\n    return this.resizeSide(false, anchor, size, containerBounds);\n  }\n\n  resizeDockSplitView(anchor: Anchor, weight: number): ToolWindowsState {\n    return this.mapWindows((window) => {\n      if (window.anchor === anchor && window.isVisible && isDocked(window)) {\n        return {\n          ...window,\n          sideWeight: window.isSplit ? weight : 1 - weight,\n        };\n      }\n      return window;\n    });\n  }\n\n  private resizeSide(\n    dock: boolean,\n    anchor: Anchor,\n    size: number,\n    containerBounds: { width: number; height: number }\n  ): ToolWindowsState {\n    return this.mapWindows((window) => {\n      const isInResizingView = dock\n        ? isDocked(window)\n        : window.viewMode === \"undock\";\n      if (window.anchor === anchor && isInResizingView && window.isVisible) {\n        const containerSize = !isHorizontalToolWindow(anchor)\n          ? containerBounds.width\n          : containerBounds.height;\n        return {\n          ...window,\n          weight: size / containerSize,\n        };\n      }\n      return window;\n    });\n  }\n}\n\nexport const toolWindowState = ({\n  viewMode = \"docked_pinned\",\n  ...inputs\n}: Partial<ToolWindowState> = {}): ToolWindowState => ({\n  anchor: \"left\",\n  isSplit: false,\n  viewMode: viewMode,\n  order: 1,\n  weight: 0.2,\n  sideWeight: 0.5,\n  isVisible: false,\n  floatingBounds:\n    getViewModeType(viewMode) === \"float\"\n      ? {\n          left: 300,\n          top: 300,\n          width: 600,\n          height: 300,\n        }\n      : undefined,\n  ...inputs,\n});\n","export type Anchor = \"left\" | \"right\" | \"top\" | \"bottom\";\n\nexport const getAnchorOrientation = (\n  anchor: Anchor\n): \"horizontal\" | \"vertical\" =>\n  isHorizontalToolWindow(anchor) ? \"horizontal\" : \"vertical\";\n\nexport const isHorizontalToolWindow = (anchor: Anchor) =>\n  anchor === \"top\" || anchor === \"bottom\";\n\nexport const theOtherSide = (anchor: Anchor) =>\n  ({\n    left: \"right\" as const,\n    right: \"left\" as const,\n    top: \"bottom\" as const,\n    bottom: \"top\" as const,\n  }[anchor]);\n","import React, { RefObject, useEffect, useRef, useState } from \"react\";\nimport { useFocusWithin } from \"@react-aria/interactions\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useToolWindowState } from \"@intellij-platform/core/ToolWindows\";\nimport { useOverlayMoveHandle } from \"@intellij-platform/core/Overlay\";\nimport { useFocusForwarder } from \"@intellij-platform/core/utils/useFocusForwarder\";\n\nexport function useToolWindow(\n  {\n    containerRef,\n    contentRef,\n    focusableContentRef,\n  }: {\n    containerRef: RefObject<HTMLElement>;\n    contentRef: RefObject<Element>;\n    focusableContentRef: RefObject<{ focus: () => void }>;\n  },\n  { onFocusChange }: { onFocusChange?: (focused: boolean) => void } = {}\n) {\n  const [contentHasFocus, setContentHasFocus] = useState(false);\n  /**\n   * NOTE: useFocusWithin form @react-aria/interactions (at least until 3.5.1) has a couple of problem, because of which\n   * we may need to implement our own version of it.\n   * - It doesn't play nice with FocusScope with `contain` set to true. When something is blurred, FocusScope prevents\n   *   that by restoring focus back immediately. but the blur event is already caught by useFocusWithin. One solution\n   *   would be to change useFocusWithin implementation to ignore these blur events that are immediately followed\n   *   by a focus event that keeps the focus in.\n   * - useFocusWithin has an inconsistent behaviour when it comes to Portals. Since it uses react props for handling\n   *   focus and blur, the [react tree determines event bubbling](https://reactjs.org/docs/portals.html#event-bubbling-through-portals),\n   *   which can be a very nice feature, when an overlay (rendered in a portal) grabs the focus, which should still\n   *   be seen as \"within\". But the problems is that the current implementation uses DOM `.contains(e.relatedTarget)`\n   *   method to determine if focus is no longer within. First of all, using react tree or dom tree to determine \"within\"\n   *   can be seen as an option perhaps. Secondly, it should be consistent on focus and blur.\n   *\n   *   Right now these problems are no big deal. but it may become an issue when portals are used within the content\n   *   of the tool window.\n   *\n   * NOTE: In the original implementation, when a heading toolbar button opens a menu, and focus goes to menu, the\n   * header loses the focus appearance, ant it relies only on content having the focus.\n   */\n  const { focusWithinProps: contentFocusWithinProps } = useFocusWithin({\n    onFocusWithinChange: setContentHasFocus,\n  });\n\n  const { focusWithinProps } = useFocusWithin({\n    onFocusWithinChange: onFocusChange,\n  });\n\n  const { toolWindowProps: autoHideProps } = useAutoHide();\n\n  const { focusForwarderProps } = useFocusForwarder({\n    forwardFocus: focusableContentRef.current?.focus,\n    ignoreFocusedDescendant: true,\n  });\n\n  // If there is no focusable content rendered in the tool window, nothing will be autofocused. In that case\n  // we will focus the tool window container itself as a fallback.\n  useEffect(() => {\n    if (\n      !document.activeElement ||\n      !containerRef.current?.contains(document.activeElement)\n    ) {\n      containerRef.current?.focus();\n    }\n  }, []);\n\n  const { moveHandleProps } = useOverlayMoveHandle();\n\n  return {\n    contentHasFocus,\n    toolWindowProps: mergeProps(\n      focusForwarderProps,\n      focusWithinProps,\n      autoHideProps,\n      {\n        tabIndex: -1,\n      }\n    ),\n    toolWindowContentProps: contentFocusWithinProps,\n    toolWindowHeaderProps: moveHandleProps,\n  };\n}\n\n/**\n * Applies the auto hide behaviour of tool window based on view mode information and by handling focus and blur events,\n * on the root tool window element. Returns the necessary props that should be applied to the root tool window element.\n * The implementation is not perfect and may not 100% match the original Intellij Platform implementation.\n * If this focus based implementation for auto hide proves to be fragile and not good enough in future,\n * an alternative approach would be to move auto hide logic to the state management logic as much as possible,\n * and limit the focus based auto-hiding to only when the focus goes within the main content area. That should have\n * less focus-related edge cases.\n * TODO: auto hide behaviour should be moved to the core ToolWindows API. ToolWindows now renders a FocusScope and\n * handles focus events on any tool window, to track last focused tool window.\n */\nfunction useAutoHide() {\n  const { blur } = useToolWindowState();\n  const hideTimeoutId = useRef<number | null>(null);\n  const { focusWithinProps: windowFocusWithinProps } = useFocusWithin({\n    onBlurWithin: (e) => {\n      // setTimeout and windowHasFocusRef is to work around the problem with useFocusWithin, described above.\n      hideTimeoutId.current = window.setTimeout(() => {\n        // Sometimes when the element is blurred, the subsequent focus that is triggered by FocusScope to keep the focus\n        // is a little delayed and therefore after the timeout reaches. It seem to happen only when a non-focusable\n        // area is clicked. We mitigate it by ignoring blur events where nothing is focused. It's not a problem\n        // at least with `DefaultToolWindow` implementation that uses a FocusScope.\n        const isSomethingElseFocused = e.relatedTarget;\n        if (isSomethingElseFocused) {\n          blur();\n        }\n      });\n    },\n    onFocusWithin: () => {\n      if (hideTimeoutId.current !== null) {\n        clearTimeout(hideTimeoutId.current);\n        hideTimeoutId.current = null;\n      }\n    },\n  });\n  return {\n    toolWindowProps: windowFocusWithinProps,\n  };\n}\n","import React from \"react\";\nimport { DividerItem } from \"@intellij-platform/core/Collections\";\nimport { useToolWindowState } from \"@intellij-platform/core/ToolWindows\";\nimport {\n  useAction,\n  useActionGroup,\n} from \"@intellij-platform/core/ActionSystem\";\nimport {\n  ActionItem,\n  ActionsMenu,\n} from \"@intellij-platform/core/ActionSystem/components\";\nimport {\n  MOVE_TO_ACTION_GROUP_ID,\n  TOOL_WINDOW_RESIZE_ACTION_GROUP_ID,\n  VIEW_MODE_ACTION_GROUP_ID,\n  ViewModeToActionId,\n} from \"./useToolWindowActions\";\nimport {\n  MAXIMIZE_TOOL_WINDOW_ACTION_ID,\n  REMOVE_TOOL_WINDOW_FROM_SIDEBAR_ACTION_ID,\n} from \"./ToolWindowActionIds\";\nimport { MenuTriggerProps } from \"@intellij-platform/core/Menu\";\n\n/**\n * Tool window gear icon menu, with a set of default actions and some extra ones.\n * TODO: add support for extra actions when action system is progressed a little.\n */\nexport function ToolWindowSettingsIconMenu({\n  menuProps,\n}: {\n  menuProps: Parameters<MenuTriggerProps[\"renderMenu\"]>[0][\"menuProps\"];\n}) {\n  const { state } = useToolWindowState();\n\n  const viewModeActionGroup = useActionGroup(VIEW_MODE_ACTION_GROUP_ID);\n  const moveToActionGroup = useActionGroup(MOVE_TO_ACTION_GROUP_ID);\n  const resizeActions = useActionGroup(TOOL_WINDOW_RESIZE_ACTION_GROUP_ID);\n  const maximizeAction = useAction(MAXIMIZE_TOOL_WINDOW_ACTION_ID);\n  const removeFromSideBarAction = useAction(\n    REMOVE_TOOL_WINDOW_FROM_SIDEBAR_ACTION_ID\n  );\n  if (\n    !viewModeActionGroup ||\n    !moveToActionGroup ||\n    !resizeActions ||\n    !maximizeAction ||\n    !removeFromSideBarAction\n  ) {\n    throw new Error(\n      \"[ToolWindowSettingsIconMenu]: can't find tool window actions.\"\n    );\n  }\n\n  const gearIconActions: Array<ActionItem> = [\n    viewModeActionGroup,\n    moveToActionGroup,\n    {\n      id: \"resize\",\n      title: \"Resize\",\n      menuPresentation: \"submenu\",\n      children: [...resizeActions.children, maximizeAction],\n    },\n    new DividerItem(),\n    removeFromSideBarAction,\n  ];\n  return (\n    <ActionsMenu\n      actions={gearIconActions}\n      selectedKeys={[ViewModeToActionId[state.viewMode]]}\n      {...menuProps}\n    />\n  );\n}\n","import React, { HTMLProps } from \"react\";\nimport { IconButton } from \"@intellij-platform/core/IconButton\";\nimport { Toolbar } from \"@intellij-platform/core/Toolbar/Toolbar\";\nimport { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport { MenuTrigger } from \"@intellij-platform/core/Menu/MenuTrigger\";\nimport { ActionTooltip, TooltipTrigger } from \"@intellij-platform/core/Tooltip\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { StyledHorizontalSeparator } from \"@intellij-platform/core/StyledSeparator\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme/Theme\";\nimport { ToolWindowSettingsIconMenu } from \"./ToolWindowSettingsIconMenu\";\nimport {\n  DOCK_TOOL_WINDOW_ACTION_ID,\n  HIDE_ACTIVE_WINDOW_ACTION_ID,\n} from \"./ToolWindowActionIds\";\nimport { ActionButton } from \"@intellij-platform/core/ActionSystem/components\";\n\nexport interface ToolWindowHeaderProps\n  extends Omit<HTMLProps<HTMLDivElement>, \"ref\" | \"as\"> {\n  contentHasFocus?: boolean;\n  additionalActions?: React.ReactNode;\n}\n\nconst StyledToolWindowHeader = styled.div<{ active: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: end; // to have the content overflow from right, as the toolwindow shrinks. That will keep the left-most buttons in the view\n  padding: 0 2px 0 4px;\n  overflow: hidden; // for the negative margin applied on StyledToolWindowHeaderActions\n  border-bottom: 1px solid\n    ${({ theme }) =>\n      theme.color(\n        \"ToolWindow.Header.borderColor\" as UnknownThemeProp<\"ToolWindow.Header.borderColor\">\n      ) ||\n      theme.color(\"DefaultTabs.borderColor\") ||\n      theme.commonColors.contrastBorder};\n  background: ${({ theme, active }) =>\n    active\n      ? theme.color(\"ToolWindow.Header.background\") ||\n        theme.color(\n          \"ToolWindow.header.active.background\" as UnknownThemeProp<\"ToolWindow.header.active.background\">\n        ) ||\n        \"#E2E6EC\"\n      : theme.color(\"ToolWindow.Header.inactiveBackground\") ||\n        theme.color(\"ToolWindow.Header.background\") ||\n        \"#ECECEC\"};\n`;\n\nconst StyledToolWindowHeaderActions = styled.div`\n  margin-right: -4px;\n`;\n\nconst StyledToolWindowHeaderContent = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n`;\n\nexport const DefaultToolWindowHeader: React.FC<ToolWindowHeaderProps> = ({\n  children,\n  additionalActions,\n  contentHasFocus = false,\n  ...otherProps\n}) => {\n  return (\n    <StyledToolWindowHeader active={contentHasFocus} {...otherProps}>\n      <StyledToolWindowHeaderContent>{children}</StyledToolWindowHeaderContent>\n      <StyledToolWindowHeaderActions>\n        <Toolbar>\n          {additionalActions && (\n            <>\n              {additionalActions}\n              <StyledHorizontalSeparator />\n            </>\n          )}\n          <ActionButton actionId={DOCK_TOOL_WINDOW_ACTION_ID} />\n          <MenuTrigger\n            renderMenu={({ menuProps }) => {\n              return <ToolWindowSettingsIconMenu menuProps={menuProps} />;\n            }}\n          >\n            {(props, ref) => (\n              <TooltipTrigger tooltip={<ActionTooltip actionName=\"Options\" />}>\n                <IconButton {...props} ref={ref}>\n                  <PlatformIcon icon=\"general/gearPlain\" />\n                </IconButton>\n              </TooltipTrigger>\n            )}\n          </MenuTrigger>\n          <ActionButton actionId={HIDE_ACTIVE_WINDOW_ACTION_ID} />\n        </Toolbar>\n      </StyledToolWindowHeaderActions>\n    </StyledToolWindowHeader>\n  );\n};\n","import React, { useContext, useMemo, useRef } from \"react\";\nimport { filterDOMProps, mergeProps } from \"@react-aria/utils\";\nimport { DOMProps } from \"@react-types/shared\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport {\n  FocusScope,\n  FocusScopeRef,\n} from \"@intellij-platform/core/utils/FocusScope\";\nimport {\n  ActionDefinition,\n  ActionsProvider,\n} from \"@intellij-platform/core/ActionSystem\";\nimport { useToolWindow } from \"./useToolWindow\";\nimport { DefaultToolWindowHeader } from \"./DefaultToolWindowHeader\";\nimport { useToolWindowActions } from \"./useToolWindowActions\";\n\nexport interface DefaultToolWindowProps extends DOMProps {\n  children?: React.ReactNode;\n  /**\n   * title to be shown on the left side of the tool window header.\n   */\n  headerContent?: React.ReactNode;\n  /**\n   * additional action buttons to be rendered before the default gear and hide buttons.\n   */\n  additionalActions?: React.ReactNode;\n  /**\n   * Actions to be provided in the tool window, in addition to the default tool window actions.\n   */\n  actions?: ActionDefinition[];\n  /**\n   * The title of main part of the tool windows component. Used in tool window actions.\n   * @default \"Editor\"\n   */\n  mainContentTitle?: string;\n  onFocusChange?: (focused: boolean) => void;\n}\n\nconst StyledToolWindowContainer = styled.div`\n  outline: none;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n  flex: 1;\n`;\nconst StyledToolWindowContent = styled.div`\n  flex: 1;\n  overflow: auto;\n`;\n\ninterface DefaultToolWindowContextObj {\n  hasFocus?: boolean;\n}\n\nconst DefaultToolWindowContext =\n  React.createContext<DefaultToolWindowContextObj>({\n    hasFocus: false,\n  });\n\nexport const useDefaultToolWindowContext = () =>\n  useContext(DefaultToolWindowContext);\n/**\n * Default component for rendering the content of a tool window. It supports a header and a scrollable area.\n * The header supports showing a content, and some default+custom actions on the right.\n *\n * @see MultiContentToolWindow\n *\n * Remaining features:\n * - Additional gear menu actions.\n *\n */\nexport const DefaultToolWindow: React.FC<DefaultToolWindowProps> = ({\n  headerContent,\n  children,\n  additionalActions,\n  onFocusChange,\n  actions,\n  mainContentTitle = \"Editor\",\n  ...otherProps\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const contentRef = useRef<HTMLDivElement>(null);\n  const focusableContentRef = useRef<FocusScopeRef>(null);\n  const {\n    // NOTE: we might as well use :focus-within and target StyledToolWindowHeader to set the background, but it's not\n    // a clear improvement.\n    contentHasFocus,\n    toolWindowProps,\n    toolWindowContentProps,\n    toolWindowHeaderProps,\n  } = useToolWindow(\n    { containerRef, contentRef, focusableContentRef },\n    {\n      onFocusChange,\n    }\n  );\n\n  const defaultToolWindowContext = useMemo(\n    () => ({\n      hasFocus: contentHasFocus,\n    }),\n    [contentHasFocus]\n  );\n  const activeToolWindowActionGroup = useToolWindowActions({\n    mainContentTitle,\n  });\n  const allActions = [activeToolWindowActionGroup, ...(actions || [])];\n\n  return (\n    <ActionsProvider actions={allActions}>\n      {({ shortcutHandlerProps }) => (\n        <StyledToolWindowContainer\n          {...mergeProps(\n            toolWindowProps,\n            shortcutHandlerProps,\n            filterDOMProps(otherProps)\n          )}\n          ref={containerRef}\n        >\n          <DefaultToolWindowContext.Provider value={defaultToolWindowContext}>\n            <DefaultToolWindowHeader\n              additionalActions={additionalActions}\n              contentHasFocus={contentHasFocus}\n              {...toolWindowHeaderProps}\n            >\n              {headerContent}\n            </DefaultToolWindowHeader>\n            <StyledToolWindowContent\n              ref={contentRef}\n              {...toolWindowContentProps}\n            >\n              {/**\n               * FIXME: adding `contain` prevents focus from moving to another focus scope both with mouse and keyboard.\n               * If we want to follow the Intellij Platform behaviour exactly, we need a kind of focus containment, where\n               * focus is trapped only for keyboard interaction, and user can still move focus by clicking another scope.\n               * Maybe a custom useFocusContainment hook and a separate option for activating it on our own FocusScope.\n               */}\n              <FocusScope ref={focusableContentRef} autoFocus>\n                {children}\n              </FocusScope>\n            </StyledToolWindowContent>\n          </DefaultToolWindowContext.Provider>\n        </StyledToolWindowContainer>\n      )}\n    </ActionsProvider>\n  );\n};\n","import React from \"react\";\nimport { Shortcut, useAction } from \"@intellij-platform/core/ActionSystem\";\nimport { ActionTooltip, TooltipTrigger } from \"@intellij-platform/core/Tooltip\";\nimport { getActivateToolWindowActionId } from \"./useToolWindowsActions\";\nimport styled from \"styled-components\";\n\nconst getToolWindowNumberFromShortcut = (shortcut: Shortcut): number | null => {\n  const num =\n    shortcut.type === \"keyboard\" &&\n    shortcut.firstKeyStroke.modifiers?.length === 1 &&\n    [\"Alt\", \"Meta\", \"Control\"].includes(shortcut.firstKeyStroke.modifiers[0]) &&\n    shortcut.firstKeyStroke.code.match(/^(Digit|Numpad)([0-9])$/)?.[2];\n  if (num) {\n    return parseInt(num);\n  }\n  return null;\n};\n\nconst StyledWrapper = styled.span`\n  display: flex;\n`;\n\n/**\n * Default UI for the toolbar button (aka. stripe button) of the tool window.\n * - Renders the title and icon for the tool window\n * - Optionally shows the number before the title, if a numeric shortcut is set for the corresponding ActivateToolWindow\n *   action, in the currently applied keymap.\n * - Adds an Action Tooltip\n */\nexport const DefaultToolWindowToolbarButton = ({\n  id,\n  title,\n  icon,\n  showNumber = true,\n}: {\n  id: React.Key;\n  title: string;\n  icon: React.ReactNode;\n  showNumber?: boolean;\n}) => {\n  const action = useAction(getActivateToolWindowActionId(`${id}`));\n\n  const number = action?.shortcuts\n    ?.map(getToolWindowNumberFromShortcut)\n    .find(Number.isInteger);\n  return (\n    <TooltipTrigger\n      tooltip={<ActionTooltip actionName={title} shortcut={action?.shortcut} />}\n    >\n      <StyledWrapper>\n        {icon}\n        &nbsp;\n        {number != null && showNumber ? (\n          <>\n            <u>{number}</u>:&nbsp;\n          </>\n        ) : null}\n        {title}\n      </StyledWrapper>\n    </TooltipTrigger>\n  );\n};\n","import React, { ForwardedRef } from \"react\";\nimport { indexBy } from \"ramda\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport {\n  ToolWindowRefValue,\n  ToolWindows,\n  ToolWindowsProps,\n} from \"@intellij-platform/core/ToolWindows\";\nimport { useToolWindowsActions } from \"./useToolWindowsActions\";\nimport { DefaultToolWindowToolbarButton } from \"./DefaultToolWindowToolbarButton\";\nimport { ActionsProvider } from \"@intellij-platform/core/ActionSystem\";\n\ninterface DefaultToolWindow {\n  id: string;\n  title: string;\n  icon: React.ReactNode;\n  content: React.ReactNode;\n}\n\n/**\n * A wrapper around ToolWindows, which provides default actions. It also expects windows to have a `title` and an `icon`\n * instead of more generic `toolbarButton`. The `title` and `icon` are then used in toolbar button, and also in the\n * actions that are dynamically created for each window to toggle/focus the tool window.\n */\nexport const DefaultToolWindows = React.forwardRef(function DefaultToolWindows(\n  {\n    windows: toolWindows,\n    toolWindowsState,\n    showNumbers,\n    ...props\n  }: Omit<ToolWindowsProps, \"windows\"> & {\n    windows: DefaultToolWindow[];\n    showNumbers?: boolean;\n  },\n  forwardedRef: ForwardedRef<ToolWindowRefValue>\n): React.ReactElement {\n  const toolWindowsRef = useObjectRef(forwardedRef);\n  const windowById = indexBy(({ id }) => id, toolWindows);\n  const actions = useToolWindowsActions({\n    toolWindowsRef,\n    toolWindowsState,\n    getPresentation: (id) => windowById[id],\n  });\n  return (\n    <ActionsProvider actions={actions}>\n      {({ shortcutHandlerProps }) => (\n        <ToolWindows\n          {...props}\n          ref={toolWindowsRef}\n          toolWindowsState={toolWindowsState}\n          windows={toolWindows.map(({ id, icon, content, title }) => ({\n            id,\n            toolbarButton: (\n              <DefaultToolWindowToolbarButton\n                id={id}\n                icon={icon}\n                title={title}\n                showNumber={showNumbers}\n              />\n            ),\n            content,\n          }))}\n          containerProps={mergeProps(\n            props.containerProps || {},\n            shortcutHandlerProps\n          )}\n        />\n      )}\n    </ActionsProvider>\n  );\n});\n","import React, { Key, useEffect, useState } from \"react\";\nimport { useControlledState } from \"@react-stately/utils\";\nimport { DefaultToolWindow, DefaultToolWindowProps } from \"./DefaultToolWindow\";\nimport { TabItem } from \"../Tabs/TabItem\";\nimport { usePrevious } from \"../utils/usePrevious\";\nimport { ToolWindowTabs } from \"../Tabs/ToolWindowTabs/ToolWindowTabs\";\n\nexport interface MultiContentToolWindowProps\n  extends Pick<DefaultToolWindowProps, \"additionalActions\"> {\n  /**\n   * List of contents that will be accessible with a list of grouped or ungrouped tabs in the tool window header.\n   */\n  children:\n    | React.ReactElement<MultiContentToolWindowContentProps>[]\n    | React.ReactElement<MultiContentToolWindowContentProps>;\n  /**\n   * Key of currently active content\n   */\n  activeKey?: Key;\n  defaultActiveKey?: Key;\n  onActiveKeyChange?: (key: Key) => void;\n  /**\n   * If true, it groups tabs in a dropdown instead.\n   *\n   * @default false\n   */\n  groupTabs?: boolean;\n  /**\n   * The content shown as the title of the tool window, before content switcher (tabs or dropdown).\n   * For more control over header content, you can pass a function which accepts rendered content switcher,\n   * and then you can compose it with other content as you wish. Use case examples of function variant:\n   * - You want to render a title before the content switcher, and something after the tabs. Like a \"+\" button in\n   *   terminal.\n   * - You want to conditionally move inner-content header up to the tool window header, if there is only one tab. In\n   *   that case you don't need to render the content switcher at all. An example is the new design in the \"Run\"\n   *   tool window.\n   */\n  headerContent?:\n    | React.ReactNode\n    | ((props: { renderedViewSwitcher: React.ReactNode }) => React.ReactNode);\n}\n\n/**\n * Implemented on top of DefaultToolWindow, allows for multiple tabbed content within a tool window.\n * Remaining features:\n * - Although trivial, group tabs action in tool window header gear icon is intentionally left unimplemented for now,\n *   until an increment on action system is done.\n * - Grouped mode is not implemented currently, as we don't have a dropdown component. Though it seems it's just a\n *   MenuTrigger and some trigger with a arrow icon.\n */\nexport const MultiViewToolWindow = ({\n  groupTabs,\n  children,\n  headerContent,\n  ...props\n}: MultiContentToolWindowProps) => {\n  const [isToolWindowFocused, setToolWindowFocused] = useState(false);\n  const [activeKey, setActiveKey] = useControlledState(\n    props.activeKey!,\n    props.defaultActiveKey!,\n    props.onActiveKeyChange!\n  );\n  const contents = React.Children.toArray(children)\n    .filter(\n      (\n        child\n      ): child is React.ReactElement<MultiContentToolWindowContentProps> => {\n        const validChild =\n          React.isValidElement(child) &&\n          child.type === MultiContentToolWindowContent;\n        if (!validChild) {\n          // FIXME: only warn in dev mode\n          console.warn(\n            \"You are not supposed to render anything but MultiContentToolWindowContent inside MultiViewToolWindow. Rendered: \",\n            child\n          );\n        }\n        return validChild;\n      }\n    )\n    // The following map is because of what React.Children.toArray does to keys: https://stackoverflow.com/q/33791401/1493081\n    // It doesn't look like a good idea since and there might be better ways to fix this, or at least make sure it would\n    // work in all cases. FIXME\n    .map((content) => ({ ...content, key: `${content.key}`.slice(2) as Key }));\n  const renderContentSwitcher = () => {\n    if (groupTabs) {\n      console.error(\n        \"groupTab is not supported yet in MultiViewToolWindow. Will fallback to ungrouped tabs\"\n      );\n    }\n    return (\n      <ToolWindowTabs\n        noBorders\n        items={contents}\n        active={isToolWindowFocused}\n        selectedKey={activeKey}\n        onSelectionChange={setActiveKey}\n      >\n        {(item) => <TabItem key={item.key}>{item.props.tabContent}</TabItem>}\n      </ToolWindowTabs>\n    );\n  };\n  const renderedViewSwitcher = renderContentSwitcher();\n\n  // We set the active key if it's not set or is invalid. A common scenario is when tabs are closable, and when the\n  // active tab is closed. You would always want to previous tab to get activated in such cases, instead of the first\n  // one. By having the logic here, there is no need to repeat the same logic in each use case. Although, it can also\n  // be moved into a state management utility for tabs, maybe in the future.\n\n  const keys = contents.map(({ key }) => key);\n  const previousKeys = usePrevious(keys);\n  useEffect(() => {\n    if (!keys.includes(activeKey)) {\n      const newActiveKey = keys[previousKeys.indexOf(activeKey) - 1] ?? keys[0];\n      if (newActiveKey != undefined) {\n        setActiveKey(newActiveKey);\n      }\n    }\n  });\n\n  const activeContent = contents.find(\n    (content) => activeKey == undefined || activeKey === content.key\n  );\n  return (\n    <DefaultToolWindow\n      onFocusChange={setToolWindowFocused}\n      headerContent={\n        typeof headerContent === \"function\" ? (\n          headerContent({ renderedViewSwitcher })\n        ) : (\n          <>\n            {headerContent}\n            {renderedViewSwitcher}\n          </>\n        )\n      }\n      additionalActions={props.additionalActions}\n    >\n      {activeContent?.props.children}\n    </DefaultToolWindow>\n  );\n};\n\nexport interface MultiContentToolWindowContentProps {\n  key: Key;\n  /**\n   * Used in the corresponding tab.\n   */\n  tabContent: React.ReactNode;\n\n  children: React.ReactNode;\n}\n\nconst MultiContentToolWindowContent =\n  ({}: MultiContentToolWindowContentProps) => {\n    throw new Error(\n      \"MultiContentToolWindowContent is not meant to be rendered directly. You should only use it in MultiViewToolWindow\"\n    );\n  };\n\nMultiViewToolWindow.View = MultiContentToolWindowContent;\n","export const HIDE_ALL_WINDOWS_ACTION_ID = \"HideAllWindows\";\nexport const JUMP_TO_LAST_WINDOW_ACTION_ID = \"JumpToLastWindow\";\nexport const HIDE_ACTIVE_WINDOW_ACTION_ID = \"HideActiveWindow\";\nexport const MAXIMIZE_TOOL_WINDOW_ACTION_ID = \"MaximizeToolWindow\";\nexport const DOCK_TOOL_WINDOW_ACTION_ID = \"DockToolWindow\";\nexport const RESIZE_TOOL_WINDOW_RIGHT_ACTION_ID = \"ResizeToolWindowRight\";\nexport const RESIZE_TOOL_WINDOW_LEFT_ACTION_ID = \"ResizeToolWindowLeft\";\nexport const RESIZE_TOOL_WINDOW_TOP_ACTION_ID = \"ResizeToolWindowTop\";\nexport const RESIZE_TOOL_WINDOW_BOTTOM_ACTION_ID = \"ResizeToolWindowBottom\";\nexport const DOCK_PINNED_MODE_ACTION_ID = \"DockPinnedMode\";\nexport const DOCK_UNPINNED_MODE_ACTION_ID = \"DockUnpinnedMode\";\nexport const UNDOCK_MODE_ACTION_ID = \"UndockMode\";\nexport const FLOAT_MODE_ACTION_ID = \"FloatMode\";\nexport const WINDOW_MODE_ACTION_ID = \"WindowMode\";\nexport const FOCUS_EDITOR_ACTION_ID = \"FocusEditor\";\nexport const REMOVE_TOOL_WINDOW_FROM_SIDEBAR_ACTION_ID =\n  \"RemoveToolWindowFromSidebar\"; // doesn't show up in keymap. Not sure what the id is in the original impl.\n","import React from \"react\";\nimport {\n  Anchor,\n  isHorizontalToolWindow,\n  useToolWindowState,\n  ViewMode,\n} from \"@intellij-platform/core/ToolWindows\";\nimport {\n  ActionDefinition,\n  ActionGroupDefinition,\n} from \"@intellij-platform/core/ActionSystem\";\nimport { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport {\n  DOCK_PINNED_MODE_ACTION_ID,\n  DOCK_TOOL_WINDOW_ACTION_ID,\n  DOCK_UNPINNED_MODE_ACTION_ID,\n  FLOAT_MODE_ACTION_ID,\n  FOCUS_EDITOR_ACTION_ID,\n  HIDE_ACTIVE_WINDOW_ACTION_ID,\n  MAXIMIZE_TOOL_WINDOW_ACTION_ID,\n  REMOVE_TOOL_WINDOW_FROM_SIDEBAR_ACTION_ID,\n  RESIZE_TOOL_WINDOW_BOTTOM_ACTION_ID,\n  RESIZE_TOOL_WINDOW_LEFT_ACTION_ID,\n  RESIZE_TOOL_WINDOW_RIGHT_ACTION_ID,\n  RESIZE_TOOL_WINDOW_TOP_ACTION_ID,\n  UNDOCK_MODE_ACTION_ID,\n  WINDOW_MODE_ACTION_ID,\n} from \"./ToolWindowActionIds\";\nimport { useCreateDefaultActionGroup } from \"@intellij-platform/core/ActionSystem/components\";\n\n// Resize steps in Intellij Platform is calculated based on the size of a \"W\" character and some\n// configuration (ide.windowSystem.hScrollChars). Although it's technically feasible, it seems not necessary\nconst HEIGHT_RESIZE_STEP = 16 * 5;\nconst WIDTH_RESIZE_STEP = 13 * 5;\n\nexport const anchors: Array<{\n  anchor: Anchor;\n  isSplit: boolean;\n  id: string;\n}> = [\n  { id: \"moveToLeftTop\", anchor: \"left\", isSplit: false },\n  { id: \"moveToLeftBottom\", anchor: \"left\", isSplit: true },\n  { id: \"moveToBottomLeft\", anchor: \"bottom\", isSplit: false },\n  { id: \"moveToBottomRight\", anchor: \"bottom\", isSplit: true },\n  { id: \"moveToRightTop\", anchor: \"right\", isSplit: true },\n  { id: \"moveToRightBottom\", anchor: \"right\", isSplit: false },\n  { id: \"moveToTopRight\", anchor: \"top\", isSplit: true },\n  { id: \"moveToTopLeft\", anchor: \"top\", isSplit: false },\n];\n\nconst getAnchorName = ({\n  anchor,\n  isSplit,\n}: {\n  anchor: Anchor;\n  isSplit: boolean;\n}) =>\n  `${anchor[0].toUpperCase()}${anchor.slice(1)} ${\n    isHorizontalToolWindow(anchor)\n      ? isSplit\n        ? \"Right\"\n        : \"Left\"\n      : isSplit\n      ? \"Bottom\"\n      : \"Top\"\n  }`;\n\nexport const ViewModeToActionId: Record<ViewMode, string> = {\n  docked_pinned: DOCK_PINNED_MODE_ACTION_ID,\n  docked_unpinned: DOCK_UNPINNED_MODE_ACTION_ID,\n  undock: UNDOCK_MODE_ACTION_ID,\n  float: FLOAT_MODE_ACTION_ID,\n  window: WINDOW_MODE_ACTION_ID,\n};\n\nexport const VIEW_MODE_ACTION_GROUP_ID = \"TW.ViewModeGroup\";\nexport const MOVE_TO_ACTION_GROUP_ID = \"TW.MoveToGroup\";\nexport const TOOL_WINDOW_RESIZE_ACTION_GROUP_ID = \"ResizeToolWindowGroup\";\n\nexport function useToolWindowActions({\n  mainContentTitle,\n}: {\n  mainContentTitle: string;\n}): ActionGroupDefinition {\n  const {\n    stretchWidth,\n    stretchHeight,\n    changeViewMode,\n    moveToSide,\n    focusMainContent,\n    hide,\n    remove,\n    state,\n  } = useToolWindowState();\n  const createDefaultActionGroup = useCreateDefaultActionGroup();\n\n  const actions: ActionDefinition[] = [];\n  if (!state) {\n    // FIXME: when window is removed, a last render happens with the new ToolWindowsState, which doesn't have state\n    //  for the removed tool window. Need to understand why that happens.\n    return createDefaultActionGroup({\n      id: \"ActiveToolwindowGroup\",\n      title: \"Active Tool Window\",\n      children: [],\n    });\n  }\n  const viewModeActionGroup = createDefaultActionGroup({\n    id: VIEW_MODE_ACTION_GROUP_ID,\n    title: \"View Mode\",\n    children: [\n      {\n        id: DOCK_PINNED_MODE_ACTION_ID,\n        title: \"Dock Pinned\",\n        actionPerformed: () => {\n          changeViewMode(\"docked_pinned\");\n        },\n      },\n      {\n        id: DOCK_UNPINNED_MODE_ACTION_ID,\n        title: \"Dock Unpinned\",\n        actionPerformed: () => {\n          changeViewMode(\"docked_unpinned\");\n        },\n      },\n      {\n        id: UNDOCK_MODE_ACTION_ID,\n        title: \"Undock\",\n        actionPerformed: () => {\n          changeViewMode(\"undock\");\n        },\n      },\n      {\n        id: FLOAT_MODE_ACTION_ID,\n        title: \"Float\",\n        actionPerformed: () => {\n          changeViewMode(\"float\");\n        },\n      },\n      {\n        id: WINDOW_MODE_ACTION_ID,\n        title: \"Window\",\n        actionPerformed: () => {\n          changeViewMode(\"window\");\n        },\n      },\n    ],\n  });\n  const moveToActionGroup = createDefaultActionGroup({\n    id: MOVE_TO_ACTION_GROUP_ID,\n    title: \"Move to\",\n    children: anchors.map(\n      (anchor): ActionDefinition => ({\n        id: `TW.MoveTo.${anchor.id}`,\n        title: getAnchorName(anchor),\n        icon: <PlatformIcon icon={`actions/${anchor.id}`} />,\n        isDisabled:\n          state.anchor === anchor.anchor && state.isSplit === anchor.isSplit,\n        actionPerformed: () => {\n          moveToSide(anchor);\n        },\n      })\n    ),\n  });\n  actions.push(\n    {\n      id: FOCUS_EDITOR_ACTION_ID,\n      title: `Focus ${mainContentTitle}`, // in intellij it says \"Focus Editor\" but it's not generic enough.\n      actionPerformed: () => {\n        focusMainContent();\n      },\n    },\n    {\n      id: HIDE_ACTIVE_WINDOW_ACTION_ID,\n      title: \"Hide\",\n      icon: <PlatformIcon icon=\"general/hideToolWindow\" />,\n      actionPerformed: () => {\n        hide();\n      },\n    },\n    {\n      id: MAXIMIZE_TOOL_WINDOW_ACTION_ID,\n      title: \"Maximize Tool Window\", // Should be \"Restore Tool Window Size if the window is currently maximized\n      actionPerformed: () => {\n        // TODO(release): either remove the action or implement it\n        alert(\"Not implemented\");\n      },\n    },\n    {\n      id: REMOVE_TOOL_WINDOW_FROM_SIDEBAR_ACTION_ID,\n      title: \"Remove from Sidebar\",\n      actionPerformed: () => {\n        remove();\n      },\n    },\n    viewModeActionGroup,\n    moveToActionGroup\n  );\n  if (state.viewMode === \"float\") {\n    actions.push({\n      id: DOCK_TOOL_WINDOW_ACTION_ID,\n      title: \"Dock\",\n      icon: (\n        <PlatformIcon\n          icon={`actions/${\n            anchors.find(\n              ({ anchor, isSplit }) =>\n                anchor === state.anchor && isSplit === state.isSplit\n            )?.id\n          }`}\n        />\n      ),\n      actionPerformed: () => {\n        changeViewMode(\"docked_pinned\");\n      },\n    });\n  }\n  if (state.viewMode !== \"float\" && state.viewMode !== \"window\") {\n    const resizeGroup = createDefaultActionGroup({\n      id: TOOL_WINDOW_RESIZE_ACTION_GROUP_ID,\n      title: \"Resize\",\n      children: [],\n    });\n    if (isHorizontalToolWindow(state.anchor)) {\n      resizeGroup.children.push({\n        id: RESIZE_TOOL_WINDOW_BOTTOM_ACTION_ID,\n        title: \"Stretch to bottom\",\n        actionPerformed: () => {\n          stretchHeight(\n            state.anchor === \"bottom\" ? -HEIGHT_RESIZE_STEP : HEIGHT_RESIZE_STEP\n          );\n        },\n      });\n      resizeGroup.children.push({\n        id: RESIZE_TOOL_WINDOW_TOP_ACTION_ID,\n        title: \"Stretch to top\",\n        actionPerformed: () => {\n          stretchHeight(\n            state.anchor === \"top\" ? -HEIGHT_RESIZE_STEP : HEIGHT_RESIZE_STEP\n          );\n        },\n      });\n    } else {\n      resizeGroup.children.push({\n        id: RESIZE_TOOL_WINDOW_LEFT_ACTION_ID,\n        title: \"Stretch to left\",\n        actionPerformed: () => {\n          stretchWidth(\n            state.anchor === \"left\" ? -WIDTH_RESIZE_STEP : WIDTH_RESIZE_STEP\n          );\n        },\n      });\n      resizeGroup.children.push({\n        id: RESIZE_TOOL_WINDOW_RIGHT_ACTION_ID,\n        title: \"Stretch to right\",\n        actionPerformed: () => {\n          stretchWidth(\n            state.anchor === \"right\" ? -WIDTH_RESIZE_STEP : WIDTH_RESIZE_STEP\n          );\n        },\n      });\n    }\n    actions.push(resizeGroup);\n  }\n  return createDefaultActionGroup({\n    id: \"ActiveToolwindowGroup\",\n    title: \"Active Tool Window\",\n    children: actions,\n  });\n}\n","import React from \"react\";\nimport { ActionDefinition } from \"@intellij-platform/core/ActionSystem\";\nimport {\n  getViewModeType,\n  ToolWindowRefValue,\n  ToolWindowsState,\n} from \"@intellij-platform/core/ToolWindows\";\nimport {\n  HIDE_ALL_WINDOWS_ACTION_ID,\n  JUMP_TO_LAST_WINDOW_ACTION_ID,\n} from \"./ToolWindowActionIds\";\n\ninterface DefaultToolWindowActionsProps {\n  toolWindowsState: Readonly<ToolWindowsState>;\n  toolWindowsRef: React.RefObject<ToolWindowRefValue>;\n  /**\n   * Used when creating ActivateToolWindow action for each tool window.\n   */\n  getPresentation?: (key: React.Key) =>\n    | {\n        title: string;\n        icon: React.ReactNode;\n      }\n    | undefined;\n}\n\nexport const getActivateToolWindowActionId = (id: string) =>\n  `Activate${id.replace(\" \", \"\")}Window`;\n\n/**\n * Provides default tool windows actions:\n * - Hide all tool windows\n * - Activate{id}Window action for each window\n * - Jump to last tool window\n *\n * @see also {@link DefaultToolWindows}\n */\nexport function useToolWindowsActions({\n  toolWindowsState,\n  toolWindowsRef,\n  getPresentation,\n}: DefaultToolWindowActionsProps) {\n  const isAnySideWindowWindowOpen = (state: Readonly<ToolWindowsState>) =>\n    Object.values(state.windows).some(\n      ({ isVisible, viewMode }) =>\n        isVisible && getViewModeType(viewMode) !== \"float\"\n    );\n  const windowIds = Object.keys(toolWindowsState.windows).map(\n    (key) => `${key}`\n  );\n  const activateToolWindowActions = windowIds.map(\n    (id: string, index): ActionDefinition => {\n      const { title, icon } = getPresentation?.(id) || {};\n      return {\n        id: getActivateToolWindowActionId(id),\n        title: title || `${getOrdinal(index)} window`,\n        icon,\n        description: `Activate ${title || getOrdinal(index)} window`,\n        actionPerformed: () => {\n          if (\n            toolWindowsState.windows[id]?.isVisible &&\n            !toolWindowsRef.current?.hasFocus(id)\n          ) {\n            toolWindowsRef.current?.focus(id);\n          } else {\n            toolWindowsRef.current?.changeState((state) => state.toggle(id));\n          }\n        },\n      };\n    }\n  );\n  const actions: ActionDefinition[] = [\n    ...activateToolWindowActions,\n    {\n      id: HIDE_ALL_WINDOWS_ACTION_ID,\n      title: isAnySideWindowWindowOpen(toolWindowsState)\n        ? \"Hide All Windows\"\n        : \"Restore windows\",\n      actionPerformed: () => {\n        toolWindowsRef.current?.changeState((state) => {\n          if (isAnySideWindowWindowOpen(state)) {\n            return state.hideAll();\n          } else {\n            return state.restoreWindows();\n          }\n        });\n        // Because windows have autofocus behaviour, a timeout is set. Not sure how reliable it is.\n        // TODO: replace effect-based auto focus behaviour with something better, maybe controlled by ToolWindows\n        //  component, and when a tool window is opened.\n        setTimeout(() => {\n          toolWindowsRef.current?.focusMainContent();\n        });\n      },\n    },\n    {\n      id: JUMP_TO_LAST_WINDOW_ACTION_ID,\n      title: \"Jump to Last Tool Window\",\n      isDisabled: toolWindowsState.lastFocusedKey == null,\n      actionPerformed: () => {\n        toolWindowsRef.current?.focusLastActiveWindow();\n      },\n    },\n  ];\n  return actions;\n}\n\nfunction getOrdinal(n: number) {\n  let ord = [\"st\", \"nd\", \"rd\"];\n  let exceptions = [11, 12, 13];\n  let nth =\n    ord[(n % 10) - 1] == undefined || exceptions.includes(n % 100)\n      ? \"th\"\n      : ord[(n % 10) - 1];\n  return n + nth;\n}\n","import React, {\n  CSSProperties,\n  MouseEvent,\n  useContext,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\n\nimport { styled, css } from \"../styled\";\nimport {\n  StyledHorizontalSeparator,\n  StyledSeparator,\n  StyledVerticalSeparator,\n} from \"../StyledSeparator\";\nimport { useOverflowObserver } from \"@intellij-platform/core/utils/overflow-utils/useOverflowObserver\";\nimport { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport { Overlay, useOverlayPosition } from \"@react-aria/overlays\";\nimport { StyledPopupContainer } from \"@intellij-platform/core/Popup/Popup\";\nimport { mergeProps } from \"@react-aria/utils\";\n\ntype ToolbarBorderProp =\n  | true\n  | \"horizontal\"\n  | \"vertical\"\n  | \"bottom\"\n  | \"top\"\n  | \"left\"\n  | \"right\";\n\nexport type ToolbarProps = {\n  children: React.ReactNode;\n  orientation?: \"vertical\" | \"horizontal\";\n  border?: ToolbarBorderProp;\n  style?: CSSProperties;\n  className?: string;\n} & (\n  | {\n      orientation: \"vertical\";\n    }\n  | {\n      orientation?: \"horizontal\";\n      /**\n       * Defines how the toolbar should handle its children when there is not enough room\n       * to fit all:\n       * - popup: the overflowed children will be hidden behind a show more arrow icon that\n       *   shows the rest of the items in a popup.\n       * - wrap: children will be wrapped so that they fit the available width/height\n       **/\n      overflowBehavior?: \"popup\" | \"wrap\";\n    }\n);\n\nconst borderStyle = ({ border }: { border?: ToolbarBorderProp }) =>\n  border &&\n  css`\n    border-style: solid;\n    border-color: ${({ theme }) => theme.commonColors.borderColor};\n    border-width: ${border === true ? \"1px\" : borderPropToCssProp[border]};\n  `;\n\nconst StyledToolbar = styled.div<{\n  border?: ToolbarBorderProp;\n}>`\n  display: inline-flex;\n  box-sizing: border-box;\n  overflow: hidden;\n  // NOTE: in the original implementation, there is no empty space between buttons, but buttons have kind of an\n  // invisible left padding, which is mouse-intractable, but doesn't visually seem a part of the button.\n  // Although implementable, it didn't seem necessary to follow the exact same thing. Margin should be fine.\n  gap: 4px;\n  ${borderStyle}\n  ${StyledSeparator}:first-child {\n    display: none;\n  }\n  ${StyledSeparator}:last-child {\n    display: none;\n  }\n`;\n\nconst borderPropToCssProp: Record<\n  Exclude<ToolbarBorderProp, boolean>,\n  CSSProperties[\"borderWidth\"]\n> = {\n  top: \"1px 0 0 0\",\n  bottom: \"0 0 1px 0\",\n  right: \"0 1px 0 0\",\n  left: \"0 0 0 1px\",\n  horizontal: \"0 1px\",\n  vertical: \"1px 0\",\n};\n\nconst SIDE_PADDING = 3;\nconst END_PADDING = 4;\n\nconst StyledShowMoreButton = styled.button`\n  all: unset;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  ${borderStyle};\n`;\n\nconst StyledHorizontalToolbar = styled(StyledToolbar)`\n  padding: ${SIDE_PADDING}px ${END_PADDING}px;\n  max-width: 100%;\n  /*noinspection CssInvalidPropertyValue*/\n  max-width: -webkit-fill-available;\n  ${StyledHorizontalSeparator} {\n    margin: 1px 0;\n  }\n  ${StyledShowMoreButton} {\n    margin-right: -${END_PADDING}px;\n  }\n`;\n\nconst StyledVerticalToolbar = styled(StyledToolbar)`\n  flex-direction: column;\n  max-height: 100%;\n  /*noinspection CssInvalidPropertyValue*/\n  max-height: -webkit-fill-available;\n  padding: ${END_PADDING}px ${SIDE_PADDING}px;\n  ${StyledVerticalSeparator} {\n    margin: 0 1px;\n  }\n  ${StyledShowMoreButton} {\n    margin-bottom: -${END_PADDING}px;\n  }\n`;\n\nconst StyledToolbarContent = styled.div<{\n  shouldWrap?: boolean;\n  firstOverflowedIndex: number;\n}>`\n  box-sizing: inherit;\n  display: inherit;\n  flex-direction: inherit;\n  flex-wrap: ${({ shouldWrap }) => (shouldWrap ? \"wrap\" : \"nowrap\")};\n  gap: inherit;\n  max-height: inherit;\n  max-width: inherit;\n  min-height: 0;\n  min-width: 0;\n\n  ${({ firstOverflowedIndex }) =>\n    /**\n     * The hidden styles should be in a way that the hidden element:\n     * - occupies its space in the document layout.\n     * - doesn't capture mouse events. (e.g. a half-overflowing hidden element shouldn't show tooltip)\n     * - remains accessible to screen readers.\n     */\n    css`\n      > ${firstOverflowedIndex === 0\n          ? \"*\"\n          : `:nth-child(${firstOverflowedIndex}) ~ *`} {\n        opacity: 0 !important;\n        pointer-events: none !important;\n      }\n    `}\n`;\n// This can be used in other places if use-cases are raised for keeping orientation in the context.\nconst OrientationContext = React.createContext<\"horizontal\" | \"vertical\">(\n  \"horizontal\"\n);\n\n/**\n * ## Toolbar API/Implementation notes\n *\n * ### Handling Overflow\n *\n * Handling the overflow popup on DOM-level, allows for a simple and flexible implementation that doesn't\n * require any coupling between Toolbar and components like IconButton. Other components can also similarly be\n * rendered inside toolbar without adopting any specific API. It's worth noting that any generic approach based\n * on children react nodes instead of children DOM nodes will have many edge cases and will involve assumptions\n * that will limit the API of toolbar. Also, any approach based on moving dom nodes to the overflow popup will\n * conflict with React owning the DOM.\n *\n * #### Assumption\n *\n * Since the overflow popup renders the same `children`, and items in the toolbar and popup overflow are made\n * visible/hidden based on the index of DOM nodes, it's important than children deterministically results in the\n * same dom structure. i.e. if a component in children randomly renders different number of root dom nodes in\n * each render, it can cause issues in hiding/showing elements.\n *\n * ### Orientation\n * A few reasons for not having separate `HorizontalToolbar` and `VerticalToolbar` components instead of `Toolbar` with\n * `orientation` prop:\n * - From usage side, a single `Toolbar` component is considered a more discoverable API.\n * - Separate components would require abstracting common parts which unnecessarily adds to complexity.\n *   The amount of branching to handle the differences is considered ok, at the current state of the component.\n */\n\n/**\n * @description\n * A toolbar is a container for {@link IconButton} and similar UI components.\n *\n * ## Features:\n * - A toolbar can be horizontal or vertical\n * - When there is not enough space for all children, toolbar shows an arrow icon, which shows the overflowing\n *   items in a popup, upon mouseover.\n *   Optionally, overflow can be wrapped into multiple lines, in horizontal toolbars.\n *\n * @example\n * <Toolbar>\n *   <IconButton aria-label=\"Show Diff\">\n *     <PlatformIcon icon=\"actions/diff\" />\n *   </IconButton>\n *   </Toolbar>\n */\nexport const Toolbar: React.FC<ToolbarProps> = ({\n  border,\n  orientation = \"horizontal\",\n  ...props\n}): React.ReactElement => {\n  const overflowBehavior =\n    orientation === \"horizontal\" && \"overflowBehavior\" in props\n      ? props.overflowBehavior\n      : null;\n  const rootProps = { style: props.style, className: props.className };\n  const ref = useRef<HTMLDivElement>(null);\n  const overlayRef = useRef<HTMLDivElement>(null);\n  const showMoreButtonRef = useRef<HTMLButtonElement>(null);\n  const StyledToolbar =\n    orientation === \"horizontal\"\n      ? StyledHorizontalToolbar\n      : StyledVerticalToolbar;\n  const { overflowedElements } = useOverflowObserver(ref, { threshold: 0.8 });\n  const [isOverflowPopupVisible, setOverflowPopupVisible] = useState(false);\n  const [popupHeight, setPopupHeight] = useState(30);\n  const [firstOverflowedChildIndex, setFirstOverflowedChildIndex] =\n    useState<number>(-1);\n  const firstOverflowedChildRef = useRef<HTMLElement | undefined>();\n\n  useLayoutEffect(() => {\n    if (ref.current) {\n      const childElements = [...ref.current.children].filter(\n        (node): node is HTMLElement => node instanceof HTMLElement\n      );\n      const firstOverflowedChild = childElements.findIndex((child) =>\n        overflowedElements.includes(child)\n      );\n      setFirstOverflowedChildIndex(firstOverflowedChild);\n      firstOverflowedChildRef.current = childElements[firstOverflowedChild];\n    }\n  }, [overflowedElements]);\n\n  useLayoutEffect(() => {\n    if (overlayRef.current && popupHeight !== overlayRef.current.offsetHeight) {\n      setPopupHeight(overlayRef.current.offsetHeight);\n    }\n  });\n\n  const { overlayProps } = useOverlayPosition({\n    isOpen: isOverflowPopupVisible,\n    placement: \"bottom left\",\n    offset:\n      // in lack of positioning options for aligning bottom and left of of the overflow popup with the bottom and left\n      // of the toolbar itself, we have to measure the popup height, and use offset to achieve the same\n      orientation === \"horizontal\"\n        ? -popupHeight + SIDE_PADDING + 1\n        : -popupHeight + 1,\n    crossOffset:\n      orientation === \"horizontal\" ? -(SIDE_PADDING + 2) : -(SIDE_PADDING + 1),\n    containerPadding: 0,\n    shouldFlip: false,\n    targetRef: orientation === \"horizontal\" ? ref : showMoreButtonRef,\n    overlayRef: overlayRef,\n    onClose: () => {\n      setOverflowPopupVisible(false);\n    },\n  });\n\n  const showOverflowPopup = () => {\n    setOverflowPopupVisible(true);\n  };\n\n  const toolbarProps = {\n    onMouseMove: (event: MouseEvent) => {\n      const firstOverflowedElement = firstOverflowedChildRef.current;\n      if (!firstOverflowedElement) {\n        return;\n      }\n      const shouldShow =\n        orientation === \"vertical\"\n          ? event.clientY > firstOverflowedElement.getBoundingClientRect().top\n          : event.clientX > firstOverflowedElement.getBoundingClientRect().left;\n      if (shouldShow !== isOverflowPopupVisible) {\n        setOverflowPopupVisible(shouldShow);\n      }\n    },\n    onMouseLeave: () => {\n      if (isOverflowPopupVisible) {\n        setOverflowPopupVisible(false);\n      }\n    },\n  };\n  const toolbarOverflowPopupProps = {\n    onMouseEnter: () => setOverflowPopupVisible(true),\n    onMouseLeave: () => setOverflowPopupVisible(false),\n  };\n  return (\n    <OrientationContext.Provider value={orientation}>\n      <StyledToolbar\n        border={border}\n        {...mergeProps(rootProps, toolbarProps)}\n        role=\"toolbar\"\n      >\n        <StyledToolbarContent\n          ref={ref}\n          role=\"presentation\"\n          firstOverflowedIndex={firstOverflowedChildIndex}\n          shouldWrap={overflowBehavior === \"wrap\"}\n        >\n          {props.children}\n        </StyledToolbarContent>\n        {overflowedElements.length > 0 && (\n          <StyledShowMoreButton\n            ref={showMoreButtonRef}\n            tabIndex={-1}\n            onMouseEnter={showOverflowPopup}\n          >\n            <PlatformIcon icon=\"ide/link\" />\n          </StyledShowMoreButton>\n        )}\n      </StyledToolbar>\n      {isOverflowPopupVisible && overflowedElements.length > 0 && (\n        // Maybe more accessible to reuse the entire Popup here? it would require more flexible API to handle mouseleave though\n        // Note: we could also render the whole toolbar with the same props and only orientation being overwritten,\n        // but it has the risk of infinite overlay opening in some edge cases, and that level of generality doesn't\n        // seem to be necessary, at least at the moment.\n        <OrientationContext.Provider value=\"horizontal\">\n          <Overlay>\n            <StyledPopupContainer\n              ref={overlayRef}\n              {...mergeProps(overlayProps, toolbarOverflowPopupProps)}\n            >\n              <ToolbarInOverlay\n                border\n                firstVisibleIndex={\n                  orientation === \"vertical\"\n                    ? firstOverflowedChildIndex\n                    : undefined\n                }\n              >\n                {props.children}\n              </ToolbarInOverlay>\n            </StyledPopupContainer>\n          </Overlay>\n        </OrientationContext.Provider>\n      )}\n    </OrientationContext.Provider>\n  );\n};\n\nconst ToolbarInOverlay = styled(StyledHorizontalToolbar)<{\n  firstVisibleIndex?: number;\n}>`\n  ${({ firstVisibleIndex }) =>\n    firstVisibleIndex &&\n    css`\n      ${StyledSeparator}:nth-child(${firstVisibleIndex + 1}) {\n        display: none;\n      }\n      > :not(:nth-child(${firstVisibleIndex}) ~ *) {\n        display: none;\n      }\n    `};\n`;\n\n/**\n * Separator to be used between items in a toolbar.\n */\nexport const ToolbarSeparator = (): React.ReactElement => {\n  const orientation = useContext(OrientationContext);\n  return orientation === \"horizontal\" ? (\n    <StyledHorizontalSeparator />\n  ) : (\n    <StyledVerticalSeparator />\n  );\n};\n","import React from \"react\";\nimport { Tooltip, TooltipProps } from \"@intellij-platform/core/Tooltip/Tooltip\";\n\nexport interface ActionHelpTooltipProps\n  extends Omit<TooltipProps, \"children\" | \"multiline\"> {\n  actionName: React.ReactNode;\n  helpText: React.ReactNode;\n  shortcut?: React.ReactNode;\n  link?: React.ReactNode;\n}\n\n/**\n * Tooltip of type \"Action Help\"\n * @see {@link ActionTooltip} {@link HelpTooltip}\n * @see https://jetbrains.github.io/ui/controls/tooltip/#02\n */\nexport const ActionHelpTooltip = ({\n  actionName,\n  helpText,\n  shortcut,\n  link,\n  ...tooltipProps\n}: ActionHelpTooltipProps): JSX.Element => {\n  return (\n    <Tooltip multiline {...tooltipProps}>\n      <Tooltip.Header>\n        {actionName}\n        {shortcut && <Tooltip.Shortcut>{shortcut}</Tooltip.Shortcut>}\n      </Tooltip.Header>\n      <Tooltip.Description>{helpText}</Tooltip.Description>\n      {link && <Tooltip.Link>{link}</Tooltip.Link>}\n    </Tooltip>\n  );\n};\n","import React from \"react\";\nimport { Tooltip, TooltipProps } from \"@intellij-platform/core/Tooltip/Tooltip\";\n\nexport interface ActionTooltipProps\n  extends Omit<TooltipProps, \"children\" | \"multiline\"> {\n  actionName: React.ReactNode;\n  shortcut?: React.ReactNode;\n}\n\n/**\n * Tooltip of type \"Action\"\n * @see {@link ActionHelpTooltip} {@link HelpTooltip}\n * @see https://jetbrains.github.io/ui/controls/tooltip/#02\n */\nexport const ActionTooltip = ({\n  actionName,\n  shortcut,\n  ...tooltipProps\n}: ActionTooltipProps): JSX.Element => {\n  return (\n    <Tooltip {...tooltipProps}>\n      <Tooltip.Header>\n        {actionName}\n        {shortcut && <Tooltip.Shortcut>{shortcut}</Tooltip.Shortcut>}\n      </Tooltip.Header>\n    </Tooltip>\n  );\n};\n","import React from \"react\";\nimport { Tooltip, TooltipProps } from \"@intellij-platform/core/Tooltip/Tooltip\";\n\nexport interface HelpTooltipProps\n  extends Omit<TooltipProps, \"children\" | \"multiline\"> {\n  helpText: React.ReactNode;\n  shortcut?: React.ReactNode;\n  link?: React.ReactNode;\n}\n\n/**\n * Tooltip of type \"Help\"\n * @see {@link ActionTooltip} {@link ActionHelpTooltip}\n * @see https://jetbrains.github.io/ui/controls/tooltip/#02\n */\nexport const HelpTooltip = ({\n  helpText,\n  shortcut,\n  link,\n  ...tooltipProps\n}: HelpTooltipProps): JSX.Element => {\n  return (\n    <Tooltip multiline {...tooltipProps}>\n      <Tooltip.Header>{helpText}</Tooltip.Header>\n      {shortcut && (\n        <div>\n          <Tooltip.Shortcut>{shortcut}</Tooltip.Shortcut>\n        </div>\n      )}\n      {link && <Tooltip.Link>{link}</Tooltip.Link>}\n    </Tooltip>\n  );\n};\n","import React, {\n  HTMLAttributes,\n  ReactElement,\n  RefObject,\n  useEffect,\n  useRef,\n} from \"react\";\nimport { TooltipTriggerProps as AriaTooltipTriggerProps } from \"@react-aria/tooltip\";\nimport { useTooltipTriggerState } from \"@react-stately/tooltip\";\nimport { AriaPositionProps, useOverlayPosition } from \"@react-aria/overlays\";\nimport { TooltipTriggerAndOverlay } from \"./TooltipTriggerAndOverlay\";\n\nexport interface PositionedTooltipTriggerProps\n  extends Omit<AriaTooltipTriggerProps, \"trigger\">,\n    Pick<\n      AriaPositionProps,\n      \"placement\" | \"offset\" | \"crossOffset\" | \"shouldFlip\"\n    > {\n  /**\n   * Tooltip content. The value should be an element of type {@link Tooltip}.\n   */\n  tooltip: ReactElement;\n  /**\n   * Either a focusable component, or a render function which accepts trigger props and passes it to some component.\n   */\n  children:\n    | React.ReactNode\n    | ((\n        props: HTMLAttributes<HTMLElement> & { ref: RefObject<HTMLElement> }\n      ) => React.ReactNode);\n\n  /**\n   * Whether to show the tooltip on trigger's focus. By default, tooltip is shown only when the trigger\n   * is hovered, but it can improve accessibility to show the tooltip on focus as well.\n   */\n  showOnFocus?: boolean;\n}\n\n/**\n * Sets {@param tooltip} for its {@param children}. Tooltip will be positioned based relative to the trigger.\n * The default tooltip positioning is based on cursor, which is implemented by {@link TooltipTrigger}\n */\nexport const PositionedTooltipTrigger = ({\n  tooltip,\n  children,\n  /**\n   * ide.tooltip.initialReshowDelay registry key. [Docs](https://jetbrains.github.io/ui/controls/tooltip/#19) says\n   * it's 300 by default, but it's 500 in the code currently.\n   */\n  delay = 500,\n  offset = 8,\n  showOnFocus,\n  ...props\n}: PositionedTooltipTriggerProps): JSX.Element => {\n  const state = useTooltipTriggerState({\n    ...props,\n    delay,\n  });\n\n  const overlayRef = useRef<HTMLDivElement>(null);\n  const triggerRef = useRef<HTMLElement>(null);\n\n  const positionAria = useOverlayPosition({\n    ...props,\n    overlayRef,\n    targetRef: triggerRef,\n    offset,\n    isOpen: state.isOpen,\n    onClose: state.close,\n  });\n\n  // A workaround for a mysterious issue that happens only in docusaurus build.\n  // The ref value is not up-to-date, when the effect runs.\n  // FIXME: Find the explanation for why it happens, and fix it properly, if it's a legit issue.\n  useEffect(() => {\n    if (state.isOpen) {\n      requestAnimationFrame(positionAria.updatePosition);\n    }\n  }, [state.isOpen]);\n\n  return (\n    <TooltipTriggerAndOverlay\n      tooltip={tooltip}\n      positionAria={positionAria}\n      trigger={children}\n      state={state}\n      overlayRef={overlayRef}\n      triggerRef={triggerRef}\n      showOnFocus={showOnFocus}\n      isDisabled={props.isDisabled}\n    />\n  );\n};\n","import React, { ForwardedRef, MutableRefObject, useContext } from \"react\";\nimport { AriaTooltipProps, useTooltip } from \"@react-aria/tooltip\";\nimport { useObjectRef } from \"@react-aria/utils\";\nimport { PositionAria } from \"@react-aria/overlays\";\nimport { css, styled } from \"@intellij-platform/core/styled\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { WINDOW_SHADOW } from \"@intellij-platform/core/style-constants\";\nimport { TooltipContext } from \"./TooltipContext\";\nimport { TooltipPointer, TooltipPointerPosition } from \"./TooltipPointer\";\nimport {\n  tooltipBackground,\n  tooltipBorderColor,\n  WITH_POINTER_BORDER_RADIUS,\n} from \"./tooltip-styles\";\n\nexport interface TooltipProps extends Omit<AriaTooltipProps, \"isOpen\"> {\n  children: React.ReactNode;\n  multiline?: boolean;\n  className?: string;\n  /**\n   * Whether (and in what position) the arrow pointer should be shown.\n   * When using {@link TooltipTrigger} or {@link PositionedTooltipTrigger}, the position of the pointer is calculated\n   * based on the target element, and a boolean value to define whether the arrow should be shown or not would suffice.\n   *\n   * Tooltips with pointer have slight style difference.\n   * {@see https://www.figma.com/file/nfDfMAdV7j2fnQlpYNAOfP/IntelliJ-Platform-UI-Kit-(Community)?type=design&node-id=15-51&mode=design&t=7PplrxG8ZfXB4hIK-0}\n   *\n   * @example\n   * <Tooltip withPointer />\n   * // shows the pointer in the position controlled by {@link TooltipTrigger} or {@link PositionedTooltipTrigger}\n   * // If there is not `TooltipTrigger` or `PositionedTooltipTrigger`, the arrow is shown on top center by default.\n   *\n   * @example\n   * <Tooltip withPointer={{side: 'top', offset: 30}} />\n   * // shows the pointer on the top side, with horizontal offset of 30px from the left of tooltip, regardless\n   * // of whether `TooltipTrigger` or `PositionedTooltipTrigger` is used.\n   *\n   * @example\n   * <Tooltip withPointer={{side: 'left', offset: -30}} />\n   * // shows the pointer on the left side, with vertidcal offset of 30px from the bottom of the tooltip, regardless\n   * // of whether `TooltipTrigger` or `PositionedTooltipTrigger` is used.\n   */\n  withPointer?: boolean | TooltipPointerPosition;\n}\n\n// Providing default value for paddings, based on intellijlaf theme. In Intellij Platform, themes extend either\n// intellijlaf or darcula. Which means some properties can be omitted in the custom theme, relying on the values\n// in the base theme. This is not how theming works here, at the moment, and there are other similar issues, but\n// this is just a mitigation for one case, spacing in tooltip.\nexport const DEFAULT_TEXT_BORDER_INSETS = \"0.5rem 0.8125rem 0.625rem 0.625rem\";\nexport const DEFAULT_SMALL_TEXT_BORDER_INSETS =\n  \"0.375rem 0.75rem 0.4375rem 0.625rem\";\nconst StyledTooltip = styled.div<{ multiline?: boolean; hasPointer?: boolean }>`\n  box-sizing: content-box;\n  max-width: ${\n    /**\n     * Max width is meant to be set on the multiline description (which is not used in ActionTooltip which would\n     * be right according to [the specs](https://jetbrains.github.io/ui/controls/tooltip/#09)).\n     * But if set on `Tooltip.Description`, title and link can still make the tooltip grow more that the expected max\n     * width. So it makes more sense to set the max width on the container anyway. But since the value of the max width\n     * is meant to be for description we set the box-sizing to \"content-box\" to exclude container's padding in max-width\n     * calculation.\n     */\n    ({ theme, multiline }) =>\n      multiline\n        ? `${\n            theme.value<number>(\n              \"HelpTooltip.maxWidth\" as UnknownThemeProp<\"HelpTooltip.maxWidth\">\n            ) ?? 250\n          }px`\n        : null\n  };\n  white-space: ${({ multiline }) => (!multiline ? \"nowrap\" : null)};\n  display: inline-flex;\n  flex-direction: column;\n  gap: ${({ theme }) =>\n    theme.value<number>(\n      \"HelpToolTip.verticalGap\" as UnknownThemeProp<\"HelpToolTip.verticalGap\">\n    ) ?? 4}px;\n  background: ${tooltipBackground};\n  color: ${({ theme }) =>\n    theme.color(\"ToolTip.foreground\", !theme.dark ? \"#000\" : \"#bfbfbf\")};\n  padding: ${({ theme, multiline }) =>\n    multiline\n      ? theme.inset(\"HelpTooltip.defaultTextBorderInsets\") ||\n        DEFAULT_TEXT_BORDER_INSETS\n      : theme.inset(\"HelpTooltip.smallTextBorderInsets\") ||\n        DEFAULT_SMALL_TEXT_BORDER_INSETS};\n  line-height: 1.2;\n  border-style: solid;\n  border-width: ${({ theme, hasPointer }) =>\n    theme.value<boolean>(\"ToolTip.paintBorder\") || hasPointer ? \"1px\" : \"0px\"};\n  border-color: ${tooltipBorderColor};\n  ${WINDOW_SHADOW};\n  ${({ hasPointer }) =>\n    hasPointer &&\n    css`\n      position: relative; // needed for absolute positioning of the pointer\n      border-radius: ${WITH_POINTER_BORDER_RADIUS}px;\n    `}\n`;\n\nconst StyledShortcut = styled.kbd`\n  all: unset;\n  color: ${({ theme }) =>\n    theme.color(\n      \"ToolTip.shortcutForeground\",\n      !theme.dark ? \"#787878\" : \"#999999\"\n    )};\n`;\n\nconst StyledHeader = styled.div`\n  font-size: ${({ theme }) => theme.fontSizeDelta(\"HelpTooltip.fontSizeDelta\")};\n  display: flex;\n  gap: 0.5rem;\n`;\nconst StyledDescription = styled.div`\n  color: ${({ theme }) =>\n    theme.color(\n      \"Tooltip.infoForeground\" as UnknownThemeProp<\"Tooltip.infoForeground\">,\n      theme.commonColors.contextHelpForeground\n    )};\n  font-size: ${({ theme }) =>\n    theme.fontSizeDelta(\"HelpTooltip.descriptionSizeDelta\")};\n`;\n\nconst StyledLink = styled.div`\n  color: ${({ theme }) =>\n    theme.color(\n      \"ToolTip.linkForeground\" as UnknownThemeProp<\"ToolTip.linkForeground\">,\n      theme.commonColors.linkForegroundEnabled\n    )};\n  a,\n  [role=\"link\"] {\n    // Maybe target Link instead, without important. It didn't work as expected, in the first try tho.\n    color: inherit !important;\n  }\n`;\n\nexport const placementToPointerSide: Record<\n  PositionAria[\"placement\"],\n  TooltipPointerPosition[\"side\"]\n> = {\n  bottom: \"top\",\n  top: \"bottom\",\n  left: \"right\",\n  right: \"left\",\n  center: \"top\", // doesn't make sense :-?\n};\n/**\n * Implements the UI of a Tooltip. For tooltip to be shown for a trigger, on hover, use {@link TooltipTrigger}.\n * The following components can be used to compose the content of a tooltip.\n * - {@link Tooltip.Header}\n * - {@link Tooltip.Description}\n * - {@link Tooltip.Link}\n * - {@link Tooltip.Shortcut}\n * Prefer using higher-level components like {@link HelpTooltip}, {@link ActionHelpTooltip} or {@link ActionTooltip}.\n * that ensure different pieces of tooltip content follow the\n * [design system recommendation](https://jetbrains.github.io/ui/controls/tooltip)\n *\n *\n * ### Reference:\n * Tooltip, Tooltip.* and TooltipTrigger are corresponding to [HelpTooltip](https://github.com/JetBrains/intellij-community/blob/854daf45b47a6ea9da0348978608bfbfe998d99c/platform/platform-api/src/com/intellij/ide/HelpTooltip.java#L102)\n * in the original impl.\n */\nconst Tooltip = React.forwardRef(function Tooltip(\n  { children, multiline, withPointer, ...props }: TooltipProps,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n): JSX.Element {\n  const ref: MutableRefObject<HTMLDivElement | null> =\n    useObjectRef(forwardedRef);\n  const {\n    state,\n    isInteractive,\n    pointerPositionStyle,\n    placement = \"bottom\",\n  } = useContext(TooltipContext) || {};\n  const { tooltipProps } = useTooltip(\n    props,\n    state\n      ? {\n          ...state,\n          // if the tooltip is not interactive, let it be closed even when it's hovered. That's the according to the reference impl.\n          open: isInteractive ? state?.open : () => {},\n        }\n      : state\n  );\n\n  const { side, offset } =\n    typeof withPointer === \"object\"\n      ? withPointer\n      : { side: placementToPointerSide[placement], offset: undefined };\n\n  return (\n    <StyledTooltip\n      hasPointer={Boolean(withPointer)}\n      multiline={multiline}\n      {...tooltipProps}\n      className={props.className}\n      ref={ref}\n    >\n      {withPointer && (\n        <TooltipPointer\n          tooltipRef={ref}\n          side={side}\n          offset={\n            offset || !pointerPositionStyle\n              ? { type: \"specific\", value: offset }\n              : { type: \"calculated\", value: pointerPositionStyle }\n          }\n        />\n      )}\n      {children}\n    </StyledTooltip>\n  );\n});\n\nconst _Tooltip = Object.assign(Tooltip, {\n  Header: StyledHeader,\n  Shortcut: StyledShortcut,\n  Description: StyledDescription,\n  Link: StyledLink,\n});\n\nexport { _Tooltip as Tooltip };\n","import React, { CSSProperties } from \"react\";\nimport { TooltipTriggerState } from \"@react-stately/tooltip\";\nimport { PositionAria } from \"@react-aria/overlays\";\n\ninterface TooltipContextObject {\n  state: TooltipTriggerState;\n  isInteractive: boolean;\n  placement: PositionAria[\"placement\"];\n  pointerPositionStyle?: CSSProperties;\n}\n\nexport const TooltipContext = React.createContext<TooltipContextObject | null>(\n  null\n);\n","import { compose, identity } from \"ramda\";\nimport React, { CSSProperties, RefObject, useEffect, useState } from \"react\";\nimport { css, styled } from \"@intellij-platform/core/styled\";\n\nimport {\n  tooltipBackground,\n  WITH_POINTER_BORDER_RADIUS,\n} from \"./tooltip-styles\";\n\ntype OffsetValue = number | `${number}%`;\nexport type TooltipPointerPosition = {\n  /**\n   * The side of the tooltip the pointer is shown\n   */\n  side: \"top\" | \"bottom\" | \"left\" | \"right\";\n  /**\n   * - When side is \"top\" or \"bottom\":\n   *   Horizontal offset (in px) with respect to the left (or right, if negative) of the tooltip.\n   * - When side is \"left\" or \"right\":\n   *   Vertical offset (in px) with respect to the top (or bottom, if negative) of the tooltip.\n   *\n   * @default: '50%'\n   */\n  offset?: OffsetValue | { value: OffsetValue; invert?: boolean };\n};\n\nconst POINTER_WIDTH = 6;\nconst POINTER_HEIGHT = 9;\nconst POINTER_THICKNESS = 1.5;\nconst TRANSLATE = `translate(-${POINTER_WIDTH}px, -${POINTER_HEIGHT}px)`;\nconst sideStyles = {\n  top: css`\n    top: 0;\n    transform: ${TRANSLATE};\n  `,\n  bottom: css`\n    bottom: 0;\n    transform: rotateX(180deg) ${TRANSLATE};\n  `,\n  left: css`\n    left: 0;\n    transform: rotate(-90deg) ${TRANSLATE};\n  `,\n  right: css`\n    right: 0;\n    transform: rotate(90deg) ${TRANSLATE};\n  `,\n};\nconst StyledTooltipPointer = styled.span<{\n  side: TooltipPointerPosition[\"side\"];\n}>`\n  position: absolute;\n  width: 0;\n  height: 0;\n  ${({ side }) => sideStyles[side]};\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    border-left: ${POINTER_WIDTH + POINTER_THICKNESS}px solid transparent;\n    border-right: ${POINTER_WIDTH + POINTER_THICKNESS}px solid transparent;\n    border-bottom: ${POINTER_HEIGHT + POINTER_THICKNESS}px solid #636569;\n    left: -${POINTER_THICKNESS}px;\n    top: -${POINTER_THICKNESS}px;\n  }\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    border-left: ${POINTER_WIDTH}px solid transparent;\n    border-right: ${POINTER_WIDTH}px solid transparent;\n    border-bottom: ${POINTER_HEIGHT}px solid ${tooltipBackground};\n  }\n`;\n\nfunction normalizeCssValue(value: string | number) {\n  return typeof value === \"number\" ? `${value}px` : value;\n}\n\nconst withMin = (min: number) => (value: string | number | undefined) =>\n  value != undefined ? `max(${min}px, ${normalizeCssValue(value)})` : value;\nconst withMax = (max: number) => (value: string | number | undefined) =>\n  value != undefined ? `min(${max}px, ${normalizeCssValue(value)})` : value;\nconst HEIGHT_OFFSET = POINTER_HEIGHT + WITH_POINTER_BORDER_RADIUS;\nconst WIDTH_OFFSET = POINTER_WIDTH + WITH_POINTER_BORDER_RADIUS;\n\n/**\n * Ensures pointer is not offset too much or too little that would make the arrow appear\n * outside the tooltip boundary.\n */\nfunction limitPointerPositionStyles(\n  { width, height }: { width: number | undefined; height: number | undefined },\n  { top, left, right, bottom }: CSSProperties\n) {\n  const applyVerticalMinMax = compose(\n    height ? withMax(height - HEIGHT_OFFSET) : identity,\n    withMin(HEIGHT_OFFSET)\n  );\n  const applyHorizontalMinMax = compose(\n    width ? withMax(width - WIDTH_OFFSET) : identity,\n    withMin(WIDTH_OFFSET)\n  );\n  return {\n    top: applyVerticalMinMax(top),\n    bottom: applyVerticalMinMax(bottom),\n    left: applyHorizontalMinMax(left),\n    right: applyHorizontalMinMax(right),\n  };\n}\n\nconst getOffsetCssProp = (\n  side: TooltipPointerPosition[\"side\"],\n  invert?: boolean\n): \"top\" | \"bottom\" | \"left\" | \"right\" => {\n  if (side === \"top\" || side === \"bottom\") {\n    return invert ? \"right\" : \"left\";\n  }\n  return invert ? \"bottom\" : \"top\";\n};\n\nfunction pointerPositionToOffsetStyle({\n  side,\n  offset = \"50%\",\n}: TooltipPointerPosition): CSSProperties {\n  const { invert = false, value: offsetValue } =\n    typeof offset === \"object\" ? offset : { invert: false, value: offset };\n  return {\n    [getOffsetCssProp(side, invert)]: offsetValue,\n  };\n}\n\nexport function TooltipPointer({\n  side,\n  offset,\n  tooltipRef,\n}: {\n  side: TooltipPointerPosition[\"side\"];\n  offset:\n    | { type: \"calculated\"; value: CSSProperties }\n    | { type: \"specific\"; value: TooltipPointerPosition[\"offset\"] };\n  tooltipRef: RefObject<HTMLElement>;\n}) {\n  const [size, setSize] = useState<{\n    height: number | undefined;\n    width: number | undefined;\n  }>({ height: undefined, width: undefined });\n  useEffect(() => {\n    const { offsetHeight, offsetWidth } = tooltipRef.current || {};\n    if (offsetHeight != size?.height || offsetWidth != size?.width) {\n      setSize({ height: offsetHeight, width: offsetWidth });\n    }\n  });\n\n  return (\n    <StyledTooltipPointer\n      side={side}\n      style={limitPointerPositionStyles(\n        size,\n        offset.type === \"specific\"\n          ? pointerPositionToOffsetStyle({ side, offset: offset.value })\n          : offset.value\n      )}\n    />\n  );\n}\n","import React, {\n  HTMLAttributes,\n  ReactElement,\n  RefObject,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { TooltipTriggerProps as AriaTooltipTriggerProps } from \"@react-aria/tooltip\";\nimport { AriaPositionProps } from \"@react-aria/overlays\";\nimport { useTooltipTriggerState } from \"@react-stately/tooltip\";\nimport { useMouseEventOverlayPosition } from \"@intellij-platform/core/utils/useMouseEventOverlayPosition\";\nimport { useTheme } from \"@intellij-platform/core/styled\";\nimport { TooltipTriggerAndOverlay } from \"@intellij-platform/core/Tooltip/TooltipTriggerAndOverlay\";\n\nexport interface TooltipTriggerProps\n  // controlling isOpen state is not supported since positioning is based on cursor.\n  // PositionedTooltipTrigger can be used for controlled isOpen state\n  extends Omit<AriaTooltipTriggerProps, \"isOpen\" | \"defaultOpen\" | \"trigger\"> {\n  /**\n   * Tooltip content. The value should be an element of type {@link Tooltip}.\n   */\n  tooltip: ReactElement;\n  /**\n   * Placement of the tooltip with respect to the cursor\n   * @default \"bottom left\"\n   */\n  placement?: AriaPositionProps[\"placement\"];\n  /**\n   * The additional offset applied along the main axis between the element and its\n   * anchor element.\n   * @default theme.value<number>(\"HelpTooltip.mouseCursorOffset\") ?? 20\n   */\n  offset?: number;\n  /**\n   * Either a focusable component, or a render function which accepts trigger props and passes it to some component.\n   */\n  children:\n    | React.ReactNode\n    | ((\n        props: HTMLAttributes<HTMLElement> & { ref: RefObject<HTMLElement> }\n      ) => React.ReactNode);\n}\n\n/**\n * Sets {@param tooltip} for its {@param children}.\n * Showing tooltip on focus and controlled open state are not supported at the moment, based on how tooltip works in the\n * reference impl, and since tooltip is positioned based on cursor position. Positioning the tooltip based on cursor\n * position requires tooltip to be opened on hover. That's why neither controlling opened state nor showing the tooltip\n * on focus are supported here. {@link PositionedTooltipTrigger} allows for positioning the tooltip with respect to the\n * trigger element, and offers more options.\n */\nexport const TooltipTrigger = ({\n  tooltip,\n  children,\n  /**\n   * ide.tooltip.initialReshowDelay registry key. [Docs](https://jetbrains.github.io/ui/controls/tooltip/#19) says\n   * it's 300 by default, but it's 500 in the code currently.\n   */\n  delay = 500,\n  offset,\n  placement = \"bottom left\",\n  ...props\n}: TooltipTriggerProps): JSX.Element => {\n  const triggerRef = useRef<HTMLElement>(null);\n  const theme = useTheme();\n  const state = useTooltipTriggerState({\n    ...props,\n    delay,\n  });\n\n  const overlayRef = useRef<HTMLDivElement>(null);\n\n  const positionAria = useMouseEventOverlayPosition({\n    overlayRef,\n    isOpen: state.isOpen,\n    placement,\n    shouldFlip: true,\n    offset:\n      offset ?? theme.value<number>(\"HelpTooltip.mouseCursorOffset\") ?? 20,\n  });\n\n  // FIXME: Find the explanation for why it happens, and fix it properly, if it's a legit issue.\n  useEffect(() => {\n    if (state.isOpen) {\n      requestAnimationFrame(() => {\n        positionAria.updatePosition();\n      });\n    }\n  }, [state.isOpen]);\n\n  return (\n    <TooltipTriggerAndOverlay\n      tooltip={tooltip}\n      positionAria={positionAria}\n      trigger={children}\n      state={state}\n      overlayRef={overlayRef}\n      triggerRef={triggerRef}\n      /**\n       * If we want to support showing tooltip on focus, or if we want to allow controlled open state, we should let it\n       * be positioned by the trigger element in that case, rather than mouse position.\n       * One solution would be to use useOverlayPosition as well, and conditionally use the right `overlayProps`, based on\n       * whether the position determined by mouse is within `triggerRef.current?.getBoundingClientRect()`. Another way\n       * (maybe better) would be to have `useMouseEventOverlayPosition` accept `bounds` or `containerBounds`, which if\n       * passed, makes sure the position is kept within that boundary. Outside positions would be mapped to the closest\n       * point on the border of the boundary.\n       */\n      showOnFocus={false}\n      isDisabled={props.isDisabled}\n    />\n  );\n};\n","import React, {\n  HTMLAttributes,\n  ReactElement,\n  RefObject,\n  useState,\n} from \"react\";\nimport { useTooltipTrigger as useAriaTooltipTrigger } from \"@react-aria/tooltip\";\nimport { TooltipTriggerState } from \"@react-stately/tooltip\";\nimport { FocusableProvider } from \"@react-aria/focus\";\nimport { Overlay, PositionAria } from \"@react-aria/overlays\";\nimport { mergeProps, useLayoutEffect } from \"@react-aria/utils\";\n\nimport { TooltipContext } from \"./TooltipContext\";\n\ninterface TooltipTriggerBaseProps {\n  /**\n   * Tooltip content. The value should be an element of type {@link Tooltip}.\n   */\n  tooltip: ReactElement;\n  /**\n   * Either a focusable component, or a render function which accepts trigger props and passes it to some component.\n   */\n  trigger:\n    | React.ReactNode\n    | ((\n        props: HTMLAttributes<HTMLElement> & { ref: RefObject<HTMLElement> }\n      ) => React.ReactNode);\n\n  state: TooltipTriggerState;\n\n  showOnFocus?: boolean;\n  positionAria: PositionAria;\n  overlayRef: RefObject<HTMLDivElement>;\n  triggerRef: RefObject<HTMLElement>;\n  isDisabled?: boolean;\n}\n\n/**\n * Sets {@param tooltip} for its {@param children}. It doesn't handle tooltip positioning, and so shouldn't be used\n * directly. {@param tooltipOverlayProps} should be used to apply the intended positioning.\n *\n * TODO: Implement timeout-based auto-hide (https://jetbrains.github.io/ui/controls/tooltip/#19)\n * TODO: shadow\n */\nexport const TooltipTriggerAndOverlay = ({\n  tooltip,\n  trigger,\n  state,\n  overlayRef,\n  triggerRef,\n  showOnFocus,\n  positionAria,\n  ...props\n}: TooltipTriggerBaseProps): JSX.Element => {\n  const [isInteractive, setInteractive] = useState(false);\n  const { triggerProps, tooltipProps } = useTooltipTrigger(\n    props,\n    // In Intellij Platform. The tooltip hides right away. We follow the same, unless the tooltip is interactive.\n    // Maybe something to rethink if it's worth following the reference impl for.\n    { ...state, close: isInteractive ? state.close : () => state.close(true) },\n    triggerRef\n  );\n\n  if (!showOnFocus) {\n    delete triggerProps.onFocus;\n  }\n\n  useLayoutEffect(() => {\n    setInteractive(\n      overlayRef.current?.querySelector(\n        'a, button, [role=\"button\"], [role=link]'\n      ) !== null\n    );\n  });\n  return (\n    <>\n      {normalizeChildren(trigger, { ...triggerProps, ref: triggerRef })}\n      {state.isOpen && !props.isDisabled && (\n        <Overlay>\n          <TooltipContext.Provider\n            value={{\n              state,\n              isInteractive,\n              placement: positionAria.placement,\n              pointerPositionStyle: positionAria.arrowProps.style,\n            }}\n          >\n            <div\n              {...mergeProps(\n                positionAria.overlayProps,\n                // Is it ok to apply tooltip props on this wrapper?\n                tooltipProps\n              )}\n              ref={overlayRef}\n            >\n              {tooltip}\n            </div>\n          </TooltipContext.Provider>\n        </Overlay>\n      )}\n    </>\n  );\n};\n\nfunction normalizeChildren(\n  children: TooltipTriggerBaseProps[\"trigger\"],\n  triggerProps: HTMLAttributes<HTMLElement> & { ref: RefObject<HTMLElement> }\n) {\n  if (typeof children === \"function\") {\n    return children(triggerProps);\n  }\n  if (React.isValidElement(children) && typeof children.type === \"string\") {\n    return React.cloneElement(children, triggerProps);\n  }\n  return <FocusableProvider {...triggerProps}>{children}</FocusableProvider>;\n}\n\n/**\n * A wrapper around react-aria's useTooltipTrigger, adjusting it for Intellij Platform.\n */\nconst useTooltipTrigger: typeof useAriaTooltipTrigger = (props, state, ref) => {\n  const { triggerProps, tooltipProps } = useAriaTooltipTrigger(\n    props,\n    state,\n    ref\n  );\n  // onPointerDown returned from the underlying usePress stops propagation which messes with some usages of tooltip\n  // like in tab or tool window stripe button. We replace onPointerDown handler with a similar handler that closes\n  // the tooltip.\n  triggerProps.onPointerDown = () => {\n    if (!(ref.current instanceof HTMLInputElement)) {\n      state.close(true);\n    }\n  };\n  /**\n   * onMouseDown is preventDefault-ed which interferes with functionality of the tooltip trigger, in use cases like\n   * tool window stripe button. Note that since pointerDown is handled for calling the tooltip trigger's onPressStart\n   * handler (which hides the tooltip), there is no issue in excluding onMouseDown, because it's only used to preventDefault\n   * the event, because of some edge cases focus handling which is not our concern.\n   */\n  delete triggerProps.onMouseDown;\n\n  return {\n    triggerProps,\n    tooltipProps,\n  };\n};\n","import React from \"react\";\nimport { Tooltip } from \"@intellij-platform/core/Tooltip/Tooltip\";\nimport { styled } from \"@intellij-platform/core/styled\";\n\nexport interface ValidationTooltipProps {\n  children: React.ReactNode;\n  /**\n   * @default error\n   */\n  type?: \"error\" | \"warning\";\n}\n\nconst StyledValidationTooltip = styled(Tooltip)`\n  box-shadow: none;\n  padding: 0.25rem 0.5rem; // from ComponentValidator class in the reference impl\n  max-width: ${({ theme }) =>\n    `${theme.value<number>(\"ValidationTooltip.maxWidth\")}px`};\n  background: ${({ theme }) =>\n    theme.color(\"ValidationTooltip.errorBackground\")};\n  border: 1px solid\n    ${({ theme }) => theme.color(\"ValidationTooltip.errorBorderColor\")};\n`;\n\nconst StyledWarningValidationTooltip = styled(StyledValidationTooltip)`\n  background: ${({ theme }) =>\n    theme.color(\"ValidationTooltip.warningBackground\")};\n  border-color: ${({ theme }) =>\n    theme.color(\"ValidationTooltip.warningBorderColor\")};\n`;\n\n/**\n * Tooltip to be used for validation error messages\n * @see https://jetbrains.github.io/ui/principles/validation_errors/\n */\nexport const ValidationTooltip = ({\n  type = \"error\",\n  children,\n}: ValidationTooltipProps): JSX.Element => {\n  const Component =\n    type === \"error\" ? StyledValidationTooltip : StyledWarningValidationTooltip;\n  return <Component multiline>{children}</Component>;\n};\n","import { Theme } from \"@intellij-platform/core/Theme\";\n\nexport const WITH_POINTER_BORDER_RADIUS = 4;\nexport const tooltipBackground = ({ theme }: { theme: Theme }) =>\n  theme.color(\"ToolTip.background\", !theme.dark ? \"#f2f2f2\" : \"#3c3f41\");\nexport const tooltipBorderColor = ({ theme }: { theme: Theme }) =>\n  theme.color(\"ToolTip.borderColor\", !theme.dark ? \"#adadad\" : \"#636569\");\n","import React from \"react\";\nimport { Node } from \"@react-types/shared\";\nimport { TreeNode } from \"../TreeNode\";\nimport { SpeedSearchItemHighlightsProvider } from \"@intellij-platform/core/CollectionSpeedSearch\";\n\nexport const SpeedSearchTreeNode = <T extends object>({\n  item,\n}: {\n  item: Node<T>;\n}) => {\n  return (\n    <SpeedSearchItemHighlightsProvider itemKey={item.key}>\n      <TreeNode key={item.key} item={item} />\n    </SpeedSearchItemHighlightsProvider>\n  );\n};\n","import React, { ForwardedRef } from \"react\";\nimport { Node } from \"@react-types/shared\";\nimport { Virtualizer } from \"@react-aria/virtualizer\";\nimport { CollectionSpeedSearchContext } from \"@intellij-platform/core/CollectionSpeedSearch\";\nimport {\n  SpeedSearchProps,\n  SpeedSearchStateProps,\n} from \"@intellij-platform/core/SpeedSearch\";\nimport { useCollectionRef } from \"@intellij-platform/core/Collections/useCollectionRef\";\nimport useForwardedRef from \"@intellij-platform/core/utils/useForwardedRef\";\nimport { StyledTree } from \"../StyledTree\";\nimport { SpeedSearchPopup } from \"../../SpeedSearch/SpeedSearchPopup\";\nimport { useTreeState } from \"../useTreeState\";\nimport { TreeProps } from \"../Tree\";\nimport { useTreeVirtualizer } from \"../useTreeVirtualizer\";\nimport { TreeContext } from \"../TreeContext\";\nimport { useSpeedSearchTree } from \"./useSpeedSearchTree\";\nimport { SpeedSearchTreeNode } from \"./SpeedSearchTreeNode\";\nimport { filterDOMProps } from \"@react-aria/utils\";\n\nexport type SpeedSearchTreeProps<T extends object> = TreeProps<T> &\n  SpeedSearchProps &\n  SpeedSearchStateProps & {\n    /**\n     * Whether speed search popup should not be shown. Useful when speed search state is controlled, and\n     * a search input is rendered outside the tree.\n     */\n    hideSpeedSearchPopup?: boolean;\n  };\n\nexport const SpeedSearchTree = React.forwardRef(\n  <T extends object>(\n    {\n      fillAvailableSpace = false,\n      treeRef,\n      hideSpeedSearchPopup,\n      style,\n      className,\n      ...props\n    }: SpeedSearchTreeProps<T>,\n    forwardedRef: ForwardedRef<HTMLDivElement>\n  ) => {\n    const state = useTreeState(\n      { ...props, disallowEmptySelection: !props.allowEmptySelection },\n      treeRef\n    );\n    useCollectionRef(props, state);\n    const ref = useForwardedRef(forwardedRef);\n    const {\n      treeProps,\n      treeContext,\n      speedSearchContextValue,\n      searchPopupProps,\n    } = useSpeedSearchTree({ ...props, isVirtualized: true }, state, ref);\n\n    const { virtualizerProps } = useTreeVirtualizer({ state });\n\n    // NOTE: SpeedSearchPopup can be rendered as a portal with proper positioning (useOverlayPosition), if overflow\n    // issues required it.\n    return (\n      <TreeContext.Provider value={treeContext}>\n        <CollectionSpeedSearchContext.Provider value={speedSearchContextValue}>\n          {!hideSpeedSearchPopup && <SpeedSearchPopup {...searchPopupProps} />}\n          <StyledTree\n            as={Virtualizer}\n            ref={ref}\n            fillAvailableSpace={fillAvailableSpace}\n            {...virtualizerProps}\n            {...treeProps}\n            {...filterDOMProps(props, { labelable: true })}\n            style={style}\n            className={className}\n          >\n            {(type: string, item: unknown) => (\n              <SpeedSearchTreeNode\n                key={(item as Node<T>).key}\n                item={item as Node<T>}\n              />\n            )}\n          </StyledTree>\n        </CollectionSpeedSearchContext.Provider>\n      </TreeContext.Provider>\n    );\n  }\n);\n","import { RefObject } from \"react\";\nimport { useKeyboard } from \"@react-aria/interactions\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { useCollectionSpeedSearch } from \"../../CollectionSpeedSearch/useCollectionSpeedSearch\";\nimport {\n  SpeedSearchProps,\n  SpeedSearchStateProps,\n} from \"../../SpeedSearch/useSpeedSearch\";\nimport { TreeKeyboardDelegate } from \"../TreeKeyboardDelegate\";\nimport { SelectableTreeProps, useSelectableTree } from \"../useSelectableTree\";\nimport { hasAnyModifier } from \"@intellij-platform/core/utils/keyboard-utils\";\n\ninterface UseSpeedSearchTreeProps<T>\n  extends SpeedSearchProps,\n    SpeedSearchStateProps,\n    SelectableTreeProps<T> {}\n\nexport function useSpeedSearchTree<T>(\n  props: UseSpeedSearchTreeProps<T>,\n  state: TreeState<T>,\n  ref: RefObject<HTMLElement>\n) {\n  const {\n    containerProps,\n    keyboardDelegate,\n    selectionManager,\n    speedSearch,\n    ...collectionSpeedSearch\n  } = useCollectionSpeedSearch({\n    ...props,\n    collection: state.collection,\n    selectionManager: state.selectionManager,\n    keyboardDelegate: new TreeKeyboardDelegate(\n      state.collection,\n      state.disabledKeys,\n      ref\n    ),\n    ref,\n    // TODO: maybe allow control over speed search via other props\n  });\n\n  // Speed search is cleared on \"Enter\" key. Alternatively we could wrap onAction and onToggle props\n  // but this seemed more reasonable\n  // NOTE: It may make sense for this behaviour to be pulled up to useCollectionSpeedSearch.\n  const { keyboardProps: speedSearchKeyboardProps } = useKeyboard({\n    onKeyDown: (e) => {\n      if (\n        [\"Enter\", \"ArrowLeft\", \"ArrowRight\"].includes(e.key) &&\n        !hasAnyModifier(e)\n      ) {\n        speedSearch.clear();\n      } else {\n        e.continuePropagation();\n      }\n    },\n  });\n\n  const { treeProps, ...selectableTree } = useSelectableTree(\n    { ...props, keyboardDelegate },\n    { ...state, selectionManager },\n    ref\n  );\n\n  return {\n    treeProps: mergeProps(treeProps, containerProps, speedSearchKeyboardProps),\n    ...collectionSpeedSearch,\n    ...selectableTree,\n  };\n}\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { StyledList } from \"@intellij-platform/core/List/StyledList\";\n\nexport const StyledTree = styled(StyledList).attrs({ role: \"tree\" as string })`\n  background: ${({ theme }) => theme.color(\"Tree.background\")};\n`;\n","import React, { Key, MutableRefObject } from \"react\";\nimport { TreeState } from \"@react-stately/tree\";\n\nexport type TreeContextType<T> = {\n  state: Pick<\n    TreeState<T>,\n    | \"collection\"\n    | \"selectionManager\"\n    | \"expandedKeys\"\n    | \"disabledKeys\"\n    | \"toggleKey\"\n  >;\n  focused: boolean;\n  onActionRef: MutableRefObject<((key: Key) => void) | undefined>;\n};\n\nexport const TreeContext = React.createContext<TreeContextType<any> | null>(\n  null\n);\n","import { ListKeyboardDelegate } from \"@react-aria/selection\";\nimport { Collection, Node } from \"@react-types/shared\";\nimport React, { Key, RefObject } from \"react\";\n\nexport class TreeKeyboardDelegate<T> extends ListKeyboardDelegate<T> {\n  constructor(\n    private collection: Collection<Node<T>>,\n    private disabledKeys: Set<Key>,\n    ref: RefObject<HTMLElement>,\n    collator?: Intl.Collator\n  ) {\n    super(collection, disabledKeys, ref, collator);\n  }\n\n  getKeyLeftOf(key: React.Key): React.Key {\n    const item = this.collection.getItem(key);\n    return item?.parentKey ?? this.getKeyAbove(key);\n  }\n\n  getKeyRightOf(key: React.Key): React.Key {\n    return this.getKeyBelow(key);\n  }\n}\n","import { LafIcon } from \"../Icon\";\nimport React, { ComponentProps, useMemo } from \"react\";\nimport { styled } from \"../styled\";\n\nexport const TREE_ICON_SIZE = 16;\nconst StyledTreeNodeIcon = styled(LafIcon)`\n  margin-left: -20px;\n  margin-right: 4px;\n  margin-top: -1px; // the svg path seems to have uneven vertical padding. This is to compensate for that.\n  flex-shrink: 0;\n  align-self: center;\n`;\n\ntype TreeNodeIconProps = ComponentProps<typeof StyledTreeNodeIcon> & {\n  selected: boolean;\n  expanded: boolean;\n};\nconst getIcon = (selected: boolean, expanded: boolean) => {\n  const modifiers = { Selected: selected };\n  if (expanded) {\n    return {\n      themePath: selected ? \"Tree.expandedSelectedIcon\" : \"Tree.expandedIcon\",\n      iconPath: { name: \"treeExpanded\", modifiers },\n    };\n  }\n  if (!expanded) {\n    return {\n      themePath: selected ? \"Tree.collapsedSelectedIcon\" : \"Tree.collapsedIcon\",\n      iconPath: { name: \"treeCollapsed\", modifiers },\n    };\n  }\n};\n\nexport function TreeNodeIcon({\n  selected,\n  expanded,\n  ...props\n}: TreeNodeIconProps) {\n  const icon = useMemo(() => getIcon(selected, expanded), [selected, expanded]);\n  return (\n    <StyledTreeNodeIcon\n      icon={icon?.iconPath}\n      themePath={icon?.themePath}\n      size={TREE_ICON_SIZE}\n      {...props}\n    />\n  );\n}\n","import { Key } from \"react\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { PressProps } from \"@react-aria/interactions\";\n\nexport function useTreeNodeToggleButton<T>({\n  collection,\n  toggleKey,\n  selectionManager,\n  key,\n}: { key: Key } & Pick<\n  TreeState<T>,\n  \"collection\" | \"toggleKey\" | \"selectionManager\"\n>): { treeNodeToggleButtonProps: PressProps } {\n  return {\n    treeNodeToggleButtonProps: {\n      preventFocusOnPress: true,\n      onPress: () => {\n        toggleKey(key);\n\n        // The rest is for deselecting selected descendants and selecting the toggled node, if there\n        // is at least one of such currently selected descendants. This is the exact behavior\n        // of Tree in Intellij Platform, and hence implemented here.\n        const selectedDescendantKeys = [\n          ...selectionManager.selectedKeys,\n        ].filter((key: Key) => {\n          let parentKey = collection.getItem(key)?.parentKey;\n          while (parentKey) {\n            if (parentKey === key) {\n              return true;\n            }\n            parentKey = collection.getItem(parentKey)?.parentKey;\n          }\n          return false;\n        });\n        selectedDescendantKeys.forEach((key) =>\n          selectionManager.toggleSelection(key)\n        );\n        // if any of the descendants are selected\n        if (\n          !selectionManager.isSelected(key) &&\n          selectedDescendantKeys.length > 0\n        ) {\n          selectionManager.toggleSelection(key);\n        }\n      },\n    },\n  };\n}\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { StyledListItem } from \"@intellij-platform/core/List/StyledListItem\";\nimport { TREE_ICON_SIZE } from \"./TreeNodeIcon\";\n\ntype StyledListItemProps = {\n  level: number;\n};\nexport const StyledTreeNode = styled(StyledListItem).attrs<StyledListItemProps>(\n  { role: \"treeitem\" }\n)<StyledListItemProps>`\n  // There are some theme properties for tree node padding (theme.ui.Tree.leftChildIndent and\n  // theme.ui.Tree.leftChildIndent), but they doesn't seem to be applicable.\n  padding-left: ${({ level }) => `${(level + 1) * TREE_ICON_SIZE + 8}px`};\n  padding-right: 0.25rem;\n  ${({ containerFocused, selected, disabled, theme }) => {\n    let backgroundColor;\n    let color = disabled\n      ? theme.color(\"*.disabledForeground\")\n      : theme.color(\n          \"Tree.foreground\" as UnknownThemeProp<\"Tree.foreground\">,\n          theme.commonColors.labelForeground\n        );\n    if (selected) {\n      if (containerFocused) {\n        color = theme.asCurrentForeground(\n          theme.color(\n            \"Tree.selectionForeground\" as UnknownThemeProp<\"Tree.selectionForeground\">\n          ) || theme.commonColors.labelSelectedForeground\n        ) /* Prioritizing \"*.selectionForeground\" over labelSelectedForeground*/;\n        backgroundColor = theme.color(\n          \"Tree.selectionBackground\" as UnknownThemeProp<\"Tree.selectionBackground\">\n        );\n      } else {\n        color = theme.color(\n          \"Tree.selectionInactiveForeground\" as UnknownThemeProp<\"Tree.selectionInactiveForeground\">,\n          color\n        );\n        backgroundColor = theme.color(\n          \"Tree.selectionBackgroundInactive\" as UnknownThemeProp<\"Tree.selectionBackgroundInactive\">\n        );\n      }\n    }\n    return {\n      backgroundColor,\n      color,\n    };\n  }}\n`;\n","import { usePress } from \"@react-aria/interactions\";\nimport { Node } from \"@react-types/shared\";\nimport React, { useContext, useRef } from \"react\";\nimport { ItemStateContext } from \"../Collections/ItemStateContext\";\nimport { TreeNodeIcon } from \"./TreeNodeIcon\";\nimport { useTreeNode } from \"./useTreeNode\";\nimport { useTreeNodeToggleButton } from \"./useTreeNodeToggleButton\";\nimport { TreeContext } from \"./TreeContext\";\nimport { StyledTreeNode } from \"@intellij-platform/core/Tree/StyledTreeNode\";\n\ntype TreeNodeProps<T> = {\n  item: Node<T>;\n  showAsFocused?: boolean;\n};\n\nexport function TreeNode<T>({ item }: TreeNodeProps<T>) {\n  const ref = useRef(null);\n  const {\n    state: {\n      collection,\n      selectionManager,\n      expandedKeys,\n      disabledKeys,\n      toggleKey,\n    },\n    focused: containerFocused,\n    onActionRef: { current: onAction },\n  } = useContext(TreeContext)!;\n\n  const isSelected = selectionManager.isSelected(item.key);\n  const expanded = expandedKeys.has(item.key);\n  const isDisabled = disabledKeys.has(item.key);\n\n  const { pressProps: togglePressProps } = usePress({\n    ...useTreeNodeToggleButton({\n      key: item.key,\n      collection,\n      selectionManager,\n      toggleKey,\n    }).treeNodeToggleButtonProps,\n    isDisabled,\n  });\n\n  const { treeNodeProps } = useTreeNode({\n    item,\n    ref,\n    toggleKey,\n    onAction,\n    selectionManager,\n    disabled: isDisabled,\n  });\n\n  /**\n   * NOTE: TreeNode intentionally is not designed in a recursive way for two main reasons:\n   * - Performance\n   * - Better support for virtualization\n   * So instead of rendering TreeNode for childNodes, if the node is expanded, we expect parent\n   * to render children. It's not a layout issue since we don't need any nesting in terms of\n   * layout of nested items. In terms of layout, a tree will be rendered similar to a flat list,\n   * but with more indentation for nested nodes.\n   */\n  return (\n    <>\n      <StyledTreeNode\n        ref={ref}\n        {...treeNodeProps}\n        containerFocused={containerFocused}\n        disabled={isDisabled}\n        selected={isSelected}\n        aria-disabled={isDisabled}\n        aria-selected={isSelected}\n        level={item.level}\n      >\n        {[...item.childNodes].length > 0 && (\n          <TreeNodeIcon\n            selected={isSelected}\n            expanded={expanded}\n            {...togglePressProps}\n          />\n        )}\n        <ItemStateContext.Provider\n          value={{\n            isDisabled,\n            isSelected,\n            isContainerFocused: containerFocused,\n            node: item,\n          }}\n        >\n          {item.rendered}\n        </ItemStateContext.Provider>\n      </StyledTreeNode>\n    </>\n  );\n}\n","import { usePress } from \"@react-aria/interactions\";\nimport { useSelectableItem } from \"@intellij-platform/core/selection\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { SelectionManager } from \"@react-stately/selection\";\nimport { Node } from \"@react-types/shared\";\nimport { Key, RefObject } from \"react\";\n\nexport function useTreeNode<T>({\n  item,\n  ref,\n  selectionManager,\n  disabled,\n  toggleKey,\n  onAction,\n}: {\n  item: Node<T>;\n  ref: RefObject<HTMLElement>;\n  disabled: boolean;\n  toggleKey: (key: Key) => void;\n  onAction?: (key: Key) => void;\n  selectionManager: SelectionManager;\n}) {\n  const {\n    pressProps: { onKeyDown, ...pressProps },\n  } = usePress({\n    ...useSelectableItem({\n      key: item.key,\n      ref,\n      selectionManager,\n      isVirtualized: false,\n    }).itemProps,\n    isDisabled: disabled,\n    preventFocusOnPress: false,\n  });\n\n  const onDoubleClick = () => {\n    if ([...item.childNodes].length > 0) {\n      toggleKey(item.key);\n    } else {\n      onAction?.(item.key);\n    }\n  };\n  const ariaProps = {\n    role: \"treeitem\",\n  };\n\n  return {\n    treeNodeProps: mergeProps(pressProps, { onDoubleClick }, ariaProps),\n  };\n}\n","import { Key, RefObject, useEffect, useMemo, useRef, useState } from \"react\";\nimport {\n  DOMProps,\n  KeyboardDelegate,\n  KeyboardEvent,\n  Node,\n} from \"@react-types/shared\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { useFocusWithin, useKeyboard } from \"@react-aria/interactions\";\nimport { filterDOMProps, mergeProps } from \"@react-aria/utils\";\nimport { useCollator } from \"@react-aria/i18n\";\nimport { useSelectableCollection } from \"@intellij-platform/core/selection\";\nimport { TreeKeyboardDelegate } from \"./TreeKeyboardDelegate\";\nimport { useCollectionAutoScroll } from \"../Collections/useCollectionAutoScroll\";\nimport { useLatest } from \"@intellij-platform/core/utils/useLatest\";\nimport { TreeContextType } from \"./TreeContext\";\nimport { hasAnyModifier } from \"@intellij-platform/core/utils/keyboard-utils\";\nimport { FocusEvents } from \"@react-types/shared/src/events\";\nimport { FocusStrategy } from \"@react-types/shared/src/selection\";\nimport { groupBy } from \"ramda\";\n\nexport interface SelectableTreeProps<T>\n  extends DOMProps,\n    Omit<FocusEvents, \"onFocusChange\"> {\n  isVirtualized?: boolean;\n  keyboardDelegate?: KeyboardDelegate;\n  /**\n   * Called when the action associated with a leaf tree node should be taken.\n   * The exact UI interaction is abstracted away, but it's either Enter key or double click.\n   */\n  onAction?: (key: Key) => void;\n  onNodeKeyDown?: (event: KeyboardEvent, node: Node<T>) => void;\n\n  allowEmptySelection?: boolean;\n\n  autoFocus?: boolean | FocusStrategy;\n\n  showAsFocused?: boolean;\n}\n\n/**\n * NOTE: at the time of writing this hook, react-aria didn't have support for Tree. When useTree is implemented in\n * react-aria, it makes sense to refactor this and use that. There will still be something on top of it here.\n */\nexport function useSelectableTree<T>(\n  {\n    onAction,\n    onFocus,\n    onBlur,\n    autoFocus,\n    showAsFocused,\n    ...props\n  }: SelectableTreeProps<T>,\n  state: TreeState<T>,\n  ref: RefObject<HTMLElement>\n) {\n  const domProps = filterDOMProps(props);\n  const collator = useCollator({ usage: \"search\", sensitivity: \"base\" });\n\n  const [focused, setFocused] = useState(false);\n  const {\n    collectionProps: {\n      // preventDefault in onMouseDown prevents collection from getting focused.\n      // Maybe it should be removed from useSelectableCollection, now that it lives here\n      onMouseDown,\n      onKeyDown: selectionKeyDown,\n      ...collectionProps\n    },\n  } = useSelectableCollection({\n    ref,\n    selectionManager: state.selectionManager,\n    disallowEmptySelection: !props.allowEmptySelection,\n    selectOnFocus: true,\n    autoFocus,\n    keyboardDelegate: useMemo(\n      () =>\n        props.keyboardDelegate ||\n        new TreeKeyboardDelegate(\n          state.collection,\n          state.disabledKeys,\n          ref,\n          collator\n        ),\n      [state.collection, state.disabledKeys, props.keyboardDelegate]\n    ),\n  });\n  const { focusWithinProps } = useFocusWithin({\n    onFocusWithinChange: setFocused,\n  });\n\n  useCollectionAutoScroll(\n    {\n      isVirtualized: props.isVirtualized,\n      selectionManager: state.selectionManager,\n    },\n    ref\n  );\n\n  const onKeyDown = (event: KeyboardEvent) => {\n    const focusedKey = state.selectionManager.focusedKey;\n    const focusedItem = focusedKey\n      ? state.collection.getItem(focusedKey)\n      : null;\n    if (focusedItem) {\n      const isExpandable = Boolean(focusedItem?.hasChildNodes);\n      const expanded = state.expandedKeys.has(focusedKey);\n      const isDisabled = state.disabledKeys.has(focusedKey);\n      if (isDisabled) {\n        event.continuePropagation();\n        return;\n      }\n      props?.onNodeKeyDown?.(event, focusedItem);\n      const shouldToggle =\n        !hasAnyModifier(event) &&\n        (event.key === \"Enter\" ||\n          (event.key === \"ArrowLeft\" && expanded) ||\n          (event.key === \"ArrowRight\" && !expanded));\n      if (isExpandable && shouldToggle) {\n        event.preventDefault();\n        state.toggleKey(focusedKey);\n        return;\n      } else if (event.key === \"Enter\") {\n        onAction?.(focusedKey);\n        return;\n      }\n    }\n    // selectionKeyDown currently doesn't report back if it handled the event or not. We could have conditionally\n    // continued propagation if the event was not handled. Then we could change Speed Search impl to only handle\n    // inputs when the propagation is not prevented.\n    // Also, selectionKeyDown is not accurate in handling actions like \"select all\". e.g. it takes 'cmd+shift+a' too,\n    // as select all which can conflict with action system. So we don't call it if there are multiple modifiers.\n    const hasAtMostOneModifier =\n      [event.metaKey, event.ctrlKey, event.shiftKey, event.altKey].filter(\n        (i) => i\n      ).length < 2;\n    if (hasAtMostOneModifier) {\n      selectionKeyDown?.(event);\n    }\n    event.continuePropagation();\n  };\n  const { keyboardProps } = useKeyboard({\n    onKeyDown,\n  });\n\n  //////////////////////////////// providing context value ////////////////////////////////\n  const onActionRef = useLatest(onAction);\n\n  const {\n    selectionManager,\n    collection,\n    expandedKeys,\n    disabledKeys,\n    toggleKey,\n  } = state;\n  const treeContext = useMemo<TreeContextType<T>>(\n    () => ({\n      state: {\n        collection,\n        selectionManager,\n        expandedKeys,\n        disabledKeys,\n        toggleKey,\n      },\n      focused: Boolean(focused || showAsFocused),\n      onActionRef,\n    }),\n    [\n      selectionManager,\n      collection,\n      expandedKeys,\n      disabledKeys,\n      toggleKey,\n      focused,\n      showAsFocused,\n      onActionRef,\n    ]\n  );\n  ////////////////////////////////////////////////////////////////////////////////////////\n  useSelectParentOfRemovedSelectedNode(state);\n\n  return {\n    // order of merging here is important. navigation handling should precede selection handling\n    treeProps: mergeProps(\n      focusWithinProps,\n      collectionProps,\n      keyboardProps,\n      domProps,\n      { onFocus, onBlur, role: \"tree\" }\n    ),\n    treeContext,\n    focused,\n  };\n}\n\n/**\n * When a selected node is removed from the tree, selects the parent of the removed node\n * if no other node is selected.\n *\n * Note: this behavior is observed in a couple of tree views, including project files tree.\n * There could be an option for disabling/enabling it, if use cases comes up in future\n * where this behavior causes issues.\n */\nconst useSelectParentOfRemovedSelectedNode = (state: TreeState<unknown>) => {\n  const previousCollectionRef = useRef(state.collection);\n  useEffect(() => {\n    if (state.selectionManager.rawSelection !== \"all\") {\n      const keys = [...state.collection.getKeys()];\n\n      const { invalid = [], valid = [] } = groupBy(\n        (selectedKey) => (keys.includes(selectedKey) ? \"valid\" : \"invalid\"),\n        [...state.selectionManager.selectedKeys]\n      );\n      if (valid.length === 0 && invalid.length > 0) {\n        for (let invalidKey of invalid) {\n          let key: Key | undefined = invalidKey;\n          while (key != undefined) {\n            if (keys.includes(key)) {\n              state.selectionManager.setSelectedKeys(valid.concat(key));\n              state.selectionManager.setFocusedKey(key);\n              return;\n            }\n            key =\n              previousCollectionRef.current.getItem(key)?.parentKey ??\n              undefined;\n          }\n        }\n      }\n    }\n    previousCollectionRef.current = state.collection;\n  }, [state.collection]);\n};\n","import { usePrevious } from \"@intellij-platform/core/utils/usePrevious\";\nimport { CacheInvalidationContext } from \"./Item\";\n\nexport interface CollectionCacheInvalidationProps {\n  /**\n   * Defines cache invalidation policy for items. By default, the render result is cached based on the item objects.\n   * This is equivalent of passing false or not passing anything for `cacheInvalidation`. If `true` is passed, it will\n   * always invalidate the render result, causing the collection to be recreated on each re-render. It can\n   * considerably affect performance in large collections. in addition to boolean value, an object with the list of\n   * invalidators can also be passed. renderer function is called each time any of the invalidators are changed.\n   * Think of it as [dependency array in react hooks](https://reactjs.org/docs/hooks-reference.html#usememo). Except\n   * that the length of the array can also safely change.\n   */\n  cacheInvalidation?: boolean | { invalidators: ReadonlyArray<unknown> };\n}\n\n/**\n * Allows cache invalidation options based on input props, for components that use collection\n */\nexport const useCollectionCacheInvalidation = ({\n  cacheInvalidation,\n}: CollectionCacheInvalidationProps): CacheInvalidationContext => {\n  const invalidators =\n    typeof cacheInvalidation === \"object\" ? cacheInvalidation.invalidators : [];\n  const lastInvalidators = usePrevious(invalidators);\n\n  const invalidated =\n    typeof cacheInvalidation === \"object\"\n      ? cacheInvalidation.invalidators.length !== lastInvalidators.length ||\n        cacheInvalidation.invalidators.some(\n          (anInvalidator, index) => anInvalidator !== lastInvalidators[index]\n        )\n      : cacheInvalidation;\n\n  return {\n    invalidated,\n  };\n};\n","//@ts-nocheck\n/**\n * Not exported from @react-stately/tree, but needed in the custom implementation of useTreeState\n */\n\nimport { Key } from \"react\";\nimport { Collection, Node } from \"@react-types/shared\";\n\nexport class TreeCollection<T> implements Collection<Node<T>> {\n  private keyMap: Map<Key, Node<T>> = new Map();\n  private iterable: Iterable<Node<T>>;\n  private firstKey: Key;\n  private lastKey: Key;\n\n  constructor(\n    nodes: Iterable<Node<T>>,\n    { expandedKeys }: { expandedKeys?: Set<Key> } = {}\n  ) {\n    this.iterable = nodes;\n    expandedKeys = expandedKeys || new Set();\n\n    let visit = (node: Node<T>) => {\n      this.keyMap.set(node.key, node);\n\n      if (\n        node.childNodes &&\n        (node.type === \"section\" || expandedKeys.has(node.key))\n      ) {\n        for (let child of node.childNodes) {\n          visit(child);\n        }\n      }\n    };\n\n    for (let node of nodes) {\n      visit(node);\n    }\n\n    let last: Node<T>;\n    let index = 0;\n    for (let [key, node] of this.keyMap) {\n      if (last) {\n        last.nextKey = key;\n        node.prevKey = last.key;\n      } else {\n        this.firstKey = key;\n        node.prevKey = undefined;\n      }\n\n      if (node.type === \"item\") {\n        node.index = index++;\n      }\n\n      last = node;\n\n      // Set nextKey as undefined since this might be the last node\n      // If it isn't the last node, last.nextKey will properly set at start of new loop\n      last.nextKey = undefined;\n    }\n\n    this.lastKey = last?.key;\n  }\n\n  *[Symbol.iterator]() {\n    yield* this.iterable;\n  }\n\n  get size() {\n    return this.keyMap.size;\n  }\n\n  getKeys() {\n    return this.keyMap.keys();\n  }\n\n  getKeyBefore(key: Key) {\n    let node = this.keyMap.get(key);\n    return node?.prevKey ?? null;\n  }\n\n  getKeyAfter(key: Key) {\n    let node = this.keyMap.get(key);\n    return node?.nextKey ?? null;\n  }\n\n  getFirstKey() {\n    return this.firstKey;\n  }\n\n  getLastKey() {\n    return this.lastKey;\n  }\n\n  getItem(key: Key) {\n    return this.keyMap.get(key) ?? null;\n  }\n\n  at(idx: number) {\n    const keys = [...this.getKeys()];\n    return this.getItem(keys[idx]);\n  }\n}\n","import { Node } from \"@react-types/shared\";\nimport { Key } from \"react\";\n\n/**\n * given a node, returns keys of all consecutive single children\n */\nexport function getSingleChildrenKeys<T>(\n  node: Node<T> | null | undefined\n): Key[] {\n  return getSingleChildrenKeysRecursive(node, []);\n}\n\nfunction getSingleChildrenKeysRecursive<T>(\n  node: Node<T> | null | undefined,\n  previousKeys: Key[]\n): Key[] {\n  if (!node) {\n    return [];\n  }\n  const childNodesIterator: Iterator<\n    Node<T>,\n    Node<T> | undefined\n  > = node.childNodes[Symbol.iterator]();\n  const { value: firstChild, done } = childNodesIterator.next();\n  const noMoreChildren = done || childNodesIterator.next().value == null;\n  if (firstChild != null && noMoreChildren && isExpandable(firstChild)) {\n    return getSingleChildrenKeysRecursive(\n      firstChild,\n      previousKeys.concat((firstChild as Node<T>).key)\n    );\n  }\n  return previousKeys;\n}\n\nconst isExpandable = <T>(node: Node<T>) =>\n  node.hasChildNodes || !isEmptyIterable(node.childNodes);\n\nfunction isEmptyIterable(iterable: Iterable<unknown> | undefined | null) {\n  for (const _ of iterable || []) {\n    // eslint-disable-line no-unused-vars, no-unreachable-loop\n    return false;\n  }\n  return true;\n}\n","import {\n  MultipleSelectionState,\n  SelectionManager,\n  SelectionManagerOptions,\n} from \"@react-stately/selection\";\nimport { Collection, Node } from \"@react-types/shared\";\nimport React, { Key } from \"react\";\n\nexport class TreeSelectionManager extends SelectionManager {\n  private readonly collection: Collection<Node<unknown>>;\n\n  constructor(\n    collection: Collection<Node<unknown>>,\n    state: MultipleSelectionState,\n    options?: SelectionManagerOptions\n  ) {\n    super(collection, state, options);\n    this.collection = collection;\n  }\n\n  expandSelection() {\n    if (this.focusedKey) {\n      const node = this.collection.getItem(this.focusedKey);\n      if (node) {\n        const { expandKeys } = this.getExpandAndShrinkKeys(node);\n        if (expandKeys.length > 0) {\n          this.setSelectedKeys([...this.selectedKeys, ...expandKeys]);\n        }\n      }\n    }\n  }\n  shrinkSelection() {\n    if (this.focusedKey) {\n      const node = this.collection.getItem(this.focusedKey);\n      if (node) {\n        const { shrinkKeys } = this.getExpandAndShrinkKeys(node);\n        if (shrinkKeys.length > 0) {\n          this.setSelectedKeys(\n            [...this.selectedKeys].filter((key) => !shrinkKeys.includes(key))\n          );\n        }\n      }\n    }\n  }\n\n  private getExpandAndShrinkKeys(node: Node<unknown>) {\n    return this.recursivelyGetExpandAndShrinkKeys(\n      node,\n      [...this.collection.getKeys()],\n      null\n    );\n  }\n  /**\n   * Starting from a node, traverses the tree up, until it reaches the root of the fully selected subtree that includes\n   * the starting node. The root itself may or may not be selected. Returns:\n   * - keys to be added to selection, when expanding selection\n   * - keys to be removed from selection, when shrinking selection\n   */\n  private recursivelyGetExpandAndShrinkKeys(\n    node: Node<unknown>,\n    keys: Array<Key>,\n    previousChild: Key | null\n  ): { expandKeys: Key[]; shrinkKeys: Key[] } {\n    const parent =\n      node && node.parentKey ? this.collection.getItem(node.parentKey) : null;\n    const newKeys = keys.filter((key) => key !== previousChild);\n    const parentDescendants = parent\n      ? getAllDescendants(parent, newKeys).map(({ key }) => key)\n      : this.getAllRoots().flatMap((key) => {\n          const item = this.collection.getItem(key);\n          return key !== node.key && item\n            ? getAllDescendants(item, newKeys)\n                .map(({ key }) => key)\n                .concat(key)\n            : [];\n        });\n    if (parent && parentDescendants.every((key) => this.isSelected(key))) {\n      return this.recursivelyGetExpandAndShrinkKeys(parent, keys, node.key);\n    }\n    const descendants = getAllDescendants(\n      node,\n      keys.filter((key) => key !== previousChild)\n    ).map(({ key }) => key);\n\n    return {\n      expandKeys: descendants.some((key) => !this.isSelected(key))\n        ? descendants\n        : !this.isSelected(node.key)\n        ? [node.key]\n        : parentDescendants,\n      shrinkKeys:\n        parentDescendants.length > 0 &&\n        parentDescendants.every((key) => this.isSelected(key))\n          ? parentDescendants\n          : this.isSelected(node.key) && previousChild\n          ? [node.key]\n          : descendants.filter((key) => this.isSelected(key)),\n    };\n  }\n\n  private getAllRoots() {\n    return [...this.collection.getKeys()].filter(\n      (key) => this.collection.getItem(key)?.parentKey == null\n    );\n  }\n}\n\nfunction getAllDescendants<T>(\n  node: Node<T>,\n  stopKeys: Array<React.Key>\n): Node<T>[] {\n  const childNodes = (node.hasChildNodes ? [...node.childNodes] : []).filter(\n    (node) => stopKeys.includes(node.key)\n  );\n  return node.hasChildNodes\n    ? childNodes.concat(\n        childNodes.map((node) => getAllDescendants(node, stopKeys)).flat()\n      )\n    : [];\n}\n","import {\n  Collection,\n  CollectionStateBase,\n  Expandable,\n  MultipleSelection,\n  Node,\n} from \"@react-types/shared\";\nimport { TreeProps as _TreeProps, TreeState } from \"@react-stately/tree\";\nimport {\n  TreeRefValue,\n  useTreeRef,\n} from \"@intellij-platform/core/Tree/useTreeRef\";\nimport { ForwardedRef, Key, useCallback, useEffect, useMemo } from \"react\";\nimport { useMultipleSelectionState } from \"@react-stately/selection\";\nimport { useCollection } from \"@react-stately/collections\";\nimport { useControlledState } from \"@react-stately/utils\";\nimport {\n  CollectionCacheInvalidationProps,\n  useCollectionCacheInvalidation,\n} from \"@intellij-platform/core/Collections/useCollectionCacheInvalidation\";\nimport { TreeCollection as _TreeCollection } from \"./__copied__TreeCollection\";\nimport { getSingleChildrenKeys } from \"./getSingleChildrenKeys\";\nimport { TreeSelectionManager } from \"@intellij-platform/core/Tree/TreeSelectionManager\";\nimport { notNull } from \"@intellij-platform/core/utils/array-utils\";\n\nexport class TreeCollection<T> extends _TreeCollection<T> {\n  public readonly rootKeys: Key[];\n  constructor(\n    nodes: Iterable<Node<T>>,\n    { expandedKeys }: { expandedKeys: Set<Key> }\n  ) {\n    super(nodes, { expandedKeys });\n    this.rootKeys = Array.from(nodes).map(({ key }) => key);\n  }\n\n  getAllExpandableKeys(): Set<Key> {\n    const rootNodes = this.rootKeys\n      .map((key) => this.getItem(key))\n      .filter(notNull);\n    return this.recursivelyAddExpandableKeys(rootNodes, new Set<Key>());\n  }\n\n  private recursivelyAddExpandableKeys(\n    nodes: Iterable<Node<T>>,\n    result: Set<Key>\n  ) {\n    for (const node of nodes) {\n      if (node?.hasChildNodes) {\n        result.add(node.key);\n        this.recursivelyAddExpandableKeys(node.childNodes, result);\n      }\n    }\n    return result;\n  }\n}\nexport interface TreeProps<T>\n  extends CollectionStateBase<T, TreeCollection<T>>,\n    Expandable,\n    MultipleSelection,\n    CollectionCacheInvalidationProps {\n  childExpansionBehaviour?: \"multi\" | \"single\";\n}\n/**\n * Provides state management for tree-like components. Handles building a collection\n * of items from props, item expanded state, and manages multiple selection state.\n *\n * Similar to (and initially copied from) useTreeState from @react-stately/tree, but with the following changes:\n * - Supports exposing some imperative API via ref.\n *   Could be done via a wrapper too.\n * - Different onToggle implementation with two adjustments to match Intellij Platform:\n *   - Collapsing a key collapses all descendants as well.\n *   - Expanding a single-child node will recursively expand all single-child descendants.\n *   Couldn't be done with a wrapper in a clean and optimal way. Access to setExpandedKey is not provided. We would need\n *   to either maintain a new state for expanded keys and ignore the one returned from the wrapped hook, or\n *   inefficiently call the returned `toggleKey` function many times.\n * - Supports collection invalidation via CollectionCacheInvalidationProps\n *   Perhaps not the most important addition, but not possible to be done via a wrapper.\n * - Uses TreeSelectionManager instead of the default SelectionManager, which implements expand/shrink selection.\n *   Could be done in a wrapper, with a little hack. Would need to replace selection manager.\n * - returned `collection` is of type `TreeCollection` (which is an improved version of react-stately `TreeCollection`),\n *   instead of the more generic `Collection`.\n */\nexport function useTreeState<T extends object>(\n  { childExpansionBehaviour = \"multi\", ...props }: TreeProps<T>,\n  treeRef?: ForwardedRef<TreeRefValue>\n): TreeState<T> {\n  let [expandedKeys, setExpandedKeys] = useControlledState(\n    props.expandedKeys ? new Set(props.expandedKeys) : undefined!,\n    props.defaultExpandedKeys ? new Set(props.defaultExpandedKeys) : new Set(),\n    props.onExpandedChange!\n  );\n\n  let selectionState = useMultipleSelectionState({\n    ...props,\n    selectionBehavior: \"replace\",\n  });\n  let disabledKeys = useMemo(\n    () => (props.disabledKeys ? new Set(props.disabledKeys) : new Set<Key>()),\n    [props.disabledKeys]\n  );\n\n  const context = useCollectionCacheInvalidation(props);\n\n  let tree = useCollection<T, TreeCollection<T>>(\n    props,\n    useCallback(\n      (nodes) => new TreeCollection(nodes, { expandedKeys }),\n      [expandedKeys]\n    ),\n    context\n  );\n\n  const selectionManager = new TreeSelectionManager(\n    tree as Collection<Node<T>>,\n    selectionState\n  );\n\n  useTreeRef({ selectionManager, setExpandedKeys, tree }, treeRef);\n\n  // Reset focused key if that item is deleted from the collection.\n  useEffect(() => {\n    if (\n      selectionState.focusedKey != null &&\n      !tree.getItem(selectionState.focusedKey)\n    ) {\n      // @ts-expect-error imprecise typing in @react-stately/selection\n      selectionState.setFocusedKey(null);\n    }\n  }, [tree, selectionState.focusedKey]);\n\n  const toggleKey = (key: Key) => {\n    let newExpandedKeys = toggleTreeNode(\n      tree as Collection<Node<T>>,\n      expandedKeys,\n      key\n    );\n    if (childExpansionBehaviour === \"single\") {\n      const expandedSiblings = getSiblings(tree, key).filter(\n        (aKey) => aKey !== key && expandedKeys.has(aKey)\n      );\n      newExpandedKeys = expandedSiblings.reduce((expandedKeys, expandedKey) => {\n        return toggleTreeNode(\n          tree as Collection<Node<T>>,\n          expandedKeys,\n          expandedKey\n        );\n      }, newExpandedKeys);\n    }\n    setExpandedKeys(newExpandedKeys);\n  };\n\n  return {\n    collection: tree as Collection<Node<T>>,\n    expandedKeys,\n    disabledKeys,\n    toggleKey,\n    selectionManager,\n    setExpandedKeys,\n  };\n}\n\nfunction getChildItems<T>(node: Node<T>): Node<T>[] {\n  const childNodes = [...(node.childNodes || [])];\n  const childItems = childNodes.filter(({ type }) => type === \"item\");\n  const sectionItems = childNodes.filter(({ type }) => type === \"section\");\n\n  return childItems.concat(sectionItems.flatMap(getChildItems));\n}\n\nfunction getRootItemKeys(tree: TreeCollection<unknown>) {\n  return tree.rootKeys\n    .map((key) => tree.getItem(key))\n    .filter(notNull)\n    .flatMap(getChildItems)\n    .map(({ key }) => key);\n}\n/**\n * Returns the siblings of an item in tree, ignoring sections.\n * Disclaimer: The code is done quick and dirty and in a rush. Unpleasant code, good candidate for refactoring :D\n */\nfunction getSiblings(tree: TreeCollection<unknown>, key: Key): Key[] {\n  const parentKey = tree.getItem(key)?.parentKey;\n  if (!parentKey) {\n    return [...tree.rootKeys].concat(getRootItemKeys(tree));\n  }\n  let parent = parentKey ? tree.getItem(parentKey) : null;\n  if (parent?.type === \"item\") {\n    return getChildItems(parent).map(({ key }) => key);\n  }\n  const siblings: Key[] = [];\n  while (parent) {\n    siblings.push(...getChildItems(parent).map(({ key }) => key));\n    if (parent.type === \"section\") {\n      if (parent.parentKey) {\n        parent = tree.getItem(parent.parentKey);\n      } else {\n        siblings.push(...getRootItemKeys(tree));\n        parent = null;\n      }\n    } else {\n      parent = null;\n    }\n  }\n  return Array.from(new Set(siblings));\n}\nfunction toggleTreeNode(\n  tree: Collection<Node<unknown>>,\n  expandedKeys: Set<Key>,\n  key: Key\n): Set<Key> {\n  // toggling a non-expandable node should be no-op\n  if (!expandedKeys.has(key) && !tree.getItem(key)?.hasChildNodes) {\n    return expandedKeys;\n  }\n  const newKeys = toggleKey(expandedKeys, key);\n  // In Intellij impl, when a node is collapsed, all descendants are also collapsed. In other words, keys that are\n  // not a part of the list of visible nodes, will be excluded from the expanded keys, with the toggle action.\n  for (const aKey of newKeys) {\n    if (tree.getItem(aKey) == null) {\n      newKeys.delete(aKey);\n    }\n  }\n\n  // If we are toggling it open, expand all expandable single-child items\n  if (newKeys.has(key)) {\n    for (const aKey of getSingleChildrenKeys(tree.getItem(key))) {\n      newKeys.add(aKey);\n    }\n  }\n  return newKeys;\n}\n\nfunction toggleKey(set: Set<Key>, key: Key): Set<Key> {\n  let res = new Set(set);\n  if (res.has(key)) {\n    res.delete(key);\n  } else {\n    res.add(key);\n  }\n\n  return res;\n}\n","import { ForwardedRef, Key, useImperativeHandle } from \"react\";\nimport { useLatest } from \"@intellij-platform/core/utils/useLatest\";\nimport { TreeSelectionManager } from \"./TreeSelectionManager\";\nimport { TreeCollection } from \"./useTreeState\";\n\nexport interface TreeRefValue {\n  focus(key: Key): void;\n  replaceSelection(key: Key): void;\n\n  /**\n   * Extends selection to all siblings of the currently focused node.\n   */\n  expandSelection(): void;\n  /**\n   * Shrinks selection towards currently focused node.\n   */\n  shrinkSelection(): void;\n\n  expandAll(): void;\n  collapseAll(): void;\n}\n\n/**\n * Sets up a tree ref for imperatively working with tree from outside. For imperatively focusing, expanding to\n * specific key, etc.\n */\nexport function useTreeRef<T extends {}>(\n  props: {\n    tree: TreeCollection<T>;\n    selectionManager: TreeSelectionManager;\n    setExpandedKeys: (keys: Set<Key>) => void;\n  },\n  forwardedRef?: ForwardedRef<TreeRefValue>\n) {\n  const latestState = useLatest(props);\n\n  useImperativeHandle(\n    forwardedRef,\n    () => {\n      return {\n        replaceSelection: (key: Key) => {\n          latestState.current.selectionManager.replaceSelection(key);\n        },\n        focus: (key: Key) => {\n          const selectionManager = latestState.current.selectionManager;\n          selectionManager.setFocused(true);\n          /**\n           * NOTE: we set focus key to null and set it to key again, to make sure scroll into view works even when\n           * the key is currently focused but not in view. It wouldn't be needed if there was an imperative handle\n           * for scrolling an item into view, but it's only implemented in way that is reactive to changes to the\n           * focused key. {@see useCollectionAutoScroll}\n           */\n          selectionManager.setFocusedKey(null);\n          setTimeout(() => {\n            selectionManager.setFocusedKey(key);\n          });\n        },\n        expandSelection() {\n          latestState.current.selectionManager.expandSelection();\n        },\n        shrinkSelection() {\n          latestState.current.selectionManager.shrinkSelection();\n        },\n        expandAll() {\n          latestState.current.setExpandedKeys(\n            latestState.current.tree.getAllExpandableKeys()\n          );\n        },\n        collapseAll() {\n          const { tree, setExpandedKeys, selectionManager } =\n            latestState.current;\n          const focusedKey = selectionManager.focusedKey;\n          setExpandedKeys(new Set());\n\n          // Find the root node that is a grandparent of focused node, and focus/select it.\n          // NOTE: this behaviour of updating selection when nodes are collapsed is something to be fixed in general,\n          // and then this custom logic here would be not necessary.\n          if (focusedKey && !tree.rootKeys.includes(focusedKey)) {\n            let item = tree.getItem(focusedKey);\n            while (item?.parentKey != null) {\n              item = tree.getItem(item.parentKey);\n            }\n            if (item) {\n              selectionManager.setFocusedKey(item.key);\n              if (selectionManager.isSelected(focusedKey)) {\n                selectionManager.select(item.key);\n              }\n            }\n          }\n        },\n      };\n    },\n    []\n  );\n}\n","import { HTMLAttributes, useMemo } from \"react\";\nimport { LayoutNode } from \"@react-stately/layout\";\nimport { Node } from \"@react-types/shared\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { VirtualizerProps } from \"@react-aria/virtualizer\";\nimport { LayoutInfo, Rect, Size } from \"@react-stately/virtualizer\";\nimport { VariableWidthListLayout } from \"@intellij-platform/core/VariableWidthListLayout\";\nimport { notNull } from \"@intellij-platform/core/utils/array-utils\";\n\nclass FlattenedTreeLayout<T> extends VariableWidthListLayout<T> {\n  buildChild(node: Node<T>, x: number, y: number): LayoutNode {\n    const layoutNode = super.buildChild(node, x, y);\n    if (\n      node.parentKey &&\n      this.collection.getItem(node.parentKey)?.type === \"item\"\n    ) {\n      layoutNode.layoutInfo.parentKey = null;\n    }\n    return layoutNode;\n  }\n\n  doBuildCollection(): LayoutNode[] {\n    let y = this.padding;\n    let nodes = [];\n    /**\n     * The only difference here is that in tree, we need to use getKeys() to get the keys for a flattened list of items\n     * that are currently visible. With this difference only, things seem to work as expected, but sections are not\n     * tested, and not even sure if they would be applicable for Tree view.\n     * Diff compared to ListView#BuildCollection:\n     * -        for (let node of this.collection) {\n     * +        const visibleNodes = [...this.collection.getKeys()].map(key => this.collection.getItem(key));\n     * +        for (let node of visibleNodes) {\n     * This needs to be maintained with version upgrades, until TreeLayout is supported:\n     * https://github.com/adobe/react-spectrum/issues/2396\n     */\n    const visibleNodes = [...this.collection.getKeys()]\n      .map((key) => this.collection.getItem(key))\n      .filter(notNull);\n    for (let node of visibleNodes) {\n      let layoutNode = this.buildChild(node, 0, y);\n      y = layoutNode.layoutInfo.rect.maxY;\n      nodes.push(layoutNode);\n    }\n\n    if (this.isLoading) {\n      let rect = new Rect(\n        0,\n        y,\n        this.virtualizer.visibleRect.width,\n        this.loaderHeight ?? this.virtualizer.visibleRect.height\n      );\n      let loader = new LayoutInfo(\"loader\", \"loader\", rect);\n      this.layoutInfos.set(\"loader\", loader);\n      nodes.push({ layoutInfo: loader });\n      y = loader.rect.maxY;\n    }\n\n    if (nodes.length === 0) {\n      let rect = new Rect(\n        0,\n        y,\n        this.virtualizer.visibleRect.width,\n        this.placeholderHeight ?? this.virtualizer.visibleRect.height\n      );\n      let placeholder = new LayoutInfo(\"placeholder\", \"placeholder\", rect);\n      this.layoutInfos.set(\"placeholder\", placeholder);\n      nodes.push({ layoutInfo: placeholder });\n      y = placeholder.rect.maxY;\n    }\n\n    this.contentSize = new Size(\n      this.virtualizer.visibleRect.width,\n      y + this.padding\n    );\n    return nodes;\n  }\n\n  getVisibleLayoutInfos(rect: Rect): LayoutInfo[] {\n    return super\n      .getVisibleLayoutInfos(rect)\n      .filter((layoutInfo) => this.collection.getItem(layoutInfo.key) != null);\n  }\n}\n\nexport const useTreeVirtualizer = <T extends object>({\n  state,\n}: {\n  state: TreeState<T>;\n}): {\n  virtualizerProps: Omit<\n    VirtualizerProps<any, unknown>,\n    \"children\" | keyof HTMLAttributes<HTMLElement>\n  >;\n} => {\n  const layout = useMemo(\n    () =>\n      new FlattenedTreeLayout({\n        /**\n         * there is currently no documentation available for these fields, but setting `rowHeight` enforces it, which\n         * wouldn't be good for custom tree UI with a different row height.\n         * wrong estimatedRowHeight seems to only affect small scrollbar position inaccuracy, which is a minor issue\n         * and not even noticeable in most cases. Also, it seems it slightly improves the performance if it exactly\n         * matches the real row height. But not even sure.\n         */\n        estimatedRowHeight: 20,\n      }),\n    []\n  );\n  layout.collection = state.collection;\n  layout.disabledKeys = state.disabledKeys;\n\n  return {\n    virtualizerProps: {\n      focusedKey: state.selectionManager.focusedKey,\n      collection: state.collection,\n      layout,\n      // Not clear how this sizeToFit is supposed to work, due to lack of documentation, but don't be tempted to\n      // think it solves the problem VariableWidthListLayout is trying to solve, because it doesn't :D\n      // Also, note that setting this to \"width\" prevents re-layout when container width is increased, which\n      // causes issues.\n      sizeToFit: \"height\",\n      scrollToItem: (key) => {\n        return layout.virtualizer.scrollToItem(key, {\n          shouldScrollX: false,\n          duration: 0,\n        });\n      },\n      scrollDirection: \"both\",\n    },\n  };\n};\n","import React, { RefObject } from \"react\";\nimport {\n  ActionDefinition,\n  CommonActionId,\n} from \"@intellij-platform/core/ActionSystem\";\nimport { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport { TreeRefValue } from \"@intellij-platform/core/Tree\";\n\n/**\n * Returns action definitions object for common tree actions\n * TODO: add example in docs\n */\nexport function useTreeActions({\n  treeRef,\n}: {\n  treeRef: RefObject<TreeRefValue>;\n}): Array<ActionDefinition> {\n  return [\n    {\n      id: CommonActionId.EXPAND_ALL,\n      title: \"Expand All\",\n      icon: <PlatformIcon icon=\"actions/expandall\" />,\n      actionPerformed: () => {\n        treeRef.current?.expandAll();\n      },\n    },\n    {\n      id: CommonActionId.COLLAPSE_ALL,\n      title: \"Collapse All\",\n      icon: <PlatformIcon icon=\"actions/collapseall\" />,\n      actionPerformed: () => {\n        treeRef.current?.collapseAll();\n      },\n    },\n    {\n      id: CommonActionId.EXPAND_SELECTION,\n      title: \"Expand Selection\",\n      actionPerformed: () => {\n        treeRef.current?.expandSelection();\n      },\n    },\n    {\n      id: CommonActionId.SHRINK_SELECTION,\n      title: \"Shrink Selection\",\n      // TODO: disable if selection is only one item. Would need more data from treeRef. Maybe after treeRef is refactored\n      //  to implement/extend CollectionRef\n      actionPerformed: () => {\n        treeRef.current?.shrinkSelection();\n      },\n    },\n  ];\n}\n","import { Key } from \"react\";\n\ninterface SetState<T> {\n  items: Iterable<T>;\n\n  toggle(key: T): void;\n\n  add(...key: T[]): void;\n\n  delete(...key: T[]): void;\n}\n\nexport type SelectionState = \"NotSelected\" | \"Selected\" | \"PartiallySelected\";\n\nexport interface TreeModel<T, K = Key> {\n  rootNodes: ReadonlyArray<T>;\n  getChildren: (root: T) => ReadonlyArray<T> | /*for convenience*/ T | null;\n  getKey: (item: T) => K;\n}\n\nexport interface NestedSelectionState<T> {\n  getSelectionState: (item: T) => SelectionState;\n  toggle: (item: T) => void;\n}\n\nconst collectSelectableItems = <T>(\n  item: T,\n  getChildren: (item: T) => null | ReadonlyArray<T>\n) => {\n  const collectedItems: T[] = [];\n  collectSelectableItemsRecursive(item, getChildren, collectedItems);\n  return collectedItems;\n};\nconst collectSelectableItemsRecursive = <T>(\n  item: T,\n  getChildren: (item: T) => null | ReadonlyArray<T>,\n  collectedItems: T[] = []\n) => {\n  const children = getChildren(item);\n  if (children == null) {\n    collectedItems.push(item);\n  } else {\n    children.forEach((child) =>\n      collectSelectableItemsRecursive(child, getChildren, collectedItems)\n    );\n  }\n};\n\n// TODO: maybe change the interface to work with keys instead of items?\nexport class NestedSelection<T extends object, K = Key>\n  implements NestedSelectionState<T>\n{\n  cache = new WeakMap<T, SelectionState>();\n  constructor(private state: SetState<K>, private tree: TreeModel<T, K>) {\n    this.tree = tree;\n    this.state = state;\n  }\n\n  toggle(item: T) {\n    const children = this.tree.getChildren(item);\n    const key = this.tree.getKey(item);\n    const isSelectableNode = children == null;\n    if (isSelectableNode) {\n      this.state.toggle(key);\n    } else {\n      const state = this.getSelectionState(item);\n      const itemsInSubtree = collectSelectableItems(item, (item) =>\n        normalizeChildren(this.tree.getChildren(item))\n      ).map(this.tree.getKey);\n      if (state === \"Selected\") {\n        this.state.delete(...itemsInSubtree);\n      } else {\n        this.state.add(...itemsInSubtree);\n      }\n    }\n  }\n\n  getSelectionState(item: T): SelectionState {\n    // caching can be refactored into a nice little decorator like WeakMapCached which would be applicable on a method\n    // with a single object argument.\n    const cachedState = this.cache.get(item);\n    if (cachedState) {\n      return cachedState;\n    }\n    const children = normalizeChildren(this.tree.getChildren(item));\n    const key = this.tree.getKey(item);\n    const isSelectableNode = children == null;\n    let state: SelectionState;\n    if (isSelectableNode) {\n      state = [...this.state.items].includes(key) ? \"Selected\" : \"NotSelected\";\n    } else {\n      const allDescendantsStates = children.map((child) =>\n        this.getSelectionState(child)\n      );\n      if (allDescendantsStates.every((state) => state === \"NotSelected\")) {\n        state = \"NotSelected\";\n      } else {\n        state = allDescendantsStates.every((state) => state === \"Selected\")\n          ? \"Selected\"\n          : \"PartiallySelected\";\n      }\n    }\n    this.cache.set(item, state);\n    return state;\n  }\n}\n\nfunction normalizeChildren<T>(children: T | ReadonlyArray<T> | null) {\n  if (children) {\n    return ([] as ReadonlyArray<T>).concat(children);\n  }\n  return null;\n}\n","import React, { ForwardedRef } from \"react\";\nimport {\n  SpeedSearchTree,\n  SpeedSearchTreeProps,\n  TreeRefValue,\n} from \"@intellij-platform/core/Tree\";\nimport { NestedSelectionState } from \"./NestedSelection\";\n\n/**\n * Experimental wrapper component around SpeedSearchTree, which allows rendering {@link TreeNodeCheckbox} in nodes.\n *\n * See [design-decisions.md](../Tree/design-decisions.md) for more thoughts about how should different features\n * like this be supported.\n *\n * @alpha\n */\nexport const SpeedSearchTreeWithCheckboxes = React.forwardRef(\n  <T extends object>(\n    {\n      nestedSelection,\n      cacheInvalidation,\n      onNodeKeyDown,\n      ...props\n    }: SpeedSearchTreeProps<T> & {\n      nestedSelection: NestedSelectionState<T>;\n    },\n    ref: ForwardedRef<HTMLDivElement>\n  ): React.ReactElement => {\n    const otherInvalidators =\n      typeof cacheInvalidation === \"object\"\n        ? cacheInvalidation.invalidators\n        : [];\n    return (\n      <SpeedSearchTree\n        ref={ref}\n        {...props}\n        // instead of passing cacheInvalidation, a better approach could be to provide nestedSelection as context.\n        cacheInvalidation={{\n          invalidators: [nestedSelection, ...otherInvalidators],\n        }}\n        onNodeKeyDown={(event, item) => {\n          if (event.key === \" \" && item.value) {\n            nestedSelection.toggle(item.value);\n          }\n          onNodeKeyDown?.(event, item);\n        }}\n      />\n    );\n  }\n);\n","import React, { useContext } from \"react\";\nimport { Checkbox } from \"@intellij-platform/core/Checkbox\";\nimport { TreeContext } from \"@intellij-platform/core/Tree/TreeContext\";\nimport { SelectionState } from \"@intellij-platform/core/TreeCheckboxes/NestedSelection\";\nimport { ItemStateContext } from \"@intellij-platform/core/Collections\";\nimport styled from \"styled-components\";\n\nexport type TreeNodeCheckboxProps<T extends unknown> = {\n  selectionState?: SelectionState;\n  selectItemOnPress?: boolean;\n  onToggle: () => void;\n  // maybe a isDisabled prop to be merged with isDisabled from the item?\n};\n\nconst StyledCheckboxWrapper = styled.span`\n  margin-right: 0.125rem;\n  display: inline-flex;\n`;\n\n/**\n * Checkbox to be used with {@link SpeedSearchTreeWithCheckboxes}. `SpeedSearchTreeWithCheckboxes` doesn't add the\n * checkboxes by default to the nodes, which makes it more flexible in terms of which nodes should have checkbox, or\n * it's exact placement within the tree rows.\n *\n * TreeNodeCheckbox renders a Checkbox with a few extras:\n * - `aria-label` set based on the encompassing item's textValue\n * - `isSelected` and `isIndeterminate` set based on `selectionState`\n * - `isDisabled` is set based in disabled state of the item.\n * - The encompassing item will be selected upon press, if `selectItemOnPress` is `true` (default is `true`).\n * - Small styling adjustment achieved by a wrapper StyledListIconWrapper.\n *\n * @see SpeedSearchTreeWithCheckboxes\n * @see useNestedSelectionState\n *\n * NOTE: this component currently uses TreeContext, to get a hold of selectionManager. If a more abstract component\n * like CollectionCheckbox is needed in the future, we can refactor TreeContext also to something more abstract like\n * CollectionContext which is provided by all such components like List, Tree or Table.\n */\nexport const TreeNodeCheckbox = <T extends unknown>({\n  selectionState,\n  onToggle,\n  selectItemOnPress = true,\n}: TreeNodeCheckboxProps<T>) => {\n  const treeContext = useContext(TreeContext);\n  const itemContext = useContext(ItemStateContext);\n  if (!itemContext) {\n    throw new Error(\"TreeNodeCheckbox is rendered outside tree nodes.\");\n  }\n\n  return (\n    <StyledCheckboxWrapper>\n      <Checkbox\n        preventFocus\n        aria-label={`Select ${itemContext.node.textValue}`}\n        isSelected={selectionState === \"Selected\"}\n        isIndeterminate={selectionState === \"PartiallySelected\"}\n        isDisabled={itemContext.isDisabled}\n        onChange={() => {\n          onToggle();\n          // this if and the whole need for treeContext could be avoided if event.stopPropagation() was not hard coded\n          // in useToggle: https://github.com/adobe/react-spectrum/blob/0d007bca9417c4b7b86fafd5842871bf997bd4c0/packages/@react-aria/toggle/src/useToggle.ts#L46\n          // An improvement could be to replace Checkbox with CheckboxIcon, and simply handle press on it (potential TODO)\n          if (treeContext && itemContext && selectItemOnPress) {\n            treeContext.state.selectionManager.setFocusedKey(\n              itemContext.node.key\n            );\n            treeContext.state.selectionManager.setFocused(true);\n            treeContext.state.selectionManager.setSelectedKeys([\n              itemContext.node.key,\n            ]);\n          }\n        }}\n      />\n    </StyledCheckboxWrapper>\n  );\n};\n","import { Key, useMemo } from \"react\";\nimport { ControlledStateProps } from \"../type-utils\";\nimport { useLatest } from \"@intellij-platform/core/utils/useLatest\";\nimport { useControllableSet } from \"@intellij-platform/core/utils/useSet\";\nimport {\n  NestedSelection,\n  NestedSelectionState,\n  TreeModel,\n} from \"@intellij-platform/core/TreeCheckboxes/NestedSelection\";\n\n/**\n * A state management util for a selectable list of items with an arbitrary nested grouping. In other words,\n * it manages selection of leaves in a tree.\n *\n * tree is represented as a `getChildren` function that returns children for a given root. if null is passed it\n * returns the top level nodes.\n * Important Note: the tree structure that can be generated by calling `getChildren` function is supposed to be\n * **immutable**. in other words, any change in the tree, should result in a new array of top level items.\n */\n\nexport const useNestedSelectionState = <T extends object, K = Key>(\n  tree: TreeModel<T, K>,\n  {\n    selectedKeys: selectedKeysProp,\n    defaultSelectedKeys,\n    onSelectedKeysChange,\n  }: ControlledStateProps<{\n    selectedKeys: Set<K>;\n  }>\n): NestedSelectionState<T> => {\n  const [selectedKeys, selectedKeysSetter] = useControllableSet(\n    selectedKeysProp!, // bad typing in useControlledState\n    defaultSelectedKeys || new Set(),\n    onSelectedKeysChange! // bad typing in useControlledState\n  );\n  const treeRef = useLatest(tree);\n\n  return useMemo(\n    () =>\n      new NestedSelection<T, K>(\n        { items: selectedKeys, ...selectedKeysSetter },\n        treeRef.current\n      ),\n    [selectedKeys, tree.rootNodes]\n  );\n};\n","import {\n  LayoutNode,\n  ListLayout,\n  ListLayoutOptions,\n} from \"@react-stately/layout\";\nimport React, { Key } from \"react\";\nimport {\n  InvalidationContext,\n  LayoutInfo,\n  Rect,\n  Size,\n} from \"@react-stately/virtualizer\";\nimport { Node } from \"@react-types/shared\";\n\n/**\n * Extends `ListLayout` and allows items of the list to have width based on the content. `ListLayout` by default\n * sets width based on the virtualizer's visible rect. This means the overflow of list items will be clipped.\n * In `VariableWidthListLayout`, the width of the list depends on the content of the visible items.\n *\n * NOTE: At the time of writing this class, Virtualization in @react-aria and @react-stately don't have proper\n * documentation, and it wasn't clear if there could be better ways of letting list's width grow based on the content.\n * Also, this implementation currently lacks support for sections. `buildSection()` would most probably need to be\n * overridden like how `buildItem` is.\n */\nexport class VariableWidthListLayout<T> extends ListLayout<T> {\n  /**\n   * content width of items are stored here, if the content width is bigger than the Virtualizer's visible rect's width.\n   */\n  keyToWidth = new Map<Key, number>();\n  private visibleContentWidth: number = 0;\n  private dividerHeight: number = 2;\n\n  constructor(options: ListLayoutOptions<T> & { dividerHeight?: number }) {\n    super(options);\n    if (options.dividerHeight != undefined) {\n      this.dividerHeight = options.dividerHeight;\n    }\n  }\n\n  buildItem(node: Node<T>, x: number, y: number): LayoutNode {\n    const layoutNode = super.buildItem(node, x, y);\n    if (this.visibleContentWidth) {\n      layoutNode.layoutInfo.rect.width = this.visibleContentWidth;\n    }\n    return layoutNode;\n  }\n\n  buildNode(node: Node<T>, x: number, y: number): LayoutNode {\n    if (node.type === \"divider\") {\n      return this.buildDivider(node, x, y);\n    }\n    return super.buildNode(node, x, y);\n  }\n\n  buildDivider(node: Node<T>, x: number, y: number): LayoutNode {\n    let width = this.virtualizer.visibleRect.width;\n    let rectHeight = this.dividerHeight;\n\n    let rect = new Rect(x, y, width - x, rectHeight);\n    let layoutInfo = new LayoutInfo(node.type, node.key, rect);\n    layoutInfo.estimatedSize = false;\n    return {\n      layoutInfo,\n      // validRect: layoutInfo.rect,\n    };\n  }\n\n  /**\n   * Allows for overriding buildCollection in a sub-class\n   */\n  protected doBuildCollection() {\n    return super.buildCollection();\n  }\n\n  buildCollection(): LayoutNode[] {\n    this.visibleContentWidth = this.getVisibleContentWidth();\n    // in buildChild, if invalidateEverything is false and y is not changed, it will reuse the existing layoutInfo.\n    // which can be problematic, if it was created in a time when the visible content width was different.\n    // A more efficient approach (instead of rebuilding the whole collection), might be to set layout width to\n    // visibleContentWidth, in getVisibleLayoutInfos, if mutation is ok.\n    // UPDATE: using getFinalLayoutInfo seems to be a legitimate last minute way to mutate layout infos.\n    this.invalidateEverything =\n      this.contentSize?.width !== this.visibleContentWidth;\n    const layoutNodes = this.doBuildCollection();\n    this.contentSize.width = this.visibleContentWidth;\n    return layoutNodes;\n  }\n\n  shouldInvalidate(newRect: Rect, oldRect: Rect): boolean {\n    return (\n      super.shouldInvalidate(newRect, oldRect) ||\n      this.getVisibleContentWidth() !== this.visibleContentWidth\n    );\n  }\n\n  // Setting lastWidth doesn't seem to be important, but we set it based on the content anyway.\n  validate(invalidationContext: InvalidationContext<Node<T>, unknown>) {\n    super.validate(invalidationContext);\n    this.lastWidth = this.contentSize.width;\n  }\n\n  updateItemSize(key: React.Key, size: Size): boolean {\n    const changed = super.updateItemSize(key, size);\n    const layoutInfo = this.layoutInfos.get(key);\n    if (layoutInfo && size.width > this.contentSize.width) {\n      this.keyToWidth.set(key, size.width);\n      return true;\n    } else {\n      this.keyToWidth.delete(key);\n      return changed;\n    }\n  }\n\n  private getVisibleContentWidth() {\n    return Math.max(\n      this.virtualizer.visibleRect.width,\n      ...this.virtualizer.visibleViews.map((view) => {\n        const layoutInfo = view.layoutInfo;\n        const itemContentWidth =\n          layoutInfo && this.keyToWidth.get(layoutInfo.key);\n        if (\n          itemContentWidth &&\n          layoutInfo.rect.intersects(this.virtualizer.getVisibleRect())\n        ) {\n          return itemContentWidth;\n        }\n        return 0;\n      })\n    );\n  }\n}\n","export function isWordSeparator(c: string) {\n  return (\n    isWhitespace(c) || c == \"_\" || c == \"-\" || c == \":\" || c == \"+\" || c == \".\"\n  );\n}\n\nexport function isWhitespace(char: string): boolean {\n  return /^\\s*$/.test(char);\n}\n\nexport function isUpperCase(str: string) {\n  return str.toUpperCase() === str && str.toLowerCase() !== str;\n}\n","import { createRangesFromIndices, TextRange } from \"./TextRange\";\nimport {\n  isUpperCase,\n  isWhitespace,\n  isWordSeparator,\n} from \"./utils/string-utils\";\n\nfunction isMeaningfulChar(ch: string) {\n  return !isWordSeparator(ch) && !isWhitespace(ch);\n}\n\n// Simplified version of https://github.com/JetBrains/intellij-community/blob/master/platform/util/text-matching/src/com/intellij/psi/codeStyle/MinusculeMatcherImpl.java\nexport const minusculeMatch = (\n  input: string,\n  rawPattern: string\n): Array<TextRange> | null => {\n  const isStarts = input.split(\"\").map(isStart);\n  const pattern = rawPattern.split(\"\").filter(isMeaningfulChar).join(\"\");\n  const matches: Array<{ patternIndex: number; inputIndex: number }> = [];\n  let continuous = false;\n  let inputIndex = 0,\n    patternIndex = 0;\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if (matches.length === pattern.length) {\n      return createRangesFromIndices(matches.map(({ inputIndex: i }) => i));\n    }\n    if (inputIndex > input.length - 1) {\n      if (matches.length > 0) {\n        // TODO: the same character match can be popped out and in several times, if something\n        //  is popped out, it should never be added back again, since it's already examined without\n        //  a full match.\n        const lastMatch = matches.pop()!;\n        inputIndex = lastMatch.inputIndex + 1;\n        patternIndex = lastMatch.patternIndex;\n        continue;\n      }\n      break;\n    }\n    if (!isMeaningfulChar(input[inputIndex])) {\n      inputIndex++;\n      continue;\n    }\n    if (\n      pattern[patternIndex].toLowerCase() === input[inputIndex].toLowerCase() &&\n      (continuous || isStarts[inputIndex] || matches.length === 0)\n    ) {\n      matches.push({ patternIndex, inputIndex });\n      continuous = true;\n      patternIndex++;\n      inputIndex++;\n    } else {\n      continuous = false;\n      inputIndex++;\n    }\n  }\n  return null;\n};\n\nfunction isStart(char: string, index: number, chars: string[]): boolean {\n  const previousChar = chars[index - 1];\n  return (\n    index === 0 ||\n    (isWordSeparator(previousChar) && !isWordSeparator(char)) ||\n    (isUpperCase(char) && !isUpperCase(previousChar))\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, {\n  FocusEvent,\n  HTMLAttributes,\n  Key,\n  KeyboardEvent,\n  RefObject,\n  useEffect,\n} from \"react\";\nimport { focusSafely, getFocusableTreeWalker } from \"@react-aria/focus\";\nimport { FocusStrategy, KeyboardDelegate } from \"@react-types/shared\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { MultipleSelectionManager } from \"@react-stately/selection\";\nimport { useLocale } from \"@react-aria/i18n\";\nimport { useTypeSelect } from \"@react-aria/selection\";\nimport { isCtrlKeyPressed } from \"../utils/keyboard-utils\";\n\ninterface SelectableCollectionOptions {\n  /**\n   * An interface for reading and updating multiple selection state.\n   */\n  selectionManager: MultipleSelectionManager;\n  /**\n   * A delegate object that implements behavior for keyboard focus movement.\n   */\n  keyboardDelegate: KeyboardDelegate;\n  /**\n   * The ref attached to the element representing the collection.\n   */\n  ref: RefObject<HTMLElement>;\n  /**\n   * Whether the collection or one of its items should be automatically focused upon render.\n   * @default false\n   */\n  autoFocus?: boolean | FocusStrategy;\n  /**\n   * Whether focus should wrap around when the end/start is reached.\n   * @default false\n   */\n  shouldFocusWrap?: boolean;\n  /**\n   * Whether the collection allows empty selection.\n   * @default false\n   */\n  disallowEmptySelection?: boolean;\n  /**\n   * Whether the collection allows the user to select all items via keyboard shortcut.\n   * @default false\n   */\n  disallowSelectAll?: boolean;\n  /**\n   * Whether selection should occur automatically on focus.\n   * @default false\n   */\n  selectOnFocus?: boolean;\n  /**\n   * Whether typeahead is disabled.\n   * @default false\n   */\n  disallowTypeAhead?: boolean;\n  /**\n   * Whether the collection items should use virtual focus instead of being focused directly.\n   */\n  shouldUseVirtualFocus?: boolean;\n  /**\n   * Whether navigation through tab key is enabled.\n   */\n  allowsTabNavigation?: boolean;\n}\n\ninterface SelectableCollectionAria {\n  /** Props for the collection element. */\n  collectionProps: HTMLAttributes<HTMLElement>;\n}\n\n/**\n * Handles interactions with selectable collections.\n */\nexport function useSelectableCollection(\n  options: SelectableCollectionOptions\n): SelectableCollectionAria {\n  let {\n    selectionManager: manager,\n    keyboardDelegate: delegate,\n    ref,\n    autoFocus = false,\n    shouldFocusWrap = false,\n    disallowEmptySelection = false,\n    disallowSelectAll = false,\n    selectOnFocus = false,\n    disallowTypeAhead = false,\n    shouldUseVirtualFocus,\n    allowsTabNavigation = false,\n  } = options;\n  let { direction } = useLocale();\n\n  let onKeyDown = (e: KeyboardEvent) => {\n    // Let child element (e.g. menu button) handle the event if the Alt key is pressed.\n    // Keyboard events bubble through portals. Don't handle keyboard events\n    // for elements outside the collection (e.g. menus).\n    if (e.altKey || !ref.current?.contains(e.target as HTMLElement)) {\n      return;\n    }\n\n    const navigateToKey = (\n      key: Key | undefined,\n      childFocus?: FocusStrategy\n    ) => {\n      if (key != null) {\n        manager.setFocusedKey(key, childFocus);\n\n        if (e.shiftKey && manager.selectionMode === \"multiple\") {\n          manager.extendSelection(key);\n        } else if (selectOnFocus) {\n          manager.replaceSelection(key);\n        }\n      }\n    };\n\n    switch (e.key) {\n      case \"ArrowDown\": {\n        if (delegate.getKeyBelow) {\n          e.preventDefault();\n          let nextKey =\n            manager.focusedKey != null\n              ? delegate.getKeyBelow(manager.focusedKey)\n              : delegate.getFirstKey?.();\n          if (nextKey == null && shouldFocusWrap) {\n            nextKey = delegate.getFirstKey?.(manager.focusedKey);\n          }\n          // @ts-expect-error ignored strictness error in copied code\n          navigateToKey(nextKey);\n        }\n        break;\n      }\n      case \"ArrowUp\": {\n        if (delegate.getKeyAbove) {\n          e.preventDefault();\n          let nextKey =\n            manager.focusedKey != null\n              ? delegate.getKeyAbove(manager.focusedKey)\n              : delegate.getLastKey?.();\n          if (nextKey == null && shouldFocusWrap) {\n            nextKey = delegate.getLastKey?.(manager.focusedKey);\n          }\n          // @ts-expect-error ignored strictness error in copied code\n          navigateToKey(nextKey);\n        }\n        break;\n      }\n      case \"ArrowLeft\": {\n        if (delegate.getKeyLeftOf) {\n          e.preventDefault();\n          let nextKey = delegate.getKeyLeftOf(manager.focusedKey);\n          // @ts-expect-error ignored strictness error in copied code\n          navigateToKey(nextKey, direction === \"rtl\" ? \"first\" : \"last\");\n        }\n        break;\n      }\n      case \"ArrowRight\": {\n        if (delegate.getKeyRightOf) {\n          e.preventDefault();\n          let nextKey = delegate.getKeyRightOf(manager.focusedKey);\n          // @ts-expect-error ignored strictness error in copied code\n          navigateToKey(nextKey, direction === \"rtl\" ? \"last\" : \"first\");\n        }\n        break;\n      }\n      case \"Home\":\n        if (delegate.getFirstKey) {\n          e.preventDefault();\n          let firstKey = delegate.getFirstKey(\n            manager.focusedKey,\n            isCtrlKeyPressed(e)\n          );\n          // @ts-expect-error ignored strictness error in copied code\n          manager.setFocusedKey(firstKey);\n          if (\n            isCtrlKeyPressed(e) &&\n            e.shiftKey &&\n            manager.selectionMode === \"multiple\"\n          ) {\n            // @ts-expect-error ignored strictness error in copied code\n            manager.extendSelection(firstKey);\n          } else if (selectOnFocus) {\n            // @ts-expect-error ignored strictness error in copied code\n            manager.replaceSelection(firstKey);\n          }\n        }\n        break;\n      case \"End\":\n        if (delegate.getLastKey) {\n          e.preventDefault();\n          let lastKey = delegate.getLastKey(\n            manager.focusedKey,\n            isCtrlKeyPressed(e)\n          );\n          // @ts-expect-error ignored strictness error in copied code\n          manager.setFocusedKey(lastKey);\n          if (\n            isCtrlKeyPressed(e) &&\n            e.shiftKey &&\n            manager.selectionMode === \"multiple\"\n          ) {\n            // @ts-expect-error ignored strictness error in copied code\n            manager.extendSelection(lastKey);\n          } else if (selectOnFocus) {\n            // @ts-expect-error ignored strictness error in copied code\n            manager.replaceSelection(lastKey);\n          }\n        }\n        break;\n      case \"PageDown\":\n        if (delegate.getKeyPageBelow) {\n          e.preventDefault();\n          let nextKey = delegate.getKeyPageBelow(manager.focusedKey);\n          // @ts-expect-error ignored strictness error in copied code\n          navigateToKey(nextKey);\n        }\n        break;\n      case \"PageUp\":\n        if (delegate.getKeyPageAbove) {\n          e.preventDefault();\n          let nextKey = delegate.getKeyPageAbove(manager.focusedKey);\n          // @ts-expect-error ignored strictness error in copied code\n          navigateToKey(nextKey);\n        }\n        break;\n      case \"a\":\n        if (\n          isCtrlKeyPressed(e) &&\n          manager.selectionMode === \"multiple\" &&\n          disallowSelectAll !== true\n        ) {\n          e.preventDefault();\n          manager.selectAll();\n        }\n        break;\n      case \"Escape\":\n        e.preventDefault();\n        if (!disallowEmptySelection) {\n          manager.clearSelection();\n        }\n        break;\n      case \"Tab\": {\n        if (!allowsTabNavigation) {\n          // There may be elements that are \"tabbable\" inside a collection (e.g. in a grid cell).\n          // However, collections should be treated as a single tab stop, with arrow key navigation internally.\n          // We don't control the rendering of these, so we can't override the tabIndex to prevent tabbing.\n          // Instead, we handle the Tab key, and move focus manually to the first/last tabbable element\n          // in the collection, so that the browser default behavior will apply starting from that element\n          // rather than the currently focused one.\n          if (e.shiftKey) {\n            ref.current.focus();\n          } else {\n            let walker = getFocusableTreeWalker(ref.current, {\n              tabbable: true,\n            });\n            let next: HTMLElement | undefined;\n            let last: HTMLElement;\n            do {\n              last = walker.lastChild() as HTMLElement;\n              if (last) {\n                next = last;\n              }\n            } while (last);\n\n            if (next && !next.contains(document.activeElement)) {\n              next.focus();\n            }\n          }\n          break;\n        }\n      }\n    }\n  };\n\n  let onFocus = (e: FocusEvent) => {\n    if (manager.isFocused) {\n      // If a focus event bubbled through a portal, reset focus state.\n      if (!e.currentTarget.contains(e.target)) {\n        manager.setFocused(false);\n      }\n\n      return;\n    }\n\n    // Focus events can bubble through portals. Ignore these events.\n    if (!e.currentTarget.contains(e.target)) {\n      return;\n    }\n\n    manager.setFocused(true);\n\n    if (manager.focusedKey == null) {\n      // If the user hasn't yet interacted with the collection, there will be no focusedKey set.\n      // Attempt to detect whether the user is tabbing forward or backward into the collection\n      // and either focus the first or last item accordingly.\n      let relatedTarget = e.relatedTarget as Element;\n      let key: Key | undefined;\n      if (\n        relatedTarget &&\n        e.currentTarget.compareDocumentPosition(relatedTarget) &\n          Node.DOCUMENT_POSITION_FOLLOWING\n      ) {\n        // @ts-expect-error ignored strictness error in copied code\n        key = manager.lastSelectedKey ?? delegate.getLastKey?.();\n      } else {\n        // @ts-expect-error ignored strictness error in copied code\n        key = manager.firstSelectedKey ?? delegate.getFirstKey?.();\n      }\n      if (key != null) {\n        manager.setFocusedKey(key);\n      }\n    }\n  };\n\n  let onBlur = (e: FocusEvent) => {\n    // Don't set blurred and then focused again if moving focus within the collection.\n    if (!e.currentTarget.contains(e.relatedTarget as HTMLElement)) {\n      manager.setFocused(false);\n    }\n  };\n\n  useEffect(() => {\n    if (autoFocus) {\n      let focusedKey = null;\n\n      // Check focus strategy to determine which item to focus\n      if (autoFocus === \"first\") {\n        focusedKey = delegate.getFirstKey?.();\n      }\n      if (autoFocus === \"last\") {\n        focusedKey = delegate.getLastKey?.();\n      }\n\n      // If there are any selected keys, make the first one the new focus target\n      let selectedKeys = manager.selectedKeys;\n      if (selectedKeys.size) {\n        focusedKey = selectedKeys.values().next().value;\n      }\n\n      manager.setFocused(true);\n      manager.setFocusedKey(focusedKey);\n\n      // If no default focus key is selected, focus the collection itself.\n      if (focusedKey == null && !shouldUseVirtualFocus && ref.current) {\n        focusSafely(ref.current);\n      }\n\n      ///////////////////////////////////////////////////// MODIFICATION ///////////////////////////////////////////////\n      // Fixing https://github.com/adobe/react-spectrum/issues/4391\n      if (\n        options.selectOnFocus &&\n        (autoFocus === \"first\" || autoFocus === \"last\")\n      ) {\n        manager.replaceSelection(focusedKey);\n      }\n      /////////////////////////////////////////////////// END OF MODIFICATION //////////////////////////////////////////\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let handlers = {\n    onKeyDown,\n    onFocus,\n    onBlur,\n    onMouseDown(e: React.MouseEvent) {\n      // Prevent focus going to the collection when clicking on the scrollbar.\n      e.preventDefault();\n    },\n  };\n\n  let { typeSelectProps } = useTypeSelect({\n    keyboardDelegate: delegate,\n    selectionManager: manager,\n    onTypeSelect: selectOnFocus\n      ? (key) => {\n          manager.replaceSelection(key);\n        }\n      : undefined,\n  });\n\n  if (!disallowTypeAhead) {\n    handlers = mergeProps(typeSelectProps, handlers);\n  }\n\n  // If nothing is focused within the collection, make the collection itself tabbable.\n  // This will be marshalled to either the first or last item depending on where focus came from.\n  // If using virtual focus, don't set a tabIndex at all so that VoiceOver on iOS 14 doesn't try\n  // to move real DOM focus to the element anyway.\n  let tabIndex: number | undefined;\n  if (!shouldUseVirtualFocus) {\n    tabIndex = manager.focusedKey == null ? 0 : -1;\n  }\n\n  return {\n    collectionProps: {\n      ...handlers,\n      tabIndex,\n    },\n  };\n}\n","import { useSelectableItem as useOriginalSelectableItem } from \"@react-aria/selection\";\nimport { MouseEventHandler } from \"react\";\nimport { mergeProps } from \"@react-aria/utils\";\n\n/**\n * A wrapper around useSelectableItem, which adjusts for intellij platform nuances:\n * - Selects item with right clicks as well, which allows ContextMenuContainer to be used with any collection component\n *   without the need for built-in context-menu support in such components. We won't need this if we move to a built-in\n *   context-menu support for List,Tree, etc.\n * @private\n */\nexport const useSelectableItem: typeof useOriginalSelectableItem = (\n  options\n) => {\n  const onContextMenu: MouseEventHandler<HTMLElement> = (e) => {\n    if (!options.selectionManager.isSelected(options.key)) {\n      options.selectionManager.select(options.key);\n    }\n  };\n  const result = useOriginalSelectableItem(options);\n  return {\n    ...result,\n    itemProps: mergeProps(result.itemProps, { onContextMenu }),\n  };\n};\n","/**\n * Drop shadow of windows and other overlays.\n * The current value is not accurate and needs to be revisited. It should also be os-dependant.\n * FIXME: On windows, there is only a border-like shadow. No drop shadow\n * FIXME: On Mac, there is a border-like shadow and a drop shadow. the border-like shadow is missing in the current value\n */\nexport const WINDOW_SHADOW = \"box-shadow: 0 5px 15px rgb(0 0 0 / 30%)\";\n","import * as styledComponents from \"styled-components\";\nimport { ThemedStyledComponentsModule } from \"styled-components\";\nimport { Theme } from \"./Theme\";\nimport { KnownThemePropertyPath } from \"./Theme/types\";\n\ntype JuiStyledComponentsModule = ThemedStyledComponentsModule<\n  Theme<KnownThemePropertyPath>\n>;\n\nexport const styled =\n  styledComponents.default as JuiStyledComponentsModule[\"default\"];\nexport const useTheme =\n  styledComponents.useTheme as JuiStyledComponentsModule[\"useTheme\"];\nexport const css = styledComponents.css as JuiStyledComponentsModule[\"css\"];\nexport const ThemeConsumer =\n  styledComponents.ThemeConsumer as JuiStyledComponentsModule[\"ThemeConsumer\"];\n","import {\n  FocusManager,\n  FocusScope as WrappedFocusScope,\n  FocusScopeProps,\n  useFocusManager,\n} from \"@react-aria/focus\";\nimport React, { ForwardedRef, useImperativeHandle, useRef } from \"react\";\n\nexport type FocusScopeRef = { focus: (forceFocusFirst?: boolean) => void };\n/**\n * A version of FocusScope which also allows for imperatively moving focus to the scope.\n * and has tiny patches/improvements\n * It's useful for\n */\nexport const FocusScope = React.forwardRef(function BetterFocusScope(\n  { children, ...otherProps }: FocusScopeProps,\n  ref: ForwardedRef<FocusScopeRef>\n) {\n  const directChildRef = useRef<HTMLSpanElement>(null);\n  const focusManagerRef = useRef<FocusManager>(null);\n  useImperativeHandle(\n    ref,\n    () => ({\n      focus: (forceFocusFirst?: boolean) => {\n        const focusManager = focusManagerRef.current;\n        const containerElement = directChildRef.current?.parentElement;\n        if (!focusManager) {\n          throw new Error(\"focus manager not found!\");\n        }\n        if (!containerElement) {\n          throw new Error(\"container element not found\");\n        }\n        if (forceFocusFirst) {\n          return focusManager.focusFirst();\n        }\n        const alreadyHasFocused =\n          document.activeElement &&\n          document.activeElement !== containerElement &&\n          containerElement.contains(document.activeElement);\n        if (!alreadyHasFocused) {\n          focusManager.focusNext({ tabbable: true });\n        }\n      },\n    }),\n    []\n  );\n\n  return (\n    <WrappedFocusScope {...otherProps}>\n      <GetFocusManager ref={focusManagerRef} />\n      <span data-focus-root-direct-child=\"\" hidden ref={directChildRef} />\n      {children}\n    </WrappedFocusScope>\n  );\n});\nconst GetFocusManager = React.forwardRef(function FocusScopeHandle(\n  props: {},\n  ref: ForwardedRef<FocusManager>\n) {\n  const focusManager = useFocusManager()!;\n  useImperativeHandle(ref, () => focusManager, [focusManager]);\n  return null;\n});\n","/**\n * Properly typed filter function for filtering out null/undefined items in array.\n */\nexport const notNull = <T>(\n  item: T | undefined | null\n): item is NonNullable<T> => item != null;\n","/**\n * IMPORTANT: this is a copy of a non-exported file from @react-aria/interactions\n */\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport { runAfterTransition } from \"@react-aria/utils\";\n\n// Safari on iOS starts selecting text on long press. The only way to avoid this, it seems,\n// is to add user-select: none to the entire page. Adding it to the pressable element prevents\n// that element from being selected, but nearby elements may still receive selection. We add\n// user-select: none on touch start, and remove it again on touch end to prevent this.\n// This must be implemented using global state to avoid race conditions between multiple elements.\n\n// There are three possible states due to the delay before removing user-select: none after\n// pointer up. The 'default' state always transitions to the 'disabled' state, which transitions\n// to 'restoring'. The 'restoring' state can either transition back to 'disabled' or 'default'.\ntype State = \"default\" | \"disabled\" | \"restoring\";\n\nlet state: State = \"default\";\nlet savedUserSelect = \"\";\n\nexport function disableTextSelection() {\n  if (state === \"default\") {\n    savedUserSelect = document.documentElement.style.webkitUserSelect;\n    document.documentElement.style.webkitUserSelect = \"none\";\n  }\n\n  state = \"disabled\";\n}\n\nexport function restoreTextSelection() {\n  // If the state is already default, there's nothing to do.\n  // If it is restoring, then there's no need to queue a second restore.\n  if (state !== \"disabled\") {\n    return;\n  }\n\n  state = \"restoring\";\n\n  // There appears to be a delay on iOS where selection still might occur\n  // after pointer up, so wait a bit before removing user-select.\n  setTimeout(() => {\n    // Wait for any CSS transitions to complete so we don't recompute style\n    // for the whole page in the middle of the animation and cause jank.\n    runAfterTransition(() => {\n      // Avoid race conditions\n      if (state === \"restoring\") {\n        if (document.documentElement.style.webkitUserSelect === \"none\") {\n          document.documentElement.style.webkitUserSelect =\n            savedUserSelect || \"\";\n        }\n\n        savedUserSelect = \"\";\n        state = \"default\";\n      }\n    });\n  }, 300);\n}\n","import React, { MouseEventHandler } from \"react\";\nimport { disableTextSelection, restoreTextSelection } from \"./textSelection\";\nimport { useLatest } from \"../useLatest\";\n\n/**\n * To be used with {@link UseMoveOptions#canMoveStart} to allow\n * the move to start only on whitespaces. Does that by checking if the\n * element is an HTMLElement with all children being Elements.\n * This logic almost always detects the whitespaces properly, because if mouse\n * was pressed on a piece of text, the event target would have been that element.\n */\nexport function isEventOnEmptySpaces({\n  target,\n  currentTarget,\n}: React.MouseEvent) {\n  return (\n    currentTarget === target ||\n    (target instanceof HTMLElement &&\n      [...target.childNodes].every((child) => child instanceof HTMLElement))\n  );\n}\n\nexport type XY = { x: number; y: number };\nexport type UseMoveOptions<S> = {\n  /**\n   * the amount of movement (in pixels) after which the move should start. It prevents interference\n   * with simple click (or more generally, press) events, and provides better UX.\n   * @default 0\n   */\n  dragThreshold?: number;\n  disabled?: boolean;\n  /**\n   * Whether the move should be initiated from a mouse down event.\n   * Note: regardless of the value of this option, the move won't start when interactive elements like buttons\n   * are being pressed.\n   * @see isEventOnEmptySpaces\n   * @example\n   * ```ts\n   * // Don't move when children are being dragged.\n   * useMove({ canMoveStart: e => e.target === e.currentTarget });\n   * ```\n   *\n   * @example\n   * ```ts\n   * // move when empty spaces are being dragged.\n   * useMove({ canMoveStart: isEventOnEmptySpaces });\n   * ```\n   */\n  canMoveStart?: (eventTarget: React.MouseEvent) => boolean;\n  onMoveStart: (args: { from: XY }) => S;\n  onMove: (args: { from: XY; to: XY; movement: XY; startState: S }) => void;\n  onMoveEnd?: (args: { startState: S }) => void;\n};\n\n// TODO: cleanup if unmount happens during drag.\n// TODO: Better even handling for touch devices?\n//  wrapping `useMove` from react-aria to just add support for movement threshold should be the\n//  way to go, but there are a few problems:\n//    - it seemed a little buggy in the example here: https://react-spectrum.adobe.com/react-aria/useMove.html\n//    - the API is not great in a sense that it only gives the diff in last movement.\n//      Also onMoveStart doesn't give the initial position, so it's not possible to even calculate\n//\n// TODO: move should be finished by pressing Escape. onMoveCancel maybe?\n/**\n * Similar to https://react-spectrum.adobe.com/react-aria/useMove.html, with slightly different\n * features and API.\n * NOTE: initially the API was designed in a way that onMove and onMove end callbacks were\n * returned from onMoveStart, instead of being directly passed in the options.\n * This would enable capturing the initial state of each move transaction, by defining whatever\n * variable in onMoveStart and closing over them by onMove and onMoveEnd.\n * The problem with this approach was that although you could capture the initial state of the\n * movement, by closure, any other variable in the outer scopes was also closed over, and you were\n * stuck with the values from the particular render in which the movement was started.\n * Of course, you could work around it by using refs, but it would be unintuitive.\n * So because of that issue, it's redesigned to have onMoveStart, onMove, and onMoveEnd all\n * directly passed as options, but you can return anything from `onMoveStart` which will be passed\n * to onMove and onMoveEnd as `startState`.\n */\nexport function useMove<S>({\n  dragThreshold = 0,\n  disabled,\n  onMoveStart,\n  onMove,\n  onMoveEnd,\n  canMoveStart = () => true,\n}: UseMoveOptions<S>): { onMouseDown?: MouseEventHandler } {\n  const handlersRef = useLatest({ onMove, onMoveEnd });\n\n  const onMouseDown = (event: React.MouseEvent) => {\n    if (event.button !== 0 || !canMoveStart(event)) {\n      return;\n    }\n    disableTextSelection();\n    const from = { x: event.pageX, y: event.pageY };\n    let dragStarted = false;\n    let startState: S;\n\n    const onMouseMove = (event: MouseEvent) => {\n      const { pageX: x, pageY: y } = event;\n      const movement = { x: x - from.x, y: y - from.y };\n      const isDraggedEnough =\n        Math.abs(movement.x) >= dragThreshold ||\n        Math.abs(movement.y) >= dragThreshold;\n      if (isDraggedEnough && !dragStarted) {\n        dragStarted = true;\n        startState = onMoveStart({ from });\n      }\n      if (dragStarted) {\n        handlersRef.current.onMove({\n          from,\n          to: { x: from.x + movement.x, y: from.y + movement.y },\n          movement,\n          startState,\n        });\n      }\n    };\n    document.addEventListener(\"mousemove\", onMouseMove);\n\n    document.addEventListener(\n      \"mouseup\",\n      () => {\n        restoreTextSelection();\n        if (dragStarted) {\n          handlersRef.current.onMoveEnd?.({ startState });\n        }\n        document.removeEventListener(\"mousemove\", onMouseMove);\n      },\n      { once: true }\n    );\n  };\n  return disabled ? {} : { onMouseDown };\n}\n","import React from \"react\";\nimport { isMac } from \"@react-aria/utils\";\n\n/**\n * TODO: The current name is not accurate, and can be confusing. Rename to something better.\n */\nexport function isCtrlKeyPressed(\n  e: { metaKey: boolean; ctrlKey: boolean } | undefined\n) {\n  if (isMac()) {\n    return e?.metaKey;\n  }\n\n  return e?.ctrlKey;\n}\n\nexport function hasAnyModifier(e: KeyboardEvent | React.KeyboardEvent) {\n  return e.altKey || e.ctrlKey || e.metaKey || e.shiftKey;\n}\n","import { notNull } from \"@intellij-platform/core/utils/array-utils\";\n\nexport interface OverflowObserverRecord {\n  target: Element;\n  overflowedElements: Element[];\n  previouslyOverflowedElements: Element[];\n}\n\nexport type OverflowObserverCallback = (\n  change: OverflowObserverRecord,\n  observer: OverflowObserver\n) => void;\n\n/**\n * Allows observing the list of overflowing children of a given target element.\n * An `IntersectionObserver` is created for each target to observe the intersection between the target and each child\n * element. The child elements are observed/unobserved by the intersection observer as they are added/removed to the\n * DOM, which is observed using a `MutationObserver`.\n * `IntersectionObserver` options such as `rootMargin` are supported, to fine tune what should be considered as\n * overflowed.\n *\n * TODO: add a takeRecords method to allow processing pending mutations before disconnect\n * TODO: maybe add direction option?\n *\n */\nexport class OverflowObserver {\n  private mutationObserver: MutationObserver;\n  private data: Map<\n    Element,\n    {\n      intersectionObserver: IntersectionObserver;\n      currentOverflowElements: Element[];\n    }\n  > = new Map();\n\n  constructor(private callback: OverflowObserverCallback) {\n    this.mutationObserver = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        const target = mutation.target;\n        if (!(target instanceof Element)) {\n          return;\n        }\n        mutation.removedNodes.forEach((node) => {\n          if (node instanceof Element) {\n            this.data.get(target)?.intersectionObserver.unobserve(node);\n          }\n        });\n        mutation.addedNodes.forEach((node) => {\n          if (node instanceof Element) {\n            this.data.get(target)?.intersectionObserver.observe(node);\n          }\n        });\n      });\n    });\n  }\n\n  observe(target: Element, options: Omit<IntersectionObserverInit, \"root\">) {\n    this.data.get(target)?.intersectionObserver.disconnect();\n\n    const intersectionObserver = new IntersectionObserver(\n      (entries) => {\n        const data = this.data.get(target);\n        const newHiddenElements = entries\n          .map((entry) =>\n            !entry.isIntersecting && entry.target instanceof Element\n              ? entry.target\n              : undefined\n          )\n          .filter(notNull);\n        const newVisibleElements = entries\n          .map((entry) =>\n            entry.isIntersecting && entry.target instanceof Element\n              ? entry.target\n              : null\n          )\n          .filter(notNull);\n\n        //  Also cover this in Toolbar with a test case\n        const previouslyOverflowedElements =\n          data?.currentOverflowElements || [];\n        const overflowedElements = previouslyOverflowedElements\n          .filter((element) => !newVisibleElements.includes(element))\n          .concat(newHiddenElements)\n          .filter((element) => {\n            // In some cases some elements may be hidden by some styles (e.g. the first/last separator in a toolbar).\n            // It doesn't make sense to report them as overflowed.\n            const isHidden =\n              element instanceof HTMLElement &&\n              element.offsetWidth === 0 &&\n              element.offsetHeight === 0;\n            return !isHidden;\n          });\n        this.callback(\n          {\n            previouslyOverflowedElements,\n            overflowedElements: overflowedElements,\n            target,\n          },\n          this\n        );\n        if (data) {\n          data.currentOverflowElements = overflowedElements;\n        }\n      },\n      {\n        ...options,\n        root: target,\n      }\n    );\n    [...(target?.children || [])].forEach((childElement) => {\n      intersectionObserver.observe(childElement);\n    });\n    this.data.set(target, {\n      intersectionObserver,\n      currentOverflowElements: [],\n    });\n    this.mutationObserver.observe(target, {\n      childList: true,\n    });\n  }\n\n  unobserve(target: Element) {\n    this.data.get(target)?.intersectionObserver.disconnect();\n  }\n\n  disconnect() {\n    [...this.data.values()].forEach(({ intersectionObserver }) =>\n      intersectionObserver.disconnect()\n    );\n    this.data = new Map();\n    this.mutationObserver.disconnect();\n  }\n}\n","import { RefObject, useEffect, useState } from \"react\";\nimport { OverflowObserver } from \"@intellij-platform/core/utils/overflow-utils/OverflowObserver\";\n\n/**\n * Given a ref to a scrollable container, returns the child elements that are not completely visible and\n * are off view because of scroll.\n * @param scrollableContainerRef\n * @param threshold\n */\nexport function useOverflowObserver(\n  scrollableContainerRef: RefObject<HTMLElement>,\n  {\n    threshold = 0.9,\n    rootMargin = \"0px\",\n  }: Omit<IntersectionObserverInit, \"root\"> = {}\n) {\n  const [overflowedElements, setOverflowedElements] = useState<Element[]>([]);\n\n  useEffect(() => {\n    const overflowObserver = new OverflowObserver((change) => {\n      setOverflowedElements(change.overflowedElements);\n    });\n    overflowObserver.observe(scrollableContainerRef.current!, {\n      rootMargin,\n      threshold,\n    });\n    return () => {\n      overflowObserver.disconnect();\n    };\n  }, [\n    /**\n     * It's ok and needed to have the ref value as a dependency here. We don't know if ref is attached to different\n     * elements in each render, and it's ok that it's not a state, since we don't change it, and it's not supposed to\n     * change without a rerender\n     **/\n    scrollableContainerRef.current,\n  ]);\n\n  return {\n    overflowedElements,\n  };\n}\n","import { Key } from \"react\";\nimport { Ord } from \"ramda\";\n\ntype TreeNodeFn<T> = (root: T) => null | readonly T[];\ntype MutableTreeNodeFn<T> = (root: T) => null | T[];\n\ntype Tree<T> = {\n  getChildren: TreeNodeFn<T>;\n  roots: ReadonlyArray<T>;\n};\n\ntype MutableTree<T> = {\n  getChildren: MutableTreeNodeFn<T>;\n  roots: Array<T>;\n};\n\nexport const getExpandAllKeys = <T>(\n  /**\n   * represents a tree as a function. Given a node, it should return the array of children or null, if the node is a\n   * leaf. Note that even an empty array will make the node to be considered a non-leaf node and the key is included.\n   * if null is passed, the root(s) node(s) should be returned.\n   */\n  getChildren: TreeNodeFn<T>,\n  /**\n   * a function that converts each node into a key\n   */\n  getKey: (t: T) => Key,\n  roots: ReadonlyArray<T>\n) => {\n  const keys: Key[] = roots.map(getKey);\n  const processItem = (node: T | null) => {\n    const children = node ? getChildren(node) : null;\n    if (node == null || !children) {\n      return;\n    }\n    keys.push(getKey(node));\n    children.forEach(processItem);\n  };\n  roots.map(getChildren).flat().forEach(processItem);\n  return keys;\n};\n\nexport const getExpandedToNodesKeys = <T>(\n  /**\n   * represents a tree as a function. Given a node, it should return the array of children or null, if the node is a\n   * leaf. Note that even an empty array will make the node to be considered a non-leaf node and the key is included.\n   * if null is passed, the root(s) node(s) should be returned.\n   */\n  getChildren: TreeNodeFn<T>,\n  /**\n   * a function that converts each node into a key\n   */\n  getKey: (t: T) => Key,\n  roots: ReadonlyArray<T>,\n  targetNodeKeys: Iterable<Key>\n) => {\n  const targetNodeKeySet = new Set(targetNodeKeys);\n  const expandedKeys: Key[] = [];\n  dfsVisit<T, boolean>(\n    getChildren,\n    (node, childValues) => {\n      const key = getKey(node);\n      const isExpanded: boolean =\n        childValues?.some((childValue) => childValue) ||\n        targetNodeKeySet.has(key);\n      if (isExpanded) {\n        expandedKeys.push(key);\n      }\n      return isExpanded;\n    },\n    roots\n  );\n  return expandedKeys;\n};\n\nexport const dfsVisit = <T, R>(\n  getChildren: TreeNodeFn<T>,\n  visit: (node: T, childrenValues: null | R[]) => R,\n  roots: ReadonlyArray<T>\n) => {\n  const dfs = (node: T): R => {\n    const children = getChildren(node);\n    const values = children?.map(dfs) ?? null;\n    return visit(node, values);\n  };\n  roots.forEach(dfs);\n};\n\nexport const bfsVisit = <T, R>(\n  getChildren: TreeNodeFn<T>,\n  visit: (node: T, parentValue: R | null) => R,\n  roots: ReadonlyArray<T>\n) => {\n  const bfs: typeof visit = (node, parentValue) => {\n    const result = visit(node, parentValue);\n    const children = getChildren(node);\n    children?.map((childNode) => bfs(childNode, result));\n    return result;\n  };\n  return roots.map((root) => bfs(root, null));\n};\n\nexport const sortTreeNodesInPlace = <T>(\n  by: (t: T) => Ord,\n  tree: MutableTree<T>\n) => {\n  const compareFn = (a: T, b: T) => {\n    const aa = by(a);\n    const bb = by(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  };\n  tree.roots.sort(compareFn);\n  bfsVisit(\n    tree.getChildren,\n    (node) => {\n      const children = tree.getChildren(node);\n      if (children) {\n        children.sort(compareFn);\n      }\n    },\n    tree.roots\n  );\n};\n","import React, { useContext } from \"react\";\n\nexport const useContextOrThrow = <ContextType extends unknown>(\n  Context: React.Context<ContextType | null>,\n  nullErrorMessage: string\n) => {\n  const context = useContext<ContextType | null>(Context);\n\n  if (context == null) {\n    throw new Error(nullErrorMessage);\n  }\n\n  return context;\n};\n","import { useCallback, useLayoutEffect, useRef } from \"react\";\n\n/**\n * Interim solution for non-reactive callbacks, until\n * [useEvent](https://github.com/reactjs/rfcs/blob/useevent/text/0000-useevent.md) (or whatever it will end up being\n * called), becomes available.\n */\nexport function useEventCallback<T extends (...args: any[]) => any>(fn: T): T {\n  let ref = useRef<typeof fn>();\n  useLayoutEffect(() => {\n    ref.current = fn;\n  });\n  const callback = ((...args: Parameters<T>) =>\n    ref.current?.apply(null, args)) as T;\n  return useCallback<T>(callback, []);\n}\n","import { FocusEventHandler } from \"react\";\nimport { getFocusableTreeWalker } from \"@react-aria/focus\";\n\n/**\n * Provides a focus management mechanism for a container that doesn't retain focus but forwards it to its focusable\n * descendants. More specifically:\n * - When the container gets focused, it automatically focuses the first focusable child element.\n *   The {@param forwardFocus} parameter can be used to customize which element should receive focus.\n * - By default, focus is prevented from returning to the container itself when focus is being moved from a descendant\n *   to the container. {@param ignoreFocusedDescendant} can be set to `true`, to disable this behaviour.\n *   If {@param ignoreFocusedDescendant} is true, focus will be forcibly moved to the first element (or the element\n *   specified by {@param forwardFocus}) when the container gets focused.\n *\n * NOTE: This hook does not make the container element focusable. It only returns the focus event handler that should be\n * passed to the container.\n */\nexport function useFocusForwarder({\n  forwardFocus,\n  ignoreFocusedDescendant = false,\n}: {\n  /**\n   * Called when the container gets focused, to forward focus to the appropriate focusable child element.\n   * If not passed, focus is forwarded to the first focusable element, by default.\n   */\n  forwardFocus?: () => void;\n  ignoreFocusedDescendant?: boolean;\n} = {}) {\n  const onFocus: FocusEventHandler = (event) => {\n    if (event.target !== event.currentTarget) {\n      // only when this container is focused. not when anything inside is focused.\n      return;\n    }\n    const possiblyBlurredElement = event.relatedTarget;\n    if (\n      possiblyBlurredElement instanceof Element &&\n      event.currentTarget?.contains(possiblyBlurredElement) &&\n      !ignoreFocusedDescendant\n    ) {\n      // If anything inside the content is being blurred while the container is getting focused, we don't let focus\n      // go from that element, to the container.\n      if (possiblyBlurredElement instanceof HTMLElement) {\n        possiblyBlurredElement.focus();\n      }\n      return;\n    }\n    if (forwardFocus) {\n      forwardFocus();\n    } else {\n      (\n        getFocusableTreeWalker(event.currentTarget).firstChild() as HTMLElement\n      )?.focus();\n    }\n  };\n  return { focusForwarderProps: { onFocus } };\n}\n","import React, { useRef } from \"react\";\n\n/**\n * For when a component needs to forward ref, but it too needs to use the same ref. Since forwarded ref can be in form\n * of a callback too, this will normalize it as a RefObject.\n * NOTE: Should we keep the ref in state because of edge cases?\n */\nexport default function useForwardedRef<T>(\n  forwardedRef: React.Ref<T>\n): React.RefObject<T> {\n  const innerRef = useRef<T>(null);\n  React.useEffect(() => {\n    if (!forwardedRef) {\n      return;\n    }\n\n    if (typeof forwardedRef === \"function\") {\n      forwardedRef(innerRef.current);\n    } else {\n      (forwardedRef as React.MutableRefObject<T | null>).current =\n        innerRef.current;\n    }\n  });\n\n  return innerRef;\n}\n","import { useLayoutEffect, useRef } from \"react\";\n\nexport function useLatest<T>(value: T) {\n  const ref = useRef(value);\n  useLayoutEffect(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n","import React, { useRef } from \"react\";\nimport { useLayoutEffect } from \"@react-aria/utils\";\nimport {\n  AriaPositionProps,\n  PositionAria,\n  useOverlayPosition,\n} from \"@react-aria/overlays\";\n\n/**\n * `useOverlayPosition` only supports positioning overlay relative to an element, at the moment.\n *  For context menu or tooltip, we may want to position the overlay based on the coordinates of the mouse event which\n *  has triggered the overlay.\n *  This hook wraps `useOverlayPosition`, and is very similar to it, but you don't need to pass `targetRef`. Instead,\n *  you have to call the updatePosition in the event handler that triggers the overlay, passing the `MouseEvent` object.\n *\n * This is hopefully a temporary solution to circumvents the limitation of `useOverlayPosition`, until it supports\n * non-element based positioning as well. It works by appending a dummy 1x1 px element to body and positioning it\n * based on React.MouseEvent objects. Then it uses a ref to that element as the `targetRef`, passed to `useOverlayPosition`\n *\n * @example\n * ```ts\n * const { updatePosition, overlyProps} = useMouseEventOverlayPosition({ overlayRef });\n *\n * const onContextMenu = (event: React.ReactEvent) => {\n *  updatePosition(event);\n *  // ...\n * }\n * ```\n */\nlet globalMoveHandler: null | ((e: MouseEvent) => void) = null;\nlet lastMouseClientPos: { clientX: number; clientY: number } | undefined;\n\nexport function useMouseEventOverlayPosition(\n  options: Omit<AriaPositionProps, \"targetRef\">\n): Omit<PositionAria, \"updatePosition\"> & {\n  updatePosition: (event?: React.MouseEvent) => void;\n} {\n  const targetRef = useRef<HTMLElement>(null);\n\n  useLayoutEffect(() => {\n    if (!globalMoveHandler) {\n      // After the first use of the hook, the listener will be attached forever. Not a big deal but can be improved.\n      globalMoveHandler = ({ clientX, clientY }) => {\n        lastMouseClientPos = { clientX, clientY };\n      };\n      document.addEventListener(\"mousemove\", globalMoveHandler);\n    }\n    if (!targetRef.current) {\n      const fakeTarget = document.createElement(\"span\");\n      Object.assign(fakeTarget.style, {\n        width: \"0px\",\n        height: \"0px\",\n        pointerEvents: \"none\",\n        position: \"fixed\",\n        visibility: \"hidden\",\n      });\n      document.body.appendChild(fakeTarget);\n      // @ts-expect-error We intentionally don't pass null to generic argument, to not have it as a mutable nullable\n      // ref, since we are mimicking an element ref.\n      targetRef.current = fakeTarget;\n      return () => {\n        fakeTarget.remove();\n      };\n    }\n  }, []);\n\n  const updatePosition = (e?: React.MouseEvent) => {\n    const coordinatesSource = e || lastMouseClientPos;\n    if (targetRef.current && coordinatesSource) {\n      const { clientX, clientY } = coordinatesSource;\n      targetRef.current.style.left = `${\n        // not sure why crossOffset passed to useOverlayPosition doesn't work, so compensating for it here.\n        clientX + (options.crossOffset ?? 0)\n      }px`;\n      targetRef.current.style.top = `${clientY}px`;\n    }\n    _updatePosition();\n  };\n  useLayoutEffect(() => {\n    if (options.isOpen) {\n      updatePosition();\n    }\n  }, [options.isOpen, targetRef.current]);\n\n  const { updatePosition: _updatePosition, ...result } = useOverlayPosition({\n    ...options,\n    targetRef,\n  });\n\n  return {\n    ...result,\n    /**\n     * Ref to be passed to be passed as targetRef\n     */\n    updatePosition,\n  };\n}\n","import { useEffect, useRef } from \"react\";\n\nexport function usePrevious<T>(value: T): T {\n  const ref = useRef(value);\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n","export class ImmutableSet<T> implements ReadonlySet<T> {\n  readonly size: number;\n  private readonly set: ReadonlySet<T>;\n\n  constructor(values: Iterable<T>) {\n    this.set = new Set(values);\n    this.size = this.set.size;\n  }\n\n  add(...items: T[]): ImmutableSet<T> {\n    return this.setValueWithMutation((newValue) => {\n      items.forEach((item) => {\n        newValue.add(item);\n      });\n    });\n  }\n\n  delete(...items: T[]): ImmutableSet<T> {\n    return this.setValueWithMutation((newValue) => {\n      items.forEach((item) => {\n        newValue.delete(item);\n      });\n    });\n  }\n\n  toggle(...items: T[]): ImmutableSet<T> {\n    return this.setValueWithMutation((newValue) => {\n      items.forEach((item) => {\n        if (!newValue.delete(item)) {\n          newValue.add(item);\n        }\n      });\n    });\n  }\n\n  clear(): ImmutableSet<T> {\n    return this.setValueWithMutation((newValue) => {\n      newValue.clear();\n    });\n  }\n\n  private setValueWithMutation(\n    mutate: (newValue: Set<T>) => void\n  ): ImmutableSet<T> {\n    const newValue = new Set(this.set);\n    mutate(newValue);\n    return new ImmutableSet(newValue);\n  }\n\n  ////////////////////////////////////////////////// delegated methods /////////////////////////////////////////////////\n  forEach(...args: Parameters<ReadonlySet<T>[\"forEach\"]>): void {\n    return this.set.forEach(...args);\n  }\n\n  has(value: T): boolean {\n    return this.set.has(value);\n  }\n\n  [Symbol.iterator](): IterableIterator<T> {\n    return this.set[Symbol.iterator]();\n  }\n\n  entries(): IterableIterator<[T, T]> {\n    return this.set.entries();\n  }\n\n  keys(): IterableIterator<T> {\n    return this.set.keys();\n  }\n\n  values(): IterableIterator<T> {\n    return this.set.values();\n  }\n}\n","import { useControlledState } from \"@react-stately/utils\";\nimport { useMemo } from \"react\";\nimport { ImmutableSet } from \"./immutableSet\";\n\n/**\n * Creates map interface out of a setter of form (currentValue: Map) => Map\n * Use {@link useControllableSet} instead if you need a Set state in a React component.\n * This is useful for use outside React components, such as state management libraries.\n */\nexport const createSetInterface = <T>(\n  set: (value: (prevState: Set<T>) => Set<T>) => void\n) => ({\n  add: (...values: T[]) =>\n    set(\n      (currentValue) => new Set(new ImmutableSet(currentValue).add(...values))\n    ),\n  delete: (...values: T[]) =>\n    set(\n      (currentValue) =>\n        new Set(new ImmutableSet(currentValue).delete(...values))\n    ),\n  clear: () =>\n    set((currentValue) => new Set(new ImmutableSet(currentValue).clear())),\n  toggle: (...values: T[]) =>\n    set(\n      (currentValue) =>\n        new Set(new ImmutableSet(currentValue).toggle(...values))\n    ),\n});\n\nfunction useStateSetterForSet<T>(\n  setValue: (value: (prevState: Set<T>) => Set<T>, ...args: any[]) => void\n) {\n  return useMemo(() => createSetInterface(setValue), [setValue]);\n}\n\n/**\n * controllable state management for a Set. returns a tuple containing the value and an object with Set functions on it,\n * which would update the state.\n */\nexport const useControllableSet = <T>(\n  valueProp: Set<T> | undefined,\n  defaultValue: Set<T> = new Set(),\n  onChange: ((newValue: Set<T>) => void) | undefined\n) => {\n  const [value, setValue] = useControlledState(\n    valueProp!, // bad typing in useControlledState\n    defaultValue,\n    onChange! // bad typing in useControlledState\n  );\n\n  // @ts-expect-error FIXME https://github.com/adobe/react-spectrum/issues/2320\n  return [value, useStateSetterForSet(setValue)] as const;\n};\n","import*as t from\"react\";function n(){return n=Object.assign?Object.assign.bind():function(t){for(var n=1;n<arguments.length;n++){var e=arguments[n];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])}return t},n.apply(this,arguments)}const e=[\"children\",\"options\"],r=[\"allowFullScreen\",\"allowTransparency\",\"autoComplete\",\"autoFocus\",\"autoPlay\",\"cellPadding\",\"cellSpacing\",\"charSet\",\"className\",\"classId\",\"colSpan\",\"contentEditable\",\"contextMenu\",\"crossOrigin\",\"encType\",\"formAction\",\"formEncType\",\"formMethod\",\"formNoValidate\",\"formTarget\",\"frameBorder\",\"hrefLang\",\"inputMode\",\"keyParams\",\"keyType\",\"marginHeight\",\"marginWidth\",\"maxLength\",\"mediaGroup\",\"minLength\",\"noValidate\",\"radioGroup\",\"readOnly\",\"rowSpan\",\"spellCheck\",\"srcDoc\",\"srcLang\",\"srcSet\",\"tabIndex\",\"useMap\"].reduce((t,n)=>(t[n.toLowerCase()]=n,t),{for:\"htmlFor\"}),o={amp:\"&\",apos:\"'\",gt:\">\",lt:\"<\",nbsp:\" \",quot:\"“\"},c=[\"style\",\"script\"],a=/([-A-Z0-9_:]+)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|(?:\\{((?:\\\\.|{[^}]*?}|[^}])*)\\})))?/gi,_=/mailto:/i,u=/\\n{2,}$/,i=/^( *>[^\\n]+(\\n[^\\n]+)*\\n*)+\\n{2,}/,s=/^ *> ?/gm,l=/^ {2,}\\n/,f=/^(?:( *[-*_])){3,} *(?:\\n *)+\\n/,d=/^\\s*(`{3,}|~{3,}) *(\\S+)?([^\\n]*?)?\\n([\\s\\S]+?)\\s*\\1 *(?:\\n *)*\\n?/,p=/^(?: {4}[^\\n]+\\n*)+(?:\\n *)+\\n?/,m=/^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,g=/^(?:\\n *)*\\n/,y=/\\r\\n?/g,h=/^\\[\\^([^\\]]+)](:.*)\\n/,k=/^\\[\\^([^\\]]+)]/,x=/\\f/g,b=/^\\s*?\\[(x|\\s)\\]/,$=/^ *(#{1,6}) *([^\\n]+?)(?: +#*)?(?:\\n *)*(?:\\n|$)/,v=/^ *(#{1,6}) +([^\\n]+?)(?: +#*)?(?:\\n *)*(?:\\n|$)/,S=/^([^\\n]+)\\n *(=|-){3,} *(?:\\n *)+\\n/,z=/^ *(?!<[a-z][^ >/]* ?\\/>)<([a-z][^ >/]*) ?([^>]*)\\/{0}>\\n?(\\s*(?:<\\1[^>]*?>[\\s\\S]*?<\\/\\1>|(?!<\\1)[\\s\\S])*?)<\\/\\1>\\n*/i,w=/&([a-z0-9]+|#[0-9]{1,6}|#x[0-9a-fA-F]{1,6});/gi,A=/^<!--[\\s\\S]*?(?:-->)/,E=/^(data|aria|x)-[a-z_][a-z\\d_.-]*$/,L=/^ *<([a-z][a-z0-9:]*)(?:\\s+((?:<.*?>|[^>])*))?\\/?>(?!<\\/\\1>)(\\s*\\n)?/i,M=/^\\{.*\\}$/,O=/^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,I=/^<([^ >]+@[^ >]+)>/,j=/^<([^ >]+:\\/[^ >]+)>/,B=/-([a-z])?/gi,R=/^(.*\\|?.*)\\n *(\\|? *[-:]+ *\\|[-| :]*)\\n((?:.*\\|.*\\n)*)\\n?/,T=/^\\[([^\\]]*)\\]:\\s+<?([^\\s>]+)>?\\s*(\"([^\"]*)\")?/,C=/^!\\[([^\\]]*)\\] ?\\[([^\\]]*)\\]/,D=/^\\[([^\\]]*)\\] ?\\[([^\\]]*)\\]/,F=/(\\[|\\])/g,N=/(\\n|^[-*]\\s|^#|^ {2,}|^-{2,}|^>\\s)/,P=/\\t/g,Z=/^ *\\| */,G=/(^ *\\||\\| *$)/g,H=/ *$/,q=/^ *:-+: *$/,U=/^ *:-+ *$/,V=/^ *-+: *$/,W=/^([*_])\\1((?:\\[.*?\\][([].*?[)\\]]|<.*?>(?:.*?<.*?>)?|`.*?`|~+.*?~+|.)*?)\\1\\1(?!\\1)/,Q=/^([*_])((?:\\[.*?\\][([].*?[)\\]]|<.*?>(?:.*?<.*?>)?|`.*?`|~+.*?~+|.)*?)\\1(?!\\1|\\w)/,X=/^==((?:\\[.*?\\]|<.*?>(?:.*?<.*?>)?|`.*?`|.)*?)==/,J=/^~~((?:\\[.*?\\]|<.*?>(?:.*?<.*?>)?|`.*?`|.)*?)~~/,K=/^\\\\([^0-9A-Za-z\\s])/,Y=/^[\\s\\S]+?(?=[^0-9A-Z\\s\\u00c0-\\uffff&#;.()'\"]|\\d+\\.|\\n\\n| {2,}\\n|\\w+:\\S|$)/i,tt=/^\\n+/,nt=/^([ \\t]*)/,et=/\\\\([^\\\\])/g,rt=/ *\\n+$/,ot=/(?:^|\\n)( *)$/,ct=\"(?:\\\\d+\\\\.)\",at=\"(?:[*+-])\";function _t(t){return\"( *)(\"+(1===t?ct:at)+\") +\"}const ut=_t(1),it=_t(2);function st(t){return new RegExp(\"^\"+(1===t?ut:it))}const lt=st(1),ft=st(2);function dt(t){return new RegExp(\"^\"+(1===t?ut:it)+\"[^\\\\n]*(?:\\\\n(?!\\\\1\"+(1===t?ct:at)+\" )[^\\\\n]*)*(\\\\n|$)\",\"gm\")}const pt=dt(1),mt=dt(2);function gt(t){const n=1===t?ct:at;return new RegExp(\"^( *)(\"+n+\") [\\\\s\\\\S]+?(?:\\\\n{2,}(?! )(?!\\\\1\"+n+\" (?!\"+n+\" ))\\\\n*|\\\\s*\\\\n*$)\")}const yt=gt(1),ht=gt(2);function kt(t,n){const e=1===n,r=e?yt:ht,o=e?pt:mt,c=e?lt:ft;return{t(t,n,e){const o=ot.exec(e);return o&&(n.o||!n._&&!n.u)?r.exec(t=o[1]+t):null},i:Ht.HIGH,l(t,n,r){const a=e?+t[2]:void 0,_=t[0].replace(u,\"\\n\").match(o);let i=!1;return{p:_.map(function(t,e){const o=c.exec(t)[0].length,a=new RegExp(\"^ {1,\"+o+\"}\",\"gm\"),u=t.replace(a,\"\").replace(c,\"\"),s=e===_.length-1,l=-1!==u.indexOf(\"\\n\\n\")||s&&i;i=l;const f=r._,d=r.o;let p;r.o=!0,l?(r._=!1,p=u.replace(rt,\"\\n\\n\")):(r._=!0,p=u.replace(rt,\"\"));const m=n(p,r);return r._=f,r.o=d,m}),m:e,g:a}},h:(n,e,r)=>t(n.m?\"ol\":\"ul\",{key:r.k,start:n.g},n.p.map(function(n,o){return t(\"li\",{key:o},e(n,r))}))}}const xt=/^\\[([^\\]]*)]\\( *((?:\\([^)]*\\)|[^() ])*) *\"?([^)\"]*)?\"?\\)/,bt=/^!\\[([^\\]]*)]\\( *((?:\\([^)]*\\)|[^() ])*) *\"?([^)\"]*)?\"?\\)/,$t=[i,d,p,$,S,v,A,R,pt,yt,mt,ht],vt=[...$t,/^[^\\n]+(?:  \\n|\\n{2,})/,z,L];function St(t){return t.replace(/[ÀÁÂÃÄÅàáâãäåæÆ]/g,\"a\").replace(/[çÇ]/g,\"c\").replace(/[ðÐ]/g,\"d\").replace(/[ÈÉÊËéèêë]/g,\"e\").replace(/[ÏïÎîÍíÌì]/g,\"i\").replace(/[Ññ]/g,\"n\").replace(/[øØœŒÕõÔôÓóÒò]/g,\"o\").replace(/[ÜüÛûÚúÙù]/g,\"u\").replace(/[ŸÿÝý]/g,\"y\").replace(/[^a-z0-9- ]/gi,\"\").replace(/ /gi,\"-\").toLowerCase()}function zt(t){return V.test(t)?\"right\":q.test(t)?\"center\":U.test(t)?\"left\":null}function wt(t,n,e){const r=e.$;e.$=!0;const o=n(t.trim(),e);e.$=r;let c=[[]];return o.forEach(function(t,n){\"tableSeparator\"===t.type?0!==n&&n!==o.length-1&&c.push([]):(\"text\"!==t.type||null!=o[n+1]&&\"tableSeparator\"!==o[n+1].type||(t.v=t.v.replace(H,\"\")),c[c.length-1].push(t))}),c}function At(t,n,e){e._=!0;const r=wt(t[1],n,e),o=t[2].replace(G,\"\").split(\"|\").map(zt),c=function(t,n,e){return t.trim().split(\"\\n\").map(function(t){return wt(t,n,e)})}(t[3],n,e);return e._=!1,{S:o,A:c,L:r,type:\"table\"}}function Et(t,n){return null==t.S[n]?{}:{textAlign:t.S[n]}}function Lt(t){return function(n,e){return e._?t.exec(n):null}}function Mt(t){return function(n,e){return e._||e.u?t.exec(n):null}}function Ot(t){return function(n,e){return e._||e.u?null:t.exec(n)}}function It(t){return function(n){return t.exec(n)}}function jt(t,n,e){if(n._||n.u)return null;if(e&&!e.endsWith(\"\\n\"))return null;let r=\"\";t.split(\"\\n\").every(t=>!$t.some(n=>n.test(t))&&(r+=t+\"\\n\",t.trim()));const o=r.trimEnd();return\"\"==o?null:[r,o]}function Bt(t){try{if(decodeURIComponent(t).replace(/[^A-Za-z0-9/:]/g,\"\").match(/^\\s*(javascript|vbscript|data(?!:image)):/i))return}catch(t){return null}return t}function Rt(t){return t.replace(et,\"$1\")}function Tt(t,n,e){const r=e._||!1,o=e.u||!1;e._=!0,e.u=!0;const c=t(n,e);return e._=r,e.u=o,c}function Ct(t,n,e){const r=e._||!1,o=e.u||!1;e._=!1,e.u=!0;const c=t(n,e);return e._=r,e.u=o,c}function Dt(t,n,e){return e._=!1,t(n,e)}const Ft=(t,n,e)=>({v:Tt(n,t[1],e)});function Nt(){return{}}function Pt(){return null}function Zt(...t){return t.filter(Boolean).join(\" \")}function Gt(t,n,e){let r=t;const o=n.split(\".\");for(;o.length&&(r=r[o[0]],void 0!==r);)o.shift();return r||e}var Ht;function qt(e,u={}){u.overrides=u.overrides||{},u.slugify=u.slugify||St,u.namedCodesToUnicode=u.namedCodesToUnicode?n({},o,u.namedCodesToUnicode):o;const G=u.createElement||t.createElement;function H(t,e,...r){const o=Gt(u.overrides,`${t}.props`,{});return G(function(t,n){const e=Gt(n,t);return e?\"function\"==typeof e||\"object\"==typeof e&&\"render\"in e?e:Gt(n,`${t}.component`,t):t}(t,u.overrides),n({},e,o,{className:Zt(null==e?void 0:e.className,o.className)||void 0}),...r)}function q(n){let e=!1;u.forceInline?e=!0:u.forceBlock||(e=!1===N.test(n));const r=ct(ot(e?n:`${n.trimEnd().replace(tt,\"\")}\\n\\n`,{_:e}));for(;\"string\"==typeof r[r.length-1]&&!r[r.length-1].trim();)r.pop();if(null===u.wrapper)return r;const o=u.wrapper||(e?\"span\":\"div\");let c;if(r.length>1||u.forceWrapper)c=r;else{if(1===r.length)return c=r[0],\"string\"==typeof c?H(\"span\",{key:\"outer\"},c):c;c=null}return t.createElement(o,{key:\"outer\"},c)}function U(n){const e=n.match(a);return e?e.reduce(function(n,e,o){const c=e.indexOf(\"=\");if(-1!==c){const a=function(t){return-1!==t.indexOf(\"-\")&&null===t.match(E)&&(t=t.replace(B,function(t,n){return n.toUpperCase()})),t}(e.slice(0,c)).trim(),_=function(t){const n=t[0];return('\"'===n||\"'\"===n)&&t.length>=2&&t[t.length-1]===n?t.slice(1,-1):t}(e.slice(c+1).trim()),u=r[a]||a,i=n[u]=function(t,n){return\"style\"===t?n.split(/;\\s?/).reduce(function(t,n){const e=n.slice(0,n.indexOf(\":\"));return t[e.replace(/(-[a-z])/g,t=>t[1].toUpperCase())]=n.slice(e.length+1).trim(),t},{}):\"href\"===t?Bt(n):(n.match(M)&&(n=n.slice(1,n.length-1)),\"true\"===n||\"false\"!==n&&n)}(a,_);\"string\"==typeof i&&(z.test(i)||L.test(i))&&(n[u]=t.cloneElement(q(i.trim()),{key:o}))}else\"style\"!==e&&(n[r[e]||e]=!0);return n},{}):null}const V=[],et={},rt={blockQuote:{t:Ot(i),i:Ht.HIGH,l:(t,n,e)=>({v:n(t[0].replace(s,\"\"),e)}),h:(t,n,e)=>H(\"blockquote\",{key:e.k},n(t.v,e))},breakLine:{t:It(l),i:Ht.HIGH,l:Nt,h:(t,n,e)=>H(\"br\",{key:e.k})},breakThematic:{t:Ot(f),i:Ht.HIGH,l:Nt,h:(t,n,e)=>H(\"hr\",{key:e.k})},codeBlock:{t:Ot(p),i:Ht.MAX,l:t=>({v:t[0].replace(/^ {4}/gm,\"\").replace(/\\n+$/,\"\"),M:void 0}),h:(t,e,r)=>H(\"pre\",{key:r.k},H(\"code\",n({},t.O,{className:t.M?`lang-${t.M}`:\"\"}),t.v))},codeFenced:{t:Ot(d),i:Ht.MAX,l:t=>({O:U(t[3]||\"\"),v:t[4],M:t[2]||void 0,type:\"codeBlock\"})},codeInline:{t:Mt(m),i:Ht.LOW,l:t=>({v:t[2]}),h:(t,n,e)=>H(\"code\",{key:e.k},t.v)},footnote:{t:Ot(h),i:Ht.MAX,l:t=>(V.push({I:t[2],j:t[1]}),{}),h:Pt},footnoteReference:{t:Lt(k),i:Ht.HIGH,l:t=>({v:t[1],B:`#${u.slugify(t[1])}`}),h:(t,n,e)=>H(\"a\",{key:e.k,href:Bt(t.B)},H(\"sup\",{key:e.k},t.v))},gfmTask:{t:Lt(b),i:Ht.HIGH,l:t=>({R:\"x\"===t[1].toLowerCase()}),h:(t,n,e)=>H(\"input\",{checked:t.R,key:e.k,readOnly:!0,type:\"checkbox\"})},heading:{t:Ot(u.enforceAtxHeadings?v:$),i:Ht.HIGH,l:(t,n,e)=>({v:Tt(n,t[2],e),T:u.slugify(t[2]),C:t[1].length}),h:(t,n,e)=>H(`h${t.C}`,{id:t.T,key:e.k},n(t.v,e))},headingSetext:{t:Ot(S),i:Ht.MAX,l:(t,n,e)=>({v:Tt(n,t[1],e),C:\"=\"===t[2]?1:2,type:\"heading\"})},htmlComment:{t:It(A),i:Ht.HIGH,l:()=>({}),h:Pt},image:{t:Mt(bt),i:Ht.HIGH,l:t=>({D:t[1],B:Rt(t[2]),F:t[3]}),h:(t,n,e)=>H(\"img\",{key:e.k,alt:t.D||void 0,title:t.F||void 0,src:Bt(t.B)})},link:{t:Lt(xt),i:Ht.LOW,l:(t,n,e)=>({v:Ct(n,t[1],e),B:Rt(t[2]),F:t[3]}),h:(t,n,e)=>H(\"a\",{key:e.k,href:Bt(t.B),title:t.F},n(t.v,e))},linkAngleBraceStyleDetector:{t:Lt(j),i:Ht.MAX,l:t=>({v:[{v:t[1],type:\"text\"}],B:t[1],type:\"link\"})},linkBareUrlDetector:{t:(t,n)=>n.N?null:Lt(O)(t,n),i:Ht.MAX,l:t=>({v:[{v:t[1],type:\"text\"}],B:t[1],F:void 0,type:\"link\"})},linkMailtoDetector:{t:Lt(I),i:Ht.MAX,l(t){let n=t[1],e=t[1];return _.test(e)||(e=\"mailto:\"+e),{v:[{v:n.replace(\"mailto:\",\"\"),type:\"text\"}],B:e,type:\"link\"}}},orderedList:kt(H,1),unorderedList:kt(H,2),newlineCoalescer:{t:Ot(g),i:Ht.LOW,l:Nt,h:()=>\"\\n\"},paragraph:{t:jt,i:Ht.LOW,l:Ft,h:(t,n,e)=>H(\"p\",{key:e.k},n(t.v,e))},ref:{t:Lt(T),i:Ht.MAX,l:t=>(et[t[1]]={B:t[2],F:t[4]},{}),h:Pt},refImage:{t:Mt(C),i:Ht.MAX,l:t=>({D:t[1]||void 0,P:t[2]}),h:(t,n,e)=>H(\"img\",{key:e.k,alt:t.D,src:Bt(et[t.P].B),title:et[t.P].F})},refLink:{t:Lt(D),i:Ht.MAX,l:(t,n,e)=>({v:n(t[1],e),Z:n(t[0].replace(F,\"\\\\$1\"),e),P:t[2]}),h:(t,n,e)=>et[t.P]?H(\"a\",{key:e.k,href:Bt(et[t.P].B),title:et[t.P].F},n(t.v,e)):H(\"span\",{key:e.k},n(t.Z,e))},table:{t:Ot(R),i:Ht.HIGH,l:At,h:(t,n,e)=>H(\"table\",{key:e.k},H(\"thead\",null,H(\"tr\",null,t.L.map(function(r,o){return H(\"th\",{key:o,style:Et(t,o)},n(r,e))}))),H(\"tbody\",null,t.A.map(function(r,o){return H(\"tr\",{key:o},r.map(function(r,o){return H(\"td\",{key:o,style:Et(t,o)},n(r,e))}))})))},tableSeparator:{t:function(t,n){return n.$?(n._=!0,Z.exec(t)):null},i:Ht.HIGH,l:function(){return{type:\"tableSeparator\"}},h:()=>\" | \"},text:{t:It(Y),i:Ht.MIN,l:t=>({v:t[0].replace(w,(t,n)=>u.namedCodesToUnicode[n]?u.namedCodesToUnicode[n]:t)}),h:t=>t.v},textBolded:{t:Mt(W),i:Ht.MED,l:(t,n,e)=>({v:n(t[2],e)}),h:(t,n,e)=>H(\"strong\",{key:e.k},n(t.v,e))},textEmphasized:{t:Mt(Q),i:Ht.LOW,l:(t,n,e)=>({v:n(t[2],e)}),h:(t,n,e)=>H(\"em\",{key:e.k},n(t.v,e))},textEscaped:{t:Mt(K),i:Ht.HIGH,l:t=>({v:t[1],type:\"text\"})},textMarked:{t:Mt(X),i:Ht.LOW,l:Ft,h:(t,n,e)=>H(\"mark\",{key:e.k},n(t.v,e))},textStrikethroughed:{t:Mt(J),i:Ht.LOW,l:Ft,h:(t,n,e)=>H(\"del\",{key:e.k},n(t.v,e))}};!0!==u.disableParsingRawHTML&&(rt.htmlBlock={t:It(z),i:Ht.HIGH,l(t,n,e){const[,r]=t[3].match(nt),o=new RegExp(`^${r}`,\"gm\"),a=t[3].replace(o,\"\"),_=(u=a,vt.some(t=>t.test(u))?Dt:Tt);var u;const i=t[1].toLowerCase(),s=-1!==c.indexOf(i);e.N=e.N||\"a\"===i;const l=s?t[3]:_(n,a,e);return e.N=!1,{O:U(t[2]),v:l,G:s,H:s?i:t[1]}},h:(t,e,r)=>H(t.H,n({key:r.k},t.O),t.G?t.v:e(t.v,r))},rt.htmlSelfClosing={t:It(L),i:Ht.HIGH,l:t=>({O:U(t[2]||\"\"),H:t[1]}),h:(t,e,r)=>H(t.H,n({},t.O,{key:r.k}))});const ot=function(t){let n=Object.keys(t);function e(r,o){let c=[],a=\"\";for(;r;){let _=0;for(;_<n.length;){const u=n[_],i=t[u],s=i.t(r,o,a);if(s){const t=s[0];r=r.substring(t.length);const n=i.l(s,e,o);null==n.type&&(n.type=u),c.push(n),a=t;break}_++}}return c}return n.sort(function(n,e){let r=t[n].i,o=t[e].i;return r!==o?r-o:n<e?-1:1}),function(t,n){return e(function(t){return t.replace(y,\"\\n\").replace(x,\"\").replace(P,\"    \")}(t),n)}}(rt),ct=(at=function(t){return function(n,e,r){return t[n.type].h(n,e,r)}}(rt),function t(n,e={}){if(Array.isArray(n)){const r=e.k,o=[];let c=!1;for(let r=0;r<n.length;r++){e.k=r;const a=t(n[r],e),_=\"string\"==typeof a;_&&c?o[o.length-1]+=a:null!==a&&o.push(a),c=_}return e.k=r,o}return at(n,t,e)});var at;const _t=q(e);return V.length?H(\"div\",null,_t,H(\"footer\",{key:\"footer\"},V.map(function(t){return H(\"div\",{id:u.slugify(t.j),key:t.j},t.j,ct(ot(t.I,{_:!0})))}))):_t}!function(t){t[t.MAX=0]=\"MAX\",t[t.HIGH=1]=\"HIGH\",t[t.MED=2]=\"MED\",t[t.LOW=3]=\"LOW\",t[t.MIN=4]=\"MIN\"}(Ht||(Ht={}));export default n=>{let{children:r,options:o}=n,c=function(t,n){if(null==t)return{};var e,r,o={},c=Object.keys(t);for(r=0;r<c.length;r++)n.indexOf(e=c[r])>=0||(o[e]=t[e]);return o}(n,e);return t.cloneElement(qt(r,o),c)};export{qt as compiler};\n//# sourceMappingURL=index.modern.js.map\n","import React from \"react\";\nimport Markdown from \"markdown-to-jsx\";\n// @ts-expect-error ¯\\_(ツ)_/¯\nimport { DocgenInfo } from \"@storybook/addon-docs/dist/ts3.9/lib/docgen/types\";\nimport MDXComponents from \"@theme/MDXComponents\";\nimport { useAutoLinkedJsDoc } from \"./component-linking\";\n// import { ApiModel, ApiPackage } from \"@microsoft/api-extractor-model\";\n\n// const apiModel: ApiModel = new ApiModel();\n// language=file-reference\n// const apiPackage: ApiPackage = apiModel.loadPackage(\n//   \"../../../jui/temp/core.api.json\"\n// );\n// console.log(\"apiPackage\", ApiPackage);\n\ntype WithDocGenInfo<T = any> = T & {\n  __docgenInfo?: DocgenInfo;\n};\n/**\n * Renders description (aka Summary) of an exported symbol, from it's jsdoc (tsdoc) comment block.\n * The plan is to use the ApiModel created by @microsoft/api-extractor, but there are issues preventing that at the\n * moment. So we are using a fallback implementation which relies on `react-docgen` babel plugin which adds\n * `__docgetInfo` property to all exports.\n */\nexport const ApiDescription = ({\n  of,\n}: {\n  of:\n    | WithDocGenInfo\n    | {\n        render?: WithDocGenInfo /*for ref forwarding components */;\n      };\n}) => {\n  const docgenInfo = of.render?.__docgenInfo || of.__docgenInfo;\n  if (!docgenInfo?.description) {\n    console.log(\"ApiDescription not found for:\", of);\n    // eslint-disable-next-line no-undef\n    if (process.env.NODE_ENV === \"development\")\n      return (\n        <div style={{ background: \"#ffd7d7\" }}>\n          Could not find API description for:\n          <pre style={{ background: \"none\" }}>\n            {JSON.stringify(of, null, 2)}\n          </pre>\n          See the console.\n        </div>\n      );\n    throw new Error(\"API documentation not found.\");\n  }\n  return (\n    <Markdown options={{ overrides: MDXComponents }}>\n      {useAutoLinkedJsDoc(docgenInfo.description)}\n    </Markdown>\n  );\n};\n","import React, { useEffect, useMemo } from \"react\";\nimport BrowserOnly from \"@docusaurus/BrowserOnly\";\n\nimport darculaTheme from \"../../../jui/themes/darcula.theme.json\";\nimport highContrastTheme from \"../../../jui/themes/HighContrast.theme.json\";\nimport lightTheme from \"../../../jui/themes/intellijlaf.theme.json\";\nimport { Theme, ThemeProvider } from \"../../../jui/src\";\n\nexport type ExampleContextThemeName = \"light\" | \"darcula\" | \"highContrast\";\n\nexport const ExampleContext: React.FC<{\n  themeName?: ExampleContextThemeName;\n  children?: React.ReactNode;\n}> = ({ children, themeName = \"darcula\" }) => {\n  const themeJson = (\n    {\n      light: lightTheme,\n      highContrast: highContrastTheme,\n      darcula: darculaTheme,\n    } as const\n  )[themeName];\n\n  // IMPORTANT: passing a function that returns Theme is crucial in get it working. Otherwise, ThemeProvider will try\n  // to \"merge\" themes, and the end result is an POJO, with prototype link lost.\n  // @ts-expect-error ThemeJson type is not accurate ATM.\n  const theme = useMemo(() => new Theme(themeJson), [themeJson]);\n\n  useFixDocusaurusStyleBleeds();\n  return (\n    <BrowserOnly fallback={<>Loading...</>}>\n      {() => <ThemeProvider theme={theme}>{children}</ThemeProvider>}\n    </BrowserOnly>\n  );\n};\n\n/**\n * TODO: add a surrounding UI for examples, with tools for theme selection for example.\n */\nexport const Example: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => (\n  <ExampleContext>\n    <div\n      // @ts-expect-error: css prop is not working for some reason\n      css={`\n        background: ${({ theme }: { theme: Theme }) =>\n          theme.color(\"*.background\")};\n      `}\n    >\n      {children}\n    </div>\n  </ExampleContext>\n);\n\nexport const withExampleContext = <P extends {}>(\n  Component: React.ComponentType<P>\n) => {\n  function WithExampleContext(props: P) {\n    return (\n      <ExampleContext>\n        <Component {...props} />\n      </ExampleContext>\n    );\n  }\n\n  return WithExampleContext;\n};\n\nconst useFixDocusaurusStyleBleeds = () => {\n  useEffect(() => {\n    const FLAG_CLASSNAME = \"example-context-patch\";\n    if (!document.body.classList.contains(FLAG_CLASSNAME)) {\n      try {\n        undoUseKeyboardNavigation();\n        document.body.classList.add(FLAG_CLASSNAME);\n      } catch (e) {\n        console.error(\"Could not undo useKeyboardNavigation\");\n      }\n    }\n  }, []);\n};\n\n/**\n * Reverts the \"improvement\" [useKeyboardNavigation][1] does :|\n *\n * [1]: https://github.com/facebook/docusaurus/blob/f87a3ead4664b301901c12466cb2c82cd95d141b/packages/docusaurus-theme-common/src/hooks/useKeyboardNavigation.ts#L14\n */\nfunction undoUseKeyboardNavigation() {\n  document\n    .querySelectorAll<HTMLLinkElement>(\"link[rel=stylesheet]\")\n    .forEach((linkEl) => {\n      if (linkEl.sheet) {\n        for (let i = 0; i < linkEl.sheet.cssRules.length; i++) {\n          const rule = linkEl.sheet.cssRules.item(i);\n          if (\n            rule?.cssText?.startsWith(\"body:not(.navigation-with-keyboard)\")\n          ) {\n            linkEl.sheet.deleteRule(i); // We can change the rule to only disable it within the boundary of example\n          }\n        }\n      }\n    });\n}\n","import React from \"react\";\n\n/**\n * To make relation between things in jui and original reference impl in Intellij Platform\n */\nexport const RefToIntellijPlatform = ({\n  path,\n  name,\n}: {\n  path: string;\n  name?: string;\n}) => {\n  return (\n    // TODO: make it some nice box with an icon and a hint text which says something like \"Intellij Platform\" or\n    //  \"Reference\" or something better :D\n    <a\n      href={`https://github.com/JetBrains/intellij-community/blob/master/${path}`}\n      target=\"_blank\"\n    >\n      {name || path.split(\"/\").pop()}\n    </a>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport useDocusaurusContext from \"@docusaurus/useDocusaurusContext\";\nimport { GlobalPluginData } from \"@docusaurus/plugin-content-docs/lib/client\";\nimport { parse } from \"jsdoc-parse-plus\";\nimport Link from \"@docusaurus/Link\";\n\nfunction useDocs() {\n  return (\n    useDocusaurusContext().globalData[\"docusaurus-plugin-content-docs\"]\n      .default as GlobalPluginData\n  ).versions.find((version) => version.name === \"current\")?.docs;\n}\n\n/**\n * Returns a mapping from component names to documentation pages. We don't have a proper API\n * Docs section now, so not all components have a corresponding page. But it's a middle ground solution\n * until a more structured API documentation page is added, and mdx files are limited to guides, introductions, etc.\n */\nexport function useComponentLinkMap(): { [componentName: string]: string } {\n  const docs = useDocs();\n  return useMemo(() => {\n    const linkMap: Record<string, string> = {};\n    docs?.forEach((doc) => {\n      // maybe change the criteria based on sidebar later, if components are moved to a dedicated sidebar\n      const componentName = doc.id.match(/components\\/(.*)/)?.[1];\n      if (componentName) {\n        linkMap[componentName] = doc.path;\n      }\n    });\n    return linkMap;\n  }, [docs]);\n}\n\n/**\n * A replacement for `code` elements in documentation, which renders a link\n * to the corresponding page, if the code snippet exactly matches one of\n * the components.\n */\nexport function InlineCode({ children }: { children: string }) {\n  const link = useComponentLinkMap()[children];\n  if (link) {\n    return <Link to={link}>{children}</Link>;\n  }\n  return <code>{children}</code>;\n}\n\n/**\n * Converts links in the form of \"{\\@link SomeComponent}\" to Markdown link\n * format (\"[SomeComponent](./path/to/component/page)\"), which otherwise will\n * not be rendered as a link, due to missing url.\n */\nexport function useAutoLinkedJsDoc(content: string) {\n  const componentLinkMap = useComponentLinkMap();\n  const comment = toCommentBlock(content);\n  return (\n    parse(comment, [], (link) => {\n      const path = componentLinkMap[link.url];\n      if (path) {\n        return `[${link.text}](${path})`;\n      }\n      return `\\`${link.text}\\``;\n    }).description as any\n  )?.value;\n}\n\nconst toCommentBlock = (str: string) =>\n  [\"/**\", ...str.split(\"\\n\").map((line) => `* ${line}`), \"*/\"].join(\"\\n\");\n","import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledSvg = styled.svg`\n  position: absolute;\n  width: 24px;\n  left: 50%;\n  bottom: 1rem;\n  transform: translate(-50%, 0) rotate(180deg);\n`;\n\nconst StyledExpandButton = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 50%;\n  bottom: 0;\n  background: linear-gradient(0deg, rgba(255, 255, 255, 1), transparent);\n  cursor: pointer;\n  ${StyledSvg} {\n    opacity: 0;\n    transition: opacity 0.3s;\n  }\n  &:hover ${StyledSvg} {\n    opacity: 1;\n  }\n`;\nconst StyledContainer = styled.div<{ expanded: boolean }>`\n  position: relative;\n  max-height: ${({ expanded }) => (expanded ? undefined : \"200px\")};\n`;\n\nexport function Expandable({\n  children,\n  expanded,\n  onExpand,\n  isExpandable,\n  setIsExpandable,\n}: {\n  children: React.ReactNode;\n  expanded: boolean;\n  onExpand: () => void;\n  isExpandable: boolean;\n  setIsExpandable: (isExpandable: boolean) => void;\n}) {\n  const ref = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (ref.current) {\n      const expandable = ref.current?.scrollHeight > ref.current?.offsetHeight;\n      if (expandable !== isExpandable) {\n        setIsExpandable(expandable);\n      }\n    }\n  });\n  return (\n    <StyledContainer ref={ref} expanded={expanded}>\n      {children}\n      {!expanded && isExpandable && (\n        <StyledExpandButton onClick={onExpand}>\n          <StyledSvg viewBox=\"0 0 50 50\">\n            <path\n              fill=\"none\"\n              stroke=\"#000\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M-20 10 0-10l20 20\"\n              transform=\"translate(25 25)\"\n            />\n          </StyledSvg>\n        </StyledExpandButton>\n      )}\n    </StyledContainer>\n  );\n}\n","/**\n * NOTE: this file is copied from Docusaurus repo, to customize the live code blocks UI, since the exported\n * functionality doesn't allow for the needed customizations.\n * Original file: https://github.com/facebook/docusaurus/blob/main/packages/docusaurus-theme-live-codeblock/src/theme/Playground/index.tsx\n */\n\nimport React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport useIsBrowser from \"@docusaurus/useIsBrowser\";\nimport { LiveEditor, LiveError, LivePreview, LiveProvider } from \"react-live\";\nimport Translate from \"@docusaurus/Translate\";\nimport BrowserOnly from \"@docusaurus/BrowserOnly\";\nimport {\n  ErrorBoundaryTryAgainButton,\n  usePrismTheme,\n} from \"@docusaurus/theme-common\";\nimport ErrorBoundary from \"@docusaurus/ErrorBoundary\";\n\nimport type { Props } from \"@theme/Playground\";\nimport type { Props as ErrorProps } from \"@theme/Error\";\n\nimport styles from \"@docusaurus/theme-live-codeblock/lib/theme/Playground/styles.module.css\";\nimport { Expandable } from \"./Expandable\";\nimport {\n  PlatformIcon,\n  IconButton,\n  ThemeProvider,\n  Theme,\n  ActionTooltip,\n  TooltipTrigger,\n} from \"@intellij-platform/core\";\nimport lightThemeJson from \"@intellij-platform/core/themes/intellijlaf.theme.json\";\n\nfunction Header({\n  children,\n  icons,\n}: {\n  children: React.ReactNode;\n  icons?: React.ReactNode;\n}) {\n  return (\n    <div className={clsx(styles.playgroundHeader)} style={{ display: \"flex\" }}>\n      <span style={{ flex: 1 }}>{children}</span>\n      {icons}\n    </div>\n  );\n}\n\nfunction LivePreviewLoader() {\n  // Is it worth improving/translating?\n  return <div>Loading...</div>;\n}\n\nfunction ErrorFallback({ error, tryAgain }: ErrorProps): JSX.Element {\n  return (\n    <div className={styles.errorFallback}>\n      <p>{error.message}</p>\n      <ErrorBoundaryTryAgainButton onClick={tryAgain} />\n    </div>\n  );\n}\n\nfunction Preview() {\n  // No SSR for the live preview\n  // See https://github.com/facebook/docusaurus/issues/5747\n  return (\n    <BrowserOnly fallback={<LivePreviewLoader />}>\n      {() => (\n        <>\n          <ErrorBoundary fallback={(params) => <ErrorFallback {...params} />}>\n            <LivePreview />\n          </ErrorBoundary>\n          <LiveError />\n        </>\n      )}\n    </BrowserOnly>\n  );\n}\n\nfunction ResultWithHeader() {\n  return (\n    <>\n      <Header>\n        <Translate\n          id=\"theme.Playground.result\"\n          description=\"The result label of the live codeblocks\"\n        >\n          Result\n        </Translate>\n      </Header>\n      {/* https://github.com/facebook/docusaurus/issues/5747 */}\n      <div className={styles.playgroundPreview}>\n        <Preview />\n      </div>\n    </>\n  );\n}\n\nfunction ThemedLiveEditor({\n  expanded,\n  isExpandable,\n  onExpand,\n  setIsExpandable,\n}: {\n  expanded: boolean;\n  isExpandable: boolean;\n  onExpand: () => void;\n  setIsExpandable: (expandable: boolean) => void;\n}) {\n  const isBrowser = useIsBrowser();\n  return (\n    <Expandable\n      expanded={expanded}\n      isExpandable={isExpandable}\n      onExpand={onExpand}\n      setIsExpandable={setIsExpandable}\n    >\n      <LiveEditor\n        // We force remount the editor on hydration,\n        // otherwise dark prism theme is not applied\n        key={String(isBrowser)}\n        className={styles.playgroundEditor}\n      />\n    </Expandable>\n  );\n}\n\nfunction EditorWithHeader() {\n  const [expanded, setExpanded] = useState(false);\n  const [expandable, setExpandable] = useState(false);\n  return (\n    <>\n      <Header\n        icons={\n          <ThemeProvider theme={new Theme(lightThemeJson as any)}>\n            {(expanded || expandable) && (\n              <TooltipTrigger\n                tooltip={\n                  <ActionTooltip\n                    actionName={expanded ? \"Collapse code\" : \"Expand code\"}\n                  />\n                }\n              >\n                <IconButton\n                  onPress={() => setExpanded((expanded) => !expanded)}\n                >\n                  <PlatformIcon\n                    icon={\n                      expanded ? \"actions/collapseall\" : \"actions/expandall\"\n                    }\n                  />\n                </IconButton>\n              </TooltipTrigger>\n            )}\n          </ThemeProvider>\n        }\n      >\n        <Translate\n          id=\"theme.Playground.liveEditor\"\n          description=\"The live editor label of the live codeblocks\"\n        >\n          Live Editor\n        </Translate>\n      </Header>\n      <ThemedLiveEditor\n        expanded={expanded}\n        onExpand={() => setExpanded(true)}\n        isExpandable={expandable}\n        setIsExpandable={setExpandable}\n      />\n    </>\n  );\n}\n\nexport default function Playground({\n  children,\n  transformCode,\n  ref,\n  ...props\n}: Props): JSX.Element {\n  const prismTheme = usePrismTheme();\n\n  const noInline = props.metastring?.includes(\"noInline\") ?? false;\n\n  return (\n    <>\n      <div ref={ref} className={styles.playgroundContainer}>\n        <LiveProvider\n          code={children.replace(/\\n$/, \"\")}\n          noInline={noInline}\n          transformCode={transformCode ?? ((code) => `${code};`)}\n          theme={prismTheme}\n          {...props}\n        >\n          <ResultWithHeader />\n          <EditorWithHeader />\n        </LiveProvider>\n      </div>\n    </>\n  );\n}\n","import { styled } from \"../styled\";\n\nexport const SpeedSearchContainer = styled.div`\n  position: relative;\n  overflow: visible;\n  max-height: 100%;\n`;\n","import styled from \"styled-components\";\nimport { SpeedSearchContainer } from \"../SpeedSearch/SpeedSearchContainer\";\n\nexport const CollectionSpeedSearchContainer = styled(SpeedSearchContainer)<{\n  fillAvailableSpace?: boolean;\n}>`\n  display: flex;\n  flex-direction: column;\n  flex: ${({ fillAvailableSpace }) => (fillAvailableSpace ? 1 : undefined)};\n`;\n","import { ListState } from \"@react-stately/list\";\nimport { SelectionManager } from \"@react-stately/selection\";\nimport { HTMLProps, Key, RefObject } from \"react\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { ListKeyboardDelegate } from \"@react-aria/selection\";\nimport {\n  CollectionSpeedSearchContextValue,\n  useCollectionSpeedSearch,\n} from \"@intellij-platform/core/CollectionSpeedSearch\";\nimport { SpeedSearchProps } from \"@intellij-platform/core/SpeedSearch\";\nimport { SpeedSearchPopupProps } from \"../../SpeedSearch/SpeedSearchPopup\";\nimport { TextRange } from \"../../TextRange\";\nimport { ListProps, useList } from \"../useList\";\n\ninterface UseListProps\n  extends Omit<ListProps, \"keyboardDelegate\" | \"disallowTypeAhead\">,\n    Pick<SpeedSearchProps, \"keepSearchActiveOnBlur\"> {}\n\nexport function useSpeedSearchList<T>(\n  props: UseListProps,\n  listState: ListState<T>,\n  ref: RefObject<HTMLElement>\n): ReturnType<typeof useList<T>> & {\n  searchPopupProps: SpeedSearchPopupProps;\n  focused: boolean;\n  selectionManager: SelectionManager;\n  speedSearchContextValue: CollectionSpeedSearchContextValue;\n  matches: Map<Key, TextRange[]>;\n} {\n  const { keepSearchActiveOnBlur } = props;\n\n  const {\n    speedSearch,\n    selectionManager,\n    keyboardDelegate,\n    containerProps: speedSearchContainerProps,\n    searchPopupProps,\n    speedSearchContextValue,\n  } = useCollectionSpeedSearch({\n    collection: listState.collection,\n    selectionManager: listState.selectionManager,\n    keyboardDelegate: new ListKeyboardDelegate(\n      listState.collection,\n      listState.disabledKeys,\n      ref\n    ),\n    keepSearchActiveOnBlur,\n    ref,\n  });\n  const { listProps, ...otherOutputs } = useList(\n    {\n      ...props,\n      disallowTypeAhead: true,\n      keyboardDelegate,\n    },\n    { ...listState, selectionManager },\n    ref\n  );\n\n  return {\n    ...otherOutputs,\n    listProps: mergeProps(listProps, speedSearchContainerProps),\n    matches: speedSearch.matches,\n    selectionManager,\n    speedSearchContextValue,\n    searchPopupProps,\n  };\n}\n","import React, { ForwardedRef } from \"react\";\nimport { AriaListBoxProps } from \"@react-types/listbox\";\nimport { filterDOMProps, useObjectRef } from \"@react-aria/utils\";\nimport { Virtualizer } from \"@react-aria/virtualizer\";\nimport { Node } from \"@react-types/shared\";\n\nimport {\n  CollectionSpeedSearchContainer,\n  CollectionSpeedSearchContext,\n  SpeedSearchItemHighlightsProvider,\n} from \"@intellij-platform/core/CollectionSpeedSearch\";\nimport {\n  SpeedSearch,\n  SpeedSearchPopup,\n  SpeedSearchProps,\n} from \"@intellij-platform/core/SpeedSearch\";\nimport { CollectionRefProps } from \"@intellij-platform/core/Collections/useCollectionRef\";\n\nimport { StyledList } from \"../StyledList\";\nimport { ListProps } from \"../List\";\nimport { useListState } from \"../useListState\";\nimport { ListItem } from \"../ListItem\";\nimport { ListContext } from \"../ListContext\";\nimport { useListVirtualizer } from \"../useListVirtualizer\";\nimport { useSpeedSearchList } from \"./useSpeedSearchList\";\n\nexport interface SpeedSearchListProps<T extends object>\n  extends ListProps<T>,\n    SpeedSearchProps {}\n\n/**\n * List component with {@link SpeedSearch}, which is a more advanced version of typeahead.\n */\nexport const SpeedSearchList = React.forwardRef(function SpeedSearchList<\n  T extends object\n>(\n  {\n    allowEmptySelection = false,\n    fillAvailableSpace = false,\n    estimatedItemHeight,\n    ...inputProps\n  }: SpeedSearchListProps<T>,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n) {\n  const props: AriaListBoxProps<T> & CollectionRefProps = {\n    ...inputProps,\n    disallowEmptySelection: !allowEmptySelection,\n  };\n  const ref = useObjectRef(forwardedRef);\n  const state = useListState(props);\n\n  const { listProps, listContext, searchPopupProps, speedSearchContextValue } =\n    useSpeedSearchList({ ...props, isVirtualized: true }, state, ref);\n\n  const {\n    virtualizerProps: { children: renderNode, ...virtualizerProps },\n  } = useListVirtualizer({\n    state,\n    estimatedItemHeight,\n    renderItem: (item) => (\n      <SpeedSearchItemHighlightsProvider itemKey={item.key}>\n        <ListItem key={item.key} item={item} />\n      </SpeedSearchItemHighlightsProvider>\n    ),\n  });\n\n  return (\n    <ListContext.Provider value={listContext}>\n      <CollectionSpeedSearchContainer fillAvailableSpace={fillAvailableSpace}>\n        <CollectionSpeedSearchContext.Provider value={speedSearchContextValue}>\n          <SpeedSearchPopup {...searchPopupProps} />\n          <StyledList\n            as={Virtualizer<Node<any>, any>}\n            ref={ref}\n            fillAvailableSpace={fillAvailableSpace}\n            {...filterDOMProps(props, { labelable: true })}\n            {...virtualizerProps}\n            {...listProps}\n          >\n            {renderNode}\n          </StyledList>\n        </CollectionSpeedSearchContext.Provider>\n      </CollectionSpeedSearchContainer>\n    </ListContext.Provider>\n  );\n});\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n/**\n * Green circle indicator used with icons.\n * Reference: platform/execution/src/com/intellij/execution/runners/IndicatorIcon.kt\n */\nexport const StyledIconLiveIndicator = styled.span`\n  position: absolute;\n  width: 4px;\n  height: 4px;\n  border-radius: 1000px;\n  background: #00ff00;\n  box-shadow: 0.5px 0.5px 1px 1px rgba(0, 0, 0, 0.4);\n  bottom: 1px;\n  right: 1px;\n`;\n","import { mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport React, { ForwardedRef, HTMLProps } from \"react\";\nimport { SpeedSearchContainer } from \"./SpeedSearchContainer\";\nimport { SpeedSearchPopup } from \"./SpeedSearchPopup\";\nimport {\n  SpeedSearchStateProps,\n  useSpeedSearch,\n  useSpeedSearchState,\n} from \"./useSpeedSearch\";\n\ninterface Props extends SpeedSearchStateProps {\n  children: React.ReactNode;\n  keepSearchActiveOnBlur?: boolean;\n  match?: boolean;\n  className?: string;\n  containerProps?: Omit<HTMLProps<HTMLDivElement>, \"as\" | \"ref\">;\n}\n\n// Maybe no need for this component, now that almost everything is moved to hooks, and a couple of\n// styled components. Then useSpeedSearchState can also be moved to useSpeedSearch\nexport const SpeedSearch = React.forwardRef(function SpeedSearch(\n  {\n    children,\n    keepSearchActiveOnBlur = false,\n    className,\n    containerProps = {},\n    match,\n    ...otherProps\n  }: Props,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n) {\n  const ref = useObjectRef(forwardedRef);\n  const speedSearchState = useSpeedSearchState(otherProps);\n  const { containerProps: speedSearchContainerProps } = useSpeedSearch(\n    { keepSearchActiveOnBlur: keepSearchActiveOnBlur },\n    speedSearchState,\n    ref\n  );\n\n  return (\n    <SpeedSearchContainer\n      /* We might as well use useFocusable. The return type was troublesome in the first try. */\n      tabIndex={-1}\n      ref={ref}\n      {...mergeProps(containerProps, speedSearchContainerProps, { className })}\n    >\n      <SpeedSearchPopup active={speedSearchState.active} match={match}>\n        {speedSearchState.searchTerm}\n      </SpeedSearchPopup>\n      {children}\n    </SpeedSearchContainer>\n  );\n});\n","import React, { CSSProperties, ForwardedRef, RefObject } from \"react\";\nimport { Node } from \"@react-types/shared\";\nimport { Virtualizer } from \"@react-aria/virtualizer\";\nimport { StyledTree } from \"./StyledTree\";\nimport { TreeRefValue } from \"./useTreeRef\";\nimport { TreeNode } from \"./TreeNode\";\nimport { TreeContext } from \"./TreeContext\";\nimport { useTreeState, TreeProps as StatelyTreeProps } from \"./useTreeState\";\nimport { SelectableTreeProps, useSelectableTree } from \"./useSelectableTree\";\nimport { useTreeVirtualizer } from \"./useTreeVirtualizer\";\nimport { CollectionCacheInvalidationProps } from \"@intellij-platform/core/Collections/useCollectionCacheInvalidation\";\nimport {\n  CollectionRefProps,\n  useCollectionRef,\n} from \"@intellij-platform/core/Collections/useCollectionRef\";\nimport { filterDOMProps, useObjectRef } from \"@react-aria/utils\";\n\nexport interface TreeProps<T extends object>\n  extends Omit<StatelyTreeProps<T>, \"disallowEmptySelection\">,\n    CollectionCacheInvalidationProps,\n    CollectionRefProps,\n    Omit<SelectableTreeProps<T>, \"keyboardDelegate\" | \"isVirtualized\"> {\n  fillAvailableSpace?: boolean;\n  /**\n   * When true, shows the tree in focused style, even when it's not focused. A common use case is when the tree\n   * is virtually focused. i.e. the focus is physically on some other element (like a search input) which handles\n   * keyboard events as if the tree was focused.\n   */\n  showAsFocused?: boolean;\n  treeRef?: RefObject<TreeRefValue>;\n\n  className?: string;\n  style?: CSSProperties;\n}\n\n/**\n * TODO:\n *  - Match select all behaviour. Currently, `getSelectAllKeys` in `SelectionManager` returns\n *   all nested keys too. But it's not aligned with Tree implementation in Intellij Platform. And\n *   beside from that, it seems to be a little inconsistent in some edge cases where you select all,\n *   and then deselect a node. Then all of a sudden, all collapsed nested keys are no longer selected.\n */\nexport const Tree = React.forwardRef(\n  <T extends object>(\n    {\n      fillAvailableSpace = false,\n      treeRef,\n      style,\n      className,\n      ...props\n    }: TreeProps<T>,\n    forwardedRef: ForwardedRef<HTMLDivElement>\n  ) => {\n    const state = useTreeState(props, treeRef);\n    useCollectionRef(props, state);\n    const ref = useObjectRef(forwardedRef);\n\n    const { treeProps, treeContext } = useSelectableTree(\n      {\n        ...props,\n        isVirtualized: true,\n      },\n      state,\n      ref\n    );\n    const { virtualizerProps } = useTreeVirtualizer({ state });\n\n    return (\n      <TreeContext.Provider value={treeContext}>\n        <StyledTree\n          as={Virtualizer<Node<any>, unknown>}\n          ref={ref}\n          fillAvailableSpace={fillAvailableSpace}\n          {...virtualizerProps}\n          {...treeProps}\n          {...filterDOMProps(props, { labelable: true })}\n          style={style}\n          className={className}\n        >\n          {(itemType: string, item: Node<any>) => (\n            <TreeNode key={item.key} item={item as Node<T>} />\n          )}\n        </StyledTree>\n      </TreeContext.Provider>\n    );\n  }\n);\n","import React, { useRef } from \"react\";\nimport { AutoHoverPlatformIcon } from \"@intellij-platform/core/Icon\";\nimport { useProgressBarPauseIconButton } from \"./ProgressBar\";\n\ninterface ProgressBarPauseButtonProps {\n  /**\n   * Whether progress is paused.\n   */\n  paused: boolean;\n  /**\n   * Called when progress is paused or resumed.\n   * @param paused `true` when progress is being paused. `false` when resumed.\n   */\n  onPausedChange: (paused: boolean) => void | Promise<unknown>;\n\n  /**\n   * whether small icon should be used.\n   */\n  small?: boolean;\n}\n\n/**\n * Pause/Resume icon button for progress bar, to be used in {@link ProgressBarProps#button}.\n */\nexport const ProgressBarPauseButton = ({\n  paused,\n  onPausedChange,\n  small,\n}: ProgressBarPauseButtonProps) => {\n  const ref = useRef<HTMLSpanElement>(null);\n  const { buttonProps } = useProgressBarPauseIconButton(\n    {\n      onPress: () => onPausedChange(!paused),\n      hoverTooltip: paused ? \"Resume\" : \"Pause\",\n      paused,\n    },\n    ref\n  );\n  return (\n    <AutoHoverPlatformIcon\n      {...buttonProps}\n      icon={\n        paused\n          ? `process/progressResume${small ? \"Small\" : \"\"}.svg`\n          : `process/progressPause${small ? \"Small\" : \"\"}.svg`\n      }\n    />\n  );\n};\n","import React from \"react\";\nimport {\n  AriaPopoverProps,\n  DismissButton,\n  Overlay,\n  usePopover,\n} from \"@react-aria/overlays\";\nimport { OverlayTriggerState } from \"@react-stately/overlays\";\n\nimport { WINDOW_SHADOW } from \"@intellij-platform/core/style-constants\";\n\nimport { styled } from \"../styled\";\n\nexport interface PopoverProps extends Omit<AriaPopoverProps, \"popoverRef\"> {\n  children: React.ReactNode;\n  state: OverlayTriggerState;\n}\n\nconst StyledPopover = styled.div`\n  box-sizing: border-box;\n  // not checked if there should be a better substitute for * in the following colors. Maybe \"Component\"?\n  background-color: ${({ theme }) => theme.color(\"*.background\")};\n  color: ${({ theme }) => theme.color(\"*.foreground\")};\n  outline: none; // Focus will be reflected in header. No need for outline or any other focus style on the container\n  ${WINDOW_SHADOW}; // FIXME: OS-dependant style?\n`;\nexport function Popover({\n  children,\n  state,\n  offset = 8,\n  ...props\n}: PopoverProps) {\n  const popoverRef = React.useRef(null);\n  const { popoverProps } = usePopover(\n    {\n      ...props,\n      offset,\n      popoverRef,\n    },\n    state\n  );\n\n  return (\n    <Overlay>\n      {/* Rendering underlay doesn't seem necessary based on the reference impl */}\n      <StyledPopover {...popoverProps} ref={popoverRef}>\n        <DismissButton onDismiss={state.close} />\n        {children}\n        <DismissButton onDismiss={state.close} />\n      </StyledPopover>\n    </Overlay>\n  );\n}\n","import React, { useRef } from \"react\";\nimport {\n  AriaListBoxOptions,\n  useListBox,\n  useListBoxSection,\n  useOption,\n} from \"@react-aria/listbox\";\nimport { ListState } from \"@react-stately/list\";\nimport { Node } from \"@react-types/shared\";\n\nimport { StyledListItem } from \"@intellij-platform/core/List/StyledListItem\";\nimport { StyledList } from \"@intellij-platform/core/List/StyledList\";\nimport { StyledVerticalSeparator } from \"@intellij-platform/core/StyledSeparator\";\nimport { styled } from \"@intellij-platform/core/styled\";\n\nexport function StatelessListBox<T extends object>({\n  state,\n  minWidth,\n  ...props\n}: AriaListBoxOptions<T> & {\n  state: ListState<T>;\n  minWidth?: number;\n}) {\n  const ref = useRef(null);\n  const { listBoxProps, labelProps } = useListBox(props, state, ref);\n\n  return (\n    <>\n      <div {...labelProps}>{props.label}</div>\n      <StyledList {...listBoxProps} ref={ref} style={{ minWidth }}>\n        {[...state.collection].map((item) =>\n          item.type === \"section\" ? (\n            <ListBoxSection key={item.key} section={item} state={state} />\n          ) : (\n            <Option key={item.key} item={item} state={state} />\n          )\n        )}\n      </StyledList>\n    </>\n  );\n}\n\nfunction Option<T extends object>({\n  item,\n  state,\n}: {\n  item: Node<T>;\n  state: ListState<T>;\n}) {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const { optionProps } = useOption({ key: item.key }, state, ref);\n\n  return (\n    <StyledListItem\n      {...optionProps}\n      ref={ref}\n      disabled={state.disabledKeys.has(item.key)}\n      selected={state.selectionManager.focusedKey === item.key}\n      containerFocused\n    >\n      {item.rendered}\n    </StyledListItem>\n  );\n}\n\nconst StyledSectionHeading = styled.div`\n  font-size: 0.6875rem;\n  padding: 0 0.5rem;\n  color: ${({ theme }) => theme.commonColors.inactiveTextColor}; // not verified\n`;\n\nconst StyledSection = styled.div`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n`;\n\nfunction ListBoxSection<T extends object>({\n  section,\n  state,\n}: {\n  section: Node<T>;\n  state: ListState<T>;\n}) {\n  let { itemProps, headingProps, groupProps } = useListBoxSection({\n    heading: section.rendered,\n    \"aria-label\": section[\"aria-label\"],\n  });\n\n  // If the section is not the first, add a separator element to provide visual separation.\n  // The heading is rendered inside an <li> element, which contains\n  // a <ul> with the child items.\n  return (\n    <>\n      {section.key !== state.collection.getFirstKey() && (\n        <StyledVerticalSeparator role=\"presentation\" />\n      )}\n      <li {...itemProps}>\n        {section.rendered && (\n          <StyledSectionHeading {...headingProps}>\n            {section.rendered}\n          </StyledSectionHeading>\n        )}\n        <StyledSection {...groupProps}>\n          {[\n            ...(state.collection.getChildren?.(section.key) ??\n              section.childNodes),\n          ].map((node) => (\n            <Option key={node.key} item={node} state={state} />\n          ))}\n        </StyledSection>\n      </li>\n    </>\n  );\n}\n","import React, { CSSProperties, ForwardedRef, forwardRef } from \"react\";\nimport { AriaSelectProps, useSelect } from \"@react-aria/select\";\nimport { useObjectRef } from \"@react-aria/utils\";\nimport { useSelectState } from \"@react-stately/select\";\n\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { Label } from \"@intellij-platform/core/Label\";\n\nimport { PlatformIcon } from \"../Icon\";\nimport { BareButton } from \"../Button\";\nimport { Popover } from \"../Overlay\";\nimport { StatelessListBox } from \"./StatelessListBox\";\n\nexport interface DropdownProps<T extends object> extends AriaSelectProps<T> {\n  labelPlacement?: LabelPlacement;\n  className?: string;\n  style?: CSSProperties;\n}\n\n// NOTE: LabelPlacement, StyledLabelContainer and StyledLabel copied from InputField and can be made reusable.\ntype LabelPlacement = \"above\" | \"before\";\nconst StyledLabelContainer = styled.div<{ labelPlacement?: LabelPlacement }>`\n  display: inline-flex;\n  flex-direction: ${({ labelPlacement }) =>\n    labelPlacement === \"above\" ? \"column\" : \"row\"};\n  align-items: start;\n  gap: 0.375rem;\n`;\n\nconst StyledLabel = styled(Label)`\n  margin-top: 0.25rem;\n  line-height: 1.2;\n`;\n\nconst StyledDropdownTrigger = styled.button<{\n  disabled?: boolean;\n  invalid?: boolean;\n}>`\n  box-sizing: border-box;\n  display: inline-flex;\n  align-items: center;\n  height: 1.5rem;\n  background: ${({ theme }) => theme.color(\"ComboBox.nonEditableBackground\")};\n  color: ${({ theme, disabled }) =>\n    disabled\n      ? theme.color(\"*.disabledForeground\")\n      : theme.color(\"*.foreground\")};\n  border: 1px solid\n    ${({ theme, disabled, invalid }) =>\n      theme.commonColors.border({\n        disabled,\n        validationState: invalid ? \"error\" : \"valid\",\n      })};\n  // The focus style is applied unconditionally in the reference impl, so no use of focus-visible or js-based focus visible detection\n\n  &:focus,\n  &.is-focus {\n    border-color: ${({ theme, invalid }) =>\n      theme.commonColors.border({\n        focused: true,\n        validationState: invalid ? \"error\" : \"valid\",\n      })};\n    outline: none;\n    box-shadow: 0 0 0 0.125rem\n      ${({ theme, invalid }) =>\n        theme.commonColors.focusRing({\n          validationState: invalid ? \"error\" : \"valid\",\n          focused: true,\n        })};\n  }\n\n  border-radius: ${({ theme }) => theme.borderRadius.default}px;\n  padding: ${({ theme }) =>\n    theme.inset(\"ComboBox.padding\") ?? \"1px 6px 1px 6px\"};\n`;\n\nconst StyledDropdownValue = styled.span`\n  flex: 1;\n  text-align: initial;\n  white-space: nowrap;\n`;\n\nconst StyledDropdownArrowIcon = styled(PlatformIcon).attrs({\n  \"aria-hidden\": \"true\",\n})`\n  // NOTE: \"ArrowButton.nonEditableBackground\" theme key is used in the reference impl, but it doesn't seem necessary to allow\n  // for a separate arrow background in Dropdown (aka non-editable combobox), since the arrow is not really a\n  // separate button, but a visual indicator for the whole trigger. Also there is no mention of it in designs\n  // There is also separate theme properties for color and disabled color, but inheriting it (via currentColor)\n  // makes more sense\n  padding-left: 5px;\n  * {\n    fill: currentColor;\n  }\n`;\n\nexport const Dropdown = forwardRef(\n  <T extends object>(\n    { labelPlacement, style, className, ...props }: DropdownProps<T>,\n    forwardedRef: ForwardedRef<HTMLButtonElement>\n  ): React.JSX.Element => {\n    const ref = useObjectRef(forwardedRef);\n    const state = useSelectState(props);\n    const { menuProps, labelProps, triggerProps, valueProps, isInvalid } =\n      useSelect(props, state, ref);\n\n    // minWidth is not kept in the state, assuming it's not needed, considering the width is expected to be\n    // stable when the popover opens.\n    const minWidth = ref.current\n      ? ref.current?.offsetWidth + 2 /* for box shadow*/\n      : undefined;\n\n    return (\n      <StyledLabelContainer\n        labelPlacement={labelPlacement}\n        className={className}\n        style={style}\n      >\n        {/* probably no need for HiddenSelect as auto-filling doesn't seem relevant for applications using this library */}\n        {props.label && (\n          <StyledLabel {...labelProps}>{props.label}</StyledLabel>\n        )}\n        <BareButton {...triggerProps} ref={ref}>\n          <StyledDropdownTrigger\n            invalid={isInvalid}\n            className={state.isOpen ? \"is-focus\" : \"\"}\n          >\n            <StyledDropdownValue {...valueProps}>\n              {state.selectedItem?.rendered}\n            </StyledDropdownValue>\n            <StyledDropdownArrowIcon\n              disabled={props.isDisabled}\n              size={20}\n              icon=\"general/arrowDown.svg\"\n            />\n          </StyledDropdownTrigger>\n        </BareButton>\n        {state.isOpen && (\n          <Popover\n            state={state}\n            triggerRef={ref}\n            placement=\"bottom start\"\n            containerPadding={0}\n            offset={2}\n            crossOffset={-1}\n          >\n            <StatelessListBox\n              {...menuProps}\n              state={state}\n              minWidth={minWidth}\n            />\n          </Popover>\n        )}\n      </StyledLabelContainer>\n    );\n  }\n);\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as juiComponents from \"@intellij-platform/core\";\nimport darculaThemeJson from \"@intellij-platform/core/themes/darcula.theme.json\";\nimport lightThemeJson from \"@intellij-platform/core/themes/intellijlaf.theme.json\";\nimport highContrastThemeJson from \"@intellij-platform/core/themes/HighContrast.theme.json\";\n\nconst LazyExampleApp = React.lazy(() => import(\"jui-example-app/src/App\"));\nconst ExampleApp = () => (\n  // Because ReactLive doesn't render a Suspense around what it renders.\n  <React.Suspense fallback=\"loading\">\n    <LazyExampleApp />\n  </React.Suspense>\n);\nimport React from \"react\";\n\n// Add react-live imports you need here\nconst ReactLiveScope = {\n  React,\n  ...React,\n  ...juiComponents,\n  ExampleApp,\n  darculaThemeJson,\n  lightThemeJson,\n  highContrastThemeJson,\n};\n\nexport default ReactLiveScope;\n","// extracted by mini-css-extract-plugin\nexport default {\"playground\":\"playground_whuD\",\"noPadding\":\"noPadding_tWI2\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from \"react\";\nimport { useTheme } from \"styled-components\";\nimport Playground from \"./Playground\";\nimport ReactLiveScope from \"@theme/ReactLiveScope\";\nimport CodeBlock from \"@theme-init/CodeBlock\";\nimport clsx from \"clsx\";\nimport styles from \"../Playground/style-overrides.module.css\";\n\nconst withLiveEditor = (Component) => {\n  function WithLiveEditor(props) {\n    if (props.live) {\n      // idea: We can support playground with alternative sources, where each of them will show up as a button\n      // below the default playground. Clicking on buttons will switch to that example. There can be a simple syntax\n      // for embedding multiple sources in one code block which then will be converted into examples here.\n      return <Playground scope={ReactLiveScope} {...props} />;\n    }\n\n    return <Component {...props} />;\n  }\n\n  return WithLiveEditor;\n};\n\nconst withThemeBackground = (Component) => {\n  function WithThemeBackground(props) {\n    const theme = useTheme();\n    const content = <Component {...props} />;\n    const style = {\n      \"--ifm-list-item-margin\": 0,\n    };\n\n    if (props.themed) {\n      style.color = theme.color(\"*.foreground\");\n      style[\"--ifm-pre-background\"] = theme.color(\"*.background\");\n      style[\"--ifm-code-background\"] = \"none\";\n    }\n    return (\n      <div\n        style={style}\n        className={clsx(styles.playground, {\n          [styles.noPadding]: props.noPadding,\n        })}\n      >\n        {content}\n      </div>\n    );\n  }\n\n  return WithThemeBackground;\n};\n\nexport default withThemeBackground(withLiveEditor(CodeBlock));\n","import React from \"react\";\nimport Code from \"@theme-original/MDXComponents/Code\";\nimport { InlineCode } from \"../../components/component-linking\";\n\n/**\n * Wrapping the default Code component, to replace inline codes with links, if possible.\n * `Code` component is used only when rendering jsdoc descriptions. It's not used\n * when inline code in mdx files is rendered. For that, `inlineCode` entry is set\n * in swizzled `MDXComponents`.\n */\nexport default function CodeWrapper(props: {\n  children: React.ReactNode;\n}): JSX.Element {\n  if (typeof props.children === \"string\") {\n    return <InlineCode>{props.children}</InlineCode>;\n  }\n  return (\n    <>\n      <Code {...props} />\n    </>\n  );\n}\n","import MDXComponents from \"@theme-original/MDXComponents\";\nimport { InlineCode } from \"../../components/component-linking\";\n\nexport default {\n  ...MDXComponents,\n  inlineCode: InlineCode,\n};\n","\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n/* @jsxFrag React.Fragment */\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n\n\nexport const frontMatter = {\n\tsidebar_position: 0.1\n};\nexport const contentTitle = 'Theming';\nexport const metadata = {\n  \"unversionedId\": \"guides/Theming\",\n  \"id\": \"guides/Theming\",\n  \"title\": \"Theming\",\n  \"description\": \"In this guide you will learn about theming in JUI. You will read about what a theme is, how to create and provide it,\",\n  \"source\": \"@site/docs/guides/Theming.mdx\",\n  \"sourceDirName\": \"guides\",\n  \"slug\": \"/guides/Theming\",\n  \"permalink\": \"/jui/-/pre-combobox/docs/guides/Theming\",\n  \"draft\": false,\n  \"editUrl\": \"https://github.com/alirezamirian/jui/edit/master/packages/website/docs/guides/Theming.mdx\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"sidebarPosition\": 0.1,\n  \"frontMatter\": {\n    \"sidebar_position\": 0.1\n  },\n  \"sidebar\": \"tutorialSidebar\",\n  \"previous\": {\n    \"title\": \"Getting started\",\n    \"permalink\": \"/jui/-/pre-combobox/docs/getting-started\"\n  },\n  \"next\": {\n    \"title\": \"Actions\",\n    \"permalink\": \"/jui/-/pre-combobox/docs/guides/ActionSystem\"\n  }\n};\nexport const assets = {\n\n};\n\nimport { ApiDescription } from \"@site/src/components/ApiDescription.tsx\";\nimport { ThemeProvider } from \"@intellij-platform/core\";\nimport { RefToIntellijPlatform } from \"@site/src/components/RefToIntellijPlatform.tsx\";\nimport { Example } from \"@site/src/components/ExampleContext\";\nexport const toc = [{\n  value: 'Theme',\n  id: 'theme',\n  level: 2\n}, {\n  value: 'ThemeProvider',\n  id: 'themeprovider',\n  level: 2\n}, {\n  value: 'Creating a theme',\n  id: 'creating-a-theme',\n  level: 2\n}, {\n  value: 'Theme json',\n  id: 'theme-json',\n  level: 3\n}, {\n  value: 'Nord theme example',\n  id: 'nord-theme-example',\n  level: 4\n}, {\n  value: 'IconResolver',\n  id: 'iconresolver',\n  level: 3\n}, {\n  value: 'Operating system',\n  id: 'operating-system',\n  level: 3\n}, {\n  value: 'Theming your own components',\n  id: 'theming-your-own-components',\n  level: 2\n}, {\n  value: 'Resolving values',\n  id: 'resolving-values',\n  level: 3\n}, {\n  value: 'Fallback when resolving values',\n  id: 'fallback-when-resolving-values',\n  level: 4\n}, {\n  value: 'Accessing theme in components',\n  id: 'accessing-theme-in-components',\n  level: 3\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"theming\"\n    }}>{`Theming`}</h1>\n    <p>{`In this guide you will learn about theming in JUI. You will read about what a theme is, how to create and provide it,\nand how to use it to created your own themed components.`}</p>\n    <h2 {...{\n      \"id\": \"theme\"\n    }}>{`Theme`}</h2>\n    <p>{`Styling in JUI is implemented with `}<a parentName=\"p\" {...{\n        \"href\": \"https://styled-components.com\"\n      }}>{`styled-components`}</a>{`, and it requires an object of type\n`}<inlineCode parentName=\"p\">{`Theme`}</inlineCode>{` to be provided by styled-component's `}<a parentName=\"p\" {...{\n        \"href\": \"https://styled-components.com/docs/advanced#theming\"\n      }}>{`theme context`}</a>{`.\n`}<inlineCode parentName=\"p\">{`Theme`}</inlineCode>{` class implements the interface for accessing common colors, resolving theme values, icons, etc.`}</p>\n    <h2 {...{\n      \"id\": \"themeprovider\"\n    }}>{`ThemeProvider`}</h2>\n    <ApiDescription of={ThemeProvider} mdxType=\"ApiDescription\" />\n    <h2 {...{\n      \"id\": \"creating-a-theme\"\n    }}>{`Creating a theme`}</h2>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`Theme`}</inlineCode>{` constructor to create a theme object:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { Theme } from \"@intellij-platform/core\";\nimport darculaThemeJson from \"@intellij-platform/core/themes/darcula.theme.json\";\n\nconst theme = new Theme(darculaThemeJson);\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"theme-json\"\n    }}>{`Theme json`}</h3>\n    <p>{`The only required arguments for creating a Theme is a plain theme object of type `}<inlineCode parentName=\"p\">{`ThemeJson`}</inlineCode>{`, which is usually imported\nfrom a `}<inlineCode parentName=\"p\">{`.theme.json`}</inlineCode>{` file. The following `}<inlineCode parentName=\"p\">{`.theme.json`}</inlineCode>{` files from `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/JetBrains/intellij-community\"\n      }}>{`Intellij Community`}</a>{` are\navailable out of the box:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/JetBrains/intellij-community/blob/master/platform/platform-impl/src/com/intellij/ide/ui/laf/darcula/darcula.theme.json\"\n        }}><inlineCode parentName=\"a\">{`@intellij-platform/core/themes/darcula.theme.json`}</inlineCode></a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/JetBrains/intellij-community/blob/master/platform/platform-impl/src/com/intellij/ide/ui/laf/intellijlaf.theme.json\"\n        }}><inlineCode parentName=\"a\">{`@intellij-platform/core/themes/intelijlaf.theme.json`}</inlineCode></a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/JetBrains/intellij-community/blob/master/platform/platform-resources/src/themes/HighContrast.theme.json\"\n        }}><inlineCode parentName=\"a\">{`@intellij-platform/core/themes/HighContrast.theme.json`}</inlineCode></a></li>\n    </ul>\n    <p>{`You can also find many `}<a parentName=\"p\" {...{\n        \"href\": \"https://plugins.jetbrains.com/search?tags=Theme\"\n      }}>{`theme plugins`}</a>{`, each containing a\n`}<inlineCode parentName=\"p\">{`.theme.json`}</inlineCode>{` file.`}</p>\n    <h4 {...{\n      \"id\": \"nord-theme-example\"\n    }}>{`Nord theme example`}</h4>\n    <p>{`In the example below, `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/arcticicestudio/nord-jetbrains/blob/main/src/nord.theme.json\"\n      }}>{`nord.theme.json`}</a>{`\nfrom `}<a parentName=\"p\" {...{\n        \"href\": \"https://plugins.jetbrains.com/plugin/10321-nord\"\n      }}>{`Nord theme`}</a>{`'s github repo is fetched and used:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\",\n        \"metastring\": \"live noPadding\",\n        \"live\": true,\n        \"noPadding\": true\n      }}>{`function NordThemeDemo() {\n  const [theme, setTheme] = useState(null);\n\n  useEffect(() => {\n    fetch(\n      \"https://raw.githubusercontent.com/arcticicestudio/nord-jetbrains/main/src/nord.theme.json\"\n    )\n      .then((result) => result.json())\n      .then((themeJson) => setTheme(new Theme(themeJson)));\n  }, [setTheme]);\n\n  if (!theme) {\n    return \"Loading...\";\n  }\n  return (\n    <ThemeProvider theme={theme}>\n      <ExampleApp />\n    </ThemeProvider>\n  );\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"iconresolver\"\n    }}>{`IconResolver`}</h3>\n    <p>{`Theme depends on an `}<inlineCode parentName=\"p\">{`IconResolver`}</inlineCode>{` implementation for resolving svg icons. By default `}<inlineCode parentName=\"p\">{`GithubIconResolver`}</inlineCode>{` is used,\nwhich fetches icons from `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/JetBrains/intellij-community\"\n      }}>{`Intellij Community repo`}</a>{`.\nAn alternative implementation can be passed to the `}<inlineCode parentName=\"p\">{`iconResolver`}</inlineCode>{` argument in `}<inlineCode parentName=\"p\">{`Theme`}</inlineCode>{`'s constructor:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { Theme, IconResolver } from \"@intellij-platform/core\";\n\nclass MyIconResolver implements IconResolver {\n  //...\n}\nconst theme = new Theme(themeJson, new MyIconResolver());\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"operating-system\"\n    }}>{`Operating system`}</h3>\n    <p>{`Properties in `}<inlineCode parentName=\"p\">{`ThemeJson`}</inlineCode>{` can have os-dependent values. See `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/JetBrains/intellij-community/blob/03f8a6f1783337b01aa457af36771a132384f289/platform/platform-impl/src/com/intellij/ide/ui/laf/darcula/darcula.theme.json#L18-L21\"\n      }}>{`selectionBackground in darcula theme`}</a>{`\nas an example. In order to resolve os-dependent values, a theme needs to know what the current operating system is.\nWhile the default value is detected based on the `}<inlineCode parentName=\"p\">{`window.navigator`}</inlineCode>{`, you can override that and set the value in\n`}<inlineCode parentName=\"p\">{`Theme`}</inlineCode>{`'s constructor:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`const theme = new Theme(\n  themeJson,\n  undefined /* going with the default icon resolver */,\n  \"windows\"\n);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"theming-your-own-components\"\n    }}>{`Theming your own components`}</h2>\n    <h3 {...{\n      \"id\": \"resolving-values\"\n    }}>{`Resolving values`}</h3>\n    <p>{`🚧 TODO: explain `}<inlineCode parentName=\"p\">{`.color()`}</inlineCode>{` and more generic `}<inlineCode parentName=\"p\">{`.value()`}</inlineCode>{` methods. 🚧`}</p>\n    <h4 {...{\n      \"id\": \"fallback-when-resolving-values\"\n    }}>{`Fallback when resolving values`}</h4>\n    <p>{`🚧 TODO: explain star fallback and difference with `}<inlineCode parentName=\"p\">{`fallback`}</inlineCode>{` argument. 🚧`}</p>\n    <h3 {...{\n      \"id\": \"accessing-theme-in-components\"\n    }}>{`Accessing theme in components`}</h3>\n    <p>{`The best way to use theme in styling your own components is to use styled components:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { styled } from \"@intellij-platform/core\";\n\nconst MyComponent = styled\\`\n  background: \\${({ theme }) => theme.color(\"Panel.background\")};\n\\`;\n`}</code></pre>\n    <p>{`You can also use styled-component API for `}<a parentName=\"p\" {...{\n        \"href\": \"https://styled-components.com/docs/advanced#getting-the-theme-without-styled-components\"\n      }}>{`getting the theme without styled components`}</a>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { useTheme } from \"@intellij-platform/core\";\n\nfunction MyComponent() {\n  const theme = useTheme();\n  // ...\n}\n`}</code></pre>\n    <admonition {...{\n      \"title\": \"types\",\n      \"type\": \"tip\"\n    }}><p parentName=\"admonition\">{`In order to get the right type for `}<inlineCode parentName=\"p\">{`theme`}</inlineCode>{` in your styled components, import `}<inlineCode parentName=\"p\">{`styled`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`css`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`useTheme`}</inlineCode>{`, etc. from\n`}<strong parentName=\"p\">{`@intellij-platform/core`}</strong>{`, instead of `}<strong parentName=\"p\">{`styled-components`}</strong>{`. They are the same as the ones from styled-components,\nonly with the adjusted theme type.\nIf you wish to import from `}<inlineCode parentName=\"p\">{`styled-components`}</inlineCode>{`, you need to `}<a parentName=\"p\" {...{\n          \"href\": \"https://styled-components.com/docs/api#create-a-declarations-file\"\n        }}>{`create a declarations file`}</a>{` to\nextend styled-component's `}<inlineCode parentName=\"p\">{`DefaultTheme`}</inlineCode>{`.`}</p></admonition>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n"],"names":["isInResolvedActionGroup","action","isActionGroup","isResolvedActionGroup","isActionGroupDefinition","ActionShortcut","_ref","actionId","children","shortcutString","useGetActionShortcut","getShortcut","React","keymap","useKeymap","keyboardShortcut","find","_ref2","type","shortcutToString","__docgenInfo","isKeyMatch","keyStroke","e","loose","code","modifiers","supportedModifiers","every","modifier","getModifierState","Boolean","includes","ActionsContext","generateId","Math","floor","random","ACTION_PROVIDER_ID_ATTRIBUTE","ACTION_PROVIDER_ID_DATA_PREFIX","actionProvidersMap","Map","ActionsProvider","props","parentContext","useContext","actions","dfsVisit","push","recursivelyCreateActions","shortcuts","Object","fromEntries","map","id","actionProviderId","useState","shortcutHandlerProps","onAction","_temp","useCapture","firstKeyActivatedShortcutsRef","useRef","secondStrokeResetTimerIdRef","onKeyDown","useEventCallback","event","nativeEvent","location","repeat","current","window","clearTimeout","length","some","shortcut","secondKeyStroke","triggerAction","firstKeyMatches","entries","flatMap","filter","input","isKeyboardShortcut","_ref3","firstKeyStroke","_ref4","setTimeout","document","addEventListener","once","capture","stopPropagation","preventDefault","useShortcuts","perform","element","target","Element","allActions","useEffect","set","delete","Provider","value","actionDefinitions","parent","actionDefinition","useShortcutsOf","undefined","firstShortcut","context","isDisabled","actionPerformed","isMutableActionGroup","getAvailableActionsFor","closestActionProvider","closest","HTMLElement","actionSets","keys","dataset","dataKey","startsWith","replace","get","values","isSearchable","concat","sortBy","actionSet","useActions","useAction","usePerformAction","console","error","CommonActionId","EXPAND_ALL","COLLAPSE_ALL","EXPAND_SELECTION","SHRINK_SELECTION","GO_TO_ACTION","GO_TO_FILE","SHOW_INTENTION_ACTIONS","EDIT_SOURCE","SHOW_SEARCH_HISTORY","COPY_REFERENCE","REFRESH","COPY","CUT","PASTE","DELETE","KeymapContext","defaultKeymap","KeymapProvider","keymapProp","parentKeyMap","assign","create","ActionButton","otherProps","actionButton","IconButton","_extends","title","onPress","icon","TooltipTrigger","tooltip","ActionTooltip","actionName","ActionGroupMenu","actionGroup","ActionsMenu","isAction","item","actionContext","actionMenuProps","Menu","getAllActions","disabledKeys","key","items","DividerItem","Divider","renderActionAsMenuItem","isGroup","menuPresentation","Item","textValue","childItems","MenuItemLayout","content","Section","hasDivider","flatten","useCreateDefaultActionGroup","show","usePopupManager","getActionShortcut","openActionsInPopup","close","Popup","positioning","targetRef","querySelector","MENU_POSITION_TARGET_DATA_ATTRIBUTE","placement","Layout","SpeedSearchMenu","onClose","autoFocus","header","groupDefinition","RESIZE_TOOL_WINDOW_RIGHT_ACTION_ID","RESIZE_TOOL_WINDOW_LEFT_ACTION_ID","RESIZE_TOOL_WINDOW_TOP_ACTION_ID","RESIZE_TOOL_WINDOW_BOTTOM_ACTION_ID","MAXIMIZE_TOOL_WINDOW_ACTION_ID","FOCUS_EDITOR_ACTION_ID","HIDE_ACTIVE_WINDOW_ACTION_ID","HIDE_ALL_WINDOWS_ACTION_ID","JUMP_TO_LAST_WINDOW_ACTION_ID","defaultKeyToStr","Control","ArrowDown","ArrowUp","ArrowLeft","ArrowRight","Enter","Quote","Minus","Equal","Backspace","fromPairs","Array","from","i","charCodeAt","x","String","fromCharCode","a","toUpperCase","KeystrokeToString","isMac","separator","codeToStr","Alt","Shift","Meta","Escape","modifiersOrder","keystrokeToString","keystroke","sort","b","indexOf","join","Error","useActionGroup","actionGroupId","StyledModalWindow","styled","ModalWindow","StyledWindowContainer","StyledContainer","div","StyledHeading","h2","StyledBody","StyledContent","StyledCheckbox","StyledButtons","ButtonGroup","StyledIcon","span","StyledHelpIcon","AlertDialog","heading","body","checkbox","helpButton","buttons","minWidth","role","interactions","defaultBounds","top","innerHeight","observeContentResize","OverlayMoveHandle","dragThreshold","canMoveStart","isEventOnEmptySpaces","moveHandleProps","PlatformIcon","size","useAlertDialog","open","useWindowManager","confirm","message","okText","cancelText","Promise","resolve","Button","variant","bgColor","theme","color","dark","StyledHeaderActions","StyledBalloonContainer","StyledIconContainer","StyledBalloonHeader","StyledBalloonBody","_ref5","lineClamp","_ref6","StyledBalloonFooter","StyledToggleIconContainer","StyledToggleExpandButtonContainer","StyledToggleExpandButtonFooterContainer","BalloonContext","BalloonActionLink","ref","Link","_len","arguments","args","_key","Balloon","iconProp","expanded","expandedProp","defaultExpanded","onExpandedChange","headerActions","containerProps","bodyRef","expandable","setExpandable","setExpanded","useControlledState","maxLinesWhenNotExpanded","bodyElem","clientHeight","parseFloat","getComputedStyle","lineHeight","getNumLines","scrollHeight","iconType","index","arr","toggle","effectiveExpanded","AutoHoverPlatformIcon","onClick","style","marginLeft","ToggleWrapper","enabled","onToggle","Component","iconName","toggleIcon","hoverContainerSelector","className","NotImplementedFn","BalloonsContext","showSticky","useBalloonManager","BalloonManager","disablePortal","BalloonsContainer","StyledBalloonsStack","balloons","setBalloons","timeoutIdsRef","lastIdRef","api","useMemo","timeout","aBalloon","balloon","timeoutId","aTimeoutId","forEach","notificationsStack","position","ReactDOM","withConfig","displayName","componentId","BareButton","forwardedRef","elementType","elementTypeProp","useObjectRef","buttonProps","useButton","domProps","filterDOMProps","mergeProps","StyledButton","button","disabled","_ref7","StyledDefaultButton","_ref8","_ref9","_ref10","_ref11","StyledIconButton","variants","default","mnemonic","form","MnemonicTrigger","onTriggered","StyledButtonGroup","FocusScope","HorizontalArrowKeyNavigation","arrowKeyNavigationProps","focusManager","useFocusManager","keyboardProps","useKeyboard","hasAnyModifier","focusPrevious","wrap","focusNext","continuePropagation","StyledWrapperLabel","label","StyledCheckboxLabelText","StyledInput","Checkbox","preventFocus","disableFocusAlwaysVisible","state","useToggleState","inputProps","useCheckbox","isFocusVisible","isFocused","focusProps","useFocusRing","focusDisabledProps","onFocusCapture","relatedTarget","focus","blur","tabIndex","CheckboxIcon","isIndeterminate","isSelected","pointerEvents","LafIcon","name","Disabled","Selected","Focused","CollectionSpeedSearchContext","CollectionSpeedSearchItemContext","SpeedSearchItemHighlightsProvider","itemKey","collection","getItem","text","warn","highlightedRanges","matches","HighlightedTextValue","speedSearchContext","TextWithHighlights","highlights","useCollectionSpeedSearchResult","selectionManager","inputSelectionManager","speedSearch","focusBestMatch","searchTerm","active","getKeys","matchedRanges","minusculeMatch","wrappedSelectionManager","selectAll","setSelectedKeys","Set","has","createSpeedSearchSelectionManager","latestValues","useLatest","matchedKeys","noneOfTheMatchesAreSelected","matchedKey","keyToFocus","firstRange","rangeA","rangeB","to","getLongestCommonPrefixMatch","passedFirstSelection","firstSelectedKey","getMatchToSelect","setFocusedKey","replaceSelection","useCollectionSpeedSearch","keepSearchActiveOnBlur","keyboardDelegate","speedSearchStateProps","useSpeedSearchState","speedSearchSelectionManager","useSpeedSearch","speedSearchKeyboardDelegate","wrappedKeyboardDelegate","findFirstMatch","fromKey","direction","currentKey","getKeyAbove","getKeyBelow","getFirstKey","global","firstKey","next","getLastKey","lastKey","pop","createSpeedSearchKeyboardDelegate","speedSearchContextValue","searchPopupProps","match","constructor","seq","this","_Divider","getCollectionNode","rendered","hasChildNodes","_Item","result","StatelyItem","originalShouldInvalidate","shouldInvalidate","invalidated","GAP","StyledItemLayout","StyledHint","currentForegroundAware","commonColors","inactiveTextColor","small","StyledGroup","attrs","ItemLayout","Hint","Group","ItemStateContext","useCollectionAutoScroll","isVirtualized","focusedKey","scrollIntoView","useCollectionRef","selectionManagerRef","useImperativeHandle","useCollectionSearchInput","collectionRef","relayEventsToCollection","currentTarget","dispatchEvent","KeyboardEvent","collectionSearchInputProps","onKeyPress","StyledHoverContainer","StyledIconHoverContainer","hoverIcon","amendName","ICONS_DIR_PREFIX","useIconPath","iconDescriptor","themePath","useTheme","resolvedValue","isUnderDarcula","reduce","soFar","findIconPath","resolvedIconPath","useForwardedRef","useSvgIcon","path","StyledIconWrapper","iconNameOrPath","amendment","ext","split","getPlatformIconPath","relativePath","slice","darkIcon","getDarkPath","darkPath","fallbackPath","DEFAULT_ICON_SIZE","itemState","selected","isContainerFocused","unmounted","async","ariaBusy","svg","getSvgIcon","catch","finally","remove","svgElement","createElement","appendChild","outerHTML","randomPostfix","toFixed","idMatches","matchAll","modifiedSvg","_","newId","replaceAll","makeIdsUnique","fetchIcon","theOld","theNew","str","replaced","replacedAgain","DEFAULT_MINIMUM_BUTTON_SIZE","NAVBAR_MINIMUM_BUTTON_SIZE","minSize","preventFocusOnPress","excludeFromTabOrder","isPressed","isPressedInput","onPressChange","onPressEnd","onPressStart","onPressUp","shouldCancelOnPointerExit","focusableProps","useFocusable","pressProps","usePress","ArrowIcon","IconButtonWithMenu","renderMenu","noArrow","previouslyFocusedElementRef","MenuTrigger","onOpenChange","onFocus","Img","darkSrc","src","StyledInputBox","focused","validationState","border","focusRing","appearance","css","StyledAddons","StyledRightAddons","StyledLeftAddons","Input","autoSelect","addonBefore","addonAfter","inputRef","inputRefProp","onKeyUp","onBlur","setIsFocused","focusWithinProps","useFocusWithin","onFocusWithinChange","select","spellCheck","onMouseDown","StyledLabelContainer","labelPlacement","StyledLabel","Label","StyledContextHelp","contextHelpForeground","StyledBoxAndContextHelpWrapper","InputField","validationMessage","contextHelp","fieldProps","errorMessageProps","labelProps","descriptionProps","useField","errorMessage","PositionedTooltipTrigger","crossOffset","showOnFocus","ValidationTooltip","delay","placeholder","defaultValue","onChange","StyledLink","focusBorderColor","linkForegroundEnabled","labelable","interactionHandlers","FocusRing","focusRingClass","as","List","allowEmptySelection","fillAvailableSpace","estimatedItemHeight","disallowEmptySelection","useListState","listProps","listContext","useList","virtualizerProps","renderNode","useListVirtualizer","renderItem","ListItem","ListContext","StyledList","Virtualizer","ListDivider","StyledVerticalSeparator","useSeparator","orientation","separatorProps","listFocused","itemProps","useSelectableItem","StyledListItem","containerFocused","node","shouldForwardProp","prop","backgroundColor","labelForeground","asCurrentForeground","labelSelectedForeground","asCurrentBackground","showAsFocused","shouldFocusWrap","selectOnFocus","disallowTypeAhead","shouldUseVirtualFocus","allowsTabNavigation","collator","useCollator","usage","sensitivity","delegate","ListKeyboardDelegate","collectionProps","useSelectableCollection","useSelectableList","setFocused","isEmpty","onActionCallback","originalUseListState","selectionBehavior","StyledListSectionHeader","paddingLeft","fontWeight","outline","cursor","ListSection","reusableView","headerRef","useVirtualizerItem","layoutInfoToStyle","layoutInfo","renderWrapper","renderChildren","viewType","c","VirtualizerItem","layout","VariableWidthListLayout","estimatedRowHeight","estimatedHeadingHeight","dividerHeight","sizeToFit","scrollToItem","virtualizer","shouldScrollX","duration","scrollDirection","ContextMenuContainer","onOpen","useMenuTriggerState","overlayProps","overlayRef","useContextMenu","containerRef","onOutsideContextMenu","timeStamp","removeEventListener","positionProps","updatePosition","useMouseEventOverlayPosition","shouldFlip","offset","isOpen","useOverlay","shouldCloseOnBlur","isKeyboardDismissDisabled","isDismissable","shouldCloseOnInteractOutside","areInNestedOverlays","onContextMenu","allProps","MenuOverlay","restoreFocus","defaultAutoFocus","patchCollectionItem","nodes","partialNode","childNodes","result2","partialChildNode","partialChildNodeWithoutType","PatchedItem","bind","PatchedSection","convertChildren","isArray","Item2","MenuOverlayContext","MenuContext","useMenu","onActionProp","submenuBehavior","menuContextValue","menuProps","useMenuAria","useMenuState","patchCollectionProps","useTreeState","childExpansionBehaviour","expandedKeys","expandedKey","onExpandedKeyChange","defaultExpandedKeys","defaultExpandedKey","StyledMenu","renderMenuNodes","StyledMenuItemText","StyledMenuItemPlatformIcon","StyledMenuItemLafIcon","MenuItemContext","keyboardShortcutProps","useMenuItemLayout","MenuItem","nestedMenuRef","isExpanded","selectedKeys","renderSubmenu","Submenu","itemWrapper","menuItemProps","hasSubmenu","ariaMenuItemProps","useMenuItemAria","onMouseEnter","onPointerEnter","onPointerDown","hoverProps","useHover","onHoverStart","isAnySubmenuOpen","parentKey","toggleKey","togglePressProps","useMenuItem","useOverlayPosition","MENU_VERTICAL_PADDING","MENU_BORDER_WIDTH","arrowProps","onPointerUp","StyledMenuItem","isActive","StyledMenuItemIcon","StyledNestedArrow","Overlay","OverlayComponent","SimpleOverlay","parentState","rootKey","portalContainer","StyledMenuItemLayout","Content","Shortcut","kbd","useContextOrThrow","allowedIcon","align","positioningTargetRef","triggerRef","menuTriggerProps","triggerProps","useMenuTrigger","ariaButtonProps","getPlacement","containerPadding","StyledItemsContainer","ul","StyledSearchFieldWrapper","StyledSpeedSearchMenu","StyledPlaceholder","useSpeedSearchMenu","speedSearchContainerProps","ListCollection","MenuKeyboardDelegate","contains","activeElement","focusSafely","lastSize","setSize","measureSize","offsetWidth","offsetHeight","width","height","isSearchActive","useResizeObserver","onResize","useLayoutEffect","sizeStyleProps","minHeight","maxHeight","emptyText","clear","SpeedSearchSubmenu","SpeedSearchMenuContent","menuRef","SpeedSearchInput","useSubmenuState","rootItem","submenuProps","useSubmenu","WINDOW_SHADOW","highlightedStyle","defaultStyle","disabledStyle","li","useSubmenuAria","submenuBehaviorProps","super","keyBelow","keyAbove","root","isFocusedRef","focusedKeyRef","defineProperties","SelectionManager","StyledMenuHeading","StyledMenuSectionItemsContainer","MenuSection","headingProps","groupProps","useMenuSection","MnemonicContext","createContext","character","onTriggeredProp","setActive","keydownListener","toLowerCase","parentElement","getClientRects","isVisible","keyupListener","renderedMnemonicRef","timerId","hidden","MnemonicText","found","UNSAFE_React17SuspenseFix","measureContentSize","fallback","NullSuspenseFallback","afterUnsuspended","afterSuspended","afterSuspendedProp","afterUnsuspendedProp","StyledWindowUnderlay","StyledWindowInnerContainer","DEFAULT_WINDOW_MIN_WIDTH","DEFAULT_WINDOW_MIN_HEIGHT","WindowControllerContext","propsContext","modalProps","underlayProps","useModalOverlay","useOverlayTriggerState","usePreventScroll","dialogProps","titleProps","useDialog","bounds","overlayInteractionHandlerProps","UNSAFE_measureContentSize","useResizableMovableOverlay","focusContainmentFixProps","lastFocusedElementRef","probablyFocusedElement","elementToFocus","useFocusContainmentFix","OverlayInteractionHandler","contain","WindowContext","movable","OverlayResizeHandles","StyledFooter","hasBorder","contrastBorder","StyledFooterSide","WindowFooter","left","right","StyledWindowTitle","h1","WindowHeader","renderTitle","StyledWindowFooter","StyledWindowContentWrapper","WindowLayout","footer","Footer","Header","WindowsContext","WindowManager","windows","setWindows","newKeyRef","currentWindows","aWindow","requestAnimationFrame","ParentOverlayContext","AriaOverlay","element1","element2","overlayRoot1","overlayRoot2","OverlayInteractionHandlerContext","useOverlayInteractionHandler","useOverlayMoveHandle","options","interactionHandler","finishInteraction","startInteraction","updateBounds","useMove","onMoveStart","onMove","startState","movement","y","onMoveEnd","overlayResizer","initialBoundsRef","max","bottom","newWidth","initialBounds","newHeight","getResizerProps","side","onResizeStarted","onResizeEnd","useOverlayResizer","RightResizer","LeftResizer","TopResizer","BottomResizer","withMinSize","getCenteredBounds","innerWidth","targetElement","targetBounds","getBoundingClientRect","ensureInViewport","gap","viewportWidth","viewportHeight","clamp","getContentSize","fn","ceil","clone","cloneNode","returnValue","removeChild","withTemporaryStyle","useContentSize","observe","measuredSizes","setMeasuredSizes","lastMeasuredSize","at","Size","isEqual","newSize","cancelAnimationFrame","measure","currentSize","aSize","debouncedMeasure","fnRef","currentTimeoutId","useCallback","useDebouncedCallback","mutationObserver","MutationObserver","subtree","childList","disconnect","width2","height2","inputBounds","onBoundsChange","onBoundsChanging","setBounds","contentSize","currentInteraction","setCurrentInteraction","effectiveMinWidth","effectiveMinHeight","applyMinSize","getBounds","updatedBounds","partialBounds","centeredContentBounds","positioned","sized","StyledPopupContainer","StyledInnerContainer","DEFAULT_POPUP_MIN_WIDTH","DEFAULT_POPUP_MIN_HEIGHT","_Popup","nonDismissable","allowScroll","positioningProp","onCloseProp","PopupControllerContext","useInteractOutside","onInteractOutsideStart","onInteractOutside","positionedBounds","pipe","focusForwarderProps","useFocusForwarder","titleId","useSlotId","useOverlayFocusContain","zIndex","propsArray","mergeNonNullProps","PopupContext","PopupHeader","PopupLayout","StyledPopupHint","StyledPopupHeader","hasControls","labelDisabledForeground","renderHeader","StyledPopupLayout","StyledPopupLayoutHeader","StyledPopupLayoutContent","StyledPopupLayoutFooter","PopupsContext","PopupManager","popups","setPopups","popup","currentPopups","aPopup","wrappedPopup","PopupTrigger","useOverlayTrigger","PressResponder","ProgressBar","maxValue","minValue","namePosition","details","secondaryDetails","dense","valueLabel","showValueLabel","progressBarProps","useProgressBar","percentage","forcedDetails","setForcedDetails","setTooltip","contextValue","StyledProgressBarLabel","effectiveDetails","StyledProgressBarContainer","StyledProgressBarLineContainer","hasTopMargin","hasBottomMargin","StyledProgressBarTrack","indeterminate","StyledProgressBarProgress","ProgressBarContext","StyledProgressBarDetails","getIndeterminateStartColor","getIndeterminateEndColor","indeterminateBackgroundAnimation","keyframes","useProgressBarIconButton","_ref12","hoverTooltip","isHovered","useProgressBarPauseIconButton","_ref13","paused","Container","LineContainer","Track","Progress","Details","ProgressBarStopButton","ResizableView","resizerPlacement","ThreeViewSplitter","firstView","firstSize","onFirstResize","lastView","onLastResize","resizerProps","useBottomResizer","VerticalResizer","StyledHorizontalResizer","StyledHorizontalResizerArea","handleSize","HorizontalResizer","outerPadding","background","useLeftResizer","useRightResizer","useTopResizer","StyledVerticalResizer","StyledVerticalResizerArea","useResizer","invert","SearchInput","searchHistory","onClear","onSubmit","onHistoryItemSelected","historyButtonTitle","valueProp","setValue","inputContainerRef","isSearchHistoryOpen","setSearchHistoryOpen","showSearchHistoryAction","searchIcon","historyItemText","parseInt","historyItem","tooltipTriggerProps","StyledSearchIcon","StyledSpeedSearchInput","noMatch","getOutlineColor","StyledSearchText","clearButtonRef","SpeedSearchPopup","StyledSpeedSearchPopup","red","tooltipForeground","useGhostInput","valueRef","ctrlKey","altKey","metaKey","elem","isContentEditable","HTMLInputElement","HTMLTextAreaElement","sliceEnd","defaultIsSearchActive","onIsSearchActiveChange","setSearchTerm","defaultSearchTerm","onSearchTermChange","ghostInputKeydown","trimmedValue","trimStart","onBlurWithin","StatusBar","StyledStatusBar","StyledStatusBarLeft","StyledStatusBarRight","StyledStatusBarSection","StatusBarWidget","StyledWrapper","StyledStatusBarWidget","StyledStatusBarIconWidget","inset","DarculaSeparatorUI","defaultSize","StyledSeparator","hr","backgroundClip","boxSizing","margin","flexShrink","StyledHorizontalSeparator","DebuggerTabContent","closeButton","TabContentLayout","startIcon","endIcon","StyledDebuggerTab","StyledDefaultTab","getTabThemeStyles","underlineHeight","underlinedTabBackground","debuggerTabTheme","DebuggerTabs","Tabs","TabComponent","focusable","EditorTabContent","onUnpin","pinned","editorTabTheme","borderColor","underlinedTabInactiveBackground","hoverInactiveBackground","hoverBackground","inactiveUnderlineColor","underlineColor","underlinedTabInactiveForeground","underlinedTabForeground","StyledEditorTab","StyledEditorTabs","StyledDefaultTabs","getTabsThemeStyles","EditorTabs","TabsComponent","noBorders","TabCloseButton","StyledTabItemLayout","iconStyle","StyledStartIconWrapper","StyledEndIconWrapper","TabItem","horizontalOverflowIndicatorStyles","StyledHorizontalOverflowShadows","hasOverflowAtStart","panelBackground","hasOverflowAtEnd","Tab","forwardRef","shouldSelectOnPressUp","tabProps","useTab","selectedKey","scrollBarDisabledStyle","StyledTabList","multiRow","noOverflowMenu","noScroll","useTabListState","tabListProps","useTabList","scrolledIndicatorProps","hasOverflow","threshold","setHasOverflow","update","offsetLeft","scrollLeft","offsetRight","scrollWidth","offsetTop","scrollTop","offsetBottom","newHasOverflow","onScroll","useHasOverflow","overflowedElements","useOverflowObserver","overflowedKeys","notNull","scrollableContainer","selectedTabElement","TabsOverflowMenu","onSelect","setSelectedKey","menuItem","inOverflowMenu","ToolWindowTabContent","toolWindowTabTheme","StyledToolWindowTab","StyledToolWindowTabs","ToolWindowTabs","getAllRanges","ranges","gapRange","range","createRangesFromIndices","indices","lastRange","HighlightedMatch","parts","highlighted","numberPattern","parseComponent","componentStr","round","min","parseHexRgba","parseShorthandHex","parseRgb","RegExp","parseRgba","Color","rgba","g","r","NaN","parse","Number","isInteger","parseColorString","isValid","withTransparency","alpha","brighter","int","FACTOR","darker","toString","blend","colorOrColorString","getBlendedValue","component","isNaN","padStart","StyledSplitterContainer","StyledView","StyledSplitterInnerView","resizerPropsOverrides","innerView","firstViewMinSize","lastViewMinSize","innerViewMinSize","firstViewRef","lastViewRef","firstSizeState","setFirstSizeState","lastSizeState","setLastSizeState","horizontalValue","verticalValue","FirstResizer","SecondResizer","sizeStyleProp","minSizeStyleProp","isFractionSize","normalizeSize","getSize","getNewSize","newFractionSize","getActualSize","viewElem","actualSize","currentLastSize","currentFirstSize","StyledFloatView","FloatView","boundsStyle","FloatToolWindows","floatWindows","renderToolWindow","stackedFloatWindows","getKey","sortedKeys","setSortedKeys","sorted","bringToFront","move","useStackedLayersState","layersProps","toolWindow","MovableToolWindowStripeContext","MovableToolWindowStripeProvider","stripes","draggingRect","setDraggingRect","draggingKey","setDraggingKey","dropPosition","setDropPosition","getDropPositionRef","moveStartLocationRef","addStripe","propsRef","startMove","stripe","stripeElRef","stripeElement","getItemRect","toJSON","indexInMain","mainItems","findIndex","indexInSplit","splitItems","anchor","isSplit","dropPositionGetters","createGetDropPosition","getDropPosition","draggedRect","endMove","TopStripe","BottomStripe","LeftStripe","RightStripe","InnerView","StyledToolWindowOuterLayout","Shell","hideStripes","getSizeInAnchor","containerSize","isHorizontalToolWindow","mapToKey","sortAndMapToKey","compose","order","filterMains","getMains","filterSplits","filterVisible","expectedViewMode","viewMode","getSplits","filterVisibleDocked","filterVisibleUnDocked","getDocked","toolWindows","docks","mains","splits","weight","mainKey","sizeFraction","sideWeight","getUnDocked","getSideState","main","activeKeys","undocked","docked","DEFAULT_HEIGHT","DEFAULT_WIDTH","getFloatWindowsState","floatingBounds","getFloatWindowState","getStripeRect","start","rect","end","getDropPositions","getRef","score","abs","relative","keyToOffsets","boundingRect","getKeyToOffsets","dropPositions","lastDropPosition","stripeRect","getCanDrop","bestMatch","candidate","STRIPE_BUTTON_LINE_HEIGHT","StyledToolWindowStripeButton","StyledToolWindowStripe","theOtherSide","preventCollapse","StyledSpacer","useElementMove","ghost","ghostOption","otherOptions","updateGhostPosition","defaultGhost","colors","computedBackground","unshift","resultColor","nextColor","findEffectiveBackgroundColor","createDefaultGhost","append","ToolWindowStripe","render","onItemPress","getProps","latestPropsRef","moveDisabled","useMovableStripeButtons","isNotCurrentItem","anItem","ToolWindowStripeButton","getStripeButtonStyles","styles","marginValue","display","StyledUndockSide","UndockSide","ToolWindows","hideToolWindowBars","useWidescreenLayout","toolWindowsState","onToolWindowStateChange","mainContentMinWidth","windowsById","indexBy","mainContentFocusScopeRef","layoutState","setLayoutState","windowFocusableRefs","latestRef","container","_setLayoutState","windowIds","removedFromSideBarIds","groupBy","getToolWindowsLayoutState","observer","ResizeObserver","resize","contentRect","unobserve","hasFocus","focusLastActiveWindow","lastFocusedKey","focusMainContent","changeState","updater","interactionOutsideRef","onFocusLost","handleBodyFocus","focusLosingElement","focusReceivingElement","useOnFocusLost","renderStripe","toolbarButton","all","lastFocused","ToolWindowStateProvider","mainContentFocusableRef","renderSideDockedView","resizeDockSplitView","onDockResize","containerBounds","resizeDock","getSplitViewProps","firstAnchor","secondAnchor","horizontalSplitterProps","verticalSplitterProps","outerSplitterProps","innerSplitterProps","undockLayers","resizeUndock","setFloatingBound","renderInnerLayout","ToolWindowStateContext","useToolWindowState","hide","removeFromSidebar","moveToSide","changeViewMode","stretchWidth","stretchHeight","setFloatingBounds","isDocked","areInSameSection","curry","window1","window2","getViewModeType","ToolWindowsState","layoutToRestore","invalidWindows","targetKey","mapWindows","hideAll","restoreWindows","closableViewModes","viewModeType","sideOrIndex","targetSide","targetIndex","targetSideWindows","indexInTargetSide","sortedTargetWindows","insert","newTargetSideWindows","newValue","targetViewMode","stretch","mapFn","mapObjIndexed","property","currentFloatingBound","resizeSide","dock","isInResizingView","toolWindowState","_temp2","inputs","getAnchorOrientation","useToolWindow","contentRef","focusableContentRef","onFocusChange","contentHasFocus","setContentHasFocus","contentFocusWithinProps","toolWindowProps","autoHideProps","hideTimeoutId","windowFocusWithinProps","onFocusWithin","useAutoHide","forwardFocus","ignoreFocusedDescendant","toolWindowContentProps","toolWindowHeaderProps","ToolWindowSettingsIconMenu","viewModeActionGroup","VIEW_MODE_ACTION_GROUP_ID","moveToActionGroup","MOVE_TO_ACTION_GROUP_ID","resizeActions","TOOL_WINDOW_RESIZE_ACTION_GROUP_ID","maximizeAction","removeFromSideBarAction","REMOVE_TOOL_WINDOW_FROM_SIDEBAR_ACTION_ID","gearIconActions","ViewModeToActionId","StyledToolWindowHeader","StyledToolWindowHeaderActions","StyledToolWindowHeaderContent","DefaultToolWindowHeader","additionalActions","Toolbar","DOCK_TOOL_WINDOW_ACTION_ID","StyledToolWindowContainer","StyledToolWindowContent","DefaultToolWindowContext","useDefaultToolWindowContext","DefaultToolWindow","headerContent","mainContentTitle","defaultToolWindowContext","useToolWindowActions","getToolWindowNumberFromShortcut","num","DefaultToolWindowToolbarButton","showNumber","getActivateToolWindowActionId","number","DefaultToolWindows","showNumbers","toolWindowsRef","windowById","useToolWindowsActions","getPresentation","MultiViewToolWindow","groupTabs","isToolWindowFocused","setToolWindowFocused","activeKey","setActiveKey","defaultActiveKey","onActiveKeyChange","contents","toArray","child","validChild","MultiContentToolWindowContent","renderedViewSwitcher","onSelectionChange","tabContent","previousKeys","usePrevious","newActiveKey","activeContent","View","DOCK_PINNED_MODE_ACTION_ID","DOCK_UNPINNED_MODE_ACTION_ID","UNDOCK_MODE_ACTION_ID","FLOAT_MODE_ACTION_ID","WINDOW_MODE_ACTION_ID","HEIGHT_RESIZE_STEP","WIDTH_RESIZE_STEP","anchors","getAnchorName","docked_pinned","docked_unpinned","undock","float","createDefaultActionGroup","alert","resizeGroup","isAnySideWindowWindowOpen","getOrdinal","description","n","ord","borderStyle","borderPropToCssProp","StyledToolbar","horizontal","vertical","StyledShowMoreButton","StyledHorizontalToolbar","StyledVerticalToolbar","StyledToolbarContent","shouldWrap","firstOverflowedIndex","OrientationContext","overflowBehavior","rootProps","showMoreButtonRef","isOverflowPopupVisible","setOverflowPopupVisible","popupHeight","setPopupHeight","firstOverflowedChildIndex","setFirstOverflowedChildIndex","firstOverflowedChildRef","childElements","firstOverflowedChild","toolbarProps","onMouseMove","firstOverflowedElement","shouldShow","clientY","clientX","onMouseLeave","toolbarOverflowPopupProps","showOverflowPopup","ToolbarInOverlay","firstVisibleIndex","ToolbarSeparator","ActionHelpTooltip","helpText","link","tooltipProps","Tooltip","multiline","Description","HelpTooltip","useTooltipTriggerState","positionAria","TooltipTriggerAndOverlay","trigger","StyledTooltip","tooltipBackground","hasPointer","tooltipBorderColor","WITH_POINTER_BORDER_RADIUS","StyledShortcut","StyledHeader","fontSizeDelta","StyledDescription","placementToPointerSide","center","withPointer","isInteractive","pointerPositionStyle","TooltipContext","useTooltip","TooltipPointer","tooltipRef","_Tooltip","POINTER_THICKNESS","TRANSLATE","sideStyles","StyledTooltipPointer","POINTER_WIDTH","POINTER_HEIGHT","normalizeCssValue","withMin","withMax","HEIGHT_OFFSET","WIDTH_OFFSET","limitPointerPositionStyles","applyVerticalMinMax","identity","applyHorizontalMinMax","getOffsetCssProp","pointerPositionToOffsetStyle","offsetValue","setInteractive","useTooltipTrigger","FocusableProvider","normalizeChildren","useAriaTooltipTrigger","StyledValidationTooltip","StyledWarningValidationTooltip","SpeedSearchTreeNode","TreeNode","SpeedSearchTree","treeRef","hideSpeedSearchPopup","treeProps","treeContext","useSpeedSearchTree","useTreeVirtualizer","TreeContext","StyledTree","collectionSpeedSearch","TreeKeyboardDelegate","speedSearchKeyboardProps","selectableTree","useSelectableTree","getKeyLeftOf","getKeyRightOf","TREE_ICON_SIZE","StyledTreeNodeIcon","getIcon","iconPath","TreeNodeIcon","useTreeNodeToggleButton","treeNodeToggleButtonProps","selectedDescendantKeys","toggleSelection","StyledTreeNode","level","onActionRef","treeNodeProps","onDoubleClick","useTreeNode","selectionKeyDown","focusedItem","isExpandable","onNodeKeyDown","shouldToggle","shiftKey","useSelectParentOfRemovedSelectedNode","previousCollectionRef","rawSelection","invalid","valid","invalidKey","useCollectionCacheInvalidation","cacheInvalidation","invalidators","lastInvalidators","anInvalidator","Symbol","iterator","TreeCollection","keyMap","iterable","last","visit","nextKey","prevKey","_Symbol$iterator","getKeyBefore","getKeyAfter","idx","getSingleChildrenKeys","getSingleChildrenKeysRecursive","childNodesIterator","firstChild","done","noMoreChildren","isEmptyIterable","TreeSelectionManager","expandSelection","expandKeys","getExpandAndShrinkKeys","shrinkSelection","shrinkKeys","recursivelyGetExpandAndShrinkKeys","previousChild","newKeys","parentDescendants","getAllDescendants","getAllRoots","descendants","stopKeys","flat","_TreeCollection","rootKeys","getAllExpandableKeys","rootNodes","recursivelyAddExpandableKeys","add","setExpandedKeys","selectionState","useMultipleSelectionState","tree","useCollection","latestState","expandAll","collapseAll","useTreeRef","newExpandedKeys","toggleTreeNode","expandedSiblings","getRootItemKeys","getChildItems","siblings","getSiblings","aKey","sectionItems","res","FlattenedTreeLayout","buildChild","layoutNode","doBuildCollection","padding","visibleNodes","maxY","isLoading","Rect","visibleRect","loaderHeight","loader","LayoutInfo","layoutInfos","placeholderHeight","getVisibleLayoutInfos","useTreeActions","collectSelectableItemsRecursive","getChildren","collectedItems","NestedSelection","cache","WeakMap","getSelectionState","itemsInSubtree","collectSelectableItems","cachedState","allDescendantsStates","SpeedSearchTreeWithCheckboxes","nestedSelection","otherInvalidators","StyledCheckboxWrapper","TreeNodeCheckbox","selectItemOnPress","itemContext","useNestedSelectionState","selectedKeysProp","defaultSelectedKeys","onSelectedKeysChange","selectedKeysSetter","useControllableSet","ListLayout","keyToWidth","visibleContentWidth","buildItem","buildNode","buildDivider","rectHeight","estimatedSize","buildCollection","getVisibleContentWidth","invalidateEverything","layoutNodes","newRect","oldRect","validate","invalidationContext","lastWidth","updateItemSize","changed","visibleViews","view","itemContentWidth","intersects","getVisibleRect","isWordSeparator","isWhitespace","char","test","isUpperCase","isMeaningfulChar","ch","rawPattern","isStarts","isStart","pattern","continuous","inputIndex","patternIndex","lastMatch","chars","previousChar","manager","disallowSelectAll","useLocale","handlers","navigateToKey","childFocus","selectionMode","extendSelection","isCtrlKeyPressed","getKeyPageBelow","getKeyPageAbove","clearSelection","walker","getFocusableTreeWalker","tabbable","lastChild","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","lastSelectedKey","typeSelectProps","useTypeSelect","onTypeSelect","useOriginalSelectableItem","styledComponents","ThemeConsumer","directChildRef","focusManagerRef","forceFocusFirst","containerElement","focusFirst","WrappedFocusScope","GetFocusManager","savedUserSelect","handlersRef","documentElement","webkitUserSelect","pageX","pageY","dragStarted","runAfterTransition","OverflowObserver","callback","data","mutations","mutation","removedNodes","intersectionObserver","addedNodes","IntersectionObserver","newHiddenElements","entry","isIntersecting","newVisibleElements","previouslyOverflowedElements","currentOverflowElements","childElement","scrollableContainerRef","rootMargin","setOverflowedElements","overflowObserver","change","getExpandAllKeys","roots","processItem","getExpandedToNodesKeys","targetNodeKeys","targetNodeKeySet","childValues","childValue","dfs","bfsVisit","bfs","parentValue","childNode","sortTreeNodesInPlace","by","compareFn","aa","bb","Context","nullErrorMessage","apply","possiblyBlurredElement","innerRef","lastMouseClientPos","globalMoveHandler","fakeTarget","visibility","coordinatesSource","_updatePosition","ImmutableSet","setValueWithMutation","_len2","_key2","_len3","_key3","mutate","createSetInterface","currentValue","useStateSetterForSet","t","prototype","hasOwnProperty","call","for","o","amp","apos","gt","lt","nbsp","quot","u","s","l","f","d","p","m","h","k","$","v","S","z","w","A","E","L","M","O","I","j","B","R","T","C","D","F","N","P","Z","G","H","q","U","V","W","Q","X","J","K","Y","tt","nt","et","rt","ot","ct","_t","ut","it","st","ft","dt","pt","mt","yt","ht","kt","exec","Ht","HIGH","xt","bt","$t","vt","St","zt","wt","trim","At","Et","textAlign","Lt","Mt","Ot","It","jt","endsWith","trimEnd","Bt","decodeURIComponent","Rt","Tt","Ct","Dt","Ft","Nt","Pt","Zt","Gt","shift","qt","overrides","slugify","namedCodesToUnicode","forceInline","forceBlock","wrapper","forceWrapper","blockQuote","breakLine","breakThematic","codeBlock","MAX","codeFenced","codeInline","LOW","footnote","footnoteReference","href","gfmTask","checked","readOnly","enforceAtxHeadings","headingSetext","htmlComment","image","alt","linkAngleBraceStyleDetector","linkBareUrlDetector","linkMailtoDetector","orderedList","unorderedList","newlineCoalescer","paragraph","refImage","refLink","table","tableSeparator","MIN","textBolded","MED","textEmphasized","textEscaped","textMarked","textStrikethroughed","disableParsingRawHTML","htmlBlock","htmlSelfClosing","substring","ApiDescription","of","docgenInfo","log","Markdown","MDXComponents","useAutoLinkedJsDoc","ExampleContext","themeName","themeJson","light","lightTheme","highContrast","highContrastTheme","darcula","darculaTheme","Theme","useFixDocusaurusStyleBleeds","BrowserOnly","ThemeProvider","Example","_StyledDiv","FLAG_CLASSNAME","classList","querySelectorAll","linkEl","sheet","cssRules","rule","cssText","deleteRule","_styled","RefToIntellijPlatform","useComponentLinkMap","docs","useDocusaurusContext","globalData","versions","version","linkMap","doc","componentName","InlineCode","componentLinkMap","comment","toCommentBlock","url","line","StyledSvg","StyledExpandButton","Expandable","onExpand","setIsExpandable","viewBox","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","transform","icons","clsx","playgroundHeader","flex","LivePreviewLoader","ErrorFallback","tryAgain","errorFallback","ErrorBoundaryTryAgainButton","Preview","ErrorBoundary","params","LivePreview","LiveError","ResultWithHeader","Translate","playgroundPreview","ThemedLiveEditor","isBrowser","useIsBrowser","LiveEditor","playgroundEditor","EditorWithHeader","lightThemeJson","Playground","transformCode","prismTheme","usePrismTheme","noInline","metastring","playgroundContainer","LiveProvider","SpeedSearchContainer","CollectionSpeedSearchContainer","useSpeedSearchList","listState","otherOutputs","SpeedSearchList","StyledIconLiveIndicator","SpeedSearch","speedSearchState","Tree","itemType","ProgressBarPauseButton","onPausedChange","StyledPopover","Popover","popoverRef","popoverProps","usePopover","DismissButton","onDismiss","StatelessListBox","listBoxProps","useListBox","ListBoxSection","section","Option","optionProps","useOption","StyledSectionHeading","StyledSection","useListBoxSection","StyledDropdownTrigger","borderRadius","StyledDropdownValue","StyledDropdownArrowIcon","Dropdown","useSelectState","valueProps","isInvalid","useSelect","selectedItem","LazyExampleApp","juiComponents","ExampleApp","darculaThemeJson","highContrastThemeJson","themed","noPadding","CodeBlock","live","scope","ReactLiveScope","CodeWrapper","Code","inlineCode","frontMatter","sidebar_position","contentTitle","metadata","assets","toc","layoutProps","MDXLayout","MDXContent","components","mdx","mdxType","parentName","isMDXComponent"],"sourceRoot":""}