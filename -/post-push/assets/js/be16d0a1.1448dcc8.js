"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["492"],{60029:function(e,t,n){n.r(t),n.d(t,{default:()=>u,frontMatter:()=>o,metadata:()=>r,assets:()=>d,toc:()=>l,contentTitle:()=>i});var r=JSON.parse('{"id":"components/StatusBar","title":"StatusBar","description":"Status bar component rendered at the bottom of the main window.","source":"@site/docs/components/StatusBar.mdx","sourceDirName":"components","slug":"/components/StatusBar","permalink":"/jui/-/post-push/docs/components/StatusBar","draft":false,"unlisted":false,"editUrl":"https://github.com/alirezamirian/jui/edit/master/packages/website/docs/components/StatusBar.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"SpeedSearch","permalink":"/jui/-/post-push/docs/components/SpeedSearch"},"next":{"title":"Tabs","permalink":"/jui/-/post-push/docs/components/Tabs"}}'),a=n("52322"),s=n("22840");let o={},i="StatusBar",d={},l=[{value:"Live example",id:"live-example",level:3}];function c(e){let t={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"statusbar",children:"StatusBar"})}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"https://jetbrains.github.io/ui/components/status_bar/",children:"Status bar"})," component rendered at the bottom of the main window.\nIn the reference implementation, there are three slots for content: left, right and center.\nIt doesn't seem center is really necessary, so only left and right are supported for now."]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"StatusBarWidget"})," is used to render clickable status bar buttons (aka. widgets)."]}),"\n",(0,a.jsx)(t.h3,{id:"live-example",children:"Live example"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-jsx",metastring:"live themed",live:!0,children:'<div style={{ margin: "48px -16px -16px" }}>\n  <StatusBar\n    right={\n      <>\n        <ProgressBar\n          value={40}\n          width={146}\n          name="Indexing Paused"\n          namePosition="side"\n          button={\n            <ProgressBarPauseButton small paused onPausedChange={() => {}} />\n          }\n          dense\n          style={{ marginLeft: 10 }}\n        />\n        <StatusBarWidget label="LF" />\n        <StatusBarWidget label="UTF-8" />\n        <MenuTrigger\n          direction="top"\n          renderMenu={({ menuProps }) => (\n            <Menu {...menuProps}>\n              <Item>Configure Indents for Typescript</Item>\n              <Item>Disable Indents Detection for Project</Item>\n            </Menu>\n          )}\n        >\n          {(props, ref) => (\n            <StatusBarWidget {...props} ref={ref} label="2 spaces" />\n          )}\n        </MenuTrigger>\n        <StatusBarWidget label="TypeScript 4.4.3" />\n        <StatusBarWidget\n          icon={<PlatformIcon icon="vcs/branch.svg" />}\n          label="feat/StatusBar"\n        />\n        <StatusBarWidget icon={<PlatformIcon icon="ide/readwrite.svg" />} />\n        <StatusBarWidget icon={<PlatformIcon icon="ide/fatalError.svg" />} />\n      </>\n    }\n    left={\n      <>\n        <PlatformIcon icon="general/tbHidden.svg" />\n        <div style={{ marginLeft: "0.75rem", cursor: "pointer" }} role="button">\n          Workspace associated with branch \'feat/balloon-provider\' has been\n          restored // Rollback Configure...\n        </div>\n      </>\n    }\n  />\n</div>\n'})})]})}function u(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}}}]);
//# sourceMappingURL=be16d0a1.1448dcc8.js.map