{"version":3,"file":"assets/js/b91ccea3.6cfe638e.js","sources":["webpack://website/../jui/src/ActionSystem/ActionGroup.tsx","webpack://website/../jui/src/ActionSystem/ActionShortcut.tsx","webpack://website/../jui/src/ActionSystem/useShortcut.ts","webpack://website/../jui/src/ActionSystem/ActionsProvider.tsx","webpack://website/../jui/src/ActionSystem/CommonActionIds.ts","webpack://website/../jui/src/ActionSystem/KeymapProvider.tsx","webpack://website/../jui/src/ActionSystem/Shortcut.ts","webpack://website/../jui/src/ActionSystem/components/ActionButton.tsx","webpack://website/../jui/src/ActionSystem/components/ActionGroupMenu.tsx","webpack://website/../jui/src/ActionSystem/components/ActionsMenu.tsx","webpack://website/../jui/src/ActionSystem/components/useCreateDefaultActionGroup.tsx","webpack://website/../jui/src/ActionSystem/defaultKeymap.tsx","webpack://website/../jui/src/ActionSystem/shortcutToString.ts","webpack://website/../jui/src/ActionSystem/useActionGroup.tsx","webpack://website/../jui/src/AlertDialog/AlertDialog.tsx","webpack://website/../jui/src/AlertDialog/useAlertDialog.tsx","webpack://website/../jui/src/Balloon/Balloon.styled.tsx","webpack://website/../jui/src/Balloon/Balloon.tsx","webpack://website/../jui/src/Balloon/BalloonManager.tsx","webpack://website/../jui/src/Balloon/StyledBalloonsStack.tsx","webpack://website/../jui/src/Button/BareButton.tsx","webpack://website/../jui/src/Button/StyledButton.tsx","webpack://website/../jui/src/Button/Button.tsx","webpack://website/../jui/src/ButtonGroup/ButtonGroup.tsx","webpack://website/../jui/src/Checkbox/Checkbox.tsx","webpack://website/../jui/src/Checkbox/CheckboxIcon.tsx","webpack://website/../jui/src/CollectionSpeedSearch/CollectionSpeedSearchContext.tsx","webpack://website/../jui/src/CollectionSpeedSearch/HighlightedTextValue.tsx","webpack://website/../jui/src/CollectionSpeedSearch/useCollectionSpeedSearch.ts","webpack://website/../jui/src/CollectionSpeedSearch/useCollectionSpeedSearchResult.ts","webpack://website/../jui/src/CollectionSpeedSearch/createSpeedSearchSelectionManager.ts","webpack://website/../jui/src/CollectionSpeedSearch/createSpeedSearchKeyboardDelegate.ts","webpack://website/../jui/src/Collections/Divider.ts","webpack://website/../jui/src/Collections/Item.ts","webpack://website/../jui/src/Collections/ItemLayout.tsx","webpack://website/../jui/src/Collections/ItemStateContext.tsx","webpack://website/../jui/src/Collections/getItemElement.ts","webpack://website/../jui/src/Collections/useCollectionAutoScroll.ts","webpack://website/../jui/src/Collections/useCollectionFocusProxy.ts","webpack://website/../jui/src/Dropdown/ComboBox.tsx","webpack://website/../jui/src/Dropdown/Dropdown.tsx","webpack://website/../jui/src/Dropdown/ListBox.tsx","webpack://website/../jui/src/Dropdown/StatelessListBox.tsx","webpack://website/../jui/src/Dropdown/StyledContainer.tsx","webpack://website/../jui/src/Dropdown/StyledDropdownArrowIcon.tsx","webpack://website/../jui/src/Field/ContextHelp.tsx","webpack://website/../jui/src/Field/Label.tsx","webpack://website/../jui/src/Icon/AutoHoverPlatformIcon.tsx","webpack://website/../jui/src/Icon/LafIcon.tsx","webpack://website/../jui/src/Icon/PlatformIcon.tsx","webpack://website/../jui/src/Icon/StyledIconWrapper.tsx","webpack://website/../jui/src/Icon/useSvgIcon.tsx","webpack://website/../jui/src/IconButton/IconButton.tsx","webpack://website/../jui/src/IconButtonWithMenu/IconButtonWithMenu.tsx","webpack://website/../jui/src/Img.tsx","webpack://website/../jui/src/InputField/Input.tsx","webpack://website/../jui/src/InputField/InputField.tsx","webpack://website/../jui/src/Link/StyledLink.tsx","webpack://website/../jui/src/Link/Link.tsx","webpack://website/../jui/src/List/List.tsx","webpack://website/../jui/src/List/ListContext.tsx","webpack://website/../jui/src/List/ListDivider.tsx","webpack://website/../jui/src/List/ListItem.tsx","webpack://website/../jui/src/List/StyledList.tsx","webpack://website/../jui/src/List/StyledListItem.tsx","webpack://website/../jui/src/List/useList.ts","webpack://website/../jui/src/List/useSelectableList.ts","webpack://website/../jui/src/List/useListState.ts","webpack://website/../jui/src/Collections/useCollectionRef.ts","webpack://website/../jui/src/List/StyledListSectionHeader.tsx","webpack://website/../jui/src/List/renderWrapper.tsx","webpack://website/../jui/src/List/useListVirtualizer.tsx","webpack://website/../jui/src/LoadingSpinner/DelayedLoadingSpinner.tsx","webpack://website/../jui/src/LoadingSpinner/LoadingSpinner.tsx","webpack://website/../jui/src/Menu/useContextMenu.tsx","webpack://website/../jui/src/Menu/ContextMenuContainer.tsx","webpack://website/../jui/src/Collections/patchCollectionProps.tsx","webpack://website/../jui/src/Menu/Menu.tsx","webpack://website/../jui/src/Menu/MenuItem.tsx","webpack://website/../jui/src/Menu/MenuItemLayout.tsx","webpack://website/../jui/src/Menu/MenuOverlay.tsx","webpack://website/../jui/src/Menu/MenuOverlayFromOrigin.tsx","webpack://website/../jui/src/Menu/useOverlayPositionFromOrigin.tsx","webpack://website/../jui/src/Menu/MenuTrigger.tsx","webpack://website/../jui/src/Menu/SpeedSearchMenu.tsx","webpack://website/../jui/src/Menu/StyledMenu.tsx","webpack://website/../jui/src/Menu/StyledMenuItem.tsx","webpack://website/../jui/src/Menu/Submenu.tsx","webpack://website/../jui/src/Menu/_useSubmenu.ts","webpack://website/../jui/src/Menu/_useSubmenuState.tsx","webpack://website/../jui/src/Menu/MenuSection.tsx","webpack://website/../jui/src/Menu/renderMenuNodes.tsx","webpack://website/../jui/src/Mnemonic/MnemonicTrigger.tsx","webpack://website/../jui/src/Overlay/UNSAFE_React17SuspenseFix.tsx","webpack://website/../jui/src/ModalWindow/ModalWindow.tsx","webpack://website/../jui/src/ModalWindow/WindowContext.ts","webpack://website/../jui/src/ModalWindow/WindowFooter.tsx","webpack://website/../jui/src/ModalWindow/WindowHeader.tsx","webpack://website/../jui/src/ModalWindow/WindowLayout.tsx","webpack://website/../jui/src/ModalWindow/WindowManager.tsx","webpack://website/../jui/src/Overlay/Overlay.tsx","webpack://website/../jui/src/Overlay/OverlayInteractionHandler.tsx","webpack://website/../jui/src/Overlay/OverlayMoveHandle.tsx","webpack://website/../jui/src/Overlay/OverlayResizeHandles.tsx","webpack://website/../jui/src/Overlay/Popover.tsx","webpack://website/../jui/src/Overlay/bounds-helpers.tsx","webpack://website/../jui/src/utils/useDebounce.ts","webpack://website/../jui/src/Overlay/useContentSize.tsx","webpack://website/../jui/src/Overlay/useResizableMovableOverlay.tsx","webpack://website/../jui/src/utils/mergeNonNullProps.tsx","webpack://website/../jui/src/Popup/Popup.tsx","webpack://website/../jui/src/Popup/_useDialog.ts","webpack://website/../jui/src/Popup/PopupContext.tsx","webpack://website/../jui/src/Popup/PopupHeader.tsx","webpack://website/../jui/src/Popup/PopupLayout.tsx","webpack://website/../jui/src/Popup/PopupManager.tsx","webpack://website/../jui/src/Popup/PopupTrigger.tsx","webpack://website/../jui/src/Popup/StyledPopupContainer.tsx","webpack://website/../jui/src/Popup/StyledPopupHint.tsx","webpack://website/../jui/src/ProgressBar/ProgressBar.tsx","webpack://website/../jui/src/ProgressBar/ProgressBarStopButton.tsx","webpack://website/../jui/src/ResizableView.tsx","webpack://website/../jui/src/Resizer/BottomResizer.tsx","webpack://website/../jui/src/Resizer/HorizontalResizer.tsx","webpack://website/../jui/src/Resizer/LeftResizer.tsx","webpack://website/../jui/src/Resizer/RightResizer.tsx","webpack://website/../jui/src/Resizer/TopResizer.tsx","webpack://website/../jui/src/Resizer/VerticalResizer.tsx","webpack://website/../jui/src/Resizer/useResizer.ts","webpack://website/../jui/src/SearchInput/SearchInput.tsx","webpack://website/../jui/src/SpeedSearch/SpeedSearchInput.tsx","webpack://website/../jui/src/SpeedSearch/SpeedSearchPopup.tsx","webpack://website/../jui/src/SpeedSearch/useSpeedSearch.tsx","webpack://website/../jui/src/SpeedSearch/useGhostInput.tsx","webpack://website/../jui/src/StatusBar/StatusBar.tsx","webpack://website/../jui/src/StatusBar/StatusBarWidget.tsx","webpack://website/../jui/src/StyledSeparator.tsx","webpack://website/../jui/src/Tabs/DebuggerTabs/DebuggerTabContent.tsx","webpack://website/../jui/src/Tabs/DebuggerTabs/StyledDebuggerTab.ts","webpack://website/../jui/src/Tabs/DebuggerTabs/DebuggerTabs.tsx","webpack://website/../jui/src/Tabs/EditorTabs/EditorTabContent.tsx","webpack://website/../jui/src/Tabs/EditorTabs/StyledEditorTab.ts","webpack://website/../jui/src/Tabs/EditorTabs/StyledEditorTabs.ts","webpack://website/../jui/src/Tabs/EditorTabs/EditorTabs.tsx","webpack://website/../jui/src/Tabs/StyledDefaultTab.ts","webpack://website/../jui/src/Tabs/StyledDefaultTabs.ts","webpack://website/../jui/src/Tabs/TabCloseButton.tsx","webpack://website/../jui/src/Tabs/TabContentLayout.tsx","webpack://website/../jui/src/Tabs/TabItem.tsx","webpack://website/../jui/src/Tabs/TabTheme.ts","webpack://website/../jui/src/Tabs/StyledHorizontalOverflowShadows.tsx","webpack://website/../jui/src/Tabs/Tab.tsx","webpack://website/../jui/src/Tabs/Tabs.tsx","webpack://website/../jui/src/Tabs/useHasOverflow.tsx","webpack://website/../jui/src/Tabs/TabsOverflowMenu.tsx","webpack://website/../jui/src/Tabs/ToolWindowTabs/ToolWindowTabContent.tsx","webpack://website/../jui/src/Tabs/ToolWindowTabs/StyledToolWindowTab.ts","webpack://website/../jui/src/Tabs/ToolWindowTabs/StyledToolWindowTabs.ts","webpack://website/../jui/src/Tabs/ToolWindowTabs/ToolWindowTabs.tsx","webpack://website/../jui/src/TextRange.ts","webpack://website/../jui/src/TextWithHighlights/TextWithHighlights.tsx","webpack://website/../jui/src/Theme/parseColorString.ts","webpack://website/../jui/src/Theme/Color.ts","webpack://website/../jui/src/ThreeViewSplitter/ThreeViewSplitter.tsx","webpack://website/../jui/src/ToolWindows/FloatView.tsx","webpack://website/../jui/src/ToolWindows/FloatToolWindows.tsx","webpack://website/../jui/src/ToolWindows/MovableToolWindowStripeProvider.tsx","webpack://website/../jui/src/ToolWindows/StyledToolWindowOuterLayout.tsx","webpack://website/../jui/src/ToolWindows/ToolWindowsState/ToolWindowsLayoutState.ts","webpack://website/../jui/src/ToolWindows/createGetDropPosition.tsx","webpack://website/../jui/src/ToolWindows/StyledToolWindowStripeButton.tsx","webpack://website/../jui/src/ToolWindows/StyledToolWindowStripe.tsx","webpack://website/../jui/src/ToolWindows/ToolWindowStripe.tsx","webpack://website/../jui/src/ToolWindows/useElementMove.tsx","webpack://website/../jui/src/ToolWindows/findEffectiveBackgroundColor.tsx","webpack://website/../jui/src/ToolWindows/UndockSide.tsx","webpack://website/../jui/src/ToolWindows/ToolWindows.tsx","webpack://website/../jui/src/ToolWindows/useOnFocusLost.tsx","webpack://website/../jui/src/ToolWindows/ToolWindowsState/ToolWindowStateProvider.tsx","webpack://website/../jui/src/ToolWindows/ToolWindowsState/ToolWindowsState.ts","webpack://website/../jui/src/ToolWindows/utils.ts","webpack://website/../jui/src/ToolWindowsImpl/ToolWindowSettingsIconMenu.tsx","webpack://website/../jui/src/ToolWindowsImpl/DefaultToolWindowHeader.tsx","webpack://website/../jui/src/ToolWindowsImpl/DefaultToolWindow.tsx","webpack://website/../jui/src/ToolWindowsImpl/useToolWindow.tsx","webpack://website/../jui/src/ToolWindowsImpl/DefaultToolWindowToolbarButton.tsx","webpack://website/../jui/src/ToolWindowsImpl/DefaultToolWindows.tsx","webpack://website/../jui/src/ToolWindowsImpl/MultiViewToolWindow.tsx","webpack://website/../jui/src/ToolWindowsImpl/ToolWindowActionIds.ts","webpack://website/../jui/src/ToolWindowsImpl/useToolWindowActions.tsx","webpack://website/../jui/src/ToolWindowsImpl/useToolWindowsActions.tsx","webpack://website/../jui/src/Toolbar/Toolbar.tsx","webpack://website/../jui/src/Tooltip/ActionHelpTooltip.tsx","webpack://website/../jui/src/Tooltip/ActionTooltip.tsx","webpack://website/../jui/src/Tooltip/HelpTooltip.tsx","webpack://website/../jui/src/Tooltip/PositionedTooltipTrigger.tsx","webpack://website/../jui/src/Tooltip/tooltip-styles.ts","webpack://website/../jui/src/Tooltip/TooltipPointer.tsx","webpack://website/../jui/src/Tooltip/Tooltip.tsx","webpack://website/../jui/src/Tooltip/TooltipContext.tsx","webpack://website/../jui/src/utils/useMouseEventOverlayPosition.tsx","webpack://website/../jui/src/Tooltip/TooltipTrigger.tsx","webpack://website/../jui/src/Tooltip/TooltipTriggerAndOverlay.tsx","webpack://website/../jui/src/Tooltip/ValidationTooltip.tsx","webpack://website/../jui/src/Tree/SpeedSearchTree/SpeedSearchTreeNode.tsx","webpack://website/../jui/src/Tree/SpeedSearchTree/SpeedSearchTree.tsx","webpack://website/../jui/src/Tree/SpeedSearchTree/useSpeedSearchTree.ts","webpack://website/../jui/src/Tree/StyledTree.tsx","webpack://website/../jui/src/Tree/TreeContext.tsx","webpack://website/../jui/src/Tree/TreeKeyboardDelegate.tsx","webpack://website/../jui/src/Tree/TreeNodeIcon.tsx","webpack://website/../jui/src/Tree/StyledTreeNode.tsx","webpack://website/../jui/src/Tree/TreeNode.tsx","webpack://website/../jui/src/Tree/useTreeNodeToggleButton.tsx","webpack://website/../jui/src/Tree/useTreeNode.tsx","webpack://website/../jui/src/Tree/useSelectableTree.tsx","webpack://website/../jui/src/Tree/useTreeRef.tsx","webpack://website/../jui/src/Collections/useCollectionCacheInvalidation.ts","webpack://website/../jui/src/Tree/__copied__TreeCollection.ts","webpack://website/../jui/src/Tree/getSingleChildrenKeys.ts","webpack://website/../jui/src/Tree/TreeSelectionManager.ts","webpack://website/../jui/src/Tree/useTreeState.ts","webpack://website/../jui/src/Tree/useTreeVirtualizer.tsx","webpack://website/../jui/src/TreeActions/useTreeActions.tsx","webpack://website/../jui/src/TreeCheckboxes/NestedSelection.ts","webpack://website/../jui/src/TreeCheckboxes/SpeedSearchTreeWithCheckboxes.tsx","webpack://website/../jui/src/TreeCheckboxes/TreeNodeCheckbox.tsx","webpack://website/../jui/src/TreeCheckboxes/useNestedSelectionState.ts","webpack://website/../jui/src/VariableWidthListLayout.tsx","webpack://website/../jui/src/utils/string-utils.ts","webpack://website/../jui/src/minusculeMatch.ts","webpack://website/../jui/src/selection/useSelectableCollection.ts","webpack://website/../jui/src/selection/useSelectableItem.tsx","webpack://website/../jui/src/style-constants.ts","webpack://website/../jui/src/styled.ts","webpack://website/../jui/src/utils/FocusScope.tsx","webpack://website/../jui/src/utils/interaction-utils/textSelection.ts","webpack://website/../jui/src/utils/interaction-utils/useMove.tsx","webpack://website/../jui/src/utils/keyboard-utils.ts","webpack://website/../jui/src/utils/overflow-utils/OverflowObserver.ts","webpack://website/../jui/src/utils/overflow-utils/useOverflowObserver.tsx","webpack://website/../jui/src/utils/tree-utils.ts","webpack://website/../jui/src/utils/useContextOrThrow.tsx","webpack://website/../jui/src/utils/useEventCallback.ts","webpack://website/../jui/src/utils/useFocusForwarder.ts","webpack://website/../jui/src/utils/useLatest.ts","webpack://website/../jui/src/utils/usePrevious.ts","webpack://website/../jui/src/utils/immutableSet.ts","webpack://website/../jui/src/utils/useSet.ts","webpack://website/../../node_modules/markdown-to-jsx/dist/index.modern.js","webpack://website/./src/components/ApiDescription.tsx","webpack://website/./src/components/component-linking.tsx","webpack://website/./src/theme/CodeBlock/index.tsx","webpack://website/./src/theme/CodeBlock/Expandable.tsx","webpack://website/./src/theme/CodeBlock/Playground.tsx","webpack://website/../jui/src/SpeedSearch/SpeedSearchContainer.tsx","webpack://website/../jui/src/CollectionSpeedSearch/CollectionSpeedSearchContainer.tsx","webpack://website/../jui/src/List/SpeedSearchList/useSpeedSearchList.ts","webpack://website/../jui/src/List/SpeedSearchList/SpeedSearchList.tsx","webpack://website/../jui/src/Icon/StyledIconLiveIndicator.tsx","webpack://website/../jui/src/SpeedSearch/SpeedSearch.tsx","webpack://website/../jui/src/Tree/Tree.tsx","webpack://website/../jui/src/ProgressBar/ProgressBarPauseButton.tsx","webpack://website/./src/theme/ReactLiveScope/index.tsx","webpack://website/./src/theme/Playground/style-overrides.module.css","webpack://website/./src/theme/MDXComponents/Code.tsx","webpack://website/./src/theme/MDXComponents/index.ts","webpack://website/./docs/components/Input.mdx"],"sourcesContent":["import {\n  Action,\n  ActionDefinition,\n} from \"@intellij-platform/core/ActionSystem/Action\";\nimport { DividerItem } from \"@intellij-platform/core/Collections\";\n\nexport type ActionInResolvedGroup = Action & { parent: ResolvedActionGroup };\n\n/**\n * Different ways to show a group of actions in a menu.\n * - `submenu`: renders children as submenu (corresponding, in the reference impl, to `isPopup` property of ActionGroup\n *   being set to `true` and 'SUPPRESS_SUBMENU' clientProperty not being set)\n * - `none`: renders the action group as a simple menu item, not rendering its children at all.\n *   The action group will be performed, which typically opens a popup (see {@link useCreateDefaultActionGroup}),\n *   showing the children.\n *   (corresponding, in the reference impl, to `isPopup` property and 'SUPPRESS_SUBMENU' clientProperty being set\n *   to true on the ActionGroup)\n * - `section`: renders children in a section with divider, but without section title\n * - `titledSection`: renders children in a section with divider and title.\n */\ntype ActionGroupMenuPresentation =\n  | \"section\"\n  | \"titledSection\"\n  | \"none\"\n  | \"submenu\";\n\nexport interface MutableActionGroup extends Action {\n  children: Array<Action | DividerItem>;\n  /**\n   * Whether the action group is searchable. See {@link getAvailableActionsFor}.\n   */\n  isSearchable?: boolean;\n  /**\n   * How the action group should be rendered, in menus.\n   */\n  menuPresentation?: ActionGroupMenuPresentation;\n}\nexport type ActionGroup = Readonly<MutableActionGroup>;\n\nexport interface ResolvedActionGroup extends ActionGroup {\n  parent: ResolvedActionGroup | null;\n  children: ActionInResolvedGroup[];\n}\nexport interface ActionGroupDefinition extends ActionDefinition {\n  children: Array<ActionDefinition | \"divider\">;\n  /**\n   * Defines how the action group should be represented in menus.\n   * @default 'submenu'\n   * @see ActionGroupMenuPresentation\n   */\n  menuPresentation?: ActionGroupMenuPresentation;\n}\n\nexport function isInResolvedActionGroup(\n  action: Action\n): action is ActionInResolvedGroup {\n  return \"parent\" in action;\n}\nexport function isActionGroup(action: Action): action is ActionGroup {\n  return \"children\" in action; // probably better to use a discriminator field like `type`\n}\n\nexport function isResolvedActionGroup<T extends Action>(\n  action: Action\n): action is ResolvedActionGroup {\n  return \"children\" in action && \"parent\" in action; // probably better to use a discriminator field like `type`\n}\n\nexport function isActionGroupDefinition(\n  action: ActionDefinition\n): action is ActionGroupDefinition {\n  return \"children\" in action; // probably better to use a discriminator field like `type`\n}\n","import React from \"react\";\nimport { useKeymap } from \"./KeymapProvider\";\nimport { shortcutToString } from \"./shortcutToString\";\n\n/**\n * Renders the first keyboard shortcut for the action specified by {@param actionId}, based on the keymap context.\n * if {@param children} is provided, treats it as a render function that receives the shortcut string.\n */\nexport const ActionShortcut = ({\n  actionId,\n  children,\n}: {\n  actionId: string;\n  children?: (shortcut: string) => React.ReactNode;\n}) => {\n  const getShortcut = useGetActionShortcut();\n  const shortcutString = getShortcut(actionId);\n  return (\n    <>\n      {shortcutString && (children ? children(shortcutString) : shortcutString)}\n    </>\n  );\n};\n\n/**\n * Returns a function that gets first keyboard shortcut for the action specified by `actionId`, based on the\n * keymap context.\n */\nexport const useGetActionShortcut = (): ((actionId: string) => string) => {\n  const keymap = useKeymap();\n  return (actionId: string) => {\n    const keyboardShortcut = keymap?.[actionId]?.find(\n      ({ type }) => type === \"keyboard\"\n    );\n    return keyboardShortcut ? shortcutToString(keyboardShortcut) : \"\";\n  };\n};\n","import React, { KeyboardEventHandler, useRef } from \"react\";\nimport { useEventCallback } from \"@intellij-platform/core/utils/useEventCallback\";\nimport {\n  isKeyboardShortcut,\n  KeyboardShortcut,\n  KeyStroke,\n  Shortcut,\n  supportedModifiers,\n} from \"./Shortcut\";\n\nexport function useShortcuts(\n  shortcuts: { [actionId: string]: ReadonlyArray<Shortcut> },\n  onAction: (\n    actionId: string,\n    args: {\n      event: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>;\n    }\n  ) => void | boolean,\n  {\n    useCapture = false,\n  }: {\n    /**\n     * Experimental option to determine if event handling should be done on capture phase. Useful for cases where\n     * a descendant element handles events in capture phase, and that conflicts with an action.\n     */\n    useCapture?: boolean;\n  } = {}\n) {\n  const firstKeyActivatedShortcutsRef = useRef<\n    Array<{ actionId: string; shortcut: KeyboardShortcut }>\n  >([]);\n  const secondStrokeResetTimerIdRef = useRef<number | null>(null);\n  const onKeyDown: KeyboardEventHandler<HTMLElement> = useEventCallback((e) => {\n    // TODO: repeated key downs can trigger an action repeatedly, in the original impl. Example: expand/shrink selection\n    if (isModifierOnly(e.nativeEvent) || e.repeat) {\n      return;\n    }\n    // firstKeyActivatedShortcutsRef will be re-adjusted in any case. Cleaning whatever scheduled reset\n    if (secondStrokeResetTimerIdRef.current !== null) {\n      window.clearTimeout(secondStrokeResetTimerIdRef.current);\n    }\n\n    function triggerAction(actionId: string) {\n      const result = onAction(actionId, { event: e });\n      if (result !== false) {\n        // TODO: make sure about how propagation should be stopped and/or controlled\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    }\n    // If there are keyboard shortcuts that are half way handled (first keystroke triggered already, and we are within\n    // the valid wait for the second keystroke), they should be prioritized over first keystroke matching.\n    if (firstKeyActivatedShortcutsRef.current.length > 0) {\n      firstKeyActivatedShortcutsRef.current.some(({ shortcut, actionId }) => {\n        if (isKeyMatch(shortcut.secondKeyStroke, e, true)) {\n          triggerAction(actionId);\n          return true;\n        }\n      });\n      firstKeyActivatedShortcutsRef.current = [];\n    } else {\n      const firstKeyMatches = Object.entries(shortcuts)\n        .flatMap(([actionId, shortcuts]) =>\n          shortcuts.map((shortcut) => ({ actionId, shortcut }))\n        )\n        .filter(\n          (\n            input\n          ): input is {\n            actionId: string;\n            shortcut: KeyboardShortcut;\n          } => isKeyboardShortcut(input.shortcut)\n        )\n        .filter(({ shortcut }) => isKeyMatch(shortcut.firstKeyStroke, e));\n\n      firstKeyActivatedShortcutsRef.current = firstKeyMatches.filter(\n        ({ shortcut, actionId }) => shortcut.secondKeyStroke\n      );\n\n      if (firstKeyActivatedShortcutsRef.current.length > 0) {\n        secondStrokeResetTimerIdRef.current = window.setTimeout(() => {\n          firstKeyActivatedShortcutsRef.current = [];\n        }, 2000);\n        document.addEventListener(\n          \"keydown\",\n          () => {\n            document.addEventListener(\n              \"keyup\",\n              () => {\n                firstKeyActivatedShortcutsRef.current = [];\n              },\n              { once: true }\n            );\n          },\n          //  by passing capture: true, we skip the current keydown event, since it's already passed capture phase\n          { once: true, capture: true }\n        );\n      } else if (firstKeyMatches.length > 0) {\n        triggerAction(firstKeyMatches[0].actionId);\n      }\n    }\n  });\n  const shortcutHandlerProps = {\n    /**\n     * by setting onKeyDownCapture is set instead of onKeyDown, we can prioritize action event handler over\n     * component-specific handlers. That might be useful for some components that aggressively stop propagation of\n     * events they handle, if the action is considered of higher priority compared to the conflicting component-internal\n     * functionality. So maybe an option would be in order to define whether the shortcut's event handling should be done\n     * in capture or bubbling phase.\n     * Another thing to get clarified as action system is more used, is to decide if action handler should stop\n     * propagation or not. Or should it be an option?\n     * UPDATE: Added an option to determine whether event handling should be done in capture phase. The use case is\n     * \"Find in files\" action with Cmd+Shift+O shortcut, which overlaps with some action in Monaco editor (only in .ts\n     * files). Monaco uses capture phase, and stops propagation, so unless we use capture phase, useShortcut's event\n     * handler is never called.\n     * An apposite use case is in SpeedSearchTree in tool windows, where we want Escape to be handled by speed search,\n     * and propagation stopped, if speed search is currently active. The second Escape keystroke should move focus to\n     * the editor. That wouldn't work if we unconditionally handle events in capture phase.\n     */\n    [useCapture ? \"onKeyDownCapture\" : \"onKeyDown\"]: onKeyDown,\n  };\n  return { shortcutHandlerProps };\n}\n\nconst isKeyMatch = (\n  keyStroke: KeyStroke | undefined,\n  e: React.KeyboardEvent,\n  loose?: boolean\n) =>\n  e.code === keyStroke?.code &&\n  (loose ? keyStroke.modifiers || [] : supportedModifiers).every(\n    (modifier) =>\n      e.getModifierState(modifier) ===\n      Boolean(keyStroke.modifiers?.includes(modifier))\n  );\n\nfunction isModifierOnly(event: KeyboardEvent) {\n  return event.location === 1 || event.location === 2;\n}\n","import { sortBy } from \"ramda\";\nimport React, { HTMLAttributes, useContext, useEffect, useState } from \"react\";\nimport { useEventCallback } from \"@intellij-platform/core/utils/useEventCallback\";\nimport { dfsVisit } from \"@intellij-platform/core/utils/tree-utils\";\n\nimport { Keymap, useKeymap } from \"./KeymapProvider\";\nimport { shortcutToString } from \"./shortcutToString\";\nimport { useShortcuts } from \"./useShortcut\";\nimport {\n  ActionGroup,\n  ActionInResolvedGroup,\n  isActionGroup,\n  isActionGroupDefinition,\n  MutableActionGroup,\n} from \"./ActionGroup\";\nimport {\n  Action,\n  ActionContext,\n  ActionDefinition,\n  MutableAction,\n} from \"./Action\";\nimport { DividerItem } from \"@intellij-platform/core/Collections\";\n\n/**\n * Represents the properties required for the ActionsProvider component.\n */\nexport interface ActionsProviderProps {\n  /**\n   * A collection of action definitions.\n   */\n  actions: ActionDefinition[];\n  children: (args: {\n    shortcutHandlerProps: HTMLAttributes<HTMLElement>;\n  }) => React.ReactElement;\n\n  /**\n   * Experimental option to determine if event handling should be done on capture phase. Useful for cases where\n   * a descendant element handles events in capture phase, and that conflicts with an action.\n   */\n  useCapture?: boolean;\n}\n\nconst ActionsContext = React.createContext<Action[]>([]);\n\nfunction generateId() {\n  return `jui-${Math.floor(Math.random() * 10000000)}`;\n}\n\nconst ACTION_PROVIDER_ID_ATTRIBUTE = \"data-action-provider\";\nconst ACTION_PROVIDER_ID_DATA_PREFIX = \"action_provider_id_\";\nconst actionProvidersMap = new Map<string, Action[]>();\n\n/**\n * Provides a set of actions for the wrapped UI. Uses the currently provided keymap to find the shortcuts\n * for each action, and passes the necessary event handlers for the shortcuts, to the `children` render function.\n *\n * @param {Array<Action>} props.actions - The actions to be provided.\n * @param {boolean} [props.useCapture] - Specifies whether to use capture phase for event handling.\n * @param {Function} props.children - Render function that accepts shortcutHandlerProps as argument.\n */\nexport function ActionsProvider(props: ActionsProviderProps): JSX.Element {\n  const parentContext = useContext(ActionsContext);\n  const keymap = useKeymap();\n  const actions: Action[] = [];\n  dfsVisit(\n    (action: Action | DividerItem | null) =>\n      action && !(action instanceof DividerItem) && isActionGroup(action)\n        ? action.children\n        : null,\n    (action) => {\n      if (action && !(action instanceof DividerItem)) {\n        actions.push(action);\n      }\n    },\n    recursivelyCreateActions(keymap, props.actions)\n  );\n\n  const shortcuts = Object.fromEntries(\n    actions.map((action) => [action.id, action.shortcuts || []])\n  );\n  const [actionProviderId] = useState(generateId);\n\n  const { shortcutHandlerProps } = useShortcuts(\n    shortcuts,\n    (actionId, { event }) => {\n      actions\n        .find((action) => action.id === actionId)\n        ?.perform({\n          event,\n          // it's important to use target and not currentTarget\n          element: event.target instanceof Element ? event.target : null,\n        });\n    },\n    { useCapture: props.useCapture }\n  );\n\n  const allActions = [...parentContext, ...actions]; // Maybe warn overrides?\n\n  // @ts-expect-error: not sure why data-* attribute is not accepted.\n  shortcutHandlerProps[ACTION_PROVIDER_ID_ATTRIBUTE] = actionProviderId;\n  // @ts-expect-error: not sure why data-* attribute is not accepted.\n  shortcutHandlerProps[\n    `data-${ACTION_PROVIDER_ID_DATA_PREFIX}${actionProviderId}`\n  ] = \"\";\n\n  useEffect(() => {\n    actionProvidersMap.set(actionProviderId, allActions);\n  });\n  useEffect(() => {\n    return () => {\n      actionProvidersMap.delete(actionProviderId);\n    };\n  }, []);\n  return (\n    <ActionsContext.Provider value={allActions}>\n      {props.children({ shortcutHandlerProps })}\n    </ActionsContext.Provider>\n  );\n}\n\nfunction isMutableActionGroup(\n  action: MutableAction\n): action is MutableActionGroup {\n  return \"children\" in action; // probably better to use a discriminator field like `type`\n}\n\nfunction recursivelyCreateActions(\n  keymap: Keymap | null,\n  actionDefinitions: Array<ActionDefinition | DividerItem>,\n  parent: ActionGroup\n): Array<ActionInResolvedGroup | DividerItem>;\nfunction recursivelyCreateActions(\n  keymap: Keymap | null,\n  actionDefinitions: Array<ActionDefinition | DividerItem>\n): Array<Action | ActionGroup | DividerItem>;\nfunction recursivelyCreateActions(\n  keymap: Keymap | null,\n  actionDefinitions: Array<ActionDefinition | DividerItem>,\n  parent?: ActionGroup\n): Array<Action | ActionInResolvedGroup | ActionGroup | DividerItem> {\n  return actionDefinitions.map(\n    (\n      actionDefinition: ActionDefinition | DividerItem\n    ): Action | DividerItem => {\n      if (actionDefinition instanceof DividerItem) {\n        return actionDefinition;\n      }\n      const shortcuts =\n        keymap?.[actionDefinition.id] ??\n        (actionDefinition.useShortcutsOf\n          ? keymap?.[actionDefinition.useShortcutsOf]\n          : undefined);\n      const firstShortcut = shortcuts?.[0];\n      const action: MutableAction | ActionInResolvedGroup = {\n        ...actionDefinition,\n        ...(isActionGroupDefinition(actionDefinition)\n          ? { parent: parent ?? null }\n          : {}),\n        shortcuts,\n        shortcut: firstShortcut ? shortcutToString(firstShortcut) : undefined, // Maybe it should be all shortcuts?\n        perform: (context) => {\n          if (!action.isDisabled) {\n            actionDefinition.actionPerformed(\n              context || { event: null, element: null }\n            );\n          }\n        },\n      };\n      if (\n        isMutableActionGroup(action) &&\n        isActionGroupDefinition(actionDefinition)\n      ) {\n        action.children = recursivelyCreateActions(\n          keymap,\n          actionDefinition.children.map((child) =>\n            child === \"divider\" ? new DividerItem() : child\n          ),\n          action\n        );\n      }\n      return action;\n    }\n  );\n}\n\n/**\n * Experimental function to get list of all actions available from a given html elements. Useful for implementing\n * action search UI.\n * @experimental\n */\nexport function getAvailableActionsFor(element: Element): Action[] {\n  const closestActionProvider = element.closest(\n    `[${ACTION_PROVIDER_ID_ATTRIBUTE}]`\n  );\n  if (closestActionProvider instanceof HTMLElement) {\n    /**\n     * NOTE: initially, only one data attribute was used to hold the action provider id. Although simpler, that approach\n     * is subject to bug in some edge cases, where multiple nested action providers are rendered, but `actionProviderProps`\n     * is merged on a single dom element. In such cases, it's important that the props from the innermost action provider\n     * is merged last, overwriting other values for data-action-provider-id.\n     * Because that's error-prone, we keep unique data attributes (`data-action_provider_id_...`} for each action\n     * provider id, and to simplify querying part, we also add a constant data attribute (data-action-provider).\n     * This way we can read all action providers applied on the same dom element. Since action providers inherit actions\n     * from parent action providers, we can reliably pick the actions from the one with the highest number of actions.\n     */\n    const actionSets = Object.keys(closestActionProvider.dataset)\n      .filter((dataKey) => dataKey.startsWith(ACTION_PROVIDER_ID_DATA_PREFIX))\n      .map((dataKey) => {\n        const id = dataKey?.replace(ACTION_PROVIDER_ID_DATA_PREFIX, \"\");\n        const actions = id && actionProvidersMap.get(id);\n        // noinspection PointlessBooleanExpressionJS\n        return actions\n          ? Object.values(actions).filter(\n              ({ isSearchable }) => isSearchable !== false\n            )\n          : [];\n      })\n      .concat();\n    return sortBy((actionSet) => -actionSet.length, actionSets)[0] || [];\n  }\n  return [];\n}\n\nexport function useActions(): Action[] {\n  return useContext(ActionsContext);\n}\n\nexport const useAction = (actionId: string): Action | null => {\n  return useActions().find(({ id }) => id === actionId) ?? null;\n};\n\nexport const usePerformAction = (): ((\n  actionId: string,\n  context?: ActionContext\n) => void) => {\n  const actions = useActions();\n  return useEventCallback((actionId: string, context?: ActionContext) => {\n    const action = actions.find(({ id }) => id === actionId);\n    if (action) {\n      action.perform(context);\n    } else {\n      console.error(\n        `An attempt to perform action with id ${actionId} failed because action was not found`\n      );\n    }\n  });\n};\n","export const CommonActionId = {\n  EXPAND_ALL: \"ExpandAll\",\n  COLLAPSE_ALL: \"CollapseAll\",\n  EXPAND_SELECTION: \"EditorSelectWord\",\n  SHRINK_SELECTION: \"EditorUnSelectWord\",\n  GO_TO_ACTION: \"GotoAction\",\n  GO_TO_FILE: \"GotoFile\",\n  SHOW_INTENTION_ACTIONS: \"ShowIntentionActions\",\n  EDIT_SOURCE: \"Documentation.EditSource\",\n  SHOW_SEARCH_HISTORY: \"ShowSearchHistory\",\n  COPY_REFERENCE: \"CopyReference\",\n  REFRESH: \"Refresh\",\n  COPY: \"$Copy\",\n  CUT: \"$Cut\",\n  PASTE: \"$Paste\",\n  DELETE: \"$Delete\",\n  CODE_COMPLETION: \"CodeCompletion\",\n};\n","import React, { useContext } from \"react\";\nimport { Shortcut } from \"./Shortcut\";\nimport { defaultKeymap } from \"./defaultKeymap\";\n\nexport interface Keymap {\n  [actionId: string]: ReadonlyArray<Shortcut>;\n}\n\nexport const KeymapContext = React.createContext<Keymap | null>(defaultKeymap);\n\nexport const KeymapProvider: React.FC<{\n  keymap: Keymap;\n  children?: React.ReactNode;\n}> = ({ keymap: keymapProp, children }) => {\n  const parentKeyMap = useContext(KeymapContext);\n  const keymap = Object.assign(Object.create(parentKeyMap), keymapProp);\n  return (\n    <KeymapContext.Provider value={keymap}>{children}</KeymapContext.Provider>\n  );\n};\n\nexport const useKeymap = () => useContext(KeymapContext);\n","type ShortcutType = \"mouse\" | \"keyboard\";\nexport type KeyStrokeModifier = \"Alt\" | \"Shift\" | \"Meta\" | \"Control\";\n\nexport interface KeyStroke {\n  /**\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key}\n   */\n  code: string;\n  modifiers?: Array<KeyStrokeModifier>;\n}\n\ninterface ShortcutBase {\n  type: ShortcutType;\n}\n\ninterface MouseShortcut extends ShortcutBase {\n  type: \"mouse\";\n}\n\nexport interface KeyboardShortcut extends ShortcutBase {\n  type: \"keyboard\";\n  firstKeyStroke: KeyStroke;\n  secondKeyStroke?: KeyStroke;\n}\n\nexport type Shortcut = MouseShortcut | KeyboardShortcut;\n\nexport const isKeyboardShortcut = (\n  shortcut: Shortcut\n): shortcut is KeyboardShortcut => shortcut.type === \"keyboard\";\n\nexport const supportedModifiers: KeyStrokeModifier[] = [\n  \"Alt\",\n  \"Meta\",\n  \"Shift\",\n  \"Control\",\n];\n","import React from \"react\";\nimport { useAction } from \"@intellij-platform/core/ActionSystem/ActionsProvider\";\nimport {\n  IconButton,\n  IconButtonProps,\n} from \"@intellij-platform/core/IconButton\";\nimport { ActionTooltip, TooltipTrigger } from \"@intellij-platform/core/Tooltip\";\n\nexport const ActionButton = ({\n  actionId,\n  children,\n  ...otherProps\n}: {\n  actionId: string;\n  /**\n   * Content to show instead of `action.icon`.\n   */\n  children?: React.ReactNode;\n} & IconButtonProps): JSX.Element => {\n  const action = useAction(actionId);\n  if (!action) {\n    return <></>;\n  }\n  const actionButton = (\n    <IconButton\n      isDisabled={action.isDisabled}\n      aria-label={action.title}\n      {...otherProps}\n      onPress={(e) => {\n        action?.perform();\n        otherProps.onPress?.(e);\n      }}\n    >\n      {children || action.icon}\n    </IconButton>\n  );\n  if (action.title) {\n    return (\n      <TooltipTrigger\n        tooltip={\n          <ActionTooltip actionName={action.title} shortcut={action.shortcut} />\n        }\n      >\n        {actionButton}\n      </TooltipTrigger>\n    );\n  }\n  return actionButton;\n};\n","import React from \"react\";\nimport { type ActionGroup } from \"@intellij-platform/core/ActionSystem/ActionGroup\";\nimport { type ActionMenuProps, ActionsMenu } from \"./ActionsMenu\";\n\nexport type ActionGroupMenuProps = Omit<ActionMenuProps, \"actions\"> & {\n  actionGroup: ActionGroup;\n};\n/**\n * Renders children of an action group as a menu.\n */\nexport const ActionGroupMenu = ({\n  actionGroup,\n  ...props\n}: ActionGroupMenuProps) => {\n  return (\n    <ActionsMenu\n      aria-label={actionGroup.title}\n      actions={actionGroup.children}\n      {...props}\n    />\n  );\n};\n","import React from \"react\";\nimport { flatten } from \"ramda\";\nimport { Menu, MenuItemLayout, MenuProps } from \"@intellij-platform/core/Menu\";\nimport { Divider, Item, Section } from \"@intellij-platform/core/Collections\";\nimport { DividerItem } from \"@intellij-platform/core/Collections/Divider\"; // Importing from /Collections breaks the build for some reason\nimport { type ActionGroup } from \"@intellij-platform/core/ActionSystem/ActionGroup\";\nimport {\n  type Action,\n  ActionContext,\n} from \"@intellij-platform/core/ActionSystem/Action\";\n\ntype ActionGroupAsMenuItem = Pick<\n  ActionGroup,\n  \"id\" | \"icon\" | \"title\" | \"isDisabled\" | \"children\" | \"menuPresentation\"\n>;\nexport type ActionItem = ActionGroupAsMenuItem | Action | DividerItem;\n\nfunction isAction(item: ActionItem): item is Action {\n  return \"perform\" in item;\n}\n\ntype ControlledMenuProps = Pick<\n  MenuProps<ActionItem>,\n  \"onAction\" | \"disabledKeys\" | \"items\" | \"children\"\n>;\ntype RenderMenu = (props: ControlledMenuProps) => React.ReactNode;\nexport type ActionMenuProps = {\n  actions: Array<ActionItem>;\n\n  /**\n   * Context with which actions should be performed.\n   * Usually the context by which the ActionsMenu itself is opened.\n   * Pass a function for lazy evaluation when the action is selected from the menu.\n   */\n  actionContext?: ActionContext | (() => ActionContext);\n  /**\n   * Allows for rendering a custom menu component, e.g. {@link SpeedSearchMenu}.\n   * If not provided, {@link Menu} is rendered, receiving additional props that\n   * are passed to `ActionsMenu`.\n   * If it is provided, additional {@link Menu} props are not allowed, and they\n   * can be passed directly to the returned menu element.\n   */\n  children?: RenderMenu;\n} & (\n  | {\n      children: RenderMenu;\n    }\n  | (Omit<MenuProps<ActionItem>, keyof ControlledMenuProps> & {\n      children?: never;\n    })\n);\n/**\n * Given a nested list of resolved actions, renders a menu corresponding to them.\n */\nexport function ActionsMenu({\n  actions,\n  actionContext,\n  children = (actionMenuProps) => <Menu {...actionMenuProps} />,\n  ...otherProps\n}: ActionMenuProps) {\n  const allActions = getAllActions(actions);\n  const disabledKeys = allActions\n    .filter(({ isDisabled }) => isDisabled)\n    .map(({ id }) => id);\n\n  return (\n    <>\n      {children({\n        ...otherProps,\n        onAction: (key) => {\n          const action = allActions.find(({ id }) => id === key);\n          if (action && isAction(action)) {\n            action.perform(\n              typeof actionContext === \"function\"\n                ? actionContext?.()\n                : actionContext\n            );\n          }\n        },\n        disabledKeys,\n        // FIXME: keep isSelected on actions (toggle action) and control selectedKeys too?\n        items: actions,\n        children: (action) => {\n          if (action instanceof DividerItem) {\n            return <Divider />;\n          }\n          return renderActionAsMenuItem(action);\n        },\n      })}\n    </>\n  );\n}\n\ntype ActionAsMenuItem = Omit<Action, \"perform\" | \"shortcuts\">;\n\nexport function renderActionAsMenuItem(\n  action: ActionAsMenuItem | ActionGroupAsMenuItem | DividerItem\n) {\n  const isGroup = \"children\" in action;\n  if (\n    isGroup &&\n    (action.menuPresentation === \"section\" ||\n      action.menuPresentation === \"titledSection\")\n  ) {\n    return (\n      <Section\n        key={action.id}\n        // @ts-expect-error: hasDivider is not yet made a public API.\n        hasDivider\n        aria-label={\n          action.menuPresentation === \"section\" ? action.title : undefined\n        }\n        title={\n          action.menuPresentation === \"titledSection\" ? action.title : undefined\n        }\n        items={action.children}\n      >\n        {renderActionAsMenuItem}\n      </Section>\n    );\n  }\n  if (action instanceof DividerItem) {\n    return <Divider />;\n  }\n  return (\n    <Item\n      key={action.id}\n      textValue={action.title}\n      aria-label={action.title}\n      childItems={\n        isGroup && action.menuPresentation === \"submenu\"\n          ? action.children\n          : undefined\n      }\n    >\n      <MenuItemLayout\n        content={action.title}\n        icon={action.icon}\n        shortcut={\"shortcut\" in action ? action.shortcut : undefined}\n      />\n    </Item>\n  );\n}\n\nfunction getAllActions(items: ActionItem[]): Action[] {\n  return flatten(\n    items.map((item) =>\n      [item].concat(\"children\" in item ? getAllActions(item.children) : [])\n    )\n  ).filter(isAction);\n}\n","import { flatten } from \"ramda\";\nimport React from \"react\";\nimport { Popup, usePopupManager } from \"@intellij-platform/core/Popup\";\nimport { SpeedSearchMenu } from \"@intellij-platform/core/Menu\";\nimport { MENU_POSITION_TARGET_DATA_ATTRIBUTE } from \"@intellij-platform/core/Menu/ContextMenuContainer\";\nimport { useEventCallback } from \"@intellij-platform/core/utils/useEventCallback\";\nimport {\n  ActionContext,\n  ActionDefinition,\n  type ActionGroupDefinition,\n  isActionGroupDefinition,\n  useGetActionShortcut,\n} from \"@intellij-platform/core/ActionSystem\";\n\nimport { renderActionAsMenuItem } from \"./ActionsMenu\";\nimport { DividerItem } from \"@intellij-platform/core/Collections\";\n\nexport const useCreateDefaultActionGroup = () => {\n  const { show } = usePopupManager();\n  const getActionShortcut = useGetActionShortcut();\n  const openActionsInPopup = useEventCallback(\n    (\n      { children, title }: Pick<ActionGroupDefinition, \"children\" | \"title\">,\n      context: ActionContext\n    ) => {\n      show(({ close }) => (\n        <Popup\n          // Maybe an option to conditionally use context-based positioning?\n          positioning={\n            context.element instanceof HTMLElement\n              ? {\n                  targetRef: {\n                    current:\n                      context.element.querySelector(\n                        `[${MENU_POSITION_TARGET_DATA_ATTRIBUTE}]`\n                      ) ?? context.element,\n                  },\n                  placement: \"bottom\",\n                }\n              : undefined\n          }\n        >\n          <Popup.Layout\n            content={\n              /**\n               * NOTE: It would be much nicer to use {@link ActionGroupMenu} component here. But the action group is not\n               * yet provided when the group definition is being created. It seems like a sign of bad design that needs\n               * to get addressed.\n               */\n              <SpeedSearchMenu\n                aria-label={title}\n                items={children.map((item) =>\n                  item === \"divider\" ? new DividerItem() : item\n                )}\n                onAction={(key) => {\n                  // The need for calculating `allActions` is a consequence of the issue explained in the note above.\n                  const allActions = flatten(\n                    children.map((item) =>\n                      item !== \"divider\" && isActionGroupDefinition(item)\n                        ? item.children\n                        : item\n                    )\n                  );\n                  const action = allActions.find(\n                    (action): action is ActionDefinition =>\n                      typeof action === \"object\" && action.id === key\n                  );\n                  if (action && !action.isDisabled) {\n                    action.actionPerformed(context);\n                  }\n                }}\n                onClose={close}\n                autoFocus=\"first\"\n              >\n                {(item) =>\n                  renderActionAsMenuItem(\n                    item instanceof DividerItem\n                      ? item\n                      : {\n                          ...item,\n                          // a consequence of the issue explained in the note above.\n                          shortcut: getActionShortcut(item.id),\n                        }\n                  )\n                }\n              </SpeedSearchMenu>\n            }\n            header={title}\n          />\n        </Popup>\n      ));\n    }\n  );\n\n  return (\n    groupDefinition: Omit<ActionGroupDefinition, \"actionPerformed\">\n  ): ActionGroupDefinition => {\n    return {\n      menuPresentation: \"submenu\",\n      ...groupDefinition,\n      actionPerformed: (context) =>\n        openActionsInPopup(groupDefinition, context),\n    };\n  };\n};\n","import {\n  FOCUS_EDITOR_ACTION_ID,\n  HIDE_ACTIVE_WINDOW_ACTION_ID,\n  HIDE_ALL_WINDOWS_ACTION_ID,\n  JUMP_TO_LAST_WINDOW_ACTION_ID,\n  MAXIMIZE_TOOL_WINDOW_ACTION_ID,\n  RESIZE_TOOL_WINDOW_BOTTOM_ACTION_ID,\n  RESIZE_TOOL_WINDOW_LEFT_ACTION_ID,\n  RESIZE_TOOL_WINDOW_RIGHT_ACTION_ID,\n  RESIZE_TOOL_WINDOW_TOP_ACTION_ID,\n  // For some reason importing from shorter paths doesn't work as expected in cypress ¯\\_(ツ)_/¯\n  // Weirdly, `import *` works in that case.\n} from \"@intellij-platform/core/ToolWindowsImpl/ToolWindowActionIds\";\n\nimport { Keymap } from \"./KeymapProvider\";\nimport { CommonActionId } from \"./CommonActionIds\";\n\n// TODO: OS specific defaults\n// TODO: extract and export action ids\n// NOTE: defaultKeymap doesn't belong to ActionSystem semantically. Would be something to be moved to a separate module\n/**\n * Default Intellij Idea keymapping for common action ids, including tool window actions.\n * @see CommonActionId\n */\nexport const defaultKeymap: Keymap = {\n  [RESIZE_TOOL_WINDOW_RIGHT_ACTION_ID]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"ArrowRight\",\n        modifiers: [\"Control\", \"Alt\"],\n      },\n    },\n  ],\n  [RESIZE_TOOL_WINDOW_LEFT_ACTION_ID]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"ArrowLeft\",\n        modifiers: [\"Control\", \"Alt\"],\n      },\n    },\n  ],\n  [RESIZE_TOOL_WINDOW_TOP_ACTION_ID]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"ArrowUp\",\n        modifiers: [\"Control\", \"Alt\"],\n      },\n    },\n  ],\n  [RESIZE_TOOL_WINDOW_BOTTOM_ACTION_ID]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"ArrowDown\",\n        modifiers: [\"Control\", \"Alt\"],\n      },\n    },\n  ],\n  [MAXIMIZE_TOOL_WINDOW_ACTION_ID]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"Quote\",\n        modifiers: [\"Shift\", \"Meta\"],\n      },\n    },\n  ],\n  [FOCUS_EDITOR_ACTION_ID]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"Escape\",\n      },\n    },\n  ],\n  [HIDE_ACTIVE_WINDOW_ACTION_ID]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"Escape\",\n        modifiers: [\"Shift\"],\n      },\n    },\n  ],\n  [HIDE_ALL_WINDOWS_ACTION_ID]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"F12\",\n        modifiers: [\"Shift\", \"Meta\"],\n      },\n    },\n  ],\n  [JUMP_TO_LAST_WINDOW_ACTION_ID]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"F12\",\n      },\n    },\n  ],\n  [CommonActionId.EXPAND_SELECTION]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"KeyW\",\n      },\n    },\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Alt\"],\n        code: \"ArrowUp\",\n      },\n    },\n  ],\n  [CommonActionId.SHRINK_SELECTION]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\", \"Shift\"],\n        code: \"KeyW\",\n      },\n    },\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Alt\"],\n        code: \"ArrowDown\",\n      },\n    },\n  ],\n  [CommonActionId.EXPAND_ALL]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"Equal\",\n      },\n    },\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"NumpadAdd\",\n      },\n    },\n  ],\n  [CommonActionId.COLLAPSE_ALL]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"Minus\",\n      },\n    },\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"NumpadSubtract\",\n      },\n    },\n  ],\n  [CommonActionId.GO_TO_ACTION]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\", \"Shift\"],\n        code: \"KeyA\",\n      },\n    },\n  ],\n  [CommonActionId.SHOW_INTENTION_ACTIONS]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Alt\"],\n        code: \"Enter\",\n      },\n    },\n  ],\n  [CommonActionId.GO_TO_FILE]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\", \"Shift\"],\n        code: \"KeyO\",\n      },\n    },\n  ],\n  [CommonActionId.EDIT_SOURCE]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"ArrowDown\",\n      },\n    },\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"F4\",\n      },\n    },\n  ],\n  [CommonActionId.SHOW_SEARCH_HISTORY]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Alt\"],\n        code: \"ArrowDown\",\n      },\n    },\n  ],\n  [CommonActionId.COPY_REFERENCE]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\", \"Shift\", \"Alt\"],\n        code: \"KeyC\",\n      },\n    },\n  ],\n  [CommonActionId.REFRESH]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"KeyR\",\n      },\n    },\n  ],\n  [CommonActionId.DELETE]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"Backspace\",\n      },\n    },\n  ],\n  [CommonActionId.COPY]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"KeyC\",\n      },\n    },\n  ],\n  [CommonActionId.CUT]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"KeyX\",\n      },\n    },\n  ],\n  [CommonActionId.PASTE]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"KeyV\",\n      },\n    },\n  ],\n  [CommonActionId.CODE_COMPLETION]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Control\"],\n        code: \"Space\",\n      },\n    },\n  ],\n};\n","import { fromPairs } from \"ramda\";\nimport { isMac } from \"@react-aria/utils\";\nimport {\n  isKeyboardShortcut,\n  KeyStroke,\n  KeyStrokeModifier,\n  Shortcut,\n} from \"./Shortcut\";\nimport {\n  KeyboardEventKey,\n  LinuxDeadKeys,\n  NumericKeypadKeys,\n  UpperAlpha,\n} from \"./KeyboardEventKey\";\n\nconst defaultKeyToStr: {\n  [key in Exclude<\n    KeyStrokeModifier | KeyboardEventKey,\n    LinuxDeadKeys | UpperAlpha | NumericKeypadKeys\n  >]: string;\n} = {\n  Control: \"Ctrl\",\n  \" \": \"Space\",\n  ArrowDown: \"↓\",\n  ArrowUp: \"↑\",\n  ArrowLeft: \"←\",\n  ArrowRight: \"→\",\n  Enter: \"⏎\",\n  Quote: \"'\",\n  Minus: \"-\",\n  Subtract: \"-\",\n  NumpadAdd: \"+\",\n  Multiply: \"*\",\n  NumpadMultiply: \"*\",\n  Equal: \"+\",\n  Backspace: \"⌫\",\n  // lowercase to uppercase map\n  ...fromPairs(\n    Array.from(Array(26))\n      .map((e, i) => i + \"a\".charCodeAt(0))\n      .map((x) => String.fromCharCode(x))\n      .map((a) => [a, a.toUpperCase()])\n  ),\n};\nconst KeystrokeToString: {\n  separator: string;\n  codeToStr: Record<KeyStrokeModifier | KeyboardEventKey, string>;\n} = isMac()\n  ? {\n      separator: \"\",\n      codeToStr: {\n        ...defaultKeyToStr,\n        Alt: \"⌥\",\n        Shift: \"⇧\",\n        Meta: \"⌘\",\n        Control: \"^\",\n        Escape: \"⎋\",\n      },\n    }\n  : {\n      separator: \"+\",\n      codeToStr: defaultKeyToStr,\n    };\n\nconst modifiersOrder: KeyStrokeModifier[] = [\"Control\", \"Alt\", \"Shift\", \"Meta\"];\nexport const keystrokeToString = (keystroke: KeyStroke) => {\n  return [\n    ...(keystroke.modifiers || []).sort(\n      (a, b) => modifiersOrder.indexOf(a) - modifiersOrder.indexOf(b)\n    ),\n    keystroke.code,\n  ]\n    .map((code) => KeystrokeToString.codeToStr[code] || code)\n    .map((code) => code.replace(/^(Key|Digit|Numpad)(.)$/, \"$2\"))\n    .join(KeystrokeToString.separator);\n};\nexport const shortcutToString = (shortcut: Shortcut) => {\n  if (isKeyboardShortcut(shortcut)) {\n    return [shortcut.firstKeyStroke, shortcut.secondKeyStroke]\n      .filter((i): i is KeyStroke => i != undefined)\n      .map(keystrokeToString)\n      .join(\", \");\n  }\n  throw new Error(\"Not implemented yet\");\n};\n","import { useAction } from \"./ActionsProvider\";\nimport { isResolvedActionGroup, ResolvedActionGroup } from \"./ActionGroup\";\n\nexport const useActionGroup = (\n  actionGroupId: string\n): ResolvedActionGroup | null => {\n  const action = useAction(actionGroupId);\n  if (action) {\n    if (isResolvedActionGroup(action)) {\n      return action;\n    }\n    throw new Error(`Action with id ${actionGroupId} is not a group`);\n  }\n  return null;\n};\n","import React from \"react\";\nimport {\n  ModalWindow,\n  ModalWindowProps,\n} from \"@intellij-platform/core/ModalWindow\";\nimport { OverlayMoveHandle } from \"@intellij-platform/core/Overlay\";\nimport { styled } from \"../styled\";\nimport { StyledWindowContainer } from \"@intellij-platform/core/ModalWindow/ModalWindow\";\nimport { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport { ButtonGroup } from \"@intellij-platform/core/ButtonGroup\";\nimport { isEventOnEmptySpaces } from \"@intellij-platform/core/utils/interaction-utils/useMove\";\n\nexport interface AlertDialogProps\n  extends Pick<ModalWindowProps, \"minWidth\" | \"id\" | \"onClose\"> {\n  /**\n   * Content slot for the heading, aka. title of the dialog. Typically plain text.\n   */\n  heading?: React.ReactNode;\n  /**\n   * Content slot for the body, aka. message of the dialog. Typically plain text.\n   */\n  body?: React.ReactNode;\n  /**\n   * Content slot for the checkbox (\"Do not ask again\").\n   * @example\n   * ```jsx\n   * <AlertDialog checkbox={<Checkbox>Do not ask again</Checkbox>} />\n   * ```\n   * @see Checkbox\n   */\n  checkbox?: React.ReactNode;\n\n  /**\n   * Type of the alert dialog. The icon is set based on type.\n   */\n  type?: \"error\" | \"warning\" | \"information\" | \"question\";\n\n  /**\n   * Content slot for buttons.\n   * @example\n   * ```jsx\n   * <AlertDialog\n   *   buttons={\n   *     <>\n   *       <Button>Cancel</Button>\n   *       <Button variant=\"default\">Ok</Button>\n   *     </>\n   *   }\n   * />\n   * ```\n   * @see Button\n   */\n  buttons?: React.ReactNode;\n\n  /**\n   * Content slot for help icon button in the footer.\n   * @example\n   * ```jsx\n   * <AlertDialog\n   *   helpButton={\n   *     <TooltipTrigger tooltip={<HelpTooltip helpText=\"Show Help Contents\" />}>\n   *       <Button variant=\"icon\">\n   *         <PlatformIcon icon=\"actions/help\"></PlatformIcon>\n   *       </Button>\n   *     </TooltipTrigger>\n   *   }\n   * />\n   * ```\n   * @see Button\n   */\n  helpButton?: React.ReactNode;\n}\n\nconst StyledModalWindow = styled(ModalWindow)`\n  ${StyledWindowContainer} {\n    border-radius: 0;\n    outline: 0.5px solid rgba(0, 0, 0, 0.85); // FIXME\n  }\n`;\n\nconst StyledContainer = styled.div`\n  padding: 1.25rem;\n  display: grid;\n  grid-template-columns: auto 1fr;\n  grid-template-rows: auto auto;\n  align-items: center;\n  gap: 0.875rem;\n`;\n\nconst StyledHeading = styled.h2`\n  margin: 0;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  font-weight: bold;\n`;\n\nconst StyledBody = styled.div`\n  line-height: 1.2;\n`;\n\nconst StyledContent = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  cursor: default;\n`;\n\nconst StyledCheckbox = styled.div`\n  padding: 0.375rem 0;\n  // to align the checkbox with the content, since the box has a padding. Maybe Checkbox should not have any padding.\n  margin-left: -0.25rem;\n`;\n\nconst StyledButtons = styled(ButtonGroup)`\n  display: flex;\n  justify-self: end;\n  gap: 1rem;\n`;\n\nconst StyledIcon = styled.span`\n  align-self: start;\n`;\n\nconst StyledHelpIcon = styled.div`\n  justify-self: center;\n`;\n\n/**\n * A modal dialog implementing [Alert](https://jetbrains.github.io/ui/controls/alert), which is the\n * [notification](https://jetbrains.github.io/ui/controls/notifications/) pattern for use cases where\n * immediate user action is required.\n * Since the use cases are quite specific, and the component is expected to be used with pretty specific\n * content items, the layout is not implemented as a separate component, the way it is in components like\n * {@link ModalWindow} or {@link Menu}\n *\n *\n */\nexport const AlertDialog = ({\n  type = \"question\",\n  heading,\n  body,\n  checkbox,\n  helpButton,\n  buttons,\n  minWidth = 370,\n  ...otherProps\n}: AlertDialogProps): JSX.Element => {\n  return (\n    <StyledModalWindow\n      role=\"alertdialog\"\n      interactions=\"move\"\n      minWidth={minWidth}\n      defaultBounds={{\n        top: window.innerHeight / 4,\n      }}\n      // Reacting to content size, to make sure the content will be visible, considering the window is not resizable.\n      observeContentResize\n      {...otherProps}\n    >\n      <OverlayMoveHandle dragThreshold={6} canMoveStart={isEventOnEmptySpaces}>\n        {({ moveHandleProps }) => (\n          <StyledContainer {...moveHandleProps}>\n            <StyledIcon>\n              {/* Icon name is theme-able in the reference impl via OptionPane[`${icon}Icon`] */}\n              <PlatformIcon size={32} icon={`general/${type}Dialog`} />\n            </StyledIcon>\n            <StyledContent>\n              <StyledHeading>{heading}</StyledHeading>\n              <StyledBody>{body}</StyledBody>\n              {checkbox && <StyledCheckbox>{checkbox}</StyledCheckbox>}\n            </StyledContent>\n            <StyledHelpIcon>{helpButton}</StyledHelpIcon>\n            <StyledButtons>{buttons}</StyledButtons>\n          </StyledContainer>\n        )}\n      </OverlayMoveHandle>\n    </StyledModalWindow>\n  );\n};\n","import React, { ReactNode } from \"react\";\nimport { useWindowManager } from \"@intellij-platform/core/ModalWindow\";\nimport { Button } from \"@intellij-platform/core/Button\";\n\nimport { AlertDialog } from \"./AlertDialog\";\n\nexport interface AlertDialogApi {\n  confirm(options: {\n    title: ReactNode;\n    message: ReactNode;\n    okText?: string;\n    cancelText?: string;\n  }): Promise<boolean>;\n}\n\n/**\n * Similar to com.intellij.openapi.ui.Messages class in the reference impl, provides helper functions\n * to show different types of Alert dialog. The helper functions return a Promise of the selected option,\n * which makes it easy to use it imperatively, in a flow of statements, regardless of how the UI of the\n * alert dialog is handled.\n * {@link useAlertDialog} depends on {@link WindowManager}, to imperatively open modal windows.\n * @experimental\n */\nexport function useAlertDialog(): AlertDialogApi {\n  const { open } = useWindowManager();\n  return {\n    confirm: ({ title, message, okText = \"Ok\", cancelText = \"Cancel\" }) =>\n      new Promise((resolve) => {\n        open(({ close }) => (\n          <AlertDialog\n            type=\"question\"\n            body={message}\n            heading={title}\n            buttons={\n              <>\n                <Button onPress={close}>{cancelText}</Button>\n                <Button\n                  variant=\"default\"\n                  onPress={() => {\n                    resolve(true);\n                    close();\n                  }}\n                >\n                  {okText}\n                </Button>\n              </>\n            }\n            onClose={() => resolve(false)}\n          />\n        ));\n      }),\n  };\n}\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { Theme, UnknownThemeProp } from \"@intellij-platform/core/Theme\";\n\nconst CORNER_RADIUS = 12; // it used to be 8. After introduction of Notifications tool window, it's 12\n\nconst bgColor = ({ theme }: { theme: Theme }) =>\n  theme.color(\n    \"Notification.background\",\n    !theme.dark ? \"rgb(242,242,242)\" : \"#4E5052\"\n  );\n\nexport const StyledHeaderActions = styled.div`\n  position: absolute;\n  right: 0;\n  top: 0;\n  background: inherit;\n  padding: 0.375rem 0.5rem 0;\n  &::before {\n    content: \"\";\n    position: absolute;\n    right: 100%;\n    background: linear-gradient(90deg, transparent, ${bgColor});\n    width: 20px;\n    height: 100%;\n    z-index: 1;\n    top: 0;\n  }\n`;\n\nexport const StyledBalloonContainer = styled.div`\n  line-height: 1.2;\n  box-sizing: border-box;\n  overflow: hidden; // header actions overflows a little at the top right rounded corner\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2); // shadow doesn't seem to be themed\n  padding: 0.5rem 0;\n  border: 1px solid\n    ${({ theme }) =>\n      theme.color(\n        \"Notification.borderColor\",\n        !theme.dark ? \"#B2B2B2CD\" : \"#565A5CCD\"\n      )};\n  border-radius: ${({ theme }) =>\n    `${\n      (theme.value<number>(\n        \"Notification.arc\" as UnknownThemeProp<\"Notification.arc\">\n      ) ?? CORNER_RADIUS) / 2\n    }px`};\n  //display: inline-flex;\n  width: 23.3125rem;\n  position: relative;\n  background-color: ${bgColor};\n  color: ${({ theme }) =>\n    theme.color(\n      \"Notification.foreground\",\n      !theme.dark ? \"#000\" : \"rgb(191,191,191)\"\n    )};\n\n  ${StyledHeaderActions} {\n    display: none;\n  }\n  &:hover ${StyledHeaderActions} {\n    display: initial;\n  }\n`;\n\nexport const StyledIconContainer = styled.span`\n  position: absolute;\n  left: 0.75rem;\n  top: 0.5rem;\n`;\n\nexport const StyledBalloonHeader = styled.div`\n  line-height: 1rem;\n  font-weight: bold;\n  margin: 0 2.125rem 0.25rem;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis; // this is not the case in original impl, but it's a clear improvement\n`;\n\nexport const StyledBalloonBody = styled.div<{\n  lineClamp: number | false;\n}>`\n  margin: 0 2.125rem 0 2.125rem;\n  line-height: 1rem;\n  display: inline;\n  -webkit-line-clamp: ${({ lineClamp }) => lineClamp};\n  word-break: ${({ lineClamp }) => lineClamp === 1 && \"break-all\"};\n  text-overflow: ellipsis;\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  word-wrap: break-word;\n`;\n\nexport const StyledBalloonFooter = styled.div`\n  margin: 0.375rem 1.875rem 0 2.125rem;\n  display: inline-flex;\n  white-space: nowrap;\n  overflow: hidden;\n  gap: 1rem;\n\n  // could be -webkit-fill-available too, if it has good support. Probably it doesn't tho\n  max-width: calc(100% - 3.5rem);\n`;\n\nexport const StyledToggleIconContainer = styled.span`\n  display: inline-flex;\n  position: absolute;\n  right: 0.5rem;\n  bottom: 0;\n  background-color: ${bgColor};\n  padding-left: 0.5rem;\n`;\n\nexport const StyledToggleExpandButtonContainer = styled.span`\n  display: block;\n  position: relative; // for icon absolute positioning\n  cursor: pointer;\n  flex: 1;\n`;\n\nexport const StyledToggleExpandButtonFooterContainer = styled(\n  StyledToggleExpandButtonContainer\n)`\n  min-height: 1.5rem;\n  margin: -0.5rem 0;\n  position: relative;\n  z-index: 1;\n  ${StyledToggleIconContainer} {\n    bottom: 0.5rem;\n  }\n  ${StyledBalloonFooter} {\n    margin-top: 0.875rem;\n    margin-bottom: 0.5rem;\n  }\n  ${StyledBalloonFooter}:hover + * .icon[data-hover] {\n    display: none;\n  }\n  ${StyledBalloonFooter}:hover + * .icon {\n    display: unset;\n  }\n`;\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { IconProps } from \"@intellij-platform/core/Icon/IconProps\";\nimport {\n  AutoHoverPlatformIcon,\n  PlatformIcon,\n} from \"@intellij-platform/core/Icon\";\nimport { ControlledStateProps } from \"@intellij-platform/core/type-utils\";\nimport { useControlledState } from \"@react-stately/utils\";\nimport {\n  StyledBalloonBody,\n  StyledBalloonContainer,\n  StyledBalloonFooter,\n  StyledBalloonHeader,\n  StyledHeaderActions,\n  StyledIconContainer,\n  StyledToggleExpandButtonContainer,\n  StyledToggleExpandButtonFooterContainer,\n  StyledToggleIconContainer,\n} from \"@intellij-platform/core/Balloon/Balloon.styled\";\nimport { DOMProps } from \"@react-types/shared\";\nimport { Link } from \"@intellij-platform/core/Link\";\n\nexport type BalloonProps = ControlledStateProps<{ expanded: boolean }> &\n  DOMProps & {\n    /**\n     * Icon rendered in the top left\n     */\n    icon?: \"Info\" | \"Warning\" | \"Error\" | React.ReactElement<IconProps>;\n    /**\n     * Rendered beside close button. Can be used for rendering a \"notification settings\" icon button.\n     */\n    headerActions?: React.ReactNode;\n    /**\n     * Called when the close button is clicked. If not passed, close button will not be rendered.\n     */\n    onClose?: () => void;\n    /**\n     * Actions rendered in the footer.\n     */\n    actions?: React.ReactNode;\n  } & (\n    | {\n        title?: React.ReactNode;\n        body: React.ReactNode;\n      }\n    | {\n        title: React.ReactNode;\n        body?: React.ReactNode;\n      }\n  );\n\ntype BalloonContextObj = {\n  onClose?: () => void;\n};\nconst BalloonContext = React.createContext<BalloonContextObj | null>(null);\n\n/**\n * A tiny wrapper around {@link Link} component, to be used for actions in Balloon.\n * It closes the balloon when pressed.\n */\nexport const BalloonActionLink: typeof Link = React.forwardRef(\n  ({ onPress, ...props }, ref) => {\n    const context = useContext(BalloonContext);\n    if (context === null) {\n      throw new Error(\n        \"BalloonActionLink should only be rendered inside Balloon notifications\"\n      );\n    }\n    return (\n      <Link\n        ref={ref}\n        {...props}\n        onPress={(...args) => {\n          context?.onClose?.();\n          return onPress?.(...args);\n        }}\n      />\n    );\n  }\n);\n/**\n * [Balloon notification](https://jetbrains.github.io/ui/controls/balloon/) UI.\n *\n * Notes and TODO:\n * - Add support for \"error\" variant: https://github.com/JetBrains/intellij-community/blob/48c024fcd38bd8d1eccdada05489a8952a494270/platform/platform-impl/src/com/intellij/diagnostic/IdeMessagePanel.java#L215\n * - Add support for timeout. Although if the auto close behaviour is only timeout-based, maybe there is not much value in adding a prop for it and calling onClose on timeout.\n * - BalloonActions component to be used for rendering a bunch of links in the actions. It should encapsulate the\n *   behaviour of moving actions into a menu when there is not enough room.\n */\nexport const Balloon = ({\n  icon: iconProp = \"Info\",\n  expanded: expandedProp,\n  defaultExpanded = false,\n  onExpandedChange,\n  title,\n  headerActions,\n  onClose,\n  body,\n  actions,\n  ...containerProps\n}: BalloonProps): React.ReactElement => {\n  const bodyRef = useRef<HTMLDivElement>(null);\n  const [expandable, setExpandable] = useState(false);\n  const [expanded, setExpanded] = useControlledState(\n    expandedProp!,\n    defaultExpanded,\n    onExpandedChange!\n  );\n  const maxLinesWhenNotExpanded = 1 + (title ? 0 : 1) + (actions ? 0 : 1);\n\n  useEffect(() => {\n    const bodyElem = bodyRef.current;\n    if (bodyElem) {\n      setExpandable(\n        expanded\n          ? getNumLines(bodyElem) > maxLinesWhenNotExpanded\n          : bodyElem.scrollHeight > bodyElem.clientHeight\n      );\n    } else {\n      setExpandable(false);\n    }\n  }, [expanded]);\n  const validIconTypes = [\"Error\", \"Warning\", \"Info\"] as const;\n  const icon =\n    typeof iconProp === \"string\" ? (\n      <PlatformIcon\n        icon={`general/notification${validIconTypes.find(\n          (iconType, index, arr) =>\n            iconType === iconProp || index === arr.length - 1\n        )}.svg`}\n      />\n    ) : (\n      iconProp\n    );\n  // @ts-expect-error support for callback updater is removed from useControlledState. https://github.com/adobe/react-spectrum/issues/2320\n  const toggle = () => setExpanded((expanded) => !expanded);\n\n  const effectiveExpanded = expanded && Boolean(body);\n\n  return (\n    <BalloonContext.Provider value={{ onClose }}>\n      <StyledBalloonContainer data-testid=\"balloon\" {...containerProps}>\n        <StyledIconContainer>{icon}</StyledIconContainer>\n        {title && <StyledBalloonHeader>{title}</StyledBalloonHeader>}\n        <StyledHeaderActions>\n          {headerActions}\n          {onClose && (\n            <AutoHoverPlatformIcon\n              icon=\"ide/notification/close.svg\"\n              onClick={onClose}\n              role=\"button\"\n              data-testid=\"close-btn\"\n              style={{ marginLeft: \"0.75rem\" }}\n            />\n          )}\n        </StyledHeaderActions>\n        {body && (\n          <ToggleWrapper\n            expanded={effectiveExpanded}\n            enabled={expandable && !effectiveExpanded}\n            onToggle={toggle}\n          >\n            <StyledBalloonBody\n              lineClamp={!effectiveExpanded && maxLinesWhenNotExpanded}\n              ref={bodyRef}\n            >\n              {body}\n            </StyledBalloonBody>\n          </ToggleWrapper>\n        )}\n        <ToggleWrapper\n          expanded={effectiveExpanded}\n          enabled={expandable && effectiveExpanded}\n          onToggle={toggle}\n          Component={StyledToggleExpandButtonFooterContainer}\n        >\n          {actions && (\n            <StyledBalloonFooter onClick={(e) => e.stopPropagation()}>\n              {actions}\n            </StyledBalloonFooter>\n          )}\n        </ToggleWrapper>\n      </StyledBalloonContainer>\n    </BalloonContext.Provider>\n  );\n};\n\n/**\n * If enabled wraps its children in a clickable area (with the expand/collapse arrow),f for toggling expanded state.\n */\nconst ToggleWrapper: React.FC<{\n  children?: React.ReactNode;\n  enabled: boolean;\n  expanded: boolean;\n  Component?: typeof StyledToggleExpandButtonContainer;\n  onToggle: () => void;\n}> = ({\n  children,\n  onToggle,\n  expanded,\n  enabled,\n  Component = StyledToggleExpandButtonContainer,\n}) => {\n  const iconName = expanded ? \"collapse\" : \"expand\";\n  const toggleIcon = (\n    <StyledToggleIconContainer>\n      <AutoHoverPlatformIcon\n        hoverContainerSelector={`${Component}`}\n        icon={`ide/notification/${iconName}.svg`}\n        className=\"icon\"\n      />\n    </StyledToggleIconContainer>\n  );\n\n  return enabled ? (\n    <Component\n      onClick={onToggle}\n      role=\"button\"\n      data-testid={`${expanded ? \"collapse\" : \"expand\"}-btn`}\n    >\n      {children}\n      {toggleIcon}\n    </Component>\n  ) : (\n    <>{children}</>\n  );\n};\n\n/**\n * Based on the computed line-height and clientHeight of the element, returns the number of lines of the content.\n */\nfunction getNumLines(bodyElem: Element) {\n  return (\n    bodyElem.clientHeight / parseFloat(getComputedStyle(bodyElem).lineHeight)\n  );\n}\n","import React, {\n  ReactElement,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Balloon, BalloonProps } from \"./Balloon\";\nimport { StyledBalloonsStack } from \"./StyledBalloonsStack\";\n\ntype ShowProps = Pick<\n  BalloonProps,\n  \"title\" | \"icon\" | \"body\" | \"actions\" | \"headerActions\"\n>;\n\nexport interface BalloonManagerAPI {\n  /**\n   * Shows a Balloon notification on the bottom left of the screen.\n   * @param props: Props to pass to the Balloon component\n   * @param [autoHideTimeout=10_000] timeout in ms for hiding the balloon notification.\n   * @returns hide function, in case the notification can expire for some reason.\n   */\n  show(props: ShowProps, autoHideTimeout?: number): () => void;\n  showSticky(props: ShowProps): () => void;\n}\n\nconst NotImplementedFn = () => {\n  throw new Error(\"You must render a BalloonManager...\");\n};\n\nconst BalloonsContext = React.createContext<BalloonManagerAPI>({\n  show: NotImplementedFn,\n  showSticky: NotImplementedFn,\n});\n\nexport const useBalloonManager = (): BalloonManagerAPI =>\n  useContext(BalloonsContext);\n\ntype BalloonElement = ReactElement<BalloonProps, typeof Balloon>;\n\nexport interface BalloonManagerProps {\n  disablePortal?: boolean;\n  BalloonsContainer?: React.ElementType;\n  children?: React.ReactNode;\n}\n\n/**\n * Enables imperative API (via {@link useBalloonManager}) for showing Balloon notifications on the bottom right of the screen.\n * It renders notifications in a portal appended to `body`, unless `disablePortal` is `true`.\n *\n * @param disablePortal: if `true`, the container for notifications will not be rendered in a portal\n * @param BalloonsContainer: container component for the notifications. It's {@link StyledBalloonsStack} by default.\n *\n * TODO: fade in/out transition. Notes:\n *  - Doesn't seem fade-in is needed. Tho it's much easier than fade-out, as it can be achieved with a css animation.\n *  - Fade out should happen only when the balloon is being hidden by timeout.\n * TODO: Support for maximum number of notifications and showing \"x more notification(s)\" button if the limit exceeds\n */\n\nexport const BalloonManager: React.FC<BalloonManagerProps> = ({\n  children,\n  disablePortal,\n  BalloonsContainer = StyledBalloonsStack,\n}) => {\n  const [balloons, setBalloons] = useState<Array<BalloonElement>>([]);\n  const timeoutIdsRef = useRef<number[]>([]);\n  const lastIdRef = useRef<number>(0);\n\n  const api = useMemo<BalloonManagerAPI>(() => {\n    const show: BalloonManagerAPI[\"show\"] = (props, timeout = 10_000) => {\n      lastIdRef.current++;\n      const onClose = () => {\n        setBalloons((balloons) =>\n          balloons.filter((aBalloon) => aBalloon !== balloon)\n        );\n      };\n      const balloon = (\n        <Balloon\n          key={lastIdRef.current}\n          {...props}\n          title={props.title} // TS acts unreasonable without this\n          onClose={onClose}\n        />\n      );\n      setBalloons((balloons) => {\n        if (timeout > 0) {\n          const timeoutId = window.setTimeout(() => {\n            onClose();\n            timeoutIdsRef.current = timeoutIdsRef.current.filter(\n              (aTimeoutId) => aTimeoutId !== timeoutId\n            );\n          }, timeout);\n          timeoutIdsRef.current = [...timeoutIdsRef.current, timeoutId];\n        }\n        return balloons.concat(balloon);\n      });\n      return onClose;\n    };\n    return {\n      show,\n      showSticky: (props) => show(props, 0),\n    };\n  }, []);\n\n  // clear timeouts when unmounted\n  useEffect(() => {\n    return () => {\n      timeoutIdsRef.current.forEach((id) => {\n        window.clearTimeout(id);\n      });\n    };\n  }, []);\n\n  const notificationsStack = (\n    <BalloonsContainer\n      style={{ position: disablePortal ? \"absolute\" : undefined }}\n    >\n      {balloons}\n    </BalloonsContainer>\n  );\n\n  return (\n    <BalloonsContext.Provider value={api}>\n      {children}\n      {disablePortal\n        ? notificationsStack\n        : ReactDOM.createPortal(notificationsStack, document.body)}\n    </BalloonsContext.Provider>\n  );\n};\n","import styled from \"styled-components\";\nimport { StyledBalloonContainer } from \"@intellij-platform/core/Balloon/Balloon.styled\";\n\n/**\n * Container component for stacking a number of Balloons in an overlay placed on the bottom right of where it's rendered.\n */\nexport const StyledBalloonsStack = styled.div`\n  position: fixed;\n  z-index: 1;\n  bottom: 42px;\n  right: 26px;\n  ${StyledBalloonContainer} {\n    margin-bottom: 12px;\n  }\n`;\n","import React, { ForwardedRef, JSXElementConstructor } from \"react\";\nimport { useButton } from \"@react-aria/button\";\nimport { filterDOMProps, mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport {\n  AriaBaseButtonProps,\n  AriaButtonProps,\n  ButtonProps,\n} from \"@react-types/button\";\n\nexport interface BareButtonProps extends AriaBaseButtonProps, ButtonProps {\n  children: React.ReactElement;\n  elementType?: AriaButtonProps[\"elementType\"];\n\n  // NOTE: there is a chance of unchecked breaking change here, since this is not explicitly mentioned as public API\n  // of useButton, but it is passed to the underlying usePress.\n  preventFocusOnPress?: boolean; // Should this be become true by default?\n}\n\n/**\n * A component to make arbitrary content an accessible button which is also able to be a tooltip trigger.\n */\nexport const BareButton = React.forwardRef(function BareButton(\n  { elementType: elementTypeProp, ...props }: BareButtonProps,\n  forwardedRef: ForwardedRef<HTMLElement>\n) {\n  const elementType =\n    elementTypeProp ||\n    (React.isValidElement(props.children) &&\n    typeof props.children.type === \"string\"\n      ? (props.children.type as unknown as JSXElementConstructor<unknown>)\n      : undefined) ||\n    \"button\";\n  const ref = useObjectRef(forwardedRef);\n  const { buttonProps } = useButton(\n    {\n      elementType,\n      ...props,\n    },\n    ref\n  );\n  const domProps = filterDOMProps(props);\n  const { autoFocus } = props;\n\n  return React.cloneElement(\n    props.children,\n    mergeProps(domProps, buttonProps, { autoFocus, ref })\n  );\n});\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\n\nexport const StyledButton = styled.button<{ disabled?: boolean }>`\n  box-sizing: border-box;\n  min-width: 4.5rem; // https://jetbrains.github.io/ui/controls/button/#28\n  padding: 0 0.875rem; // https://jetbrains.github.io/ui/controls/button/#28\n  height: 1.5rem;\n  font-family: inherit;\n  background-color: ${({ theme, disabled }) =>\n    disabled ? \"transparent\" : theme.color(\"Button.startBackground\")};\n  color: ${({ theme, disabled }) =>\n    disabled\n      ? theme.color(\"Button.disabledText\")\n      : theme.color(\n          \"Button.foreground\" as UnknownThemeProp<\"Button.foreground\">\n        )};\n  border: 1px solid\n    ${({ theme, disabled }) =>\n      disabled\n        ? theme.color(\"Button.disabledBorderColor\")\n        : theme.color(\"Button.startBorderColor\")};\n  border-radius: ${({ theme }) =>\n    (theme.value<number>(\"Button.arc\") ?? 6) / 2}px;\n  box-shadow: ${({ theme }) =>\n    theme.value(\"Button.paintShadow\")\n      ? `0 0 0 ${theme.value(\"Button.shadowWidth\") ?? 2}px ${\n          theme.color(\"Button.shadowColor\") ?? // Button.darcula.shadowColor default is skipped.\n          (theme.dark ? \"#36363680\" : \"#a6a6a633\")\n        }`\n      : \"\"};\n  white-space: nowrap; // https://jetbrains.github.io/ui/controls/button/#29\n\n  flex-shrink: 0; // button should not shrink when rendered in a flex container\n\n  a&,\n  a&:hover {\n    text-decoration: none;\n    align-content: center;\n    text-align: center;\n    display: inline-block;\n  }\n\n  &:focus,\n  &.focus /* for testing purposes*/ {\n    border-color: ${({ theme }) =>\n      theme.color(\"Button.focusedBorderColor\", \"#87afda\")};\n    outline: none;\n    box-shadow: ${({ theme }) =>\n      `0 0 0 2px ${\n        // NOTE: by not using the second argument for default value, we prioritize *.focusColor over the rest.\n        theme.color(\"Component.focusColor\") ??\n        theme.color(\n          \"Focus.borderColor\" as UnknownThemeProp<\"Focus.borderColor\">,\n          \"#8ab2eb\"\n        )\n      }`};\n  }\n`;\nexport const StyledDefaultButton = styled(StyledButton)`\n  background-color: ${({ theme, disabled }) =>\n    !disabled && theme.color(\"Button.default.startBackground\", \"#384f6b\")};\n  color: ${({ theme, disabled }) =>\n    !disabled && theme.color(\"Button.default.foreground\")};\n  border-color: ${({ theme, disabled }) =>\n    !disabled && theme.color(\"Button.default.startBorderColor\", \"#BFBFBF\")};\n  &:focus,\n  &.focus /* for testing purposes*/ {\n    border-color: ${({ theme }) =>\n      theme.color(\"Button.default.focusedBorderColor\", \"#87afda\")};\n  }\n`;\n\nexport const StyledIconButton = styled(StyledButton)`\n  border-radius: 1000px;\n  padding: 0;\n  line-height: 0;\n  min-width: 0;\n  height: 1.5rem;\n  width: 1.5rem;\n`;\n","import React, {\n  ButtonHTMLAttributes,\n  CSSProperties,\n  ForwardedRef,\n} from \"react\";\nimport { useButton } from \"@react-aria/button\";\nimport { AriaButtonProps } from \"@react-types/button\";\nimport { filterDOMProps, mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport {\n  StyledButton,\n  StyledDefaultButton,\n  StyledIconButton,\n} from \"@intellij-platform/core/Button/StyledButton\";\nimport { MnemonicTrigger } from \"@intellij-platform/core/Mnemonic\";\nimport { PressEvent } from \"@react-types/shared/src/events\";\n\ntype ButtonVariant = \"default\" | \"icon\";\nexport interface ButtonProps<T extends \"button\" | \"a\" = \"button\">\n  extends AriaButtonProps<T> {\n  variant?: ButtonVariant; // can allow for custom (styled) component too if needed.\n  // NOTE: there is a chance of unchecked breaking change here, since this is not explicitly mentioned as public API\n  // of useButton, but it is passed to the underlying usePress.\n  // Should this be become true by default? Maybe an context-based API to set defaults like this for a section?\n  preventFocusOnPress?: boolean;\n\n  form?: ButtonHTMLAttributes<HTMLButtonElement>[\"form\"];\n  style?: CSSProperties;\n  /**\n   * A character to be used as {@link https://jetbrains.design/intellij/principles/mnemonics/ mnemonic} for the button\n   * It will be shown as underlined in button text, when mnemonic is activated (by pressing Alt)\n   * Note: if you use mnemonic, and the direct child of the button is not a string, you should use `MnemonicText`\n   * to render the button text, to have the underlining behavior.\n   */\n  mnemonic?: string;\n  className?: string;\n\n  /**\n   * Called when the button is pressed, or triggered via mnemonic. If mnemonic is used, there won't be any event\n   * passed to onPress callback.\n   */\n  onPress?: (e?: PressEvent) => void;\n}\n\nconst variants: { [key in ButtonVariant]: typeof StyledButton } = {\n  default: StyledDefaultButton,\n  icon: StyledIconButton,\n};\n\n/**\n * https://jetbrains.github.io/ui/controls/button/\n *\n * TODO:\n * - Support for \"default\" button behaviour. it's kind of similar to a <button type=\"submit\" /> in html, but textarea\n * behaviour is different from what is explained here: https://jetbrains.github.io/ui/controls/button/#16\n * Cmd+Enter should always trigger onPress. Plus, maybe it should work independent of \"form\" being used? or maybe it's\n * not a big deal to expect an ancestor \"form\" element, when variant is \"default\"?\n * - \"Default\" style differences in Windows.\n * - Gradient colors (low hanging fruit, but negligible added value).\n *\n * Known issues:\n * - In the original impl, default button looks the same as normal button, when focus is not within the same area that\n * the button is. For example in the commit tool window, \"Commit\" button which is default, is not blue, unless the\n * \"Commit\" tool window is focused. This particular case can easily be achieved by conditionally setting variant to,\n * \"default\" based on tool window focus state, which is accessible via useDefaultToolWindowContext(), if\n * DefaultToolWindow is used. But we need to see if the same requirement exists in various places.\n * NOTE: this item is related to the first item in the to-do list above. There can be a container kind of component,\n * which enables \"default\" behaviour and look. Maybe it can be FocusScope or at least related to FocusScope.\n * - In the original impl, there is no visual clue for pressed state, which is poor accessibility. For now, the same\n * behaviour is followed here too. But we may reconsider deviating from the original impl for an improvement here.\n *\n */\nexport const Button = React.forwardRef(function Button<\n  T extends \"a\" | \"button\"\n>(\n  { variant, style, className, mnemonic, ...props }: ButtonProps<T>,\n  forwardedRef: ForwardedRef<HTMLButtonElement>\n) {\n  const ref = useObjectRef(forwardedRef);\n  const { elementType = props.href ? \"a\" : \"button\" } = props;\n  const { buttonProps } = useButton(\n    {\n      ...props,\n      elementType,\n    },\n    ref\n  );\n  const domProps = filterDOMProps(props);\n  const { autoFocus, form } = props;\n\n  const Component = (variant && variants[variant]) || StyledButton;\n  return (\n    <Component\n      as={elementType}\n      {...mergeProps(domProps, buttonProps, { autoFocus, form })}\n      style={style}\n      className={className}\n      ref={ref}\n    >\n      {mnemonic ? (\n        <MnemonicTrigger\n          mnemonic={mnemonic}\n          isDisabled={props.isDisabled}\n          onTriggered={props.onPress}\n        >\n          {props.children}\n        </MnemonicTrigger>\n      ) : (\n        props.children\n      )}\n    </Component>\n  );\n});\n","import React, { CSSProperties, ReactNode } from \"react\";\nimport { DOMAttributes, FocusableElement } from \"@react-types/shared\";\nimport { FocusScope, useFocusManager } from \"@react-aria/focus\";\nimport { useKeyboard } from \"@react-aria/interactions\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { hasAnyModifier } from \"@intellij-platform/core/utils/keyboard-utils\";\nimport { styled } from \"@intellij-platform/core/styled\";\n\nexport interface ButtonGroupProps {\n  children: ReactNode;\n  className?: string;\n  style?: CSSProperties;\n}\n\nconst StyledButtonGroup = styled.div`\n  display: inline-flex;\n  align-items: center;\n  gap: 0.75rem;\n`;\n\n/**\n * `ButtonGroup` should be used as a wrapper around related {@link Button Buttons}, in places such as the\n * footer of a dialog. It does two things:\n * - allows for moving the focus between the buttons with left/right arrow keys.\n * - applies the right spacing between the buttons\n *\n * @see Button\n */\nexport function ButtonGroup(props: ButtonGroupProps) {\n  return (\n    <FocusScope>\n      <HorizontalArrowKeyNavigation>\n        {(arrowKeyNavigationProps) => (\n          <StyledButtonGroup {...mergeProps(props, arrowKeyNavigationProps)} />\n        )}\n      </HorizontalArrowKeyNavigation>\n    </FocusScope>\n  );\n}\n\nfunction HorizontalArrowKeyNavigation({\n  children,\n}: {\n  children: (props: DOMAttributes<FocusableElement>) => ReactNode;\n}) {\n  const focusManager = useFocusManager();\n  const { keyboardProps } = useKeyboard({\n    onKeyDown: (e) => {\n      if (!hasAnyModifier(e)) {\n        if (e.key === \"ArrowLeft\") {\n          return focusManager?.focusPrevious({ wrap: true });\n        } else if (e.key === \"ArrowRight\") {\n          return focusManager?.focusNext({ wrap: true });\n        }\n      }\n      e.continuePropagation();\n    },\n  });\n\n  return <>{children(keyboardProps)}</>;\n}\n","import React, { HTMLProps, ReactNode } from \"react\";\nimport { useToggleState } from \"@react-stately/toggle\";\nimport { useCheckbox } from \"@react-aria/checkbox\";\nimport {\n  AriaLabelingProps,\n  FocusableDOMProps,\n  FocusableProps,\n  InputBase,\n} from \"@react-types/shared\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { styled } from \"@intellij-platform/core/styled\";\n\nimport { CheckboxIcon } from \"./CheckboxIcon\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { MnemonicTrigger } from \"@intellij-platform/core/Mnemonic\";\n\nexport interface CheckboxProps\n  extends InputBase,\n    FocusableDOMProps,\n    AriaLabelingProps,\n    FocusableProps {\n  /**\n   * If set to true, the checkbox won't be focusable.\n   * Common use cases:\n   * - When checkbox is rendered in a focusable container, like a list item where the focus should not be taken away\n   *   from that container.\n   * - \"Amend\" checkbox in \"Commit\" tool window. The focus is kept in the commit message or changes tree, perhaps, for\n   *   a questionably better UX.\n   * Note: Passing {@link excludeFromTabOrder} will still let the checkbox be focusable, while `preventFocus`, doesn't\n   * let the component get focused at all.\n   * TODO(potential): it might be nicer to have a `preventFocusOnPress` prop consistent with IconButton, instead.\n   *  In that case preventing focus completely would be achieved with `preventFocusOnPres` and `excludeFromTabOrder`.\n   */\n  preventFocus?: boolean;\n\n  /**\n   * By default, focus ring is always shown when the checkbox is focused, independent of the interaction method.\n   * if set to false, the focus will be only visible if the interaction is done via keyboard or screen readers.\n   * Similar to how [:focus-visible](https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible) works.\n   */\n  disableFocusAlwaysVisible?: boolean;\n\n  /**\n   * Indeterminism is presentational only.\n   * The indeterminate visual representation remains regardless of user interaction.\n   */\n  isIndeterminate?: boolean;\n\n  /**\n   * The label for the element.\n   */\n  children?: ReactNode;\n\n  /**\n   * Whether the element should be selected (uncontrolled).\n   */\n  defaultSelected?: boolean;\n  /**\n   * Whether the element should be selected (controlled).\n   */\n  isSelected?: boolean;\n  /**\n   * Handler that is called when the element's selection state changes.\n   */\n  onChange?: (isSelected: boolean) => void;\n  /**\n   * The value of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefvalue).\n   */\n  value?: string;\n  /**\n   * The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).\n   */\n  name?: string;\n\n  className?: string; // to support styled-components\n\n  /**\n   * A character to be used as {@link https://jetbrains.design/intellij/principles/mnemonics/ mnemonic} for the button\n   * It will be shown as underlined in button text, when mnemonic is activated (by pressing Alt)\n   * Note: if you use mnemonic, and the direct child of the button is not a string, you should use `Mnemonic.Text`\n   * to render the button text, to have the underlining behavior.\n   */\n  mnemonic?: string;\n}\n\nconst StyledWrapperLabel = styled.label`\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n`;\n\nconst StyledCheckboxLabelText = styled.span<{\n  isDisabled: boolean | undefined;\n}>`\n  margin-left: 0.25rem;\n  color: ${({ theme, isDisabled }) =>\n    isDisabled\n      ? theme.color(\n          \"CheckBox.disabledText\" as UnknownThemeProp<\"CheckBox.disabledText\">,\n          \"#808080\" /* this default value was a bit tricky. Still not clear from where it comes in darcular \n          theme when there is no clue of Checkbox.disabledText or *.disabledText. Note that using \n          CheckBox.disabledForeground is not a good option, because it's something other than #808080 for darcula */\n        )\n      : theme.color(\"*.foreground\")};\n`;\n\nconst StyledInput = styled.input`\n  opacity: 0.0001;\n  position: absolute;\n  z-index: 1;\n  inset: 0;\n  cursor: default;\n  &:disabled {\n    cursor: default;\n  }\n`;\n\n/**\n * Checkbox component to be used with or without a label.\n *\n * While the checkbox without the label + preventFocus makes it usable in tree/list, it might be more optimized to\n * use a more lightweight component like ListItemCheckbox, which uses CheckboxIcon with a simple press handle. Without\n * any input, state, etc.\n */\nexport const Checkbox = ({\n  preventFocus,\n  className,\n  disableFocusAlwaysVisible,\n  mnemonic,\n  ...props\n}: CheckboxProps) => {\n  const state = useToggleState(props);\n  const ref = React.useRef<HTMLInputElement>(null);\n  const { inputProps } = useCheckbox(props, state, ref);\n\n  const { isFocusVisible, isFocused, focusProps } = useFocusRing({\n    autoFocus: props.autoFocus,\n  });\n\n  const focusDisabledProps: Pick<\n    HTMLProps<HTMLInputElement>,\n    \"onFocusCapture\" | \"tabIndex\"\n  > = preventFocus\n    ? {\n        onFocusCapture: (event) => {\n          event.stopPropagation();\n          event.preventDefault();\n          if (event.relatedTarget instanceof HTMLElement) {\n            event.relatedTarget.focus();\n          } else {\n            event.target.blur();\n          }\n        },\n        tabIndex: -1,\n      }\n    : {};\n\n  return (\n    <StyledWrapperLabel className={className}>\n      <StyledInput\n        {...mergeProps(inputProps, focusProps, focusDisabledProps)}\n        ref={ref}\n      />\n      <CheckboxIcon\n        isIndeterminate={props.isIndeterminate}\n        isFocused={disableFocusAlwaysVisible ? isFocusVisible : isFocused}\n        isSelected={props.isIndeterminate || state.isSelected}\n        isDisabled={props.isDisabled}\n        aria-hidden=\"true\"\n        style={{\n          pointerEvents: \"none\",\n        }}\n      />\n      {props.children && (\n        <StyledCheckboxLabelText isDisabled={props.isDisabled}>\n          {mnemonic ? (\n            <MnemonicTrigger\n              mnemonic={mnemonic}\n              isDisabled={props.isDisabled}\n              onTriggered={state.toggle}\n            >\n              {props.children}\n            </MnemonicTrigger>\n          ) : (\n            props.children\n          )}\n        </StyledCheckboxLabelText>\n      )}\n    </StyledWrapperLabel>\n  );\n};\n","import React, { ComponentProps } from \"react\";\nimport { LafIcon } from \"@intellij-platform/core/Icon\";\n\n/**\n * Renders checkbox UI in different states (focused, selected, indeterminate, etc.), without having anything to do\n * with the interactions\n */\nexport const CheckboxIcon = ({\n  isDisabled,\n  isFocused,\n  isIndeterminate,\n  isSelected,\n  ...otherProps\n}: Omit<ComponentProps<typeof LafIcon>, \"size\" | \"icon\"> & {\n  isIndeterminate: boolean | undefined;\n  isFocused: boolean;\n  isDisabled: boolean | undefined;\n  isSelected: boolean;\n}) => {\n  return (\n    <LafIcon\n      {...otherProps}\n      size={20}\n      icon={{\n        name: isIndeterminate ? \"checkBoxIndeterminate\" : \"checkBox\",\n        modifiers: {\n          Disabled: isDisabled,\n          Selected: isSelected || isIndeterminate,\n          Focused: isFocused,\n        },\n      }}\n    />\n  );\n};\n","import React from \"react\";\nimport { Collection, Node } from \"@react-types/shared\";\nimport { CollectionSpeedSearchMatches } from \"./useCollectionSpeedSearchResult\";\n\nexport type CollectionSpeedSearchContextValue = {\n  matches: CollectionSpeedSearchMatches;\n  collection: Collection<Node<unknown>>;\n};\n\nexport const CollectionSpeedSearchContext =\n  React.createContext<CollectionSpeedSearchContextValue | null>(null);\n","import React, { Key, useContext } from \"react\";\nimport { TextWithHighlights } from \"@intellij-platform/core/TextWithHighlights/TextWithHighlights\";\nimport { TextRange } from \"@intellij-platform/core/TextRange\";\nimport { CollectionSpeedSearchContext } from \"@intellij-platform/core/CollectionSpeedSearch/CollectionSpeedSearchContext\";\n\ntype CollectionSpeedSearchItemContextValue = {\n  text: string;\n  highlightedRanges: null | TextRange[];\n};\n\nconst CollectionSpeedSearchItemContext =\n  React.createContext<null | CollectionSpeedSearchItemContextValue>(null);\n\nexport const SpeedSearchItemHighlightsProvider: React.FC<{\n  children?: React.ReactNode;\n  itemKey: Key;\n}> = ({ children, itemKey }) => {\n  const context = useContext(CollectionSpeedSearchContext);\n  if (!context) {\n    throw new Error(\n      `SpeedSearchItemProvider is only meant to be rendered by collection components with speed search. \n      CollectionSpeedSearchContext is expected to be rendered as a wrapper around all items.`\n    );\n  }\n  const item = context.collection.getItem(itemKey);\n  const text = item?.textValue ?? \"\";\n  if (!text && item?.props.textValue === undefined) {\n    console.warn(\n      \"no textValue specified on Item. When using SpeedSearch, you need to specify textValue for item, which will be the basis for search\"\n    );\n  }\n  return (\n    <CollectionSpeedSearchItemContext.Provider\n      value={{\n        highlightedRanges: context.matches.get(itemKey) || null,\n        text: text,\n      }}\n    >\n      {children}\n    </CollectionSpeedSearchItemContext.Provider>\n  );\n};\n\n/**\n * Used inside Item content, to render the textValue of the Item, potentially with highlighted ranges if it's a match\n * in current search.\n */\nexport const HighlightedTextValue = function ({\n  Component = \"span\",\n}: {\n  /**\n   * When rendering in a flex parent (which is the case for tree or list), rendering a container is necessary to have\n   * the right spacing around highlights, when the highlighter span is immediately followed or proceeded by a white\n   * space. By default, a \"span\" is rendered.\n   */\n  Component?: React.ElementType;\n}) {\n  const speedSearchContext = React.useContext(CollectionSpeedSearchItemContext);\n  if (!speedSearchContext) {\n    throw new Error(\n      \"HighlightedTextValue should be rendered only in items of a speed search enabled collection component\"\n    );\n  }\n  const { highlightedRanges, text } = speedSearchContext;\n  return (\n    <Component>\n      {highlightedRanges ? (\n        <TextWithHighlights highlights={highlightedRanges}>\n          {text}\n        </TextWithHighlights>\n      ) : (\n        text\n      )}\n    </Component>\n  );\n};\n","import { HTMLAttributes, RefObject, useMemo } from \"react\";\nimport { Collection, KeyboardDelegate, Node } from \"@react-types/shared\";\nimport { SelectionManager } from \"@react-stately/selection\";\nimport {\n  SpeedSearchPopupProps,\n  SpeedSearchProps,\n} from \"@intellij-platform/core/SpeedSearch\";\nimport {\n  SpeedSearchState,\n  SpeedSearchStateProps,\n  useSpeedSearch,\n  useSpeedSearchState,\n} from \"../SpeedSearch/useSpeedSearch\";\nimport { CollectionSpeedSearchContextValue } from \"./CollectionSpeedSearchContext\";\nimport {\n  CollectionSpeedSearchMatches,\n  useCollectionSpeedSearchResult,\n} from \"./useCollectionSpeedSearchResult\";\nimport { createSpeedSearchKeyboardDelegate } from \"./createSpeedSearchKeyboardDelegate\";\n\nexport interface CollectionSpeedSearch {\n  containerProps: HTMLAttributes<HTMLElement>;\n  selectionManager: SelectionManager;\n  keyboardDelegate: KeyboardDelegate;\n  speedSearch: SpeedSearchState & { matches: CollectionSpeedSearchMatches };\n  searchPopupProps: SpeedSearchPopupProps;\n  speedSearchContextValue: CollectionSpeedSearchContextValue;\n}\n\n/**\n * Given a `collection`, a `selectionManager` and a `keyboardDelegate`, it returns:\n * - `speedSearch`: search term, if speed search is active or not, and the matched keys\n * - `matches`: A Set of matched keys, or `null` if speed search is not active\n * - `containerProps`: The props you need to pass to the collection container element to enable\n * speedSearch on it.\n * - `selectionManager`: a selection manager in which select all is overridden to only select\n * matched items if speed search is active.\n * - `keyboardDelegate`: a keyboard delegate in which limits navigation to matched items, when\n * speed search is active.\n *\n * Speed search options, including the ones for optionally controlling the state of the speed search\n * are also accepted in inputs.\n */\nexport function useCollectionSpeedSearch<T>({\n  collection,\n  selectionManager,\n  keepSearchActiveOnBlur,\n  keyboardDelegate,\n  focusBestMatch,\n  ref,\n  ...speedSearchStateProps\n}: {\n  collection: Collection<Node<T>>;\n  selectionManager: SelectionManager;\n  keyboardDelegate: KeyboardDelegate;\n  ref: RefObject<HTMLElement>;\n  focusBestMatch?: boolean;\n} & SpeedSearchStateProps &\n  Pick<SpeedSearchProps, \"keepSearchActiveOnBlur\">): CollectionSpeedSearch {\n  const speedSearch = useSpeedSearchState(speedSearchStateProps);\n\n  const { matches, selectionManager: speedSearchSelectionManager } =\n    useCollectionSpeedSearchResult({\n      collection,\n      selectionManager,\n      speedSearch,\n      focusBestMatch,\n    });\n  const { containerProps } = useSpeedSearch(\n    { keepSearchActiveOnBlur },\n    speedSearch,\n    ref\n  );\n  const speedSearchKeyboardDelegate = useMemo(\n    () =>\n      createSpeedSearchKeyboardDelegate(\n        keyboardDelegate,\n        speedSearch.active ? matches : null\n      ),\n    [speedSearch.active, keyboardDelegate, matches]\n  );\n\n  // Doesn't seem necessary to wrap with useMemo, but can be rethink-ed\n  const speedSearchContextValue = { matches, collection };\n\n  return {\n    containerProps,\n    selectionManager: speedSearchSelectionManager,\n    keyboardDelegate: speedSearchKeyboardDelegate,\n    speedSearch: {\n      ...speedSearch,\n      matches,\n    },\n    searchPopupProps: {\n      active: speedSearch.active,\n      match: matches.size > 0,\n      children: speedSearch.searchTerm,\n    },\n    speedSearchContextValue,\n  };\n}\n","import { Key, useEffect, useMemo } from \"react\";\nimport { minusculeMatch } from \"../minusculeMatch\";\nimport { SpeedSearchState } from \"../SpeedSearch/useSpeedSearch\";\nimport { Collection, Node } from \"@react-types/shared\";\nimport { SelectionManager } from \"@react-stately/selection\";\nimport { createSpeedSearchSelectionManager } from \"./createSpeedSearchSelectionManager\";\nimport { TextRange } from \"@intellij-platform/core/TextRange\";\nimport { useLatest } from \"@intellij-platform/core/utils/useLatest\";\n\nexport type CollectionSpeedSearchMatches = Map<Key, TextRange[]>;\n\nexport function useCollectionSpeedSearchResult<T>({\n  collection,\n  selectionManager: inputSelectionManager,\n  speedSearch,\n  focusBestMatch = false,\n}: {\n  collection: Collection<Node<T>>;\n  selectionManager: SelectionManager;\n  speedSearch: SpeedSearchState;\n  /**\n   * If true, focusing the best match (the longest \"start-with\" match) will be preferred.\n   * By default, the focus is moved to the first match that comes after the currently focused item, if currently\n   * focused item itself is not a match.\n   * A typical use case would be collections that filter out non-match items.\n   * @default false\n   */\n  focusBestMatch?: boolean;\n}) {\n  const { searchTerm, active } = speedSearch;\n\n  /**\n   * Note: when a component is implemented using react-aria's useCollection, any re-render of that component causes\n   * a new collection. That's because prop.children is normally an inline function, and therefore the collection is\n   * re-created: https://github.com/adobe/react-spectrum/blob/4a1cff846018e449487ccf54d7474bdfa4d4f57c/packages/@react-stately/collections/src/useCollection.ts#L29\n   * This means we will unnecessarily perform the search in such cases. it might be a non-issue, but if it turned out\n   * to be an issue, a sub-optimum improvement would be to use `collection.size` as a dependency instead of `collection`,\n   * assuming that searchable text in collections won't change, and assuming that the important changes (search-wise)\n   * will usually involve a size change in the collection.\n   */\n  const { matches } = useMemo(() => {\n    const matches: CollectionSpeedSearchMatches = new Map(); // maybe make it nullable makes more sense\n    if (speedSearch.active) {\n      // it's important not to iterate on items, since they can be nested.\n      [...collection.getKeys()]\n        .map((key) => collection.getItem(key)!)\n        .filter(({ type }) => type === \"item\")\n        .forEach((item) => {\n          const matchedRanges = minusculeMatch(item.textValue, searchTerm);\n          if (matchedRanges) {\n            matches.set(item.key, matchedRanges);\n          }\n        });\n    }\n\n    return {\n      matches,\n    };\n  }, [searchTerm, collection, active]);\n\n  const selectionManager = createSpeedSearchSelectionManager(\n    inputSelectionManager,\n    active ? matches : null\n  );\n  const latestValues = useLatest({\n    matches,\n    selectionManager,\n    collection,\n    focusBestMatch,\n  });\n\n  // On every query change, if the current selection doesn't include any of the matched items, move selection to the\n  // first matched item.\n  useEffect(() => {\n    const { selectionManager, matches, collection } = latestValues.current;\n    const matchedKeys = [...matches.keys()];\n    const noneOfTheMatchesAreSelected = !matchedKeys.some((matchedKey) =>\n      selectionManager.isSelected(matchedKey)\n    );\n    let keyToFocus: Key | undefined;\n    if (latestValues.current.focusBestMatch) {\n      keyToFocus = getLongestCommonPrefixMatch(matches);\n    }\n    if (!keyToFocus && matchedKeys.length > 0 && noneOfTheMatchesAreSelected) {\n      keyToFocus = getMatchToSelect({\n        collection,\n        selectionManager,\n        matchedKeys,\n      });\n    }\n    if (keyToFocus) {\n      selectionManager.setFocusedKey(keyToFocus);\n      selectionManager.replaceSelection(keyToFocus);\n    }\n  }, [\n    searchTerm,\n    latestValues /*it's a ref object, so no harm in listing it here to comply with rules of hooks*/,\n  ]);\n  return {\n    matches,\n    selectionManager,\n  };\n}\n\n/**\n * given a non-empty array of matched keys, returns the one that should be selected\n */\nfunction getMatchToSelect({\n  collection,\n  selectionManager,\n  matchedKeys,\n}: {\n  collection: Collection<Node<unknown>>;\n  selectionManager: SelectionManager;\n  matchedKeys: Key[];\n}): Key {\n  let passedFirstSelection = false;\n  for (const key of collection.getKeys()) {\n    if (key === selectionManager.firstSelectedKey) {\n      passedFirstSelection = true;\n    }\n    if (passedFirstSelection && matchedKeys.includes(key)) {\n      return key;\n    }\n  }\n  return matchedKeys[0];\n}\n\n/**\n * Returns the longest match from the beginning, if exists.\n */\nfunction getLongestCommonPrefixMatch(matches: CollectionSpeedSearchMatches) {\n  return [...matches.entries()]\n    .filter(([, [firstRange]]) => firstRange?.from === 0)\n    .sort(\n      ([, [rangeA]], [, [rangeB]]) =>\n        rangeB.to - rangeB.from - rangeA.to - rangeA.from\n    )?.[0]?.[0];\n}\n","import { SelectionManager } from \"@react-stately/selection\";\nimport { Key } from \"react\";\n\nexport function createSpeedSearchSelectionManager(\n  wrappedSelectionManager: SelectionManager,\n  matches: Map<Key, unknown /* We don't care what a match is here */> | null\n): SelectionManager {\n  return Object.create(wrappedSelectionManager, {\n    selectAll: {\n      value: () => {\n        if (matches) {\n          // @ts-expect-error: state is private and there is no API on SelectionManager for bulk\n          // setting selected keys (which would ideally check for not selecting disabled keys internally).\n          const state = wrappedSelectionManager.state;\n          state.setSelectedKeys(\n            new Set(\n              [...matches.keys()].filter((key) => !state.disabledKeys.has(key))\n            )\n          );\n        } else {\n          wrappedSelectionManager.selectAll();\n        }\n      },\n    },\n  });\n}\n","import React, { Key } from \"react\";\nimport { KeyboardDelegate } from \"@react-types/shared\";\n\n/**\n * Creates a new KeyboardDelegate in which keyKeyBelow and getKeyAbove are overridden in a way that\n * navigation is limited to matched items.\n * Note: select all action is not handled in KeyboardDelegate.\n * Note: when virtualization is added, this probably need to change, like how it's handled\n * in `useListBoxLayout` in react spectrum.\n */\nexport function createSpeedSearchKeyboardDelegate(\n  wrappedKeyboardDelegate: KeyboardDelegate,\n  matches: Map<Key, unknown /*We don't care what a match is, here*/> | null\n): KeyboardDelegate {\n  // TODO: page up and down deactivate speed search. If we want that, we can pass the speedSearch\n  //  object too. but doesn't seem like the best way to do it, even it the same behavior is expected\n  const findFirstMatch = <T extends React.Key | undefined, K>(\n    fromKey: React.Key | undefined | null,\n    direction: \"up\" | \"down\"\n  ) => {\n    let currentKey: React.Key | undefined | null = fromKey;\n    while (currentKey != null) {\n      if (!matches || matches.has(currentKey)) {\n        return currentKey;\n      }\n      currentKey =\n        direction === \"up\"\n          ? wrappedKeyboardDelegate.getKeyAbove?.(currentKey)\n          : wrappedKeyboardDelegate.getKeyBelow?.(currentKey);\n    }\n    return currentKey ?? undefined;\n  };\n  return Object.create(wrappedKeyboardDelegate, {\n    getKeyBelow: {\n      value: (key) =>\n        findFirstMatch(wrappedKeyboardDelegate.getKeyBelow?.(key), \"down\"),\n    },\n    getKeyAbove: {\n      value: (key) =>\n        findFirstMatch(wrappedKeyboardDelegate.getKeyAbove?.(key), \"up\"),\n    },\n    getFirstKey: {\n      value: (key?: React.Key, global?: boolean): React.Key | null => {\n        const firstKey = findFirstMatch(\n          wrappedKeyboardDelegate.getFirstKey?.(key, global),\n          \"down\"\n        );\n        return firstKey == null\n          ? matches?.keys().next().value ?? null\n          : firstKey;\n      },\n    },\n    getLastKey: {\n      value: (key?: React.Key, global?: boolean): React.Key | null => {\n        const lastKey = findFirstMatch(\n          wrappedKeyboardDelegate.getLastKey?.(key, global),\n          \"down\"\n        );\n        return lastKey == null\n          ? [...(matches?.keys() || [])].pop() ?? null\n          : lastKey;\n      },\n    },\n  } as { [key in keyof KeyboardDelegate]: { value: KeyboardDelegate[key] } });\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport { ReactElement } from \"react\";\nimport { ItemProps } from \"@react-types/shared\";\nimport { PartialNode } from \"@react-stately/collections\";\n\ninterface DividerProps {}\n\n/**\n * To be used in dynamic collections, just to provide a key and make it easy to check in the render\n * function to figure out what to render (an Item or a Divider)\n */\nexport class DividerItem {\n  private static seq = 0;\n  key = \"divider_\" + DividerItem.seq++;\n  get id() {\n    return this.key;\n  }\n}\n\nfunction Divider({}: DividerProps): ReactElement {\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null as any;\n}\n// We don't want getCollectionNode to show up in the type definition\nlet _Divider = Divider as (props: DividerProps) => JSX.Element;\nexport { _Divider as Divider };\n\nDivider.getCollectionNode = function* getCollectionNode<T>(\n  props: ItemProps<T>\n): Generator<PartialNode<T>> {\n  let rendered = null;\n\n  yield {\n    type: \"divider\",\n    element: null as any, // to prevent check on key, which is not necessary for divider\n    props: props,\n    rendered,\n    hasChildNodes: false,\n  };\n};\n","import React, { ReactElement } from \"react\";\nimport { ItemProps } from \"@react-types/shared\";\nimport { Item as StatelyItem, PartialNode } from \"@react-stately/collections\";\n\n// noinspection JSUnusedLocalSymbols\n/**\n * Item for collection components, which by default disables caching, unless `invalidated` prop is set to false on the\n * context passed to useCollection. Control over cache invalidation policy can be enabled by using\n * `useCollectionCacheInvalidation` for creating such context object.\n */\nfunction Item<T>(props: ItemProps<T>): ReactElement {\n  return null as any as React.ReactElement;\n}\n\nexport type CacheInvalidationContext = { invalidated?: boolean };\n\n// We don't want getCollectionNode to show up in the type definition\nlet _Item = Item as <T>(props: ItemProps<T>) => JSX.Element;\nexport { _Item as Item };\n\n/**\n * @private @preapproved\n */\nItem.getCollectionNode = function* getCollectionNode<T>(\n  props: ItemProps<T>,\n  context: CacheInvalidationContext\n): Generator<PartialNode<T>> {\n  const itemGenerator: Generator<PartialNode<T>> = (\n    StatelyItem as any\n  ).getCollectionNode(props, context);\n  const result = itemGenerator.next().value;\n  const originalShouldInvalidate = result.shouldInvalidate;\n  result.shouldInvalidate = (context: CacheInvalidationContext) =>\n    originalShouldInvalidate?.(context) || context.invalidated;\n  yield result;\n};\n","import React from \"react\";\nimport { styled } from \"../styled\";\nimport { DOMAttributes } from \"@react-types/shared\";\nimport { MENU_POSITION_TARGET_DATA_ATTRIBUTE } from \"@intellij-platform/core/Menu/ContextMenuContainer\";\n\nconst GAP = \"0.1875rem\";\nconst StyledItemLayout = styled.div`\n  display: flex;\n  align-items: center;\n  padding-right: 0.25rem;\n  gap: ${GAP};\n`;\n\nconst StyledHint = styled.span<{ small?: boolean }>`\n  display: inline-flex;\n  color: ${({ theme }) =>\n    theme.currentForegroundAware(theme.commonColors.inactiveTextColor)};\n  padding-left: 0.1rem;\n  font-size: ${({ small }) => small && \"0.9em\"};\n`;\n\nconst StyledGroup = styled.span.attrs({\n  role: \"presentation\" as string,\n})`\n  display: inline-flex;\n  display: flex;\n  align-items: center;\n  gap: ${GAP};\n`;\n/**\n * Generic layout component capturing common use cases of tree or list items.\n * It handles the spacing between parts, and provides styled components for parts that need specific styling.\n * For more flexibility over the order of various pieces of content in list/tree items, there is no specific props\n * for parts. Different parts should just be rendered in children.\n *\n * @example\n * ```tsx\n * <ItemLayout>\n *   <PlatformIcon icon=\"nodes/folder\" />\n *   <HighlightedTextValue />\n *   <ItemLayout.Hint>~/workspace/jui</ItemLayout.Hint>\n * </ItemLayout>\n * ```\n * @beta\n */\nexport const ItemLayout = (\n  props: { children: React.ReactNode } & DOMAttributes\n) => {\n  return (\n    <StyledItemLayout\n      {...{ [MENU_POSITION_TARGET_DATA_ATTRIBUTE]: true }}\n      {...props}\n    />\n  );\n};\n\n/**\n * A more subtle text usually rendered next to the main text in the item.\n * @example: project path in project root node, in project view\n * @example: \"library root\" rendered next to \"node_modules\" folders in project view.\n */\nItemLayout.Hint = StyledHint;\n\n/**\n * Useful when a number of items need to be grouped by a wrapper, e.g. to have a tooltip.\n * @example: project path in project root node, in project view\n * @example: \"library root\" rendered next to \"node_modules\" folders in project view.\n */\nItemLayout.Group = StyledGroup;\n","import React from \"react\";\nimport { Node } from \"@react-types/shared\";\n\n/**\n * Generic state of items in collections, provided via a context.\n * To be used in Menu, Tree, or anything that deals with a collection of items for which the common states like\n * **disabled** or **selected** is applicable.\n */\nexport interface ItemStateContextType {\n  node: Node<unknown>;\n  isSelected: boolean;\n  isContainerFocused: boolean;\n  isDisabled: boolean;\n}\n\nexport const ItemStateContext =\n  React.createContext<ItemStateContextType | null>(null);\n","import { Key, RefObject } from \"react\";\n\n// non-public function in @react-aria/selection\nexport function getItemElement(\n  collectionRef: RefObject<HTMLElement | null>,\n  key: Key\n) {\n  let selector = `[data-key=\"${CSS.escape(String(key))}\"]`;\n  let collection = collectionRef.current?.dataset.collection;\n  if (collection) {\n    selector = `[data-collection=\"${CSS.escape(collection)}\"]${selector}`;\n  }\n  return collectionRef.current?.querySelector<HTMLElement>(selector);\n}\n","import { RefObject, useEffect } from \"react\";\nimport { SelectionManager } from \"@react-stately/selection\";\nimport { scrollIntoView } from \"@react-aria/utils\";\nimport { getItemElement } from \"@intellij-platform/core/Collections/getItemElement\";\n\ntype CollectionAutoScrollProps = {\n  isVirtualized?: boolean;\n  selectionManager: SelectionManager;\n};\n\nexport function useCollectionAutoScroll(\n  { isVirtualized, selectionManager }: CollectionAutoScrollProps,\n  ref: RefObject<HTMLElement>\n) {\n  // If not virtualized, scroll the focused element into view when the focusedKey changes.\n  // When virtualized, Virtualizer handles this internally.\n  useEffect(() => {\n    if (!isVirtualized && selectionManager.focusedKey && ref?.current) {\n      let element = getItemElement(ref, selectionManager.focusedKey);\n      if (element) {\n        scrollIntoView(ref.current, element);\n      }\n    }\n  }, [isVirtualized, ref, selectionManager.focusedKey]);\n}\n","import { Key, RefObject, useEffect } from \"react\";\nimport { SelectionManager } from \"@react-stately/selection\";\nimport { Collection, Node } from \"@react-types/shared\";\n\n/**\n * interface to be extended by the props of collection components that support focus proxy.\n */\nexport interface CollectionFocusProxyProps {\n  /**\n   * ref to an element (typically HTMLInputElement) that should act as a focus\n   * proxy that handles ArrowUp, ArrowDown, and Enter keys to allow for\n   * navigating the collection and selecting items.\n   * Useful for implementing\n   * autocompletion or search input connected to a collection element.\n   */\n  focusProxyRef?: RefObject<HTMLElement>;\n}\n\n/**\n * A solution for connecting a collection to a search input so that the collection can still be navigated by keyboard\n * while the input is focused. It works by replaying certain keyboard events on the collection container and focused\n * item. An alternative approach (which is used in react-aria's useCombobox) is to use useSelectableCollection\n * separately for the input, but the biggest issue with that approach is that it's limiting in the following ways:\n * - Rendering input should be a part of the same component that renders the collection. Having specific components\n *   for use cases that require a search input is not flexible enough. For example, one may want to use SpeedSearchList\n *   or List connected to an input. Also, the input and the collection may need to be in different layouts in different\n *   use cases. Decoupling the rendering of the input and collection is a more flexible solution.\n * - The same options used for collection should be passed to the input field for behavior consistency, and that is\n *   prone to error.\n *   Some of these options, like `keyboardDelegate` can even have a default value in hooks like\n *   `useSelectableList`.\n *   It means making sure the same value is passed to the useSelectableCollection for input\n *   would require not using the default value, since the same value can't be accessed.\n *\n * With this event-forwarding approach, it's an arrow up or down event would behave exactly like it was triggered on\n * the collection itself, leaving no room for behavior discrepancies. But it has a few drawbacks:\n * - Although small, there is still some coupling between this code and implementation of the collection component.\n *   More specifically, this implementation assumes the following things:\n *   - \"Enter\" keys (selection or action) are handled on items, but arrow keys are handled on the collection element.\n *   - \"[data-key] attribute is set on items. That is used to find the element for the focused item (which, of course,\n *     is not actually focused while the input is).\n *\n * Note: there has been some addition to react-aria useSelectableCollection and useSelectableItem hooks\n * based on CustomEvent and a similar event reply mechanism in useAutocomplete.\n * It may be possible to replace this hook with built-in functionality in react-aria at some point.\n * But at the moment, it seems like that implementation is too coupled with the autocompletion use case, while\n * what is supported here is more generic and allows for the connected search input use case too.\n */\n\nexport const useCollectionFocusProxy = <T>({\n  state,\n  focusProxyRef,\n  collectionRef,\n  onAction,\n}: {\n  focusProxyRef: RefObject<HTMLElement> | undefined;\n  collectionRef: RefObject<HTMLElement>;\n  state: {\n    /** A collection of items in the list. */\n    collection: Collection<Node<T>>;\n    /** A selection manager to read and update multiple selection state. */\n    selectionManager: SelectionManager;\n  };\n  onAction: ((key: Key) => void) | undefined;\n}) => {\n  // TODO: focus/blur events should probably be handled as well, to keep the\n  //  isFocused state of the collection in sync.\n  useEffect(\n    () => {\n      const proxy = focusProxyRef?.current;\n      if (proxy) {\n        const onKeyDown = (event: KeyboardEvent) => {\n          if (event.key === \"ArrowUp\" || event.key === \"ArrowDown\") {\n            event.preventDefault();\n            event.stopPropagation();\n\n            collectionRef.current?.dispatchEvent(\n              new KeyboardEvent(event.type, event)\n            );\n          } else if (\n            event.key === \"Enter\" &&\n            state.selectionManager?.focusedKey != null\n          ) {\n            event.preventDefault(); // in forms, pressing Enter on input submits the form\n            (event.currentTarget as HTMLElement)?.addEventListener(\n              \"keyup\",\n              (event: KeyboardEvent) => {\n                console.log(\n                  \"Keyup\",\n                  event.key,\n                  state.selectionManager.focusedKey,\n                  \"onAction\",\n                  onAction\n                );\n                if (\n                  event.key === \"Enter\" &&\n                  state.selectionManager.focusedKey != null\n                ) {\n                  onAction?.(state.selectionManager.focusedKey);\n                }\n              },\n              { once: true, capture: true }\n            );\n          }\n        };\n        proxy.addEventListener(\"keydown\", onKeyDown);\n        return () => {\n          proxy.removeEventListener(\"keydown\", onKeyDown);\n        };\n      }\n    } /* with no dependency here, event listeners are reattached on each render, but that's the case when unmemoized\n    event handlers are passed to elements too (e.g., when using any react-aria hook) */\n  );\n};\n","import React, {\n  CSSProperties,\n  ForwardedRef,\n  forwardRef,\n  HTMLProps,\n  Ref,\n  useRef,\n} from \"react\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport { AriaComboBoxProps, useComboBox } from \"@react-aria/combobox\";\nimport { useComboBoxState } from \"@react-stately/combobox\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { ControlledStateProps } from \"@intellij-platform/core/type-utils\";\nimport { BareButton } from \"@intellij-platform/core/Button\";\nimport { Popover } from \"@intellij-platform/core/Overlay\";\nimport { StatelessListBox } from \"./StatelessListBox\";\nimport { StyledContainer } from \"./StyledContainer\";\nimport { LabelPlacement, WithLabel } from \"../Field/Label\";\nimport { StyledDropdownArrowIcon } from \"./StyledDropdownArrowIcon\";\nimport {\n  PositionedTooltipTrigger,\n  ValidationTooltip,\n} from \"@intellij-platform/core/Tooltip\";\nimport {\n  ContextHelpProps,\n  WithInlineContextHelp,\n} from \"@intellij-platform/core/Field/ContextHelp\";\n\ntype AriaProps<T> = {\n  [K in keyof T as K extends `aria-${string}` ? K : never]: T[K];\n};\n\nexport interface ComboBoxProps<T extends object>\n  extends Pick<\n      AriaComboBoxProps<T>,\n      | \"disabledKeys\"\n      | \"defaultSelectedKey\"\n      | \"selectedKey\"\n      | \"isDisabled\"\n      | \"children\"\n      | \"items\"\n      | \"label\"\n      | \"autoFocus\"\n      | \"menuTrigger\"\n      | \"placeholder\"\n      | \"onFocus\"\n      | \"onBlur\"\n      | \"onKeyDown\"\n      | \"onKeyUp\"\n      | \"onOpenChange\"\n      | \"onFocusChange\"\n      | \"onSelectionChange\"\n    >,\n    AriaProps<AriaComboBoxProps<T>>,\n    ControlledStateProps<{\n      value: string;\n    }>,\n    ContextHelpProps {\n  labelPlacement?: LabelPlacement;\n  className?: string;\n  style?: CSSProperties;\n\n  validationState?: \"valid\" | \"error\" | \"warning\";\n\n  /**\n   * Validation message shown as a {@link ValidationTooltip} above the component.\n   * {@link ValidationTooltipProps#type} is defined based on `validationState`.\n   */\n  validationMessage?: React.ReactNode;\n\n  /**\n   * props to apply on input, excluding value that's controlled by the component\n   */\n  inputProps?: Omit<\n    HTMLProps<HTMLInputElement>,\n    \"value\" | \"defaultValue\" | \"as\"\n  >;\n  inputRef?: Ref<HTMLInputElement>;\n}\n\nconst StyledComboBoxContainer = styled(StyledContainer)`\n  padding: 0;\n  color: ${({ theme, disabled }) =>\n    disabled\n      ? theme.color(\n          \"TextField.disabledForeground\" as UnknownThemeProp<\"TextField.disabledForeground\">\n        )\n      : theme.color(\n          \"TextField.foreground\" as UnknownThemeProp<\"TextField.foreground\">\n        )};\n`;\nconst StyledComboBoxInput = styled.input`\n  flex: 1;\n  background: none;\n  border: none;\n  outline: none;\n  color: inherit;\n  padding: ${({ theme }) =>\n    theme.inset(\"ComboBox.padding\") ?? \"1px 6px 1px 6px\"};\n  height: 100%;\n`;\n\nconst StyledDropdownButton = styled.button`\n  // Resetting default styles\n  appearance: none;\n  border: none;\n  background: ${({ theme }) => theme.color(\"ComboBox.ArrowButton.background\")};\n  outline: none;\n  font: inherit;\n  padding: 0;\n\n  // Custom styles\n  border-left: 1px solid ${({ theme }) => theme.commonColors.border()};\n  height: 100%;\n  aspect-ratio: 1;\n  /**\n   * In the reference impl, the clickable area exceeds the left border by a\n   * few pixels. The following trick implements that\n   */\n  position: relative;\n  ::before {\n    content: \"\";\n    position: absolute;\n    left: -4px;\n    top: 0;\n    bottom: 0;\n    width: 4px;\n  }\n`;\n\n/**\n * [Combobox](https://plugins.jetbrains.com/docs/intellij/combo-box.html) implementation.\n * Known differences with the reference impl:\n * - selected key doesn't focus when opened the dropdown manually.\n *   Opening the dropdown by pressing ArrowDown does focus the previously selected item.\n */\nexport const ComboBox = forwardRef(\n  <T extends object>(\n    {\n      labelPlacement,\n      style,\n      className,\n      value,\n      defaultValue,\n      onValueChange,\n      validationState,\n      validationMessage,\n      contextHelp,\n      contextHelpPlacement,\n      inputProps,\n      inputRef: inputRefProp,\n      ...props\n    }: ComboBoxProps<T>,\n    forwardedRef: ForwardedRef<HTMLDivElement>\n  ): React.JSX.Element => {\n    const ref = useObjectRef(forwardedRef);\n    const buttonRef = useRef<HTMLButtonElement>(null);\n    const inputRef = useObjectRef(inputRefProp);\n    const dropdownContainerRef = useRef<HTMLDivElement>(null);\n    const popoverRef = useRef<HTMLDivElement>(null);\n    const listBoxRef = useRef<HTMLDivElement>(null);\n    const isInvalid = Boolean(validationState) && validationState !== \"valid\";\n\n    const state = useComboBoxState({\n      // defaultFilter not provided based on how ComboBoxes don't filter based on input in Intellij Platform\n      // filtering can still be implemented by controlling `value` and `items`.\n      menuTrigger: \"manual\", // overridable via props\n      allowsCustomValue: true,\n      inputValue: value,\n      defaultInputValue: defaultValue,\n      onInputChange: onValueChange,\n      isInvalid,\n      ...props,\n    });\n    const {\n      descriptionProps,\n      errorMessageProps,\n      labelProps,\n      inputProps: comboboxInputProps,\n      listBoxProps,\n      buttonProps,\n    } = useComboBox(\n      {\n        ...props,\n        allowsCustomValue: true,\n        buttonRef,\n        inputRef,\n        popoverRef,\n        listBoxRef,\n      },\n      state\n    );\n\n    // minWidth is not kept in the state, assuming it's unnecessary, considering the width is expected to be\n    // stable when the popover opens.\n    const minWidth = dropdownContainerRef.current\n      ? dropdownContainerRef.current?.offsetWidth + 2 /* for box shadow*/\n      : undefined;\n    return (\n      <>\n        <WithLabel\n          ref={ref}\n          isDisabled={props.isDisabled}\n          label={props.label}\n          labelPlacement={labelPlacement}\n          labelProps={labelProps}\n          className={className}\n          style={style}\n        >\n          {/* probably no need for HiddenSelect as autofilling doesn't seem relevant for applications using this library */}\n          <WithInlineContextHelp\n            contextHelp={contextHelp}\n            contextHelpPlacement={contextHelpPlacement}\n            descriptionProps={descriptionProps}\n          >\n            <StyledComboBoxContainer\n              ref={dropdownContainerRef}\n              validationState={validationState}\n              disabled={props.isDisabled}\n              className={state.isFocused ? \"is-focus\" : \"\"}\n            >\n              {/* FIXME: tooltip comes and goes on mouse enter/leave, which is especially weird when trying to open options */}\n              <PositionedTooltipTrigger\n                placement=\"top\"\n                showOnFocus\n                isDisabled={!validationMessage}\n                triggerRef={inputRef}\n                tooltip={\n                  <ValidationTooltip\n                    type={\n                      validationState !== \"valid\" ? validationState : undefined\n                    }\n                  >\n                    <div {...errorMessageProps}>{validationMessage}</div>\n                  </ValidationTooltip>\n                }\n                delay={0}\n              >\n                {(tooltipTriggerProps) => (\n                  <StyledComboBoxInput\n                    {...mergeProps(\n                      comboboxInputProps,\n                      inputProps,\n                      tooltipTriggerProps\n                    )}\n                  />\n                )}\n              </PositionedTooltipTrigger>\n\n              <BareButton {...buttonProps} ref={buttonRef}>\n                <StyledDropdownButton>\n                  <StyledDropdownArrowIcon\n                    disabled={props.isDisabled}\n                    size={20}\n                    icon=\"general/arrowDown.svg\"\n                  />\n                </StyledDropdownButton>\n              </BareButton>\n            </StyledComboBoxContainer>\n          </WithInlineContextHelp>\n        </WithLabel>\n        {state.isOpen && (\n          <Popover\n            ref={popoverRef}\n            state={state}\n            triggerRef={dropdownContainerRef}\n            placement=\"bottom start\"\n            containerPadding={0}\n            offset={2}\n            crossOffset={-1}\n          >\n            <StatelessListBox\n              {...listBoxProps}\n              ref={listBoxRef}\n              state={state}\n              style={{ minWidth }}\n            />\n          </Popover>\n        )}\n      </>\n    );\n  }\n);\n","import React, { CSSProperties, ForwardedRef, forwardRef } from \"react\";\nimport { AriaSelectProps, useSelect } from \"@react-aria/select\";\nimport { useObjectRef } from \"@react-aria/utils\";\nimport { useSelectState } from \"@react-stately/select\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { BareButton } from \"@intellij-platform/core/Button\";\nimport { Popover } from \"@intellij-platform/core/Overlay\";\nimport { ContextHelpProps, WithInlineContextHelp } from \"../Field/ContextHelp\";\nimport { StatelessListBox } from \"./StatelessListBox\";\nimport { StyledContainer } from \"./StyledContainer\";\nimport { LabelPlacement, WithLabel } from \"../Field/Label\";\nimport { StyledDropdownArrowIcon } from \"./StyledDropdownArrowIcon\";\n\nexport interface DropdownProps<T extends object>\n  extends Omit<AriaSelectProps<T>, \"validationState\">,\n    ContextHelpProps {\n  labelPlacement?: LabelPlacement;\n  className?: string;\n  style?: CSSProperties;\n  validationState?: \"valid\" | \"error\" | \"warning\";\n}\n\nconst StyledDropdownContainer = styled(StyledContainer)`\n  background: ${({ theme }) => theme.color(\"ComboBox.nonEditableBackground\")};\n`;\n\nconst StyledDropdownValue = styled.span`\n  flex: 1;\n  text-align: initial;\n  white-space: nowrap;\n  margin-right: 5px;\n`;\n\nexport const Dropdown = forwardRef(\n  <T extends object>(\n    {\n      labelPlacement,\n      style,\n      className,\n      validationState,\n      contextHelp,\n      contextHelpPlacement,\n      ...props\n    }: DropdownProps<T>,\n    forwardedRef: ForwardedRef<HTMLButtonElement>\n  ): React.JSX.Element => {\n    const ref = useObjectRef(forwardedRef);\n    const state = useSelectState(props);\n    const {\n      menuProps,\n      labelProps,\n      triggerProps,\n      valueProps,\n      descriptionProps,\n    } = useSelect(\n      { ...props, isInvalid: validationState && validationState !== \"valid\" },\n      state,\n      ref\n    );\n\n    // minWidth is not kept in the state, assuming it's unnecessary, considering the width is expected to be\n    // stable when the popover opens.\n    const minWidth = ref.current\n      ? ref.current?.offsetWidth + 2 /* for box shadow*/\n      : undefined;\n\n    return (\n      <WithLabel\n        label={props.label}\n        labelPlacement={labelPlacement}\n        labelProps={labelProps}\n        isDisabled={props.isDisabled}\n        className={className}\n        style={style}\n      >\n        {/* probably no need for HiddenSelect as auto-filling doesn't seem relevant for applications using this library */}\n        <WithInlineContextHelp\n          contextHelp={contextHelp}\n          contextHelpPlacement={contextHelpPlacement}\n          descriptionProps={descriptionProps}\n        >\n          <BareButton {...triggerProps} autoFocus={props.autoFocus} ref={ref}>\n            <StyledDropdownContainer\n              as=\"button\"\n              validationState={validationState}\n              className={state.isOpen ? \"is-focus\" : \"\"}\n            >\n              <StyledDropdownValue {...valueProps}>\n                {state.selectedItem?.rendered}\n              </StyledDropdownValue>\n              <StyledDropdownArrowIcon\n                disabled={props.isDisabled}\n                size={20}\n                icon=\"general/arrowDown.svg\"\n              />\n            </StyledDropdownContainer>\n          </BareButton>\n        </WithInlineContextHelp>\n        {state.isOpen && (\n          <Popover\n            state={state}\n            triggerRef={ref}\n            placement=\"bottom start\"\n            containerPadding={0}\n            offset={2}\n            crossOffset={-1}\n          >\n            <StatelessListBox\n              {...menuProps}\n              state={state}\n              style={{ minWidth }}\n            />\n          </Popover>\n        )}\n      </WithLabel>\n    );\n  }\n);\n","import React, { ForwardedRef } from \"react\";\nimport { AriaListBoxOptions, AriaListBoxProps } from \"@react-aria/listbox\";\nimport { useListState } from \"@react-stately/list\";\nimport { StatelessListBox } from \"@intellij-platform/core/Dropdown/StatelessListBox\";\nimport { CollectionFocusProxyProps } from \"@intellij-platform/core/Collections\";\n\nexport interface ListBoxProps<T extends object>\n  extends AriaListBoxProps<T>,\n    CollectionFocusProxyProps,\n    Pick<\n      AriaListBoxOptions<T>,\n      \"shouldFocusOnHover\" | \"shouldUseVirtualFocus\"\n    > {\n  minWidth?: number;\n}\n\nexport const ListBox = React.forwardRef(function ListBox<T extends object>(\n  { minWidth, ...props }: ListBoxProps<T>,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n) {\n  const state = useListState({\n    selectionBehavior: \"toggle\",\n    selectionMode: \"single\",\n    ...props,\n  });\n\n  return <StatelessListBox state={state} ref={forwardedRef} {...props} />;\n});\n","import React, { CSSProperties, ForwardedRef } from \"react\";\nimport {\n  AriaListBoxOptions,\n  useListBox,\n  useListBoxSection,\n  useOption,\n} from \"@react-aria/listbox\";\nimport { useObjectRef } from \"@react-aria/utils\";\nimport { ListState } from \"@react-stately/list\";\nimport { Node } from \"@react-types/shared\";\n\nimport {\n  CollectionFocusProxyProps,\n  ItemStateContext,\n  useCollectionFocusProxy,\n} from \"@intellij-platform/core/Collections\";\nimport { StyledListItem } from \"@intellij-platform/core/List/StyledListItem\";\nimport { StyledList } from \"@intellij-platform/core/List/StyledList\";\nimport { StyledVerticalSeparator } from \"@intellij-platform/core/StyledSeparator\";\nimport { styled } from \"@intellij-platform/core/styled\";\n\ninterface StatelessListBoxProps<T extends object>\n  extends AriaListBoxOptions<T>,\n    CollectionFocusProxyProps {\n  state: ListState<T>;\n  style?: CSSProperties;\n  className?: string;\n}\n\nexport const StatelessListBox = React.forwardRef(function StatelessListBox<\n  T extends object\n>(\n  {\n    state,\n    style,\n    className,\n    focusProxyRef,\n    ...props\n  }: StatelessListBoxProps<T>,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n) {\n  const ref = useObjectRef(forwardedRef);\n  const { listBoxProps, labelProps } = useListBox(props, state, ref);\n\n  useCollectionFocusProxy({\n    state,\n    collectionRef: ref,\n    focusProxyRef,\n    onAction: props.onAction,\n  });\n\n  return (\n    <>\n      <div {...labelProps}>{props.label}</div>\n      <StyledList\n        {...listBoxProps}\n        ref={ref}\n        style={style}\n        className={className}\n      >\n        {[...state.collection].map((item) =>\n          item.type === \"section\" ? (\n            <ListBoxSection key={item.key} section={item} state={state} />\n          ) : (\n            <Option key={item.key} item={item} state={state} />\n          )\n        )}\n      </StyledList>\n    </>\n  );\n});\nfunction Option<T extends object>({\n  item,\n  state,\n}: {\n  item: Node<T>;\n  state: ListState<T>;\n}) {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const { optionProps } = useOption({ key: item.key }, state, ref);\n\n  const isDisabled = state.disabledKeys.has(item.key);\n  const isSelected = state.selectionManager.focusedKey === item.key;\n  return (\n    <ItemStateContext.Provider\n      value={{\n        isDisabled,\n        isContainerFocused: state.selectionManager.isFocused,\n        isSelected,\n        node: item,\n      }}\n    >\n      <StyledListItem\n        {...optionProps}\n        ref={ref}\n        disabled={isDisabled}\n        selected={isSelected}\n        containerFocused\n      >\n        {item.rendered}\n      </StyledListItem>\n    </ItemStateContext.Provider>\n  );\n}\n\nconst StyledSectionHeading = styled.div`\n  font-size: 0.6875rem;\n  padding: 0 0.5rem;\n  color: ${({ theme }) => theme.commonColors.inactiveTextColor}; // not verified\n`;\n\nconst StyledSection = styled.div`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n`;\n\nfunction ListBoxSection<T extends object>({\n  section,\n  state,\n}: {\n  section: Node<T>;\n  state: ListState<T>;\n}) {\n  let { itemProps, headingProps, groupProps } = useListBoxSection({\n    heading: section.rendered,\n    \"aria-label\": section[\"aria-label\"],\n  });\n\n  // If the section is not the first, add a separator element to provide visual separation.\n  // The heading is rendered inside an <li> element, which contains\n  // a <ul> with the child items.\n  return (\n    <>\n      {section.key !== state.collection.getFirstKey() && (\n        <StyledVerticalSeparator role=\"presentation\" />\n      )}\n      <li {...itemProps}>\n        {section.rendered && (\n          <StyledSectionHeading {...headingProps}>\n            {section.rendered}\n          </StyledSectionHeading>\n        )}\n        <StyledSection {...groupProps}>\n          {[\n            ...(state.collection.getChildren?.(section.key) ??\n              section.childNodes),\n          ].map((node) => (\n            <Option key={node.key} item={node} state={state} />\n          ))}\n        </StyledSection>\n      </li>\n    </>\n  );\n}\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\n\nexport const StyledContainer = styled.div<{\n  disabled?: boolean;\n  validationState?: \"valid\" | \"error\" | \"warning\";\n}>`\n  box-sizing: border-box;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  height: 1.5rem;\n  background: ${({ theme, disabled }) =>\n    disabled\n      ? theme.color(\"ComboBox.disabledBackground\")\n      : theme.color(\"ComboBox.background\")};\n  color: ${({ theme, disabled }) =>\n    disabled\n      ? theme.color(\"ComboBox.disabledForeground\")\n      : theme.color(\n          \"ComboBox.foreground\" as UnknownThemeProp<\"ComboBox.foreground\">\n        )};\n  border: 1px solid\n    ${({ theme, disabled, validationState }) =>\n      theme.commonColors.border({\n        disabled,\n        validationState,\n      })};\n  // The focus style is applied unconditionally in the reference impl, so no use of focus-visible or js-based focus visible detection\n\n  box-shadow: 0 0 0 0.125rem\n    ${({ theme, validationState }) =>\n      theme.commonColors.focusRing({\n        validationState,\n        focused: false,\n      })};\n  &:focus,\n  &.is-focus {\n    border-color: ${({ theme, validationState }) =>\n      theme.commonColors.border({\n        focused: true,\n        validationState,\n      })};\n    outline: none;\n    box-shadow: 0 0 0 0.125rem\n      ${({ theme, validationState }) =>\n        theme.commonColors.focusRing({\n          validationState,\n          focused: true,\n        })};\n  }\n\n  border-radius: ${({ theme }) => theme.borderRadius.default}px;\n`;\n","import { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport { styled } from \"@intellij-platform/core/styled\";\n\nexport const StyledDropdownArrowIcon = styled(PlatformIcon).attrs<{\n  disabled?: boolean;\n}>({\n  \"aria-hidden\": \"true\",\n})`\n  // NOTE: \"ArrowButton.nonEditableBackground\" theme key is used in the reference impl, but it doesn't seem necessary to allow\n  // for a separate arrow background in Dropdown (aka non-editable combobox), since the arrow is not really a\n  // separate button, but a visual indicator for the whole trigger. Also there is no mention of it in designs\n  // There is also separate theme properties for color and disabled color, but inheriting it (via currentColor)\n  // makes more sense\n\n  * {\n    fill: ${({ theme, disabled }) =>\n      disabled\n        ? theme.color(\"ComboBox.ArrowButton.disabledIconColor\")\n        : theme.color(\"ComboBox.ArrowButton.iconColor\")};\n  }\n`;\n","import { css, styled } from \"@intellij-platform/core/styled\";\nimport React from \"react\";\nimport { DOMAttributes, DOMProps } from \"@react-types/shared\";\n\n/**\n * Interface to inherit in props of components that support rendering context help.\n */\nexport interface ContextHelpProps {\n  /**\n   * Context help, shown below the input.\n   * A typical use case is\n   * [to provide example values](https://jetbrains.github.io/ui/principles/context_help/#07).\n   */\n  contextHelp?: React.ReactNode; // TODO: implement\n  /**\n   * Placement of the contextHelp text with respect to the control.\n   * See more: https://plugins.jetbrains.com/docs/intellij/inline-help-text.html#placement\n   */\n  contextHelpPlacement?: \"below\" | \"after\";\n}\n\nconst StyledContextHelp = styled.div`\n  color: ${({ theme }) => theme.commonColors.contextHelpForeground};\n`;\n\nconst StyledContextHelpWrapper = styled.div<{\n  placement: ContextHelpProps[\"contextHelpPlacement\"];\n}>`\n  font-size: 0.75rem; // 12px, in new UI. It's 11px in the old UI.\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  gap: 0.25rem; /* Not checked with the reference impl */\n  ${({ placement }) =>\n    placement === \"after\" &&\n    css`\n      flex-direction: row;\n      align-items: center;\n      gap: 1rem; /* Not checked with the reference impl */\n    `}\n  flex-grow: 1; /* Needed for when the control is inside a flex layout */\n`;\n\n/**\n * Implements [inline context help](https://plugins.jetbrains.com/docs/intellij/inline-help-text.html),\n * for its children.\n */\nexport const WithInlineContextHelp = ({\n  children,\n  descriptionProps,\n  contextHelpPlacement,\n  contextHelp,\n}: {\n  children: React.ReactNode;\n  /**\n   * Props to apply on the context help wrapper, to make the connected control\n   * described by the context help.\n   */\n  descriptionProps: DOMAttributes;\n} & ContextHelpProps) => {\n  return (\n    <StyledContextHelpWrapper placement={contextHelpPlacement}>\n      {children}\n      {contextHelp && (\n        <StyledContextHelp {...descriptionProps}>\n          {contextHelp}\n        </StyledContextHelp>\n      )}\n    </StyledContextHelpWrapper>\n  );\n};\n","import { styled } from \"@intellij-platform/core/styled\";\nimport React, {\n  ForwardedRef,\n  forwardRef,\n  RefObject,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n} from \"react\";\nimport { DOMAttributes } from \"@react-types/shared\";\n\nexport type LabelPlacement = \"above\" | \"before\";\n\nconst StyledLabelContainer = styled.div<{\n  labelPlacement?: LabelPlacement;\n}>`\n  display: inline-flex;\n  flex-direction: ${({ labelPlacement }) =>\n    labelPlacement === \"above\" ? \"column\" : \"row\"};\n  align-items: start;\n  gap: 0.375rem;\n`;\n\nconst StyledLabel = styled.label<{ isDisabled?: boolean }>`\n  color: ${({ theme, isDisabled: disabled }) =>\n    theme.commonColors.label({ disabled })};\n  margin-top: 0.25rem;\n  line-height: 1.2;\n`;\n\n/**\n * Implements [label](https://jetbrains.github.io/ui/controls/input_field/#label),\n * for elements like Input, Dropdown, etc.\n */\nexport const WithLabel = forwardRef(function WithLabel(\n  {\n    label,\n    labelPlacement,\n    labelProps,\n    children,\n    isDisabled,\n    ...props\n  }: {\n    isDisabled: boolean | undefined;\n    label: React.ReactNode;\n    labelPlacement: LabelPlacement | undefined /* intentionally not optional */;\n    labelProps?: DOMAttributes;\n  } & DOMAttributes,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n) {\n  const labelRef = React.useRef<HTMLLabelElement>(null);\n  useAlignedLabels({ ref: labelRef, enabled: labelPlacement !== \"above\" });\n  return (\n    <StyledLabelContainer\n      {...props}\n      labelPlacement={labelPlacement}\n      ref={forwardedRef}\n    >\n      {label && (\n        <StyledLabel {...labelProps} isDisabled={isDisabled} ref={labelRef}>\n          {label}\n        </StyledLabel>\n      )}\n      {children}\n    </StyledLabelContainer>\n  );\n});\n\nfunction useAlignedLabels({\n  ref,\n  enabled,\n}: {\n  ref: RefObject<HTMLElement>;\n  enabled?: boolean;\n}) {\n  const { applyLabelWidth, commonWidth } = useContext(LabelAlignmentContext);\n  useLayoutEffect(() => {\n    const apply = (): boolean => {\n      const width = ref.current?.offsetWidth;\n      if (width) {\n        applyLabelWidth(width);\n        return true;\n      }\n      return false;\n    };\n    // In some situations, the width is zero in the first render.\n    if (!apply()) {\n      setTimeout(apply, 0);\n    }\n  });\n\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.style.minWidth =\n        commonWidth && enabled ? `${commonWidth}px` : \"\";\n    }\n  }, [commonWidth, enabled]);\n}\n\nconst LabelAlignmentContext = React.createContext<{\n  commonWidth: number | null;\n  applyLabelWidth: (width: number) => void;\n}>({ commonWidth: null, applyLabelWidth: () => {} });\n\n/**\n * Provides a context for\n * [labeled input controls](https://jetbrains.github.io/ui/principles/layout/#labeled-input-controls)\n * with side-positioned labels to have their input boxes aligned.\n * It doesn't render anything in DOM and only provides a context used\n * by labeled controls to set a common width on labels so that the input boxes\n * align.\n * Labeled input controls are:\n * - {@link InputField}\n * - {@link ComboBox}\n * - {@link Dropdown}\n */\nexport function LabeledControlsAlignmentProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const [commonWidth, setCommonWidth] = React.useState<null | number>(null);\n\n  const applyLabelWidth = (width: number) => {\n    setCommonWidth((currentWidth) =>\n      width > (currentWidth ?? 0)\n        ? width + 1 /* without 1px it wraps in some cases ¯\\_(ツ)_/¯ */\n        : currentWidth\n    );\n  };\n  return (\n    <LabelAlignmentContext.Provider value={{ commonWidth, applyLabelWidth }}>\n      {children}\n    </LabelAlignmentContext.Provider>\n  );\n}\n","import { styled } from \"@intellij-platform/core/styled\";\nimport React, { ForwardedRef } from \"react\";\nimport { amendName, PlatformIcon, PlatformIconProps } from \"./PlatformIcon\";\n\nexport const StyledHoverContainer = styled.span<{\n  hoverContainerSelector?: string;\n}>`\n  ${({ hoverContainerSelector }) =>\n    hoverContainerSelector\n      ? `${hoverContainerSelector} &`\n      : \"\"} .icon[data-hover] {\n    display: none;\n  }\n\n  ${({ hoverContainerSelector }) =>\n    hoverContainerSelector ? `${hoverContainerSelector}:hover &` : \"&:hover\"} {\n    .icon {\n      display: none;\n    }\n\n    .icon[data-hover] {\n      display: inline-flex;\n    }\n  }\n`;\n\nconst StyledIconHoverContainer = styled(StyledHoverContainer)`\n  display: inline-flex;\n`;\n\n/**\n * A common use case for PlatformIcons is to have a default icon and a hover icon.\n * This component captures that simple use case, by rendering both icons, and hiding one based on a hover selector.\n *\n * ### Parent hover container\n *\n * If the hover-able element is a parent of the icon, and not the icon itself (i.e., the icon should change if the\n * that parent is hovered), you can use `StyledHoverContainer` to define that parent element:\n *\n * ```tsx\n * const SomeParent = styled(StyledHoverContainer)`...`;\n * <SomeParent><AutoHoverPlatformIcon icon=\"...\" /></SomeParent>\n * ```\n *\n * If the hover-able element is a parent of the icon, with a known selector, you can pass `hoverContainerSelector`,\n * instead of using `StyledHoverContainer`:\n *\n * ```tsx\n * <AutoHoverPlatformIcon icon=\"...\" hoverContainerSelector=\"[role=menuitem]\" />\n * ```\n *\n * If the hover container is a styled component, you can have it converted to selector like this:\n *\n * ```tsx\n * <AutoHoverPlatformIcon icon=\"...\" hoverContainerSelector={`${MyStyledHoverContainer}`} />\n * ```\n *\n * In all examples above, the hover icon is shown when the parent is hovered, instead of the icon itself.\n *\n */\nexport const AutoHoverPlatformIcon = React.forwardRef(\n  function AutoHoverPlatformIcon(\n    {\n      hoverIcon,\n      hoverContainerSelector,\n      ...props\n    }: PlatformIconProps & {\n      /**\n       * The icon to be used when hovered. If not provided, it will be the \"somethingHovered\" where \"something\" is the `icon`\n       */\n      hoverIcon?: string;\n      hoverContainerSelector?: string;\n    },\n    ref: ForwardedRef<HTMLSpanElement>\n  ) {\n    const className = `icon ${props.className || \"\"}`;\n    return (\n      <StyledIconHoverContainer\n        ref={ref}\n        hoverContainerSelector={hoverContainerSelector}\n      >\n        <PlatformIcon {...props} className={className} />\n        <PlatformIcon\n          {...props}\n          className={className}\n          icon={hoverIcon ?? amendName(props.icon, \"Hover\")}\n          data-hover\n        />\n      </StyledIconHoverContainer>\n    );\n  }\n);\n","import React, { ForwardedRef } from \"react\";\nimport { useTheme } from \"styled-components\";\nimport { Theme } from \"../Theme/Theme\";\nimport { IconProps } from \"./IconProps\";\nimport { StyledIconWrapper } from \"./StyledIconWrapper\";\nimport { useSvgIcon } from \"./useSvgIcon\";\nimport { useObjectRef } from \"@react-aria/utils\";\n\ninterface IconModifiers {\n  Selected?: boolean;\n  Focused?: boolean;\n  Disabled?: boolean;\n  Editable?: boolean;\n  Pressed?: boolean;\n}\n\nexport interface ThemeIconProps extends IconProps {\n  /**\n   * Icon which will be resolved against the default icon location based on theme type\n   */\n  icon: string | { name: string; modifiers: IconModifiers };\n\n  /**\n   * A theme key that can optionally override the icon.\n   */\n  themePath?: string;\n}\n\nconst ICONS_DIR_PREFIX = \"com/intellij/ide/ui/laf/icons/\";\n\n// Similar to LafIconLookup\nfunction findIconPath(\n  theme: Theme,\n  name: string,\n  modifiers: IconModifiers = {}\n) {\n  const basePath = `${ICONS_DIR_PREFIX}${\n    theme.isUnderDarcula() ? \"darcula/\" : \"intellij/\"\n  }`;\n  const suffix = (\n    [\"Editable\", \"Selected\", \"Pressed\", \"Focused\", \"Disabled\"] as Array<\n      keyof typeof modifiers\n    >\n  )\n    .filter((modifier) =>\n      // Focused or Pressed can't coexist with Disabled\n      modifiers.Disabled ? ![\"Focused\", \"Pressed\"].includes(modifier) : true\n    )\n    .reduce(\n      (soFar, modifier) => soFar + (modifiers[modifier] ? modifier : \"\"),\n      \"\"\n    );\n  return `${basePath}${name}${suffix}.svg`;\n}\n\nfunction useIconPath(\n  iconDescriptor: string | { name: string; modifiers?: IconModifiers },\n  themePath?: string\n) {\n  const theme = useTheme() as Theme; // TODO: investigate why useTheme is typed like this\n  const resolvedValue = themePath && theme.value(themePath);\n  if (resolvedValue) {\n    return resolvedValue;\n  }\n  const { modifiers = {}, name } =\n    typeof iconDescriptor === \"string\"\n      ? { name: iconDescriptor }\n      : iconDescriptor;\n  return findIconPath(theme, name, modifiers);\n}\n\nexport const LafIcon = React.forwardRef(\n  (\n    { themePath, icon, size, ...props }: ThemeIconProps,\n    forwardedRef: ForwardedRef<HTMLElement>\n  ) => {\n    const resolvedIconPath = useIconPath(icon, themePath);\n\n    const ref = useObjectRef(forwardedRef);\n    useSvgIcon(\n      { path: `platform/platform-impl/resources/${resolvedIconPath}` },\n      ref\n    );\n    return <StyledIconWrapper {...props} ref={ref} size={size} />;\n  }\n);\n","import React, { ForwardedRef } from \"react\";\nimport { useTheme } from \"@intellij-platform/core/styled\";\nimport { IconProps } from \"./IconProps\";\nimport { StyledIconWrapper } from \"./StyledIconWrapper\";\nimport { useSvgIcon } from \"./useSvgIcon\";\nimport { useObjectRef } from \"@react-aria/utils\";\n\nexport interface PlatformIconProps extends IconProps {\n  /**\n   * Icon path in intellij platform repo.\n   * If starts with \"/\", the path will be from the repo root. Otherwise, it's relative to \"platform/icons/src\".\n   * \".svg\" extension is optional.\n   */\n  icon: string;\n  /**\n   * Similar to icon, but for dark themes.\n   */\n  darkIcon?: string;\n}\n\nexport const amendName = (iconNameOrPath: string, amendment: string) => {\n  const [name, ext] = iconNameOrPath.split(\".\");\n  return `${name}${amendment}${ext ? `.${ext}` : \"\"}`;\n};\n\nexport const getDarkPath = (path: string, darkPath?: string) => {\n  const [name, ext] = path.split(\".\");\n  return darkPath || `${name}_dark${ext ? `.${ext}` : \"\"}`;\n};\n\nconst getPlatformIconPath = (relativePath: string) =>\n  relativePath.startsWith(\"/\")\n    ? relativePath.slice(1)\n    : `platform/icons/src/${relativePath}`;\n\n/**\n * Renders an icon from the predefined list of platform icons.\n * icon name must follow the directory structure in platform icons.\n * @example <PlatformIcon icon=\"general/hideToolWindow\" />\n * @example <PlatformIcon icon=\"toolbar/pin\" />\n * @example <PlatformIcon icon=\"toolbar/pin.svg\" />\n * @example <PlatformIcon icon=\"/platform/dvcs-impl/resources/icons/currentBranchLabel.svg\" />\n */\nexport const PlatformIcon = React.forwardRef(\n  (\n    { icon, darkIcon, ...props }: PlatformIconProps,\n    forwardedRef: ForwardedRef<HTMLElement>\n  ) => {\n    const ref = useObjectRef(forwardedRef);\n    const theme = useTheme();\n    const iconName = theme.dark ? getDarkPath(icon, darkIcon) : icon;\n    useSvgIcon(\n      {\n        path: getPlatformIconPath(iconName),\n        fallbackPath: getPlatformIconPath(icon),\n      },\n      ref\n    );\n\n    return <StyledIconWrapper {...props} ref={ref} />;\n  }\n);\n","import { styled } from \"../styled\";\nimport { IconSize } from \"@intellij-platform/core/Icon/IconProps\";\n\nconst DEFAULT_ICON_SIZE: IconSize = 16;\n\nexport const StyledIconWrapper = styled.span<{\n  size?: IconSize;\n  useCurrentColor?: boolean;\n  role?: string;\n}>`\n  box-sizing: border-box;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 0;\n  width: ${({ size = DEFAULT_ICON_SIZE }) => `${size}px`};\n  height: ${({ size = DEFAULT_ICON_SIZE }) => `${size}px`};\n  position: relative; // to allow absolute positioned indicators and overlays on icon\n  cursor: ${({ role }) => (role === \"button\" ? \"pointer\" : undefined)};\n`;\n","import {\n  RefObject,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useState,\n} from \"react\";\nimport { useTheme } from \"@intellij-platform/core/styled\";\nimport { ItemStateContext } from \"@intellij-platform/core/Collections\";\n\nexport function useSvgIcon(\n  { path, fallbackPath }: { path: string; fallbackPath?: string },\n  /**\n   * ref to the icon wrapper element in which the svg should be injected.\n   * This hook used to return svg string, and that svg was set as dangerouslySetInnerHTML. But now it injects the svg.\n   * by direct DOM manipulation. That's to eliminate the need for using dangerouslySetInnerHTML, so that we can allow\n   * arbitrary children (like LiveIndicator) as overlays on top of icons.\n   */\n  ref: RefObject<HTMLElement>\n) {\n  const theme = useTheme();\n  const itemState = useContext(ItemStateContext);\n  const selected = itemState?.isSelected || itemState?.isContainerFocused;\n  const [svg, setSvg] = useState<null | string>(null);\n\n  useLayoutEffect(() => {\n    const element = ref.current;\n    if (element) {\n      element.ariaBusy = svg === null ? \"true\" : null;\n      element.querySelector(\"svg\")?.remove();\n      if (svg) {\n        const svgElement = document.createElement(\"svg\");\n        element.appendChild(svgElement);\n        svgElement.outerHTML = makeIdsUnique(svg); // UNSAFE! Would require sanitization, or icon sources must be trusted.\n      }\n    } else {\n      console.log(`unexpected state - ${path}`);\n    }\n  }, [svg]);\n\n  useEffect(() => {\n    let canceled = false;\n    const fetchIcon = async () => {\n      if (!path) {\n        console.error(\"icon path is empty\");\n        return;\n      }\n      setSvg(null);\n      const svg = await theme\n        .getSvgIcon(path, selected)\n        .catch((e) => {\n          if (fallbackPath) {\n            return theme.getSvgIcon(fallbackPath, selected);\n          }\n          throw e;\n        })\n        .catch((e) => {\n          console.error(`Could not resolve icon \"${path}\"`, e);\n          return \"\";\n        });\n      if (!canceled) {\n        setSvg(svg);\n      }\n    };\n    fetchIcon().catch(console.error);\n    return () => {\n      canceled = true;\n    };\n  }, [path, selected]);\n}\n\n/**\n * If multiple instance of the same icon is rendered at the same time, and the SVG includes\n * url(#...) references to locally defined ids, in some cases the icon is not rendered properly.\n * because of ids colliding. We make sure the ids are unique in each rendered icon.\n */\nfunction makeIdsUnique(svg: string): string {\n  const randomPostfix = (Math.random() * 1000).toFixed(0);\n  const idMatches = svg.matchAll(/id=\"(.*?)\"/g);\n  return [...idMatches].reduce((modifiedSvg, [_, id]) => {\n    const newId = `${id}-${randomPostfix}`;\n    return replaceAll(\n      `id=\"${id}\"`,\n      `id=\"${newId}\"`,\n      replaceAll(`url(#${id})`, `url(#${newId})`, modifiedSvg)\n    );\n  }, svg);\n}\n\nfunction replaceAll(theOld: string, theNew: string, str: string): string {\n  const replaced = str.replace(theOld, theNew);\n  const replacedAgain = replaced.replace(theOld, theNew);\n  if (replaced === replacedAgain) {\n    return replaced;\n  }\n  return replaceAll(theOld, theNew, replacedAgain);\n}\n","import { PressProps, usePress } from \"@react-aria/interactions\";\nimport React, { ForwardedRef, HTMLProps } from \"react\";\nimport { styled } from \"../styled\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport { useFocusable } from \"@react-aria/focus\";\n\nexport interface IconButtonProps\n  extends PressProps,\n    // Maybe we should allow any arbitrary HTMLProps<HTMLButtonElement> props, instead of whitelisting?\n    Pick<\n      HTMLProps<HTMLButtonElement>,\n      \"onFocus\" | \"onBlur\" | \"style\" | \"className\"\n    > {\n  children?: React.ReactNode;\n  /**\n   * The minimum width/height of the button.\n   */\n  minSize?: number;\n  /**\n   * Whether the button should be focusable by pressing tab. The default is true for icon buttons (aka. action buttons),\n   * which means they are not included in the tab order.\n   */\n  excludeFromTabOrder?: boolean;\n}\n\nexport const DEFAULT_MINIMUM_BUTTON_SIZE = 22;\nexport const NAVBAR_MINIMUM_BUTTON_SIZE = 20;\n\nexport const StyledIconButton = styled.button<{ minSize: number }>`\n  position: relative; // to allow absolutely positioned overlays like an dropdown icon at the bottom right corner\n  background: none;\n  color: inherit;\n  border: 1px solid transparent;\n  border-radius: 3px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  min-height: ${({ minSize }) => `${minSize}px`};\n  min-width: ${({ minSize }) => `${minSize}px`};\n  padding: 0;\n  margin: 0;\n  &:disabled {\n    opacity: 0.25; // not quite accurate implementation. There might be better ways to style disabled state.\n  }\n  &:hover:not(:disabled) {\n    background: ${({ theme }) =>\n      theme.color(\"ActionButton.hoverBackground\", \"#DFDFDF\")};\n    border-color: ${({ theme }) =>\n      theme.color(\"ActionButton.hoverBorderColor\", \"#DFDFDF\")};\n  }\n  &:focus-visible:not(:disabled) {\n    outline: none;\n    background: ${({ theme }) =>\n      theme.color(\"ActionButton.pressedBackground\", \"#CFCFCF\")};\n    border-color: ${({ theme }) =>\n      theme.color(\n        \"ActionButton.focusedBorderColor\",\n        theme.dark ? \"#5eacd0\" : \"#62b8de\"\n      )};\n  }\n  &:active:not(:disabled),\n  &.active:not(:disabled) {\n    background: ${({ theme }) =>\n      theme.color(\"ActionButton.pressedBackground\", \"#CFCFCF\")};\n    border-color: ${({ theme }) =>\n      theme.color(\"ActionButton.pressedBorderColor\", \"#CFCFCF\")};\n  }\n`;\n\n/**\n * Icon button, aka Action Button, in the reference implementation.\n * @see https://jetbrains.github.io/ui/controls/icon_button/\n */\nexport const IconButton = React.forwardRef(function IconButton(\n  {\n    minSize = DEFAULT_MINIMUM_BUTTON_SIZE,\n    preventFocusOnPress = true,\n    excludeFromTabOrder = true,\n    isPressed: isPressedInput,\n    isDisabled,\n    onPress,\n    onPressChange,\n    onPressEnd,\n    onPressStart,\n    onPressUp,\n    shouldCancelOnPointerExit,\n    ...otherProps\n  }: IconButtonProps,\n  forwardedRef: ForwardedRef<HTMLButtonElement>\n) {\n  // FIXME: use useButton\n\n  const ref = useObjectRef(forwardedRef);\n  const { focusableProps } = useFocusable({ isDisabled }, ref);\n  const { pressProps, isPressed } = usePress({\n    ref,\n    isPressed: isPressedInput,\n    isDisabled,\n    onPress,\n    onPressChange,\n    onPressEnd,\n    onPressStart,\n    onPressUp,\n    shouldCancelOnPointerExit,\n    preventFocusOnPress,\n  });\n\n  return (\n    <StyledIconButton\n      className={isPressed ? \"active\" : \"\"}\n      disabled={isDisabled}\n      {...mergeProps(pressProps, otherProps, focusableProps)}\n      minSize={minSize}\n      tabIndex={excludeFromTabOrder && !isDisabled ? -1 : undefined}\n      ref={ref}\n    />\n  );\n});\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  IconButton,\n  IconButtonProps,\n} from \"@intellij-platform/core/IconButton\";\nimport { MenuTrigger, MenuTriggerProps } from \"@intellij-platform/core/Menu\";\nimport { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport { mergeProps } from \"@react-aria/utils\";\n\nconst ArrowIcon = styled(PlatformIcon)`\n  position: absolute;\n  right: 1px;\n  bottom: 1px;\n`;\n\ntype IconButtonWithMenuProps = IconButtonProps &\n  Pick<MenuTriggerProps, \"renderMenu\"> & {\n    /**\n     * whether the default arrow should be removed or not. false by default.\n     */\n    noArrow?: boolean;\n  };\n/**\n * Renders an IconButton which opens a menu. by default a down arrow icon is shown as an overlay on the rendered\n * icon, but it can be disabled by passing `noArrow`. It also restores the focus to the previously focused element,\n * when the menu is closed.\n * @param renderMenu: render prop for rendering the menu\n * @param children: the content of the icon button\n * @param noArrow: whether the default arrow should be removed or not. false by default.\n * @param buttonProps: the rest of the props that will be passed down to IconButton\n *\n * TODO: Add story and write test for focus restoration, noArrow, and basic functionality.\n */\nexport const IconButtonWithMenu = ({\n  renderMenu,\n  children,\n  noArrow = false,\n  ...buttonProps\n}: IconButtonWithMenuProps) => {\n  const previouslyFocusedElementRef = useRef<HTMLElement>();\n  return (\n    <MenuTrigger\n      renderMenu={renderMenu}\n      onOpenChange={(open) => {\n        if (!open && previouslyFocusedElementRef.current) {\n          previouslyFocusedElementRef.current.focus();\n        }\n      }}\n    >\n      {(props, ref) => (\n        <IconButton\n          {...mergeProps(buttonProps, props, {\n            onFocus: (e: FocusEvent) => {\n              if (e.relatedTarget && e.relatedTarget instanceof HTMLElement) {\n                previouslyFocusedElementRef.current = e.relatedTarget;\n              }\n            },\n          })}\n          ref={ref}\n        >\n          {children}\n          {!noArrow && <ArrowIcon icon=\"general/dropdown.svg\" />}\n        </IconButton>\n      )}\n    </MenuTrigger>\n  );\n};\n","import React, { ComponentProps, HTMLAttributes, HTMLProps } from \"react\";\nimport { useTheme } from \"styled-components\";\nimport { Theme } from \"./Theme/Theme\";\n\ninterface Props extends React.ImgHTMLAttributes<HTMLImageElement> {\n  /**\n   * src for when a dark theme is active. if `darkSrc` doesn't have a non-empty string value, src will be used both\n   * for dark and light themes.\n   */\n  darkSrc?: string;\n}\n/**\n * Same as default `img`, but theme aware. Meaning that you can specify different sources for normal and dark mode.\n */\nexport const Img: React.FC<Props> = ({ darkSrc, ...props }) => {\n  const theme = useTheme() as Theme;\n  if (theme.dark) {\n    return <img {...props} src={darkSrc || props.src} />;\n  }\n  return <img {...props} />;\n};\n","import React, {\n  ForwardedRef,\n  InputHTMLAttributes,\n  useEffect,\n  useState,\n} from \"react\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport { FocusableOptions, useFocusable } from \"@react-aria/focus\";\nimport { useFocusWithin } from \"@react-aria/interactions\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { styled, css } from \"@intellij-platform/core/styled\";\n\nconst StyledInputBox = styled.div<{\n  disabled?: boolean;\n  focused?: boolean;\n  validationState: InputProps[\"validationState\"];\n  appearance: InputProps[\"appearance\"];\n}>`\n  box-sizing: border-box;\n  display: inline-flex;\n  min-width: 4rem; // https://jetbrains.github.io/ui/controls/input_field/#28\n  background: ${({ theme, disabled }) =>\n    disabled\n      ? theme.color(\"TextField.disabledBackground\")\n      : theme.color(\"TextField.background\")};\n  border: 1px solid\n    ${({ theme, focused, disabled, validationState }) =>\n      theme.commonColors.border({\n        focused,\n        disabled,\n        validationState,\n      })};\n  box-shadow: 0 0 0 0.125rem\n    ${({ theme, focused = false, validationState, disabled }) =>\n      disabled\n        ? \"transparent\"\n        : theme.commonColors.focusRing({\n            validationState,\n            focused: focused,\n          })};\n  border-radius: 1px;\n  cursor: text; // the whole box moves focus to the input\n  overflow: hidden;\n  ${({ appearance, validationState, disabled }) =>\n    appearance === \"embedded\" &&\n    css`\n      border-color: ${validationState !== \"error\" && \"transparent\"};\n      box-shadow: ${validationState !== \"error\" && \"none\"};\n      background: ${!disabled && \"transparent\"};\n    `};\n`;\n\nconst StyledInput = styled.input<{ disabled?: boolean }>`\n  all: unset;\n  padding: 0.1875rem 0.375rem;\n  flex: 1; // fill in the available space within the input box\n  min-width: 0;\n  line-height: 1rem;\n  color: ${({ theme }) =>\n    theme.color(\n      \"TextField.foreground\" as UnknownThemeProp<\"TextField.foreground\">\n    )};\n  color: ${({ theme, disabled }) =>\n    disabled &&\n    theme.color(\n      \"TextField.inactiveForeground\" as UnknownThemeProp<\"TextField.inactiveForeground\">\n    )};\n\n  caret-color: ${({ theme }) =>\n    theme.color(\n      \"TextField.caretForeground\" as UnknownThemeProp<\"TextField.caretForeground\">\n    )};\n  &::selection {\n    background: ${({ theme }) =>\n      theme.color(\n        \"*.selectionBackground\"\n      )}; // Not checked with the reference impl\n    color: ${({ theme }) =>\n      theme.color(\n        \"*.selectionForeground\"\n      )}; // Not checked with the reference impl\n  }\n  &::placeholder {\n    color: ${({ theme }) => theme.commonColors.inactiveTextColor};\n  }\n`;\n\nconst StyledAddons = styled.div`\n  display: inline-flex;\n  align-items: center;\n  gap: 0.25rem; /* TODO: check */\n  padding: 1px 0;\n`;\nconst StyledRightAddons = styled(StyledAddons)`\n  margin-right: 0.125rem; /* TODO: check */\n`;\n\nconst StyledLeftAddons = styled(StyledAddons)`\n  margin-left: 0.375rem; /* TODO: check */\n`;\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  validationState?: \"valid\" | \"error\" | \"warning\";\n  /**\n   * Whether to auto select the value initially\n   */\n  autoSelect?: boolean;\n\n  /**\n   * Rendered inside the input box and after the input element.\n   * Used to render [Built-in buttons](https://jetbrains.github.io/ui/controls/built_in_button/).\n   */\n  addonAfter?: React.ReactNode;\n  /**\n   * Rendered inside the input box and before the input element.\n   */\n  addonBefore?: React.ReactNode;\n\n  /**\n   * Ref to the underlying input element\n   */\n  inputRef?: React.Ref<HTMLInputElement>;\n\n  /**\n   * Appearance of the input.\n   * - \"ghost\": Without the border and shadow in valid state.\n   * - \"boxed\" With the border and shadow.\n   * @default \"box\"\n   */\n  appearance?: \"embedded\" | \"box\";\n}\n\n/**\n * Bare input, themed, and with a few extra features:\n * - Support for \"error\" and \"warning\" state ({@param validationState}\n * - Support for autoSelect.\n * - Disables spell check by default. It can be overwritten.\n * Use {@link InputField} for more features like an associated label, error message and context help.\n */\nexport const Input = React.forwardRef(function Input(\n  {\n    validationState,\n    autoSelect,\n    addonBefore,\n    addonAfter,\n    style,\n    className,\n    inputRef: inputRefProp,\n    onFocus,\n    onBlur,\n    autoFocus,\n    appearance,\n    ...props\n  }: InputProps,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n) {\n  const ref = useObjectRef(forwardedRef);\n  const inputRef = useObjectRef(inputRefProp);\n  const { focusableProps } = useFocusable(\n    {\n      isDisabled: props.disabled,\n      autoFocus,\n      onFocus,\n      onBlur,\n    } as FocusableOptions,\n    inputRef\n  );\n  const [isFocused, setIsFocused] = useState(false);\n  const { focusWithinProps } = useFocusWithin({\n    onFocusWithinChange: setIsFocused,\n  });\n\n  useEffect(() => {\n    if (autoSelect) {\n      inputRef.current?.select();\n    }\n  }, [autoSelect]);\n\n  return (\n    <StyledInputBox\n      ref={ref}\n      spellCheck={false}\n      appearance={appearance}\n      {...mergeProps(focusWithinProps, {\n        className,\n        style,\n        onMouseDown: (event: MouseEvent) => {\n          if (event.target !== inputRef.current) {\n            event.preventDefault();\n            inputRef.current?.focus();\n          }\n        },\n      })}\n      focused={isFocused}\n      validationState={validationState}\n      disabled={props.disabled}\n    >\n      {addonBefore && <StyledLeftAddons>{addonBefore}</StyledLeftAddons>}\n      <StyledInput ref={inputRef} {...mergeProps(props, focusableProps)} />\n      {addonAfter && <StyledRightAddons>{addonAfter}</StyledRightAddons>}\n    </StyledInputBox>\n  );\n});\n","import React, {\n  ChangeEvent,\n  CSSProperties,\n  ForwardedRef,\n  HTMLProps,\n} from \"react\";\nimport { AriaFieldProps, useField } from \"@react-aria/label\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport { FocusableProps } from \"@react-types/shared\";\nimport {\n  PositionedTooltipTrigger,\n  ValidationTooltip,\n} from \"@intellij-platform/core/Tooltip\";\nimport { Input, InputProps } from \"@intellij-platform/core/InputField/Input\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport {\n  ContextHelpProps,\n  WithInlineContextHelp,\n} from \"@intellij-platform/core/Field/ContextHelp\";\nimport { LabelPlacement, WithLabel } from \"@intellij-platform/core/Field/Label\";\n\nexport interface InputFieldProps\n  extends Omit<\n      AriaFieldProps,\n      \"labelElementType\" | \"validationState\" | \"errorMessage\" | \"isInvalid\"\n    >,\n    FocusableProps,\n    Pick<\n      InputProps,\n      \"addonBefore\" | \"addonAfter\" | \"inputRef\" | \"validationState\"\n    >,\n    ContextHelpProps {\n  /**\n   * className applied on the field's wrapper div.\n   */\n  className?: string;\n  /**\n   * style applied on the field's wrapper div.\n   */\n  style?: CSSProperties;\n  /**\n   * Label to be associated with the input.\n   */\n  label?: React.ReactNode;\n  /**\n   * Placement of the label with respect to the input box.\n   */\n  labelPlacement?: LabelPlacement;\n\n  /**\n   * Whether the input is disabled. Use this prop\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Convenient prop to be used instead of inputProps.placeholder\n   **/\n  placeholder?: string;\n  /**\n   * Convenient prop to be used instead of inputProps.value\n   **/\n  value?: HTMLProps<HTMLInputElement>[\"value\"];\n  /**\n   * Convenient prop to be used instead of inputProps.defaultValue\n   **/\n  defaultValue?: HTMLProps<HTMLInputElement>[\"defaultValue\"];\n  /**\n   * Convenient prop to be used instead of inputProps.onChange. It also calls the passed callback with the\n   * change value instead of input.\n   **/\n  onChange?: (newValue: string) => void;\n  /**\n   * Props to be passed to the underlying input element.\n   **/\n  inputProps?: Omit<\n    HTMLProps<HTMLInputElement>,\n    \"as\" | \"ref\" | \"disabled\" //isDisabled should be used\n  >;\n  /**\n   * Whether to auto select the value initially\n   */\n  autoSelect?: boolean;\n\n  /**\n   * Validation message shown as a {@link ValidationTooltip} above the field.\n   * {@link ValidationTooltipProps#type} is defined based on `validationState`.\n   */\n  validationMessage?: React.ReactNode;\n}\n\nconst StyledInput = styled(Input)`\n  width: 100%;\n`;\n\nconst StyledWithLabel = styled(WithLabel)`\n  // by default, WithLabel doesn't stretch the labeled content to fill the width of the container. The container\n  // width might be set explicitly, based on parent, or based on the label width.\n  // This behavior seemed more reasonable as default, but for input field it makes more sense to have the text input\n  // fill in the width of the field. For dropdown it seemed more reasonable for the dropdown to not stretch just\n  // because the label is long. But it might be something to rethink or maybe even allow to be controlled via an option?\n  align-items: normal;\n`;\n\n/**\n * An input box with an associated label, error message, and context help.\n */\nexport const InputField = React.forwardRef(function InputField(\n  {\n    validationState,\n    validationMessage,\n    className,\n    style,\n    labelPlacement = \"before\",\n    contextHelp,\n    contextHelpPlacement,\n    inputProps = {},\n    addonBefore,\n    addonAfter,\n    inputRef,\n    ...props\n  }: InputFieldProps,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n): JSX.Element {\n  const ref = useObjectRef(forwardedRef);\n  const { fieldProps, errorMessageProps, labelProps, descriptionProps } =\n    useField({\n      ...props,\n      errorMessage: validationMessage,\n      validationState:\n        validationState === \"error\" || validationState === \"warning\"\n          ? \"invalid\"\n          : \"valid\",\n    });\n\n  return (\n    <StyledWithLabel\n      ref={ref}\n      label={props.label}\n      labelPlacement={labelPlacement}\n      isDisabled={props.isDisabled}\n      labelProps={labelProps}\n      className={className}\n      style={style}\n    >\n      <WithInlineContextHelp\n        contextHelp={contextHelp}\n        contextHelpPlacement={contextHelpPlacement}\n        descriptionProps={descriptionProps}\n      >\n        <PositionedTooltipTrigger\n          placement=\"top start\"\n          crossOffset={36}\n          showOnFocus\n          isDisabled={!validationMessage}\n          tooltip={\n            <ValidationTooltip\n              type={validationState !== \"valid\" ? validationState : undefined}\n            >\n              <div {...errorMessageProps}>{validationMessage}</div>\n            </ValidationTooltip>\n          }\n          delay={0}\n        >\n          <StyledInput\n            inputRef={inputRef}\n            placeholder={props.placeholder}\n            disabled={props.isDisabled}\n            validationState={validationState}\n            autoSelect={props.autoSelect}\n            autoFocus={props.autoFocus}\n            addonAfter={addonAfter}\n            addonBefore={addonBefore}\n            {...mergeProps(fieldProps, inputProps, {\n              value: props.value,\n              defaultValue: props.defaultValue,\n              onChange: (e: ChangeEvent<HTMLInputElement>) =>\n                props.onChange?.(e.target.value),\n            })}\n          />\n        </PositionedTooltipTrigger>\n      </WithInlineContextHelp>\n    </StyledWithLabel>\n  );\n});\n","import { Theme, UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { styled } from \"@intellij-platform/core/styled\";\n\nconst getDefaultLinkColor = ({ theme }: { theme: Theme }) =>\n  theme.currentForegroundAware(theme.commonColors.linkForegroundEnabled);\n\n//   FIXME(styled-components): add, check and generalized after upgrading styled-components\n//   @container style(--jui-foreground) {\n//     text-decoration: underline;\n//   }\nexport const StyledLink = styled.a`\n  cursor: pointer;\n  text-decoration: none;\n  outline: none;\n  // &:focus-visible didn't work as expected, so FocusRing is used\n  &.focus-visible {\n    outline: 1px solid\n      ${({ theme }) =>\n        theme.color(\n          \"Link.focusedBorderColor\" as UnknownThemeProp<\"Link.focusedBorderColor\">,\n          theme.commonColors.focusBorderColor\n        )};\n    border-radius: 2px; // Registry.intValue(\"ide.link.button.focus.round.arc\", 4)\n  }\n  color: ${getDefaultLinkColor};\n\n  &:hover,\n  &.hover /* for testing purposes*/ {\n    text-decoration: underline;\n    color: ${({ theme }) =>\n      theme.currentForegroundAware(\n        theme.color(\n          \"Link.hoverForeground\",\n          theme.color(\n            \"link.hover.foreground\" as UnknownThemeProp<\"link.hover.foreground\">,\n            \"\" /*FIXME: check*/\n          )\n        )\n      )};\n  }\n  &:active,\n  &.active {\n    color: ${({ theme }) =>\n      theme.currentForegroundAware(\n        theme.color(\n          \"Link.pressedForeground\",\n          theme.color(\n            \"link.pressed.foreground\" as UnknownThemeProp<\"link.pressed.foreground\">,\n            !theme.dark ? \"#F00000\" : \"#BA6F25\"\n          )\n        )\n      )};\n  }\n  &:disabled,\n  &.disabled {\n    cursor: default;\n    text-decoration: none;\n    color: ${({ theme }) =>\n      theme.color(\n        \"Link.disabledForeground\" as UnknownThemeProp<\"Link.disabledForeground\">,\n        theme.color(\n          \"Label.disabledForeground\",\n          theme.color(\"Label.disabledText\", \"#999\")\n        )\n      )};\n  }\n  // We may need to refine this to allow passing visited as a prop for links that don't have href, and not apply the\n  // styles in that case, since it seems no href is considered visited by default. Although, in all main themes\n  // Link.visitedForeground is set to the default link color.\n  &:visited,\n  &.visited {\n    color: ${({ theme }) =>\n      theme.currentForegroundAware(\n        theme.color(\n          \"Link.visitedForeground\",\n          theme.color(\n            \"link.visited.foreground\" as UnknownThemeProp<\"link.visited.foreground\">,\n            !theme.dark ? \"#800080\" : \"#9776A9\"\n          )\n        )\n      )};\n  }\n`;\n","import React, { ForwardedRef } from \"react\";\nimport { AriaLinkProps } from \"@react-types/link\";\nimport { FocusRing, useFocusable } from \"@react-aria/focus\";\nimport { StyledLink } from \"@intellij-platform/core/Link/StyledLink\";\nimport { usePress } from \"@react-aria/interactions\";\nimport { filterDOMProps, mergeProps, useObjectRef } from \"@react-aria/utils\";\n\nexport type LinkProps = AriaLinkProps & {\n  isDisabled?: boolean;\n  className?: string;\n  style?: React.CSSProperties;\n  children: React.ReactNode;\n  preventFocusOnPress?: boolean; // Should this be become true by default?\n  excludeFromTabOrder?: boolean;\n};\n\n/**\n * A focusable span in style of [Link](https://jetbrains.github.io/ui/controls/link/) and with accessibility role of link.\n *\n * TODO and known issues:\n * - in the reference impl, Space presses the link, Enter doesn't. It's vice versa here, because of how usePress is implemented.\n * - Support for External links\n * - Support for Anchor elements?\n *\n * Unknowns:\n * - What are ActionLink and DefaultLinkButtonUI?\n * - What is HyperLinkLabel compared to LabelLink (which was looked into in implementation of this component)?\n */\nexport const Link = React.forwardRef(\n  (\n    props: LinkProps,\n    forwardedRef: ForwardedRef<HTMLAnchorElement>\n  ): React.ReactElement => {\n    const ref = useObjectRef(forwardedRef);\n\n    const { focusableProps } = useFocusable(props, ref);\n    const { pressProps, isPressed } = usePress({ ...props, ref });\n    const domProps = filterDOMProps(props, { labelable: true });\n    const interactionHandlers = mergeProps(focusableProps, pressProps);\n\n    return (\n      <FocusRing focusRingClass=\"focus-visible\">\n        <StyledLink\n          {...mergeProps(interactionHandlers, domProps)}\n          as=\"span\"\n          role=\"link\"\n          ref={ref}\n          // maybe use clsx\n          className={`${props.isDisabled ? \"disabled\" : \"\"} ${\n            isPressed ? \"active\" : \"\"\n          } ${props.className || \"\"}`}\n          aria-disabled={props.isDisabled || undefined}\n          tabIndex={\n            !props.isDisabled ? (props.excludeFromTabOrder ? -1 : 0) : undefined\n          }\n        >\n          {props.children}\n        </StyledLink>\n      </FocusRing>\n    );\n  }\n);\n","import { AriaListBoxProps } from \"@react-types/listbox\";\nimport { AsyncLoadable, Node } from \"@react-types/shared\";\nimport React, { ForwardedRef, Key } from \"react\";\nimport { useList } from \"./useList\";\nimport { ListItem } from \"./ListItem\";\nimport { StyledList } from \"./StyledList\";\nimport { useListState } from \"./useListState\";\nimport { filterDOMProps, useObjectRef } from \"@react-aria/utils\";\n\nimport { CollectionRefProps } from \"@intellij-platform/core/Collections/useCollectionRef\";\nimport { Virtualizer } from \"@react-aria/virtualizer\";\nimport { useListVirtualizer } from \"@intellij-platform/core/List/useListVirtualizer\";\nimport { ListContext } from \"@intellij-platform/core/List/ListContext\";\nimport { CollectionFocusProxyProps } from \"@intellij-platform/core/Collections\";\n\nexport type ListProps<T extends object> = Omit<\n  Omit<AriaListBoxProps<T>, \"disallowEmptySelection\">,\n  keyof AsyncLoadable\n> &\n  CollectionRefProps &\n  CollectionFocusProxyProps & {\n    /**\n     * fills the available horizontal or vertical space, when rendered in a flex container.\n     */\n    fillAvailableSpace?: boolean;\n    /**\n     * When true, shows the list in focused style, even when it's not focused. A common use case is when the list\n     * is virtually focused. i.e. the focus is physically on some other element (like a search input) which handles\n     * keyboard events as if the list was focused.\n     * Another (maybe questionable) use case is master detail views, where the master view is shown as focused, even\n     * when the details view has physical focus.\n     */\n    showAsFocused?: boolean;\n    allowEmptySelection?: boolean;\n    /**\n     * Called when the action for the item should be triggered, which can be by double click or pressing Enter.\n     * Enter not implemented yet :D\n     */\n    onAction?: (key: Key) => void;\n\n    /**\n     * Useful when list items have a custom height, to hint layout calculation logic about the item height which\n     * increases rendering efficiency and also prevents flash of items with wrong height.\n     */\n    estimatedItemHeight?: number;\n\n    className?: string;\n  };\n\n/**\n * List view\n */\nexport const List = React.forwardRef(function List<T extends object>(\n  {\n    allowEmptySelection = false,\n    fillAvailableSpace = false,\n    estimatedItemHeight,\n    className,\n    ...inputProps\n  }: ListProps<T>,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n) {\n  const props: AriaListBoxProps<T> & CollectionRefProps = {\n    ...inputProps,\n    disallowEmptySelection: !allowEmptySelection,\n  };\n  const ref = useObjectRef(forwardedRef);\n  const state = useListState(props);\n  const { listProps, listContext } = useList(\n    {\n      ...props,\n      isVirtualized: true,\n    },\n    state,\n    ref\n  );\n\n  const {\n    virtualizerProps: { children: renderNode, ...virtualizerProps },\n  } = useListVirtualizer({\n    state,\n    estimatedItemHeight,\n    renderItem: (item) => <ListItem key={item.key} item={item} />,\n  });\n\n  return (\n    <ListContext.Provider value={listContext}>\n      <StyledList\n        as={Virtualizer<Node<any>, any, any>}\n        {...virtualizerProps}\n        {...listProps}\n        {...filterDOMProps(props, { labelable: true })}\n        fillAvailableSpace={fillAvailableSpace}\n        className={className}\n        ref={ref}\n      >\n        {renderNode}\n      </StyledList>\n    </ListContext.Provider>\n  );\n});\n","import React, { Key } from \"react\";\nimport { ListState } from \"@react-stately/list\";\n\nexport type ListContextType<T> = {\n  state: ListState<T>;\n  focused: boolean;\n  onAction: ((key: Key) => void) | undefined;\n};\n\nexport const ListContext = React.createContext<ListContextType<any> | null>(\n  null\n);\n","import React from \"react\";\nimport { StyledVerticalSeparator } from \"../StyledSeparator\";\nimport { useSeparator } from \"@react-aria/separator\";\n\nexport const ListDivider: React.FC = () => {\n  return (\n    <StyledVerticalSeparator\n      as={\"li\"}\n      {...useSeparator({ elementType: \"li\", orientation: \"vertical\" })\n        .separatorProps}\n    />\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Node } from \"@react-types/shared\";\nimport { usePress } from \"@react-aria/interactions\";\nimport { useSelectableItem } from \"@intellij-platform/core/selection\";\nimport { ItemStateContext } from \"@intellij-platform/core/Collections\";\nimport { StyledListItem } from \"./StyledListItem\";\nimport { ListContext } from \"@intellij-platform/core/List/ListContext\";\n\nexport interface ListItemProps<T> {\n  item: Node<T>;\n  children?: React.ReactNode;\n}\n\nexport function ListItem<T>({ item, children }: ListItemProps<T>) {\n  const { state, focused: listFocused, onAction } = useContext(ListContext)!;\n  const ref = React.useRef(null);\n  const isDisabled = state.disabledKeys.has(item.key);\n  const isSelected = state.selectionManager.isSelected(item.key);\n\n  const { itemProps } = useSelectableItem({\n    key: item.key,\n    ref,\n    onAction: () => onAction?.(item.key),\n    selectionManager: state.selectionManager,\n  });\n\n  return (\n    <StyledListItem\n      containerFocused={listFocused}\n      selected={isSelected}\n      disabled={isDisabled}\n      aria-disabled={isDisabled}\n      aria-selected={isSelected}\n      aria-label={item[\"aria-label\"]}\n      {...itemProps}\n      ref={ref}\n    >\n      <ItemStateContext.Provider\n        value={{\n          isDisabled,\n          isSelected,\n          isContainerFocused: listFocused,\n          node: item,\n        }}\n      >\n        {children || item.rendered}\n      </ItemStateContext.Provider>\n    </StyledListItem>\n  );\n}\n","import { css } from \"styled-components\";\nimport { styled } from \"../styled\";\n\ntype StyledListProps = {\n  fillAvailableSpace?: boolean;\n};\nexport const StyledList = styled.div\n  .attrs<StyledListProps>((props) => ({ role: props.role || \"list\" }))\n  .withConfig<StyledListProps>({\n    shouldForwardProp: (prop) => prop !== \"fillAvailableSpace\",\n  })<StyledListProps>`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  max-height: 100%;\n  overflow: auto;\n  color: ${({ theme }) => theme.color(\"*.textForeground\")};\n  outline: none;\n  ${({ fillAvailableSpace }) =>\n    fillAvailableSpace &&\n    css`\n      flex: 1;\n      height: fill-available; // will be converted to --webkit-fill-available and --moz-available, but doesn't work in FF\n    `}\n  background: ${({ theme }) => theme.color(\"List.background\")};\n`;\n","import { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { styled } from \"../styled\";\n\nexport type StyledListItemProps = {\n  containerFocused: boolean;\n  selected: boolean;\n  disabled: boolean;\n};\n\nexport const StyledListItem = styled.div.attrs<StyledListItemProps>(\n  (props) => ({\n    role: props.role || \"listitem\",\n  })\n)<StyledListItemProps>`\n  ${({ containerFocused, selected, disabled, theme }) => {\n    let backgroundColor;\n    let color = disabled\n      ? theme.color(\"*.disabledForeground\")\n      : theme.color(\n          \"List.foreground\" as UnknownThemeProp<\"List.foreground\">,\n          theme.commonColors.labelForeground\n        );\n    if (selected) {\n      if (containerFocused) {\n        color = theme.asCurrentForeground(\n          theme.color(\n            \"List.selectionForeground\" as UnknownThemeProp<\"List.selectionForeground\">\n          ) || theme.commonColors.labelSelectedForeground\n        ) /* Prioritizing \"*.selectionForeground\" over labelSelectedForeground*/;\n        backgroundColor = theme.color(\n          \"List.selectionBackground\" as UnknownThemeProp<\"List.selectionBackground\">\n        );\n      } else {\n        color = theme.color(\n          \"List.selectionInactiveForeground\" as UnknownThemeProp<\"List.selectionInactiveForeground\">,\n          color\n        );\n        backgroundColor = theme.color(\n          \"List.selectionBackgroundInactive\" as UnknownThemeProp<\"List.selectionBackgroundInactive\">\n        );\n      }\n    }\n    return {\n      backgroundColor: theme.asCurrentBackground(backgroundColor),\n      color,\n    };\n  }};\n  position: relative;\n  display: flex;\n  white-space: nowrap;\n  padding: 0 0.5rem; // themed?\n  line-height: 1.25rem;\n  outline: none;\n  cursor: default;\n  min-width: min-content; // Needed for content sizing for when list/tree is used inside popup or modal window\n`;\n","import { AriaSelectableListOptions } from \"@react-aria/selection\";\nimport { ListState } from \"@react-stately/list\";\nimport React, { Key, useEffect, useMemo, useState } from \"react\";\nimport { useSelectableList } from \"./useSelectableList\";\nimport { useFocusWithin } from \"@react-aria/interactions\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { CollectionRefProps } from \"@intellij-platform/core/Collections/useCollectionRef\";\nimport { useEventCallback } from \"@intellij-platform/core/utils/useEventCallback\";\nimport { ListContextType } from \"@intellij-platform/core/List/ListContext\";\nimport {\n  CollectionFocusProxyProps,\n  useCollectionFocusProxy,\n} from \"@intellij-platform/core/Collections\";\n\nexport interface ListProps\n  extends Omit<\n      AriaSelectableListOptions,\n      | \"disallowEmptySelection\"\n      | \"selectOnFocus\"\n      | \"selectionManager\" // Grouped as state, the second argument, like in useListBox\n      | \"collection\" // Grouped as state, the second argument, like in useListBox\n      | \"disabledKeys\" // Grouped as state, the second argument, like in useListBox\n      | \"ref\" // Third argument\n    >,\n    CollectionFocusProxyProps,\n    CollectionRefProps {\n  allowEmptySelection?: boolean;\n  /**\n   * Called when the action for the item should be triggered, which can be by double click or pressing Enter.\n   * Enter not implemented yet :D\n   */\n  onAction?: (key: Key) => void;\n  showAsFocused?: boolean;\n  id?: string;\n}\n// import { useSelectableList } from \"@react-aria/selection\";\n\nexport function useList<T>(\n  { onAction, showAsFocused, focusProxyRef, ...props }: ListProps,\n  state: ListState<T>,\n  ref: React.RefObject<HTMLElement>\n) {\n  const {\n    listProps: { onMouseDown, ...listProps },\n  } = useSelectableList({\n    ...props,\n    ref,\n    selectionManager: state.selectionManager,\n    disallowEmptySelection: !props.allowEmptySelection,\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    // if selectOnFocus is going to be an option (which is not in intellij UI), we should also conditionally show outline on items\n    selectOnFocus: true,\n  });\n\n  useCollectionFocusProxy({\n    focusProxyRef,\n    onAction,\n    state,\n    collectionRef: ref,\n  });\n\n  const [focused, setFocused] = useState(false);\n\n  const { focusWithinProps } = useFocusWithin({\n    onFocusWithinChange: setFocused,\n  });\n\n  // auto select the first item, if selection is empty and allowEmptySelection is false.\n  useEffect(() => {\n    const firstKey = state.collection.getFirstKey();\n    if (\n      !props.allowEmptySelection &&\n      state.selectionManager.isEmpty &&\n      firstKey\n    ) {\n      state.selectionManager.setFocusedKey(firstKey);\n      state.selectionManager.select(firstKey);\n    }\n  }, [!props.allowEmptySelection]);\n\n  const onActionCallback = useEventCallback(onAction ?? (() => {}));\n  const listContext: ListContextType<T> = useMemo(\n    () => ({\n      state,\n      focused: Boolean(focused || showAsFocused),\n      onAction: onActionCallback,\n    }),\n    [state, focused, showAsFocused]\n  );\n\n  return {\n    listProps: mergeProps(listProps, focusWithinProps),\n    listContext,\n    focused,\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n  Collection,\n  FocusStrategy,\n  KeyboardDelegate,\n  Node,\n} from \"@react-types/shared\";\nimport { HTMLAttributes, Key, RefObject, useMemo } from \"react\";\nimport { ListKeyboardDelegate } from \"@react-aria/selection\";\nimport {\n  MultipleSelectionManager,\n  SelectionManager,\n} from \"@react-stately/selection\";\nimport { useCollator } from \"@react-aria/i18n\";\nimport { useSelectableCollection } from \"@intellij-platform/core/selection\";\nimport { useCollectionAutoScroll } from \"@intellij-platform/core/Collections/useCollectionAutoScroll\";\n\ninterface SelectableListOptions {\n  /**\n   * An interface for reading and updating multiple selection state.\n   */\n  selectionManager: MultipleSelectionManager;\n  /**\n   * State of the collection.\n   */\n  collection: Collection<Node<unknown>>;\n  /**\n   * The item keys that are disabled. These items cannot be selected, focused, or otherwise\n   * interacted with.\n   */\n  disabledKeys: Set<Key>;\n  /**\n   * A ref to the item.\n   */\n  ref: RefObject<HTMLElement>;\n  /**\n   * A delegate that returns collection item keys with respect to visual layout.\n   */\n  keyboardDelegate?: KeyboardDelegate;\n  /**\n   * Whether the collection or one of its items should be automatically focused upon render.\n   * @default false\n   */\n  autoFocus?: boolean | FocusStrategy;\n  /**\n   * Whether focus should wrap around when the end/start is reached.\n   * @default false\n   */\n  shouldFocusWrap?: boolean;\n  /**\n   * Whether the option is contained in a virtual scroller.\n   */\n  isVirtualized?: boolean;\n  /**\n   * Whether the collection allows empty selection.\n   * @default false\n   */\n  disallowEmptySelection?: boolean;\n  /**\n   * Whether selection should occur automatically on focus.\n   * @default false\n   */\n  selectOnFocus?: boolean;\n  /**\n   * Whether typeahead is disabled.\n   * @default false\n   */\n  disallowTypeAhead?: boolean;\n  /**\n   * Whether the collection items should use virtual focus instead of being focused directly.\n   */\n  shouldUseVirtualFocus?: boolean;\n  /**\n   * Whether navigation through tab key is enabled.\n   */\n  allowsTabNavigation?: boolean;\n}\n\ninterface SelectableListAria {\n  /**\n   * Props for the option element.\n   */\n  listProps: HTMLAttributes<HTMLElement>;\n}\n\n/**\n * Handles interactions with a selectable list.\n */\nexport function useSelectableList(\n  props: SelectableListOptions\n): SelectableListAria {\n  let {\n    selectionManager,\n    collection,\n    disabledKeys,\n    ref,\n    keyboardDelegate,\n    autoFocus,\n    shouldFocusWrap,\n    isVirtualized,\n    disallowEmptySelection,\n    selectOnFocus = false,\n    disallowTypeAhead,\n    shouldUseVirtualFocus,\n    allowsTabNavigation,\n  } = props;\n\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = useCollator({ usage: \"search\", sensitivity: \"base\" });\n  let delegate = useMemo(\n    () =>\n      keyboardDelegate ||\n      new ListKeyboardDelegate(collection, disabledKeys, ref, collator),\n    [keyboardDelegate, collection, disabledKeys, ref, collator]\n  );\n  useCollectionAutoScroll(\n    { isVirtualized, selectionManager: selectionManager as SelectionManager },\n    ref\n  );\n\n  let { collectionProps } = useSelectableCollection({\n    ref,\n    selectionManager,\n    keyboardDelegate: delegate,\n    autoFocus,\n    shouldFocusWrap,\n    disallowEmptySelection,\n    selectOnFocus,\n    disallowTypeAhead,\n    shouldUseVirtualFocus,\n    allowsTabNavigation,\n  });\n\n  return {\n    listProps: collectionProps,\n  };\n}\n","import {\n  ListProps,\n  ListState,\n  useListState as originalUseListState,\n} from \"@react-stately/list\";\nimport {\n  CollectionRefProps,\n  useCollectionRef,\n} from \"@intellij-platform/core/Collections/useCollectionRef\";\n\nexport function useListState<T extends object>(\n  props: ListProps<T> & CollectionRefProps\n): ListState<T> {\n  const state = originalUseListState({\n    ...props,\n    selectionBehavior: \"replace\",\n  });\n  useCollectionRef(props, state);\n  return state;\n}\n","import { SelectionManager } from \"@react-stately/selection\";\nimport { RefObject, useImperativeHandle } from \"react\";\n\nexport type CollectionRefProps = {\n  /**\n   * Gives imperative access to selection manager.\n   */\n  selectionManagerRef?: RefObject<SelectionManager>;\n};\n\n/**\n * Common imperative API for collections. Used in Lists at the moment. Tree components implement a different imperative\n * API that can be refactored later for more consistency.\n */\nexport function useCollectionRef(\n  { selectionManagerRef }: CollectionRefProps,\n  state: { selectionManager: SelectionManager }\n) {\n  useImperativeHandle(selectionManagerRef, () => state.selectionManager);\n}\n","import { styled } from \"../styled\";\n\nexport const StyledListSectionHeader = styled.div(({ theme }) => ({\n  paddingLeft: 8,\n  fontWeight: \"bold\",\n  lineHeight: \"20px\",\n  outline: \"none\",\n  cursor: \"default\",\n  color: theme.color(\"*.textForeground\", theme.color(\"*.foreground\")),\n}));\n","import { ReusableView } from \"@react-stately/virtualizer\";\nimport { Node } from \"@react-types/shared\";\nimport React, { ReactNode, useRef } from \"react\";\nimport {\n  layoutInfoToStyle,\n  useVirtualizerItem,\n  VirtualizerItem,\n  VirtualizerProps,\n} from \"@react-aria/virtualizer\";\nimport { StyledListSectionHeader } from \"@intellij-platform/core/List/StyledListSectionHeader\";\n\ninterface SectionProps<T> {\n  reusableView: ReusableView<Node<T>, unknown>;\n  header: ReusableView<Node<T>, unknown>;\n  children?: ReactNode;\n}\n\nfunction ListSection<T extends object>({\n  reusableView,\n  header,\n  children,\n}: SectionProps<T>) {\n  const headerRef = useRef<HTMLDivElement>(null);\n  useVirtualizerItem({\n    layoutInfo: header.layoutInfo,\n    virtualizer: reusableView.virtualizer,\n    ref: headerRef,\n  });\n  return (\n    <>\n      <StyledListSectionHeader\n        role=\"presentation\"\n        ref={headerRef}\n        style={layoutInfoToStyle(header.layoutInfo!, \"ltr\")}\n      >\n        {reusableView.content?.rendered}\n      </StyledListSectionHeader>\n      <div\n        key={reusableView.key}\n        style={layoutInfoToStyle(reusableView.layoutInfo!, \"ltr\")}\n      >\n        {children}\n      </div>\n    </>\n  );\n}\n\nexport const renderWrapper: VirtualizerProps<\n  Node<any>,\n  unknown,\n  unknown\n>[\"renderWrapper\"] = (parent, reusableView, children, renderChildren) => {\n  if (reusableView.viewType === \"section\") {\n    return (\n      <ListSection\n        key={reusableView.key}\n        reusableView={reusableView}\n        header={children.find((c) => c.viewType === \"header\")!}\n      >\n        {renderChildren(children.filter((c) => c.viewType === \"item\"))}\n      </ListSection>\n    );\n  }\n  return (\n    <VirtualizerItem\n      key={reusableView.key}\n      layoutInfo={reusableView.layoutInfo!}\n      virtualizer={reusableView.virtualizer!}\n      parent={parent?.layoutInfo}\n    >\n      {reusableView.rendered as ReactNode}\n    </VirtualizerItem>\n  );\n};\n","import React, { HTMLAttributes, useMemo } from \"react\";\nimport { VirtualizerProps } from \"@react-aria/virtualizer\";\nimport {\n  VariableWidthListLayout,\n  VariableWidthListLayoutOptions,\n} from \"@intellij-platform/core/VariableWidthListLayout\";\nimport { ListState } from \"@react-stately/list\";\nimport { Node } from \"@react-types/shared\";\nimport { renderWrapper } from \"./renderWrapper\";\nimport { ListDivider } from \"@intellij-platform/core/List/ListDivider\";\nimport {\n  InvalidationContext,\n  LayoutInfo,\n  Rect,\n} from \"@react-stately/virtualizer\";\nimport { LayoutNode, ListLayoutOptions } from \"@react-stately/layout\";\n\nclass ListWithSectionsLayout<T> extends VariableWidthListLayout<T> {\n  private paddingY = 0;\n\n  constructor(opts: VariableWidthListLayoutOptions) {\n    super(opts);\n  }\n\n  update(invalidationContext: InvalidationContext<ListLayoutOptions>): void {\n    super.update(invalidationContext);\n  }\n\n  protected doBuildCollection(): LayoutNode[] {\n    let nodes = super.doBuildCollection();\n    let y = this.contentSize.height;\n\n    if (nodes.length === 0) {\n      let rect = new Rect(\n        0,\n        y,\n        this.virtualizer!.visibleRect.width,\n        this.virtualizer!.visibleRect.height\n      );\n      let placeholder = new LayoutInfo(\"placeholder\", \"placeholder\", rect);\n      let node = {\n        layoutInfo: placeholder,\n        validRect: placeholder.rect,\n      };\n      nodes.push(node);\n      this.layoutNodes.set(placeholder.key, node);\n      y = placeholder.rect.maxY;\n    }\n\n    this.contentSize.height = y + this.paddingY;\n    return nodes;\n  }\n\n  protected buildSection(node: Node<T>, x: number, y: number): LayoutNode {\n    // Synthesize a collection node for the header.\n    let headerNode = {\n      type: \"header\",\n      key: node.key + \":header\",\n      parentKey: node.key,\n      value: null,\n      level: node.level,\n      index: node.index,\n      hasChildNodes: false,\n      childNodes: [],\n      rendered: node.rendered,\n      textValue: node.textValue,\n    };\n\n    // Build layout node for it and adjust y offset of section children.\n    let header = this.buildSectionHeader(headerNode, x, y);\n    header.node = headerNode;\n    header.layoutInfo.parentKey = node.key;\n    this.layoutNodes.set(headerNode.key, header);\n    y += header.layoutInfo.rect.height;\n\n    let section = super.buildSection(node, x, y);\n    section.children!.unshift(header);\n    return section;\n  }\n}\n\ninterface ItemNode<T> extends Node<T> {\n  type: \"item\";\n}\nexport const useListVirtualizer = <T extends object>({\n  renderItem,\n  estimatedItemHeight = 20,\n  state,\n}: {\n  renderItem: (item: ItemNode<T>) => React.ReactNode;\n  estimatedItemHeight?: number;\n  state: ListState<T>;\n}): {\n  virtualizerProps: Omit<\n    VirtualizerProps<Node<T>, unknown, unknown>,\n    keyof HTMLAttributes<HTMLElement>\n  > & { children: (type: string, content: Node<T>) => React.ReactNode };\n} => {\n  const layout = useMemo(\n    () =>\n      new ListWithSectionsLayout<T>({\n        /**\n         * there is currently no documentation available for these fields, but setting `rowHeight` enforces it, which\n         * wouldn't be good for custom tree UI with a different row height.\n         * wrong estimatedRowHeight seems to only affect small scrollbar position inaccuracy, which is a minor issue\n         * and not even noticeable in most cases. Also, it seems it slightly improves the performance if it exactly\n         * matches the real row height. But not even sure.\n         */\n        estimatedRowHeight: estimatedItemHeight,\n        estimatedHeadingHeight: 20,\n        dividerHeight: 2,\n      }),\n    []\n  );\n  const focusedKey = state.selectionManager.focusedKey;\n  const persistedKeys = useMemo(\n    () => new Set(focusedKey ? [focusedKey] : []),\n    [focusedKey]\n  );\n  return {\n    virtualizerProps: {\n      persistedKeys,\n      layout,\n      collection: state.collection,\n      children: (type, item) => {\n        if (type === \"item\") {\n          return renderItem(item as ItemNode<T>);\n        }\n        if (type === \"divider\") {\n          return <ListDivider key={item.key} />;\n        }\n      },\n      renderWrapper,\n\n      scrollDirection: \"both\",\n    },\n  };\n};\n","import React, { ReactNode, useEffect, useState } from \"react\";\nimport {\n  LoadingSpinner,\n  LoadingSpinnerProps,\n} from \"@intellij-platform/core/LoadingSpinner/LoadingSpinner\";\n\nexport interface DelayedLoadingSpinnerProps extends LoadingSpinnerProps {\n  /**\n   * delay for showing the loading spinner in ms.\n   * @default {@link DEFAULT_LOADING_DELAY_MS}\n   */\n  delay?: number;\n}\n\nexport const DEFAULT_LOADING_DELAY_MS = 300;\n\n/**\n * {@link LoadingSpinner}, delayed\n */\nexport function DelayedLoadingSpinner({\n  delay = DEFAULT_LOADING_DELAY_MS,\n  ...props\n}: DelayedLoadingSpinnerProps) {\n  return (\n    <Delayed delay={delay}>\n      <LoadingSpinner {...props} />\n    </Delayed>\n  );\n}\n\n/**\n * Renders children with a delay\n */\nfunction Delayed({ children, delay }: { children: ReactNode; delay: number }) {\n  const [waitedEnough, setWaitedEnough] = useState(false);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setWaitedEnough(true);\n    }, delay); // the effect is intentionally made non-reactive to delay,\n    // since it doesn't make sense to start the wait from scratch if delay changes after the children\n    // is already rendered.\n    return () => clearTimeout(timer);\n  }, []);\n  if (waitedEnough) {\n    return <>{children}</>;\n  }\n  return null;\n}\n","import React, { SVGProps } from \"react\";\n\nexport interface LoadingSpinnerProps\n  extends Omit<SVGProps<SVGSVGElement>, \"viewBox\" | \"width\" | \"height\"> {\n  /**\n   * Loading spinner size in pixels\n   * @default {@link LOADING_SPINNER_SIZE_BIG}\n   */\n  size?: number;\n}\n\nexport const LOADING_SPINNER_SIZE_SMALL = 16;\nexport const LOADING_SPINNER_SIZE_BIG = 32;\n/**\n * Aka AsyncProcessIcon in Intellij Platform source.\n */\nexport function LoadingSpinner({\n  size = LOADING_SPINNER_SIZE_BIG,\n  ...props\n}: LoadingSpinnerProps) {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 32 32\" {...props}>\n      <g transform=\"rotate(0 16 16)\">\n        <g\n          fill=\"#7F8B91\" // TODO: themed?\n          fillOpacity=\".9\"\n          fillRule=\"evenodd\"\n          transform=\"translate(-4 -4)\"\n        >\n          <rect width=\"8\" height=\"4\" x=\"6\" y=\"18\" opacity=\".78\" />\n          <rect width=\"4\" height=\"8\" x=\"18\" y=\"26\" opacity=\".62\" />\n          <rect width=\"8\" height=\"4\" x=\"26\" y=\"18\" opacity=\".38\" />\n          <rect width=\"4\" height=\"8\" x=\"18\" y=\"6\" />\n          <g transform=\"rotate(45 9.757 24.243)\">\n            <rect width=\"8\" height=\"4\" y=\"12\" opacity=\".93\" />\n            <rect width=\"4\" height=\"8\" x=\"12\" y=\"20\" opacity=\".69\" />\n            <rect width=\"8\" height=\"4\" x=\"20\" y=\"12\" opacity=\".48\" />\n            <rect width=\"4\" height=\"8\" x=\"12\" opacity=\".3\" />\n          </g>\n        </g>\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          values=\"0 16 16; 45 16 16; 90 16 16; 135 16 16; 180 16 16; 225 16 16; 270 16 16; 315 16 16; 360 16 16\"\n          keyTimes=\"0;0.125;0.25;0.375;0.5;0.625;0.75;0.875;1\"\n          dur=\"1s\"\n          repeatCount=\"indefinite\"\n          calcMode=\"discrete\"\n        />\n      </g>\n    </svg>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { MenuTriggerState } from \"@react-stately/menu\";\n\nexport type UseContextMenuProps = {\n  /**\n   * Whether opening contextmenu is disabled.\n   */\n  isDisabled?: boolean;\n  /**\n   * Called when contextmenu is opened.\n   * @param args\n   */\n  onOpen?: (args: {\n    /**\n     * The target element on which contextmenu event was triggered.\n     */\n    target: Element;\n  }) => void;\n};\n/**\n * Functionality and accessibility of context menu.\n */\nexport const useContextMenu = (\n  { isDisabled = false, onOpen }: UseContextMenuProps,\n  state: MenuTriggerState\n) => {\n  const [positionOrigin, setPositionOrigin] = useState<React.MouseEvent>();\n  /**\n   * NOTE: not using useMenuTrigger because:\n   * - There is no option to have a trigger like this: \"right click + long press only by touch\" which seems to be the\n   *   reasonable trigger for context menu. If we want to use it just for long press, we could disable it if it's not\n   *   a touch device, but that would be suboptimal, since both touch and mouse can be available, and it should depend\n   *   not on availability of touch, but on the triggered event type. Plus, isDisabled is broken in v<3.5.0\n   * - It's not quite clear at the moment, if the aria attributes that useMenuTrigger sets would be applicable to\n   *   this context menu component too. The trigger is not the container. For example, if there is a list rendered\n   *   inside, the selected item would be the trigger. Maybe even this component, as a container for context menu\n   *   is not the best way to allow for context menu, when it comes to a11y concerns. For now, we skip a11y props of the\n   *   trigger. A11y props of the menu itself (e.g. aria-label) would also be up to the usage of this component.\n   *\n   *   TODO: add support for long touch\n   */\n  const onContextMenu = (e: React.MouseEvent<HTMLElement>) => {\n    if (!(e.target instanceof Element)) {\n      return;\n    }\n    setPositionOrigin(e);\n    onOpen?.({ target: e.target });\n    e.preventDefault();\n    // NOTE: we can't use offsetX/offsetY, because it would depend on the exact target that was clicked.\n    if (state.isOpen) {\n      /**\n       * If the context menu is already open, closing and reopening makes sure the menu properly gains the focus.\n       * Otherwise, the focus may go back to the background.\n       * It also better matches the reference impl.\n       */\n      state.close();\n      setTimeout(() => {\n        state.open(null);\n      });\n    } else {\n      state.open(null);\n    }\n  };\n\n  const overlayRef = useRef(null);\n\n  const containerProps: React.HTMLAttributes<HTMLElement> = isDisabled\n    ? {}\n    : {\n        onContextMenu,\n      };\n  return {\n    /**\n     * props to be applied on the container element which is supposed to have the context menu\n     */\n    containerProps,\n    /**\n     * The ref to be applied on the menu overlay wrapper. It's usually an input instead of an output in similar\n     * react-aria hooks, but it seemed unnecessary here.\n     */\n    overlayRef,\n\n    positionOrigin,\n  };\n};\n","import React, { ForwardedRef, HTMLAttributes, HTMLProps } from \"react\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useMenuTriggerState } from \"@react-stately/menu\";\nimport { OverlayTriggerProps } from \"@react-types/overlays\";\n\nimport { useContextMenu, UseContextMenuProps } from \"./useContextMenu\";\nimport { MenuOverlayFromOrigin } from \"@intellij-platform/core/Menu/MenuOverlayFromOrigin\";\n\ninterface ContextMenuContainerProps\n  extends Omit<HTMLProps<HTMLDivElement>, \"children\">,\n    UseContextMenuProps {\n  // TODO(api): change renderMenu to menu which would be a react element.\n  /**\n   * Will be called to return the Menu when context menu is triggered. Use {@link Menu} component to render a menu.\n   */\n  renderMenu: () => React.ReactNode;\n  /**\n   * If children is a function, context menu props is passed to it, to be passed to the underlying element.\n   * Otherwise, a div container will be rendered.\n   */\n  children:\n    | React.ReactNode\n    | ((props: HTMLAttributes<HTMLElement>) => React.ReactNode);\n}\n\n/**\n * A generic container for context menu. It's the same as a normal div, only with an additional `renderMenu` prop,\n * to be used to render context menu, when it's triggered.\n * Closes the menu when a menu action is triggered.\n */\nexport const ContextMenuContainer = React.forwardRef(\n  (\n    {\n      children,\n      renderMenu,\n      onOpen,\n      isDisabled,\n      ...props\n    }: ContextMenuContainerProps,\n    ref: ForwardedRef<HTMLDivElement>\n  ) => {\n    const state = useMenuTriggerState({} as OverlayTriggerProps);\n\n    const { positionOrigin, containerProps, overlayRef } = useContextMenu(\n      { onOpen, isDisabled },\n      state\n    );\n    const allProps = mergeProps(props, containerProps);\n    return (\n      <>\n        {typeof children === \"function\" ? (\n          children(allProps)\n        ) : (\n          <div {...allProps} ref={ref}>\n            {children}\n          </div>\n        )}\n        {state.isOpen && (\n          <MenuOverlayFromOrigin\n            onClose={state.close}\n            ref={overlayRef}\n            origin={positionOrigin}\n            /**\n             * Context menus don't autofocus the first item in the reference impl.\n             * Note that this just defines the default value, and can always be controlled per case on the rendered Menu\n             */\n            defaultAutoFocus={true}\n          >\n            {renderMenu()}\n          </MenuOverlayFromOrigin>\n        )}\n      </>\n    );\n  }\n);\n\n/**\n * Data attribute name to be used to mark an element as the reference for positioning a contextual menu.\n */\nexport const MENU_POSITION_TARGET_DATA_ATTRIBUTE =\n  \"data-context-menu-position-target\";\n","import { Item, PartialNode, Section } from \"@react-stately/collections\";\nimport { Item as Item2 } from \"./Item\";\nimport {\n  CollectionBase,\n  CollectionElement,\n  ItemProps,\n  SectionProps,\n} from \"@react-types/shared\";\nimport React from \"react\";\n\nfunction* patchCollectionItem<T>(nodes: Generator<PartialNode<T>>) {\n  for (const partialNode of nodes)\n    yield {\n      ...partialNode,\n      *childNodes() {\n        const result2 = partialNode.childNodes?.();\n        if (result2) {\n          for (const partialChildNode of result2) {\n            const { type, ...partialChildNodeWithoutType } = partialChildNode;\n            yield partialChildNodeWithoutType;\n          }\n        }\n      },\n    };\n}\n\nconst PatchedItem = Item.bind(null);\n\n// @ts-expect-error: getCollectionNode is not public\nPatchedItem.getCollectionNode = function getCollectionNode<T>(\n  props: ItemProps<T>,\n  context: any\n): Generator<PartialNode<T>> {\n  // @ts-expect-error getCollectionNode is not public API\n  return patchCollectionItem(Item.getCollectionNode(props, context));\n};\n\nconst PatchedSection = Section.bind(null);\n\n// @ts-expect-error: getCollectionNode is not public\nPatchedSection.getCollectionNode = function getCollectionNode<T>(\n  props: SectionProps<T>,\n  context: any\n): Generator<PartialNode<T>> {\n  // @ts-expect-error getCollectionNode is not public API\n  return patchCollectionItem(Section.getCollectionNode(props, context));\n};\nfunction convertCollectionElement<T>(\n  result: CollectionElement<T> | React.ReactNode\n): CollectionElement<T> {\n  if (\n    React.isValidElement(result) &&\n    (result.type === Item || result.type === Item2)\n  ) {\n    return React.createElement(\n      PatchedItem,\n      {\n        key: result.key != null ? result.key : undefined,\n        ...(result.props as ItemProps<T>),\n      },\n      convertChildren(result.props.children)\n    ) as CollectionElement<T>;\n  }\n  if (React.isValidElement(result) && result.type === Section) {\n    return React.createElement(\n      PatchedSection,\n      {\n        key: result.key != null ? result.key : undefined,\n        ...(result.props as SectionProps<T>),\n      } as any,\n      convertChildren((result.props as any).children)\n    ) as CollectionElement<T>;\n  }\n  return result as CollectionElement<T>;\n}\n\nfunction convertChildren<T>(children: React.ReactNode): React.ReactNode {\n  return Array.isArray(children)\n    ? // NOTE: We intentionally avoid using React.Children.map as it messes with keys.\n      children.map(convertChildren)\n    : convertCollectionElement(children);\n}\n\n/**\n * CollectionBuilder expects child type to be the same as parent type, which is weird in the first place:\n * https://github.com/adobe/react-spectrum/blob/cae83ff95f2f709b761c70d47ace96d6346ed873/packages/%40react-stately/collections/src/CollectionBuilder.ts#L148\n * On the other hand, the default Item components sets the `type` to item, for all child PartialNode objects:\n * https://github.com/adobe/react-spectrum/blob/c49d9819adc2cb63377f39557352440c72072caf/packages/%40react-stately/collections/src/Item.ts#L40-L54\n * Which is also a little unexpected, as in many nested collections, an item can have all types of children.\n * This function patches that, replacing Item elements with PatchedItem element which doesn't set type on children\n * PartialNodes.\n */\nexport function patchCollectionProps<T>({\n  children,\n  ...props\n}: Partial<CollectionBase<T>>): CollectionBase<T> {\n  return {\n    ...props,\n    children:\n      typeof children === \"function\"\n        ? (node: T) => convertChildren(children(node)) as CollectionElement<T>\n        : (convertChildren(children) as CollectionElement<T>),\n  };\n}\n","import React, { CSSProperties, Key, RefObject, useContext } from \"react\";\nimport { AriaMenuOptions, useMenu as useMenuAria } from \"@react-aria/menu\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { AriaMenuProps } from \"@react-types/menu\";\nimport { Node } from \"@react-types/shared\";\nimport { patchCollectionProps } from \"@intellij-platform/core/Collections/patchCollectionProps\";\nimport { TreeProps, useTreeState } from \"../Tree/useTreeState\"; // shared dependency between tree and menu, that could be lifted up import {Submenu} from '@intellij-platform/core/Menu/Submenu'\nimport { renderMenuNodes } from \"./renderMenuNodes\";\nimport { StyledMenu } from \"./StyledMenu\";\nimport { SubmenuProps } from \"./Submenu\"; // internal export\n\nexport interface MenuProps<T>\n  extends Omit<\n    AriaMenuProps<T>,\n    // selection is not properly supported for nested menus. Plus, it's not even that meaningful for a nested menu\n    // at least the way it's implemented now.\n    | \"onSelectionChange\"\n    | \"defaultSelectedKeys\"\n    | \"selectionMode\"\n    | \"disallowEmptySelection\"\n  > {\n  /**\n   * Indicates currently expanded menu item (controlled).\n   */\n  expandedKey?: Key; // FIXME: should be keys\n  /**\n   * Called when expanded menu item is changed by user interaction, which can be either hovering over the menu item\n   */\n  onExpandedKeyChange?: (expandedKey: Key) => void; // FIXME: should be keys\n  defaultExpandedKey?: Key; // FIXME: should be keys\n  /**\n   * @deprecated\n   */\n  expandOn?: \"hover\" | \"press\"; // hover delay doesn't seem to be needed as an option\n\n  /**\n   * Defines the press behaviour (either by mouse or by pressing Enter when focused) on menu items with submenu.\n   * By default (undefined), pressing or hovering over a menu item with submenu, opens the submenu.\n   * When set to \"toggle\", pressing a menu item with submenu will toggle the submenu. Hovering over such items will\n   * no longer open the submenu.\n   * When set to \"action\", pressing a menu item with submenu will call onAction for that item, and closes the menu.\n   * Hovering over such items will no longer open the submenu.\n   *\n   * In all cases, pressing the right arrow will always open the submenu.\n   */\n  submenuBehavior?: \"default\" | \"toggleOnPress\" | \"actionOnPress\";\n\n  /**\n   * fills the available horizontal or vertical space, when rendered in a flex container.\n   */\n  fillAvailableSpace?: boolean;\n\n  /**\n   * Minimum width of the menu\n   * @default: 120px\n   */\n  minWidth?: CSSProperties[\"minWidth\"];\n}\n\n/**\n * Can be provided by the overlay where the menu is rendered in. If provided, menu will call the provided close function\n * on actions. Note that there is no `closeOnSelect` option as of now, on this context, since no use case seems to exist\n * for keeping the menu overlay open after a menu item is selected.\n * **Update**: there are use cases where the menu is not closed after an item is clicked. Most of the toggle-able\n * actions (the ones with a checkmark) seem to be like this.\n * TODO: Make \"close on selection\" more flexible. Some ideas:\n *  - instead of calling close, pass it to `onAction` handler. Then on each action, one would need to call close if\n *    needed.\n *  - Offer a `MenuItem` component to be used instead of generic `Item`, where it accepts `closeOnSelect` boolean, which\n *    is true by default.\n *  - pass a `keepOpen` function to `onAction`.\n *  - Allow signaling whether the menu should kept open, via the returned value of onAction. e.g. return false means keep open.\n *  Last two suggestions are based on the assumption that most of the menu items are not selectable.\n *  Note that MenuOverlayContext could be used directly in action handlers too, but baking it into the menu makes it\n *  much more convenient, which seems more important than breaking the nice separation between Menu and MenuTrigger.\n */\nexport const MenuOverlayContext = React.createContext<{\n  close: () => void;\n  defaultAutoFocus: MenuProps<unknown>[\"autoFocus\"];\n}>({\n  close: () => {},\n  defaultAutoFocus: undefined,\n});\nexport const MenuContext = React.createContext<\n  Pick<\n    MenuProps<unknown>,\n    \"onClose\" | \"onAction\" | \"submenuBehavior\" | \"autoFocus\"\n  > & {\n    itemWrapper?: (\n      renderedItem: React.ReactNode,\n      item: Node<unknown>\n    ) => React.ReactNode;\n    renderSubmenu?: (props: SubmenuProps<unknown>) => React.ReactNode;\n  }\n>({});\n\nexport function useMenu<T>(\n  {\n    onAction: onActionProp,\n    submenuBehavior = \"default\",\n    ...props\n  }: MenuProps<T> & AriaMenuOptions<T>,\n  state: TreeState<T>,\n  ref: RefObject<HTMLElement>\n) {\n  const { close, defaultAutoFocus } = useContext(MenuOverlayContext);\n  const autoFocus = props.autoFocus ?? defaultAutoFocus;\n  const onClose = () => {\n    props.onClose?.();\n    close();\n  };\n  const onAction = (key: Key) => {\n    if (\n      // The following check should have been in useMenu, but it's not currently. Probably because they haven't yet\n      // covered nested menus.\n      !state.collection.getItem(key)?.hasChildNodes\n    ) {\n      return onActionProp?.(key);\n    } else if (submenuBehavior === \"actionOnPress\") {\n      onClose();\n      return onActionProp?.(key);\n    }\n  };\n  const menuContextValue: React.ContextType<typeof MenuContext> = {\n    submenuBehavior,\n    autoFocus,\n    onAction,\n    onClose,\n  };\n  const { menuProps } = useMenuAria(\n    { ...props, onAction, onClose, autoFocus },\n    state,\n    ref\n  );\n\n  return {\n    menuProps,\n    menuContextValue,\n  };\n}\n\nexport function useMenuState<T extends object>(\n  props: TreeProps<T> &\n    Pick<\n      MenuProps<T>,\n      \"expandedKey\" | \"defaultExpandedKey\" | \"onExpandedKeyChange\"\n    >\n) {\n  props = patchCollectionProps(props);\n  return useTreeState({\n    ...props,\n    childExpansionBehaviour: \"single\",\n    expandedKeys: props.expandedKey ? [props.expandedKey] : undefined,\n    onExpandedChange: ([firstKey]) => props?.onExpandedKeyChange?.(firstKey),\n    defaultExpandedKeys: props.defaultExpandedKey\n      ? [props.defaultExpandedKey]\n      : undefined,\n  });\n}\n\n/**\n * UI for menus which are normally shown in a popover. Being rendered as an overlay is not handled here.\n * Also, there is no coupling with any higher level entity like \"Action\", since this is just for the UI layer.\n * Something like ActionMenu which creates a menu out of a list of actions can be implemented on top of this.\n *\n * @example\n *  <Menu>\n *    <Item>Item one</Item>\n *    <Item>\n *      <MenuItemLayout\n *        icon={<PlatformIcon icon={\"actions/copy\"} />}\n *        content=\"Copy\"\n *        shortcut={\"⌘C\"} />\n *    </Item>\n *  </Menu>\n *\n *  Current issues and limitations:\n *  - Divider in sub-menu's is not supported. because of a constraint in @react-stately/collections, which results in\n *    this error: Unsupported type <Divider> in <Item>. Only <Item> is supported. Maybe supporting section would\n *    be a workaround for it.\n *  - when a parent menu item which has an open submenu is hovered, it gets focus.\n */\nexport function Menu<T extends object>({ minWidth, ...props }: MenuProps<T>) {\n  const ref = React.useRef<HTMLUListElement>(null);\n  const state = useMenuState(props);\n  const { menuContextValue, menuProps } = useMenu(props, state, ref);\n\n  return (\n    /**\n     * MenuContext is used to pass onAction and onClose to be passed to useMenu in submenus.\n     * That's needed because in useMenuItem onAction and onClose are read off a WeakMap which has the menu state\n     * (TreeState) as key. So we have to pass onAction and onClose everytime we call useMenu in submenus, to let the\n     * menu items in that submenu access the right value of onAction and onClose. To avoid drilling these props down,\n     * we keep it in a context.\n     */\n    <MenuContext.Provider value={menuContextValue}>\n      <StyledMenu\n        {...menuProps}\n        ref={ref}\n        style={{ minWidth }}\n        fillAvailableSpace={props.fillAvailableSpace}\n      >\n        {renderMenuNodes(state, [...state.collection])}\n      </StyledMenu>\n    </MenuContext.Provider>\n  );\n}\n","import React, { HTMLAttributes, ReactNode, RefObject, useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { isFocusVisible, useHover, usePress } from \"@react-aria/interactions\";\nimport {\n  AriaMenuItemProps,\n  MenuItemAria,\n  useMenuItem as useMenuItemAria,\n} from \"@react-aria/menu\";\nimport { useOverlayPosition } from \"@react-aria/overlays\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { FocusableElement, Node } from \"@react-types/shared\";\nimport { ItemStateContext } from \"@intellij-platform/core/Collections/ItemStateContext\";\nimport { Overlay } from \"@intellij-platform/core/Overlay\";\n\nimport { LafIcon, PlatformIcon } from \"../Icon\";\nimport { styled } from \"../styled\";\nimport { MenuContext, MenuProps } from \"./Menu\";\nimport { MENU_BORDER_WIDTH, MENU_VERTICAL_PADDING } from \"./StyledMenu\";\nimport {\n  StyledMenuItem,\n  StyledMenuItemIcon,\n  StyledNestedArrow,\n} from \"./StyledMenuItem\";\nimport { Submenu, SubmenuProps } from \"@intellij-platform/core/Menu/Submenu\";\n\nexport interface MenuItemProps<T> {\n  item: Node<T>;\n  state: TreeState<T>;\n  onSubmenuClose?: () => void;\n}\n\nconst StyledMenuItemText = styled.span`\n  flex: 1;\n`;\n\nconst StyledMenuItemPlatformIcon = styled(PlatformIcon)`\n  svg path {\n    stroke: currentColor;\n  }\n`;\n\nconst StyledMenuItemLafIcon = styled(LafIcon)`\n  svg path {\n    stroke: currentColor;\n  }\n`;\n\nfunction useMenuItem<T extends unknown>(\n  {\n    submenuBehavior,\n    ...props\n  }: AriaMenuItemProps & { submenuBehavior: MenuProps<T>[\"submenuBehavior\"] },\n  state: TreeState<T>,\n  ref: RefObject<FocusableElement>\n): MenuItemAria {\n  const item = state.collection.getItem(props.key!)!;\n  const isDisabled = state.disabledKeys.has(item.key);\n  const isExpanded = state.expandedKeys.has(item.key);\n  const hasSubmenu = item.hasChildNodes;\n  const { menuItemProps: ariaMenuItemProps, ...result } = useMenuItemAria(\n    {\n      key: item.key,\n      // hack to prevent react-aria to call onClose when nested items are selected, which is incorrect, and because\n      // react-aria doesn't officially support nested menus at the moment\n      onClose: hasSubmenu ? () => {} : undefined,\n    },\n    state,\n    ref\n  );\n\n  // useMenuItem in react aria utilizes useHover to focus item on hover. The logic there conflicts with nested menus\n  // requirements (at least based on how nested menu is implemented here currently). Also, submenuBehavior requires\n  // some more customization. So we delete the handlers set by useHover in useMenuItem, and add a custom useHover.\n  delete ariaMenuItemProps.onMouseEnter;\n  delete ariaMenuItemProps.onPointerEnter;\n\n  if (submenuBehavior === \"default\" && isExpanded) {\n    // When menu item has its submenu opened, clicking it should not move focus or do anything.\n    delete ariaMenuItemProps.onPointerDown;\n  }\n\n  const { hoverProps } = useHover({\n    isDisabled: isDisabled,\n    onHoverStart: () => {\n      const isAnySubmenuOpen = [...state.expandedKeys].some(\n        (expandedKey) =>\n          state.collection.getItem(expandedKey)?.parentKey === item.parentKey\n      );\n\n      if (submenuBehavior === \"default\" && !isExpanded) {\n        state.toggleKey(item.key);\n      }\n\n      if (!isFocusVisible()) {\n        const shouldFocus =\n          submenuBehavior === \"default\" ? !isExpanded : !isAnySubmenuOpen;\n        if (shouldFocus) {\n          state.selectionManager.setFocused(true);\n        }\n        state.selectionManager.setFocusedKey(item.key);\n      }\n    },\n  });\n\n  const keyboardProps = {\n    onKeyDown: (e: React.KeyboardEvent) => {\n      if (\n        ((e.key === \"Enter\" || e.key === \" \") &&\n          submenuBehavior !== \"actionOnPress\") ||\n        \"ArrowRight\" === e.key\n      ) {\n        state.toggleKey(item.key);\n        e.stopPropagation();\n        return;\n      }\n    },\n  };\n\n  const { pressProps: togglePressProps } = usePress({\n    isDisabled: isDisabled,\n    onPressUp: () => {\n      state.toggleKey(item.key);\n      if (isExpanded) {\n        // submenu was expanded and is closed now. moving focus back to the parent item\n        state.selectionManager.setFocusedKey(item.key);\n      }\n    },\n  });\n\n  return {\n    ...result,\n    menuItemProps: mergeProps(\n      hasSubmenu\n        ? {\n            \"aria-expanded\": isExpanded,\n            \"aria-haspopup\": \"menu\",\n          }\n        : {},\n      ariaMenuItemProps,\n      hoverProps,\n      keyboardProps,\n      submenuBehavior === \"toggleOnPress\" ? togglePressProps : {}\n    ),\n  };\n}\n\nconst MenuItemContext = React.createContext<{\n  labelProps: HTMLAttributes<HTMLElement>;\n  descriptionProps: HTMLAttributes<HTMLElement>;\n  keyboardShortcutProps: HTMLAttributes<HTMLElement>;\n}>({ descriptionProps: {}, labelProps: {}, keyboardShortcutProps: {} });\n\nexport const useMenuItemLayout = () => {\n  return useContext(MenuItemContext);\n};\n\nexport function MenuItem<T>({ item, state }: MenuItemProps<T>) {\n  // Get props for the menu item element\n  const ref = React.useRef<HTMLLIElement>(null);\n  const nestedMenuRef = React.useRef<HTMLDivElement>(null);\n  const isDisabled = state.disabledKeys.has(item.key);\n  const isExpanded = state.expandedKeys.has(item.key);\n  const isSelected = state.selectionManager.selectedKeys.has(item.key);\n  const isFocused = state.selectionManager.focusedKey === item.key;\n  const {\n    onClose,\n    submenuBehavior,\n    renderSubmenu = (props: SubmenuProps<T>) => <Submenu {...props} />,\n    itemWrapper = (i: React.ReactNode) => i,\n  } = useContext(MenuContext);\n\n  const { menuItemProps, labelProps, descriptionProps, keyboardShortcutProps } =\n    useMenuItem(\n      {\n        submenuBehavior,\n        key: item.key,\n      },\n      state,\n      ref\n    );\n\n  const { pressProps: togglePressProps } = usePress({\n    isDisabled: isDisabled,\n    onPressUp: () => {\n      state.toggleKey(item.key);\n      if (isExpanded) {\n        // submenu was expanded and is closed now. moving focus back to the parent item\n        state.selectionManager.setFocusedKey(item.key);\n      }\n    },\n  });\n\n  let { overlayProps: positionProps } = useOverlayPosition({\n    targetRef: ref,\n    overlayRef: nestedMenuRef,\n    placement: \"right top\",\n    shouldFlip: true,\n    onClose,\n    offset: 0,\n    crossOffset: -(MENU_VERTICAL_PADDING + MENU_BORDER_WIDTH),\n    isOpen: isExpanded,\n  });\n\n  const arrowProps: HTMLAttributes<HTMLElement> =\n    submenuBehavior !== \"default\"\n      ? {\n          role: \"button\",\n          \"aria-label\": \"Open\",\n          ...mergeProps(togglePressProps, {\n            // to prevent pointer up event handler on the item, which would trigger action.\n            onPointerUp: (e: React.PointerEvent) => e.stopPropagation(),\n          }),\n        }\n      : {};\n  return (\n    <>\n      <StyledMenuItem\n        {...menuItemProps}\n        isDisabled={isDisabled}\n        isActive={isFocused}\n        ref={ref}\n      >\n        {isSelected && (\n          <StyledMenuItemIcon>\n            <StyledMenuItemLafIcon\n              icon={{\n                name: \"checkmark\",\n                modifiers: { Selected: isFocused },\n              }}\n            />\n          </StyledMenuItemIcon>\n        )}\n        <ItemStateContext.Provider\n          value={{\n            isDisabled,\n            isContainerFocused: state.selectionManager.isFocused,\n            isSelected,\n            node: item,\n          }}\n        >\n          <MenuItemContext.Provider\n            value={{ labelProps, descriptionProps, keyboardShortcutProps }}\n          >\n            {itemWrapper(\n              typeof item.rendered === \"string\" ? (\n                <StyledMenuItemText {...labelProps}>\n                  {item.rendered}\n                </StyledMenuItemText>\n              ) : (\n                item.rendered\n              ),\n              item\n            )}\n          </MenuItemContext.Provider>\n        </ItemStateContext.Provider>\n        {item.hasChildNodes && (\n          <StyledNestedArrow {...arrowProps}>\n            <StyledMenuItemPlatformIcon icon=\"icons/ide/menuArrow\" />\n          </StyledNestedArrow>\n        )}\n      </StyledMenuItem>\n      {isExpanded && (\n        /**\n         * A note about using Overlay:\n         * If sub-menu is not rendered in a portal, useOverlayPosition doesn't work properly and the submenu may\n         * be rendered offscreen. Worse, it may introduce scroll in body (or some scrollable ancestor), which will\n         * trigger a scroll event which closes the menu if the menu is rendered in an overlay (like in MenuTrigger),\n         * which is almost always the case.\n         *\n         */\n        <Overlay\n          OverlayComponent={\n            /**\n             *  The FocusScope included in the default Overlay, messes with a particular expected behavior. So we use\n             *  SimpleOverlay, which just renders its children as a portal. There may be a better solution for that\n             *  problem, which would eliminate the need for the funky `OverlayComponent` prop on our `Overlay`\n             *  component. Something to look into in the future.\n             */\n            SimpleOverlay\n          }\n        >\n          <div ref={nestedMenuRef} {...positionProps}>\n            {renderSubmenu({ parentState: state, rootKey: item.key })}\n          </div>\n        </Overlay>\n      )}\n    </>\n  );\n}\n\n/**\n * A replacement for react-aria Overlay, which doesn't render FocusScope\n */\nfunction SimpleOverlay({\n  children,\n  portalContainer = document.body,\n}: {\n  children: ReactNode;\n  portalContainer?: Element | undefined;\n}) {\n  return ReactDOM.createPortal(children, portalContainer);\n}\n","import React from \"react\";\nimport { ItemStateContext } from \"@intellij-platform/core/Collections/ItemStateContext\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { useContextOrThrow } from \"@intellij-platform/core/utils/useContextOrThrow\";\n\nimport { useMenuItemLayout } from \"./MenuItem\";\nimport { StyledMenuItemIcon } from \"./StyledMenuItem\";\n\ninterface MenuItemLayoutProps {\n  icon?: React.ReactNode;\n  content: React.ReactNode;\n  shortcut?: React.ReactNode;\n}\n\nconst StyledMenuItemLayout = styled.div`\n  display: flex;\n  align-items: center;\n  flex: 1; // to make sure it takes as much space as available in the menu item row, so that the suffix (shortcut) is pushed to the right\n`;\nconst Content = styled.span`\n  flex: 1;\n`;\n\nconst Shortcut = styled.kbd`\n  font-family: system-ui, sans-serif;\n  margin-left: 30px;\n  margin-right: -0.625rem;\n  color: ${({ theme }) =>\n    theme.currentForegroundAware(\n      theme.color(\"MenuItem.acceleratorForeground\")\n    )};\n`;\n\nexport const MenuItemLayout = ({\n  content,\n  shortcut,\n  icon,\n}: MenuItemLayoutProps) => {\n  const { isSelected } = useContextOrThrow(\n    ItemStateContext,\n    \"MenuItemLayout is meant to be rendered in Item component in Menus\"\n  );\n  const { labelProps, keyboardShortcutProps } = useMenuItemLayout();\n  const allowedIcon = !isSelected && icon;\n  return (\n    <StyledMenuItemLayout>\n      {allowedIcon && <StyledMenuItemIcon>{allowedIcon}</StyledMenuItemIcon>}\n      <Content {...labelProps}>{content}</Content>\n      {shortcut && <Shortcut {...keyboardShortcutProps}>{shortcut}</Shortcut>}\n    </StyledMenuItemLayout>\n  );\n};\n","import React, { HTMLProps, useEffect } from \"react\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport { useOverlay, usePreventScroll } from \"@react-aria/overlays\";\nimport { FocusScope } from \"@intellij-platform/core/utils/FocusScope\";\nimport {\n  MenuOverlayContext,\n  MenuProps,\n} from \"@intellij-platform/core/Menu/Menu\";\nimport { areInNestedOverlays, Overlay } from \"@intellij-platform/core/Overlay\";\nimport {\n  DelayedLoadingSpinner,\n  LOADING_SPINNER_SIZE_SMALL,\n} from \"@intellij-platform/core/LoadingSpinner\";\n\nexport interface MenuOverlayProps {\n  children: React.ReactNode;\n  restoreFocus?: boolean;\n  autoFocus?: boolean;\n  overlayProps: HTMLProps<HTMLDivElement>;\n  overlayRef?: React.Ref<HTMLDivElement>;\n  /**\n   * Sets the default value of {@link Menu}'s {@link MenuProps#autoFocus} prop.\n   */\n  defaultAutoFocus?: MenuProps<unknown>[\"autoFocus\"];\n  onClose: () => void;\n  suspense?: React.ReactNode;\n}\n\n/**\n * Overlay container for Menu.\n * Positioning is not implemented at this layer.\n * {@link MenuOverlayProps#overlayProps} should be used for positioning.\n */\nexport function MenuOverlay({\n  children,\n  restoreFocus,\n  autoFocus,\n  overlayProps: otherOverlayProps,\n  overlayRef: inputOverlayRef,\n  defaultAutoFocus,\n  onClose,\n  suspense,\n}: MenuOverlayProps) {\n  const overlayRef = useObjectRef(inputOverlayRef);\n  const { overlayProps } = useOverlay(\n    {\n      onClose,\n      shouldCloseOnBlur: false,\n      isOpen: true,\n      isKeyboardDismissDisabled: false,\n      isDismissable: true,\n      shouldCloseOnInteractOutside: (element) => {\n        // FIXME: this is kind of hacky and should be removed when nested menu is properly supported\n        return !areInNestedOverlays(overlayRef.current, element);\n      },\n    },\n    overlayRef\n  );\n\n  usePreventScroll();\n\n  /**\n   * right clicks outside are not currently captured as \"outside interaction\" by react-aria's useOverlay hook.\n   * so we set up a global listener to close the context menu when contextmenu event is triggered outside the\n   * context menu container.\n   * NOTE: event handler is set up for the `capture` phase, to have it run before the handler for context menu\n   * when the menu is used as a context menu\n   */\n  useEffect(() => {\n    const onOutsideContextMenu = () => {\n      onClose();\n    };\n    document.addEventListener(\"contextmenu\", onOutsideContextMenu, {\n      capture: true,\n    });\n    return () =>\n      document.removeEventListener(\"contextmenu\", onOutsideContextMenu);\n  }, []);\n  const MaybeSuspend = suspense === false ? React.Fragment : React.Suspense;\n\n  return (\n    <Overlay>\n      <FocusScope restoreFocus={restoreFocus} autoFocus={autoFocus}>\n        <MenuOverlayContext.Provider\n          value={{\n            close: onClose,\n            defaultAutoFocus,\n          }}\n        >\n          <div\n            {...mergeProps(overlayProps, otherOverlayProps)}\n            ref={overlayRef}\n          >\n            <MaybeSuspend\n              fallback={\n                suspense === undefined ? (\n                  <DelayedLoadingSpinner size={LOADING_SPINNER_SIZE_SMALL} />\n                ) : (\n                  suspense\n                )\n              }\n            >\n              {children}\n            </MaybeSuspend>\n          </div>\n        </MenuOverlayContext.Provider>\n      </FocusScope>\n    </Overlay>\n  );\n}\n","import React, { ForwardedRef, useEffect, useMemo } from \"react\";\nimport {\n  MenuOverlay,\n  MenuOverlayProps,\n} from \"@intellij-platform/core/Menu/MenuOverlay\";\nimport { useOverlayPositionFromOrigin } from \"@intellij-platform/core/Menu/useOverlayPositionFromOrigin\";\nimport { getScrollParent, isScrollable, useObjectRef } from \"@react-aria/utils\";\nimport { createGlobalStyle } from \"styled-components\";\n\ninterface MenuOverlayFromOriginProps\n  extends Pick<MenuOverlayProps, \"onClose\" | \"defaultAutoFocus\"> {\n  /**\n   * Origin point within the viewport, based on which the menu overlay should be positioned.\n   * Any pointer/mouse event, or a plain object with clientX and clientY can be passed.\n   */\n  origin:\n    | {\n        /**\n         * Horizontal coordinate of the origin point within the viewport.\n         * See {@link MouseEvent.clientX}\n         */\n        clientX: number;\n        /**\n         * Vertical coordinate of the origin point within the viewport.\n         * See {@link MouseEvent.clientX}\n         */\n        clientY: number;\n\n        /**\n         * Origin's target element.\n         * Used to find the scrollable parent and disable scrolling while\n         * the overlay is rendered.\n         */\n        target?: EventTarget | HTMLElement | null;\n      }\n    | undefined;\n  children: React.ReactNode;\n  /**\n   * Weather the content of the popover should not grab the focus upon open\n   * @default false\n   */\n  disableAutoFocus?: boolean;\n}\n\nconst DisableScrollStyles = createGlobalStyle`\n  .disable-scroll {\n      overflow: hidden !important;\n  }\n`;\n\n/**\n * Menu overlay position based on an origin point on the screen.\n * Useful when the menu is opened by a pointer event.\n * TODO: Decouple from menu and make it OverlayFromOrigin\n */\nexport const MenuOverlayFromOrigin = React.forwardRef(\n  function MenuOverlayFromOrigin(\n    {\n      children,\n      origin,\n      disableAutoFocus = false,\n      ...otherProps\n    }: MenuOverlayFromOriginProps,\n    forwardedRef: ForwardedRef<HTMLDivElement>\n  ) {\n    const overlayRef = useObjectRef(forwardedRef);\n    const { positionProps } = useOverlayPositionFromOrigin({\n      overlayRef,\n      origin,\n      containerPadding: { x: 0, y: 4 },\n    });\n\n    const scrollParent: null | Element = useMemo(() => {\n      if (!(origin?.target instanceof HTMLElement)) {\n        return null;\n      }\n      return isScrollable(origin.target)\n        ? origin.target\n        : getScrollParent(origin.target);\n    }, [origin?.target]);\n\n    useEffect(() => {\n      // Known issue: closing contextmenu causes a jump in scroll (see project view in example app)\n      // It's an issue that existed before the change to disable scroll when the contextmenu is open,\n      // so it should not have anythign to do with changing overflow hidden when the menu is open.\n      scrollParent?.classList?.add(\"disable-scroll\");\n      return () => {\n        scrollParent?.classList?.remove(\"disable-scroll\");\n      };\n    }, []);\n\n    return (\n      <>\n        <DisableScrollStyles />\n        {Boolean(origin) && (\n          <MenuOverlay\n            overlayProps={positionProps}\n            overlayRef={overlayRef}\n            restoreFocus\n            autoFocus={!disableAutoFocus}\n            {...otherProps}\n          >\n            {children}\n          </MenuOverlay>\n        )}\n      </>\n    );\n  }\n);\n","import React, { RefObject, useLayoutEffect, useState } from \"react\";\n\n/**\n * Similar to {@link import('@react-aria/overlays').useOverlayPosition useOverlayPosition},\n * but for positioning an overlay relative to a point, typically coordinates of a mouse event.\n * It's less advanced than useOverlayPosition, not taking into account many edge cases that\n * `useOverlayPosition` does.\n * Most importantly:\n * - Window resize is not taken into account\n * - Overlay resize is not taken into account.\n *   Positioning only happens when the origin changes.\n * - There are no options for positioning options like placement, offset or crossOffset\n *\n * @see https://github.com/adobe/react-spectrum/discussions/7267\n */\nexport function useOverlayPositionFromOrigin({\n  overlayRef,\n  origin,\n  containerPadding,\n}: {\n  overlayRef: RefObject<HTMLElement>;\n  containerPadding?: number | { x: number; y: number };\n  origin: Pick<React.MouseEvent, \"clientX\" | \"clientY\"> | undefined;\n}) {\n  const [position, setPosition] = useState<{ left?: number; top?: number }>({});\n\n  useLayoutEffect(() => {\n    const overlayElement = overlayRef.current;\n    setPosition(\n      origin && overlayElement\n        ? calculatePosition({\n            clientX:\n              origin.clientX +\n              1.5 /* a tiny offset is added to avoid menu items getting hovered upon open. 1px doesn't consistently work. */,\n            clientY: origin.clientY,\n            containerPadding,\n            overlayWidth: overlayElement.offsetWidth,\n            overlayHeight: overlayElement.offsetHeight,\n          })\n        : {}\n    );\n  }, [origin?.clientX, origin?.clientY]);\n  return {\n    positionProps: {\n      style: { position: \"fixed\", zIndex: 100000, ...position } as const,\n    },\n  };\n}\n\nfunction calculatePosition({\n  clientX,\n  clientY,\n  overlayWidth,\n  overlayHeight,\n  containerPadding = 0,\n}: {\n  clientX: number;\n  clientY: number;\n  overlayWidth: number;\n  overlayHeight: number;\n  containerPadding?: number | { x: number; y: number };\n}) {\n  const totalWidth =\n    document.documentElement.clientWidth -\n    (typeof containerPadding === \"object\"\n      ? containerPadding.x\n      : containerPadding);\n  const totalHeight =\n    document.documentElement.clientHeight -\n    (typeof containerPadding === \"object\"\n      ? containerPadding.y\n      : containerPadding);\n\n  let top = clientY;\n  let left = clientX;\n\n  if (left + overlayWidth > totalWidth) {\n    left = totalWidth - overlayWidth;\n  }\n\n  if (top + overlayHeight > totalHeight) {\n    top = totalHeight - overlayHeight;\n  }\n\n  top = Math.max(0, top);\n  left = Math.max(0, left);\n\n  return { top, left };\n}\n","import React, { HTMLAttributes, RefObject } from \"react\";\nimport { useButton } from \"@react-aria/button\";\nimport { AriaMenuOptions, useMenuTrigger } from \"@react-aria/menu\";\nimport { useOverlayPosition } from \"@react-aria/overlays\";\nimport { useMenuTriggerState } from \"@react-stately/menu\";\nimport { MenuTriggerProps as AriaMenuTriggerProps } from \"@react-types/menu\";\n\nimport { MenuOverlay } from \"./MenuOverlay\";\nimport { AriaButtonProps } from \"@react-types/button\";\nimport { Alignment } from \"@react-types/shared\";\nimport { PressResponder } from \"@react-aria/interactions\";\n\nexport interface MenuTriggerProps<E extends \"button\" | \"a\" = \"button\">\n  extends Omit<AriaMenuTriggerProps, \"closeOnSelect\"> {\n  restoreFocus?: boolean;\n  // TODO: replace render function children with normal children, and utilize PressResponder. Add a story for the\n  //  edge case of custom trigger, using PressResponder\n  children:\n    | ((\n        props: \"button\" extends E\n          ? HTMLAttributes<HTMLButtonElement>\n          : HTMLAttributes<HTMLAnchorElement>,\n        ref: RefObject<any> // Using a generic didn't seem to work for some reason\n      ) => React.ReactNode)\n    | React.ReactElement;\n  // NOTE: there is a chance of unchecked breaking change here, since this is not explicitly mentioned as public API\n  // of useButton, but it is passed to the underlying usePress.\n  preventFocusOnPress?: boolean;\n  /**\n   * By default, the menu is positioned relative to the trigger. `positioningTargetRef` can be used to have the menu\n   * positioned to another element. An example use case is when the menu trigger is a button inside some list item or\n   * text box, but the menu semantically belongs to the container list item or text box.\n   */\n  positioningTargetRef?: React.RefObject<HTMLElement>;\n  elementType?: E;\n  renderMenu: (props: {\n    // AriaMenuOptions contains more properties than needed\n    menuProps: Pick<\n      AriaMenuOptions<unknown>,\n      \"id\" | \"aria-labelledby\" | \"autoFocus\" | \"onClose\"\n    >;\n  }) => React.ReactNode;\n  suspense?: React.ReactNode;\n\n  /**\n   * Alignment of the menu relative to the trigger.\n   * @default 'start'\n   */\n  align?: Alignment;\n  /**\n   * Where the Menu opens relative to its trigger.\n   * @default 'bottom'\n   */\n  direction?: \"bottom\" | \"top\" | \"left\" | \"right\" | \"start\" | \"end\";\n  /**\n   * Whether the menu should automatically flip direction when space is limited.\n   * @default true\n   */\n  shouldFlip?: boolean;\n}\n\n// FIXME: Escape doesn't close the menu\n// FIXME: Focus is not restored if nested menu are opened. It may be solved by using useOverlay and closing submenu in click outside.\n// FIXME: use PressResponder and replace render prop children with a normal react dom children. Issues with current impl:\n//  disabled trigger doesn't work as expected. props passed to children fn is html props, which is limiting for button\n//  components that don't accept arbitrary dom props.\n/**\n * Makes its children a trigger for a menu, rendered via {@link MenuTriggerProps#renderMenu} prop.\n * Closes the menu when a menu action is triggered.\n */\nexport const MenuTrigger = <E extends \"button\" | \"a\" = \"button\">({\n  children,\n  renderMenu,\n  elementType = \"button\" as E,\n  direction = \"bottom\",\n  align = \"start\",\n  shouldFlip = true,\n  restoreFocus = true,\n  preventFocusOnPress = true,\n  suspense,\n  positioningTargetRef,\n  ...otherProps\n}: MenuTriggerProps<E>) => {\n  const state = useMenuTriggerState(otherProps);\n  const triggerRef = React.useRef(null);\n  const overlayRef = React.useRef(null);\n  // FIXME: Menu props is not used, but it's just about labelBy and id. Only needed for accessibility, but it would\n  //  require a `renderMenu` prop, instead of `menu`.\n  const { menuTriggerProps: triggerProps, menuProps } = useMenuTrigger(\n    { type: \"menu\" },\n    state,\n    triggerRef\n  );\n  const ariaButtonProps: AriaButtonProps<E> = {\n    ...triggerProps,\n    elementType,\n    preventFocusOnPress,\n  };\n  const { buttonProps } = useButton(ariaButtonProps, triggerRef);\n\n  const { overlayProps: positionProps } = useOverlayPosition({\n    targetRef: positioningTargetRef ?? triggerRef,\n    overlayRef,\n    placement: getPlacement(direction, align),\n    shouldFlip,\n    offset: 0,\n    containerPadding: 0,\n    onClose: () => state.close(),\n    isOpen: state.isOpen,\n  });\n\n  return (\n    <>\n      {typeof children === \"function\" ? (\n        children(buttonProps, triggerRef)\n      ) : (\n        <PressResponder ref={triggerRef} {...buttonProps}>\n          {children}\n        </PressResponder>\n      )}\n      {state.isOpen && (\n        <MenuOverlay\n          overlayProps={positionProps}\n          overlayRef={overlayRef}\n          onClose={state.close}\n          restoreFocus={restoreFocus}\n          suspense={suspense}\n        >\n          {renderMenu({ menuProps })}\n        </MenuOverlay>\n      )}\n    </>\n  );\n};\n\nfunction getPlacement(\n  direction: Required<MenuTriggerProps>[\"direction\"],\n  align: Required<MenuTriggerProps>[\"align\"]\n) {\n  switch (direction) {\n    case \"left\":\n    case \"right\":\n    case \"start\":\n    case \"end\":\n      return `${direction} ${align === \"end\" ? \"bottom\" : \"top\"}` as const;\n    case \"bottom\":\n    case \"top\":\n    default:\n      return `${direction} ${align}` as const;\n  }\n}\n","import React, {\n  HTMLAttributes,\n  RefObject,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { Node } from \"@react-types/shared\";\nimport {\n  mergeProps,\n  useLayoutEffect,\n  useResizeObserver,\n} from \"@react-aria/utils\";\nimport { focusSafely } from \"@react-aria/focus\";\nimport { ListCollection } from \"@react-stately/list\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { useEventCallback } from \"@intellij-platform/core/utils/useEventCallback\";\nimport {\n  useCollectionSpeedSearch,\n  CollectionSpeedSearchMatches,\n} from \"@intellij-platform/core/CollectionSpeedSearch\";\nimport {\n  SpeedSearchInput,\n  SpeedSearchPopupProps,\n  SpeedSearchState,\n} from \"@intellij-platform/core/SpeedSearch\";\n\nimport { StyledMenu } from \"./StyledMenu\";\nimport { MenuContext, MenuProps, useMenu, useMenuState } from \"./Menu\";\nimport { renderMenuNodes } from \"./renderMenuNodes\";\nimport { SubmenuProps, useSubmenu } from \"./Submenu\";\nimport { useSubmenuState } from \"./_useSubmenuState\";\nimport { MenuKeyboardDelegate } from \"./_useSubmenu\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { StyledVerticalSeparator } from \"@intellij-platform/core/StyledSeparator\";\n\nexport interface SpeedSearchMenuProps<T>\n  extends Omit<MenuProps<T>, \"submenuBehavior\"> {\n  submenuBehavior?: Exclude<MenuProps<T>[\"submenuBehavior\"], \"default\">;\n  /**\n   * Text to show when the filtering is active but no match is found for the current query.\n   * @default \"Nothing to show\"\n   */\n  emptyText?: React.ReactNode;\n}\n\nconst StyledItemsContainer = styled.ul`\n  all: unset;\n  flex: 1;\n  overflow: auto;\n`;\n\nconst StyledSearchFieldWrapper = styled.div`\n  flex-shrink: 0;\n  padding: 0 0.2rem 0.3rem;\n`;\n\nconst StyledSpeedSearchMenu = styled(StyledMenu)`\n  --jui-menu-item-padding: 1.25rem;\n  ${StyledVerticalSeparator} {\n    margin: 0 3px; // FIXME: probably use theme\n  }\n`;\n\nconst StyledPlaceholder = styled.div`\n  color: ${({ theme }) =>\n    // Ref: StatusText => DEFAULT_ATTRIBUTES => SimpleTextAttributes.GRAYED_ATTRIBUTES\n    theme.color(\n      \"Component.infoForeground\",\n      theme.dark ? \"#787878\" : \"#999999\"\n    )};\n\n  // center positioning. Intentionally different from reference impl.\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n\n  white-space: nowrap;\n`;\n\nfunction useSpeedSearchMenu<T>(\n  state: TreeState<T>,\n  rootKey: React.Key | null,\n  ref: React.RefObject<HTMLUListElement>,\n  containerRef: React.RefObject<HTMLDivElement>\n) {\n  const {\n    speedSearch,\n    selectionManager,\n    keyboardDelegate,\n    containerProps: speedSearchContainerProps,\n    searchPopupProps,\n  } = useCollectionSpeedSearch({\n    collection: useMemo(\n      () =>\n        new ListCollection(\n          rootKey\n            ? state.collection.getItem(rootKey)?.childNodes ?? []\n            : state.collection\n        ),\n      [rootKey, state.collection]\n    ),\n    selectionManager: state.selectionManager,\n    keyboardDelegate: new MenuKeyboardDelegate(\n      rootKey,\n      state.collection,\n      state.disabledKeys,\n      ref\n    ),\n    keepSearchActiveOnBlur: true,\n    focusBestMatch: true,\n    ref,\n  });\n\n  // When a menu item which was focused is filtered out, the focus goes to body.\n  // We manually move focus back to the container.\n  useEffect(() => {\n    const element = ref.current;\n    if (\n      element &&\n      state.selectionManager.isFocused &&\n      !element?.contains(document.activeElement)\n    ) {\n      focusSafely(element);\n    }\n  });\n\n  const lastSize = useRef<{ width: number; height: number } | null>(null);\n  const [size, setSize] = useState<{ width: number; height: number } | null>(\n    null\n  );\n  const measureSize = () => {\n    const { offsetWidth = 0, offsetHeight = 0 } = containerRef.current || {};\n    if (offsetWidth > 0 && offsetHeight > 0) {\n      lastSize.current = {\n        width: offsetWidth,\n        height: offsetHeight,\n      };\n    }\n  };\n  const isSearchActive =\n    speedSearch.active && speedSearch.searchTerm.length > 0;\n  useResizeObserver({\n    ref: containerRef,\n    onResize: useEventCallback(() => {\n      if (!isSearchActive) {\n        measureSize();\n      }\n    }),\n  });\n  useLayoutEffect(() => {\n    if (isSearchActive) {\n      if (lastSize.current) {\n        setSize(lastSize.current);\n      }\n    } else {\n      if (!lastSize.current) {\n        measureSize();\n      }\n      setSize(null);\n    }\n  }, [isSearchActive]);\n\n  const sizeStyleProps: HTMLAttributes<HTMLElement> = size\n    ? {\n        style: {\n          ...size,\n          minHeight: size.height,\n          maxHeight: size.height,\n        },\n      }\n    : {};\n  return {\n    speedSearch,\n    keyboardDelegate,\n    selectionManager,\n    speedSearchContainerProps: mergeProps<HTMLAttributes<HTMLElement>[]>(\n      speedSearchContainerProps,\n      sizeStyleProps,\n      {\n        onMouseDown: (e: React.MouseEvent) => {\n          // Until SearchInput and connecting that to a selectable list is implemented, we should prevent menu from\n          // losing focus when the fake search input is clicked\n          e.preventDefault();\n        },\n      }\n    ),\n    searchPopupProps,\n  };\n}\n\n/**\n * Drop-in replacement for Menu, which implements SpeedSearch.\n *\n *\n */\nexport const SpeedSearchMenu = <T extends object>({\n  submenuBehavior = \"toggleOnPress\",\n  autoFocus = \"first\",\n  emptyText = \"Nothing to show\",\n  minWidth,\n  ...props\n}: SpeedSearchMenuProps<T>) => {\n  const onAction = (key: React.Key) => {\n    props.onAction?.(key);\n    speedSearch.clear();\n  };\n  const ref = React.useRef<HTMLUListElement>(null);\n  const containerRef = React.useRef<HTMLDivElement>(null);\n  const state = useMenuState({ ...props });\n  const {\n    speedSearch,\n    speedSearchContainerProps,\n    searchPopupProps,\n    keyboardDelegate,\n  } = useSpeedSearchMenu(state, null, ref, containerRef);\n  const { menuContextValue, menuProps } = useMenu(\n    {\n      ...props,\n      autoFocus,\n      onAction,\n      keyboardDelegate,\n      submenuBehavior,\n    },\n    state,\n    ref\n  );\n\n  return (\n    <MenuContext.Provider\n      value={{\n        ...menuContextValue,\n        renderSubmenu: (props) => (\n          <SpeedSearchSubmenu emptyText={emptyText} {...props} />\n        ),\n      }}\n    >\n      <StyledSpeedSearchMenu\n        as=\"div\"\n        ref={containerRef}\n        style={{ minWidth }}\n        {...speedSearchContainerProps}\n        fillAvailableSpace={props.fillAvailableSpace}\n      >\n        <SpeedSearchMenuContent\n          items={[...state.collection]}\n          emptyText={emptyText}\n          speedSearch={speedSearch}\n          searchPopupProps={searchPopupProps}\n          state={state}\n          menuProps={menuProps}\n          menuRef={ref}\n        />\n      </StyledSpeedSearchMenu>\n    </MenuContext.Provider>\n  );\n};\n\nfunction SpeedSearchMenuContent<T>({\n  items,\n  state,\n  speedSearch,\n  searchPopupProps,\n  menuProps,\n  menuRef,\n  emptyText,\n}: {\n  state: TreeState<T>;\n  items: Node<T>[];\n  speedSearch: SpeedSearchState & { matches: CollectionSpeedSearchMatches };\n  searchPopupProps: SpeedSearchPopupProps;\n  menuProps: HTMLAttributes<HTMLElement>;\n  menuRef: RefObject<HTMLUListElement>;\n  emptyText: React.ReactNode;\n}) {\n  const filter = speedSearch.active\n    ? ({ key, type }: Node<T>) =>\n        type !== \"item\" || speedSearch.matches.has(key)\n    : undefined;\n  return (\n    <>\n      {searchPopupProps.children && (\n        <StyledSearchFieldWrapper\n          onClick={(e) => {\n            e.preventDefault();\n          }}\n        >\n          <SpeedSearchInput {...searchPopupProps} clear={speedSearch.clear} />\n        </StyledSearchFieldWrapper>\n      )}\n      <StyledItemsContainer {...menuProps} ref={menuRef}>\n        {renderMenuNodes(state, items, filter)}\n        {speedSearch.active && speedSearch.matches.size === 0 && (\n          <StyledPlaceholder>{emptyText}</StyledPlaceholder>\n        )}\n      </StyledItemsContainer>\n    </>\n  );\n}\n\nfunction SpeedSearchSubmenu<T>({\n  parentState,\n  rootKey,\n  emptyText,\n}: SubmenuProps<T> & { emptyText: React.ReactNode }) {\n  const ref = useRef<HTMLUListElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const state = useSubmenuState(parentState);\n  const rootItem = state.collection.getItem(rootKey);\n\n  const {\n    speedSearch,\n    speedSearchContainerProps,\n    searchPopupProps,\n    keyboardDelegate,\n  } = useSpeedSearchMenu(state, rootKey, ref, containerRef);\n  const { submenuProps } = useSubmenu(\n    { rootKey, parentState, keyboardDelegate },\n    state,\n    ref\n  );\n\n  return (\n    <StyledSpeedSearchMenu\n      {...speedSearchContainerProps}\n      as=\"div\"\n      ref={containerRef}\n    >\n      <SpeedSearchMenuContent\n        items={[...(rootItem?.childNodes || [])]}\n        speedSearch={speedSearch}\n        searchPopupProps={searchPopupProps}\n        state={state}\n        menuProps={submenuProps}\n        menuRef={ref}\n        emptyText={emptyText}\n      />\n    </StyledSpeedSearchMenu>\n  );\n}\n","import { css } from \"styled-components\";\n\nimport { WINDOW_SHADOW } from \"../style-constants\";\nimport { styled } from \"../styled\";\nimport { StyledVerticalSeparator } from \"../StyledSeparator\";\nimport { UnknownThemeProp } from \"../Theme/Theme\";\n\nimport { StyledMenuItem, StyledMenuItemIcon } from \"./StyledMenuItem\";\n\nexport const MENU_VERTICAL_PADDING = 5;\nexport const MENU_BORDER_WIDTH = 1;\n\n// noinspection CssInvalidPropertyValue\nexport const StyledMenu = styled.ul<{ fillAvailableSpace?: boolean }>`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  font-size: 0.8rem;\n  margin: 0;\n  padding: ${MENU_VERTICAL_PADDING}px 0;\n  outline: none;\n  list-style: none;\n  width: fit-content;\n  min-width: 120px;\n  overflow: auto;\n  // Border doesn't seem to be painted in the original impl. IdeaPopupMenuUI.isUnderPopup(c) seemed to return false\n  // in all cases. More info: https://github.com/JetBrains/intellij-community/blob/c5ece483811a3ab546fc3880225efb02cc8b94dd/platform/platform-impl/src/com/intellij/ide/ui/laf/darcula/ui/DarculaPopupMenuBorder.java#L24\n  /*  border: ${MENU_BORDER_WIDTH}px solid\n    ${({ theme }) =>\n    theme.color(\"Menu.borderColor\", !theme.dark ? \"#CDCDCD\" : \"#515151\")};*/\n  ${WINDOW_SHADOW};\n  background: ${({ theme }) =>\n    theme.color(\n      \"PopupMenu.background\" as UnknownThemeProp<\"PopupMenu.background\">\n    )};\n  color: ${({ theme }) =>\n    theme.color(\n      \"PopupMenu.foreground\" as UnknownThemeProp<\"PopupMenu.foreground\">\n    )};\n\n  ${StyledVerticalSeparator}:first-child,\n  ${StyledVerticalSeparator}:last-child, \n  ${StyledVerticalSeparator} + ${StyledVerticalSeparator} {\n    display: none;\n  }\n  ${StyledVerticalSeparator} {\n    background-color: ${({ theme }) => theme.color(\"Menu.separatorColor\")};\n    height: ${({ theme }) =>\n      `${theme.value(\"PopupMenuSeparator.height\") ?? 3}px`};\n    padding: ${({ theme }) =>\n      `${theme.value(\"PopupMenuSeparator.stripeIndent\") ?? 1}px 0`};\n    margin: ${({ theme }) =>\n      `0 ${theme.value(\"PopupMenuSeparator.withToEdge\") ?? 1}px`};\n  }\n  ${({ fillAvailableSpace }) =>\n    fillAvailableSpace &&\n    css`\n      flex: 1;\n      width: fill-available; // will be converted to --webkit-fill-available and --moz-available, but doesn't work in FF\n      height: fill-available;\n    `}\n\n  --jui-menu-item-padding: 1rem;\n  --jui-menu-item-icon-width: 1rem;\n  --jui-menu-item-icon-spacing: 0.3125rem;\n\n  ${StyledMenuItem} {\n    // NOTE: The left margin seems not to be consistent in all menus.\n    padding-left: var(--jui-menu-item-padding);\n  }\n  &:has(${StyledMenuItemIcon}) {\n    // Adjusting item padding for menus with icon to be slightly smaller. Based on observations on the reference impl.\n    // Could be handled by a negative margin on icons as well.\n    --jui-menu-item-padding: 0.75rem;\n\n    // CSS-only solution to conditionally add left margin to menu items without icon, if there is at least one menu item\n    // with icon, in the current menu. To have text in all menu items aligned. The extra margin is avoided if there is no\n    // menu item with icon. It relies on :has() css pseudo-class which is not supported in FF at the moment.\n    ${StyledMenuItem}:not(:has(${StyledMenuItemIcon})) {\n      padding-left: calc(\n        var(--jui-menu-item-padding) + var(--jui-menu-item-icon-width) +\n          var(--jui-menu-item-icon-spacing)\n      );\n    }\n  }\n  ${StyledMenuItemIcon} {\n    width: var(--jui-menu-item-icon-width);\n    margin-right: var(--jui-menu-item-icon-spacing);\n  }\n`;\n","import { css, styled } from \"@intellij-platform/core/styled\";\n\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nexport const StyledMenuItemIcon = styled.span`\n  display: inline-flex; // prevents unwanted increased height\n`;\n\nexport const StyledNestedArrow = styled.span`\n  display: inline-flex; // to make it not take more height than the icon\n  margin-right: -0.75rem;\n  margin-left: 0.75rem;\n`;\n\nconst highlightedStyle = css`\n  color: ${({ theme }) =>\n    theme.asCurrentForeground(\n      theme.color(\n        \"MenuItem.selectionForeground\" as UnknownThemeProp<\"MenuItem.selectionForeground\">\n      )\n    )};\n  background: ${({ theme }) =>\n    theme.color(\n      \"MenuItem.selectionBackground\" as UnknownThemeProp<\"MenuItem.selectionBackground\">\n    )};\n`;\nconst defaultStyle = css`\n  color: ${({ theme }) =>\n    theme.color(\n      \"MenuItem.foreground\" as UnknownThemeProp<\"MenuItem.foreground\">\n    )};\n  background: unset;\n`;\nconst disabledStyle = css`\n  color: ${({ theme }) =>\n    theme.color(\"MenuItem.disabledForeground\") + \"!important\"};\n  background: unset !important;\n`;\nexport const StyledMenuItem = styled.li<{\n  isDisabled: boolean;\n  isActive: boolean;\n}>`\n  position: relative; // for being able to position arrow icon absolutely\n  outline: none;\n  cursor: default;\n  white-space: nowrap;\n\n  // bg/fg style for different states. Order is based on how they should override each other\n  ${defaultStyle};\n  ${({ isActive }) => isActive && highlightedStyle};\n  ${({ isDisabled }) => isDisabled && disabledStyle};\n\n  padding-right: 1.25rem;\n  line-height: 1.3125rem; // to make the item have the right height\n  display: flex;\n  align-items: center;\n`;\n","import React, { useContext, useEffect, useRef } from \"react\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { AriaMenuOptions, useMenu } from \"@react-aria/menu\";\nimport { mergeProps } from \"@react-aria/utils\";\n\nimport {\n  MenuKeyboardDelegate,\n  useSubmenu as useSubmenuAria,\n} from \"./_useSubmenu\";\nimport { useSubmenuState } from \"./_useSubmenuState\";\nimport { MenuContext } from \"./Menu\";\nimport { StyledMenu } from \"./StyledMenu\";\nimport { renderMenuNodes } from \"./renderMenuNodes\";\n\nexport function useSubmenu<T>(\n  {\n    rootKey,\n    parentState,\n    keyboardDelegate,\n  }: { rootKey: React.Key; parentState: TreeState<T> } & Pick<\n    AriaMenuOptions<T>,\n    \"keyboardDelegate\"\n  >,\n  state: TreeState<T>,\n  ref: React.RefObject<HTMLElement>\n) {\n  const rootItem = state.collection.getItem(rootKey);\n  const {\n    submenuBehavior,\n    autoFocus = true,\n    onClose,\n    onAction,\n  } = useContext(MenuContext);\n  let { menuProps } = useMenu(\n    {\n      \"aria-label\": rootItem?.[\"aria-label\"] || rootItem?.textValue,\n      onAction,\n      onClose,\n      selectedKeys: state.selectionManager.selectedKeys,\n      keyboardDelegate:\n        keyboardDelegate ||\n        new MenuKeyboardDelegate(\n          rootKey,\n          state.collection,\n          state.disabledKeys,\n          ref\n        ),\n      autoFocus,\n    },\n    state,\n    ref\n  );\n  const { submenuProps } = useSubmenuAria({ rootKey }, parentState, ref);\n\n  const submenuBehaviorProps = {\n    onKeyDown: (e: React.KeyboardEvent) => {\n      if (e.key === \"Escape\") {\n        // Close the menu and submenu root node.\n        state.toggleKey(rootKey);\n        state.selectionManager.setFocusedKey(rootKey);\n        parentState.selectionManager.setFocused(true);\n        if (submenuBehavior !== \"default\") {\n          e.stopPropagation();\n        }\n        return;\n      }\n    },\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      // we need this hack until the nested menu is properly supported. That's because when the element is hovered\n      // it sets the focus key, which will move focus to that item.\n      // noinspection PointlessBooleanExpressionJS seems to be false positive. autoFocus can be \"first\" or \"last\"\n      if (autoFocus === true) {\n        ref.current?.focus();\n      }\n    });\n  }, []);\n\n  return {\n    submenuProps: mergeProps(menuProps, submenuProps, submenuBehaviorProps),\n  };\n}\n\nexport interface SubmenuProps<T> {\n  parentState: TreeState<T>;\n  rootKey: React.Key;\n}\n\nexport function Submenu<T>({ parentState, rootKey }: SubmenuProps<T>) {\n  const ref = useRef<HTMLUListElement>(null);\n  const state = useSubmenuState(parentState);\n  const rootItem = state.collection.getItem(rootKey);\n\n  const { submenuProps } = useSubmenu({ rootKey, parentState }, state, ref);\n\n  return (\n    <StyledMenu {...submenuProps} ref={ref}>\n      {renderMenuNodes(state, [...(rootItem?.childNodes || [])])}\n    </StyledMenu>\n  );\n}\n","import { Collection, Node } from \"@react-types/shared\";\nimport { TreeState } from \"@react-stately/tree\";\nimport React, { Key, RefObject } from \"react\";\nimport { useKeyboard } from \"@react-aria/interactions\";\nimport { ListKeyboardDelegate } from \"@react-aria/selection\";\n\nexport class MenuKeyboardDelegate<T> extends ListKeyboardDelegate<T> {\n  private keys: React.Key[];\n  constructor(\n    rootKey: Key | null,\n    private collection: Collection<Node<T>>,\n    disabledKeys: Set<React.Key>,\n    ref: React.RefObject<HTMLElement>,\n    collator?: Intl.Collator\n  ) {\n    super(collection, disabledKeys, ref, collator);\n    this.keys = [...collection.getKeys()]\n      .map((key) => collection.getItem(key))\n      .flatMap((item) => {\n        if (item && item.parentKey == rootKey) {\n          if (item.type === \"item\") {\n            return [item.key];\n          } else if (item.type === \"section\") {\n            return [...item.childNodes].map(({ key }) => key);\n          }\n        }\n        return [];\n      });\n  }\n\n  getFirstKey(): React.Key {\n    return this.keys[0];\n  }\n  getLastKey(): React.Key {\n    return this.keys.slice(-1)[0];\n  }\n\n  getKeyBelow(key: React.Key): React.Key {\n    const keyBelow = super.getKeyBelow(key);\n    // @ts-expect-error: getKeyBelow should be allowed to return null, but typing is currently inaccurate in react-aria\n    return this.keys.includes(keyBelow) ? keyBelow : null;\n  }\n  getKeyAbove(key: React.Key): React.Key {\n    const keyAbove = super.getKeyAbove(key);\n    // @ts-expect-error: getKeyBelow should be allowed to return null, but typing is currently inaccurate in react-aria\n    return this.keys.includes(keyAbove) ? keyAbove : null;\n  }\n}\n\n/**\n * Behavior accessibility of submenus:\n * - Closing submenu on ArrowLeft key press.\n *   Note that it can't be implemented in useMenuItem, because the focus might be on no the submenu itself and not any\n *   of its items\n * @param rootKey: Key of the root node, the submenu is created from its children\n * @param state\n * @param ref\n */\nexport function useSubmenu<T>(\n  { rootKey }: { rootKey: Key },\n  state: TreeState<T>,\n  ref: RefObject<HTMLElement>\n) {\n  const { keyboardProps: submenuProps } = useKeyboard({\n    onKeyDown: (e) => {\n      // Keyboard events bubble through portals. Don't handle keyboard events\n      // for elements outside the collection (e.g. menus).\n      if (!ref.current?.contains(e.target as Element)) {\n        e.continuePropagation();\n        return;\n      }\n      const root = state.collection.getItem(rootKey);\n      if (e.key === \"ArrowLeft\" && root && state.expandedKeys.has(root.key)) {\n        state.toggleKey(root.key);\n        state.selectionManager.setFocused(true);\n        return;\n      }\n      e.continuePropagation();\n    },\n  });\n\n  return {\n    submenuProps,\n  };\n}\n","import { TreeState } from \"@react-stately/tree\";\nimport { Key, useRef, useState } from \"react\";\nimport {\n  MultipleSelectionState,\n  SelectionManager,\n} from \"@react-stately/selection\";\n\n/**\n * Creates a TreeState corresponding to the submenu, from the state of a parent (sub)menu.\n * The collection and everything is the same, and the only difference from the parent state is selection manager\n * having a separate focused state to keep the focused state of each menu container separately, as the submenus\n * are usually rendered in separate overlays.\n */\nexport function useSubmenuState<T>(parentState: TreeState<T>) {\n  // We want synchronous updates to `isFocused` and `focusedKey` after their setters are called.\n  // But we also need to trigger a re-render. So, we have both a ref (sync) and state (async).\n  const [, setFocused] = useState(false);\n  const [, setFocusedKey] = useState<Key | null>(null);\n  const isFocusedRef = useRef(false);\n  const focusedKeyRef = useRef<Key | null>(null);\n\n  const state: MultipleSelectionState = {\n    // @ts-expect-error state is private\n    ...parentState.selectionManager.state,\n    setFocused: (isFocused: boolean) => {\n      isFocusedRef.current = isFocused;\n      setFocused(isFocused);\n    },\n    setFocusedKey(key: Key) {\n      focusedKeyRef.current = key;\n      setFocusedKey(key);\n    },\n  };\n  Object.defineProperties(state, {\n    isFocused: {\n      get() {\n        return isFocusedRef.current;\n      },\n    },\n    focusedKey: {\n      get() {\n        return focusedKeyRef.current!;\n      },\n    },\n  });\n\n  return {\n    ...parentState,\n    selectionManager: new SelectionManager(parentState.collection, state),\n  };\n}\n","import React from \"react\";\nimport { useMenuSection } from \"@react-aria/menu\";\nimport { Node } from \"@react-types/shared\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { styled } from \"@intellij-platform/core/styled\";\n\nimport { renderMenuNodes } from \"./renderMenuNodes\";\n\nexport interface MenuSectionProps<T> {\n  item: Node<T>;\n  state: TreeState<T>;\n  filter?: (node: Node<T>) => boolean;\n}\n\nconst StyledMenuHeading = styled.div`\n  cursor: default;\n  padding: 2px 0 2px 12px;\n  font-weight: bold;\n  font-size: 0.8125rem;\n  color: ${({ theme }) =>\n    theme.color(\n      \"MenuItem.disabledForeground\"\n    )}; // TODO: make sure about it. It's probably not correct color\n`;\n\nconst StyledMenuSectionItemsContainer = styled.ul`\n  padding: 0;\n  margin: 0;\n`;\n\nexport const MenuSection = <T extends unknown>({\n  item,\n  state,\n  filter = () => true,\n}: MenuSectionProps<T>): React.ReactElement => {\n  let { itemProps, headingProps, groupProps } = useMenuSection({\n    heading: item.rendered,\n    \"aria-label\": item[\"aria-label\"],\n  });\n\n  const nodes = [...item.childNodes].filter(filter);\n  if (nodes.filter(({ type }) => type === \"item\").length === 0) {\n    return <></>;\n  }\n  return (\n    <>\n      <li {...itemProps}>\n        {item.rendered && (\n          <StyledMenuHeading {...headingProps}>\n            {item.rendered}\n          </StyledMenuHeading>\n        )}\n        <StyledMenuSectionItemsContainer {...groupProps}>\n          {renderMenuNodes(state, nodes)}\n        </StyledMenuSectionItemsContainer>\n      </li>\n    </>\n  );\n};\n","import React from \"react\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { Node } from \"@react-types/shared\";\nimport { ListDivider } from \"@intellij-platform/core/List/ListDivider\"; // private import\n\nimport { MenuItem } from \"./MenuItem\";\nimport { MenuSection } from \"./MenuSection\";\n\nexport function renderMenuNodes<T>(\n  state: TreeState<T>,\n  nodes: Node<T>[],\n  filter: (node: Node<T>) => boolean = () => true\n) {\n  return nodes.filter(filter).map((node) => {\n    switch (node.type) {\n      case \"item\":\n        return <MenuItem key={node.key} item={node} state={state} />;\n      case \"section\":\n        return (\n          <>\n            {node.props.hasDivider && (\n              <ListDivider key={node.key + \"-divider1\"} />\n            )}\n            <MenuSection\n              key={node.key}\n              item={node}\n              state={state}\n              filter={filter}\n            />\n            {node.props.hasDivider && (\n              <ListDivider key={node.key + \"-divider2\"} />\n            )}\n          </>\n        );\n      case \"divider\":\n        return <ListDivider key={node.key} />;\n    }\n  });\n}\n","import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { useEventCallback } from \"@intellij-platform/core/utils/useEventCallback\";\n\nexport interface MnemonicProps {\n  children: React.ReactNode;\n  /**\n   * Character to be used as {@link https://jetbrains.design/intellij/principles/mnemonics/ mnemonic}.\n   */\n  mnemonic: string;\n  /**\n   * Called when mnemonic key is pressed with the activator key\n   */\n  onTriggered?: () => void;\n\n  /**\n   * Whether the mnemonic is disabled. Useful when setting mnemonic on disable-able components, to just pass\n   * isDisabled prop down to MnemonicTrigger\n   */\n  isDisabled?: boolean;\n}\n\nconst MnemonicContext = createContext<{\n  character: string | null;\n  rendered: () => void;\n  /**\n   * Called when mnemonic is found in the text of the trigger component and rendered underlined, so the user\n   * can have a chance to know how to trigger the component's action via mnemonic.\n   */\n  active: boolean;\n}>({ character: null, active: false, rendered: () => {} });\n\nexport const MnemonicTrigger = ({\n  children,\n  mnemonic,\n  isDisabled,\n  onTriggered: onTriggeredProp = () => {},\n}: MnemonicProps): JSX.Element => {\n  const ref = useRef<HTMLElement>(null);\n  const onTriggered = useEventCallback(onTriggeredProp);\n  const [active, setActive] = useState(false);\n  const keydownListener = useEventCallback((e: KeyboardEvent) => {\n    if (isDisabled) {\n      return;\n    }\n    if (active && !e.repeat) {\n      const character = e.code.match(/Key([A-Z])/)?.[1];\n      if (character && character.toLowerCase() === mnemonic.toLowerCase()) {\n        e.preventDefault();\n        onTriggered();\n      }\n    }\n    if (e.key === \"Alt\" && ref.current && isAccessible(ref.current)) {\n      setActive(true);\n    }\n  });\n\n  useEffect(() => {\n    // calling addEventListener with already registered listener is no-op.\n    document.addEventListener(\"keydown\", keydownListener);\n    document.addEventListener(\"keyup\", keyupListener);\n    window.addEventListener(\"blur\", onBlur);\n    function onBlur() {\n      setActive(false);\n    }\n    function keyupListener(e: KeyboardEvent) {\n      if (e.key === \"Alt\") {\n        setActive(false);\n      }\n    }\n    return () => {\n      document.removeEventListener(\"keydown\", keydownListener);\n      document.removeEventListener(\"keyup\", keyupListener);\n      window.removeEventListener(\"blur\", onBlur);\n    };\n  }, []);\n\n  const renderedMnemonicRef = useRef<string>(\"\");\n  useEffect(() => {\n    const timerId = setTimeout(() => {\n      if (renderedMnemonicRef.current !== mnemonic) {\n        console.warn(\n          `Mnemonic ${mnemonic} was set but not rendered to the user. \nMake sure the specified character is rendered directly in MnemonicTrigger, or wrapped by MnemonicText inside MnemonicTrigger children. \nElement:`,\n          ref.current?.parentElement\n        );\n      }\n    });\n    return () => {\n      clearTimeout(timerId);\n    };\n  }, [mnemonic]);\n  return (\n    <MnemonicContext.Provider\n      value={{\n        character: mnemonic,\n        active,\n        rendered: () => {\n          renderedMnemonicRef.current = mnemonic;\n        },\n      }}\n    >\n      <span hidden ref={ref} />\n      {typeof children === \"string\" ? (\n        <MnemonicText>{children}</MnemonicText>\n      ) : (\n        children\n      )}\n    </MnemonicContext.Provider>\n  );\n};\n\n/**\n * Checks if a\n * See more in ./design-decisions.md\n */\nfunction isAccessible(element: Element): boolean {\n  return (\n    !element.closest(\"[aria-hidden]\") &&\n    element.parentElement !== null &&\n    isVisible(element.parentElement)\n  );\n}\nfunction isVisible(e: HTMLElement) {\n  return !!(e.offsetWidth || e.offsetHeight || e.getClientRects().length);\n}\n/**\n * Used inside MnemonicTrigger children, when the direct child can't be a string.\n * @example\n * ```tsx\n * <MnemonicTrigger mnemonic=\"D\">\n *    <>\n *      <MnemonicText>Disconnect</MnemonicText>\n *    </>\n * </MnemonicTrigger>\n * ```\n */\nexport function MnemonicText({ children }: { children: string }) {\n  const { character, active, rendered } = useContext(MnemonicContext);\n  if (character) {\n    const index =\n      [\n        // Prioritizing word start.\n        // E.g. \"Include disabled actions\".\n        // In the reference impl, mnemonic is specified by \"_\" before a character and therefore the index is pre-determined.\n        // But that comes with its own problems and doesn't seem necessary.\n        children.match(new RegExp(`^${character}`, \"i\"))?.index ?? -1,\n        (children.match(new RegExp(` ${character}`, \"i\"))?.index ?? -2) + 1,\n        children.toLowerCase().indexOf(character.toLowerCase()),\n      ].find((index) => index >= 0) ?? -1;\n    const found = index > -1;\n    if (found) {\n      rendered();\n    }\n    if (found && active) {\n      return (\n        <>\n          {children.slice(0, index)}\n          <u>{children.slice(index, index + 1)}</u>\n          {children.slice(index + 1)}\n        </>\n      );\n    }\n  }\n  return <>{children}</>;\n}\n","import { useEventCallback } from \"@intellij-platform/core/utils/useEventCallback\";\nimport React, { useEffect } from \"react\";\n\n/**\n * A workaround for an issue in measuring overlay size, caused by a limitation/bug in how React 17 runs effects when\n * children suspend rendering: https://github.com/facebook/react/issues/21510\n *\n * Here is a simplified demonstration of the issue:\n * Expected behavior (React 18): https://codesandbox.io/s/parent-effects-suspense-v18-38m8p7?file=/src/App.tsx\n * Broken behavior (React 17): https://codesandbox.io/s/parent-effects-suspense-v17-h39g4g\n *\n * The overlay content size measuring runs in an effect, and that effect won't run when the content is rendered after\n * suspense.\n */\nexport function UNSAFE_React17SuspenseFix({\n  measureContentSize,\n  children,\n}: {\n  measureContentSize: () => void;\n  children: React.ReactNode;\n}) {\n  if (React.version.startsWith(\"17\")) {\n    return (\n      <React.Suspense\n        fallback={\n          <NullSuspenseFallback afterUnsuspended={measureContentSize} />\n        }\n      >\n        {children}\n      </React.Suspense>\n    );\n  }\n  return <>{children}</>;\n}\n\nfunction NullSuspenseFallback({\n  afterSuspended: afterSuspendedProp = () => {},\n  afterUnsuspended: afterUnsuspendedProp = () => {},\n}: {\n  afterUnsuspended?: () => void;\n  afterSuspended?: () => void;\n}) {\n  const afterSuspended = useEventCallback(afterSuspendedProp);\n  const afterUnsuspended = useEventCallback(afterUnsuspendedProp);\n  useEffect(() => {\n    afterSuspended?.();\n    return () => {\n      afterUnsuspended?.();\n    };\n  }, []);\n  return null;\n}\n","import React, { RefObject, useContext } from \"react\";\nimport { useOverlayTriggerState } from \"@react-stately/overlays\";\nimport {\n  Overlay,\n  useModalOverlay,\n  usePreventScroll,\n} from \"@react-aria/overlays\";\nimport { FocusScope } from \"@react-aria/focus\";\nimport { DOMAttributes } from \"@react-types/shared\";\nimport { useDialog } from \"@react-aria/dialog\";\nimport { AriaDialogProps } from \"@react-types/dialog\"; // temporary phantom dependency\nimport { css, styled } from \"@intellij-platform/core/styled\";\nimport { isMac, mergeProps } from \"@react-aria/utils\";\nimport {\n  OverlayInteractionHandler,\n  OverlayResizeHandles,\n  ResizableMovableOverlayOptions,\n  useResizableMovableOverlay,\n} from \"@intellij-platform/core/Overlay\";\nimport { WindowContext } from \"@intellij-platform/core/ModalWindow/WindowContext\";\nimport { UNSAFE_React17SuspenseFix } from \"@intellij-platform/core/Overlay/UNSAFE_React17SuspenseFix\";\nimport { DelayedLoadingSpinner } from \"@intellij-platform/core/LoadingSpinner\";\n\nexport interface ModalWindowProps\n  extends AriaDialogProps,\n    ResizableMovableOverlayOptions {\n  children: React.ReactNode;\n  className?: string;\n  onClose?: () => void;\n  /**\n   * By default, a Suspense boundary is included around the overlays\n   * to avoid suspended renders from bubbling up into\n   * the higher levels of the application.\n   * The suspense boundary is around the overlay itself, and *inside* the modal\n   * underlay (if any), which means the interaction with background content\n   * will immediately get blocked until rendering is unsuspended.\n   * Pass `false` if you don't want this behavior.\n   * Pass anything else to render a custom Suspense fallback.\n   */\n  suspense?: React.ReactNode;\n}\n\nconst StyledWindowUnderlay = styled.div`\n  position: fixed;\n  z-index: 1000; // FIXME: z-index should not be hard-coded like this\n  inset: 0;\n  align-content: center; // for loading\n`;\n\nconst WINDOW_SHADOW = isMac()\n  ? css`\n      box-shadow: 0 22px 70px 4px rgba(0, 0, 0, 0.56),\n        0 0 0 1px #747474\n          /* FIXME: it's not accurate. In macOS the outline has a gradient*/;\n    `\n  : css`\n      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.15), 0 8px 12px rgba(0, 0, 0, 0.1),\n        inset 0 0 0 1px #515355;\n    `;\nexport const StyledWindowContainer = styled.div`\n  position: fixed;\n  // not checked if there should be a better substitute for * in the following colors. Maybe \"Component\"?\n  background-color: ${({ theme }) => theme.color(\"*.background\")};\n  color: ${({ theme }) => theme.color(\"*.foreground\")};\n  border-radius: 8px;\n  outline: none;\n  ${WINDOW_SHADOW};\n`;\n\n/**\n * only needed for setting overflow to hidden to make sure nothing will overflow a window under any circumstances.\n * The reason we can't set that overflow: \"hidden\" on the StyledWindowContainer itself is that we want resize handles\n * to overflow without bing clipped.\n */\nconst StyledWindowInnerContainer = styled.div`\n  height: inherit;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const DEFAULT_WINDOW_MIN_WIDTH = 50;\nexport const DEFAULT_WINDOW_MIN_HEIGHT = 24;\n\nexport const WindowControllerContext = React.createContext<\n  Partial<Pick<ModalWindowProps, \"onClose\">>\n>({});\n\nconst StyledDelayedLoadingSpinner = styled(DelayedLoadingSpinner)`\n  display: block;\n  margin: auto;\n`;\n\n/**\n * A movable/resizable modal window. The window header which holds the title, can be used to drag the window around.\n * In the reference impl, modal windows are os-native, and contain os-level buttons for minimize/close/maximise, which\n * are not relevant here since they wouldn't be os-native windows. A close button is still relevant (and kind of\n * necessary) and will be added in next iterations.\n *\n * The content container doesn't come with any padding. Other related components should be used for common layouts in\n * modal windows.\n * Example use cases: Window for git operations such as push, update, revert, new branch, etc.\n *\n * ![img.png](https://user-images.githubusercontent.com/3150694/181095858-968c5c66-2ae7-4e40-84e3-e6df43cd4aa4.png)\n *\n * NOTE: The part regarding rendering OverlayInteractionHandler, and rendering as a dialog with a focus scope, in an\n * overlay container could be extracted into a component which is then used to create custom resizable/movable overlay\n * dialogs, like \"Branches\", or \"Search Everywhere\".\n *\n * TODO: show close button (maybe os-aware styles?)\n *\n */\nexport const ModalWindow = ({\n  interactions = \"all\",\n  minWidth = DEFAULT_WINDOW_MIN_WIDTH,\n  minHeight = DEFAULT_WINDOW_MIN_HEIGHT,\n  className,\n  suspense,\n  ...props\n}: ModalWindowProps): React.ReactElement => {\n  const propsContext = useContext(WindowControllerContext);\n  const onClose = () => {\n    propsContext.onClose?.();\n    props.onClose?.();\n  };\n\n  const ref = React.useRef<HTMLDivElement>(null);\n  const { modalProps, underlayProps } = useModalOverlay(\n    {\n      isDismissable: false,\n      isKeyboardDismissDisabled: false,\n    },\n    // useModalOverlay doesn't really need the full `OverlayTriggerState` interface.\n    // It only requires `isOpen` and `close`.\n    // However, it's currently typed like this, so useOverlayTriggerState is used,\n    // just to comply with the required type, and in the unlikely case where a future minor version starts to use\n    // other properties from `OverlayTriggerState`\n    useOverlayTriggerState({\n      isOpen: true,\n      onOpenChange: (isOpen) => {\n        if (!isOpen) {\n          onClose();\n        }\n      },\n    }),\n    ref\n  );\n  usePreventScroll();\n\n  const MaybeSuspend = suspense === false ? React.Fragment : React.Suspense;\n  return (\n    // disableFocusManagement is used because FocusScope is rendered in our implementation.\n    // Might be a candidate for refactoring to use the built-in FocusScope of Overlay\n    <Overlay disableFocusManagement>\n      <StyledWindowUnderlay {...underlayProps} className={className}>\n        <MaybeSuspend\n          fallback={\n            suspense === undefined ? <StyledDelayedLoadingSpinner /> : suspense\n          }\n        >\n          <WindowFrame\n            modalProps={modalProps}\n            windowRef={ref}\n            modalWindowProps={{ ...props, minHeight, minWidth, interactions }}\n          />\n        </MaybeSuspend>\n      </StyledWindowUnderlay>\n    </Overlay>\n  );\n};\n\n/**\n * Window frame taken out into a separate component, so that hook that measures\n * content size based on the passed ref is remounted whenever the suspense\n * boundary unsuspends.\n */\nfunction WindowFrame({\n  windowRef,\n  modalProps,\n  modalWindowProps: {\n    minWidth,\n    minHeight,\n    interactions,\n    children,\n    ...modalWindowProps\n  },\n}: {\n  windowRef: RefObject<HTMLDivElement>;\n  modalProps: DOMAttributes;\n  modalWindowProps: ModalWindowProps;\n}) {\n  const { dialogProps, titleProps } = useDialog(modalWindowProps, windowRef);\n\n  const {\n    bounds: style,\n    overlayInteractionHandlerProps,\n    UNSAFE_measureContentSize,\n  } = useResizableMovableOverlay(windowRef, {\n    ...modalWindowProps,\n    minHeight,\n    minWidth,\n  });\n\n  return (\n    <OverlayInteractionHandler {...overlayInteractionHandlerProps}>\n      <FocusScope contain restoreFocus autoFocus>\n        <StyledWindowContainer\n          {...mergeProps(dialogProps, modalProps, {\n            style,\n          })}\n          ref={windowRef}\n        >\n          <StyledWindowInnerContainer>\n            <WindowContext.Provider\n              value={{\n                isActive: true, // because it's modal. WindowContext would be used for non-modal windows too, in future\n                titleProps,\n                movable: interactions !== \"none\",\n              }}\n            >\n              <UNSAFE_React17SuspenseFix\n                measureContentSize={UNSAFE_measureContentSize}\n              >\n                {children}\n              </UNSAFE_React17SuspenseFix>\n            </WindowContext.Provider>\n          </StyledWindowInnerContainer>\n          {interactions === \"all\" && <OverlayResizeHandles />}\n        </StyledWindowContainer>\n      </FocusScope>\n    </OverlayInteractionHandler>\n  );\n}\n","import React from \"react\";\nimport { DOMAttributes } from \"@react-types/shared\";\n\nexport const WindowContext = React.createContext<{\n  isActive: boolean;\n  movable: boolean;\n  titleProps: DOMAttributes;\n}>({ isActive: false, movable: true, titleProps: {} });\n","import { styled } from \"@intellij-platform/core/styled\";\nimport React from \"react\";\nimport { ButtonGroup } from \"@intellij-platform/core/ButtonGroup\";\n\nconst StyledFooter = styled.div<{ hasBorder?: boolean }>`\n  padding: 0.625rem 0.875rem;\n  display: flex;\n  gap: 0.5rem;\n  justify-content: space-between;\n  align-items: center;\n  border-top: 1px solid transparent;\n  border-color: ${({ hasBorder, theme }) =>\n    hasBorder && theme.commonColors.contrastBorder};\n`;\nconst StyledFooterSide = styled.div`\n  display: flex;\n  gap: 0.75rem;\n`;\n\n/**\n * Implements the common layout for window footer, to be used in {@link ModalWindowProps#footer}.\n * Footer has a left and a right side. There is a standard gap between the children of each side.\n */\nexport function WindowFooter({\n  left,\n  right,\n  hasBorder,\n}: {\n  /**\n   * The content to go to the left side the footer. A help icon button is very common on the left side.\n   */\n  left?: React.ReactNode;\n  /**\n   * The content to go to the right side the footer.\n   * {@link Button}s are usually used inside the right content.\n   * A {@link ButtonGroup} is rendered around the content to allow for keyboard navigation with arrow keys.\n   */\n  right?: React.ReactNode;\n  /**\n   * Whether to show top border for footer or not\n   */\n  hasBorder?: boolean;\n}) {\n  return (\n    <StyledFooter hasBorder={hasBorder}>\n      <StyledFooterSide>{left}</StyledFooterSide>\n      <StyledFooterSide>\n        <ButtonGroup>{right}</ButtonGroup>\n      </StyledFooterSide>\n    </StyledFooter>\n  );\n}\n","import React, { HTMLAttributes, useContext } from \"react\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { OverlayMoveHandle } from \"@intellij-platform/core/Overlay\";\n\nimport { WindowContext } from \"./WindowContext\";\nimport { mergeProps } from \"@react-aria/utils\";\n\nconst StyledWindowTitle = styled.h1`\n  margin: 0;\n  text-align: center;\n  font-size: 13px; // not rem! intentional\n  line-height: 24px; // Double check\n  cursor: default;\n  user-select: none;\n  padding: 0 8px;\n`;\n\n/**\n * Implements appearance of Window header, and also acts as a handle for moving the window.\n * Expected to be used with {@link WindowLayout}:\n *\n * @example\n * ```tsx\n * <ModalWindow>\n *    <WindowLayout header={<WindowHeader>header</WindowHeader>} />\n * </ModalWindow>\n * ```\n */\nexport const WindowHeader = ({ children }: { children?: React.ReactNode }) => {\n  const { movable, titleProps } = useContext(WindowContext);\n  const renderTitle = (otherProps: HTMLAttributes<HTMLElement> = {}) => (\n    <StyledWindowTitle {...mergeProps(titleProps, otherProps)}>\n      {children || <>&nbsp;</>}\n    </StyledWindowTitle>\n  );\n  return movable ? (\n    <OverlayMoveHandle>\n      {({ moveHandleProps }) => renderTitle(moveHandleProps)}\n    </OverlayMoveHandle>\n  ) : (\n    renderTitle()\n  );\n};\n","import { styled } from \"@intellij-platform/core/styled\";\nimport React from \"react\";\nimport { WindowHeader } from \"./WindowHeader\";\nimport { WindowFooter } from \"@intellij-platform/core/ModalWindow/WindowFooter\";\n\nconst StyledWindowFooter = styled.div`\n  min-height: min-content;\n`;\n\nconst StyledWindowContentWrapper = styled.div`\n  overflow: auto;\n  flex: 1;\n`;\n\n/**\n * Window content layout, supporting fixed `header` and `footer` sections, and a scrollable `content` area.\n */\nexport function WindowLayout({\n  header,\n  footer,\n  content,\n}: {\n  /**\n   * Fixed position header of the window at the top. Use {@link WindowLayout.Header} for the default window header,\n   * which also acts as a move handle for the window. If a string is passed, it will be wrapped by\n   * {@link WindowLayout.Header} automatically.\n   */\n  header: React.ReactNode;\n  /**\n   * Scrollable content of the window.\n   */\n  content: React.ReactNode;\n  /**\n   * An area at the bottom of the window which is not scrolled as opposed to `content`. Use {@link WindowLayout.Footer}\n   * for rendering the common layout of a window footer.\n   */\n  footer?: React.ReactNode;\n}) {\n  return (\n    <>\n      {header &&\n        (typeof header === \"string\" ? (\n          <WindowHeader>{header}</WindowHeader>\n        ) : (\n          header\n        ))}\n      <StyledWindowContentWrapper>{content}</StyledWindowContentWrapper>\n      {footer && <StyledWindowFooter>{footer}</StyledWindowFooter>}\n    </>\n  );\n}\n\n// Just for improved discoverability. Might as well export WindowFooter and WindowHeader instead.\nWindowLayout.Footer = WindowFooter;\nWindowLayout.Header = WindowHeader;\n","import React, {\n  ReactElement,\n  ReactNode,\n  useContext,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport {\n  ModalWindow,\n  ModalWindowProps,\n  WindowControllerContext,\n} from \"./ModalWindow\";\n\nexport interface WindowManagerAPI {\n  /**\n   * Shows a modal window within the stack of windows managed by {@link WindowManager}.\n   * The opened windows will be closed when `onClose` interactions happen.\n   * Returns a Promise which is resolved when the modal window is closed.\n   *\n   * Modal window element, or a function that returns the modal window element can\n   * be passed.\n   * If a function is passed, it will receive a close function in its object argument,\n   * which can be used to resolve the returned promise with.\n   *\n   * @example\n   *\n   * ```\n   * const windowManager = useWindowManager();\n   *\n   * const showWindow = () => {\n   *   windowManager\n   *     .open<boolean>(({ close }) => (\n   *       <ModalWindow>\n   *         <WindowLayout\n   *           header=\"...\"\n   *           content={<>...</>}\n   *           footer={\n   *             <WindowLayout.Footer\n   *               right={\n   *                 <>\n   *                   <Button onPress={close}>Cancel</Button>\n   *                   <Button onPress={() => close(true)}>Ok</Button>\n   *                 </>\n   *               }\n   *             />\n   *           }\n   *         />\n   *       </ModalWindow>\n   *     ))\n   *     .then((confirmed) => alert(`confirmed: ${confirmed ?? false}`));\n   * };\n   * ```\n   */\n  open<T>(\n    props:\n      | React.ReactElement<ModalWindowProps, typeof ModalWindow>\n      | ((args: {\n          close: (result?: T) => void;\n        }) => React.ReactElement<ModalWindowProps, typeof ModalWindow>)\n  ): Promise<T | undefined>;\n}\n\nconst NotImplementedFn = () => {\n  throw new Error(\n    \"WindowManager not found. Wrap your application with WindowManager to be able to open windows imperatively\"\n  );\n};\n\nconst WindowsContext = React.createContext<WindowManagerAPI>({\n  open: NotImplementedFn,\n});\n\n/**\n * Returns imperative API for showing windows.\n *\n */\nexport const useWindowManager = (): WindowManagerAPI =>\n  useContext(WindowsContext);\n\ntype WindowElement = ReactElement<ModalWindowProps, typeof ModalWindow>;\n\nexport interface WindowManagerProps {\n  children?: ReactNode;\n}\n\n/**\n * Enables imperative API (via {@link useWindowManager}) for opening windows.\n * It renders windows in a portal appended to `body`, unless `disablePortal` is `true`.\n *\n */\nexport const WindowManager: React.FC<WindowManagerProps> = ({ children }) => {\n  const [windows, setWindows] = useState<Array<WindowElement>>([]);\n  const newKeyRef = useRef<number>(0);\n\n  const api = useMemo<WindowManagerAPI>(() => {\n    return {\n      open: function <T>(content: Parameters<WindowManagerAPI[\"open\"]>[0]) {\n        return new Promise<T | undefined>((resolve) => {\n          newKeyRef.current++;\n          const close = (result?: T) => {\n            setWindows((currentWindows) =>\n              currentWindows.filter((aWindow) => aWindow !== window)\n            );\n            // Make sure (?) to resolve the promise after the dialog is closed,\n            // for the focus to be restored to the previous element before the\n            // potential further actions take place.\n            requestAnimationFrame(() => {\n              resolve(result);\n            });\n          };\n          const window = (\n            <WindowControllerContext.Provider\n              value={{\n                onClose: () => {\n                  close();\n                },\n              }}\n              key={newKeyRef.current}\n            >\n              {typeof content === \"function\"\n                ? // @ts-expect-error close signature is not correctly inferred\n                  content({ close })\n                : content}\n            </WindowControllerContext.Provider>\n          );\n          setWindows((currentWindows) => currentWindows.concat(window));\n        });\n      },\n    };\n  }, []);\n\n  return (\n    <WindowsContext.Provider value={api}>\n      {children}\n      {windows}\n    </WindowsContext.Provider>\n  );\n};\n","import React, { useContext, useRef } from \"react\";\nimport { Overlay as AriaOverlay, OverlayProps } from \"@react-aria/overlays\";\n\nconst ParentOverlayContext = React.createContext<HTMLElement | null>(null);\n\n/**\n * A (drop-in replacement) wrapper around Overlay, which makes sure overlays created in nested\n * react components will be ported to the same top level container. This is especially useful to detect\n * \"outside clicks\" when overlays are nested. The most common example would be nested menu in popup.\n *\n */\nexport function Overlay({\n  children,\n  OverlayComponent = AriaOverlay,\n}: {\n  children: React.ReactNode;\n  OverlayComponent?: React.ComponentType<OverlayProps>;\n}) {\n  const root = useContext(ParentOverlayContext);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  if (root) {\n    return (\n      <OverlayComponent portalContainer={root}>{children}</OverlayComponent>\n    );\n  }\n  return (\n    <ParentOverlayContext.Provider value={containerRef.current}>\n      <OverlayComponent>\n        <div ref={containerRef} data-overlay-root=\"\">\n          {children}\n        </div>\n      </OverlayComponent>\n    </ParentOverlayContext.Provider>\n  );\n}\n\n/**\n * Returns true, if element1 and element2 are in nested overlays. \"Nested\" being in terms of React component tree.\n * Useful for detecting \"outside click\" when overlay components are nested in each other.\n */\nexport function areInNestedOverlays(\n  element1: Element | null,\n  element2: Element | null\n) {\n  const overlayRoot1 = element1?.closest(\"[data-overlay-root]\");\n  const overlayRoot2 = element2?.closest(\"[data-overlay-root]\");\n  return Boolean(overlayRoot1) && overlayRoot1 === overlayRoot2;\n}\n","import React, { useContext } from \"react\";\n\nexport type Bounds = {\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n};\n\n/**\n * TODO(docs): add a few words about this abstraction and it's use.\n */\nexport type OverlayInteractionHandlerProps = {\n  /**\n   * Signals start of a UI interaction like resize or move, in which overlay bounds change.\n   */\n  startInteraction: (type: \"move\" | \"resize\") => Bounds;\n  /**\n   * Used to update bounds state during a UI interaction.\n   */\n  updateBounds: (bounds: Bounds) => void;\n  /**\n   * Signals end of a UI interaction.\n   */\n  finishInteraction: () => void;\n\n  minWidth?: number;\n  minHeight?: number;\n};\n\nconst OverlayInteractionHandlerContext =\n  React.createContext<OverlayInteractionHandlerProps | null>(null);\n\n/**\n * Provides the context used by components like {@link OverlayMoveHandle} and {@link OverlayResizeHandles} that provide\n * user interactions that change the boundary of the overlay they are rendered in.\n * Use {@link useResizableMovableOverlay} which implements an efficient state management for overlay bounds and returns\n * props to be passed to `OverlayInteractionHandler`:\n *\n * @example\n *\n * const {\n *    bounds, // Bounds to be applied to the overlay element.\n *    overlayInteractionHandlerProps,\n *  } = useResizableMovableOverlay(props);\n *\n * return (\n *   <OverlayInteractionHandler {...overlayInteractionHandlerProps}>\n *     <div style={bounds}>...</div>\n *   </OverlayInteractionHandler>\n * );\n *\n * @see useResizableMovableOverlay\n */\nexport const OverlayInteractionHandler = ({\n  children,\n  ...props\n}: OverlayInteractionHandlerProps & { children: React.ReactNode }) => {\n  return (\n    <OverlayInteractionHandlerContext.Provider value={props}>\n      {children}\n    </OverlayInteractionHandlerContext.Provider>\n  );\n};\n\nexport const useOverlayInteractionHandler = () =>\n  useContext(OverlayInteractionHandlerContext);\n","import { useMove, UseMoveOptions } from \"../utils/interaction-utils/useMove\";\nimport { useOverlayInteractionHandler } from \"./OverlayInteractionHandler\";\nimport React from \"react\";\n\nexport type UseOverlayMoveHandleOptions = Omit<\n  UseMoveOptions<unknown>,\n  \"onMoveStart\" | \"onMove\" | \"onMoveEnd\"\n>;\n/**\n * Used for making a dom element a move handle for the overlay it's being rendered in.\n * It uses the context provided by {@link OverlayInteractionHandler}, and returns props to be applied on a dom element to\n * make it a move handle for the overlay it's being rendered in.\n *\n * @see OverlayMoveHandle\n */\nexport function useOverlayMoveHandle(options?: UseOverlayMoveHandleOptions) {\n  const interactionHandler = useOverlayInteractionHandler();\n  if (!interactionHandler) {\n    return { moveHandleProps: {} };\n  }\n  const { finishInteraction, startInteraction, updateBounds } =\n    interactionHandler;\n\n  const moveProps = useMove({\n    ...options,\n    onMoveStart: () => {\n      return startInteraction(\"move\");\n    },\n    onMove: ({ startState, movement }) => {\n      updateBounds({\n        ...startState,\n        top: startState.top + movement.y,\n        left: startState.left + movement.x,\n      });\n    },\n    onMoveEnd: () => {\n      finishInteraction();\n    },\n  });\n  return { moveHandleProps: moveProps || {} };\n}\n\n/**\n * Used for making a dom element a move handle for the overlay it's being rendered in.\n * It uses the context provided by {@link OverlayInteractionHandler}. A render function is expected as `children`. It's\n * passed the event handlers that need to be applied on a dom element to make it a move handle for the overlay it's\n * being rendered in.\n */\nexport const OverlayMoveHandle = ({\n  children,\n  ...props\n}: {\n  children: (\n    props: ReturnType<typeof useOverlayMoveHandle>\n  ) => React.ReactElement;\n} & UseOverlayMoveHandleOptions) => {\n  return children(useOverlayMoveHandle(props));\n};\n","import React, { useRef } from \"react\";\nimport {\n  BottomResizer,\n  LeftResizer,\n  RightResizer,\n  TopResizer,\n} from \"../Resizer\";\nimport {\n  HorizontalResizerProps,\n  VerticalResizerProps,\n} from \"../Resizer/ResizerProps\";\nimport {\n  Bounds,\n  useOverlayInteractionHandler,\n} from \"./OverlayInteractionHandler\";\n\ntype OverlayResizeHandlesProps = {\n  minWidth?: number;\n  minHeight?: number;\n};\n\n/**\n * Renders invisible resize handles at the edges of the overlay it's rendered in. It uses the context provided by\n * {@link OverlayInteractionHandler} to resize the overlay when the handles are used.\n */\nexport function OverlayResizeHandles(props: OverlayResizeHandlesProps) {\n  const overlayResizer = useOverlayResizer(props);\n  return (\n    overlayResizer && (\n      <>\n        <RightResizer {...overlayResizer.getResizerProps(\"right\")} />\n        <LeftResizer {...overlayResizer.getResizerProps(\"left\")} />\n        <TopResizer {...overlayResizer.getResizerProps(\"top\")} />\n        <BottomResizer {...overlayResizer.getResizerProps(\"bottom\")} />\n      </>\n    )\n  );\n}\n\n/**\n * overlay resizing logic and state. When resizing is in progress, the source of truth is a local state, for performance\n * reasons. When the resize is done (e.g. by mouse being released), `onBoundsChange` is called with the new bounds.\n */\nfunction useOverlayResizer(props: OverlayResizeHandlesProps = {}) {\n  const initialBoundsRef = useRef<Bounds>({\n    top: 0,\n    height: 0,\n    width: 0,\n    left: 0,\n  });\n  const interactionHandler = useOverlayInteractionHandler();\n  const {\n    minWidth = interactionHandler?.minWidth ?? 1,\n    minHeight = interactionHandler?.minHeight ?? 1,\n  } = props;\n  if (!interactionHandler) {\n    return null;\n  }\n  const { finishInteraction, startInteraction, updateBounds } =\n    interactionHandler;\n\n  const onResize = {\n    right: (size: number) =>\n      updateBounds({\n        ...initialBoundsRef.current,\n        width: Math.max(minWidth, initialBoundsRef.current.width + size),\n      }),\n    bottom: (size: number) =>\n      updateBounds({\n        ...initialBoundsRef.current,\n        height: Math.max(minHeight, initialBoundsRef.current.height + size),\n      }),\n    left: (size: number) => {\n      const newWidth = Math.max(\n        minWidth,\n        initialBoundsRef.current.width + size\n      );\n      const initialBounds = initialBoundsRef.current;\n      return updateBounds({\n        ...initialBounds,\n        left: initialBounds.left + initialBounds.width - newWidth,\n        width: newWidth,\n      });\n    },\n    top: (size: number) => {\n      const newHeight = Math.max(\n        minHeight,\n        initialBoundsRef.current.height + size\n      );\n      const initialBounds = initialBoundsRef.current;\n      return updateBounds({\n        ...initialBounds,\n        top: initialBounds.top + initialBounds.height - newHeight,\n        height: newHeight,\n      });\n    },\n  };\n\n  function getResizerProps(side: \"left\" | \"right\"): HorizontalResizerProps;\n  function getResizerProps(side: \"top\" | \"bottom\"): VerticalResizerProps;\n  function getResizerProps(\n    side: \"left\" | \"right\" | \"top\" | \"bottom\"\n  ): HorizontalResizerProps | VerticalResizerProps {\n    const horizontal = side === \"left\" || side === \"right\";\n    return {\n      size: 1,\n      cursor: horizontal ? \"ew\" : \"ns\",\n      onResizeStarted: () => {\n        initialBoundsRef.current = startInteraction(\"resize\");\n      },\n      onResize: onResize[side],\n      onResizeEnd: finishInteraction,\n      style: { position: \"absolute\", [side]: 0 },\n    };\n  }\n\n  return {\n    getResizerProps,\n  };\n}\n","import React, { ForwardedRef } from \"react\";\nimport {\n  AriaPopoverProps,\n  DismissButton,\n  Overlay,\n  usePopover,\n} from \"@react-aria/overlays\";\nimport { OverlayTriggerState } from \"@react-stately/overlays\";\n\nimport { WINDOW_SHADOW } from \"@intellij-platform/core/style-constants\";\n\nimport { styled } from \"../styled\";\nimport { useObjectRef } from \"@react-aria/utils\";\n\nexport interface PopoverProps extends Omit<AriaPopoverProps, \"popoverRef\"> {\n  children: React.ReactNode;\n  state: OverlayTriggerState;\n}\n\nconst StyledPopover = styled.div`\n  box-sizing: border-box;\n  // not checked if there should be a better substitute for * in the following colors. Maybe \"Component\"?\n  background-color: ${({ theme }) => theme.color(\"*.background\")};\n  color: ${({ theme }) => theme.color(\"*.foreground\")};\n  outline: none; // Focus will be reflected in header. No need for outline or any other focus style on the container\n  ${WINDOW_SHADOW}; // FIXME: OS-dependant style?\n`;\nexport const Popover = React.forwardRef(function Popover(\n  { children, state, offset = 8, ...props }: PopoverProps,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n) {\n  const popoverRef = useObjectRef(forwardedRef);\n  const { popoverProps } = usePopover(\n    {\n      ...props,\n      offset,\n      popoverRef,\n    },\n    state\n  );\n\n  return (\n    <Overlay>\n      {/* Rendering underlay doesn't seem necessary based on the reference impl */}\n      <StyledPopover {...popoverProps} ref={popoverRef}>\n        <DismissButton onDismiss={state.close} />\n        {children}\n        <DismissButton onDismiss={state.close} />\n      </StyledPopover>\n    </Overlay>\n  );\n});\n","import { Bounds } from \"@intellij-platform/core/Overlay/OverlayInteractionHandler\";\nimport { clamp } from \"ramda\";\nimport { ResizableMovableOverlayOptions } from \"@intellij-platform/core/Overlay/useResizableMovableOverlay\";\n\nexport const withMinSize =\n  ({ width: minWidth, height: minHeight }: { width: number; height: number }) =>\n  (bounds: Bounds) => {\n    const width = Math.max(minWidth, bounds.width);\n    const height = Math.max(minHeight, bounds.height);\n    if (bounds.width != width || bounds.height != height) {\n      return { ...bounds, width, height };\n    }\n    return bounds;\n  };\n\nexport function getCenteredBounds(width: number, height: number): Bounds {\n  return {\n    left: (window.innerWidth - width) / 2,\n    top: (window.innerHeight - height) / 2,\n    width,\n    height,\n  };\n}\n\n/**\n * A helper function to create interaction interceptor which ensures bounds are contained within a container.\n *\n * @example\n * const ensureInViewPort = containedWithin({left: 0, top: 0, width: window.innerWidth, height: window.innerHeight})\n *\n * useResizableMovableOverlay({ onBoundsChanging: ensureInViewPort});\n */\nexport const containedWithin =\n  (\n    containerBounds: Bounds\n  ): ResizableMovableOverlayOptions[\"onBoundsChanging\"] =>\n  (bounds, interactionType) => {\n    if (interactionType === \"move\") {\n      const left = clamp(\n        containerBounds.left,\n        containerBounds.left + containerBounds.width - bounds.width,\n        bounds.left\n      );\n      const top = clamp(\n        containerBounds.top,\n        containerBounds.top + containerBounds.height - bounds.height,\n        bounds.top\n      );\n      return {\n        ...bounds,\n        left,\n        top,\n      };\n    } else if (interactionType === \"resize\") {\n      const left = Math.max(containerBounds.left, bounds.left);\n      const top = Math.max(containerBounds.top, bounds.top);\n      // the logic here seems unnecessarily complicated\n      return {\n        left,\n        top,\n        width:\n          bounds.width -\n          Math.max(\n            0,\n            bounds.left +\n              bounds.width -\n              (containerBounds.left + containerBounds.width)\n          ) -\n          (left - bounds.left),\n        height:\n          bounds.height -\n          Math.max(\n            0,\n            bounds.top +\n              bounds.height -\n              (containerBounds.top + containerBounds.height)\n          ) -\n          (top - bounds.top),\n      };\n    }\n    return bounds;\n  };\nexport const position =\n  ({\n    targetElement,\n    placement = \"bottom\",\n  }: {\n    placement?: \"bottom\" | \"top\";\n    targetElement: HTMLElement;\n  }) =>\n  ({ height, width }: Bounds): Bounds => {\n    const targetBounds = targetElement.getBoundingClientRect();\n    return {\n      left: targetBounds.left,\n      top:\n        placement === \"bottom\"\n          ? targetBounds.top + targetBounds.height\n          : targetBounds.top - height,\n      width,\n      height,\n    };\n  };\n\nexport function ensureInViewport(\n  bounds: Bounds,\n  { gap = 0 }: { gap?: number } = {}\n): Bounds {\n  const viewportWidth = window.innerWidth - gap;\n  const viewportHeight = window.innerHeight - gap;\n  const left = clamp(gap, viewportWidth - bounds.width, bounds.left);\n  const top = clamp(gap, viewportHeight - bounds.height, bounds.top);\n  if (left !== bounds.left || top !== bounds.top) {\n    return {\n      left,\n      top,\n      width: bounds.width,\n      height: bounds.height,\n    };\n  }\n  return bounds;\n}\n","import { useCallback, useEffect, useLayoutEffect, useRef } from \"react\";\n\nexport const useDebouncedCallback = (\n  fn: () => void,\n  { timeout = 100 } = {}\n) => {\n  const fnRef = useRef(fn);\n  const currentTimeoutId = useRef<number | null>(null);\n  useLayoutEffect(() => {\n    fnRef.current = fn;\n  });\n  useEffect(() => {\n    return () => {\n      if (currentTimeoutId.current !== null) {\n        clearTimeout(currentTimeoutId.current);\n      }\n    };\n  }, []);\n  return useCallback(() => {\n    if (currentTimeoutId.current !== null) {\n      clearTimeout(currentTimeoutId.current);\n    }\n    currentTimeoutId.current = window.setTimeout(fnRef.current, timeout);\n  }, []);\n};\n","import { RefObject, useEffect, useLayoutEffect, useState } from \"react\";\nimport { useDebouncedCallback } from \"@intellij-platform/core/utils/useDebounce\";\nimport { curry } from \"ramda\";\n\n/**\n * Clones the element, applies the temporary styles, and calls {@param fn} on the clone.\n * Previously, we applied the temporary styles on the element itself, run fn, and then revert to previous styles,\n * but that can mess with the scroll bar in the content. If there is a scrollable part in some nested element,\n * applying temporary style (in our case width: fit-content, height: fit-content) can cause scroll to jump which is not\n * restored after the style reversion. Now the approach is changed to apply the temporary styles on a temporary clone\n * of the element. It's certainly not as efficient and some optimization may be needed.\n * @param style: temporary styles to apply before fn is invoked, and revert after.\n * @param fn the function to compute something on the element with temporary styles\n */\nconst withTemporaryStyle = curry(\n  <T,>(\n    style: Partial<CSSStyleDeclaration>,\n    fn: (element: HTMLElement) => T,\n    element: HTMLElement\n  ): T => {\n    const clone = element.cloneNode(true) as HTMLElement;\n    clone.style.position = \"absolute\";\n    clone.style.left = \"-9999px\";\n    document.body.appendChild(clone);\n\n    Object.assign(clone.style, style);\n    const returnValue = fn(clone);\n\n    document.body.removeChild(clone);\n    return returnValue;\n  }\n);\n\n/**\n * FIXME: withTemporaryStyle is not side-effect free and can cause scroll jumps. It creates awfully hard-to-debug\n *  issues.\n */\nexport const getContentSize = (\n  element: HTMLElement,\n  { width, height }: { width?: number; height?: number }\n): { width: number; height: number } => {\n  return withTemporaryStyle(\n    {\n      ...(width\n        ? { width: `${width}px` }\n        : {\n            width: \"\",\n            minWidth: \"fit-content\", // Shouldn't it be min-content? :-?\n          }),\n      ...(height\n        ? { height: `${height}px` }\n        : {\n            height: \"\",\n            minHeight: \"fit-content\", // Shouldn't it be min-content? :-?\n          }),\n    },\n    (element) => {\n      const computedStyle = getComputedStyle(element);\n      return {\n        width: Math.ceil(parseFloat(computedStyle.width)),\n        height: Math.ceil(parseFloat(computedStyle.height)),\n      };\n    },\n    element\n  );\n};\n\nexport const useContentSize = (\n  ref: RefObject<HTMLElement>,\n  {\n    observe = false,\n    width,\n    height,\n  }: {\n    /**\n     * if false, the content size is measured only initially. If true, the dom changes are observed, and content size\n     * is updated accordingly.\n     * @default false\n     */\n    observe?: boolean;\n    /**\n     * width, if there is any explicit width set on the element.\n     * Useful when the content can get different sizes based on the available size.\n     * It's an input and not get from element styles, to allow for setting the\n     * content-based size in style and still be able to specify the explicit\n     * width separately.\n     */\n    width?: number;\n    /**\n     * height, if there is any explicit height set on the element.\n     * Useful when the content can get different sizes based on the available size.\n     * It's an input and not get from element styles, to allow for setting the\n     * content-based size in style and still be able to specify the explicit\n     * height separately.\n     */\n    height?: number;\n  } = {}\n) => {\n  const [measuredSizes, setMeasuredSizes] = useState<Size[]>([]);\n  useLayoutEffect(() => {\n    const element = ref.current;\n    if (!element || measuredSizes.length > 5) {\n      return;\n    }\n    const size = getContentSize(element, { width, height });\n\n    const lastMeasuredSize = measuredSizes.at(-1);\n    if (!lastMeasuredSize || !Size.isEqual(lastMeasuredSize, size)) {\n      setMeasuredSizes([size]);\n    }\n    const id = window.requestAnimationFrame(() => {\n      const newSize = getContentSize(element, { width, height });\n      if (!Size.isEqual(newSize, size)) {\n        setMeasuredSizes([...measuredSizes, newSize]);\n      }\n    });\n    return () => {\n      window.cancelAnimationFrame(id);\n    };\n  }, [\n    measuredSizes,\n    // ref value shouldn't normally be an effect's dependency, but for some reason, ref value is null in the first call\n    // when built for website. Interestingly, it doesn't happen in storybook. So maybe something to investigate further\n    ref.current,\n  ]);\n  const measure = () => {\n    const lastMeasuredSize = measuredSizes.at(-1);\n    if (ref.current && lastMeasuredSize) {\n      const currentSize = getContentSize(ref.current, { width, height });\n      if (\n        currentSize.height !== lastMeasuredSize.height ||\n        currentSize.width !== lastMeasuredSize.width\n      ) {\n        setMeasuredSizes(\n          measuredSizes.map((aSize) =>\n            aSize === lastMeasuredSize ? currentSize : aSize\n          )\n        );\n      }\n    }\n  };\n  const debouncedMeasure = useDebouncedCallback(measure);\n\n  useEffect(() => {\n    const element = ref.current;\n    if (observe && element) {\n      const mutationObserver = new MutationObserver(() => {\n        debouncedMeasure();\n      });\n      mutationObserver.observe(element, {\n        subtree: true,\n        childList: true,\n      });\n      return () => {\n        mutationObserver.disconnect();\n      };\n    }\n  }, [\n    observe,\n    // ref value shouldn't normally be an effect's dependency, but for some reason, ref value is null in the first call\n    // when built for website. Interestingly, it doesn't happen in storybook. So maybe something to investigate further\n    ref.current,\n  ]);\n  return [measuredSizes.at(-1) || { width: 0, height: 0 }, measure] as const;\n};\n\ninterface Size {\n  width: number;\n  height: number;\n}\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const Size = {\n  isEqual: (\n    { width, height }: Size,\n    { width: width2, height: height2 }: { width: number; height: number }\n  ) => width === width2 && height === height2,\n};\n","import { RefObject, useState } from \"react\";\nimport { useControlledState } from \"@react-stately/utils\";\nimport {\n  Bounds,\n  OverlayInteractionHandler,\n  OverlayInteractionHandlerProps,\n} from \"./OverlayInteractionHandler\";\nimport { clamp, filter } from \"ramda\";\nimport { useContentSize } from \"@intellij-platform/core/Overlay/useContentSize\";\nimport {\n  getCenteredBounds,\n  withMinSize,\n} from \"@intellij-platform/core/Overlay/bounds-helpers\";\n\n/**\n * Common props for resizable and movable overlays such as Windows or Popups.\n * There is currently no corresponding component/hook, and this is just a type helper.\n */\nexport interface ResizableMovableOverlayOptions {\n  onBoundsChange?: (bounds: Bounds, interactionType: \"move\" | \"resize\") => void;\n  /**\n   * For performance reason, overlay bounds is kept in a local state during a resize or move interaction, and\n   * `onBoundsChange` is called once at the end of interaction. `onBoundsChanging` gives a chance of rectifying\n   * bounds changes during an interaction to for example apply custom size/placement constraints.\n   */\n  onBoundsChanging?: (\n    newBounds: Bounds,\n    /**\n     * Whether the interaction is a \"move\" or \"resize\" considering the initial bounds when interaction was started.\n     */\n    interactionType: \"move\" | \"resize\"\n  ) => Bounds;\n  /**\n   * Controlled bounds. Can be a partially specified bounds.\n   * - If `top` not specified, the returned bounds will be centered vertically.\n   * - If `left` not specified, the returned bounds will be centered horizontally.\n   * - If `width` not specified, the width of the bounds will be based on content width.\n   * - If `height` not specified, the height of the bounds will be based on content height.\n   * Note that regardless of `bounds`, `onBoundsChange` always receives a full `bounds` object which is solely\n   * based on the bounds of the overlay, at the end of an interaction.\n   */\n  bounds?: Partial<Bounds>;\n  /**\n   * Default bounds in uncontrolled mode. Can be a partially specified bounds.\n   * - If `top` not specified, the returned bounds will be centered vertically.\n   * - If `left` not specified, the returned bounds will be centered horizontally.\n   * - If `width` not specified, the width of the bounds will be based on content width.\n   * - If `height` not specified, the height of the bounds will be based on content height.\n   * Note that regardless of `defaultBounds`, `onBoundsChange` always receives a full `bounds` object which is solely\n   * based on the bounds of the overlay, at the end of an interaction.\n   */\n  defaultBounds?: Partial<Bounds>;\n  minWidth?: number | \"content\"; // TODO: support function, receiving measured size, for more flexibility\n  minHeight?: number | \"content\"; // TODO: support function, receiving measured size, for more flexibility\n\n  /**\n   * Allowed interactions:\n   * - \"all\": both resizable and movable\n   * - \"move\": movable, but not resizable\n   * - \"none\": fixed size and position\n   * The reason there are no `resizable` and `movable` boolean props is that resizable=true,movable=false doesn't make\n   * sense from UX perspective.\n   * @default \"all\"\n   */\n  interactions?: \"all\" | \"move\" | \"none\"; // FIXME: it's not used in useResizableMovableOverlay, maybe separate props?\n\n  /**\n   * When the size is not specified by `bounds` or `defaultBounds` props, the content size is measured and used in the\n   * returned bounds. By default, the content size is measured initially. If `observeContentSize` is true, the DOM\n   * mutations will be observed and the content is re-measured as changes are observed.\n   */\n  observeContentResize?: boolean;\n}\n/**\n *\n * TODO: rename to something better? :D\n * TODO: maybe an option like ensureInViewport that would move the final bound into the viewport (if necessary), when\n *  calling onBoundsChange at the end of an interaction. That's important because if move handle(s) (usually rendered\n *  at the top of the overlay) are out of reach, there would be no way back.\n * TODO: description\n * Assumptions:\n * - The overlay is rendered in a portal, and with position \"fixed\".\n * - The returned bounds should be used to style the overlay.\n *   - There shouldn't be other style affecting the positioning, such as margin, or transform.\n *   - If the overlay has border, box-sizing should be \"border-box\"\n */\nexport function useResizableMovableOverlay(\n  overlayRef: RefObject<HTMLElement>,\n  {\n    bounds: inputBounds,\n    defaultBounds,\n    onBoundsChange,\n    onBoundsChanging = (i) => i,\n    minWidth,\n    minHeight,\n    observeContentResize,\n  }: ResizableMovableOverlayOptions\n): {\n  /**\n   * The bounds to be applied as `style` on the overlay, to position it. Even if the input `bounds` or `defaultBounds`\n   * is not defined, returned `bounds` is always a full bounds object. This eliminates any other need for styling,\n   * if the input bounds doesn't define size or position.\n   * NOTE: even when the size is not specified as input, and is to be based on content, the returned `bounds` include\n   * explicit, size, measured **after the first render**. This is because overlays such as windows are not expected to\n   * be resized without user interaction, and just based on the content size change. So we make sure even when the\n   * sizing is based on content, it's stable. If imperative re-measure of the size is needed, or even dynamic resizing\n   * based on content is needed in some cases, it is feasible to add it as an option.\n   */\n  bounds: Bounds;\n  /**\n   * `true` if the returned bounds has explicit position. `false` if it's centered as a fallback.\n   */\n  positioned: boolean;\n  /**\n   * `true` if the returned bounds has explicit size. `false` if it's measured based on content.\n   */\n  sized: boolean;\n  /**\n   * Props to be passed to {@link OverlayInteractionHandler}\n   */\n  overlayInteractionHandlerProps: OverlayInteractionHandlerProps;\n\n  /**\n   * Allow for remeasuring content size imperatively, when needed. Currently only used to work around\n   * an issue related to Suspense in React 17.\n   */\n  UNSAFE_measureContentSize: () => void;\n} {\n  const [bounds, setBounds] = useControlledState<Partial<Bounds> | undefined>(\n    inputBounds,\n    defaultBounds!,\n    // onBoundsChange is called with Bounds object. Not Partial<Bounds>, and not undefined.\n    onBoundsChange as (\n      value: Partial<Bounds> | undefined,\n      reason: \"resize\" | \"move\"\n    ) => void\n  );\n  const [contentSize, measureContentSize] = useContentSize(overlayRef, {\n    observe: observeContentResize,\n    width: bounds?.width,\n    height: bounds?.height,\n  });\n  // local state of bounds for when the overlay is in a UI interaction, like movement or resize with mouse.\n  // We don't want to update the state in the higher levels repeatedly in such transactions, and we just want to\n  // trigger on update when the UI interaction is done.\n  // It's maintained during a UI interaction and then reset to null.\n  const [currentInteraction, setCurrentInteraction] = useState<null | {\n    type: \"move\" | \"resize\";\n    bounds: Bounds;\n  }>(null);\n\n  const effectiveMinWidth =\n    minWidth === \"content\" ? contentSize.width : minWidth || 0;\n  const effectiveMinHeight =\n    minHeight === \"content\" ? contentSize.height : minHeight || 0;\n  const applyMinSize = withMinSize({\n    width: effectiveMinWidth,\n    height: effectiveMinHeight,\n  });\n  const overlayInteractionHandlerProps: OverlayInteractionHandlerProps = {\n    startInteraction: (type: \"move\" | \"resize\") => {\n      if (!overlayRef.current) {\n        throw new Error(\n          \"overlayRef value is not set. Make sure to have the ref passed to the resizable/movable overlay\"\n        );\n      }\n      const bounds = getBounds(overlayRef.current);\n      setCurrentInteraction({ bounds, type });\n      return bounds;\n    },\n    updateBounds: (updatedBounds) => {\n      setCurrentInteraction((currentInteraction) => {\n        if (currentInteraction) {\n          const { type } = currentInteraction;\n          return {\n            type,\n            bounds: onBoundsChanging(updatedBounds, type) || updatedBounds,\n          };\n        }\n        return currentInteraction;\n      });\n    },\n    finishInteraction: () => {\n      if (currentInteraction && overlayRef.current) {\n        setBounds(getBounds(overlayRef.current), currentInteraction.type);\n      }\n      setCurrentInteraction(null);\n    },\n    minWidth: effectiveMinWidth,\n    minHeight: effectiveMinHeight,\n  };\n\n  const partialBounds = currentInteraction?.bounds ?? bounds;\n  const centeredContentBounds = getCenteredBounds(\n    clamp(\n      effectiveMinWidth,\n      window.innerWidth,\n      bounds?.width ?? contentSize.width\n    ),\n    clamp(\n      effectiveMinHeight,\n      window.innerHeight,\n      bounds?.height ?? contentSize.height\n    )\n  );\n  return {\n    positioned:\n      partialBounds?.left != undefined && partialBounds?.top != undefined,\n    sized:\n      partialBounds?.width != undefined && partialBounds?.height != undefined,\n    bounds: applyMinSize({\n      /**\n       * Since input bounds may be partial (e.g. only specifying size), we create a full bounds object as a fallback,\n       * based on the measured size, positioned in center. We can introduce a \"loose\" mode, where the returned bound\n       * is not \"filled\" with default properties.\n       */\n      ...centeredContentBounds,\n      ...(partialBounds && filter((value) => value != null, partialBounds)),\n    }),\n    UNSAFE_measureContentSize: measureContentSize,\n    overlayInteractionHandlerProps,\n  };\n}\n\nfunction getBounds(element: HTMLElement) {\n  const { left, top, width, height } = element.getBoundingClientRect();\n  return { left, top, width, height };\n}\n","import { mergeProps } from \"@react-aria/utils\";\nimport { filter } from \"ramda\";\n\n/**\n * Like mergeProps, but doesn't merge props where value is null or undefined. That's needed because useFocusable (and\n * maybe some other react-aria hooks as well) return props like onFocus, with value set to null or undefined, which\n * overrides the same prop from other sources.\n */\n// @ts-expect-error not sure why!\nexport const mergeNonNullProps: typeof mergeProps = (...propsArray) => {\n  return mergeProps(\n    ...propsArray.map((props): typeof props =>\n      filter((value) => value != undefined, props ?? [])\n    )\n  );\n};\n","import React, { ForwardedRef, RefObject, useContext, useState } from \"react\";\nimport { DOMProps } from \"@react-types/shared\";\nimport { useFocusWithin, useInteractOutside } from \"@react-aria/interactions\";\nimport { FocusScope, useFocusable } from \"@react-aria/focus\";\nimport { useOverlay, usePreventScroll } from \"@react-aria/overlays\";\nimport { filterDOMProps, useObjectRef } from \"@react-aria/utils\";\nimport { pipe } from \"ramda\";\n\nimport {\n  areInNestedOverlays,\n  ensureInViewport,\n  Overlay,\n  OverlayInteractionHandler,\n  OverlayResizeHandles,\n  position,\n  ResizableMovableOverlayOptions,\n  useResizableMovableOverlay,\n} from \"@intellij-platform/core/Overlay\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { mergeNonNullProps } from \"@intellij-platform/core/utils/mergeNonNullProps\";\nimport { useFocusForwarder } from \"@intellij-platform/core/utils/useFocusForwarder\";\n\nimport { useDialog } from \"./_useDialog\";\nimport { PopupHeader } from \"./PopupHeader\";\nimport { PopupContext, PopupControllerContext } from \"./PopupContext\";\nimport { PopupLayout } from \"./PopupLayout\";\nimport { StyledPopupHint } from \"./StyledPopupHint\";\nimport { StyledPopupContainer } from \"@intellij-platform/core/Popup/StyledPopupContainer\";\n\n/**\n * only needed for setting overflow to hidden to make sure nothing will overflow a window under any circumstances.\n * The reason we can't set that overflow: \"hidden\" on the StyledWindowContainer itself is that we want resize handles\n * to overflow without bing clipped.\n */\nconst StyledInnerContainer = styled.div`\n  height: inherit;\n  overflow: hidden;\n`;\nexport interface PopupProps extends ResizableMovableOverlayOptions, DOMProps {\n  children: React.ReactNode;\n  onClose?: () => void;\n\n  nonDismissable?: boolean;\n\n  /**\n   * By default, Popup prevents scrolling on the scrollable ancestor, if popup is positioned relative to a target\n   * element. Allowing or disallowing scroll can be forced by passing boolean value.\n   */\n  allowScroll?: \"auto\" | boolean;\n\n  /**\n   * Used to position the popup relative to a target element, if there is no positioning information in the input\n   * `bounds`/`defaultBounds`.\n   */\n  positioning?: {\n    targetRef: RefObject<HTMLElement>;\n    placement?: \"bottom\" | \"top\";\n  };\n}\n\nexport const DEFAULT_POPUP_MIN_WIDTH = 50;\nexport const DEFAULT_POPUP_MIN_HEIGHT = 50;\n\n/**\n * [Popup](https://www.figma.com/file/nfDfMAdV7j2fnQlpYNAOfP/IntelliJ-Platform-UI-Kit-%28Community%29?node-id=75426%3A16881&t=vzpRGV2y2cDw5a6Z-0)\n * component, rendered as a draggable overlay which is positioned either in the center of the viewport or relative to a trigger element.\n * If there is a trigger element, use {@link PopupTrigger} instead.\n */\nexport const _Popup = (\n  // NOTE: export is only for __docgenInfo to be emitted for this.\n  {\n    interactions = \"move\",\n    nonDismissable = false,\n    allowScroll = \"auto\",\n    minWidth = DEFAULT_POPUP_MIN_WIDTH,\n    minHeight = DEFAULT_POPUP_MIN_HEIGHT,\n    positioning: positioningProp,\n    onClose: onCloseProp,\n    ...props\n  }: PopupProps,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n): JSX.Element => {\n  const propsContext = useContext(PopupControllerContext);\n  const positioning = positioningProp || propsContext.positioning;\n  const onClose = () => {\n    onCloseProp?.();\n    propsContext.onClose?.();\n  };\n  const ref = useObjectRef<HTMLDivElement>(forwardedRef);\n  const shouldCloseOnInteractOutside = (element: Element) => {\n    return (\n      !positioning?.targetRef.current?.contains(element) &&\n      !areInNestedOverlays(ref.current, element)\n    );\n  };\n  const { overlayProps } = useOverlay(\n    {\n      isOpen: true, // FIXME?\n      onClose,\n      shouldCloseOnBlur: !nonDismissable,\n      shouldCloseOnInteractOutside,\n    },\n    ref\n  );\n  // Passing isDismissable to useOverlay also utilizes useInteractOutside and closes the overlay, but it calls\n  // preventDefault() and stopPropagation() on the event, which prevents focus from going to elements outside the popup.\n  // Not sure why they do this in react-aria, but it seems we are better off not using that option and using\n  // useInteractOutside directly here like this:\n  useInteractOutside({\n    ref,\n    onInteractOutsideStart: (e) => {\n      if (\n        !nonDismissable &&\n        shouldCloseOnInteractOutside(e.target as Element)\n      ) {\n        onClose();\n      }\n    },\n    // onInteractOutsideStart will not be called if onInteractOutside is not passed!\n    onInteractOutside: () => {},\n  });\n\n  usePreventScroll({\n    isDisabled: allowScroll === \"auto\" ? !positioning : allowScroll,\n  });\n\n  const { bounds, positioned, overlayInteractionHandlerProps } =\n    useResizableMovableOverlay(ref, {\n      ...props,\n      minWidth,\n      minHeight,\n      observeContentResize: true,\n    });\n  const positionedBounds =\n    positioning?.targetRef.current && !positioned\n      ? pipe(\n          position({\n            targetElement: positioning.targetRef.current,\n            placement: positioning.placement,\n          }),\n          ensureInViewport\n        )(bounds)\n      : bounds;\n\n  const [isActive, setActive] = useState(false);\n  const { focusWithinProps } = useFocusWithin({\n    onFocusWithinChange: setActive,\n  });\n  const { focusableProps } = useFocusable(\n    {\n      excludeFromTabOrder: true,\n    },\n    ref\n  );\n  const { focusForwarderProps } = useFocusForwarder();\n\n  const { dialogProps, titleProps } = useDialog(props, ref);\n\n  /**\n   * A hook like useOverlayStack or useOverlayZIndex can be introduced which would handle focus/blur, and return/set\n   * the right z-index so that only the overlay holding the focus would have a higher z-index than others.\n   */\n  const zIndex = isActive ? 1 : 0;\n\n  return (\n    <Overlay>\n      <OverlayInteractionHandler {...overlayInteractionHandlerProps}>\n        {/* TODO: FocusScope is redundant. Test focus restoration without it (in status bar progress), and remove it if unnecessary */}\n        <FocusScope restoreFocus>\n          <StyledPopupContainer\n            ref={ref}\n            style={{\n              ...positionedBounds,\n              zIndex,\n            }}\n            tabIndex={-1}\n            {...mergeNonNullProps(\n              focusWithinProps,\n              focusableProps,\n              focusForwarderProps,\n              overlayProps,\n              propsContext.overlayProps || {},\n              dialogProps,\n              filterDOMProps(props)\n            )}\n          >\n            <PopupContext.Provider\n              value={{\n                isActive,\n                movable: interactions !== \"none\",\n                titleProps,\n              }}\n            >\n              <StyledInnerContainer>{props.children}</StyledInnerContainer>\n              {interactions === \"all\" && <OverlayResizeHandles />}\n            </PopupContext.Provider>\n          </StyledPopupContainer>\n        </FocusScope>\n      </OverlayInteractionHandler>\n    </Overlay>\n  );\n};\n\nexport const Popup = Object.assign(React.forwardRef(_Popup), {\n  Header: PopupHeader,\n  Layout: PopupLayout,\n  Hint: StyledPopupHint,\n});\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport { AriaDialogProps } from \"@react-types/dialog\";\nimport { FocusableElement } from \"@react-types/shared\";\nimport { filterDOMProps, useSlotId } from \"@react-aria/utils\";\nimport { focusSafely } from \"@react-aria/focus\";\nimport { RefObject, useEffect } from \"react\";\nimport { useOverlayFocusContain } from \"@react-aria/overlays\";\nimport { DialogAria } from \"@react-aria/dialog\";\n\n////////////////// NOTE //////////////////////////\n// This is a copy of useDialog from react-aria, with a little part removed from the useEffect call.\n// In the original code, inside the effect, there is a hack to fix an issue in Safari, which involves\n// blurring and refocusing the element. Even though there is a comment about an attempt to make it work\n// nice when used with `shouldCloseOnBlur` option of `useOverlay`, it didn't work and the refocusing causes\n// the popup to close. Probably because in our case useOverlay and useDialog are used in the same level, but\n// in what they've tested on in react-aria, useDialog is used in something nested in the component that uses\n// useDialog.\n// TODO: replace with original useDialog, if the issue explained above got fixed in some version of react-aria.\n//////////////////////////////////////////////////\n/**\n * Provides the behavior and accessibility implementation for a dialog component.\n * A dialog is an overlay shown above other content in an application.\n */\nexport function useDialog(\n  props: AriaDialogProps,\n  ref: RefObject<FocusableElement>\n): DialogAria {\n  let { role = \"dialog\" } = props;\n  let titleId: string | undefined = useSlotId();\n  titleId = props[\"aria-label\"] ? undefined : titleId;\n\n  // Focus the dialog itself on mount, unless a child element is already focused.\n  useEffect(() => {\n    if (ref.current && !ref.current.contains(document.activeElement)) {\n      focusSafely(ref.current);\n    }\n  }, [ref]);\n\n  useOverlayFocusContain();\n\n  return {\n    dialogProps: {\n      ...filterDOMProps(props, { labelable: true }),\n      role,\n      tabIndex: -1,\n      \"aria-labelledby\": props[\"aria-labelledby\"] || titleId,\n    },\n    titleProps: {\n      id: titleId,\n    },\n  };\n}\n","import { DOMAttributes } from \"@react-types/shared\";\nimport { createContext } from \"react\";\nimport { PopupProps } from \"./Popup\";\n\nexport const PopupContext = createContext<{\n  isActive: boolean;\n  movable: boolean;\n  titleProps: DOMAttributes;\n}>({ isActive: false, movable: true, titleProps: {} });\n\n/**\n * A context to provide some props that are necessary for PopupTrigger or PopupManager.\n * Passing those props via context helps with providing a nice API in those components.\n */\nexport const PopupControllerContext = createContext<\n  {\n    overlayProps?: DOMAttributes;\n  } & Partial<Pick<PopupProps, \"positioning\" | \"onClose\">>\n>({});\n","import React, { CSSProperties, HTMLAttributes, useContext } from \"react\";\nimport { mergeProps } from \"@react-aria/utils\";\n\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { OverlayMoveHandle } from \"@intellij-platform/core/Overlay\";\n\nimport { PopupContext } from \"./PopupContext\";\n\nconst StyledPopupHeader = styled.div<{\n  active?: boolean;\n  hasControls?: boolean;\n}>`\n  box-sizing: border-box;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 1.5rem;\n  min-height: ${({ hasControls }) => hasControls && \"1.75rem\"};\n  cursor: default;\n  white-space: nowrap;\n  color: ${({ theme, active }) =>\n    active\n      ? theme.color(\n          \"Popup.Header.activeForeground\" as UnknownThemeProp<\"Popup.Header.activeForeground\">,\n          theme.commonColors.labelForeground\n        )\n      : theme.color(\n          \"Popup.Header.inactiveForeground\" as UnknownThemeProp<\"Popup.Header.inactiveForeground\">,\n          theme.commonColors.labelDisabledForeground\n        )};\n  background-color: ${({ theme, active }) =>\n    active\n      ? theme.color(\"Popup.Header.activeBackground\", \"#e6e6e6\")\n      : theme.color(\"Popup.Header.inactiveBackground\", `#ededed`)};\n`;\n/**\n * Implements appearance of\n * [Popup Header](https://www.figma.com/file/nfDfMAdV7j2fnQlpYNAOfP/IntelliJ-Platform-UI-Kit-%28Community%29?node-id=75455%3A26566&t=Hzwse5j5R6iCEzVW-4),\n * and also acts as a handle for moving the panel.\n * Expected to be used with {@link Popup#Layout}:\n *\n * @example\n * ```tsx\n * <Popup>\n *    <Popup.Layout header={<Popup.Header>header</Popup.Header>} />\n * </Popup>\n * ```\n */\nexport const PopupHeader = ({\n  children,\n  hasControls,\n  className,\n  style,\n}: {\n  children?: React.ReactNode;\n  hasControls?: boolean;\n  className?: string;\n  style?: CSSProperties;\n}) => {\n  const { isActive, movable, titleProps } = useContext(PopupContext);\n  const renderHeader = (otherProps: HTMLAttributes<HTMLElement> = {}) => (\n    <StyledPopupHeader\n      active={isActive}\n      hasControls={hasControls}\n      className={className}\n      style={style}\n      {...mergeProps(titleProps, otherProps)}\n    >\n      {children}\n    </StyledPopupHeader>\n  );\n  return movable ? (\n    <OverlayMoveHandle>\n      {({ moveHandleProps }) => renderHeader(moveHandleProps)}\n    </OverlayMoveHandle>\n  ) : (\n    renderHeader()\n  );\n};\n","import React from \"react\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { Popup } from \"./Popup\";\nimport { PopupHeader } from \"./PopupHeader\";\nimport { StyledPopupHint } from \"@intellij-platform/core/Popup/StyledPopupHint\";\n\nconst StyledPopupLayout = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: inherit;\n`;\nconst StyledPopupLayoutHeader = styled.div`\n  flex-shrink: 0;\n`;\nconst StyledPopupLayoutContent = styled.div`\n  flex: 1;\n  overflow: auto;\n  // Not sure about making the content area a vertical flex container, but it seemed it makes sense as default.\n  // The use case at hand where this was added was \"Branches\" popup, which would of course be implementable without this\n  // too, with an extra flex container around the menu.\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledPopupLayoutFooter = styled.div`\n  flex-shrink: 0;\n`;\n\n/**\n * Popup content layout, supporting fixed `header` and `footer` sections, and a scrollable `content` area.\n */\nexport function PopupLayout({\n  header,\n  footer,\n  content,\n}: {\n  /**\n   * Fixed position header of the popup at the top. {@link Popup.Header} can be used for the content.\n   */\n  header?: React.ReactNode;\n  /**\n   * Scrollable content of the popup.\n   */\n  content: React.ReactNode;\n  /**\n   * Fixed position footer of the popup at the bottom. {@link Popup.Hint} can be used for the content.\n   */\n  footer?: React.ReactNode;\n}) {\n  return (\n    <StyledPopupLayout>\n      {header && (\n        <StyledPopupLayoutHeader>\n          {typeof header === \"string\" ? (\n            <PopupHeader>{header}</PopupHeader>\n          ) : (\n            header\n          )}\n        </StyledPopupLayoutHeader>\n      )}\n      <StyledPopupLayoutContent>{content}</StyledPopupLayoutContent>\n      {footer && (\n        <StyledPopupLayoutFooter>\n          {typeof footer === \"string\" ? (\n            <StyledPopupHint>{footer}</StyledPopupHint>\n          ) : (\n            footer\n          )}\n        </StyledPopupLayoutFooter>\n      )}\n    </StyledPopupLayout>\n  );\n}\n","import React, {\n  ReactElement,\n  ReactNode,\n  useContext,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { Popup, PopupProps } from \"./Popup\";\nimport { PopupControllerContext } from \"@intellij-platform/core/Popup/PopupContext\";\n\nexport interface PopupManagerAPI {\n  /**\n   * Shows a popup within the stack of popups managed by {@link PopupManager}.\n   * The opened popup will be closed when `onClose` interactions happen.\n   */\n  show(\n    popup:\n      | React.ReactElement<PopupProps, typeof Popup>\n      | ((args: {\n          close: () => void;\n        }) => React.ReactElement<PopupProps, typeof Popup>)\n  ): void;\n}\n\nconst NotImplementedFn = () => {\n  throw new Error(\n    \"PopupManager not found. Wrap your application with PopupManager to be able to open popups imperatively\"\n  );\n};\n\nconst PopupsContext = React.createContext<PopupManagerAPI>({\n  show: NotImplementedFn,\n});\n\n/**\n * Returns imperative API for showing popups.\n */\nexport const usePopupManager = (): PopupManagerAPI => useContext(PopupsContext);\n\ntype PopupElement = ReactElement<PopupProps, typeof Popup>;\n\nexport interface PopupManagerProps {\n  children?: ReactNode;\n}\n\n/**\n * Enables imperative API (via {@link usePopupManager}) for showing Popups.\n * It renders popups in a portal appended to `body`, unless `disablePortal` is `true`.\n */\nexport const PopupManager: React.FC<PopupManagerProps> = ({ children }) => {\n  const [popups, setPopups] = useState<Array<PopupElement>>([]);\n  const newKeyRef = useRef<number>(0);\n\n  const api = useMemo<PopupManagerAPI>(() => {\n    const show: PopupManagerAPI[\"show\"] = (popup) => {\n      newKeyRef.current++;\n      const close = () => {\n        setPopups((currentPopups) =>\n          currentPopups.filter((aPopup) => aPopup !== wrappedPopup)\n        );\n      };\n      const wrappedPopup = (\n        <PopupControllerContext.Provider\n          key={newKeyRef.current}\n          value={{ onClose: close }}\n        >\n          {typeof popup === \"function\" ? popup({ close }) : popup}\n        </PopupControllerContext.Provider>\n      );\n      setPopups((currentPopups) => currentPopups.concat(wrappedPopup));\n    };\n    return {\n      show,\n    };\n  }, []);\n\n  return (\n    <PopupsContext.Provider value={api}>\n      {children}\n      {popups}\n    </PopupsContext.Provider>\n  );\n};\n","import React, { ForwardedRef } from \"react\";\nimport { OverlayTriggerProps, useOverlayTrigger } from \"@react-aria/overlays\";\nimport { PressResponder } from \"@react-aria/interactions\";\nimport { useObjectRef } from \"@react-aria/utils\";\nimport {\n  OverlayTriggerProps as OverlayTriggerStateProps,\n  useOverlayTriggerState,\n} from \"@react-stately/overlays\";\n\nimport { PopupProps } from \"./Popup\";\nimport { PopupControllerContext } from \"./PopupContext\";\n\nexport interface PopupTriggerProps\n  extends Partial<OverlayTriggerProps>,\n    OverlayTriggerStateProps {\n  placement?: Required<PopupProps>[\"positioning\"][\"placement\"];\n  popup:\n    | React.ReactElement\n    | (({ close }: { close: () => void }) => React.ReactNode);\n  children: React.ReactElement;\n}\n\n/**\n * Popup opened by a trigger. `trigger` can be an element of any pressable component (such as {@link Button} or\n * {@link IconButton}), and is rendered in place. Similar to {@link Popup component}, `children` defines the content\n * of Popup.\n */\nexport const PopupTrigger = React.forwardRef(function PopupTrigger(\n  { placement, children, popup, ...props }: PopupTriggerProps,\n  forwardedRef: ForwardedRef<HTMLButtonElement>\n) {\n  const state = useOverlayTriggerState(props);\n  const triggerRef = useObjectRef(forwardedRef);\n  const { overlayProps, triggerProps } = useOverlayTrigger(\n    { type: props.type || \"menu\" },\n    state,\n    triggerRef\n  );\n  return (\n    <>\n      <PressResponder ref={triggerRef} {...triggerProps}>\n        {children}\n      </PressResponder>\n      {state.isOpen && (\n        <PopupControllerContext.Provider\n          value={{\n            overlayProps,\n            positioning: {\n              targetRef: triggerRef,\n              placement,\n            },\n            onClose: state.close,\n          }}\n        >\n          {typeof popup === \"function\" ? popup({ close: state.close }) : popup}\n        </PopupControllerContext.Provider>\n      )}\n    </>\n  );\n});\n","import { WINDOW_SHADOW } from \"@intellij-platform/core/style-constants\";\nimport { styled } from \"@intellij-platform/core/styled\";\n\nexport const StyledPopupContainer = styled.div`\n  position: fixed;\n  box-sizing: border-box;\n  // not checked if there should be a better substitute for * in the following colors. Maybe \"Component\"?\n  background-color: ${({ theme }) => theme.color(\"*.background\")};\n  color: ${({ theme }) => theme.color(\"*.foreground\")};\n  outline: none; // Focus will be reflected in header. No need for outline or any other focus style on the container\n  ${WINDOW_SHADOW}; // FIXME: OS-dependant style?\n`;\n","import { styled } from \"@intellij-platform/core/styled\";\n\n/**\n * Hint component (aka Advertiser) used in Popup's footer.\n * {@see Popup.Layout}\n */\nexport const StyledPopupHint = styled.div`\n  // NOTE: Following the reference implementation, would require to set fallback colors non-prior to\n  // *.(background|foreground) colors (by not passing the fallback color as the second argument to theme.color).\n  // It's only in BigPopup that the fallback colors are prioritized over *-fallback. But in Figma designs, this is\n  // simplified, and hint always has the muted color (like in BigPopup), instead of the default foreground.\n  // So we are intentionally deviating from the reference implementation here.\n  background: ${({ theme }) =>\n    theme.color(\n      \"Popup.Advertiser.background\",\n      theme.color(\"SearchEverywhere.Advertiser.background\")\n    )};\n  color: ${({ theme }) =>\n    theme.color(\n      \"Popup.Advertiser.foreground\",\n      theme.color(\"SearchEverywhere.Advertiser.foreground\")\n    )};\n  padding: 0.3125rem 0.9375rem 0.3125rem 0.625rem;\n  font-size: 0.875em;\n  line-height: normal;\n  user-select: none;\n  cursor: default;\n  // NOTE: white-space is intentionally not set as nowrap.\n`;\n","import React, {\n  CSSProperties,\n  HTMLAttributes,\n  RefObject,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { keyframes } from \"styled-components\";\nimport { useProgressBar } from \"@react-aria/progress\";\nimport { AriaProgressBarProps } from \"@react-types/progress\";\nimport { PressProps, useHover } from \"@react-aria/interactions\";\nimport { useButton } from \"@react-aria/button\";\nimport { mergeProps } from \"@react-aria/utils\";\n\nimport { Theme } from \"@intellij-platform/core/Theme\";\nimport { css, styled } from \"@intellij-platform/core/styled\";\n\nexport interface ProgressBarProps extends Omit<AriaProgressBarProps, \"label\"> {\n  /**\n   * Process name, shown above or to the left of the progress bar. Placement is controlled by {@link namePosition}.\n   * @see https://jetbrains.github.io/ui/controls/progress_bar/#process-name\n   */\n  name?: React.ReactNode;\n\n  /**\n   * Process name position with respect to the progress bar.\n   * If `namePosition` is \"side\", {@link name} is **not** automatically appended with a colon.\n   * @default \"top\"\n   */\n  namePosition?: \"side\" | \"top\";\n\n  /**\n   * Process details, placed bellow the progress bar, with a de-emphasized color.\n   * @see https://jetbrains.github.io/ui/controls/progress_bar/#process-details\n   */\n  details?: React.ReactNode;\n\n  /**\n   * A second line of details. Not an officially documented feature, but it's supported in the reference impl.\n   */\n  secondaryDetails?: React.ReactNode;\n\n  /**\n   * Placed next to and aligned with the progress bar, used for\n   * [process control](https://jetbrains.github.io/ui/controls/progress_bar/#process-control) buttons.\n   */\n  button?: React.ReactNode;\n\n  /**\n   * Progress bar track width.\n   */\n  width?: CSSProperties[\"width\"];\n\n  /**\n   * Not supported in [the official specs](https://jetbrains.github.io/ui/controls/progress_bar/#25), but the progress\n   * bar in status bar has a denser spacing. It still won't be a pixel perfect match with the progress bar in the\n   * status bar.\n   */\n  dense?: boolean;\n\n  /** Whether the value's label is displayed. True by default if there's a label, false by default if not. */\n  showValueLabel?: boolean;\n\n  style?: HTMLAttributes<unknown>[\"style\"];\n  className?: HTMLAttributes<unknown>[\"className\"];\n}\n\ninterface ProgressBarContextObj {\n  setForcedDetails: (details: string | null) => void;\n  setTooltip: (tooltip: string | null) => void;\n}\n\n/**\n * @see https://jetbrains.github.io/ui/controls/progress_bar/\n * @see https://github.com/JetBrains/intellij-community/blob/82f201386c3f7a339ff25fc8f3389024c8078a87/platform/platform-api/src/com/intellij/openapi/ui/panel/ProgressPanelBuilder.java\n *\n * Known issues:\n * There are a couple of UI issues because of the current layout (which can be improved probably):\n * - max-width of the label and details, it's not necessarily aligned with the the progressbar track, because they don't\n *   share the same container\n * - when label is on the side, details is aligned with the label, instead of the progressbar track.\n */\nexport const ProgressBar = ({\n  value = 0,\n  maxValue = 100,\n  minValue = 0,\n  name,\n  namePosition = \"top\",\n  details,\n  secondaryDetails,\n  button,\n  width,\n  dense,\n  className,\n  style,\n  valueLabel,\n  showValueLabel = Boolean(valueLabel),\n  ...props\n}: ProgressBarProps): React.ReactElement => {\n  const { progressBarProps, labelProps } = useProgressBar({\n    ...props,\n    label: name,\n    value,\n    valueLabel,\n    maxValue,\n    minValue,\n  });\n  const percentage = (100 * (value / maxValue)).toFixed(0);\n  const [forcedDetails, setForcedDetails] = useState<null | string>(\"\");\n  const [tooltip, setTooltip] = useState<null | string>(\"\");\n\n  const contextValue: ProgressBarContextObj = useMemo(\n    () => ({\n      setForcedDetails,\n      setTooltip,\n    }),\n    []\n  );\n  const label = (\n    <StyledProgressBarLabel {...labelProps}>{name}</StyledProgressBarLabel>\n  );\n  const effectiveDetails = details ? tooltip || forcedDetails || details : null;\n  return (\n    <StyledProgressBarContainer style={style} className={className}>\n      {namePosition === \"top\" && label}\n      <StyledProgressBarLineContainer\n        dense={dense}\n        hasTopMargin={Boolean(name) && namePosition === \"top\"}\n        hasBottomMargin={Boolean(effectiveDetails)}\n      >\n        {namePosition === \"side\" && label}\n        <StyledProgressBarTrack\n          style={{ width }}\n          {...progressBarProps}\n          indeterminate={props.isIndeterminate}\n        >\n          {!props.isIndeterminate && (\n            <StyledProgressBarProgress style={{ width: `${percentage}%` }} />\n          )}\n        </StyledProgressBarTrack>\n        {showValueLabel && <span>{valueLabel ?? `${percentage}%`}</span>}\n        <ProgressBarContext.Provider value={contextValue}>\n          {button}\n        </ProgressBarContext.Provider>\n      </StyledProgressBarLineContainer>\n      <StyledProgressBarDetails>{effectiveDetails}</StyledProgressBarDetails>\n      <StyledProgressBarDetails>{secondaryDetails}</StyledProgressBarDetails>\n    </StyledProgressBarContainer>\n  );\n};\n\nconst ProgressBarContext = React.createContext<null | ProgressBarContextObj>(\n  null\n);\n\nconst StyledProgressBarContainer = styled.div`\n  color: ${({ theme }) => theme.commonColors.labelForeground /* TODO: check*/};\n  cursor: default; // prevent cursor on text\n`;\n\nconst StyledProgressBarLineContainer = styled.div<{\n  dense?: boolean;\n  hasTopMargin?: boolean;\n  hasBottomMargin?: boolean;\n}>`\n  display: flex;\n  align-items: center;\n  gap: ${({ dense }) => (dense ? \"0.5rem\" : \"0.625rem\")};\n  height: 4px;\n  // spacing is based on the reference impl and figma designs. top and bottom spacing is inverted in the spec document\n  // figma: https://www.figma.com/file/nfDfMAdV7j2fnQlpYNAOfP/IntelliJ-Platform-UI-Kit-(Community)?node-id=75426%3A16650\n  // spec document: https://jetbrains.github.io/ui/controls/progress_bar/#25\n  margin-top: ${({ hasTopMargin }) => hasTopMargin && \"0.375rem\"};\n  margin-bottom: ${({ hasBottomMargin }) => hasBottomMargin && \"0.25rem\"};\n`;\n\nconst StyledProgressBarLabel = styled.div`\n  white-space: nowrap;\n  max-width: calc(100% - 2rem);\n  overflow: hidden;\n`;\n\nconst StyledProgressBarDetails = styled.div`\n  color: ${({ theme }) => theme.commonColors.contextHelpForeground};\n  font-size: 0.82em;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  max-width: calc(100% - 2rem); // not the best way\n`;\n\nconst StyledProgressBarTrack = styled.div<{ indeterminate?: boolean }>`\n  height: inherit;\n  border-radius: 2px;\n  overflow: hidden;\n  display: flex;\n\n  // In case used in flex layout\n  min-width: 0;\n  flex: 1;\n\n  background: ${({ theme }) =>\n    theme.color(\n      \"ProgressBar.trackColor\",\n      theme.dark ? \"rgb(85,85,85)\" : \"rgb(196,196,196)\"\n    )};\n  ${({ indeterminate }) =>\n    indeterminate &&\n    css`\n      background: linear-gradient(\n        90deg,\n        ${getIndeterminateStartColor} 0%,\n        ${getIndeterminateEndColor} 50%,\n        ${getIndeterminateStartColor} 100%\n      );\n      background-size: 96px auto;\n      animation: 800ms ${indeterminateBackgroundAnimation} linear infinite;\n    `}\n`;\n\nconst getIndeterminateStartColor = ({ theme }: { theme: Theme }) =>\n  theme.color(\"ProgressBar.indeterminateStartColor\");\nconst getIndeterminateEndColor = ({ theme }: { theme: Theme }) =>\n  theme.color(\"ProgressBar.indeterminateEndColor\");\n\nconst indeterminateBackgroundAnimation = keyframes`\n  0% {\n    background-position: 0;\n  }\n  100% {\n    background-position: 96px;\n  }\n`;\n\nconst StyledProgressBarProgress = styled.div`\n  height: 100%;\n  background: ${({ theme }) =>\n    theme.color(\n      \"ProgressBar.progressColor\",\n      theme.dark ? \"rgb(160,160,160)\" : \"rgb(128,128,128)\"\n    )};\n`;\n\ntype ProgressBarIconButtonProps = Pick<PressProps, \"onPress\"> & {\n  hoverTooltip: string;\n};\n\n/**\n * Accessibility and functionality of progress bar icon buttons\n * @private maybe?\n */\nexport function useProgressBarIconButton(\n  { onPress, hoverTooltip }: ProgressBarIconButtonProps,\n  ref: RefObject<HTMLElement>\n) {\n  const { buttonProps } = useButton(\n    {\n      onPress,\n      elementType: \"span\",\n      excludeFromTabOrder: true,\n      preventFocusOnPress: true,\n    },\n    ref\n  );\n  const context = useContext(ProgressBarContext);\n  const { hoverProps, isHovered } = useHover({});\n  useEffect(() => {\n    context?.setTooltip(isHovered ? hoverTooltip : null);\n  }, [hoverTooltip, isHovered]);\n  return {\n    buttonProps: mergeProps(buttonProps, hoverProps),\n  };\n}\n\n/**\n * @private maybe?\n * */\nexport function useProgressBarPauseIconButton(\n  { paused, ...props }: ProgressBarIconButtonProps & { paused: boolean },\n  ref: RefObject<HTMLElement>\n) {\n  const context = useContext(ProgressBarContext);\n  useEffect(() => {\n    context?.setForcedDetails(paused ? \"Paused\" : null);\n  }, [paused]);\n  return useProgressBarIconButton(props, ref);\n}\n\n/**\n * Experimenting with an idea of exposing parts on each component, to maximize styling customizability, similar to\n * [classes](https://mui.com/joy-ui/api/button/#classes) API in MUI components. But instead of passing classes prop,\n * one would be able to create custom versions of a component by doing something like this:\n * const CustomComponent = styled(Component)`\n *   ${Component.part1} {\n *     // custom style here\n *   }\n * `;\n * The question is if this type of customizability is actually a good thing in the balance between flexibility for\n * catering for different use cases and not stepping out of the design system boundaries.\n * Another potential downside is that the public API expands to the anatomy of the component.\n */\nProgressBar.Container = StyledProgressBarContainer;\nProgressBar.Label = StyledProgressBarLabel;\nProgressBar.LineContainer = StyledProgressBarLineContainer;\nProgressBar.Track = StyledProgressBarTrack;\nProgressBar.Progress = StyledProgressBarProgress;\nProgressBar.Details = StyledProgressBarDetails;\n","import React, { useRef } from \"react\";\nimport { AutoHoverPlatformIcon } from \"@intellij-platform/core/Icon\";\nimport { useProgressBarIconButton } from \"./ProgressBar\";\n\ninterface ProgressBarCancelButtonProps {\n  /**\n   * whether small icon should be used.\n   */\n  small?: boolean;\n  onPress: () => void;\n}\n\n/**\n * Stop (cancel) icon button for progress bar, to be used in {@link ProgressBarProps#button}.\n */\nexport const ProgressBarStopButton = ({\n  small,\n  onPress,\n}: ProgressBarCancelButtonProps) => {\n  const ref = useRef<HTMLSpanElement>(null);\n  const { buttonProps } = useProgressBarIconButton(\n    { onPress, hoverTooltip: \"Cancel\" },\n    ref\n  );\n  return (\n    <AutoHoverPlatformIcon\n      ref={ref}\n      {...buttonProps}\n      icon={`process/stop${small ? \"Small\" : \"\"}.svg`}\n      hoverIcon={`process/stop${small ? \"Small\" : \"\"}Hovered.svg`}\n    />\n  );\n};\n","import React from \"react\";\nimport {\n  ThreeViewSplitter,\n  ThreeViewSplitterProps,\n} from \"./ThreeViewSplitter/ThreeViewSplitter\";\n\ntype ResizableViewProps = Omit<\n  ThreeViewSplitterProps,\n  | \"innerView\"\n  | \"firstView\"\n  | \"firstSize\"\n  | \"onFirstResize\"\n  | \"lastView\"\n  | \"lastSize\"\n  | \"onLastResize\"\n> & {\n  children: React.ReactNode;\n  onResize: ThreeViewSplitterProps[\"onFirstResize\"];\n  size: ThreeViewSplitterProps[\"firstSize\"];\n  /**\n   * Whether the resizer should be placed at before or after the resizable view.\n   */\n  resizerPlacement?: \"before\" | \"after\";\n};\n/**\n * A single resizable view, built on top of {@link ThreeViewSplitter}, just to provide better prop interface.\n * Like `ThreeViewSplitter` it supports \"horizontal\" or \"vertical orientations. There is an extra `resizerPlacement`\n * prop which determines where the resizer should be placed in relation with the view. When set to \"before\" the view\n * will be resizable from the start (\"left\" or \"top\"). When set to \"after\" the view will be resizable from end (\"right\"\n * or \"bottom\"). Default is \"after\"\n */\nexport const ResizableView = ({\n  children,\n  size,\n  onResize,\n  resizerPlacement = \"after\",\n  ...props\n}: ResizableViewProps) => (\n  <ThreeViewSplitter\n    {...(resizerPlacement === \"after\"\n      ? { firstView: children, firstSize: size, onFirstResize: onResize }\n      : { lastView: children, lastSize: size, onLastResize: onResize })}\n    {...props}\n  />\n);\n","import React from \"react\";\nimport { ResizerProps } from \"./ResizerProps\";\nimport { useBottomResizer } from \"./useResizer\";\nimport { VerticalResizer } from \"./VerticalResizer\";\n\n/**\n * Handle for resizing views in a vertical layout, where the resizer is at the top side of the resizable view. i.e.\n * moving mouse to bottom/top will increase/decrease the height\n */\nexport const BottomResizer: React.FC<ResizerProps<\"vertical\">> = ({\n  onResize,\n  onResizeEnd,\n  onResizeStarted,\n  ...props\n}) => {\n  const { resizerProps } = useBottomResizer({\n    onResize,\n    onResizeEnd,\n    onResizeStarted,\n  });\n  return <VerticalResizer resizerProps={resizerProps} {...props} />;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { ResizerViewProps } from \"./useResizer\";\n\ntype HorizontalResizerViewProps = ResizerViewProps<\"horizontal\">;\n\nconst StyledHorizontalResizer = styled.div`\n  top: 0;\n  height: 100%;\n  width: 0;\n  position: relative;\n  z-index: 1; // to keep resizer on top of sibling views, in case they are non-static\n`;\n\nconst StyledHorizontalResizerArea = styled.div<{\n  handleSize: number;\n  cursor: HorizontalResizerViewProps[\"cursor\"];\n}>`\n  position: absolute;\n  cursor: ${({ cursor }) => `${cursor}-resize`};\n  width: ${({ handleSize }) => `calc(100% + ${handleSize}px)`};\n  height: 100%;\n  left: ${({ handleSize }) => `-${handleSize / 2}px`};\n`;\n\n/**\n * Handle for resizing views in a horizontal layout. It just handles the\n * movement event and calls onResize with the new size. It has nothing to do\n * with actually applying the size.\n */\nexport const HorizontalResizer: React.FC<HorizontalResizerViewProps> = ({\n  outerPadding = 10,\n  background,\n  size = 0,\n  cursor = \"col\",\n  children,\n  style = {},\n  resizerProps,\n}) => {\n  return (\n    <StyledHorizontalResizer\n      {...resizerProps}\n      style={{ ...style, background, width: size }}\n    >\n      {children}\n      <StyledHorizontalResizerArea handleSize={outerPadding} cursor={cursor} />\n    </StyledHorizontalResizer>\n  );\n};\n","import React from \"react\";\nimport { HorizontalResizer } from \"./HorizontalResizer\";\nimport { ResizerProps } from \"./ResizerProps\";\nimport { useLeftResizer } from \"./useResizer\";\n\n/**\n * Handle for resizing views in a horizontal layout, where the resizer is at the left side of the resizable view. i.e.\n * moving mouse to right/left will decrease/increase the width\n */\nexport const LeftResizer: React.FC<ResizerProps<\"horizontal\">> = ({\n  onResize,\n  onResizeEnd,\n  onResizeStarted,\n  ...props\n}) => {\n  const { resizerProps } = useLeftResizer({\n    onResize,\n    onResizeEnd,\n    onResizeStarted,\n  });\n  return <HorizontalResizer resizerProps={resizerProps} {...props} />;\n};\n","import React from \"react\";\nimport { HorizontalResizer } from \"./HorizontalResizer\";\nimport { ResizerProps } from \"./ResizerProps\";\nimport { useRightResizer } from \"./useResizer\";\n\n/**\n * Handle for resizing views in a horizontal layout, where the resizer is at the right side of the resizable view. i.e.\n * moving mouse to right/left will increase/decrease the width\n */\nexport const RightResizer: React.FC<ResizerProps<\"horizontal\">> = ({\n  onResize,\n  onResizeEnd,\n  onResizeStarted,\n  ...props\n}) => {\n  const { resizerProps } = useRightResizer({\n    onResize,\n    onResizeEnd,\n    onResizeStarted,\n  });\n  return <HorizontalResizer resizerProps={resizerProps} {...props} />;\n};\n","import React from \"react\";\nimport { ResizerProps } from \"./ResizerProps\";\nimport { useTopResizer } from \"./useResizer\";\nimport { VerticalResizer } from \"./VerticalResizer\";\n\n/**\n * Handle for resizing views in a vertical layout, where the resizer is at the top side of the resizable view. i.e.\n * moving mouse to bottom/top will decrease/increase the height\n */\nexport const TopResizer: React.FC<ResizerProps<\"vertical\">> = ({\n  onResize,\n  onResizeEnd,\n  onResizeStarted,\n  ...props\n}) => {\n  const { resizerProps } = useTopResizer({\n    onResize,\n    onResizeEnd,\n    onResizeStarted,\n  });\n  return <VerticalResizer resizerProps={resizerProps} {...props} />;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { ResizerViewProps } from \"./useResizer\";\n\ntype VerticalResizerViewProps = ResizerViewProps<\"vertical\">;\n\nconst StyledVerticalResizer = styled.div`\n  width: 100%;\n  height: 0;\n  position: relative;\n  z-index: 1; // to keep resizer on top of sibling views, in case they are non-static\n`;\n\nconst StyledVerticalResizerArea = styled.div<{\n  handleSize: number;\n  cursor: VerticalResizerViewProps[\"cursor\"];\n}>`\n  position: absolute;\n  cursor: ${({ cursor }) => `${cursor}-resize`};\n  height: ${({ handleSize }) => `calc(100% + ${handleSize}px)`};\n  width: 100%;\n  top: ${({ handleSize }) => `-${handleSize / 2}px`};\n`;\n\n/**\n * Handle for resizing views in a vertical layout. It just handles the\n * movement event and calls onResize with the new size. It has nothing to do\n * with actually applying the size.\n */\nexport const VerticalResizer: React.FC<VerticalResizerViewProps> = ({\n  outerPadding = 10,\n  background,\n  size = 0,\n  cursor = \"row\",\n  resizerProps,\n  children,\n  style = {},\n}) => (\n  <StyledVerticalResizer\n    {...resizerProps}\n    style={{ ...style, background, height: size }}\n  >\n    {children}\n    <StyledVerticalResizerArea handleSize={outerPadding} cursor={cursor} />\n  </StyledVerticalResizer>\n);\n","import { useMove } from \"../utils/interaction-utils/useMove\";\nimport { ResizerProps } from \"./ResizerProps\";\n\ntype UseResizerProps = Pick<\n  ResizerProps,\n  \"onResize\" | \"onResizeEnd\" | \"onResizeStarted\"\n>;\n\nexport type ResizerViewProps<O = \"horizontal\" | \"vertical\"> = Omit<\n  ResizerProps<O>,\n  \"onResize\" | \"onResizeEnd\" | \"onResizeStarted\"\n> &\n  ReturnType<typeof useResizer>;\n\nconst useResizer = (\n  orientation: \"horizontal\" | \"vertical\",\n  invert: boolean,\n  { onResizeStarted, onResize, onResizeEnd }: UseResizerProps\n) => {\n  const props = useMove({\n    dragThreshold: 0,\n    onMoveStart: () => onResizeStarted() || 0,\n    onMoveEnd: () => onResizeEnd?.(),\n    onMove: ({ movement, startState }) =>\n      onResize(\n        startState +\n          (invert ? -1 : +1) *\n            movement[orientation === \"horizontal\" ? \"x\" : \"y\"]\n      ),\n  });\n  return {\n    resizerProps: props,\n  };\n};\n\nexport const useLeftResizer = (props: UseResizerProps) => {\n  return useResizer(\"horizontal\", true, props);\n};\n\nexport const useRightResizer = (props: UseResizerProps) => {\n  return useResizer(\"horizontal\", false, props);\n};\n\nexport const useTopResizer = (props: UseResizerProps) => {\n  return useResizer(\"vertical\", true, props);\n};\n\nexport const useBottomResizer = (props: UseResizerProps) => {\n  return useResizer(\"vertical\", false, props);\n};\n","import React, { ComponentProps, useState } from \"react\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport { useControlledState } from \"@react-stately/utils\";\n\nimport { styled } from \"@intellij-platform/core/styled\";\nimport {\n  ActionDefinition,\n  ActionsProvider,\n  CommonActionId,\n  useGetActionShortcut,\n} from \"@intellij-platform/core/ActionSystem\";\nimport { Input, InputProps } from \"@intellij-platform/core/InputField\";\nimport {\n  AutoHoverPlatformIcon,\n  PlatformIcon,\n} from \"@intellij-platform/core/Icon\";\nimport { Menu, MenuTrigger } from \"@intellij-platform/core/Menu\";\nimport { Item } from \"@intellij-platform/core/Collections\";\nimport { ActionTooltip, TooltipTrigger } from \"@intellij-platform/core/Tooltip\";\n\nexport interface SearchInputProps\n  extends Omit<InputProps, \"onSubmit\" | \"onChange\"> {\n  /**\n   * Search history to be shown as a menu when the search icon is pressed.\n   */\n  searchHistory?: Array<string>;\n  /**\n   * The content of \"show history\" button tooltip, and the corresponding action title.\n   * @default \"Recent Search\"\n   */\n  historyButtonTitle?: string;\n  /**\n   * Called when the search input is cleared by either clear button or `Escape` key.\n   * `onChange` is also called with an empty string, whenever the input is cleared,\n   * so there is no need for updating the state using `onClear`, when the value is controlled.\n   *\n   * @param clearedValue the value before clearing.\n   */\n  onClear?: (clearedValue: string) => void;\n  /**\n   * Called when the search is submitted by pressing `Enter`\n   * @param value submitted text\n   */\n  onSubmit?: (value: string) => void;\n  /**\n   * Controlled value of the search input\n   */\n  value?: string;\n  /**\n   * Default value of the search input, used for initialization when value is uncontrolled.\n   */\n  defaultValue?: string;\n  /**\n   * Called when the value is changed.\n   */\n  onChange?: (value: string) => void;\n  /**\n   * Called when a history item is selected. `onChange` is called with the selected text, so\n   * there is no need for updating the state using `onHistoryItemSelected`, when the value is controlled.\n   *\n   * @param value text selected from history.\n   * @param previousValue the value of the input before the history item was selected.\n   */\n  onHistoryItemSelected?: (value: string, previousValue: string) => void;\n}\n\nconst StyledInput = styled(Input)`\n  input[type=\"search\"] {\n    -webkit-appearance: none;\n    &::-webkit-search-cancel-button {\n      -webkit-appearance: none;\n    }\n    &::-webkit-search-decoration {\n      -webkit-appearance: none;\n    }\n  }\n`;\n\n/**\n * A wrapper around {@link Input} with a few additions:\n * - A Search icon, added as an {@link InputProps#addonBefore addonBefore}.\n * - A clear button, added as an {@link InputProps#addonAfter addonAfter}, when the input has value.\n *   {@link SearchInputProps#onClear onClear} is called when the clear button is clicked.\n * - A list of search queries shown as a menu, when the search icon is clicked,\n *   if {@link SearchInputProps#searchHistory searchHistory} is provided.\n * - An action provided on the input element, to open the search history via\n *   {@link CommonActionId.SHOW_SEARCH_HISTORY} shortcut.\n * - Search submission callback ({@link SearchInputProps#onSubmit onSubmit}) called when search is submitted by pressing Enter\n *\n * {@link InputProps#onChange onChange} and {@link InputProps#onSubmit onSubmit} props are also different in SearchInput, compared to\n * the corresponding props of the native input.\n *\n * Caveat: If the width is not set (either explicitly or via the entailing layout), the width of the input will change when clear button shows/hides.\n *\n * @see Input\n * @see InputField\n */\nexport const SearchInput = React.forwardRef(function SearchInput(\n  {\n    addonBefore,\n    addonAfter,\n    searchHistory,\n    onClear,\n    onSubmit,\n    onHistoryItemSelected,\n    historyButtonTitle = \"Recent Search\",\n    value: valueProp,\n    defaultValue = \"\",\n    onChange,\n    type = \"search\",\n    inputRef: inputRefProp,\n    ...props\n  }: SearchInputProps,\n  forwardedRef: React.Ref<HTMLDivElement>\n) {\n  const [value, setValue] = useControlledState(\n    valueProp!,\n    defaultValue,\n    onChange!\n  );\n  const inputContainerRef = useObjectRef(forwardedRef);\n  const inputRef = useObjectRef(inputRefProp);\n  const [isSearchHistoryOpen, setSearchHistoryOpen] = useState(false);\n  const showSearchHistoryAction: ActionDefinition = {\n    id: CommonActionId.SHOW_SEARCH_HISTORY,\n    title: historyButtonTitle,\n    actionPerformed: () => {\n      setSearchHistoryOpen(true);\n    },\n  };\n  // TODO: rename HelpTooltip, ActionTooltip, etc. to Tooltip.Action Tooltip.Help, then add ActionTooltip in action\n  //  components, and use that instead of the more low-level API used here.\n  const getShortcut = useGetActionShortcut();\n  const searchIcon = searchHistory ? (\n    <MenuTrigger\n      isOpen={isSearchHistoryOpen}\n      onOpenChange={setSearchHistoryOpen}\n      positioningTargetRef={inputContainerRef}\n      renderMenu={({ menuProps }) => (\n        <Menu\n          {...menuProps}\n          autoFocus=\"first\"\n          onAction={(key) => {\n            const historyItemText =\n              searchHistory[parseInt(`${key}`.split(\"_\")[0])];\n            if (historyItemText !== undefined) {\n              setValue(historyItemText);\n              onHistoryItemSelected?.(historyItemText, value);\n              inputRef.current?.focus();\n            }\n          }}\n        >\n          {searchHistory.map((historyItem, index) => (\n            <Item key={`${index}_${historyItem}`}>{historyItem}</Item>\n          ))}\n        </Menu>\n      )}\n    >\n      {(menuTriggerProps, ref) => (\n        <TooltipTrigger\n          tooltip={\n            <ActionTooltip\n              actionName={historyButtonTitle}\n              shortcut={getShortcut(CommonActionId.SHOW_SEARCH_HISTORY)}\n            />\n          }\n        >\n          {(tooltipTriggerProps) => (\n            <PlatformIcon\n              {...mergeProps(tooltipTriggerProps, menuTriggerProps)}\n              ref={ref}\n              icon=\"actions/searchWithHistory.svg\"\n              role=\"button\"\n              aria-label={historyButtonTitle}\n            />\n          )}\n        </TooltipTrigger>\n      )}\n    </MenuTrigger>\n  ) : (\n    <PlatformIcon icon=\"actions/search.svg\" />\n  );\n  const clear = () => {\n    setValue(\"\");\n    onClear?.(value);\n  };\n  const inputProps = mergeProps<ComponentProps<typeof Input>[]>(props, {\n    ref: inputContainerRef,\n    inputRef,\n    value,\n    type,\n    onChange: (event) => {\n      setValue(event.target.value);\n    },\n    addonBefore: (\n      <>\n        {searchIcon}\n        {addonBefore}\n      </>\n    ),\n    addonAfter: (\n      <>\n        {value && (\n          <AutoHoverPlatformIcon\n            onClick={clear}\n            role=\"button\"\n            aria-label=\"Clear search\"\n            icon=\"actions/close\"\n            hoverIcon=\"actions/closeHovered\"\n          />\n        )}\n        {addonAfter}\n      </>\n    ),\n    onKeyDown: (event) => {\n      if (event.repeat) {\n        return;\n      }\n      if (event.key === \"Enter\") {\n        onSubmit?.(event.currentTarget.value);\n      } else if (event.key === \"Escape\") {\n        clear();\n      }\n    },\n  });\n  if (searchHistory) {\n    return (\n      <ActionsProvider actions={[showSearchHistoryAction]}>\n        {({ shortcutHandlerProps }) => (\n          <StyledInput {...mergeProps(inputProps, shortcutHandlerProps)} />\n        )}\n      </ActionsProvider>\n    );\n  }\n  return <StyledInput {...inputProps} />;\n});\n","import React, { useRef } from \"react\";\nimport { useButton } from \"@react-aria/button\";\nimport {\n  AutoHoverPlatformIcon,\n  PlatformIcon,\n} from \"@intellij-platform/core/Icon\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\n\nexport interface SpeedSearchInputProps {\n  children: string | undefined;\n  match?: boolean;\n  active: boolean | undefined;\n  clear: () => void;\n}\n\nconst StyledSearchIcon = styled(PlatformIcon)`\n  margin-right: 0.25rem;\n`;\n\nconst StyledSpeedSearchInput = styled.span<{ noMatch?: boolean }>`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  background: ${({ theme, noMatch }) =>\n    noMatch\n      ? theme.color(\n          \"SearchField.errorBackground\",\n          theme.dark ? \"#743A3A\" : \"#ffcccc\"\n        )\n      : theme.color(\n          \"TextField.background\"\n        )}; // fallback logic not checked with the ref impl\n  color: ${({ theme }) =>\n    theme.color(\n      \"TextField.foreground\" as UnknownThemeProp<\"TextField.foreground\">\n    )}; // fallback logic not checked with the ref impl\n  height: 1.5rem; // 24px, JBTextField COMPACT_HEIGHT\n  padding: 0.125rem 0.375rem;\n  border: 1px solid ${({ theme }) => theme.getOutlineColor(true, false)};\n  border-radius: ${({ theme }) =>\n    ((theme.value(\"Component.arc\") as number) ?? 5) / 2}px;\n`;\nconst StyledSearchText = styled.span`\n  flex: 1;\n  font-size: 0.91em; // RelativeFont.SMALL\n`;\n\n/**\n * An input field to be rendered to show the filter value in speed search in menus and similar speedSearch-enabled\n * components.\n * @see SpeedSearchPopup\n */\nexport const SpeedSearchInput = React.forwardRef<\n  HTMLElement,\n  SpeedSearchInputProps\n>(({ active, match, children, clear }, ref) => {\n  const clearButtonRef = useRef<HTMLElement>(null);\n  const { buttonProps } = useButton(\n    {\n      elementType: \"span\",\n      \"aria-label\": \"Clear search\",\n      excludeFromTabOrder: true,\n      preventFocusOnPress: true,\n      onPress: clear,\n    },\n    clearButtonRef\n  );\n\n  // Temporary styled components until SearchInput is implemented\n  return active ? (\n    <StyledSpeedSearchInput ref={ref} noMatch={!match}>\n      <StyledSearchIcon icon={\"actions/search\"} />\n      <StyledSearchText>\n        {(children || \"\").replace(/ /g, \"\\u00A0\")}\n      </StyledSearchText>\n      {children && (\n        <AutoHoverPlatformIcon\n          {...buttonProps}\n          ref={clearButtonRef}\n          icon=\"actions/close\"\n          hoverIcon=\"actions/closeHovered\"\n        />\n      )}\n    </StyledSpeedSearchInput>\n  ) : null;\n});\n","import { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport React from \"react\";\nimport { styled } from \"../styled\";\n\nexport interface SpeedSearchPopupProps {\n  children: string | undefined;\n  match?: boolean;\n  active: boolean | undefined;\n}\n\nconst StyledSearchIcon = styled(PlatformIcon)`\n  margin-right: 10px;\n  vertical-align: middle;\n`;\n\n/**\n * The little popup view shown in the top left corner of list, tree, etc., which shows the search\n * query.\n * @see SpeedSearchInput\n */\nexport const SpeedSearchPopup = React.forwardRef<\n  HTMLElement,\n  SpeedSearchPopupProps\n>(({ active, match, children }, ref) =>\n  active ? (\n    <StyledSpeedSearchPopup ref={ref} noMatch={!match}>\n      <StyledSearchIcon icon={\"actions/search\"} />\n      {(children || \"\").replace(/ /g, \"\\u00A0\")}\n    </StyledSpeedSearchPopup>\n  ) : null\n);\n\nconst StyledSpeedSearchPopup = styled.span<{ noMatch?: boolean }>`\n  // ref: https://github.com/JetBrains/intellij-community/blob/e3c7d96daba1d5d84d5650bde6c220aed225bfda/platform/platform-impl/src/com/intellij/ui/SpeedSearchBase.java#L53-L53\n  box-sizing: border-box;\n  position: absolute;\n  background: ${({ theme }) =>\n    theme.color(\n      \"SpeedSearch.background\",\n      theme.dark ? \"rgb(111,111,111)\" : \"#fff\"\n    )};\n  border: 1px solid\n    ${({ theme }) =>\n      theme.color(\n        \"SpeedSearch.borderColor\",\n        theme.dark ? \"rgb(64, 64, 64)\" : \"rgb(192, 192, 192)\"\n      )};\n  color: ${({ noMatch, theme }) =>\n    noMatch\n      ? theme.color(\"SpeedSearch.errorForeground\", theme.commonColors.red)\n      : theme.color(\n          \"SpeedSearch.foreground\",\n          theme.commonColors.tooltipForeground\n        )};\n  z-index: 1;\n  padding: 3px 7px;\n  height: 25px;\n  line-height: 1.2;\n  transform: translateY(-100%);\n`;\n","import { useGhostInput } from \"./useGhostInput\";\nimport { useFocusWithin, useKeyboard } from \"@react-aria/interactions\";\nimport { useControlledState } from \"@react-stately/utils\";\nimport { ControlledStateProps } from \"../type-utils\";\nimport React, { RefObject } from \"react\";\nimport { hasAnyModifier } from \"@intellij-platform/core/utils/keyboard-utils\";\n\nexport interface SpeedSearchState {\n  /**\n   * Whether speed search is active. Speed search becomes active when the user starts to type and becomes inactive\n   * when Escape is pressed, or when the speed search container is blurred and `keepSearchActiveOnBlur` is false.\n   * Whenever speed search becomes inactive, search text is also cleared.\n   * Note that speed search can be active while search term is empty.\n   */\n  active: boolean;\n  setActive: (value: boolean) => void;\n  searchTerm: string;\n  setSearchTerm: (value: string) => void;\n  /**\n   * clears search term and sets active to false\n   */\n  clear: () => void;\n}\n\nexport interface SpeedSearchStateProps\n  extends ControlledStateProps<{\n    searchTerm: string;\n    isSearchActive: boolean;\n  }> {}\n\nexport function useSpeedSearchState(\n  props: SpeedSearchStateProps\n): SpeedSearchState {\n  const [active, setActive] = useControlledState(\n    props.isSearchActive!,\n    props.defaultIsSearchActive ?? false,\n    props.onIsSearchActiveChange!\n  );\n  const [searchTerm, setSearchTerm] = useControlledState(\n    props.searchTerm!,\n    props.defaultSearchTerm || \"\",\n    props.onSearchTermChange!\n  );\n\n  return {\n    active,\n    searchTerm,\n    setActive,\n    setSearchTerm,\n    clear: () => {\n      setSearchTerm(\"\");\n      setActive(false);\n    },\n  };\n}\n\nexport interface SpeedSearchProps {\n  keepSearchActiveOnBlur?: boolean | ((e: React.FocusEvent) => boolean);\n}\n\n/**\n * TODO: description\n * IMPORTANT: making the container element focusable is not a part of this hook. But it's a prerequisite for it to work.\n * Previously, a tabIndex:-1 was passed as a container prop, but it turns out it's not that simple. For collections for\n * example we usually want tab index to be 0 once it's not focused and then when an item is focused, we want it to be\n * -1, and such kind of logics are handled in their respective hooks. So, making the container focusable and how to do\n * it is NOT this hook's responsibility anymore.\n */\nexport function useSpeedSearch(\n  { keepSearchActiveOnBlur }: SpeedSearchProps,\n  { searchTerm, active, setActive, setSearchTerm }: SpeedSearchState,\n  ref: RefObject<HTMLElement>\n) {\n  const { onKeyDown: ghostInputKeydown } = useGhostInput({\n    value: searchTerm,\n    onChange: (value) => {\n      const trimmedValue = value.trimStart();\n      setSearchTerm(trimmedValue);\n      if (!active && trimmedValue !== \"\") {\n        setActive(true);\n      }\n    },\n  });\n  const clear = () => {\n    setSearchTerm(\"\");\n    setActive(false);\n  };\n\n  const {\n    keyboardProps: { onKeyDown, onKeyUp },\n  } = useKeyboard({\n    onKeyDown: (e) => {\n      if (!ref.current?.contains(e.target as HTMLElement)) {\n        // In case events are propagated through portals\n        return;\n      }\n      if (e.key === \"a\" && (e.metaKey || e.ctrlKey)) {\n        e.preventDefault();\n      }\n      if (e.key === \"Escape\") {\n        clear();\n      } else {\n        ghostInputKeydown(e);\n      }\n      /**\n       * In the reference impl, at least some action shortcuts are allowed\n       * while the search is active. But actions with some other shortcuts\n       * (like Delete) are not triggered while the speed search is active\n       * the current condition below is not 100% matching the reference impl,\n       * but seems to be good enough for now.\n       */\n      if (!active || hasAnyModifier(e)) {\n        e.continuePropagation();\n      }\n    },\n  });\n\n  const {\n    focusWithinProps: { onFocus, onBlur },\n  } = useFocusWithin({\n    onBlurWithin: (event) => {\n      if (\n        !(typeof keepSearchActiveOnBlur === \"function\"\n          ? keepSearchActiveOnBlur(event)\n          : keepSearchActiveOnBlur)\n      ) {\n        clear();\n      }\n    },\n  });\n\n  return {\n    containerProps: {\n      onFocus,\n      onBlur,\n      onKeyDown,\n      onKeyUp,\n    },\n  };\n}\n","import React, { useRef } from \"react\";\n\nfunction isTypeableElement(elem: HTMLElement): boolean {\n  const nonTypeableInputTypes: Array<HTMLInputElement[\"type\"]> = [\n    \"checkbox\",\n    \"radio\",\n    \"button\",\n  ];\n  return (\n    elem.isContentEditable ||\n    (elem instanceof HTMLInputElement &&\n      !nonTypeableInputTypes.includes(elem.type)) ||\n    elem instanceof HTMLTextAreaElement\n  );\n}\n\n/**\n * Main use case is for a list of item, which can have keyboard focus, be filterable and capture\n * typing if the corresponding keyboard events are not happening on an inner element (like an input)\n * that already handles typing.\n * @param value\n * @param onChange\n * TODO: add support for removing word by word by alt+backspace like native text fields.\n * TODO: add support for removing the whole content by command/ctrl+backspace.\n */\nexport function useGhostInput({\n  value,\n  onChange,\n}: {\n  value: string;\n  onChange: (value: string) => void;\n}) {\n  const valueRef = useRef(value);\n  valueRef.current = value;\n  const onKeyDown = (event: React.KeyboardEvent | KeyboardEvent) => {\n    if (\n      !event.ctrlKey &&\n      !event.altKey &&\n      !event.metaKey &&\n      (!(event.target instanceof HTMLElement) ||\n        !isTypeableElement(event.target))\n    ) {\n      if (event.key.length === 1) {\n        // Seems reasonable to prevent default here generally, but the specific case this is added for is the space key,\n        // scrolling the page.\n        event.preventDefault();\n        return onChange(`${valueRef.current}${event.key}`);\n      }\n      if (event.key === \"Backspace\") {\n        const sliceEnd = event.metaKey ? 0 : -1;\n        onChange(valueRef.current.slice(0, sliceEnd));\n      }\n    }\n  };\n  return { onKeyDown } as const;\n}\n","import React from \"react\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\n\nexport interface StatusBarProps {\n  left: React.ReactNode;\n  right: React.ReactNode;\n}\n\n/**\n * Status bar rendered at the bottom of the main window. In the reference implementation, there are three slots for\n * content: left, right and center. It doesn't seem center is really necessary, so only left and right are supported\n * for now.\n * @param left content on the left side of the status bar.\n * @param right content on the right side of the status bar. Typically, a bunch of {@link StatusBarWidget}s\n */\nexport const StatusBar = ({\n  left,\n  right,\n}: StatusBarProps): React.ReactElement => {\n  return (\n    <StyledStatusBar\n      onMouseDown={(e) => {\n        // stop focus from going out of the currently focused element, when status bar is clicked\n        // might be too intrusive to prevent default unconditionally :-? Also, it may make sense for it to be an option\n        e.preventDefault();\n      }}\n    >\n      <StyledStatusBarLeft>{left}</StyledStatusBarLeft>\n      <StyledStatusBarRight>{right}</StyledStatusBarRight>\n    </StyledStatusBar>\n  );\n};\n\nconst StyledStatusBar = styled.div`\n  box-sizing: border-box;\n  padding: 0 0.25rem;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between; // because there is left and right sides\n  background-color: ${({ theme }) =>\n    theme.color(\n      \"StatusBar.background\" as UnknownThemeProp<\"StatusBar.background\">,\n      theme.color(\"Panel.background\" as UnknownThemeProp<\"Panel.background\">)\n    ) || \"#fff\"};\n  color: ${({ theme }) =>\n    theme.color(\n      \"StatusBar.Widget.foreground\" as UnknownThemeProp<\"StatusBar.Widget.foreground\">,\n      theme.commonColors.labelForeground\n    )};\n  border-top: 1px solid\n    ${({ theme }) => theme.color(\"StatusBar.borderColor\", \"rgb(145, 145, 145)\")};\n  height: calc(1.25rem + 1px /* border*/);\n  line-height: 1.25rem;\n  font-size: 0.656rem; // not verified\n  cursor: default;\n`;\n\nconst StyledStatusBarSection = styled.div`\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n`;\n\nconst StyledStatusBarRight = styled(StyledStatusBarSection)`\n  flex-shrink: 0;\n`;\nconst StyledStatusBarLeft = styled(StyledStatusBarSection)`\n  flex-shrink: 1;\n  min-width: 0;\n  overflow: hidden;\n`;\n","import React, { ForwardedRef } from \"react\";\nimport { PressProps, usePress } from \"@react-aria/interactions\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport { useFocusable } from \"@react-aria/focus\";\n\nexport interface StatusBarWidgetProps extends PressProps {\n  label?: React.ReactNode;\n  icon?: React.ReactNode;\n}\n\n/**\n * Status bar button (aka widget), with the right hover and pressed appearance.\n * It doesn't get focused when pressed, and is excluded from tab order.\n * Disabled style is not couldn't be found, so it's skipped at the moment.\n */\nexport const StatusBarWidget = React.forwardRef(function StatusBarWidget(\n  props: StatusBarWidgetProps,\n  forwardedRef: ForwardedRef<HTMLSpanElement>\n) {\n  const ref = useObjectRef(forwardedRef);\n  // Maybe it's better for a11y to use useButton, or at least use button element?\n  const { pressProps, isPressed } = usePress({\n    ref,\n    ...props,\n    preventFocusOnPress: true,\n  });\n  const { focusableProps } = useFocusable({ excludeFromTabOrder: true }, ref);\n\n  const StyledWrapper = props.label\n    ? StyledStatusBarWidget\n    : StyledStatusBarIconWidget;\n  return (\n    <StyledWrapper\n      {...mergeProps(pressProps, focusableProps)}\n      className={isPressed ? \"pressed\" : \"\"}\n      ref={ref}\n    >\n      {props.icon}\n      {props.icon && props.label && (\n        <>&nbsp;</> //not the nicest way to handle spacing!\n      )}\n      {props.label}\n    </StyledWrapper>\n  );\n});\n\nconst StyledStatusBarWidget = styled.span`\n  display: inline-flex;\n  align-items: center;\n  padding: ${({ theme }) =>\n    theme.inset(\n      \"StatusBar.Widget.widgetInsets\" as UnknownThemeProp<\"StatusBar.Widget.widgetInsets\">\n    ) ?? \"0 0.375rem\"};\n  height: 1.125rem;\n  white-space: nowrap;\n  &:hover {\n    background-color: ${({ theme }) =>\n      theme.color(\n        \"StatusBar.Widget.hoverBackground\" as UnknownThemeProp<\"StatusBar.Widget.hoverBackground\">,\n        theme.color(\"ActionButton.hoverBackground\", \"#dfdfdf\")\n      )};\n    color: ${({ theme }) =>\n      theme.color(\n        \"StatusBar.Widget.hoverForeground\" as UnknownThemeProp<\"StatusBar.Widget.hoverForeground\">,\n        theme.commonColors.labelForeground\n      )};\n  }\n  &.pressed {\n    background-color: ${({ theme }) =>\n      theme.color(\n        \"StatusBar.Widget.pressedBackground\" as UnknownThemeProp<\"StatusBar.Widget.pressedBackground\">,\n        theme.color(\"ActionButton.pressedBackground\", \"#cfcfcf\")\n      )};\n    color: ${({ theme }) =>\n      theme.color(\n        \"StatusBar.Widget.pressedForeground\" as UnknownThemeProp<\"StatusBar.Widget.pressedForeground\">,\n        theme.commonColors.labelForeground\n      )};\n  }\n`;\n\nconst StyledStatusBarIconWidget = styled(StyledStatusBarWidget)`\n  padding: ${({ theme }) =>\n    theme.inset(\n      \"StatusBar.Widget.widgetInsets\" as UnknownThemeProp<\"StatusBar.Widget.widgetInsets\">\n    ) ?? \"0 0.25rem\"};\n`;\n","import React from \"react\";\nimport { styled } from \"./styled\";\n\ntype SeparatorUI = {\n  STRIPE_INDENT: number;\n  STRIPE_WIDTH: number;\n};\n\n// based on implementation in com.intellij.ide.ui.laf.darcula.ui.DarculaSeparatorUI, which seems to be used for all themes\nconst DarculaSeparatorUI: SeparatorUI = {\n  STRIPE_INDENT: 1,\n  STRIPE_WIDTH: 1,\n};\n\nconst defaultSize =\n  2 * DarculaSeparatorUI.STRIPE_INDENT + DarculaSeparatorUI.STRIPE_WIDTH;\n\nexport const StyledSeparator = styled.hr(({ theme }) => ({\n  backgroundColor: theme.color(\n    \"Separator.separatorColor\",\n    theme.dark ? \"#cdcdcd\" : \"#515151\"\n  ),\n  backgroundClip: \"content-box\",\n  boxSizing: \"border-box\",\n  margin: 0,\n  border: \"none\",\n  flexShrink: 0,\n}));\n\nexport const StyledHorizontalSeparator = styled(StyledSeparator)`\n  height: inherit; // should it be auto?\n  padding: 0 ${DarculaSeparatorUI.STRIPE_INDENT}px;\n  width: ${defaultSize}px;\n`;\nexport const StyledVerticalSeparator = styled(StyledSeparator)`\n  width: auto;\n  padding: ${DarculaSeparatorUI.STRIPE_INDENT}px 0;\n  height: ${defaultSize}px;\n`;\n","import { TabCloseButton } from \"@intellij-platform/core/Tabs/TabCloseButton\";\nimport { TabContentLayout } from \"@intellij-platform/core/Tabs/TabContentLayout\";\nimport React from \"react\";\n\nexport const DebuggerTabContent = ({\n  icon,\n  title,\n  closeButton,\n}: {\n  icon: React.ReactNode;\n  title: React.ReactNode;\n  /**\n   * Close button for the tab. Use {@link TabCloseButton} to render the close button\n   * for the tab.\n   *\n   * @example\n   * ```tsx\n   * <DebuggerTabContent\n   *   closeButton={\n   *     <TooltipTrigger\n   *       tooltip={<ActionTooltip actionName=\"Close Tab\" shortcut=\"^⇧F4\" />}\n   *     >\n   *       <TabCloseButton onPress={}></TabCloseButton>\n   *     </TooltipTrigger>\n   *   }\n   * />\n   * ```\n   */\n  closeButton?: React.ReactElement;\n}) => {\n  return (\n    <TabContentLayout startIcon={icon} title={title} endIcon={closeButton} />\n  );\n};\n","import { Theme } from \"@intellij-platform/core/Theme\";\nimport { styled } from \"@intellij-platform/core/styled\";\n\nimport { StyledDefaultTab } from \"@intellij-platform/core/Tabs/StyledDefaultTab\";\nimport {\n  getTabThemeStyles,\n  TabTheme,\n} from \"@intellij-platform/core/Tabs/TabTheme\";\n\nexport const debuggerTabTheme = ({ theme }: { theme: Theme }): TabTheme => ({\n  underlineHeight: theme.value<number>(\"DebuggerTabs.underlineHeight\") ?? 2,\n  underlinedTabBackground: theme.color(\"DebuggerTabs.underlinedTabBackground\"),\n});\nexport const StyledDebuggerTab = styled(StyledDefaultTab)`\n  ${({ theme }) => getTabThemeStyles(debuggerTabTheme({ theme }))};\n`;\n","import { Tabs, TabsProps } from \"@intellij-platform/core/Tabs/Tabs\";\nimport { StyledDebuggerTab } from \"./StyledDebuggerTab\";\nimport React from \"react\";\n\ntype DebuggerTabsProps<T extends object> = Omit<\n  TabsProps<T>,\n  \"TabComponent\" | \"focusable\"\n>;\n\nexport const DebuggerTabs = <T extends object>(props: DebuggerTabsProps<T>) => (\n  <Tabs {...props} TabComponent={StyledDebuggerTab} focusable={false} />\n);\n","import React from \"react\";\nimport { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport { TabCloseButton } from \"@intellij-platform/core/Tabs/TabCloseButton\";\nimport {\n  TabContentLayout,\n  TabItemLayoutProps,\n} from \"@intellij-platform/core/Tabs/TabContentLayout\";\nimport { ActionTooltip, TooltipTrigger } from \"@intellij-platform/core/Tooltip\";\nimport { BareButton } from \"@intellij-platform/core/Button\";\n\ninterface EditorTabContentProps {\n  icon: React.ReactNode;\n  title: React.ReactNode;\n  /**\n   * Close button, shown in place of \"pin\" button if not pinned. Use {@link TabCloseButton} to render the close button\n   * for the tab.\n   *\n   * @example\n   * ```tsx\n   * <EditorTabContent\n   *   closeButton={\n   *     <TooltipTrigger\n   *       tooltip={<ActionTooltip actionName=\"Close Tab\" shortcut=\"^⇧F4\" />}\n   *     >\n   *       <TabCloseButton onPress={}></TabCloseButton>\n   *     </TooltipTrigger>\n   *   }\n   * />\n   * ```\n   */\n  closeButton?: React.ReactElement;\n  onUnpin?: () => void;\n  pinned?: boolean;\n  containerProps?: TabItemLayoutProps[\"containerProps\"];\n}\n/**\n * For rendering the content of Editor tabs. supports for file icon which is shown on the left and close or unpin\n * button shown on the right.\n */\nexport const EditorTabContent = ({\n  icon,\n  title,\n  closeButton,\n  onUnpin,\n  pinned,\n  containerProps,\n}: EditorTabContentProps) => {\n  return (\n    <TabContentLayout\n      startIcon={icon}\n      title={title}\n      containerProps={containerProps}\n      endIcon={\n        pinned ? (\n          <TooltipTrigger tooltip={<ActionTooltip actionName=\"Unpin Tab\" />}>\n            <BareButton\n              onPress={onUnpin}\n              excludeFromTabOrder\n              preventFocusOnPress\n            >\n              <PlatformIcon icon=\"actions/pinTab\" />\n            </BareButton>\n          </TooltipTrigger>\n        ) : (\n          closeButton\n        )\n      }\n    />\n  );\n};\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { Theme, UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { StyledDefaultTab } from \"@intellij-platform/core/Tabs/StyledDefaultTab\";\nimport {\n  getTabThemeStyles,\n  TabTheme,\n} from \"@intellij-platform/core/Tabs/TabTheme\";\n\nexport const editorTabTheme = ({ theme }: { theme: Theme }): TabTheme => ({\n  borderColor: theme.color(\"EditorTabs.borderColor\"),\n  underlineHeight: theme.value<number>(\"EditorTabs.underlineHeight\"),\n  background: theme.color(\"EditorTabs.background\"),\n  underlinedTabInactiveBackground: theme.color(\n    \"EditorTabs.underlinedTabBackground\" // that's correctly not underlinedTabInactiveBackground!\n  ), // TODO: use EditorColorsScheme when available\n  underlinedTabBackground: theme.color(\"EditorTabs.underlinedTabBackground\"), // TODO: use EditorColorsScheme when available\n  hoverInactiveBackground: theme.color(\n    \"EditorTabs.hoverInactiveBackground\" as UnknownThemeProp<\"EditorTabs.hoverInactiveBackground\">\n  ),\n  hoverBackground: theme.color(\"EditorTabs.hoverBackground\"),\n  inactiveUnderlineColor: theme.color(\"EditorTabs.inactiveUnderlineColor\"), // TODO: use EditorColorsScheme when available\n  underlineColor: theme.color(\"EditorTabs.underlineColor\"), // TODO: use EditorColorsScheme when available\n\n  underlinedTabInactiveForeground: theme.color(\n    \"EditorTabs.underlinedTabForeground\" // that's correctly not underlinedTabInactiveForeground!\n  ), // TODO: use EditorColorsScheme when available\n  underlinedTabForeground: theme.color(\"EditorTabs.underlinedTabForeground\"), // TODO: use EditorColorsScheme when available\n});\nexport const StyledEditorTab = styled(StyledDefaultTab)`\n  font-size: 0.7rem;\n  ${({ theme }) => getTabThemeStyles(editorTabTheme({ theme }))};\n`;\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { getTabsThemeStyles } from \"@intellij-platform/core/Tabs/TabTheme\";\nimport { StyledDefaultTabs } from \"@intellij-platform/core/Tabs/StyledDefaultTabs\";\nimport { editorTabTheme } from \"./StyledEditorTab\";\n\nexport const StyledEditorTabs = styled(StyledDefaultTabs)`\n  ${({ theme }) => getTabsThemeStyles(editorTabTheme({ theme }))};\n`;\n","import { Tabs, TabsProps } from \"@intellij-platform/core/Tabs/Tabs\";\nimport { StyledEditorTab } from \"./StyledEditorTab\";\nimport { StyledEditorTabs } from \"./StyledEditorTabs\";\nimport React from \"react\";\n\nexport type EditorTabsProps<T extends object> = Omit<\n  TabsProps<T>,\n  \"TabComponent\" | \"TabsComponent\" | \"focusable\"\n>;\n\nexport const EditorTabs = <T extends object>(props: EditorTabsProps<T>) => (\n  <Tabs\n    {...props}\n    TabComponent={StyledEditorTab}\n    TabsComponent={StyledEditorTabs}\n    focusable={false}\n  />\n);\n","import { getTabThemeStyles } from \"./TabTheme\";\nimport { styled } from \"../styled\";\nimport { Theme, UnknownThemeProp } from \"../Theme\";\nimport { HTMLProps } from \"react\";\n\nexport interface TabComponentProps extends HTMLProps<HTMLElement> {\n  selected?: boolean;\n  disabled?: boolean;\n  active?: boolean;\n}\n\nconst defaultTabTheme = ({ theme }: { theme: Theme }) =>\n  getTabThemeStyles({\n    underlineHeight: theme.value<number>(\"DefaultTabs.underlineHeight\") ?? 3,\n    inactiveUnderlineColor: theme.color(\n      \"DefaultTabs.inactiveUnderlineColor\",\n      theme.dark ? \"#747a80\" : \"#9ca7b8\"\n    ),\n    underlineColor: theme.color(\n      \"DefaultTabs.underlineColor\",\n      theme.dark ? \"#4A88C7\" : \"#4083C9\"\n    ),\n\n    underlinedTabInactiveForeground: theme.color(\n      \"DefaultTabs.underlinedTabInactiveForeground\" as UnknownThemeProp<\"DefaultTabs.underlinedTabInactiveForeground\">\n    ),\n    underlinedTabForeground: theme.color(\"DefaultTabs.underlinedTabForeground\"),\n\n    background: theme.color(\n      \"DefaultTabs.background\",\n      theme.dark ? \"#3C3F41\" : \"#ECECEC\"\n    ),\n    underlinedTabInactiveBackground: theme.color(\n      \"DefaultTabs.underlinedTabInactiveBackground\" as UnknownThemeProp<\"DefaultTabs.underlinedTabInactiveBackground\">\n    ),\n    underlinedTabBackground: theme.color(\n      \"DefaultTabs.underlinedTabBackground\" as UnknownThemeProp<\"DefaultTabs.underlinedTabBackground\">\n    ),\n    hoverInactiveBackground: theme.color(\n      \"DefaultTabs.hoverInactiveBackground\" as UnknownThemeProp<\"DefaultTabs.hoverInactiveBackground\">,\n      theme.dark ? \"rgba(0,0,0,.35)\" : \"rgba(0,0,0,.1)\"\n    ),\n    hoverBackground: theme.color(\n      \"DefaultTabs.hoverBackground\",\n      theme.dark ? \"rgba(0,0,0,.35)\" : \"rgba(0,0,0,.1)\"\n    ),\n  });\n\nexport const StyledDefaultTab = styled.div<TabComponentProps>`\n  box-sizing: border-box;\n  display: inline-flex;\n  letter-spacing: 0.015rem;\n  font-size: 0.85rem;\n  cursor: default;\n  white-space: nowrap;\n\n  // spacing\n  padding: 0 0.5rem;\n  line-height: 1.7rem; // vertical spacing handled by line-height\n\n  // disabled state doesn't seem to be supported in Intellij Platform at all.\n  opacity: ${({ disabled }) => (disabled ? \".5\" : \"1\")};\n  color: ${({ theme }) =>\n    theme.color(\n      \"DefaultTabs.foreground\" as UnknownThemeProp<\"DefaultTabs.foreground\">\n    )};\n\n  position: relative;\n  &::after {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    left: 0;\n    bottom: 0;\n  }\n\n  ${defaultTabTheme};\n`;\n","import { HTMLProps } from \"react\";\nimport { Theme } from \"../Theme\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { getTabsThemeStyles } from \"./TabTheme\";\n\nconst defaultTabsTheme = ({ theme }: { theme: Theme }) =>\n  getTabsThemeStyles({\n    borderColor: theme.color(\n      \"DefaultTabs.borderColor\",\n      theme.commonColors.contrastBorder\n    ),\n    background: theme.color(\"DefaultTabs.background\"),\n  });\n\nexport interface TabsComponentProps extends HTMLProps<HTMLElement> {\n  noBorders?: boolean;\n}\n\nexport const StyledDefaultTabs = styled.div<TabsComponentProps>`\n  display: flex;\n  align-items: center;\n  box-sizing: border-box;\n  border-style: solid;\n  border-width: ${({ noBorders }) => (noBorders ? \"0\" : \"1px 0\")};\n\n  ${defaultTabsTheme};\n`;\n","import React from \"react\";\nimport { BareButton, BareButtonProps } from \"@intellij-platform/core/Button\";\nimport { PlatformIcon } from \"../Icon\";\nimport { styled } from \"../styled\";\n\nconst StyledIconWrapper = styled.span`\n  display: inherit;\n  .icon.hover {\n    display: none;\n  }\n  &:hover {\n    .icon {\n      display: none;\n    }\n    .icon.hover {\n      display: unset;\n    }\n  }\n`;\n/**\n * Close button for Tab\n */\nexport const TabCloseButton = (props: Omit<BareButtonProps, \"children\">) => {\n  // using useHover proved to be unstable.\n  return (\n    <BareButton {...props} excludeFromTabOrder preventFocusOnPress>\n      <StyledIconWrapper>\n        <PlatformIcon icon={\"actions/closeHovered\"} className=\"icon hover\" />\n        <PlatformIcon icon={\"actions/close\"} className=\"icon\" />\n      </StyledIconWrapper>\n    </BareButton>\n  );\n};\n","import React, { ForwardedRef, HTMLProps } from \"react\";\nimport { css, styled } from \"../styled\";\nimport { useFocusable } from \"@react-aria/focus\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\n\nconst StyledTabItemLayout = styled.div`\n  display: inline-flex;\n  align-items: center;\n`;\n\nconst iconStyle = css`\n  display: inline-flex; // without this, the wrapper takes the full height, causing icon to be placed on top\n  margin-top: -0.1rem; // seems necessary for pixel perfect match with the original impl\n`;\n\nconst StyledStartIconWrapper = styled.span`\n  ${iconStyle};\n  margin-right: 0.25rem;\n`;\n\nconst StyledEndIconWrapper = styled.span`\n  ${iconStyle};\n  margin-left: 0.25rem;\n  margin-right: -0.25rem; // default padding of the tab should be a little reduced when close icon is there.\n  border-radius: 16px;\n`;\n\nexport interface TabItemLayoutProps {\n  /**\n   * the icon placed before the text.\n   */\n  startIcon?: React.ReactNode;\n  /**\n   * title of the tab. Normally just a string\n   */\n  title?: React.ReactNode;\n  /**\n   * the icon placed after the text. Typical use cases: close or pin icon.\n   */\n  endIcon?: React.ReactNode;\n\n  /**\n   * Generic HTML props passed to the container div.\n   */\n  containerProps?: Omit<HTMLProps<HTMLDivElement>, \"ref\" | \"as\">;\n}\n\n/**\n * Helper component for rendering the common layout of tab content.\n */\nexport const TabContentLayout = React.forwardRef(\n  (\n    { startIcon, title, endIcon, containerProps = {} }: TabItemLayoutProps,\n    ref: ForwardedRef<HTMLDivElement>\n  ) => {\n    // To allow tooltip be used easily. TooltipTrigger passes props via FocusableContext.\n    const { focusableProps } = useFocusable({}, useObjectRef(ref));\n    return (\n      <StyledTabItemLayout\n        {...mergeProps(focusableProps, containerProps)}\n        ref={ref}\n      >\n        {startIcon && (\n          <StyledStartIconWrapper>{startIcon}</StyledStartIconWrapper>\n        )}\n        {title}\n        {endIcon && <StyledEndIconWrapper>{endIcon}</StyledEndIconWrapper>}\n      </StyledTabItemLayout>\n    );\n  }\n);\n","import { ItemProps } from \"@react-types/shared\";\nimport { Item } from \"@react-stately/collections\";\nimport React from \"react\";\n\nexport interface TabItemProps extends ItemProps<never> {\n  /**\n   * Determines how the tab item should look when rendered as a menu item in overflow menu.\n   * If not passed, `textValue` will be used.\n   * @example\n   * <TabItem\n   *   key={tab.id}\n   *   textValue={tab.title}\n   *   inOverflowMenu={\n   *     <MenuItemLayout content={tab.title} icon={icon} />\n   *   }\n   *  >\n   *   <TabContentLayout startIcon={icon} title={tab.title} />\n   * </TabItem>\n   */\n  inOverflowMenu?: React.ReactNode;\n}\n\n/**\n * Same as {@link Item}, but allows for specifying the tab content for when it's rendered in the overflow menu item.\n */\nexport const TabItem: (props: TabItemProps) => React.ReactElement = Item;\n","import { css } from \"@intellij-platform/core/styled\";\nimport { TabComponentProps } from \"./StyledDefaultTab\";\n\n/**\n * Describes theme-able properties of a tab, which can then be passed to {@link getTabThemeStyles}\n */\nexport interface TabTheme {\n  underlineHeight?: number;\n\n  borderColor?: string;\n\n  inactiveUnderlineColor?: string;\n  underlineColor?: string;\n\n  underlinedTabInactiveForeground?: string;\n  underlinedTabForeground?: string;\n\n  background?: string;\n  underlinedTabBackground?: string;\n  underlinedTabInactiveBackground?: string;\n  hoverInactiveBackground?: string;\n  hoverBackground?: string;\n  inactiveColoredTabBackground?: string; // not used for now\n}\n\nexport const getTabsThemeStyles = ({\n  background,\n  borderColor,\n}: Pick<TabTheme, \"background\" | \"borderColor\">) => css`\n  border-color: ${borderColor};\n  background: ${background};\n`;\n\n/**\n * Converts tab theme properties to a chunk of style that can be dropped in a styled version of StyledDefaultTab\n *\n * @example\n * ```ts\n * const StyledCustomTab = styled(StyledDefaultTab)`\n *   ${getTabThemeStyles({background: 'red'})}\n * `\n * ```\n */\nexport const getTabThemeStyles = ({\n  underlineHeight,\n\n  background,\n  underlinedTabBackground,\n  underlinedTabInactiveBackground,\n  hoverInactiveBackground,\n  hoverBackground,\n\n  underlinedTabForeground,\n  underlinedTabInactiveForeground,\n\n  inactiveUnderlineColor,\n  underlineColor,\n}: TabTheme) =>\n  css<TabComponentProps>`\n    // active indicator\n    &::after {\n      height: ${underlineHeight != null ? `${underlineHeight}px` : undefined};\n      background-color: ${({ selected }) => selected && inactiveUnderlineColor};\n      background-color: ${({ selected, active }) =>\n        selected && active && underlineColor};\n    }\n\n    // foreground rules\n    color: ${({ selected }) => selected && underlinedTabInactiveForeground};\n    color: ${({ selected, active }) =>\n      selected && active && underlinedTabForeground};\n\n    //  background rules\n    background: ${background};\n    background: ${({ selected }) =>\n      selected && underlinedTabInactiveBackground};\n    background: ${({ selected, active }) =>\n      selected && active && underlinedTabBackground};\n\n    ${({ disabled, active }) =>\n      !disabled &&\n      css`\n        &:hover,\n        &.hover /* for testing purposes */ {\n          background: ${hoverInactiveBackground};\n          background: ${active && hoverBackground};\n        }\n      `}\n  `;\n","import { css, styled } from \"@intellij-platform/core/styled\";\n\ninterface Props {\n  hasOverflowAtStart: boolean;\n  hasOverflowAtEnd: boolean;\n}\n\nconst horizontalOverflowIndicatorStyles = css`\n  content: \"\";\n  pointer-events: none;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  width: 10px;\n  z-index: 1;\n`;\nexport const StyledHorizontalOverflowShadows = styled.div<Props>`\n  position: relative; // for overflow indicator (pseudo-)elements to be positioned absolute\n\n  /* FIXME: find out what color, width and gradient parameters are used in the original implementation */\n  ${({ hasOverflowAtStart }) =>\n    hasOverflowAtStart &&\n    css`\n      ::before {\n        ${horizontalOverflowIndicatorStyles};\n        background: linear-gradient(\n          90deg,\n          ${({ theme }) => theme.commonColors.panelBackground} 0%,\n          transparent 100%\n        );\n        left: 0;\n      }\n    `};\n  ${({ hasOverflowAtEnd }) =>\n    hasOverflowAtEnd &&\n    css`\n      ::after {\n        ${horizontalOverflowIndicatorStyles};\n        background: linear-gradient(\n          -90deg,\n          ${({ theme }) => theme.commonColors.panelBackground} 0%,\n          transparent 100%\n        );\n        right: 0;\n      }\n    `};\n`;\n","import { useTab } from \"@react-aria/tabs\";\nimport { TabListState } from \"@react-stately/tabs\";\nimport { Node } from \"@react-types/shared\";\nimport { StyledDefaultTab, TabComponentProps } from \"./StyledDefaultTab\";\nimport React, { ComponentType, ForwardedRef, forwardRef } from \"react\";\nimport { useObjectRef } from \"@react-aria/utils\";\n\ntype TabProps<T extends object> = {\n  state: TabListState<object>;\n  item: Node<T>;\n  /**\n   * {@see TabsProps#focusable}\n   */\n  focusable?: boolean;\n  /**\n   * {@see TabsProps#active}\n   */\n  active?: boolean;\n  shouldSelectOnPressUp?: boolean;\n  Component?: ComponentType<TabComponentProps>;\n};\n\nexport const Tab = forwardRef(function Tab<T extends object>(\n  {\n    state,\n    item,\n    focusable,\n    active,\n    shouldSelectOnPressUp,\n    Component = StyledDefaultTab,\n  }: TabProps<T>,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n): React.ReactElement {\n  const { key, rendered } = item;\n  const ref = useObjectRef(forwardedRef);\n  const {\n    tabProps: {\n      /**\n       * by extracting out tabIndex, all keyboard support of the tabs is disabled, since we prevent the tab from being\n       * focusable.\n       */\n      tabIndex,\n      ...tabProps\n    },\n  } = useTab(\n    {\n      key,\n      shouldSelectOnPressUp,\n    },\n    state,\n    ref\n  );\n  const isSelected = state.selectedKey === key;\n  const isDisabled = state.disabledKeys.has(key);\n\n  return (\n    <Component\n      {...tabProps}\n      tabIndex={focusable ? tabIndex : undefined}\n      ref={ref}\n      active={active}\n      selected={isSelected}\n      disabled={isDisabled}\n    >\n      {rendered}\n    </Component>\n  );\n});\n","import React, { ComponentType, Key, useEffect } from \"react\";\nimport { useTabList } from \"@react-aria/tabs\";\nimport { filterDOMProps, mergeProps, scrollIntoView } from \"@react-aria/utils\";\nimport { useTabListState } from \"@react-stately/tabs\";\nimport { AriaTabListProps } from \"@react-types/tabs\";\nimport { StyledHorizontalOverflowShadows } from \"./StyledHorizontalOverflowShadows\";\nimport { TabsOverflowMenu } from \"./TabsOverflowMenu\";\nimport { useOverflowObserver } from \"../utils/overflow-utils/useOverflowObserver\";\nimport { useHasOverflow } from \"./useHasOverflow\";\nimport { css, styled } from \"@intellij-platform/core/styled\";\nimport { getItemElement } from \"@intellij-platform/core/Collections/getItemElement\";\nimport { TabComponentProps } from \"./StyledDefaultTab\";\nimport { StyledDefaultTabs, TabsComponentProps } from \"./StyledDefaultTabs\";\nimport { Tab } from \"./Tab\";\n\nexport type TabsProps<T> = Omit<\n  AriaTabListProps<T>,\n  \"orientation\" | \"isDisabled\" | \"\"\n> & {\n  /**\n   * Whether tabs should be focusable or not. By default, following the Intellij Platform implementation, tabs are\n   * not focusable and therefore lack the keyboard accessibility support specified in WAI-ARIA.\n   * You can change this default behaviour and make the tabs keyboard accessible by passing `focusable`.\n   * focus styles are not perfect at the moment, since it's not considered an important feature.\n   * @default false\n   */\n  focusable?: boolean;\n\n  /**\n   * Whether selected tab should change on press up instead of press down.\n   * @default false.\n   */\n  shouldSelectOnPressUp?: boolean;\n\n  /**\n   * Enables \"active\" style on tabs. Is usually related to a container having focus.\n   */\n  active?: boolean;\n\n  /**\n   * If set to true, tabs will be wrapped into multiple rows if needed.\n   * NOTE: In the original implementation, in multi row mode, rows are separated by a border. It's not easy to achieve\n   * this when we are implementing this feature with a simple `flex-wrap: wrap` css rule. It doesn't seem that\n   * important, but we can achieve something similar by some css tricks like the ones suggested here:\n   * https://stackoverflow.com/questions/36128333/row-lines-for-flex-container-css\n   * @default false\n   */\n  multiRow?: boolean;\n\n  /**\n   * Only effective when {@link multiRow} is not true.\n   * If set to true and multiRow is not true, it will prevent horizontal scroll of tabs. Depending on the value of\n   * In this case:\n   * - if {@link noOverflowMenu} is not set to true, tabs that can't be fitted into the available space will be\n   *   accessible via an overflow menu.\n   * - if {@link noOverflowMenu} is set to true, the tabs will be fitted into the available space, and they will\n   *   be shrunk when needed.\n   *\n   * @todo: not implemented yet.\n   * @default false\n   */\n  noScroll?: boolean;\n\n  /**\n   * Only effective when {@link multiRow} is not true.\n   * When set to true, tabs that couldn't be fitted into the available space, are either shrunk (if {@link noScroll}\n   * is set to true), or are just accessible by scroll.\n   */\n  noOverflowMenu?: boolean;\n\n  /**\n   * Removes the top and bottom border when passed.\n   * It's still not clear whether such option makes sense or not, but\n   * at least in common use cases like in tool windows, it seems borders are already there and there should be a way\n   * of removing tab borders. On the other hand, when Tabs is used without any assumption about the surrounding UI,\n   * it kind of makes sense to have the top and bottom borders by default. So that's why this is made an option for\n   * now, maybe until things are clearer.\n   *\n   * @default false\n   */\n  noBorders?: boolean;\n\n  TabsComponent?: ComponentType<TabsComponentProps>;\n  /**\n   *\n   */\n  TabComponent?: ComponentType<TabComponentProps>;\n};\n\nconst scrollBarDisabledStyle = css`\n  -ms-overflow-style: none; /* for Internet Explorer, Edge */\n  scrollbar-width: none; /* for Firefox */\n  &::-webkit-scrollbar {\n    /* for Chrome/Safari/Webkit */\n    display: none;\n  }\n`;\n\nconst StyledTabList = styled.div<{ multiRow?: boolean }>`\n  display: flex;\n  flex-wrap: ${({ multiRow }) => (multiRow ? \"wrap\" : \"nowrap\")};\n  overflow: auto;\n\n  ${scrollBarDisabledStyle};\n`;\n\n/**\n *\n * TODO: add support for overflow:\n *  - have vertical scroll also scroll tabs\n *  - add support for re-reordering tabs.\n *  - FIX: When a tab that was not selected is removed, selection should not change. It now changes to the tab before the removed one.\n */\nexport const Tabs = <T extends object>({\n  focusable,\n  shouldSelectOnPressUp,\n  active,\n  TabComponent,\n  TabsComponent = StyledDefaultTabs,\n  multiRow,\n  noOverflowMenu,\n  noScroll,\n  noBorders,\n  ...props\n}: TabsProps<T>): React.ReactElement => {\n  const state = useTabListState(props);\n  const ref = React.useRef<HTMLDivElement>(null);\n  const { tabListProps } = useTabList(props, state, ref);\n\n  const { scrolledIndicatorProps, hasOverflow } = useHasOverflow({ ref });\n  const { overflowedElements } = useOverflowObserver(ref);\n  const overflowedKeys = new Set(\n    overflowedElements\n      .map((element) =>\n        element instanceof HTMLElement ? element.dataset[\"key\"] : null\n      )\n      .filter((i) => i != null)\n  );\n\n  useEffect(() => {\n    if (!noScroll && state.selectedKey !== null) {\n      const scrollableContainer = ref.current;\n      const selectedTabElement = getItemElement(ref, state.selectedKey);\n      if (scrollableContainer && selectedTabElement) {\n        scrollIntoView(scrollableContainer, selectedTabElement);\n      }\n    } else {\n      // TODO maybe? sample use case: project tool window tabs, when not grouped.\n    }\n  }, [state.selectedKey]);\n  const onOverflowMenuItemSelected = (key: Key) => {\n    state.setSelectedKey(key);\n  };\n  if (noScroll) {\n    throw new Error(\"noScroll is not supported yet.\");\n  }\n  return (\n    <TabsComponent noBorders={noBorders} {...filterDOMProps(props)}>\n      <StyledHorizontalOverflowShadows\n        hasOverflowAtStart={hasOverflow.left}\n        hasOverflowAtEnd={hasOverflow.right}\n        style={{ minWidth: 0 }}\n      >\n        <StyledTabList\n          {...mergeProps(tabListProps, scrolledIndicatorProps)}\n          multiRow={multiRow}\n          ref={ref}\n        >\n          {[...state.collection].map((item) => (\n            <Tab\n              key={item.key}\n              item={item}\n              state={state}\n              focusable={focusable}\n              shouldSelectOnPressUp={shouldSelectOnPressUp}\n              active={active}\n              Component={TabComponent}\n            />\n          ))}\n        </StyledTabList>\n      </StyledHorizontalOverflowShadows>\n      {!noOverflowMenu && (\n        <TabsOverflowMenu\n          collection={state.collection}\n          overflowedKeys={overflowedKeys}\n          onSelect={onOverflowMenuItemSelected}\n        />\n      )}\n    </TabsComponent>\n  );\n};\n","import { RefObject, UIEventHandler, useEffect, useState } from \"react\";\n\nexport function useHasOverflow<T extends HTMLElement>({\n  threshold = 5,\n  ref,\n}: {\n  threshold?: number;\n  ref: RefObject<T>;\n}) {\n  const [hasOverflow, setHasOverflow] = useState({\n    left: false,\n    right: false,\n    top: false,\n    bottom: false,\n  });\n\n  const update = () => {\n    const element = ref.current;\n    if (element) {\n      const offsetLeft = element.scrollLeft;\n      const offsetRight =\n        element.scrollWidth - (element.offsetWidth + element.scrollLeft);\n      const offsetTop = element.scrollTop;\n      const offsetBottom =\n        element.scrollHeight - (element.offsetHeight + element.scrollTop);\n      const newHasOverflow = {\n        top: offsetTop > threshold,\n        bottom: offsetBottom > threshold,\n        left: offsetLeft > threshold,\n        right: offsetRight > threshold,\n      };\n      if (\n        hasOverflow.top !== newHasOverflow.top ||\n        hasOverflow.bottom !== newHasOverflow.bottom ||\n        hasOverflow.left !== newHasOverflow.left ||\n        hasOverflow.right !== newHasOverflow.right\n      ) {\n        setHasOverflow(newHasOverflow);\n      }\n    }\n  };\n  useEffect(update);\n\n  return {\n    scrolledIndicatorProps: {\n      onScroll: update as UIEventHandler<T>,\n    },\n    hasOverflow,\n  };\n}\n","import { Collection, Node } from \"@react-types/shared\";\nimport { Item } from \"@react-stately/collections\";\nimport { Menu, MenuTrigger } from \"@intellij-platform/core/Menu\";\nimport { IconButton } from \"@intellij-platform/core/IconButton\";\nimport { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport React, { Key } from \"react\";\n\nexport const TabsOverflowMenu = <T extends unknown>({\n  collection,\n  overflowedKeys,\n  onSelect,\n}: {\n  collection: Collection<Node<T>>;\n  overflowedKeys: Set<Key>;\n  onSelect: (key: Key) => void;\n}) => (\n  <>\n    {overflowedKeys.size > 0 && (\n      <MenuTrigger\n        align=\"end\"\n        renderMenu={({ menuProps }) => {\n          const items: Iterable<Node<unknown>> = [...collection].filter(\n            (menuItem) => overflowedKeys.has(menuItem.key)\n          );\n          return (\n            <Menu\n              {...menuProps}\n              onAction={(key) => {\n                onSelect(key);\n              }}\n              items={items}\n            >\n              {(item) => (\n                <Item key={item.key} textValue={item.textValue}>\n                  {item.props.inOverflowMenu || item.textValue}\n                </Item>\n              )}\n            </Menu>\n          );\n        }}\n      >\n        {(props, ref) => (\n          <IconButton {...props} ref={ref}>\n            <PlatformIcon icon=\"actions/findAndShowNextMatches\" />\n          </IconButton>\n        )}\n      </MenuTrigger>\n    )}\n  </>\n);\n","import React, { ForwardedRef, HTMLProps } from \"react\";\nimport { TabCloseButton } from \"@intellij-platform/core/Tabs/TabCloseButton\";\nimport { TabContentLayout } from \"@intellij-platform/core/Tabs/TabContentLayout\";\n\ntype ToolWindowTabContentProps = {\n  icon?: React.ReactNode;\n  title: React.ReactNode;\n  /**\n   * Close button for the tab. Use {@link TabCloseButton} to render the close button\n   * for the tab.\n   *\n   * @example\n   * ```tsx\n   * <ToolWindowTabContent\n   *   closeButton={\n   *     <TooltipTrigger\n   *       tooltip={<ActionTooltip actionName=\"Close Tab\" shortcut=\"^⇧F4\" />}\n   *     >\n   *       <TabCloseButton onPress={}></TabCloseButton>\n   *     </TooltipTrigger>\n   *   }\n   * />\n   * ```\n   */\n  closeButton?: React.ReactNode;\n  containerProps?: Omit<HTMLProps<HTMLDivElement>, \"ref\" | \"as\">;\n};\n\nexport const ToolWindowTabContent = React.forwardRef(\n  (\n    { icon, title, closeButton, containerProps }: ToolWindowTabContentProps,\n    ref: ForwardedRef<HTMLDivElement>\n  ) => {\n    return (\n      <TabContentLayout\n        containerProps={containerProps}\n        ref={ref}\n        startIcon={icon}\n        title={title}\n        endIcon={closeButton}\n      />\n    );\n  }\n);\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { Theme } from \"@intellij-platform/core/Theme\";\nimport { StyledDefaultTab } from \"@intellij-platform/core/Tabs/StyledDefaultTab\";\nimport {\n  getTabThemeStyles,\n  TabTheme,\n} from \"@intellij-platform/core/Tabs/TabTheme\";\n\nexport const toolWindowTabTheme = ({ theme }: { theme: Theme }): TabTheme => ({\n  borderColor: theme.color(\"ToolWindow.HeaderTab.borderColor\"),\n  underlineHeight: theme.value<number>(\"ToolWindow.HeaderTab.underlineHeight\"),\n  background: \"transparent\",\n  underlinedTabInactiveBackground: theme.color(\n    \"ToolWindow.HeaderTab.underlinedTabInactiveBackground\"\n  ),\n  underlinedTabBackground: theme.color(\n    \"ToolWindow.HeaderTab.underlinedTabBackground\"\n  ),\n  hoverInactiveBackground:\n    theme.color(\"ToolWindow.HeaderTab.hoverInactiveBackground\") ??\n    theme.color(\"ToolWindow.HeaderTab.hoverBackground\"),\n  hoverBackground: theme.color(\"ToolWindow.HeaderTab.hoverBackground\"),\n  inactiveUnderlineColor: theme.color(\n    \"ToolWindow.HeaderTab.inactiveUnderlineColor\"\n  ),\n  underlineColor: theme.color(\"ToolWindow.HeaderTab.underlineColor\"),\n\n  underlinedTabInactiveForeground:\n    theme.color(\"ToolWindow.HeaderTab.underlinedTabInactiveForeground\") ??\n    theme.color(\"ToolWindow.HeaderTab.underlinedTabForeground\"),\n  underlinedTabForeground: theme.color(\n    \"ToolWindow.HeaderTab.underlinedTabForeground\"\n  ),\n});\nexport const StyledToolWindowTab = styled(StyledDefaultTab)`\n  padding: 0 0.7rem;\n  ${({ theme }) => getTabThemeStyles(toolWindowTabTheme({ theme }))};\n`;\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { getTabsThemeStyles } from \"@intellij-platform/core/Tabs/TabTheme\";\nimport { StyledDefaultTabs } from \"@intellij-platform/core/Tabs/StyledDefaultTabs\";\nimport { toolWindowTabTheme } from \"./StyledToolWindowTab\";\n\nexport const StyledToolWindowTabs = styled(StyledDefaultTabs)`\n  ${({ theme }) => getTabsThemeStyles(toolWindowTabTheme({ theme }))};\n`;\n","import React from \"react\";\nimport { Tabs, TabsProps } from \"@intellij-platform/core/Tabs/Tabs\";\nimport { StyledToolWindowTab } from \"./StyledToolWindowTab\";\nimport { StyledToolWindowTabs } from \"./StyledToolWindowTabs\";\n\ntype ToolWindowTabsProps<T extends object> = Omit<\n  TabsProps<T>,\n  \"TabComponent\" | \"TabsComponent\" | \"focusable\"\n>;\n\nexport const ToolWindowTabs = <T extends object>(\n  props: ToolWindowTabsProps<T>\n) => (\n  <Tabs\n    {...props}\n    TabComponent={StyledToolWindowTab}\n    TabsComponent={StyledToolWindowTabs}\n    focusable={false}\n    shouldSelectOnPressUp\n  />\n);\n","export type TextRange = { from: number; to: number };\n\nexport function isEmptyRange(range: TextRange) {\n  return range.from > range.to;\n}\n\nexport function getAllRanges(\n  ranges: TextRange[],\n  length: number\n): Array<[TextRange, boolean]> {\n  const result: Array<[TextRange, boolean]> = [];\n  if (!ranges?.length) {\n    return [[{ from: 0, to: length - 1 }, false]];\n  }\n  if (ranges[0].from > 0) {\n    result.push([{ from: 0, to: ranges[0].from - 1 }, false]);\n  }\n  ranges.forEach(({ from, to }, index) => {\n    result.push([{ from, to }, true]);\n    const gapRange: TextRange = ranges[index + 1]\n      ? { from: to + 1, to: ranges[index + 1].from - 1 }\n      : { from: to + 1, to: length - 1 };\n    if (!isEmptyRange(gapRange)) {\n      result.push([gapRange, false]);\n    }\n  });\n  return result;\n}\n\nexport function createRangesFromIndices(indices: number[]): TextRange[] {\n  return indices.reduce((ranges, index) => {\n    const lastRange = ranges.slice(-1)[0];\n    if (lastRange?.to === index - 1) {\n      return [...ranges.slice(0, -1), { from: lastRange.from, to: index }];\n    }\n    return [...ranges, { from: index, to: index }];\n  }, [] as TextRange[]);\n}\n","import React from \"react\";\nimport { getAllRanges, TextRange } from \"../TextRange\";\nimport { styled } from \"../styled\";\n\nconst HighlightedMatch = styled.span`\n  background: ${({ theme }) =>\n    `linear-gradient(${theme.color(\n      \"SearchMatch.startBackground\",\n      \"#ffeaa2b3\"\n    )}, ${theme.color(\"SearchMatch.endBackground\", \"#ffd042b3\")})`};\n  color: #000;\n  border-radius: 3px;\n`;\n\n/**\n * Renders the children (which must be a string), with highlights wrapped in spans with the highlight style.\n * Note: this component doesn't render a container. It just highlights the specified ranges.\n */\nexport function TextWithHighlights({\n  children,\n  highlights,\n}: {\n  children: string;\n  highlights: TextRange[] | null;\n}): React.ReactElement {\n  const parts: Array<[TextRange, boolean]> = highlights\n    ? getAllRanges(highlights, children.length)\n    : [[{ from: 0, to: children.length }, false]];\n  return (\n    <>\n      {parts.map(([{ from, to }, highlighted]) => {\n        const text = children.slice(from, to + 1);\n        return (\n          // TODO: key\n          <React.Fragment key={`${from}_${to}`}>\n            {highlighted ? <HighlightedMatch>{text}</HighlightedMatch> : text}\n          </React.Fragment>\n        );\n      })}\n    </>\n  );\n}\n","// language=JSRegexp\nconst numberPattern = \"[0-9]{0,3}.?[0-9]*\";\n\nconst parseComponent = (componentStr: string, index: number) =>\n  componentStr\n    ? index < 3\n      ? parseInt(componentStr)\n      : Math.round(Math.min(parseFloat(componentStr), 1) * 255)\n    : undefined;\n\nconst parseHexRgba = (str: string) =>\n  str\n    .match(/^#?([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})?$/i)\n    ?.slice(1, 5)\n    .map((i) => (i ? parseInt(i, 16) : undefined));\nconst parseShorthandHex = (str: string) =>\n  str\n    .match(/^#?([0-9A-F])([0-9A-F])([0-9A-F])$/i)\n    ?.slice(1, 4)\n    .map((i) => (i ? parseInt(i + i, 16) : undefined));\nconst parseRgb = (str: string) =>\n  str\n    .match(\n      new RegExp(\n        `^rgb\\\\(\\\\s*(${numberPattern})\\\\s*,\\\\s*(${numberPattern})\\\\s*,\\\\s*(${numberPattern}\\\\s*)\\\\)$`\n      )\n    )\n    ?.slice(1, 5)\n    .map(parseComponent);\nconst parseRgba = (str: string) =>\n  str\n    .match(\n      new RegExp(\n        `^rgba\\\\(\\\\s*(${numberPattern})\\\\s*,\\\\s*(${numberPattern})\\\\s*,\\\\s*(${numberPattern})\\\\s*,\\\\s*(${numberPattern}\\\\s*)\\\\)$`\n      )\n    )\n    ?.slice(1, 5)\n    .map(parseComponent);\n\n/**\n * parses a color string into rgba components.\n * @param str\n */\nexport const parseColorString = (\n  str: string\n): [number, number, number, number?] | null => {\n  const result = [parseHexRgba, parseShorthandHex, parseRgb, parseRgba].reduce<\n    (number | undefined)[] | undefined\n  >((result, parse) => result || parse(str), undefined);\n  return Array.isArray(result) &&\n    result.slice(0, 3).every((c) => Number.isInteger(c))\n    ? (result as [number, number, number, number?])\n    : null;\n};\n","import { parseColorString } from \"./parseColorString\";\n\n/**\n * A Color class resembling AWT Color\n */\nexport class Color {\n  public readonly r: number;\n  public readonly g: number;\n  public readonly b: number;\n  public readonly a: number;\n\n  private static readonly FACTOR = 0.7;\n\n  constructor(r: number, g: number, b: number, a?: number);\n  constructor(rgba: string);\n  constructor(rgba: Color);\n  constructor(\n    rgba: string | number | Color,\n    g?: number,\n    b?: number,\n    a: number = 255\n  ) {\n    let r: number;\n    if (typeof rgba === \"string\") {\n      [r = NaN, g = NaN, b = NaN, a = 255] = parseColorString(rgba) || [];\n    } else if (rgba instanceof Color) {\n      [r, g, b, a] = [rgba.r, rgba.g, rgba.b, rgba.a];\n    } else {\n      r = rgba;\n    }\n    this.r = r;\n    this.g = g!;\n    this.b = b!;\n    this.a = a < 1 ? Math.round(a * 255) : a;\n  }\n\n  isValid() {\n    return (\n      Number.isInteger(this.r) &&\n      Number.isInteger(this.g) &&\n      Number.isInteger(this.b) &&\n      Number.isInteger(this.a)\n    );\n  }\n\n  /**\n   * Extra method for changing transparency\n   */\n  withTransparency(alpha: number) {\n    return new Color(this.r, this.g, this.b, alpha);\n  }\n\n  brighter() {\n    let { r, g, b, a: alpha } = this;\n    const int = Math.floor,\n      FACTOR = Color.FACTOR;\n    // The rest is copy paste of java.awt.Color (only `int i` is changed to `let i` :D)\n    let i = int(1.0 / (1.0 - FACTOR));\n    if (r == 0 && g == 0 && b == 0) {\n      return new Color(i, i, i, alpha);\n    }\n    if (r > 0 && r < i) r = i;\n    if (g > 0 && g < i) g = i;\n    if (b > 0 && b < i) b = i;\n\n    return new Color(\n      Math.min(int(r / FACTOR), 255),\n      Math.min(int(g / FACTOR), 255),\n      Math.min(int(b / FACTOR), 255),\n      alpha\n    );\n  }\n\n  darker() {\n    const FACTOR = Color.FACTOR;\n    const int = Math.floor;\n\n    return new Color(\n      Math.max(int(this.r * FACTOR), 0),\n      Math.max(int(this.g * FACTOR), 0),\n      Math.max(int(this.b * FACTOR), 0),\n      this.a\n    );\n  }\n\n  static brighter(color: string): string {\n    // note: we can't type args simply with ConstructorParameters<typeof Color>.\n    // see more: https://github.com/microsoft/TypeScript/issues/37079\n    return new Color(color).brighter().toString();\n  }\n\n  blend(colorOrColorString: Color | string) {\n    const color =\n      typeof colorOrColorString === \"string\"\n        ? new Color(colorOrColorString)\n        : colorOrColorString;\n    const getBlendedValue = (component: \"r\" | \"g\" | \"b\") =>\n      Math.round(\n        (color.a / 255) * color[component] +\n          (this.a / 255) * (1 - color.a / 255) * this[component]\n      );\n    return new Color(\n      getBlendedValue(\"r\"),\n      getBlendedValue(\"g\"),\n      getBlendedValue(\"b\")\n    );\n  }\n\n  toString() {\n    const toString = (component: number) =>\n      Number.isNaN(component) ? \"\" : component.toString(16).padStart(2, \"0\");\n    const r = toString(this.r);\n    const g = toString(this.g);\n    const b = toString(this.b);\n    const a = this.a === 255 ? \"\" : toString(this.a);\n    return `#${r}${g}${b}${a}`;\n  }\n}\n","import React, { CSSProperties, useRef, useState } from \"react\";\nimport styled, { useTheme } from \"styled-components\";\nimport {\n  BottomResizer,\n  LeftResizer,\n  RightResizer,\n  TopResizer,\n} from \"../Resizer\";\nimport { ResizerProps } from \"../Resizer/ResizerProps\";\nimport { Theme } from \"../Theme/Theme\";\n\n/**\n * Props are named mostly based on ThreeComponentsSplitter in Intellij Platform.\n */\nexport interface ThreeViewSplitterProps {\n  orientation?: \"horizontal\" | \"vertical\";\n  resizerProps?: Partial<\n    Omit<ResizerProps, \"onResize\" | \"onResizeStarted\" | \"onResizeEnd\">\n  >;\n  innerView?: React.ReactNode;\n  innerViewMinSize?: number;\n  firstView?: React.ReactNode;\n  firstSize?: number | null;\n  firstViewMinSize?: number;\n  lastView?: React.ReactNode;\n  lastSize?: number | null;\n  lastViewMinSize?: number;\n  onFirstResize?: (size: number) => void;\n  onLastResize?: (size: number) => void;\n  style?: CSSProperties;\n  className?: string;\n}\n\nconst StyledSplitterContainer = styled.div<{\n  orientation: \"horizontal\" | \"vertical\";\n}>`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  flex-direction: ${({ orientation }) =>\n    orientation === \"vertical\" ? \"column\" : \"row\"};\n`;\n\nconst StyledView = styled.div`\n  // The default overflow visible should be changed obviously. Not sure if there is any layout implication\n  // in using 'auto' instead of hidden, to provide scroll behaviour by default, but even if we realize later\n  // that we need to set overflow to hidden here, we can have scrollable content inside the inner view via an\n  // intermediate element inside the inner view, with overflow set to auto and width set to 100%.\n  overflow: auto;\n`;\n\nconst StyledSplitterInnerView = styled(StyledView)`\n  flex: 1;\n`;\n\n/**\n * Corresponding to\n * [ThreeComponentsSplitter](https://github.com/JetBrains/intellij-community/blob/58dbd93e9ea527987466072fa0bfbf70864cd35f/platform/platform-api/src/com/intellij/openapi/ui/ThreeComponentsSplitter.java#L40-L40)\n * `firstView` and `lastView` are optional, and if not provided, the corresponding resizer is not rendered.\n * innerView is supposed to fill the remaining space, while firstView and lastView have specific sizes.\n * size changes in a resize interaction is not reported and is handled by local state in the component. That's\n * to prevent frequent state updates in a higher level which can be expensive. It's also based on this assumption\n * that in the usage side there is no need for any control over resizing or even knowing the intermediate state.\n * Maybe a minSize and maxSize would be the extent of the required control over resizing. But anyway, this model\n * of keeping the size as a local state during a resize session is something that can be changed if needed.\n *\n * Features:\n * - Relative sizing (fraction of the container)\n * - Default size by content\n * - Change handling only when resize is done.\n *\n * TODO: max and min size not implemented\n * TODO: add support for uncontrolled version\n */\nexport const ThreeViewSplitter: React.FC<ThreeViewSplitterProps> = ({\n  orientation = \"horizontal\",\n  firstView,\n  firstSize,\n  lastView,\n  lastSize,\n  onFirstResize,\n  onLastResize,\n  resizerProps: resizerPropsOverrides = {},\n  innerView,\n  firstViewMinSize,\n  lastViewMinSize,\n  innerViewMinSize,\n  ...containerProps\n}: ThreeViewSplitterProps): React.ReactElement => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const firstViewRef = useRef<HTMLDivElement>(null);\n  const lastViewRef = useRef<HTMLDivElement>(null);\n  const resizeFromRef = useRef<{\n    firstView: number | null;\n    lastView: number | null;\n  }>({ firstView: null, lastView: null });\n  const [firstSizeState, setFirstSizeState] = useState<number | null>(null);\n  const [lastSizeState, setLastSizeState] = useState<number | null>(null);\n  const theme = useTheme() as Theme;\n\n  const value = <T1, T2>(horizontalValue: T1, verticalValue: T2) =>\n    orientation === \"horizontal\" ? horizontalValue : verticalValue;\n\n  const FirstResizer: React.ComponentType<ResizerProps> = value(\n    RightResizer,\n    BottomResizer\n  );\n  const SecondResizer: React.ComponentType<ResizerProps> = value(\n    LeftResizer,\n    TopResizer\n  );\n  const sizeStyleProp = value(\"width\", \"height\");\n  const minSizeStyleProp = value(\"minWidth\", \"minHeight\");\n\n  const resizerProps: ThreeViewSplitterProps[\"resizerProps\"] = {\n    background: theme.commonColors.contrastBorder,\n    size: 1,\n    ...resizerPropsOverrides,\n  };\n\n  const isFractionSize = (size: number) => size < 1;\n\n  const normalizeSize = (\n    size: number | undefined | null\n  ): CSSProperties[\"width\" | \"height\"] =>\n    size != null\n      ? isFractionSize(size)\n        ? `${size * 100}%`\n        : Math.round(size)\n      : undefined;\n\n  const getSize = (elem: HTMLElement): number =>\n    value(elem.offsetWidth, elem.offsetHeight);\n\n  const getNewSize = (fromSize: number, resize: number) => {\n    if (fromSize != null && isFractionSize(fromSize)) {\n      if (!containerRef.current) {\n        throw new Error(\n          \"ThreeViewSplitter: Could not locate container to calculate fraction size\"\n        );\n      }\n      const containerSize = value(\n        containerRef.current.offsetWidth,\n        containerRef.current.offsetHeight\n      );\n      const newFractionSize = resize / containerSize;\n      return newFractionSize < 1 ? newFractionSize : fromSize;\n    } else {\n      return Math.max(resize, 1);\n    }\n  };\n\n  const getActualSize = (viewElem: HTMLElement | null): number | null => {\n    if (!containerRef.current || !viewElem) {\n      return null;\n    }\n    const actualSize = getSize(viewElem);\n    if (viewElem.style[sizeStyleProp]?.includes(\"%\")) {\n      return actualSize / getSize(containerRef.current);\n    }\n    return actualSize;\n  };\n\n  const currentLastSize = normalizeSize(lastSizeState ?? lastSize);\n  const currentFirstSize = normalizeSize(firstSizeState ?? firstSize);\n  return (\n    <StyledSplitterContainer\n      ref={containerRef}\n      orientation={orientation}\n      {...containerProps}\n    >\n      {firstView && (\n        <>\n          <StyledView\n            ref={firstViewRef}\n            style={{\n              [sizeStyleProp]: currentFirstSize,\n              // if other side is resizing, minWidth/minHeight is set so that this side is not get affected.\n              // It may make sense to allow opting out of this behaviour, if it's considered a feature to be able to\n              // \"push\" the other side too when expanding one side.\n              [minSizeStyleProp]:\n                (lastSizeState !== null ? currentFirstSize : undefined) ??\n                firstViewMinSize,\n            }}\n          >\n            {firstView}\n          </StyledView>\n          <FirstResizer\n            onResizeStarted={() => {\n              const size = firstViewRef.current\n                ? getSize(firstViewRef.current)\n                : 0;\n              setFirstSizeState(firstSize ?? size);\n              // In React 18, set state in handlers can be batched, so we can't rely\n              // on `firstSizeState` in `onResize`, and keep the initial size in a ref too.\n              // Although not likely in practice for those events to be batched,\n              // it at least happened in tests.\n              resizeFromRef.current.firstView = firstSize ?? size;\n              return size;\n            }}\n            onResize={(newSize) => {\n              if (resizeFromRef.current.firstView != null) {\n                setFirstSizeState(\n                  getNewSize(resizeFromRef.current.firstView, newSize)\n                );\n              }\n            }}\n            onResizeEnd={() => {\n              const actualSize = getActualSize(firstViewRef.current);\n              if (actualSize !== null) {\n                onFirstResize?.(actualSize);\n              }\n              setFirstSizeState(null);\n            }}\n            {...resizerProps}\n          />\n        </>\n      )}\n      {innerView && (\n        <StyledSplitterInnerView\n          style={{\n            [minSizeStyleProp]: innerViewMinSize,\n          }}\n        >\n          {innerView}\n        </StyledSplitterInnerView>\n      )}\n      {lastView && (\n        <>\n          <SecondResizer\n            onResizeStarted={() => {\n              const size = getSize(lastViewRef.current!);\n              setLastSizeState(lastSize ?? size);\n              resizeFromRef.current.lastView = lastSize ?? size;\n              return size;\n            }}\n            onResize={(newSize) => {\n              if (resizeFromRef.current.lastView != null) {\n                setLastSizeState(\n                  getNewSize(resizeFromRef.current.lastView, newSize)\n                );\n              }\n            }}\n            onResizeEnd={() => {\n              const actualSize = getActualSize(lastViewRef.current);\n              if (actualSize !== null) {\n                onLastResize?.(actualSize);\n              }\n              setLastSizeState(null);\n            }}\n            {...resizerProps}\n          />\n          <StyledView\n            ref={lastViewRef}\n            style={{\n              [sizeStyleProp]: currentLastSize,\n              // if other side is resizing, minWidth/minHeight is set so that this side is not get affected.\n              // It may make sense to allow opting out of this behaviour, if it's considered a feature to be able to\n              // \"push\" the other side too when expanding one side.\n              [minSizeStyleProp]:\n                (firstSizeState !== null ? currentLastSize : undefined) ??\n                lastViewMinSize,\n            }}\n          >\n            {lastView}\n          </StyledView>\n        </>\n      )}\n    </StyledSplitterContainer>\n  );\n};\n","import { isMac } from \"@react-aria/utils\";\nimport React, { HTMLProps, useRef } from \"react\";\nimport { css } from \"styled-components\";\nimport { WINDOW_SHADOW } from \"../style-constants\";\nimport { styled } from \"../styled\";\nimport { Theme } from \"../Theme/Theme\";\nimport { FloatWindowState } from \"./ToolWindowsState/ToolWindowsLayoutState\";\nimport { WindowBounds } from \"./ToolWindowsState/ToolWindowsState\";\nimport {\n  OverlayInteractionHandler,\n  OverlayResizeHandles,\n  useResizableMovableOverlay,\n} from \"@intellij-platform/core/Overlay\";\nimport { Overlay } from \"@react-aria/overlays\";\n\nconst FLOAT_WINDOW_MIN_WIDTH = 100;\nconst FLOAT_WINDOW_MIN_HEIGHT = 40; // in Intellij Platform it's zero but there is window frame which doesn't exist here\n\nconst StyledFloatView = styled.div`\n  box-sizing: border-box;\n  position: fixed;\n  background: ${({ theme }) => theme.commonColors.panelBackground};\n  color: ${({ theme }) => theme.color(\"*.foreground\")};\n  // border color doesn't seem to be correct and needs more investigation. might be even os-specific and outside\n  // theme colors.\n  border: ${({ theme }) => `1px solid ${theme.color(\"Component.borderColor\")}`};\n  ${WINDOW_SHADOW};\n  ${isMac() &&\n  css<{ theme: Theme }>`\n    border-radius: 8px;\n  `}\n  z-index: 2;\n`;\n\n/**\n * Container for tool windows in float view mode. It handles some visual aspects like the border and shadow, as well as\n * UI interactions for changing the floatingBound of the tool window.\n */\nexport const FloatView: React.FC<\n  {\n    state: FloatWindowState;\n    onBoundsChange: (bounds: WindowBounds) => void;\n  } & Omit<HTMLProps<HTMLDivElement>, \"ref\" | \"as\">\n> = ({ children, state: { bounds }, onBoundsChange, ...otherProps }) => {\n  const ref = useRef(null);\n  const { bounds: boundsStyle, overlayInteractionHandlerProps } =\n    useResizableMovableOverlay(ref, {\n      bounds,\n      onBoundsChange,\n    });\n\n  return (\n    <Overlay>\n      <StyledFloatView\n        {...otherProps}\n        ref={ref}\n        style={{ ...otherProps.style, ...boundsStyle }}\n      >\n        <OverlayInteractionHandler {...overlayInteractionHandlerProps}>\n          <OverlayResizeHandles\n            minWidth={FLOAT_WINDOW_MIN_WIDTH}\n            minHeight={FLOAT_WINDOW_MIN_HEIGHT}\n          />\n          {children}\n        </OverlayInteractionHandler>\n      </StyledFloatView>\n    </Overlay>\n  );\n};\n","import { move } from \"ramda\";\nimport React, { HTMLProps, Key, useState } from \"react\";\nimport { FloatView } from \"./FloatView\";\nimport { FloatWindowState } from \"./ToolWindowsState/ToolWindowsLayoutState\";\nimport { WindowBounds } from \"./ToolWindowsState/ToolWindowsState\";\n\n// NOTE: useStackedLayersState and useStackedLayers are generic but kept here since there is no other use case at the\n// moment. They should be moved to their own file(s) when/if other use case came up.\n\ninterface StackedLayersState<T> {\n  /**\n   * Sorted list of items representing layers.\n   */\n  sorted: T[];\n  /**\n   * A function to be used when the layer should be brought to front, typically based on some UI interaction.\n   */\n  bringToFront: (index: number) => void;\n}\n\n/**\n * State management for a stacked list of layers with **bring to front** functionality.\n */\nfunction useStackedLayersState<T, K = React.Key>(\n  /**\n   * A list of arbitrary items representing stacked layers.\n   */\n  items: T[],\n  /**\n   * A function for converting each item into a key which consistently identifies each item, in subsequent renders.\n   * It's used to maintain current sorting state. Although it can be of any type, it's usually a string or number.\n   */\n  getKey: (item: T) => K\n): StackedLayersState<T> {\n  // Local state for now, but can easily change to controllable if needed.\n  const [sortedKeys, setSortedKeys] = useState<K[]>([]);\n  const sorted = items.sort(\n    (a, b) => sortedKeys.indexOf(getKey(a)) - sortedKeys.indexOf(getKey(b))\n  );\n  return {\n    sorted,\n    bringToFront: (index: number) => {\n      setSortedKeys(move(index, -1, sorted).map(getKey));\n    },\n  };\n}\n\n/**\n * Given the state of a stacked list of layers, returns DOM props to be applied to each layer for interaction-based\n * \"bring to front\" behaviour.\n */\nfunction useStackedLayers<T>(state: StackedLayersState<T>): {\n  layersProps: Array<HTMLProps<HTMLElement>>;\n} {\n  return {\n    layersProps: state.sorted.map((_, index) => ({\n      onFocus: () => {\n        state.bringToFront(index);\n      },\n    })),\n  };\n}\n\n/**\n * Renders float tool windows.\n * - handles resize and move actions for float windows.\n * - handles layering of float tool windows.\n */\nexport function FloatToolWindows({\n  floatWindows = [],\n  onBoundsChange,\n  renderToolWindow,\n}: {\n  floatWindows: FloatWindowState[] | undefined;\n  onBoundsChange: (key: Key, bounds: WindowBounds) => void;\n  renderToolWindow: (key: Key) => React.ReactNode;\n}) {\n  const stackedFloatWindows = useStackedLayersState(\n    floatWindows,\n    ({ key }) => key\n  );\n  const { layersProps } = useStackedLayers(stackedFloatWindows);\n  // sorted list is used to render layers. We could as well use z-index and always render with the same order, but\n  // it doesn't really matter as long as key is set.\n  return (\n    <>\n      {stackedFloatWindows.sorted.map((toolWindow, index) => (\n        <FloatView\n          key={toolWindow.key}\n          state={toolWindow}\n          {...layersProps[index]}\n          onBoundsChange={(bounds) => onBoundsChange(toolWindow.key, bounds)}\n        >\n          {renderToolWindow(toolWindow.key)}\n        </FloatView>\n      ))}\n    </>\n  );\n}\n","import React, {\n  Key,\n  MutableRefObject,\n  RefObject,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { getItemElement } from \"@intellij-platform/core/Collections/getItemElement\";\nimport { useLatest } from \"../utils/useLatest\";\nimport { DropPosition } from \"./createGetDropPosition\";\nimport { UseElementMoveOptions } from \"./useElementMove\";\nimport { Anchor } from \"./utils\";\n\ntype Rect = Omit<ClientRect, \"toJSON\" | \"x\" | \"y\">;\n\ntype StripeLocation<T extends unknown> = {\n  index: number;\n  anchor: Anchor;\n  isSplit: boolean;\n};\ntype MovableStripeProps<T> = {\n  stripeElRef: React.RefObject<HTMLElement>;\n  getKey: (item: T) => Key;\n  anchor: Anchor;\n  mainItems: T[];\n  splitItems: T[];\n  createGetDropPosition: (\n    key: Key\n  ) => (draggedRect: Rect) => DropPosition | null;\n};\n\ntype MovableToolWindowStripeContextType<T> = {\n  addStripe: <T>(\n    id: string,\n    propsRef: MutableRefObject<MovableStripeProps<T>>\n  ) => () => void;\n  startMove: (id: string, args: { from: Rect; key: Key }) => void;\n  move: (args: { to: Rect }) => void;\n  endMove: () => void;\n  dropPosition: null | { id: string; dropPosition: DropPosition };\n  draggingKey: Key | null;\n  draggingRect: Rect | null;\n};\n\nexport type MovableToolWindowStripeProviderProps<T = unknown> = {\n  children: React.ReactNode;\n  onMove: (args: { from: StripeLocation<T>; to: StripeLocation<T> }) => void;\n};\n\nconst MovableToolWindowStripeContext =\n  React.createContext<MovableToolWindowStripeContextType<any> | null>(null);\n\n/**\n * A wrapper component to render around `ToolWindowStripe`s to make their button movable. Stripe buttons then become\n * draggable and can be moved either within the same `ToolWindowStripe` or across different ones.\n * @param onMove: called when a stripe button is moved from one anchor to another.\n * @param children: child element tree, containing one or more ToolWindowStripe elements. No need to be direct children.\n */\nexport const MovableToolWindowStripeProvider = <T extends unknown>({\n  onMove,\n  children,\n}: MovableToolWindowStripeProviderProps<T>) => {\n  const stripes = useRef<{\n    [id: string]: RefObject<MovableStripeProps<T>>;\n  }>({});\n  const [draggingRect, setDraggingRect] = useState<Rect | null>(null);\n  const [draggingKey, setDraggingKey] = useState<Key | null>(null);\n  const [dropPosition, setDropPosition] = useState<{\n    id: string;\n    dropPosition: DropPosition;\n  } | null>(null);\n  const getDropPositionRef = useRef<\n    (to: Rect) => {\n      id: string;\n      dropPosition: DropPosition;\n    } | null\n  >(() => null);\n  const moveStartLocationRef = useRef<null | {\n    id: string;\n    index: number;\n    anchor: Anchor;\n    isSplit: boolean;\n  }>(null);\n\n  const contextValue = useMemo(\n    (): MovableToolWindowStripeContextType<T> => ({\n      addStripe: (id, propsRef) => {\n        if (stripes.current[id]) {\n          console.error(`multiple stripes with the same id \"${id}`);\n        }\n        // @ts-expect-error\n        stripes.current[id] = propsRef;\n        return () => {\n          delete stripes.current[id];\n        };\n      },\n      startMove: (id, { from, key }) => {\n        const stripe = stripes.current[id]?.current;\n        if (!stripe) {\n          return;\n        }\n        const { stripeElRef } = stripe;\n        const itemElement = getItemElement(stripeElRef, key);\n        if (!itemElement) {\n          throw new Error(\n            `unexpected state: Could not find stripe button element ${key} via data-key attribute`\n          );\n        }\n        setDraggingRect(itemElement.getBoundingClientRect().toJSON());\n        setDraggingKey(key);\n\n        const indexInMain = stripe.mainItems.findIndex(\n          (item) => stripe.getKey(item) === key\n        );\n        const indexInSplit = stripe.splitItems.findIndex(\n          (item) => stripe.getKey(item) === key\n        );\n        moveStartLocationRef.current = {\n          id,\n          anchor: stripe.anchor,\n          index: indexInMain > -1 ? indexInMain : indexInSplit,\n          isSplit: indexInSplit > -1,\n        };\n        const display = itemElement.style.display;\n        // Hiding the button that's being dragged immediately is important for size calculation.\n        // It will be controlled and overridden by style prop later, But it's important to have it\n        // set here too.\n        // That's because in React 18 setting state (which subsequently sets style prop) is batched\n        // with other state changes in the event handler this is being called and is not immediately\n        // applied.\n        itemElement.style.display = \"none\";\n        const dropPositionGetters = Object.entries(stripes.current).map(\n          ([id, stripe]) =>\n            [id, stripe.current!.createGetDropPosition(key)] as const\n        );\n        itemElement.style.display = display;\n\n        const getDropPosition = (draggedRect: Rect) => {\n          for (const [id, getDropPosition] of dropPositionGetters) {\n            const dropPosition = getDropPosition(draggedRect);\n            if (dropPosition) {\n              return {\n                id,\n                dropPosition,\n              };\n            }\n          }\n          return null;\n        };\n\n        setDropPosition(getDropPosition(from));\n\n        getDropPositionRef.current = getDropPosition;\n      },\n      move: ({ to }) => {\n        setDropPosition(getDropPositionRef.current(to));\n      },\n      endMove: () => {\n        if (dropPosition && draggingKey) {\n          onMove({\n            from: moveStartLocationRef.current!,\n            to: {\n              anchor: dropPosition.id as Anchor /*FIXME*/,\n              index: dropPosition.dropPosition.index,\n              isSplit: dropPosition.dropPosition.split,\n            },\n          });\n        }\n        setDraggingKey(null);\n        setDropPosition(null);\n        setDraggingRect(null);\n      },\n      dropPosition,\n      draggingRect,\n      draggingKey,\n    }),\n    [dropPosition, draggingKey, draggingRect]\n  );\n\n  return (\n    <MovableToolWindowStripeContext.Provider value={contextValue}>\n      {children}\n    </MovableToolWindowStripeContext.Provider>\n  );\n};\n\nexport function useMovableStripeButtons<T>(props: MovableStripeProps<T>) {\n  // Seems reasonable to assume anchor is unique. Also current onMove signature is coupled with anchor, not a more generic id.\n  const id = props.anchor;\n  const context = useContext(MovableToolWindowStripeContext);\n  const latestPropsRef = useLatest(props);\n  useEffect(() => {\n    if (context) {\n      return context.addStripe(id, latestPropsRef);\n    }\n  }, [context, id]);\n\n  const getProps = (\n    key: Key\n  ): Pick<\n    Required<UseElementMoveOptions<unknown>>,\n    \"onMoveStart\" | \"onMove\" | \"onMoveEnd\"\n  > & { moveDisabled: boolean } => ({\n    moveDisabled: !context,\n    onMoveStart: ({ from }) => {\n      context?.startMove?.(id, { from, key });\n    },\n    onMove: ({ to }) => {\n      context?.move({ to });\n    },\n    onMoveEnd: () => {\n      context?.endMove();\n    },\n  });\n  return {\n    getProps,\n    draggingRect: context?.draggingRect ?? null,\n    dropPosition:\n      context?.dropPosition?.id === id\n        ? context?.dropPosition.dropPosition\n        : null,\n    draggingKey: context?.draggingKey ?? null,\n  };\n}\n","import { styled } from \"../styled\";\nimport { css } from \"styled-components\";\n\nconst TopStripe = styled.div`\n  display: flex; // default display, which is block causes an unwanted minimum height\n  grid-area: ts;\n`;\nconst BottomStripe = styled.div`\n  display: flex; // default display, which is block causes an unwanted minimum height\n  grid-area: bs;\n`;\nconst LeftStripe = styled.div`\n  grid-area: ls;\n`;\nconst RightStripe = styled.div`\n  grid-area: rs;\n`;\nconst InnerView = styled.div`\n  grid-area: main;\n  min-height: 0; // necessary to prevent overflow;\n  position: relative; // necessary for undock views which are absolute positioned\n  background: inherit;\n  min-width: 0; // very important for layout. If not set, resizing tool windows can cause weird scrollbar inside tool windows pane.\n`;\n\n/**\n * The container which renders top,bottom,left and right stripes with a centered content.\n * responsible only for the layout of the stripes and the centered content. layout doesn't\n * include the opened tool windows on different sides and is just about the stripes around\n * the center area.\n * It also supports toggling stripes visibility.\n */\nconst Shell = styled.div<{ hideStripes: boolean }>`\n  display: grid;\n  grid-template-columns: min-content auto min-content;\n  grid-template-rows: min-content auto min-content;\n  grid-template-areas:\n    \".   ts   .\"\n    \"ls main rs\"\n    \".   bs   .\";\n\n  background: ${({ theme }) => theme.commonColors.panelBackground};\n  color: ${({ theme }) => theme.color(\"*.foreground\")};\n  ${({ hideStripes }) =>\n    hideStripes &&\n    css`\n      ${TopStripe},\n      ${BottomStripe}, \n      ${LeftStripe}, \n      ${RightStripe} {\n        display: none;\n      }\n    `}\n`;\n\nexport const StyledToolWindowOuterLayout = {\n  Shell,\n  TopStripe,\n  BottomStripe,\n  LeftStripe,\n  RightStripe,\n  InnerView,\n};\n","import { compose, filter, groupBy, map, pipe, prop, sortBy } from \"ramda\";\nimport { Key } from \"react\";\nimport { Anchor, isHorizontalToolWindow } from \"../utils\";\nimport {\n  ToolWindowsState,\n  ToolWindowState,\n  ViewMode,\n} from \"./ToolWindowsState\";\n\ntype ToolWindowStateWithKey = { key: Key } & ToolWindowState;\n\nexport interface StripesState {\n  main: Key[];\n  split: Key[];\n  activeKeys: Key[];\n}\n\n/**\n * Represents UI state of the split view (aka secondary or side view) within a docked view at one of the four sides.\n */\ntype SideDockedSplitState = {\n  key: Key;\n  /**\n   * relative size of the split view inside a docked view. Note that this is intentionally a fraction size (0≤size<1),\n   * based on the expected behaviour. split views inside a docked view are not fixed sized and resizing the window\n   * affect their size. This is not the case for the docked views themselves inside the main layout, which have fixed\n   * size which is not affected by window resizing.\n   */\n  sizeFraction: number;\n};\n\n// A potential improvement for this and similar nullable types like SideDockedState.split might be to avoid null type\n// and have it like { open: false} | {open: true, ...relevantProps}\n// Not sure if it's really preferred in terms of usage in the react component.\nexport type SideDockedState = null | {\n  size: number;\n  mainKey: Key;\n  split: SideDockedSplitState | null;\n};\n\nexport type SideUnDockedState = null | {\n  size: number;\n  key: Key;\n};\n\nexport interface SideState {\n  docked: SideDockedState;\n  undocked: SideUnDockedState;\n  stripes: StripesState;\n}\n\nexport interface FloatWindowState {\n  key: Key;\n  bounds: Exclude<ToolWindowState[\"floatingBounds\"], undefined>;\n}\n\n/**\n * Derived from ToolWindowsState, it represents the same information in a away that is suitable for ToolWindows\n * component to render the layout.\n */\nexport interface ToolWindowsLayoutState {\n  left: SideState;\n  top: SideState;\n  right: SideState;\n  bottom: SideState;\n  floatWindows: Array<FloatWindowState>;\n  windows: Array<FloatWindowState>;\n}\n\ninterface ContainerSize {\n  width: number;\n  height: number;\n}\n\nconst getSizeInAnchor = (containerSize: ContainerSize, anchor: Anchor) =>\n  containerSize[isHorizontalToolWindow(anchor) ? \"height\" : \"width\"];\n\nconst mapToKey = map<ToolWindowStateWithKey, Key>(prop(\"key\"));\nconst sortAndMapToKey = compose(\n  mapToKey,\n  sortBy(({ order }: ToolWindowStateWithKey) => order)\n);\nconst filterMains = filter<ToolWindowStateWithKey, \"array\">(\n  ({ isSplit }: ToolWindowStateWithKey) => !isSplit\n);\nconst getMains = compose(sortAndMapToKey, filterMains);\nconst filterSplits = filter<ToolWindowStateWithKey, \"array\">(\n  ({ isSplit }: ToolWindowStateWithKey) => isSplit\n);\nconst filterVisible = (expectedViewMode: ViewMode | ViewMode[] = []) =>\n  filter<ToolWindowStateWithKey, \"array\">(\n    ({ viewMode, isVisible }: ToolWindowStateWithKey) =>\n      isVisible &&\n      ([] as ViewMode[]).concat(expectedViewMode).includes(viewMode)\n  );\nconst getSplits = compose(sortAndMapToKey, filterSplits);\n\nconst filterVisibleDocked = filterVisible([\"docked_unpinned\", \"docked_pinned\"]);\nconst filterVisibleUnDocked = filterVisible(\"undock\");\n\nconst getDocked = (\n  anchor: Anchor,\n  containerSize: ContainerSize,\n  toolWindows: ToolWindowStateWithKey[]\n): SideDockedState => {\n  const docks = filterVisibleDocked(toolWindows);\n  const mains = filterMains(docks);\n  const splits = filterSplits(docks);\n  if (mains.length > 1 || splits.length > 1) {\n    throw new Error(\n      \"More than one visible docked window in a side is not possible\"\n    );\n  }\n  if (mains[0] || splits[0]) {\n    const weight = mains[0]?.weight || splits[0]?.weight;\n    return {\n      mainKey: mains[0]?.key || splits[0]?.key,\n      split:\n        mains[0]?.key && splits[0]?.key\n          ? {\n              key: splits[0].key,\n              sizeFraction: mains[0].weight\n                ? 1 - mains[0].sideWeight\n                : splits[0].sideWeight,\n            }\n          : null,\n      size: weight * getSizeInAnchor(containerSize, anchor),\n    };\n  }\n  return null;\n};\n\nconst getUnDocked = (\n  anchor: Anchor,\n  containerSize: ContainerSize,\n  toolWindows: ToolWindowStateWithKey[]\n): SideUnDockedState => {\n  const windows = filterVisibleUnDocked(toolWindows);\n  if (windows.length === 1) {\n    return {\n      key: windows[0].key,\n      size: windows[0].weight * getSizeInAnchor(containerSize, anchor),\n    };\n  }\n  if (windows.length === 0) {\n    return null;\n  }\n  throw new Error(\n    \"More than one visible undocked window in a side is not possible\"\n  );\n};\n\nconst getSideState = (\n  anchor: Anchor,\n  containerSize: ContainerSize,\n  toolWindows: ToolWindowStateWithKey[]\n): SideState => ({\n  stripes: {\n    main: getMains(toolWindows),\n    split: getSplits(toolWindows),\n    activeKeys: mapToKey(toolWindows.filter(({ isVisible }) => isVisible)),\n  },\n  undocked: getUnDocked(anchor, containerSize, toolWindows),\n  docked: getDocked(anchor, containerSize, toolWindows),\n});\n\nconst DEFAULT_HEIGHT = 300;\nconst DEFAULT_WIDTH = 400;\nconst getFloatWindowState =\n  (containerSize: ContainerSize) =>\n  ({\n    floatingBounds: bounds = {\n      top: containerSize.height / 2 - DEFAULT_HEIGHT / 2,\n      left: containerSize.width / 2 - DEFAULT_WIDTH / 2,\n      height: DEFAULT_HEIGHT,\n      width: DEFAULT_WIDTH,\n    },\n    key,\n  }: ToolWindowStateWithKey): FloatWindowState => ({ bounds, key });\n\nconst getFloatWindowsState = (\n  viewMode: \"float\" | \"window\",\n  containerSize: ContainerSize,\n  toolWindows: ToolWindowStateWithKey[]\n) =>\n  pipe(\n    filterVisible(viewMode),\n    map<ToolWindowStateWithKey, FloatWindowState>(\n      getFloatWindowState(containerSize)\n    )\n  )(toolWindows);\n\nexport function getToolWindowsLayoutState(\n  state: Readonly<ToolWindowsState>,\n  containerSize: ContainerSize,\n  /**\n   * list of valid window ids. If state contains window ids that are not included here, they will be excluded in\n   * the returned state object.\n   */\n  windowIds: string[] = Object.keys(state.windows)\n): ToolWindowsLayoutState {\n  const toolWindows = Object.keys(state.windows)\n    .filter(\n      (key) => windowIds.includes(key) && !state.removedFromSideBarIds.has(key)\n    )\n    .map((key) => ({\n      ...state.windows[key],\n      key,\n    }));\n  const {\n    top = [],\n    bottom = [],\n    left = [],\n    right = [],\n  } = groupBy(({ anchor }) => anchor, toolWindows);\n  return {\n    left: getSideState(\"left\", containerSize, left),\n    top: getSideState(\"top\", containerSize, top),\n    right: getSideState(\"right\", containerSize, right),\n    bottom: getSideState(\"bottom\", containerSize, bottom),\n    windows: getFloatWindowsState(\"window\", containerSize, toolWindows),\n    floatWindows: getFloatWindowsState(\"float\", containerSize, toolWindows),\n  };\n}\n","import { Anchor, isHorizontalToolWindow } from \"./utils\";\nimport { Key } from \"react\";\ntype Rect = Omit<ClientRect, \"toJSON\" | \"x\" | \"y\">;\n\nexport interface DropPosition {\n  index: number;\n  split: boolean;\n\n  relative?: {\n    placement: \"before\" | \"after\";\n    key: Key;\n  };\n}\n\n/**\n * TODO: Add a few words about what this function do.\n */\nexport const createGetDropPosition = <T extends any>({\n  anchor,\n  stripeElement,\n  splitItems,\n  mainItems,\n  getItemRect,\n  getKey,\n}: {\n  stripeElement: HTMLElement;\n  anchor: Anchor;\n  getItemRect: (key: Key) => Rect;\n  getKey: (key: T) => Key;\n  mainItems: T[];\n  splitItems: T[];\n}): ((draggedRect: Rect) => DropPosition | null) => {\n  // Note: It may be tempting to calculate stripe element boundaries just once\n  // here, since it's not supposed to change during a drag session, but it\n  // can change due to getting empty when the only button is being dragged out.\n  const getStripeRect = () => stripeElement.getBoundingClientRect();\n\n  const getCanDrop = (draggingRect: Rect) => {\n    const stripeRect = getStripeRect();\n    return (\n      draggingRect.right > stripeRect.left - stripeRect.width &&\n      draggingRect.left < stripeRect.right &&\n      draggingRect.bottom > stripeRect.top - stripeRect.height &&\n      draggingRect.top < stripeRect.bottom\n    );\n  };\n\n  const start = (rect: Rect) =>\n    isHorizontalToolWindow(anchor) ? rect.left : rect.top;\n  const end = (rect: Rect) =>\n    isHorizontalToolWindow(anchor) ? rect.right : rect.bottom;\n\n  const getKeyToOffsets = (items: T[]) => {\n    const keyToOffsets: Record<Key, { start: number; end: number }> = {};\n    items.forEach((item) => {\n      const key = getKey(item);\n      const boundingRect = getItemRect(key);\n      keyToOffsets[key] = {\n        start: start(boundingRect),\n        end: end(boundingRect),\n      };\n    });\n    return keyToOffsets;\n  };\n\n  const getDropPositions = (\n    items: T[],\n    split = false\n    // FIXME: score is a bad name. it's quite the opposite! the less means the higher score.\n  ): Array<DropPosition & { score: (rect: Rect) => number }> => {\n    const getRef = split ? end : start;\n    if (items.length === 0) {\n      // if the section is empty, we should still allow adding to it.\n      return [\n        {\n          index: 0,\n          split,\n          score: (draggingRect: Rect) =>\n            Math.abs(getRef(draggingRect) - getRef(getStripeRect())),\n        },\n      ];\n    }\n    return items.flatMap((item, index) => {\n      const key = getKey(item);\n      return [\n        {\n          index,\n          split,\n          relative: { key, placement: \"before\" },\n          score: (draggingRect: Rect) =>\n            Math.abs(getRef(draggingRect) - keyToOffsets[key].start),\n        },\n        {\n          index: index + 1,\n          split,\n          relative: { key, placement: \"after\" },\n          score: (draggingRect: Rect) =>\n            Math.abs(getRef(draggingRect) - keyToOffsets[key].end),\n        },\n      ];\n    });\n  };\n\n  const keyToOffsets = getKeyToOffsets([...mainItems, ...splitItems]);\n\n  const dropPositions = [\n    ...getDropPositions(mainItems),\n    ...getDropPositions(splitItems, true),\n  ];\n\n  let lastDropPosition: DropPosition | null = null;\n  return (draggingRect: Rect) => {\n    if (!getCanDrop(draggingRect)) {\n      return null;\n    }\n    const result = dropPositions.reduce(\n      (bestMatch, candidate) => {\n        const score = candidate.score(draggingRect);\n        if (!bestMatch || score < bestMatch.score) {\n          return {\n            ...candidate,\n            score,\n          };\n        }\n        return bestMatch;\n      },\n      null as\n        | null\n        | (DropPosition & {\n            score: number;\n          })\n    );\n\n    if (!result) {\n      return null;\n    }\n    if (\n      result.split !== lastDropPosition?.split ||\n      result.index !== lastDropPosition?.index\n    ) {\n      lastDropPosition = result;\n    }\n    return lastDropPosition;\n  };\n};\n","import { StyledIconWrapper } from \"../Icon/StyledIconWrapper\";\nimport { styled } from \"../styled\";\nimport React from \"react\";\nimport { css } from \"styled-components\";\nimport { Anchor } from \"./utils\";\n\nexport interface StyledToolWindowStripeButtonProps {\n  anchor: Anchor;\n  active?: boolean;\n}\n\nexport const STRIPE_BUTTON_CROSS_PADDING = 2.5;\nexport const STRIPE_BUTTON_LINE_HEIGHT = \"1rem\";\n\nconst anchorStyles = ({ anchor }: { anchor: Anchor }) => {\n  const orientation =\n    anchor === \"left\" || anchor === \"right\" ? \"vertical\" : \"horizontal\";\n\n  return orientation === \"horizontal\"\n    ? css`\n        padding: ${STRIPE_BUTTON_CROSS_PADDING}px 10px;\n      `\n    : css`\n        padding: 10px ${STRIPE_BUTTON_CROSS_PADDING}px;\n        writing-mode: vertical-lr;\n        // writing-mode: sideways-lr is not supported anywhere other than FF, so, we need to rotate\n        transform: ${anchor === \"left\" ? \"rotateZ(180deg)\" : undefined};\n\n        // icons are not rotated like text in Intellij Platform implementation. It kind of makes sense.\n        ${StyledIconWrapper} {\n          transform: rotate(180deg);\n        }\n      `;\n};\n\nexport const StyledToolWindowStripeButton = styled.span<StyledToolWindowStripeButtonProps>`\n  box-sizing: border-box;\n  display: flex; // to allow icon and text alignment by default;\n  align-items: center;\n  cursor: default;\n  user-select: none;\n  overflow: hidden;\n  direction: ltr;\n  flex-shrink: 0;\n  font-size: 0.7rem;\n  line-height: ${STRIPE_BUTTON_LINE_HEIGHT}; // absolute value seems to be problematic when the base font size is changed\n  white-space: nowrap;\n  color: ${({ theme, active }) =>\n    active\n      ? theme.color(\n          \"ToolWindow.Button.selectedForeground\",\n          theme.dark ? \"rgb(255,255,255)\" : \"rgb(0,0,0)\"\n        )\n      : theme.color(\"*.foreground\")};\n  background: ${({ theme, active }) =>\n    active\n      ? theme.color(\n          \"ToolWindow.Button.selectedBackground\",\n          theme.dark ? \"rgba(15,15,15,.332)\" : \"rgba(85,85,85,.332)\"\n        )\n      : undefined};\n\n  ${anchorStyles}\n  ${({ active }) =>\n    !active &&\n    css`\n      &:hover {\n        background: ${({ theme }) =>\n          theme.color(\n            \"ToolWindow.Button.hoverBackground\",\n            theme.dark ? \"rgba(15,15,15,.156)\" : \"rgba(85,85,85,.156)\"\n          )};\n      }\n    `};\n`;\n","import {\n  STRIPE_BUTTON_CROSS_PADDING,\n  STRIPE_BUTTON_LINE_HEIGHT,\n  StyledToolWindowStripeButton,\n} from \"./StyledToolWindowStripeButton\";\nimport { Anchor, isHorizontalToolWindow, theOtherSide } from \"./utils\";\nimport { css } from \"styled-components\";\nimport { Theme } from \"../Theme/Theme\";\nimport { styled } from \"../styled\";\nimport { Color } from \"../Theme/Color\";\n\nconst minHeight = `calc(${STRIPE_BUTTON_LINE_HEIGHT} + ${\n  2 * STRIPE_BUTTON_CROSS_PADDING + 1 /*border*/\n}px)`;\n\nconst anchorStyles = ({\n  anchor,\n  preventCollapse,\n}: StyledToolWindowStripeProps) =>\n  isHorizontalToolWindow(anchor)\n    ? css`\n        flex-direction: row;\n        width: 100%;\n        min-height: ${preventCollapse ? minHeight : \"fit-content\"};\n        ${StyledToolWindowStripeButton} {\n          height: 1.25rem;\n        }\n      `\n    : css`\n        flex-direction: column;\n        height: 100%;\n        min-width: ${preventCollapse ? minHeight : \"fit-content\"};\n        ${StyledToolWindowStripeButton} {\n          width: 1.25rem;\n        }\n      `;\nconst borderStyle = ({ anchor, theme }: { anchor: Anchor; theme: Theme }) =>\n  css`border-${theOtherSide(anchor)}: 1px solid ${\n    theme.commonColors.contrastBorder\n  }`;\n\nexport interface StyledToolWindowStripeProps {\n  anchor: Anchor;\n  highlighted?: boolean;\n  preventCollapse?: boolean;\n}\n\nexport const StyledToolWindowStripe = styled.div<StyledToolWindowStripeProps>`\n  box-sizing: border-box;\n  background: ${({ theme, highlighted }) =>\n    highlighted\n      ? Color.brighter(theme.commonColors.panelBackground)\n      : theme.commonColors.panelBackground};\n  display: inline-flex;\n  overflow: hidden;\n  ${borderStyle};\n  ${anchorStyles}\n`;\n\nexport const StyledSpacer = styled.div`\n  flex: 1;\n`;\n","import { mergeProps } from \"@react-aria/utils\";\nimport React, { CSSProperties, HTMLAttributes, Key, useRef } from \"react\";\nimport { createGetDropPosition, DropPosition } from \"./createGetDropPosition\";\nimport { useMovableStripeButtons } from \"./MovableToolWindowStripeProvider\";\nimport { StyledSpacer, StyledToolWindowStripe } from \"./StyledToolWindowStripe\";\nimport { StyledToolWindowStripeButton } from \"./StyledToolWindowStripeButton\";\nimport { useElementMove, UseElementMoveOptions } from \"./useElementMove\";\nimport { Anchor, isHorizontalToolWindow } from \"./utils\";\nimport { getItemElement } from \"@intellij-platform/core/Collections/getItemElement\";\n\ninterface ToolWindowStripeProps<T> {\n  anchor: Anchor;\n  items: T[];\n  splitItems?: T[];\n  getKey: (item: T) => Key;\n  renderItem: (item: T) => React.ReactNode;\n  selectedKeys?: Key[];\n  onItemPress?: (key: Key) => void;\n}\n\n/**\n * TODO: refactor to remove the key based interface.\n */\nexport function ToolWindowStripe<T>({\n  anchor,\n  items: mainItems,\n  renderItem: render,\n  splitItems = [],\n  selectedKeys = [],\n  onItemPress,\n  getKey,\n}: ToolWindowStripeProps<T>) {\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const { getProps, draggingRect, draggingKey, dropPosition } =\n    useMovableStripeButtons({\n      stripeElRef: containerRef,\n      getKey,\n      anchor,\n      mainItems,\n      splitItems,\n      createGetDropPosition: (key: Key) => {\n        const isNotCurrentItem = (anItem: T) => getKey(anItem) !== key;\n        const stripeElement = containerRef.current!;\n        const getItemRect = (key: Key) =>\n          getItemElement(containerRef, key)! // FIXME\n            .getBoundingClientRect();\n        return createGetDropPosition({\n          stripeElement: stripeElement,\n          mainItems: mainItems.filter(isNotCurrentItem),\n          splitItems: splitItems.filter(isNotCurrentItem),\n          getKey,\n          anchor,\n          getItemRect,\n        });\n      },\n    });\n\n  const highlighted =\n    dropPosition != null &&\n    draggingKey != null &&\n    [...mainItems, ...splitItems].every((item) => getKey(item) !== draggingKey);\n\n  const renderItem = (item: T) => {\n    const key = getKey(item);\n\n    return (\n      <ToolWindowStripeButton\n        anchor={anchor}\n        key={key}\n        data-key={key}\n        style={{\n          ...getStripeButtonStyles({\n            key,\n            dropPosition,\n            anchor,\n            draggingRect,\n            draggingKey,\n          }),\n        }}\n        {...getProps(key)}\n        active={selectedKeys.includes(key)}\n        onPress={() => onItemPress?.(key)}\n      >\n        {render(item)}\n      </ToolWindowStripeButton>\n    );\n  };\n  return (\n    <>\n      <StyledToolWindowStripe\n        anchor={anchor}\n        preventCollapse={Boolean(dropPosition)}\n        highlighted={highlighted}\n        ref={containerRef}\n      >\n        {mainItems.map(renderItem)}\n        <StyledSpacer />\n        {splitItems.map(renderItem)}\n      </StyledToolWindowStripe>\n    </>\n  );\n}\ntype Rect = Omit<ClientRect, \"toJSON\" | \"x\" | \"y\">;\n\nfunction getStripeButtonStyles({\n  anchor,\n  key,\n  dropPosition,\n  draggingRect,\n  draggingKey,\n}: {\n  anchor: Anchor;\n  key: Key;\n  draggingKey: Key | null;\n  draggingRect: Rect | null;\n  dropPosition: DropPosition | null;\n}) {\n  const styles: CSSProperties = {\n    // transition: \"margin 100ms\", // maybe only when drag is in progress, if unwanted transition at drop\n  };\n  if (dropPosition?.relative?.key === key && draggingRect) {\n    const marginValue = isHorizontalToolWindow(anchor)\n      ? draggingRect.width\n      : draggingRect.height;\n\n    if (isHorizontalToolWindow(anchor)) {\n      styles[\n        dropPosition.relative.placement === \"before\"\n          ? \"marginLeft\"\n          : \"marginRight\"\n      ] = marginValue;\n    } else {\n      styles[\n        dropPosition.relative.placement === \"before\"\n          ? \"marginTop\"\n          : \"marginBottom\"\n      ] = marginValue;\n    }\n  }\n  if (key === draggingKey) {\n    styles.display = \"none\";\n  }\n  return styles;\n}\n\nfunction ToolWindowStripeButton<T, S>({\n  children,\n  anchor,\n  onMoveStart,\n  onMove,\n  onMoveEnd,\n  onPress,\n  moveDisabled,\n  ...otherProps\n}: {\n  children: React.ReactNode;\n  anchor: Anchor;\n  style: CSSProperties;\n  active: boolean;\n  onPress: () => void;\n  moveDisabled?: boolean;\n  onMoveStart: UseElementMoveOptions<S>[\"onMoveStart\"];\n  onMove: UseElementMoveOptions<S>[\"onMove\"];\n  onMoveEnd: UseElementMoveOptions<S>[\"onMoveEnd\"];\n}) {\n  const ref = useRef<HTMLElement>(null);\n\n  // for some reason, usePress and useMove (used in useElementMove) are not compatible.\n  // it seems onMouseDown in useMove is not called, even when handlers are merged by mergeProps.\n  // FIXME: fix compatibility of useMove and usePress, and switch to usePress({ onPress })\n  const { pressProps } = {\n    pressProps: {\n      onPointerUp: onPress,\n      onMouseDown: (e) => {\n        e.preventDefault();\n      },\n    } as HTMLAttributes<HTMLElement>,\n  }; //usePress({ onPress });\n  const props = useElementMove({\n    ref,\n    disabled: moveDisabled,\n    dragThreshold: 7,\n    ghost: true,\n    onMoveStart,\n    onMove,\n    onMoveEnd,\n  });\n\n  return (\n    <StyledToolWindowStripeButton\n      anchor={anchor}\n      {...mergeProps(otherProps, pressProps, props)}\n      ref={ref}\n    >\n      {children}\n    </StyledToolWindowStripeButton>\n  );\n}\n","import { RefObject } from \"react\";\nimport {\n  useMove,\n  UseMoveOptions,\n  XY,\n} from \"../utils/interaction-utils/useMove\";\nimport { findEffectiveBackgroundColor } from \"./findEffectiveBackgroundColor\";\n\ntype Rect = Omit<ClientRect, \"toJSON\" | \"x\" | \"y\">;\n\nexport interface UseElementMoveOptions<S>\n  extends Omit<UseMoveOptions<S>, \"onMoveStart\" | \"onMove\"> {\n  ref: RefObject<HTMLElement>;\n  /**\n   * if true a clone of the element is created and used as ghost.\n   * A function can be passed to customize the default ghost element or return a completely\n   * different one.\n   */\n  ghost?: boolean | ((defaultGhost: HTMLElement) => HTMLElement);\n\n  onMoveStart: (args: { from: Rect }) => S;\n  onMove: (args: { from: Rect; to: Rect; movement: XY; startState: S }) => void;\n}\n\n/**\n * Provides necessary event handling props to be applied on an element to make it movable.\n * It's implemented on top of {@link useMove}. The differences are:\n * - The signature of `onMoveStart`, `onMove` and `onMoveEnd` are changed to pass\n *   {@link Rect} instead of {@link XY}.\n * - rendering a ghost element.\n *\n * ## A note about ghost:\n * There is no easy way to create a snapshot image of an html element. Native drag and drop API\n * supports [setting drag\n * image](https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/setDragImage) but we are\n * not using drag events mainly because of not being able to customize the offset after which drag\n * should start. See {@link UseMoveOptions#dragThreshold dragThreshold} for more details. There are\n * some libraries like html2canvas for creating an image from an html element, but they are very\n * big and using them doesn't make sense at all from a value/cost ratio perspective. There might be\n * some ways of implementing custom move threshold on top of native drag events. For example by\n * delaying the call to setDragImage, but it needs more investigation. Also, not sure if opacity of\n * the ghost is something you can control when using setDragImage.\n **/\nexport function useElementMove<S>({\n  ref,\n  onMoveStart,\n  onMove,\n  onMoveEnd,\n  ghost: ghostOption,\n  ...otherOptions\n}: UseElementMoveOptions<S>) {\n  return useMove({\n    ...otherOptions,\n    onMoveStart: () => {\n      const element = ref.current;\n      let ghost: HTMLElement | null = null;\n      if (!element) {\n        throw new Error(\n          \"Movement started but ref value is null. Make sure the passed ref is applied on the same element that other props are.\"\n        );\n      }\n      const updateGhostPosition = (rect: Rect) => {\n        if (ghost) {\n          ghost.style.left = `${rect.left}px`;\n          ghost.style.top = `${rect.top}px`;\n        }\n      };\n      const from: Rect = element.getBoundingClientRect();\n      if (ghostOption) {\n        const defaultGhost = createDefaultGhost(element);\n        ghost =\n          typeof ghostOption === \"function\"\n            ? ghostOption(defaultGhost) || defaultGhost\n            : defaultGhost;\n        ghost.style.position = \"fixed\";\n        document.body.append(ghost);\n        updateGhostPosition(from);\n      }\n      return {\n        ghost,\n        from,\n        updateGhostPosition,\n        startState: onMoveStart({ from }),\n      };\n    },\n    onMove: ({\n      movement,\n      startState: { from, updateGhostPosition, startState },\n    }) => {\n      const to: Rect = {\n        left: from.left + movement.x,\n        right: from.right + movement.x,\n        top: from.top + movement.y,\n        bottom: from.bottom + movement.y,\n        height: from.height,\n        width: from.width,\n      };\n      updateGhostPosition(to);\n      onMove({ from, to, movement, startState });\n    },\n    onMoveEnd: ({ startState: { ghost, startState } }) => {\n      ghost?.remove();\n      onMoveEnd?.({ startState });\n    },\n  });\n}\n\nfunction createDefaultGhost(element: HTMLElement) {\n  const ghost = element.cloneNode(true) as HTMLElement;\n  ghost.style.backgroundColor = findEffectiveBackgroundColor(element);\n  return ghost;\n}\n","import { Color } from \"../Theme/Color\";\n\n/**\n * Computes the effective background color of the element by blending translucent backgrounds of\n * the elements ancestors. It traverses up the parents, until reaches a solid background color.\n * all translucent backgrounds in between are blended with that solid color, with respect to their\n * transparency. It's meant to be used only for the simple cases where an element doesn't overflow\n * the parents. Obviously, in other cases there won't be one single effective background color\n * for the element.\n */\nexport function findEffectiveBackgroundColor(element: HTMLElement): string {\n  let elem: HTMLElement | null = element;\n  let colors: Color[] = [];\n  while (elem != null) {\n    const computedBackground = getComputedStyle(elem).backgroundColor;\n    if (computedBackground) {\n      const color = new Color(computedBackground);\n      colors.unshift(color);\n      if (color.a === 255) {\n        // if we've reached a solid color, we don't need to continue traversing ancestors\n        break;\n      }\n    }\n    elem = elem.parentElement;\n  }\n  return (\n    colors\n      .reduce<Color | null>((resultColor, nextColor) => {\n        return resultColor ? resultColor.blend(nextColor) : nextColor;\n      }, null)\n      ?.toString() || \"\"\n  );\n}\n","import React from \"react\";\nimport { css } from \"styled-components\";\nimport { ResizableView } from \"../ResizableView\";\nimport { styled } from \"../styled\";\nimport { SideUnDockedState } from \"./ToolWindowsState/ToolWindowsLayoutState\";\nimport { Anchor, isHorizontalToolWindow } from \"./utils\";\n\nexport const StyledUndockSide = styled.div<{ anchor: Anchor }>`\n  position: absolute;\n  background: inherit;\n  z-index: 1;\n  ${({ anchor }) =>\n    isHorizontalToolWindow(anchor)\n      ? css`\n          left: 0;\n          right: 0;\n        `\n      : css`\n          top: 0;\n          bottom: 0;\n        `};\n  ${({ anchor }) =>\n    css`\n      ${anchor}: 0;\n    `};\n`;\n\nexport function UndockSide({\n  state,\n  anchor,\n  children,\n  onResize,\n}: {\n  state: Exclude<SideUnDockedState, null>;\n  anchor: Anchor;\n  children: React.ReactNode;\n  onResize: (size: number) => void;\n}) {\n  return (\n    state && (\n      <StyledUndockSide anchor={anchor}>\n        <ResizableView\n          orientation={\n            isHorizontalToolWindow(anchor) ? \"vertical\" : \"horizontal\"\n          }\n          resizerPlacement={\n            anchor === \"left\" || anchor === \"top\" ? \"after\" : \"before\"\n          }\n          size={state.size}\n          onResize={onResize}\n        >\n          {children}\n        </ResizableView>\n      </StyledUndockSide>\n    )\n  );\n}\n","import { indexBy } from \"ramda\";\nimport React, {\n  CSSProperties,\n  ForwardedRef,\n  HTMLProps,\n  Key,\n  useImperativeHandle,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { useLatest } from \"@intellij-platform/core/utils/useLatest\";\n\nimport { ThreeViewSplitter } from \"../ThreeViewSplitter/ThreeViewSplitter\";\nimport { FocusScope } from \"../utils/FocusScope\";\nimport { FloatToolWindows } from \"./FloatToolWindows\";\nimport { MovableToolWindowStripeProvider } from \"./MovableToolWindowStripeProvider\";\nimport { StyledToolWindowOuterLayout } from \"./StyledToolWindowOuterLayout\";\nimport {\n  getToolWindowsLayoutState,\n  SideDockedState,\n  StripesState,\n  ToolWindowsLayoutState,\n} from \"./ToolWindowsState/ToolWindowsLayoutState\";\nimport { ToolWindowsState } from \"./ToolWindowsState/ToolWindowsState\";\nimport { ToolWindowStateProvider } from \"./ToolWindowsState/ToolWindowStateProvider\";\nimport { ToolWindowStripe } from \"./ToolWindowStripe\";\nimport { UndockSide } from \"./UndockSide\";\nimport { Anchor, isHorizontalToolWindow } from \"./utils\";\nimport { useOnFocusLost } from \"./useOnFocusLost\";\nimport { useInteractOutside } from \"@react-aria/interactions\";\n\ninterface ToolWindow {\n  id: string;\n  toolbarButton: React.ReactNode;\n  content: React.ReactNode;\n}\n\nexport interface ToolWindowsProps {\n  children: React.ReactNode;\n  windows: ToolWindow[];\n  toolWindowsState: Readonly<ToolWindowsState>;\n  onToolWindowStateChange: (newState: ToolWindowsState) => void;\n\n  /**\n   * Whether stripe buttons should be hidden or not.\n   * `hideToolStripes` UISettings in Intellij Platform\n   */\n  hideToolWindowBars?: boolean;\n\n  /**\n   *\n   * `wideScreenSupport` in UISettings in Intellij Platform\n   */\n  useWidescreenLayout?: boolean;\n\n  /**\n   * min width applied to the main content (children).\n   * @default 50\n   */\n  mainContentMinWidth?: number;\n\n  height?: CSSProperties[\"height\"];\n  minHeight?: CSSProperties[\"minHeight\"];\n  margin?: CSSProperties[\"margin\"];\n\n  /**\n   * props to be passed to the container element.\n   */\n  containerProps?: Omit<HTMLProps<HTMLDivElement>, \"as\">;\n}\n\nexport interface ToolWindowRefValue {\n  focus(key: Key): void;\n  hasFocus(key: Key): void;\n  focusLastActiveWindow(): void;\n  focusMainContent(): void;\n  changeState(\n    updater: (currentState: Readonly<ToolWindowsState>) => ToolWindowsState\n  ): void;\n}\n\n/**\n * @constructor\n *\n * Corresponding to ToolWindowPane in Intellij Platform\n *\n * Known issues:\n * - in Firefox and Safari, left and right toolbars are not properly shown. Seems like a nasty bug, since adding and\n * then removing some min-width: fit-content style fixes it.\n * - in the dock view of a side, open only a window from the split ones. then open a window from main ones.\n *   focus is not moved to the just opened window. The reason is we rely on autofocusing and because the React tree\n *   changes for both windows, even the split one which was open will be unmounted and mounted again, and since it's\n *   placed after the main one, and hence mounted later, it will get the focus again. This becomes a bigger issue\n *   if the main one is unpinned, because it immediately gets closed after opening.\n *   Possible solutions:\n *   - make sure the split one won't unmount and mount again in such scenario.\n *   - decouple focusing logic from mounting logic, and only focus windows somehow, when the `isVisible` is changed\n *     from false to true, not when mounted.\n * - related to previous issue: open a tool window in split section of a side. set view mode for a tool window in main\n *   section of the same side to docked_unpinned. try to open the unpinned one while the split one is open. it doesn't\n *   work.\n */\nexport const ToolWindows = React.forwardRef(function ToolWindows(\n  {\n    hideToolWindowBars = false,\n    useWidescreenLayout = false,\n    height = \"100%\",\n    minHeight = \"0\",\n    toolWindowsState,\n    onToolWindowStateChange,\n    windows,\n    children,\n    mainContentMinWidth = 50,\n    containerProps = {},\n  }: ToolWindowsProps,\n  ref: ForwardedRef<ToolWindowRefValue>\n): React.ReactElement {\n  const windowsById = indexBy(({ id }) => id, windows);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const mainContentFocusScopeRef =\n    useRef<React.ComponentRef<typeof FocusScope>>(null);\n  const [layoutState, setLayoutState] = useState<ToolWindowsLayoutState>();\n  const windowFocusableRefs = useRef<{\n    [key: string]: React.RefObject<React.ComponentRef<typeof FocusScope>>;\n  }>({});\n\n  const latestRef = useLatest({ toolWindowsState, onToolWindowStateChange });\n\n  useLayoutEffect(() => {\n    const container = containerRef.current;\n    const _setLayoutState = () =>\n      setLayoutState(\n        getToolWindowsLayoutState(\n          toolWindowsState,\n          container!.getBoundingClientRect(),\n          windows.map(({ id }) => id)\n        )\n      );\n\n    // If container is rendered but has zero dimensions for any reason, we start observing size changes, until\n    // it's no longer collapsed. Note that we don't want to unconditionally observe resizes and update the layout state.\n    // because tool windows are not supposed to keep the fraction width as the window resizes. They are supposed to have\n    // a fixed width which is determined fraction-based, but only when the tool window is opened. In fact, updating the\n    // layout state, on each and every change to toolWindowsState is also not quite correct, as some state changes\n    // are unrelated and shouldn't cause a re-calculation of the size. FIXME: don't re-calculate fraction base sizes on\n    //  every state change.\n    if (container?.offsetWidth === 0 || container?.offsetHeight === 0) {\n      const observer = new ResizeObserver(([resize]) => {\n        if (resize.contentRect.width > 0 && resize.contentRect.height > 0) {\n          _setLayoutState();\n          observer.unobserve(container);\n        }\n      });\n      observer.observe(container);\n    }\n    _setLayoutState();\n  }, [toolWindowsState]);\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      focus: (key: Key) => {\n        windowFocusableRefs.current[key]?.current?.focus();\n      },\n      hasFocus: (key: Key) =>\n        document.activeElement?.closest(`[data-tool-window-id=\"${key}\"]`) !==\n        null,\n      focusLastActiveWindow: () => {\n        const { lastFocusedKey } = latestRef.current.toolWindowsState;\n        if (lastFocusedKey != null) {\n          if (\n            !latestRef.current.toolWindowsState.windows[lastFocusedKey]\n              .isVisible\n          ) {\n            latestRef.current.onToolWindowStateChange(\n              toolWindowsState.show(lastFocusedKey)\n            );\n          }\n          windowFocusableRefs.current[lastFocusedKey].current?.focus(true);\n        }\n      },\n      focusMainContent: () => {\n        mainContentFocusScopeRef.current?.focus();\n      },\n      changeState: (updater) => {\n        onToolWindowStateChange(updater(latestRef.current.toolWindowsState));\n      },\n    }),\n    []\n  );\n\n  const interactionOutsideRef = useRef(false);\n  useInteractOutside({\n    ref: containerRef,\n    onInteractOutsideStart: () => {\n      interactionOutsideRef.current = true;\n    },\n    onInteractOutside: () => {\n      interactionOutsideRef.current = false;\n    },\n  });\n\n  useOnFocusLost(({ focusReceivingElement }) => {\n    if (!focusReceivingElement && !interactionOutsideRef.current) {\n      mainContentFocusScopeRef.current?.focus();\n    }\n  }, containerRef);\n\n  // TODO: extract component candidate\n  const renderStripe = ({\n    anchor,\n    state,\n  }: {\n    anchor: Anchor;\n    state: StripesState;\n  }) => (\n    <ToolWindowStripe\n      anchor={anchor}\n      items={state.main}\n      splitItems={state.split}\n      getKey={(item) => item}\n      renderItem={(item) => windowsById[item]?.toolbarButton}\n      onItemPress={(key) =>\n        onToolWindowStateChange(toolWindowsState.toggle(key))\n      }\n      selectedKeys={state.activeKeys}\n    />\n  );\n\n  const renderToolWindow = (key: Key) => {\n    if (!windowFocusableRefs.current[key]) {\n      windowFocusableRefs.current[key] = React.createRef();\n    }\n    return (\n      <div\n        style={{ all: \"unset\" }}\n        data-tool-window-id={key}\n        onFocus={() => {\n          onToolWindowStateChange(toolWindowsState.lastFocused(key));\n        }}\n      >\n        <FocusScope ref={windowFocusableRefs.current[key]}>\n          <ToolWindowStateProvider\n            id={key}\n            containerRef={containerRef}\n            mainContentFocusableRef={mainContentFocusScopeRef}\n            toolWindowsState={toolWindowsState}\n            onToolWindowStateChange={onToolWindowStateChange}\n          >\n            {windowsById[key]?.content}\n          </ToolWindowStateProvider>\n        </FocusScope>\n      </div>\n    );\n  };\n  // TODO: candidate for component extraction\n  const renderSideDockedView = ({\n    anchor,\n    state,\n  }: {\n    anchor: Anchor;\n    state: SideDockedState;\n  }) => {\n    if (!state) {\n      return null;\n    }\n    return (\n      <ThreeViewSplitter\n        innerView={renderToolWindow(state.mainKey)}\n        innerViewMinSize={50}\n        lastView={state.split && renderToolWindow(state.split.key)}\n        lastSize={state.split?.sizeFraction}\n        onLastResize={(newSize) => {\n          onToolWindowStateChange(\n            toolWindowsState.resizeDockSplitView(anchor, newSize)\n          );\n        }}\n        orientation={isHorizontalToolWindow(anchor) ? \"horizontal\" : \"vertical\"}\n      />\n    );\n  };\n  const onDockResize = (anchor: Anchor) => (size: number) => {\n    const containerBounds = containerRef.current?.getBoundingClientRect();\n    // containerBounds should have value in normal course of events\n    if (containerBounds) {\n      onToolWindowStateChange(\n        toolWindowsState.resizeDock(anchor, size, containerBounds)\n      );\n    }\n  };\n  const getSplitViewProps = (\n    layoutState: ToolWindowsLayoutState,\n    orientation: \"horizontal\" | \"vertical\"\n  ) => {\n    const firstAnchor = orientation === \"horizontal\" ? \"left\" : \"top\";\n    const secondAnchor = orientation === \"horizontal\" ? \"right\" : \"bottom\";\n    return {\n      orientation,\n      firstView: renderSideDockedView({\n        anchor: firstAnchor,\n        state: layoutState[firstAnchor].docked,\n      }),\n      firstSize: layoutState[firstAnchor].docked?.size,\n      onFirstResize: onDockResize(firstAnchor),\n      lastView: renderSideDockedView({\n        anchor: secondAnchor,\n        state: layoutState[secondAnchor].docked,\n      }),\n      lastSize: layoutState[secondAnchor].docked?.size,\n      onLastResize: onDockResize(secondAnchor),\n    };\n  };\n  const renderInnerLayout = (layoutState: ToolWindowsLayoutState) => {\n    const horizontalSplitterProps = getSplitViewProps(\n      layoutState,\n      \"horizontal\"\n    );\n    const verticalSplitterProps = getSplitViewProps(layoutState, \"vertical\");\n\n    const [outerSplitterProps, innerSplitterProps] = useWidescreenLayout\n      ? [horizontalSplitterProps, verticalSplitterProps]\n      : [verticalSplitterProps, horizontalSplitterProps];\n\n    const undockLayers = ([\"left\", \"top\", \"right\", \"bottom\"] as const).map(\n      (anchor) => {\n        const state = layoutState[anchor].undocked;\n        return (\n          state && (\n            <UndockSide\n              key={anchor}\n              anchor={anchor}\n              state={state}\n              onResize={(size) => {\n                containerRef.current &&\n                  onToolWindowStateChange(\n                    toolWindowsState.resizeUndock(\n                      anchor,\n                      size,\n                      containerRef.current.getBoundingClientRect()\n                    )\n                  );\n              }}\n            >\n              {renderToolWindow(state.key)}\n            </UndockSide>\n          )\n        );\n      }\n    );\n\n    return (\n      <>\n        <MovableToolWindowStripeProvider\n          onMove={({ to, from }) => {\n            onToolWindowStateChange(\n              toolWindowsState.move(\n                layoutState[from.anchor].stripes[\n                  from.isSplit ? \"split\" : \"main\"\n                ][from.index],\n                { anchor: to.anchor, isSplit: to.isSplit },\n                to.index\n              )\n            );\n          }}\n        >\n          {/**\n           * ToolWindow bars, aka Stripes. Order of stripes is irrelevant for layout but relevant for\n           * priority when stripe buttons are moved across stripes.\n           * layout is handled by `StyledToolWindowOuterLayout`.\n           */}\n          <StyledToolWindowOuterLayout.LeftStripe>\n            {renderStripe({\n              anchor: \"left\",\n              state: layoutState[\"left\"].stripes,\n            })}\n          </StyledToolWindowOuterLayout.LeftStripe>\n          <StyledToolWindowOuterLayout.TopStripe>\n            {renderStripe({\n              anchor: \"top\",\n              state: layoutState[\"top\"].stripes,\n            })}\n          </StyledToolWindowOuterLayout.TopStripe>\n          <StyledToolWindowOuterLayout.RightStripe>\n            {renderStripe({\n              anchor: \"right\",\n              state: layoutState[\"right\"].stripes,\n            })}\n          </StyledToolWindowOuterLayout.RightStripe>\n          <StyledToolWindowOuterLayout.BottomStripe>\n            {renderStripe({\n              anchor: \"bottom\",\n              state: layoutState[\"bottom\"].stripes,\n            })}\n          </StyledToolWindowOuterLayout.BottomStripe>\n        </MovableToolWindowStripeProvider>\n        {/**\n         * The inner layout of the ToolWindow, including four tool windows and\n         * a main content in the center.\n         */}\n        <StyledToolWindowOuterLayout.InnerView>\n          <ThreeViewSplitter\n            {...outerSplitterProps}\n            innerView={\n              <ThreeViewSplitter\n                innerViewMinSize={mainContentMinWidth}\n                innerView={\n                  <FocusScope ref={mainContentFocusScopeRef}>\n                    {children}\n                  </FocusScope>\n                }\n                {...innerSplitterProps}\n              />\n            }\n          />\n          {undockLayers}\n          {\n            <FloatToolWindows\n              floatWindows={layoutState?.floatWindows}\n              renderToolWindow={renderToolWindow}\n              onBoundsChange={(key, bounds) =>\n                onToolWindowStateChange(\n                  toolWindowsState.setFloatingBound(key, bounds)\n                )\n              }\n            />\n          }\n        </StyledToolWindowOuterLayout.InnerView>\n      </>\n    );\n  };\n\n  return (\n    <StyledToolWindowOuterLayout.Shell\n      {...containerProps}\n      ref={containerRef}\n      /**\n       * Potential refactoring: hideStripes can also be handled by conditionally\n       * rendering tool window bars, instead of considering it as a feature of\n       * StyledToolWindowOuterLayout\n       **/\n      hideStripes={hideToolWindowBars}\n      style={{ height, minHeight, ...containerProps?.style }}\n    >\n      {layoutState && renderInnerLayout(layoutState)}\n    </StyledToolWindowOuterLayout.Shell>\n  );\n});\n","import { RefObject, useEffect } from \"react\";\n\n/**\n * Executes a callback function when focus is lost from the container element. i.e. when the currently focused element\n * was within the container and:\n * - The focus is going to an element outside the container, or\n * - The focus is about to get lost (i.e. go to `document.body`).\n *\n * Note: react-aria's `useFocusWithin` (and it's `onBlurWithin` option) can't be used, since (at least currently) it\n * doesn't cover the scenario where the focus is about to get lost due to the focused element getting unmounted.\n */\nexport function useOnFocusLost(\n  onFocusLost: (args: {\n    focusLosingElement: HTMLElement | null;\n    focusReceivingElement: Element | null;\n  }) => void,\n  containerRef: RefObject<HTMLElement>\n): void {\n  useEffect(() => {\n    const handleBodyFocus = (e: FocusEvent) => {\n      if (\n        e.target instanceof HTMLElement &&\n        containerRef.current?.contains(e.target) &&\n        (!e.relatedTarget || e.relatedTarget instanceof HTMLElement) &&\n        !containerRef.current?.contains(e.relatedTarget)\n      ) {\n        onFocusLost({\n          focusLosingElement: e.target,\n          focusReceivingElement: e.relatedTarget,\n        });\n      }\n    };\n    containerRef.current?.addEventListener(\"focusout\", handleBodyFocus);\n    return () => {\n      containerRef.current?.removeEventListener(\"focusout\", handleBodyFocus);\n    };\n  }, []);\n}\n","import React, { Key, RefObject, useContext, useMemo } from \"react\";\nimport { ToolWindowsProps } from \"../ToolWindows\";\nimport { ToolWindowState, ViewMode, WindowBounds } from \"./ToolWindowsState\";\nimport { Anchor } from \"../utils\";\nimport { useEventCallback } from \"@intellij-platform/core/utils/useEventCallback\";\n\ntype ToolWindowStateContextValue = {\n  state: Readonly<ToolWindowState>;\n  hide: () => void;\n  remove: () => void;\n  blur: () => void;\n  focusMainContent: () => void;\n  moveToSide: (args: { anchor: Anchor; isSplit: boolean }) => void;\n  changeViewMode: (viewMode: ViewMode) => void;\n  stretchWidth: (value: number) => void;\n  stretchHeight: (value: number) => void;\n  setFloatingBounds: (bounds: WindowBounds) => void;\n};\nconst ToolWindowStateContext =\n  React.createContext<ToolWindowStateContextValue | null>(null);\n\n/**\n * Used in a tool window's UI tree, to get access to the tool window state and actions for changing it.\n */\nexport const useToolWindowState = () => {\n  const context = useContext(ToolWindowStateContext);\n  if (!context) {\n    throw new Error(\n      \"useToolWindowContext is meant to be used inside a tool window.\"\n    );\n  }\n  return context;\n};\n\n/**\n * Used in ToolWindows to provide tool window state and necessary actions as a context, which will be accessible\n * within the tool window content tree, via {@link useToolWindowState}\n */\nexport const ToolWindowStateProvider: React.FC<\n  {\n    children?: React.ReactNode;\n    id: Key;\n    containerRef: RefObject<HTMLElement>;\n    mainContentFocusableRef: RefObject<{ focus: () => void }>;\n  } & Pick<ToolWindowsProps, \"toolWindowsState\" | \"onToolWindowStateChange\">\n> = ({\n  toolWindowsState,\n  containerRef,\n  mainContentFocusableRef,\n  onToolWindowStateChange,\n  id,\n  children,\n}) => {\n  const blur = useEventCallback(() => {\n    onToolWindowStateChange(toolWindowsState.blur(id));\n  });\n  const hide = useEventCallback(() => {\n    onToolWindowStateChange(toolWindowsState.hide(id));\n  });\n  const remove = useEventCallback(() => {\n    onToolWindowStateChange(toolWindowsState.removeFromSidebar(id));\n  });\n  const focusMainContent = useEventCallback(() => {\n    mainContentFocusableRef.current?.focus();\n  });\n  const moveToSide = useEventCallback(\n    (side: { anchor: Anchor; isSplit: boolean }) => {\n      onToolWindowStateChange(toolWindowsState.move(id, side));\n    }\n  );\n  const changeViewMode = useEventCallback((viewMode: ViewMode) => {\n    onToolWindowStateChange(toolWindowsState.changeViewMode(id, viewMode));\n  });\n  const stretchWidth = useEventCallback((value: number) => {\n    const container = containerRef.current;\n    if (!container) {\n      throw new Error(\"Couldn't resize since the container is not present\");\n    }\n    onToolWindowStateChange(\n      toolWindowsState.stretchWidth(\n        id,\n        value,\n        container.getBoundingClientRect()\n      )\n    );\n  });\n  const stretchHeight = useEventCallback((value: number) => {\n    const container = containerRef.current;\n    if (!container) {\n      throw new Error(\"Couldn't resize since the container is not present\");\n    }\n    onToolWindowStateChange(\n      toolWindowsState.stretchHeight(\n        id,\n        value,\n        container.getBoundingClientRect()\n      )\n    );\n  });\n  const setFloatingBounds = useEventCallback((bounds: WindowBounds) => {\n    onToolWindowStateChange(toolWindowsState.setFloatingBound(id, bounds));\n  });\n  const contextValue = useMemo((): ToolWindowStateContextValue => {\n    const state = toolWindowsState.windows[id];\n    return {\n      state,\n      hide,\n      blur,\n      remove,\n      focusMainContent,\n      moveToSide,\n      changeViewMode,\n      stretchWidth,\n      stretchHeight,\n      setFloatingBounds,\n    };\n  }, [toolWindowsState, id]);\n  return (\n    <ToolWindowStateContext.Provider value={contextValue}>\n      {children}\n    </ToolWindowStateContext.Provider>\n  );\n};\n","import { clamp, curry, fromPairs, insert, mapObjIndexed, move } from \"ramda\";\nimport { Key } from \"react\";\nimport { Anchor, isHorizontalToolWindow } from \"../utils\";\n\nexport type ViewMode =\n  | \"docked_pinned\"\n  | \"docked_unpinned\"\n  | \"undock\"\n  | \"float\"\n  /**\n   * @deprecated \"window\" ViewMode was initially added following the original impl. It doesn't seem reasonable to\n   * support it though. It's marked as deprecated to be removed in the future.\n   */\n  | \"window\";\n\nexport type WindowBounds = {\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n};\n\n/**\n * Data structure for keeping the state of a single tool window. very similar to WindowInfo in Intellij Platform\n *\n * A note about about the data structure:\n * Some fields like `isSplit`, `weight`, `floatingBound` are meaningful only\n * for a subset of viewModes. So it may be tempting to introduce a `viewMode`\n * type which minimally and more accurately describes the information\n * relevant for each viewMode. But it's not structured like that, and it's\n * orthogonal to viewMode, since we want to preserve the relevant information\n * for each viewMode, to be used when the viewMode is changed back.\n *\n * NOTE: consider renaming to `WindowState` to avoid confusion with `ToolWindowsState`\n */\nexport interface ToolWindowState {\n  /**\n   * The order of the tool window in its group. The group is specified by `anchor` and `isSplit`.\n   */\n  order: number;\n  /**\n   * Whether the tool window is visible (open) or not.\n   * NOTE: A maximum of 1 **docked** tool window within the same group (same `anchor` and `isSplit`) can be visible.\n   * You will get a render error in `ToolWindows` component otherwise.\n   */\n  isVisible: boolean;\n  /**\n   * Relative size (in the scale of 0-1) of the tool window in its anchor, when rendered in the primary group, i.e. when\n   * `isSplit` is false\n   */\n  weight: number;\n  /**\n   * Relative size (in the scale of 0-1) of the tool window in its anchor, when rendered in the secondary group. i.e.\n   * when `isSplit` is true.\n   */\n  sideWeight: number;\n  /**\n   * The side of the tool window, being \"left\", \"right\", \"top\" or \"bottom\"\n   */\n  anchor: Anchor;\n  /**\n   * Specifies whether the tool window should be shown in the split view, aka \"Secondary group\".\n   */\n  isSplit: boolean;\n  /**\n   * Tool windows view mode. See {@link ViewMode}\n   *\n   * NOTE: in Intellij Platform, there is a window `type` and also `docked` and\n   * `autoHide`.\n   * keeping one viewMode makes more sense and prevents invalid combinations\n   * like { type: \"window, \"docked\": true}, that would be unnecessarily allowed.\n   */\n  viewMode: ViewMode;\n  /**\n   * Boundaries of the tool window, when rendered in \"float\" view mode.\n   */\n  floatingBounds?: WindowBounds;\n}\n\nconst isDocked = (toolWindow: ToolWindowState) =>\n  toolWindow.viewMode === \"docked_unpinned\" ||\n  toolWindow.viewMode === \"docked_pinned\";\n\n/**\n * Determines whether the tool window should hide on focus. In the java implementation, it's a field on window\n * info instead of being a calculated field. We changed that to match viewMode with the 5 view modes that are possible\n * to choose from the UI, eliminating the combinations that are never allowed. If from UX perspective, having window\n * or float mode with autoHide feature is considered valid at some point, we may need to change the implementation\n * to something similar to the original implementation where isAutoHide and viewMode are separate.\n */\nconst isAutoHide = (toolWindow: ToolWindowState) =>\n  toolWindow.viewMode === \"docked_unpinned\" || toolWindow.viewMode === \"undock\";\n\nexport type SideInfo = Pick<ToolWindowState, \"anchor\" | \"isSplit\">;\nexport const areInSameSection = curry(\n  (window1: SideInfo, window2: SideInfo) =>\n    window1.anchor === window2.anchor && window1.isSplit === window2.isSplit\n);\n\nexport const getViewModeType = (viewMode: ViewMode) => {\n  if (viewMode === \"docked_pinned\" || viewMode === \"docked_unpinned\") {\n    return \"docked\";\n  }\n  if (viewMode === \"window\" || viewMode === \"float\") {\n    return \"float\";\n  }\n  return viewMode;\n};\ntype IdToWindowStateMap = Readonly<{\n  [key: string]: Readonly<ToolWindowState>;\n}>;\n\n/**\n * Represents UI state of a bunch of tool windows. What is rendered inside each window or toolbar button is irrelevant.\n *\n * TODO: document pros and cons of these two approaches\n * - Having a class for ToolWindowsState which keeps a readonly mapping of keys to window states.\n * - Having ToolWindowsState as an interface (a mapping from keys to window states), and a bunch of action functions\n *   which accept a window state and some arguments, and return a new window state.\n */\nexport class ToolWindowsState {\n  public readonly lastFocusedKey: Key | null;\n  public readonly removedFromSideBarIds: ReadonlySet<Key>;\n  private readonly layoutToRestore: IdToWindowStateMap;\n  constructor(\n    public readonly windows: IdToWindowStateMap,\n    {\n      lastFocusedKey = null,\n      layoutToRestore = {},\n      removedFromSideBarIds = [],\n    }: {\n      lastFocusedKey?: Key | null;\n      layoutToRestore?: IdToWindowStateMap;\n      removedFromSideBarIds?: Iterable<Key>;\n    } = {}\n  ) {\n    this.lastFocusedKey = lastFocusedKey;\n    this.layoutToRestore = layoutToRestore;\n    this.removedFromSideBarIds = new Set(removedFromSideBarIds);\n    // TODO: instead of keeping a set of removedFromSideBarIds showStripeButton can be a boolean on each window state.\n    //  if we want to avoid the invalid combination of `{ isVisible: true, showStripeButton: false }`, we can have a\n    //  a single property like : visibility: 'open' | 'closed' | 'removed'\n    const invalidWindows = Object.keys(this.windows).filter(\n      (key) =>\n        this.removedFromSideBarIds.has(key) && this.windows[key].isVisible\n    );\n    if (invalidWindows.length > 0) {\n      throw new Error(\n        `Invalid ToolWindowsState. The following windows are set as visible but are removed from the sidebar: ${invalidWindows}`\n      );\n    }\n  }\n\n  hide(targetKey: Key): ToolWindowsState {\n    return this.mapWindows((toolWindow, key) =>\n      key === targetKey\n        ? {\n            ...toolWindow,\n            isVisible: false,\n          }\n        : toolWindow\n    );\n  }\n  hideAll(): ToolWindowsState {\n    return this.mapWindows(\n      (toolWindow, key) =>\n        getViewModeType(toolWindow.viewMode) === \"float\"\n          ? toolWindow\n          : {\n              ...toolWindow,\n              isVisible: false,\n            },\n      { layoutToRestore: this.windows }\n    );\n  }\n\n  /**\n   * Restores windows to the state before hideAll.\n   */\n  restoreWindows(): ToolWindowsState {\n    return this.mapWindows(\n      (toolWindow, key) => this.layoutToRestore[key] || toolWindow\n    );\n  }\n\n  lastFocused(key: Key): ToolWindowsState {\n    return this.mapWindows((toolWindow) => toolWindow, {\n      lastFocusedKey: key,\n    });\n  }\n\n  show(targetKey: Key): ToolWindowsState {\n    const target = this.windows[targetKey];\n    if (!target) {\n      return this;\n    }\n    const closableViewModes: ViewMode[] = [];\n    if (target.viewMode === \"undock\") {\n      closableViewModes.push(\"undock\");\n    } else if (isDocked(target)) {\n      closableViewModes.push(\"docked_unpinned\", \"docked_pinned\", \"undock\");\n    }\n    return this.mapWindows(\n      (toolWindow, key) => {\n        if (key === targetKey) {\n          return {\n            ...toolWindow,\n            isVisible: true,\n          };\n        }\n        if (\n          toolWindow.isVisible &&\n          areInSameSection(target, toolWindow) &&\n          closableViewModes.includes(toolWindow.viewMode)\n        ) {\n          return { ...toolWindow, isVisible: false };\n        }\n        return toolWindow;\n      },\n      {\n        removedFromSideBarIds: [...this.removedFromSideBarIds].filter(\n          (key) => key !== targetKey\n        ),\n      }\n    );\n  }\n\n  toggle(targetKey: Key): ToolWindowsState {\n    return this.windows[targetKey]?.isVisible\n      ? this.hide(targetKey)\n      : this.show(targetKey);\n  }\n\n  blur(targetKey: Key): ToolWindowsState {\n    const target = this.windows[targetKey];\n    if (!target || !isAutoHide(target)) {\n      return this;\n    }\n    return this.mapWindows((toolWindow) => {\n      if (toolWindow === target) {\n        return {\n          ...toolWindow,\n          isVisible: false,\n        };\n      }\n      return toolWindow;\n    });\n  }\n\n  // TODO: initiate floatingBound when changing viewMode to float or window and there is no previous floatingBound\n  changeViewMode(targetKey: Key, viewMode: ViewMode): ToolWindowsState {\n    const target = this.windows[targetKey];\n    if (!target) {\n      return this;\n    }\n    return this.mapWindows((toolWindow) => {\n      if (toolWindow === target) {\n        return {\n          ...toolWindow,\n          viewMode,\n        };\n      }\n      const viewModeType = getViewModeType(toolWindow.viewMode);\n      if (\n        toolWindow.isVisible &&\n        viewModeType !== \"float\" &&\n        areInSameSection(toolWindow, target) &&\n        viewModeType === getViewModeType(viewMode)\n      ) {\n        return {\n          ...toolWindow,\n          isVisible: false,\n        };\n      }\n      return toolWindow;\n    });\n  }\n\n  move(targetKey: Key, index: number): ToolWindowsState;\n  move(targetKey: Key, side: SideInfo, index?: number): ToolWindowsState;\n  move(\n    targetKey: Key,\n    sideOrIndex: SideInfo | number,\n    index?: number\n  ): ToolWindowsState {\n    const target = this.windows[targetKey];\n    if (!target) {\n      return this;\n    }\n    const targetSide = typeof sideOrIndex === \"object\" ? sideOrIndex : target;\n    const targetIndex = typeof sideOrIndex === \"number\" ? sideOrIndex : index;\n    const targetSideWindows = Object.entries(this.windows).filter(([, value]) =>\n      areInSameSection(targetSide, value)\n    );\n    const indexInTargetSide = targetSideWindows.findIndex(\n      ([, window]) => window === target\n    );\n    const sortedTargetWindows: Array<[Key, ToolWindowState]> =\n      indexInTargetSide < 0\n        ? insert(\n            targetIndex ?? -1,\n            [targetKey, { ...target, ...targetSide }],\n            targetSideWindows\n          )\n        : move(\n            indexInTargetSide,\n            targetIndex ?? indexInTargetSide,\n            targetSideWindows\n          );\n    const newTargetSideWindows = fromPairs(\n      sortedTargetWindows.map(([key, value], index) => {\n        let newValue = value;\n        if (value.order !== index) {\n          newValue = { ...value, order: index };\n        }\n        const targetViewMode = getViewModeType(target.viewMode);\n        if (\n          key !== targetKey &&\n          target.isVisible &&\n          value.isVisible &&\n          targetViewMode !== \"float\" &&\n          getViewModeType(value.viewMode) === targetViewMode\n        ) {\n          newValue = { ...value, isVisible: false };\n        }\n        return [`${key}`, newValue];\n      })\n    );\n    return this.mapWindows((value, key) => newTargetSideWindows[key] || value);\n  }\n\n  stretchWidth(\n    targetKey: Key,\n    value: number,\n    containerBounds: { width: number; height: number }\n  ): ToolWindowsState {\n    return this.stretch(targetKey, value, containerBounds, \"width\");\n  }\n\n  stretchHeight(\n    targetKey: Key,\n    value: number,\n    containerBounds: { width: number; height: number }\n  ): ToolWindowsState {\n    return this.stretch(targetKey, value, containerBounds, \"height\");\n  }\n\n  setFloatingBound(\n    targetKey: Key,\n    floatingBounds: WindowBounds\n  ): ToolWindowsState {\n    return this.update(targetKey, \"floatingBounds\", floatingBounds);\n  }\n\n  removeFromSidebar(targetKey: Key): ToolWindowsState {\n    return this.mapWindows(\n      (state, key) =>\n        key === targetKey\n          ? {\n              ...state,\n              isVisible: false,\n            }\n          : state,\n      {\n        removedFromSideBarIds: [...this.removedFromSideBarIds, targetKey],\n      }\n    );\n  }\n\n  mapWindows(\n    mapFn: (toolWindow: ToolWindowState, key: string) => ToolWindowState,\n    options: ConstructorParameters<typeof ToolWindowsState>[1] = {}\n  ) {\n    return new ToolWindowsState(mapObjIndexed(mapFn, this.windows), {\n      lastFocusedKey: this.lastFocusedKey,\n      layoutToRestore: this.layoutToRestore,\n      removedFromSideBarIds: this.removedFromSideBarIds,\n      ...options,\n    });\n  }\n\n  private update<K extends keyof ToolWindowState>(\n    targetKey: Key,\n    key: K,\n    value: ToolWindowState[K]\n  ) {\n    const target = this.windows[targetKey];\n    if (!target) {\n      return this;\n    }\n    return this.mapWindows((window) => {\n      if (window === target) {\n        return {\n          ...window,\n          [key]: value,\n        };\n      }\n      return window;\n    });\n  }\n\n  private stretch(\n    targetKey: Key,\n    value: number,\n    containerBounds: { width: number; height: number },\n    property: \"width\" | \"height\"\n  ): ToolWindowsState {\n    const target = this.windows[targetKey];\n    if (!target) {\n      return this;\n    }\n    const viewModeType = getViewModeType(target.viewMode);\n    if (viewModeType === \"float\") {\n      return this.mapWindows((window) => {\n        if (window === target) {\n          const currentFloatingBound = window.floatingBounds!;\n          return {\n            ...window,\n            floatingBounds: {\n              ...currentFloatingBound,\n              [property]: currentFloatingBound[property] + value,\n            },\n          };\n        }\n        return window;\n      });\n    }\n    const expectedProperty = isHorizontalToolWindow(target.anchor)\n      ? \"height\"\n      : \"width\";\n    if (expectedProperty !== property) {\n      return this;\n    }\n    const containerSize = containerBounds[property];\n    const newValue = containerSize * target.weight + value;\n    const isNewValueValid = clamp(0, containerSize, newValue) === newValue;\n    if (isNewValueValid) {\n      if (viewModeType === \"docked\") {\n        return this.resizeDock(target.anchor, newValue, containerBounds);\n      } else {\n        return this.resizeUndock(target.anchor, newValue, containerBounds);\n      }\n    }\n    return this;\n  }\n\n  resizeDock(\n    anchor: Anchor,\n    size: number,\n    containerBounds: { width: number; height: number }\n  ): ToolWindowsState {\n    return this.resizeSide(true, anchor, size, containerBounds);\n  }\n\n  resizeUndock(\n    anchor: Anchor,\n    size: number,\n    containerBounds: { width: number; height: number }\n  ): ToolWindowsState {\n    return this.resizeSide(false, anchor, size, containerBounds);\n  }\n\n  resizeDockSplitView(anchor: Anchor, weight: number): ToolWindowsState {\n    return this.mapWindows((window) => {\n      if (window.anchor === anchor && window.isVisible && isDocked(window)) {\n        return {\n          ...window,\n          sideWeight: window.isSplit ? weight : 1 - weight,\n        };\n      }\n      return window;\n    });\n  }\n\n  private resizeSide(\n    dock: boolean,\n    anchor: Anchor,\n    size: number,\n    containerBounds: { width: number; height: number }\n  ): ToolWindowsState {\n    return this.mapWindows((window) => {\n      const isInResizingView = dock\n        ? isDocked(window)\n        : window.viewMode === \"undock\";\n      if (window.anchor === anchor && isInResizingView && window.isVisible) {\n        const containerSize = !isHorizontalToolWindow(anchor)\n          ? containerBounds.width\n          : containerBounds.height;\n        return {\n          ...window,\n          weight: size / containerSize,\n        };\n      }\n      return window;\n    });\n  }\n}\n\nexport const toolWindowState = ({\n  viewMode = \"docked_pinned\",\n  ...inputs\n}: Partial<ToolWindowState> = {}): ToolWindowState => ({\n  anchor: \"left\",\n  isSplit: false,\n  viewMode: viewMode,\n  order: 1,\n  weight: 0.2,\n  sideWeight: 0.5,\n  isVisible: false,\n  floatingBounds:\n    getViewModeType(viewMode) === \"float\"\n      ? {\n          left: 300,\n          top: 300,\n          width: 600,\n          height: 300,\n        }\n      : undefined,\n  ...inputs,\n});\n","export type Anchor = \"left\" | \"right\" | \"top\" | \"bottom\";\n\nexport const getAnchorOrientation = (\n  anchor: Anchor\n): \"horizontal\" | \"vertical\" =>\n  isHorizontalToolWindow(anchor) ? \"horizontal\" : \"vertical\";\n\nexport const isHorizontalToolWindow = (anchor: Anchor) =>\n  anchor === \"top\" || anchor === \"bottom\";\n\nexport const theOtherSide = (anchor: Anchor) =>\n  ({\n    left: \"right\" as const,\n    right: \"left\" as const,\n    top: \"bottom\" as const,\n    bottom: \"top\" as const,\n  }[anchor]);\n","import React from \"react\";\nimport { DividerItem } from \"@intellij-platform/core/Collections\";\nimport { useToolWindowState } from \"@intellij-platform/core/ToolWindows\";\nimport {\n  useAction,\n  useActionGroup,\n} from \"@intellij-platform/core/ActionSystem\";\nimport {\n  ActionItem,\n  ActionsMenu,\n} from \"@intellij-platform/core/ActionSystem/components\";\nimport {\n  MOVE_TO_ACTION_GROUP_ID,\n  TOOL_WINDOW_RESIZE_ACTION_GROUP_ID,\n  VIEW_MODE_ACTION_GROUP_ID,\n  ViewModeToActionId,\n} from \"./useToolWindowActions\";\nimport {\n  MAXIMIZE_TOOL_WINDOW_ACTION_ID,\n  REMOVE_TOOL_WINDOW_FROM_SIDEBAR_ACTION_ID,\n} from \"./ToolWindowActionIds\";\nimport { MenuTriggerProps } from \"@intellij-platform/core/Menu\";\n\n/**\n * Tool window gear icon menu, with a set of default actions and some extra ones.\n * TODO: add support for extra actions when action system is progressed a little.\n */\nexport function ToolWindowSettingsIconMenu({\n  menuProps,\n}: {\n  menuProps: Parameters<MenuTriggerProps[\"renderMenu\"]>[0][\"menuProps\"];\n}) {\n  const { state } = useToolWindowState();\n\n  const viewModeActionGroup = useActionGroup(VIEW_MODE_ACTION_GROUP_ID);\n  const moveToActionGroup = useActionGroup(MOVE_TO_ACTION_GROUP_ID);\n  const resizeActions = useActionGroup(TOOL_WINDOW_RESIZE_ACTION_GROUP_ID);\n  const maximizeAction = useAction(MAXIMIZE_TOOL_WINDOW_ACTION_ID);\n  const removeFromSideBarAction = useAction(\n    REMOVE_TOOL_WINDOW_FROM_SIDEBAR_ACTION_ID\n  );\n  if (\n    !viewModeActionGroup ||\n    !moveToActionGroup ||\n    !resizeActions ||\n    !maximizeAction ||\n    !removeFromSideBarAction\n  ) {\n    throw new Error(\n      \"[ToolWindowSettingsIconMenu]: can't find tool window actions.\"\n    );\n  }\n\n  const gearIconActions: Array<ActionItem> = [\n    viewModeActionGroup,\n    moveToActionGroup,\n    {\n      id: \"resize\",\n      title: \"Resize\",\n      menuPresentation: \"submenu\",\n      children: [...resizeActions.children, maximizeAction],\n    },\n    new DividerItem(),\n    removeFromSideBarAction,\n  ];\n  return (\n    <ActionsMenu\n      actions={gearIconActions}\n      selectedKeys={[ViewModeToActionId[state.viewMode]]}\n      {...menuProps}\n    />\n  );\n}\n","import React, { HTMLProps } from \"react\";\nimport { IconButton } from \"@intellij-platform/core/IconButton\";\nimport { Toolbar } from \"@intellij-platform/core/Toolbar/Toolbar\";\nimport { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport { MenuTrigger } from \"@intellij-platform/core/Menu/MenuTrigger\";\nimport { ActionTooltip, TooltipTrigger } from \"@intellij-platform/core/Tooltip\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { StyledHorizontalSeparator } from \"@intellij-platform/core/StyledSeparator\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme/Theme\";\nimport { ToolWindowSettingsIconMenu } from \"./ToolWindowSettingsIconMenu\";\nimport {\n  DOCK_TOOL_WINDOW_ACTION_ID,\n  HIDE_ACTIVE_WINDOW_ACTION_ID,\n} from \"./ToolWindowActionIds\";\nimport { ActionButton } from \"@intellij-platform/core/ActionSystem/components\";\n\nexport interface ToolWindowHeaderProps\n  extends Omit<HTMLProps<HTMLDivElement>, \"ref\" | \"as\"> {\n  contentHasFocus?: boolean;\n  additionalActions?: React.ReactNode;\n}\n\nconst StyledToolWindowHeader = styled.div<{ active: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: end; // to have the content overflow from right, as the toolwindow shrinks. That will keep the left-most buttons in the view\n  padding: 0 2px 0 4px;\n  overflow: hidden; // for the negative margin applied on StyledToolWindowHeaderActions\n  border-bottom: 1px solid\n    ${({ theme }) =>\n      theme.color(\n        \"ToolWindow.Header.borderColor\" as UnknownThemeProp<\"ToolWindow.Header.borderColor\">\n      ) ||\n      theme.color(\"DefaultTabs.borderColor\") ||\n      theme.commonColors.contrastBorder};\n  background: ${({ theme, active }) =>\n    active\n      ? theme.color(\"ToolWindow.Header.background\") ||\n        theme.color(\n          \"ToolWindow.header.active.background\" as UnknownThemeProp<\"ToolWindow.header.active.background\">\n        ) ||\n        \"#E2E6EC\"\n      : theme.color(\"ToolWindow.Header.inactiveBackground\") ||\n        theme.color(\"ToolWindow.Header.background\") ||\n        \"#ECECEC\"};\n`;\n\nconst StyledToolWindowHeaderActions = styled.div`\n  margin-right: -4px;\n`;\n\nconst StyledToolWindowHeaderContent = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n`;\n\nexport const DefaultToolWindowHeader: React.FC<ToolWindowHeaderProps> = ({\n  children,\n  additionalActions,\n  contentHasFocus = false,\n  ...otherProps\n}) => {\n  return (\n    <StyledToolWindowHeader active={contentHasFocus} {...otherProps}>\n      <StyledToolWindowHeaderContent>{children}</StyledToolWindowHeaderContent>\n      <StyledToolWindowHeaderActions>\n        <Toolbar>\n          {additionalActions && (\n            <>\n              {additionalActions}\n              <StyledHorizontalSeparator />\n            </>\n          )}\n          <ActionButton actionId={DOCK_TOOL_WINDOW_ACTION_ID} />\n          <MenuTrigger\n            renderMenu={({ menuProps }) => {\n              return <ToolWindowSettingsIconMenu menuProps={menuProps} />;\n            }}\n          >\n            {(props, ref) => (\n              <TooltipTrigger tooltip={<ActionTooltip actionName=\"Options\" />}>\n                <IconButton {...props} ref={ref}>\n                  <PlatformIcon icon=\"general/gearPlain\" />\n                </IconButton>\n              </TooltipTrigger>\n            )}\n          </MenuTrigger>\n          <ActionButton actionId={HIDE_ACTIVE_WINDOW_ACTION_ID} />\n        </Toolbar>\n      </StyledToolWindowHeaderActions>\n    </StyledToolWindowHeader>\n  );\n};\n","import React, { useContext, useMemo, useRef } from \"react\";\nimport { filterDOMProps, mergeProps } from \"@react-aria/utils\";\nimport { DOMProps } from \"@react-types/shared\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport {\n  FocusScope,\n  FocusScopeRef,\n} from \"@intellij-platform/core/utils/FocusScope\";\nimport {\n  ActionDefinition,\n  ActionsProvider,\n} from \"@intellij-platform/core/ActionSystem\";\nimport { useToolWindow } from \"./useToolWindow\";\nimport { DefaultToolWindowHeader } from \"./DefaultToolWindowHeader\";\nimport { useToolWindowActions } from \"./useToolWindowActions\";\n\nexport interface DefaultToolWindowProps extends DOMProps {\n  children?: React.ReactNode;\n  /**\n   * title to be shown on the left side of the tool window header.\n   */\n  headerContent?: React.ReactNode;\n  /**\n   * additional action buttons to be rendered before the default gear and hide buttons.\n   */\n  additionalActions?: React.ReactNode;\n  /**\n   * Actions to be provided in the tool window, in addition to the default tool window actions.\n   */\n  actions?: ActionDefinition[];\n  /**\n   * The title of main part of the tool windows component. Used in tool window actions.\n   * @default \"Editor\"\n   */\n  mainContentTitle?: string;\n  onFocusChange?: (focused: boolean) => void;\n}\n\nconst StyledToolWindowContainer = styled.div`\n  outline: none;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n  flex: 1;\n`;\nconst StyledToolWindowContent = styled.div`\n  flex: 1;\n  overflow: auto;\n`;\n\ninterface DefaultToolWindowContextObj {\n  hasFocus?: boolean;\n}\n\nconst DefaultToolWindowContext =\n  React.createContext<DefaultToolWindowContextObj>({\n    hasFocus: false,\n  });\n\nexport const useDefaultToolWindowContext = () =>\n  useContext(DefaultToolWindowContext);\n/**\n * Default component for rendering the content of a tool window. It supports a header and a scrollable area.\n * The header supports showing a content, and some default+custom actions on the right.\n *\n * @see MultiContentToolWindow\n *\n * Remaining features:\n * - Additional gear menu actions.\n *\n */\nexport const DefaultToolWindow: React.FC<DefaultToolWindowProps> = ({\n  headerContent,\n  children,\n  additionalActions,\n  onFocusChange,\n  actions,\n  mainContentTitle = \"Editor\",\n  ...otherProps\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const contentRef = useRef<HTMLDivElement>(null);\n  const focusableContentRef = useRef<FocusScopeRef>(null);\n  const {\n    // NOTE: we might as well use :focus-within and target StyledToolWindowHeader to set the background, but it's not\n    // a clear improvement.\n    contentHasFocus,\n    toolWindowProps,\n    toolWindowContentProps,\n    toolWindowHeaderProps,\n  } = useToolWindow(\n    { containerRef, contentRef, focusableContentRef },\n    {\n      onFocusChange,\n    }\n  );\n\n  const defaultToolWindowContext = useMemo(\n    () => ({\n      hasFocus: contentHasFocus,\n    }),\n    [contentHasFocus]\n  );\n  const activeToolWindowActionGroup = useToolWindowActions({\n    mainContentTitle,\n  });\n  const allActions = [activeToolWindowActionGroup, ...(actions || [])];\n\n  return (\n    <ActionsProvider actions={allActions}>\n      {({ shortcutHandlerProps }) => (\n        <StyledToolWindowContainer\n          {...mergeProps(\n            toolWindowProps,\n            shortcutHandlerProps,\n            filterDOMProps(otherProps)\n          )}\n          ref={containerRef}\n        >\n          <DefaultToolWindowContext.Provider value={defaultToolWindowContext}>\n            <DefaultToolWindowHeader\n              additionalActions={additionalActions}\n              contentHasFocus={contentHasFocus}\n              {...toolWindowHeaderProps}\n            >\n              {headerContent}\n            </DefaultToolWindowHeader>\n            <StyledToolWindowContent\n              ref={contentRef}\n              {...toolWindowContentProps}\n            >\n              {/**\n               * FIXME: adding `contain` prevents focus from moving to another focus scope both with mouse and keyboard.\n               * If we want to follow the Intellij Platform behaviour exactly, we need a kind of focus containment, where\n               * focus is trapped only for keyboard interaction, and user can still move focus by clicking another scope.\n               * Maybe a custom useFocusContainment hook and a separate option for activating it on our own FocusScope.\n               */}\n              <FocusScope ref={focusableContentRef} autoFocus>\n                {children}\n              </FocusScope>\n            </StyledToolWindowContent>\n          </DefaultToolWindowContext.Provider>\n        </StyledToolWindowContainer>\n      )}\n    </ActionsProvider>\n  );\n};\n","import React, { RefObject, useEffect, useRef, useState } from \"react\";\nimport { useFocusWithin } from \"@react-aria/interactions\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useToolWindowState } from \"@intellij-platform/core/ToolWindows\";\nimport { useOverlayMoveHandle } from \"@intellij-platform/core/Overlay\";\nimport { useFocusForwarder } from \"@intellij-platform/core/utils/useFocusForwarder\";\n\nexport function useToolWindow(\n  {\n    containerRef,\n    contentRef,\n    focusableContentRef,\n  }: {\n    containerRef: RefObject<HTMLElement>;\n    contentRef: RefObject<Element>;\n    focusableContentRef: RefObject<{ focus: () => void }>;\n  },\n  { onFocusChange }: { onFocusChange?: (focused: boolean) => void } = {}\n) {\n  const [contentHasFocus, setContentHasFocus] = useState(false);\n  /**\n   * NOTE: useFocusWithin form @react-aria/interactions (at least until 3.5.1) has a couple of problem, because of which\n   * we may need to implement our own version of it.\n   * - It doesn't play nice with FocusScope with `contain` set to true. When something is blurred, FocusScope prevents\n   *   that by restoring focus back immediately. but the blur event is already caught by useFocusWithin. One solution\n   *   would be to change useFocusWithin implementation to ignore these blur events that are immediately followed\n   *   by a focus event that keeps the focus in.\n   * - useFocusWithin has an inconsistent behaviour when it comes to Portals. Since it uses react props for handling\n   *   focus and blur, the [react tree determines event bubbling](https://reactjs.org/docs/portals.html#event-bubbling-through-portals),\n   *   which can be a very nice feature, when an overlay (rendered in a portal) grabs the focus, which should still\n   *   be seen as \"within\". But the problems is that the current implementation uses DOM `.contains(e.relatedTarget)`\n   *   method to determine if focus is no longer within. First of all, using react tree or dom tree to determine \"within\"\n   *   can be seen as an option perhaps. Secondly, it should be consistent on focus and blur.\n   *\n   *   Right now these problems are no big deal. but it may become an issue when portals are used within the content\n   *   of the tool window.\n   *\n   * NOTE: In the original implementation, when a heading toolbar button opens a menu, and focus goes to menu, the\n   * header loses the focus appearance, ant it relies only on content having the focus.\n   */\n  const { focusWithinProps: contentFocusWithinProps } = useFocusWithin({\n    onFocusWithinChange: setContentHasFocus,\n  });\n\n  const { focusWithinProps } = useFocusWithin({\n    onFocusWithinChange: onFocusChange,\n  });\n\n  const { toolWindowProps: autoHideProps } = useAutoHide();\n\n  const { focusForwarderProps } = useFocusForwarder({\n    forwardFocus: focusableContentRef.current?.focus,\n    ignoreFocusedDescendant: true,\n  });\n\n  // If there is no focusable content rendered in the tool window, nothing will be autofocused. In that case\n  // we will focus the tool window container itself as a fallback.\n  useEffect(() => {\n    if (\n      !document.activeElement ||\n      !containerRef.current?.contains(document.activeElement)\n    ) {\n      containerRef.current?.focus();\n    }\n  }, []);\n\n  const { moveHandleProps } = useOverlayMoveHandle();\n\n  return {\n    contentHasFocus,\n    toolWindowProps: mergeProps(\n      focusForwarderProps,\n      focusWithinProps,\n      autoHideProps,\n      {\n        tabIndex: -1,\n      }\n    ),\n    toolWindowContentProps: contentFocusWithinProps,\n    toolWindowHeaderProps: moveHandleProps,\n  };\n}\n\n/**\n * Applies the auto hide behaviour of tool window based on view mode information and by handling focus and blur events,\n * on the root tool window element. Returns the necessary props that should be applied to the root tool window element.\n * The implementation is not perfect and may not 100% match the original Intellij Platform implementation.\n * If this focus based implementation for auto hide proves to be fragile and not good enough in future,\n * an alternative approach would be to move auto hide logic to the state management logic as much as possible,\n * and limit the focus based auto-hiding to only when the focus goes within the main content area. That should have\n * less focus-related edge cases.\n * TODO: auto hide behaviour should be moved to the core ToolWindows API. ToolWindows now renders a FocusScope and\n * handles focus events on any tool window, to track last focused tool window.\n */\nfunction useAutoHide() {\n  const { blur } = useToolWindowState();\n  const hideTimeoutId = useRef<number | null>(null);\n  const { focusWithinProps: windowFocusWithinProps } = useFocusWithin({\n    onBlurWithin: (e) => {\n      // setTimeout and windowHasFocusRef is to work around the problem with useFocusWithin, described above.\n      hideTimeoutId.current = window.setTimeout(() => {\n        // Sometimes when the element is blurred, the subsequent focus that is triggered by FocusScope to keep the focus\n        // is a little delayed and therefore after the timeout reaches. It seem to happen only when a non-focusable\n        // area is clicked. We mitigate it by ignoring blur events where nothing is focused. It's not a problem\n        // at least with `DefaultToolWindow` implementation that uses a FocusScope.\n        const isSomethingElseFocused = e.relatedTarget;\n        if (isSomethingElseFocused) {\n          blur();\n        }\n      });\n    },\n    onFocusWithin: () => {\n      if (hideTimeoutId.current !== null) {\n        clearTimeout(hideTimeoutId.current);\n        hideTimeoutId.current = null;\n      }\n    },\n  });\n  return {\n    toolWindowProps: windowFocusWithinProps,\n  };\n}\n","import React from \"react\";\nimport { Shortcut, useAction } from \"@intellij-platform/core/ActionSystem\";\nimport { ActionTooltip, TooltipTrigger } from \"@intellij-platform/core/Tooltip\";\nimport { getActivateToolWindowActionId } from \"./useToolWindowsActions\";\nimport styled from \"styled-components\";\n\nconst getToolWindowNumberFromShortcut = (shortcut: Shortcut): number | null => {\n  const num =\n    shortcut.type === \"keyboard\" &&\n    shortcut.firstKeyStroke.modifiers?.length === 1 &&\n    [\"Alt\", \"Meta\", \"Control\"].includes(shortcut.firstKeyStroke.modifiers[0]) &&\n    shortcut.firstKeyStroke.code.match(/^(Digit|Numpad)([0-9])$/)?.[2];\n  if (num) {\n    return parseInt(num);\n  }\n  return null;\n};\n\nconst StyledWrapper = styled.span`\n  display: flex;\n`;\n\n/**\n * Default UI for the toolbar button (aka. stripe button) of the tool window.\n * - Renders the title and icon for the tool window\n * - Optionally shows the number before the title, if a numeric shortcut is set for the corresponding ActivateToolWindow\n *   action, in the currently applied keymap.\n * - Adds an Action Tooltip\n */\nexport const DefaultToolWindowToolbarButton = ({\n  id,\n  title,\n  icon,\n  showNumber = true,\n}: {\n  id: React.Key;\n  title: string;\n  icon: React.ReactNode;\n  showNumber?: boolean;\n}) => {\n  const action = useAction(getActivateToolWindowActionId(`${id}`));\n\n  const number = action?.shortcuts\n    ?.map(getToolWindowNumberFromShortcut)\n    .find(Number.isInteger);\n  return (\n    <TooltipTrigger\n      tooltip={<ActionTooltip actionName={title} shortcut={action?.shortcut} />}\n    >\n      <StyledWrapper>\n        {icon}\n        &nbsp;\n        {number != null && showNumber ? (\n          <>\n            <u>{number}</u>:&nbsp;\n          </>\n        ) : null}\n        {title}\n      </StyledWrapper>\n    </TooltipTrigger>\n  );\n};\n","import React, { ForwardedRef } from \"react\";\nimport { indexBy } from \"ramda\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport {\n  ToolWindowRefValue,\n  ToolWindows,\n  ToolWindowsProps,\n} from \"@intellij-platform/core/ToolWindows\";\nimport { useToolWindowsActions } from \"./useToolWindowsActions\";\nimport { DefaultToolWindowToolbarButton } from \"./DefaultToolWindowToolbarButton\";\nimport { ActionsProvider } from \"@intellij-platform/core/ActionSystem\";\n\ninterface DefaultToolWindow {\n  id: string;\n  title: string;\n  icon: React.ReactNode;\n  content: React.ReactNode;\n}\n\n/**\n * A wrapper around ToolWindows, which provides default actions. It also expects windows to have a `title` and an `icon`\n * instead of more generic `toolbarButton`. The `title` and `icon` are then used in toolbar button, and also in the\n * actions that are dynamically created for each window to toggle/focus the tool window.\n */\nexport const DefaultToolWindows = React.forwardRef(function DefaultToolWindows(\n  {\n    windows: toolWindows,\n    toolWindowsState,\n    showNumbers,\n    ...props\n  }: Omit<ToolWindowsProps, \"windows\"> & {\n    windows: DefaultToolWindow[];\n    showNumbers?: boolean;\n  },\n  forwardedRef: ForwardedRef<ToolWindowRefValue>\n): React.ReactElement {\n  const toolWindowsRef = useObjectRef(forwardedRef);\n  const windowById = indexBy(({ id }) => id, toolWindows);\n  const actions = useToolWindowsActions({\n    toolWindowsRef,\n    toolWindowsState,\n    getPresentation: (id) => windowById[id],\n  });\n  return (\n    <ActionsProvider actions={actions}>\n      {({ shortcutHandlerProps }) => (\n        <ToolWindows\n          {...props}\n          ref={toolWindowsRef}\n          toolWindowsState={toolWindowsState}\n          windows={toolWindows.map(({ id, icon, content, title }) => ({\n            id,\n            toolbarButton: (\n              <DefaultToolWindowToolbarButton\n                id={id}\n                icon={icon}\n                title={title}\n                showNumber={showNumbers}\n              />\n            ),\n            content,\n          }))}\n          containerProps={mergeProps(\n            props.containerProps || {},\n            shortcutHandlerProps\n          )}\n        />\n      )}\n    </ActionsProvider>\n  );\n});\n","import React, { Key, useEffect, useState } from \"react\";\nimport { useControlledState } from \"@react-stately/utils\";\nimport { DefaultToolWindow, DefaultToolWindowProps } from \"./DefaultToolWindow\";\nimport { TabItem } from \"../Tabs/TabItem\";\nimport { usePrevious } from \"../utils/usePrevious\";\nimport { ToolWindowTabs } from \"../Tabs/ToolWindowTabs/ToolWindowTabs\";\n\nexport interface MultiContentToolWindowProps\n  extends Pick<DefaultToolWindowProps, \"additionalActions\"> {\n  /**\n   * List of contents that will be accessible with a list of grouped or ungrouped tabs in the tool window header.\n   */\n  children:\n    | React.ReactElement<MultiContentToolWindowContentProps>[]\n    | React.ReactElement<MultiContentToolWindowContentProps>;\n  /**\n   * Key of currently active content\n   */\n  activeKey?: Key;\n  defaultActiveKey?: Key;\n  onActiveKeyChange?: (key: Key) => void;\n  /**\n   * If true, it groups tabs in a dropdown instead.\n   *\n   * @default false\n   */\n  groupTabs?: boolean;\n  /**\n   * The content shown as the title of the tool window, before content switcher (tabs or dropdown).\n   * For more control over header content, you can pass a function which accepts rendered content switcher,\n   * and then you can compose it with other content as you wish. Use case examples of function variant:\n   * - You want to render a title before the content switcher, and something after the tabs. Like a \"+\" button in\n   *   terminal.\n   * - You want to conditionally move inner-content header up to the tool window header, if there is only one tab. In\n   *   that case you don't need to render the content switcher at all. An example is the new design in the \"Run\"\n   *   tool window.\n   */\n  headerContent?:\n    | React.ReactNode\n    | ((props: { renderedViewSwitcher: React.ReactNode }) => React.ReactNode);\n}\n\n/**\n * Implemented on top of DefaultToolWindow, allows for multiple tabbed content within a tool window.\n * Remaining features:\n * - Although trivial, group tabs action in tool window header gear icon is intentionally left unimplemented for now,\n *   until an increment on action system is done.\n * - Grouped mode is not implemented currently, as we don't have a dropdown component. Though it seems it's just a\n *   MenuTrigger and some trigger with a arrow icon.\n */\nexport const MultiViewToolWindow = ({\n  groupTabs,\n  children,\n  headerContent,\n  ...props\n}: MultiContentToolWindowProps) => {\n  const [isToolWindowFocused, setToolWindowFocused] = useState(false);\n  const [activeKey, setActiveKey] = useControlledState(\n    props.activeKey!,\n    props.defaultActiveKey!,\n    props.onActiveKeyChange!\n  );\n  const contents = React.Children.toArray(children)\n    .filter(\n      (\n        child\n      ): child is React.ReactElement<MultiContentToolWindowContentProps> => {\n        const validChild =\n          React.isValidElement(child) &&\n          child.type === MultiContentToolWindowContent;\n        if (!validChild) {\n          // FIXME: only warn in dev mode\n          console.warn(\n            \"You are not supposed to render anything but MultiContentToolWindowContent inside MultiViewToolWindow. Rendered: \",\n            child\n          );\n        }\n        return validChild;\n      }\n    )\n    // The following map is because of what React.Children.toArray does to keys: https://stackoverflow.com/q/33791401/1493081\n    // It doesn't look like a good idea since and there might be better ways to fix this, or at least make sure it would\n    // work in all cases. FIXME\n    .map((content) => ({ ...content, key: `${content.key}`.slice(2) as Key }));\n  const renderContentSwitcher = () => {\n    if (groupTabs) {\n      console.error(\n        \"groupTab is not supported yet in MultiViewToolWindow. Will fallback to ungrouped tabs\"\n      );\n    }\n    return (\n      <ToolWindowTabs\n        noBorders\n        items={contents}\n        active={isToolWindowFocused}\n        selectedKey={activeKey}\n        onSelectionChange={setActiveKey}\n      >\n        {(item) => <TabItem key={item.key}>{item.props.tabContent}</TabItem>}\n      </ToolWindowTabs>\n    );\n  };\n  const renderedViewSwitcher = renderContentSwitcher();\n\n  // We set the active key if it's not set or is invalid. A common scenario is when tabs are closable, and when the\n  // active tab is closed. You would always want to previous tab to get activated in such cases, instead of the first\n  // one. By having the logic here, there is no need to repeat the same logic in each use case. Although, it can also\n  // be moved into a state management utility for tabs, maybe in the future.\n\n  const keys = contents.map(({ key }) => key);\n  const previousKeys = usePrevious(keys);\n  useEffect(() => {\n    if (!keys.includes(activeKey)) {\n      const newActiveKey = keys[previousKeys.indexOf(activeKey) - 1] ?? keys[0];\n      if (newActiveKey != undefined) {\n        setActiveKey(newActiveKey);\n      }\n    }\n  });\n\n  const activeContent = contents.find(\n    (content) => activeKey == undefined || activeKey === content.key\n  );\n  return (\n    <DefaultToolWindow\n      onFocusChange={setToolWindowFocused}\n      headerContent={\n        typeof headerContent === \"function\" ? (\n          headerContent({ renderedViewSwitcher })\n        ) : (\n          <>\n            {headerContent}\n            {renderedViewSwitcher}\n          </>\n        )\n      }\n      additionalActions={props.additionalActions}\n    >\n      {activeContent?.props.children}\n    </DefaultToolWindow>\n  );\n};\n\nexport interface MultiContentToolWindowContentProps {\n  key: Key;\n  /**\n   * Used in the corresponding tab.\n   */\n  tabContent: React.ReactNode;\n\n  children: React.ReactNode;\n}\n\nconst MultiContentToolWindowContent =\n  ({}: MultiContentToolWindowContentProps) => {\n    throw new Error(\n      \"MultiContentToolWindowContent is not meant to be rendered directly. You should only use it in MultiViewToolWindow\"\n    );\n  };\n\nMultiViewToolWindow.View = MultiContentToolWindowContent;\n","export const HIDE_ALL_WINDOWS_ACTION_ID = \"HideAllWindows\";\nexport const JUMP_TO_LAST_WINDOW_ACTION_ID = \"JumpToLastWindow\";\nexport const HIDE_ACTIVE_WINDOW_ACTION_ID = \"HideActiveWindow\";\nexport const MAXIMIZE_TOOL_WINDOW_ACTION_ID = \"MaximizeToolWindow\";\nexport const DOCK_TOOL_WINDOW_ACTION_ID = \"DockToolWindow\";\nexport const RESIZE_TOOL_WINDOW_RIGHT_ACTION_ID = \"ResizeToolWindowRight\";\nexport const RESIZE_TOOL_WINDOW_LEFT_ACTION_ID = \"ResizeToolWindowLeft\";\nexport const RESIZE_TOOL_WINDOW_TOP_ACTION_ID = \"ResizeToolWindowTop\";\nexport const RESIZE_TOOL_WINDOW_BOTTOM_ACTION_ID = \"ResizeToolWindowBottom\";\nexport const DOCK_PINNED_MODE_ACTION_ID = \"DockPinnedMode\";\nexport const DOCK_UNPINNED_MODE_ACTION_ID = \"DockUnpinnedMode\";\nexport const UNDOCK_MODE_ACTION_ID = \"UndockMode\";\nexport const FLOAT_MODE_ACTION_ID = \"FloatMode\";\nexport const WINDOW_MODE_ACTION_ID = \"WindowMode\";\nexport const FOCUS_EDITOR_ACTION_ID = \"FocusEditor\";\nexport const REMOVE_TOOL_WINDOW_FROM_SIDEBAR_ACTION_ID =\n  \"RemoveToolWindowFromSidebar\"; // doesn't show up in keymap. Not sure what the id is in the original impl.\n","import React from \"react\";\nimport {\n  Anchor,\n  isHorizontalToolWindow,\n  useToolWindowState,\n  ViewMode,\n} from \"@intellij-platform/core/ToolWindows\";\nimport {\n  ActionDefinition,\n  ActionGroupDefinition,\n} from \"@intellij-platform/core/ActionSystem\";\nimport { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport {\n  DOCK_PINNED_MODE_ACTION_ID,\n  DOCK_TOOL_WINDOW_ACTION_ID,\n  DOCK_UNPINNED_MODE_ACTION_ID,\n  FLOAT_MODE_ACTION_ID,\n  FOCUS_EDITOR_ACTION_ID,\n  HIDE_ACTIVE_WINDOW_ACTION_ID,\n  MAXIMIZE_TOOL_WINDOW_ACTION_ID,\n  REMOVE_TOOL_WINDOW_FROM_SIDEBAR_ACTION_ID,\n  RESIZE_TOOL_WINDOW_BOTTOM_ACTION_ID,\n  RESIZE_TOOL_WINDOW_LEFT_ACTION_ID,\n  RESIZE_TOOL_WINDOW_RIGHT_ACTION_ID,\n  RESIZE_TOOL_WINDOW_TOP_ACTION_ID,\n  UNDOCK_MODE_ACTION_ID,\n  WINDOW_MODE_ACTION_ID,\n} from \"./ToolWindowActionIds\";\nimport { useCreateDefaultActionGroup } from \"@intellij-platform/core/ActionSystem/components\";\n\n// Resize steps in Intellij Platform is calculated based on the size of a \"W\" character and some\n// configuration (ide.windowSystem.hScrollChars). Although it's technically feasible, it seems not necessary\nconst HEIGHT_RESIZE_STEP = 16 * 5;\nconst WIDTH_RESIZE_STEP = 13 * 5;\n\nexport const anchors: Array<{\n  anchor: Anchor;\n  isSplit: boolean;\n  id: string;\n}> = [\n  { id: \"moveToLeftTop\", anchor: \"left\", isSplit: false },\n  { id: \"moveToLeftBottom\", anchor: \"left\", isSplit: true },\n  { id: \"moveToBottomLeft\", anchor: \"bottom\", isSplit: false },\n  { id: \"moveToBottomRight\", anchor: \"bottom\", isSplit: true },\n  { id: \"moveToRightTop\", anchor: \"right\", isSplit: true },\n  { id: \"moveToRightBottom\", anchor: \"right\", isSplit: false },\n  { id: \"moveToTopRight\", anchor: \"top\", isSplit: true },\n  { id: \"moveToTopLeft\", anchor: \"top\", isSplit: false },\n];\n\nconst getAnchorName = ({\n  anchor,\n  isSplit,\n}: {\n  anchor: Anchor;\n  isSplit: boolean;\n}) =>\n  `${anchor[0].toUpperCase()}${anchor.slice(1)} ${\n    isHorizontalToolWindow(anchor)\n      ? isSplit\n        ? \"Right\"\n        : \"Left\"\n      : isSplit\n      ? \"Bottom\"\n      : \"Top\"\n  }`;\n\nexport const ViewModeToActionId: Record<ViewMode, string> = {\n  docked_pinned: DOCK_PINNED_MODE_ACTION_ID,\n  docked_unpinned: DOCK_UNPINNED_MODE_ACTION_ID,\n  undock: UNDOCK_MODE_ACTION_ID,\n  float: FLOAT_MODE_ACTION_ID,\n  window: WINDOW_MODE_ACTION_ID,\n};\n\nexport const VIEW_MODE_ACTION_GROUP_ID = \"TW.ViewModeGroup\";\nexport const MOVE_TO_ACTION_GROUP_ID = \"TW.MoveToGroup\";\nexport const TOOL_WINDOW_RESIZE_ACTION_GROUP_ID = \"ResizeToolWindowGroup\";\n\nexport function useToolWindowActions({\n  mainContentTitle,\n}: {\n  mainContentTitle: string;\n}): ActionGroupDefinition {\n  const {\n    stretchWidth,\n    stretchHeight,\n    changeViewMode,\n    moveToSide,\n    focusMainContent,\n    hide,\n    remove,\n    state,\n  } = useToolWindowState();\n  const createDefaultActionGroup = useCreateDefaultActionGroup();\n\n  const actions: ActionDefinition[] = [];\n  if (!state) {\n    // FIXME: when window is removed, a last render happens with the new ToolWindowsState, which doesn't have state\n    //  for the removed tool window. Need to understand why that happens.\n    return createDefaultActionGroup({\n      id: \"ActiveToolwindowGroup\",\n      title: \"Active Tool Window\",\n      children: [],\n    });\n  }\n  const viewModeActionGroup = createDefaultActionGroup({\n    id: VIEW_MODE_ACTION_GROUP_ID,\n    title: \"View Mode\",\n    children: [\n      {\n        id: DOCK_PINNED_MODE_ACTION_ID,\n        title: \"Dock Pinned\",\n        actionPerformed: () => {\n          changeViewMode(\"docked_pinned\");\n        },\n      },\n      {\n        id: DOCK_UNPINNED_MODE_ACTION_ID,\n        title: \"Dock Unpinned\",\n        actionPerformed: () => {\n          changeViewMode(\"docked_unpinned\");\n        },\n      },\n      {\n        id: UNDOCK_MODE_ACTION_ID,\n        title: \"Undock\",\n        actionPerformed: () => {\n          changeViewMode(\"undock\");\n        },\n      },\n      {\n        id: FLOAT_MODE_ACTION_ID,\n        title: \"Float\",\n        actionPerformed: () => {\n          changeViewMode(\"float\");\n        },\n      },\n      {\n        id: WINDOW_MODE_ACTION_ID,\n        title: \"Window\",\n        actionPerformed: () => {\n          changeViewMode(\"window\");\n        },\n      },\n    ],\n  });\n  const moveToActionGroup = createDefaultActionGroup({\n    id: MOVE_TO_ACTION_GROUP_ID,\n    title: \"Move to\",\n    children: anchors.map(\n      (anchor): ActionDefinition => ({\n        id: `TW.MoveTo.${anchor.id}`,\n        title: getAnchorName(anchor),\n        icon: <PlatformIcon icon={`actions/${anchor.id}`} />,\n        isDisabled:\n          state.anchor === anchor.anchor && state.isSplit === anchor.isSplit,\n        actionPerformed: () => {\n          moveToSide(anchor);\n        },\n      })\n    ),\n  });\n  actions.push(\n    {\n      id: FOCUS_EDITOR_ACTION_ID,\n      title: `Focus ${mainContentTitle}`, // in intellij it says \"Focus Editor\" but it's not generic enough.\n      actionPerformed: () => {\n        focusMainContent();\n      },\n    },\n    {\n      id: HIDE_ACTIVE_WINDOW_ACTION_ID,\n      title: \"Hide\",\n      icon: <PlatformIcon icon=\"general/hideToolWindow\" />,\n      actionPerformed: () => {\n        hide();\n      },\n    },\n    {\n      id: MAXIMIZE_TOOL_WINDOW_ACTION_ID,\n      title: \"Maximize Tool Window\", // Should be \"Restore Tool Window Size if the window is currently maximized\n      actionPerformed: () => {\n        // TODO(release): either remove the action or implement it\n        alert(\"Not implemented\");\n      },\n    },\n    {\n      id: REMOVE_TOOL_WINDOW_FROM_SIDEBAR_ACTION_ID,\n      title: \"Remove from Sidebar\",\n      actionPerformed: () => {\n        remove();\n      },\n    },\n    viewModeActionGroup,\n    moveToActionGroup\n  );\n  if (state.viewMode === \"float\") {\n    actions.push({\n      id: DOCK_TOOL_WINDOW_ACTION_ID,\n      title: \"Dock\",\n      icon: (\n        <PlatformIcon\n          icon={`actions/${\n            anchors.find(\n              ({ anchor, isSplit }) =>\n                anchor === state.anchor && isSplit === state.isSplit\n            )?.id\n          }`}\n        />\n      ),\n      actionPerformed: () => {\n        changeViewMode(\"docked_pinned\");\n      },\n    });\n  }\n  if (state.viewMode !== \"float\" && state.viewMode !== \"window\") {\n    const resizeGroup = createDefaultActionGroup({\n      id: TOOL_WINDOW_RESIZE_ACTION_GROUP_ID,\n      title: \"Resize\",\n      children: [],\n    });\n    if (isHorizontalToolWindow(state.anchor)) {\n      resizeGroup.children.push({\n        id: RESIZE_TOOL_WINDOW_BOTTOM_ACTION_ID,\n        title: \"Stretch to bottom\",\n        actionPerformed: () => {\n          stretchHeight(\n            state.anchor === \"bottom\" ? -HEIGHT_RESIZE_STEP : HEIGHT_RESIZE_STEP\n          );\n        },\n      });\n      resizeGroup.children.push({\n        id: RESIZE_TOOL_WINDOW_TOP_ACTION_ID,\n        title: \"Stretch to top\",\n        actionPerformed: () => {\n          stretchHeight(\n            state.anchor === \"top\" ? -HEIGHT_RESIZE_STEP : HEIGHT_RESIZE_STEP\n          );\n        },\n      });\n    } else {\n      resizeGroup.children.push({\n        id: RESIZE_TOOL_WINDOW_LEFT_ACTION_ID,\n        title: \"Stretch to left\",\n        actionPerformed: () => {\n          stretchWidth(\n            state.anchor === \"left\" ? -WIDTH_RESIZE_STEP : WIDTH_RESIZE_STEP\n          );\n        },\n      });\n      resizeGroup.children.push({\n        id: RESIZE_TOOL_WINDOW_RIGHT_ACTION_ID,\n        title: \"Stretch to right\",\n        actionPerformed: () => {\n          stretchWidth(\n            state.anchor === \"right\" ? -WIDTH_RESIZE_STEP : WIDTH_RESIZE_STEP\n          );\n        },\n      });\n    }\n    actions.push(resizeGroup);\n  }\n  return createDefaultActionGroup({\n    id: \"ActiveToolwindowGroup\",\n    title: \"Active Tool Window\",\n    children: actions,\n  });\n}\n","import React from \"react\";\nimport { ActionDefinition } from \"@intellij-platform/core/ActionSystem\";\nimport {\n  getViewModeType,\n  ToolWindowRefValue,\n  ToolWindowsState,\n} from \"@intellij-platform/core/ToolWindows\";\nimport {\n  HIDE_ALL_WINDOWS_ACTION_ID,\n  JUMP_TO_LAST_WINDOW_ACTION_ID,\n} from \"./ToolWindowActionIds\";\n\ninterface DefaultToolWindowActionsProps {\n  toolWindowsState: Readonly<ToolWindowsState>;\n  toolWindowsRef: React.RefObject<ToolWindowRefValue>;\n  /**\n   * Used when creating ActivateToolWindow action for each tool window.\n   */\n  getPresentation?: (key: React.Key) =>\n    | {\n        title: string;\n        icon: React.ReactNode;\n      }\n    | undefined;\n}\n\nexport const getActivateToolWindowActionId = (id: string) =>\n  `Activate${id.replace(\" \", \"\")}Window`;\n\n/**\n * Provides default tool windows actions:\n * - Hide all tool windows\n * - Activate{id}Window action for each window\n * - Jump to last tool window\n *\n * @see also {@link DefaultToolWindows}\n */\nexport function useToolWindowsActions({\n  toolWindowsState,\n  toolWindowsRef,\n  getPresentation,\n}: DefaultToolWindowActionsProps) {\n  const isAnySideWindowWindowOpen = (state: Readonly<ToolWindowsState>) =>\n    Object.values(state.windows).some(\n      ({ isVisible, viewMode }) =>\n        isVisible && getViewModeType(viewMode) !== \"float\"\n    );\n  const windowIds = Object.keys(toolWindowsState.windows).map(\n    (key) => `${key}`\n  );\n  const activateToolWindowActions = windowIds.map(\n    (id: string, index): ActionDefinition => {\n      const { title, icon } = getPresentation?.(id) || {};\n      return {\n        id: getActivateToolWindowActionId(id),\n        title: title || `${getOrdinal(index)} window`,\n        icon,\n        description: `Activate ${title || getOrdinal(index)} window`,\n        actionPerformed: () => {\n          if (\n            toolWindowsState.windows[id]?.isVisible &&\n            !toolWindowsRef.current?.hasFocus(id)\n          ) {\n            toolWindowsRef.current?.focus(id);\n          } else {\n            toolWindowsRef.current?.changeState((state) => state.toggle(id));\n          }\n        },\n      };\n    }\n  );\n  const actions: ActionDefinition[] = [\n    ...activateToolWindowActions,\n    {\n      id: HIDE_ALL_WINDOWS_ACTION_ID,\n      title: isAnySideWindowWindowOpen(toolWindowsState)\n        ? \"Hide All Windows\"\n        : \"Restore windows\",\n      actionPerformed: () => {\n        toolWindowsRef.current?.changeState((state) => {\n          if (isAnySideWindowWindowOpen(state)) {\n            return state.hideAll();\n          } else {\n            return state.restoreWindows();\n          }\n        });\n        // Because windows have autofocus behaviour, a timeout is set. Not sure how reliable it is.\n        // TODO: replace effect-based auto focus behaviour with something better, maybe controlled by ToolWindows\n        //  component, and when a tool window is opened.\n        setTimeout(() => {\n          toolWindowsRef.current?.focusMainContent();\n        });\n      },\n    },\n    {\n      id: JUMP_TO_LAST_WINDOW_ACTION_ID,\n      title: \"Jump to Last Tool Window\",\n      isDisabled: toolWindowsState.lastFocusedKey == null,\n      actionPerformed: () => {\n        toolWindowsRef.current?.focusLastActiveWindow();\n      },\n    },\n  ];\n  return actions;\n}\n\nfunction getOrdinal(n: number) {\n  let ord = [\"st\", \"nd\", \"rd\"];\n  let exceptions = [11, 12, 13];\n  let nth =\n    ord[(n % 10) - 1] == undefined || exceptions.includes(n % 100)\n      ? \"th\"\n      : ord[(n % 10) - 1];\n  return n + nth;\n}\n","import React, {\n  CSSProperties,\n  MouseEvent,\n  useContext,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\n\nimport { styled, css } from \"../styled\";\nimport {\n  StyledHorizontalSeparator,\n  StyledSeparator,\n  StyledVerticalSeparator,\n} from \"../StyledSeparator\";\nimport { useOverflowObserver } from \"@intellij-platform/core/utils/overflow-utils/useOverflowObserver\";\nimport { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport { Overlay, useOverlayPosition } from \"@react-aria/overlays\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { StyledPopupContainer } from \"@intellij-platform/core/Popup/StyledPopupContainer\";\n\ntype ToolbarBorderProp =\n  | true\n  | \"horizontal\"\n  | \"vertical\"\n  | \"bottom\"\n  | \"top\"\n  | \"left\"\n  | \"right\";\n\nexport type ToolbarProps = {\n  children: React.ReactNode;\n  orientation?: \"vertical\" | \"horizontal\";\n  border?: ToolbarBorderProp;\n  style?: CSSProperties;\n  className?: string;\n} & (\n  | {\n      orientation: \"vertical\";\n    }\n  | {\n      orientation?: \"horizontal\";\n      /**\n       * Defines how the toolbar should handle its children when there is not enough room\n       * to fit all:\n       * - popup: the overflowed children will be hidden behind a show more arrow icon that\n       *   shows the rest of the items in a popup.\n       * - wrap: children will be wrapped so that they fit the available width/height\n       **/\n      overflowBehavior?: \"popup\" | \"wrap\";\n    }\n);\n\nconst borderStyle = ({ border }: { border?: ToolbarBorderProp }) =>\n  border &&\n  css`\n    border-style: solid;\n    border-color: ${({ theme }) => theme.commonColors.borderColor};\n    border-width: ${border === true ? \"1px\" : borderPropToCssProp[border]};\n  `;\n\nconst StyledToolbar = styled.div<{\n  border?: ToolbarBorderProp;\n}>`\n  display: inline-flex;\n  box-sizing: border-box;\n  overflow: hidden;\n  // NOTE: in the original implementation, there is no empty space between buttons, but buttons have kind of an\n  // invisible left padding, which is mouse-intractable, but doesn't visually seem a part of the button.\n  // Although implementable, it didn't seem necessary to follow the exact same thing. Margin should be fine.\n  gap: 4px;\n  ${borderStyle}\n  ${StyledSeparator}:first-child {\n    display: none;\n  }\n  ${StyledSeparator}:last-child {\n    display: none;\n  }\n`;\n\nconst borderPropToCssProp: Record<\n  Exclude<ToolbarBorderProp, boolean>,\n  CSSProperties[\"borderWidth\"]\n> = {\n  top: \"1px 0 0 0\",\n  bottom: \"0 0 1px 0\",\n  right: \"0 1px 0 0\",\n  left: \"0 0 0 1px\",\n  horizontal: \"0 1px\",\n  vertical: \"1px 0\",\n};\n\nconst SIDE_PADDING = 3;\nconst END_PADDING = 4;\n\nconst StyledShowMoreButton = styled.button`\n  all: unset;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  ${borderStyle};\n`;\n\nconst StyledHorizontalToolbar = styled(StyledToolbar)`\n  padding: ${SIDE_PADDING}px ${END_PADDING}px;\n  max-width: 100%;\n  /*noinspection CssInvalidPropertyValue*/\n  max-width: -webkit-fill-available;\n  ${StyledHorizontalSeparator} {\n    margin: 1px 0;\n  }\n  ${StyledShowMoreButton} {\n    margin-right: -${END_PADDING}px;\n  }\n`;\n\nconst StyledVerticalToolbar = styled(StyledToolbar)`\n  flex-direction: column;\n  max-height: 100%;\n  /*noinspection CssInvalidPropertyValue*/\n  max-height: -webkit-fill-available;\n  padding: ${END_PADDING}px ${SIDE_PADDING}px;\n  ${StyledVerticalSeparator} {\n    margin: 0 1px;\n  }\n  ${StyledShowMoreButton} {\n    margin-bottom: -${END_PADDING}px;\n  }\n`;\n\nconst StyledToolbarContent = styled.div<{\n  shouldWrap?: boolean;\n  firstOverflowedIndex: number;\n}>`\n  box-sizing: inherit;\n  display: inherit;\n  flex-direction: inherit;\n  flex-wrap: ${({ shouldWrap }) => (shouldWrap ? \"wrap\" : \"nowrap\")};\n  gap: inherit;\n  max-height: inherit;\n  max-width: inherit;\n  min-height: 0;\n  min-width: 0;\n\n  ${({ firstOverflowedIndex }) =>\n    /**\n     * The hidden styles should be in a way that the hidden element:\n     * - occupies its space in the document layout.\n     * - doesn't capture mouse events. (e.g. a half-overflowing hidden element shouldn't show tooltip)\n     * - remains accessible to screen readers.\n     */\n    css`\n      > ${firstOverflowedIndex === 0\n          ? \"*\"\n          : `:nth-child(${firstOverflowedIndex}) ~ *`} {\n        opacity: 0 !important;\n        pointer-events: none !important;\n      }\n    `}\n`;\n// This can be used in other places if use-cases are raised for keeping orientation in the context.\nconst OrientationContext = React.createContext<\"horizontal\" | \"vertical\">(\n  \"horizontal\"\n);\n\n/**\n * ## Toolbar API/Implementation notes\n *\n * ### Handling Overflow\n *\n * Handling the overflow popup on DOM-level, allows for a simple and flexible implementation that doesn't\n * require any coupling between Toolbar and components like IconButton. Other components can also similarly be\n * rendered inside toolbar without adopting any specific API. It's worth noting that any generic approach based\n * on children react nodes instead of children DOM nodes will have many edge cases and will involve assumptions\n * that will limit the API of toolbar. Also, any approach based on moving dom nodes to the overflow popup will\n * conflict with React owning the DOM.\n *\n * #### Assumption\n *\n * Since the overflow popup renders the same `children`, and items in the toolbar and popup overflow are made\n * visible/hidden based on the index of DOM nodes, it's important than children deterministically results in the\n * same dom structure. i.e. if a component in children randomly renders different number of root dom nodes in\n * each render, it can cause issues in hiding/showing elements.\n *\n * ### Orientation\n * A few reasons for not having separate `HorizontalToolbar` and `VerticalToolbar` components instead of `Toolbar` with\n * `orientation` prop:\n * - From usage side, a single `Toolbar` component is considered a more discoverable API.\n * - Separate components would require abstracting common parts which unnecessarily adds to complexity.\n *   The amount of branching to handle the differences is considered ok, at the current state of the component.\n */\n\n/**\n * @description\n * A toolbar is a container for {@link IconButton} and similar UI components.\n *\n * ## Features:\n * - A toolbar can be horizontal or vertical\n * - When there is not enough space for all children, toolbar shows an arrow icon, which shows the overflowing\n *   items in a popup, upon mouseover.\n *   Optionally, overflow can be wrapped into multiple lines, in horizontal toolbars.\n *\n * @example\n * <Toolbar>\n *   <IconButton aria-label=\"Show Diff\">\n *     <PlatformIcon icon=\"actions/diff\" />\n *   </IconButton>\n *   </Toolbar>\n */\nexport const Toolbar: React.FC<ToolbarProps> = ({\n  border,\n  orientation = \"horizontal\",\n  ...props\n}): React.ReactElement => {\n  const overflowBehavior =\n    orientation === \"horizontal\" && \"overflowBehavior\" in props\n      ? props.overflowBehavior\n      : null;\n  const rootProps = { style: props.style, className: props.className };\n  const ref = useRef<HTMLDivElement>(null);\n  const overlayRef = useRef<HTMLDivElement>(null);\n  const showMoreButtonRef = useRef<HTMLButtonElement>(null);\n  const StyledToolbar =\n    orientation === \"horizontal\"\n      ? StyledHorizontalToolbar\n      : StyledVerticalToolbar;\n  const { overflowedElements } = useOverflowObserver(ref, { threshold: 0.8 });\n  const [isOverflowPopupVisible, setOverflowPopupVisible] = useState(false);\n  const [popupHeight, setPopupHeight] = useState(30);\n  const [firstOverflowedChildIndex, setFirstOverflowedChildIndex] =\n    useState<number>(-1);\n  const firstOverflowedChildRef = useRef<HTMLElement | undefined>();\n\n  useLayoutEffect(() => {\n    if (ref.current) {\n      const childElements = [...ref.current.children].filter(\n        (node): node is HTMLElement => node instanceof HTMLElement\n      );\n      const firstOverflowedChild = childElements.findIndex((child) =>\n        overflowedElements.includes(child)\n      );\n      setFirstOverflowedChildIndex(firstOverflowedChild);\n      firstOverflowedChildRef.current = childElements[firstOverflowedChild];\n    }\n  }, [overflowedElements]);\n\n  useLayoutEffect(() => {\n    if (overlayRef.current && popupHeight !== overlayRef.current.offsetHeight) {\n      setPopupHeight(overlayRef.current.offsetHeight);\n    }\n  });\n\n  const { overlayProps } = useOverlayPosition({\n    isOpen: isOverflowPopupVisible,\n    placement: \"bottom left\",\n    offset:\n      // in lack of positioning options for aligning bottom and left of of the overflow popup with the bottom and left\n      // of the toolbar itself, we have to measure the popup height, and use offset to achieve the same\n      orientation === \"horizontal\"\n        ? -popupHeight + SIDE_PADDING + 1\n        : -popupHeight + 1,\n    crossOffset:\n      orientation === \"horizontal\" ? -(SIDE_PADDING + 2) : -(SIDE_PADDING + 1),\n    containerPadding: 0,\n    shouldFlip: false,\n    targetRef: orientation === \"horizontal\" ? ref : showMoreButtonRef,\n    overlayRef: overlayRef,\n    onClose: () => {\n      setOverflowPopupVisible(false);\n    },\n  });\n\n  const showOverflowPopup = () => {\n    setOverflowPopupVisible(true);\n  };\n\n  const toolbarProps = {\n    onMouseMove: (event: MouseEvent) => {\n      const firstOverflowedElement = firstOverflowedChildRef.current;\n      if (!firstOverflowedElement) {\n        return;\n      }\n      const shouldShow =\n        orientation === \"vertical\"\n          ? event.clientY > firstOverflowedElement.getBoundingClientRect().top\n          : event.clientX > firstOverflowedElement.getBoundingClientRect().left;\n      if (shouldShow !== isOverflowPopupVisible) {\n        setOverflowPopupVisible(shouldShow);\n      }\n    },\n    onMouseLeave: () => {\n      if (isOverflowPopupVisible) {\n        setOverflowPopupVisible(false);\n      }\n    },\n  };\n  const toolbarOverflowPopupProps = {\n    onMouseEnter: () => setOverflowPopupVisible(true),\n    onMouseLeave: (e: React.MouseEvent) => {\n      if (e.relatedTarget !== ref.current) {\n        setOverflowPopupVisible(false);\n      }\n    },\n  };\n  return (\n    <OrientationContext.Provider value={orientation}>\n      <StyledToolbar\n        border={border}\n        {...mergeProps(rootProps, toolbarProps)}\n        role=\"toolbar\"\n      >\n        <StyledToolbarContent\n          ref={ref}\n          role=\"presentation\"\n          firstOverflowedIndex={firstOverflowedChildIndex}\n          shouldWrap={overflowBehavior === \"wrap\"}\n        >\n          {props.children}\n        </StyledToolbarContent>\n        {overflowedElements.length > 0 && (\n          <StyledShowMoreButton\n            ref={showMoreButtonRef}\n            tabIndex={-1}\n            onMouseEnter={showOverflowPopup}\n          >\n            <PlatformIcon icon=\"ide/link\" />\n          </StyledShowMoreButton>\n        )}\n      </StyledToolbar>\n      {isOverflowPopupVisible && overflowedElements.length > 0 && (\n        // Maybe more accessible to reuse the entire Popup here? it would require more flexible API to handle mouseleave though\n        // Note: we could also render the whole toolbar with the same props and only orientation being overwritten,\n        // but it has the risk of infinite overlay opening in some edge cases, and that level of generality doesn't\n        // seem to be necessary, at least at the moment.\n        <OrientationContext.Provider value=\"horizontal\">\n          <Overlay>\n            <StyledPopupContainer\n              ref={overlayRef}\n              {...mergeProps(overlayProps, toolbarOverflowPopupProps)}\n            >\n              <ToolbarInOverlay\n                border\n                firstVisibleIndex={\n                  orientation === \"vertical\"\n                    ? firstOverflowedChildIndex\n                    : undefined\n                }\n              >\n                {props.children}\n              </ToolbarInOverlay>\n            </StyledPopupContainer>\n          </Overlay>\n        </OrientationContext.Provider>\n      )}\n    </OrientationContext.Provider>\n  );\n};\n\nconst ToolbarInOverlay = styled(StyledHorizontalToolbar)<{\n  firstVisibleIndex?: number;\n}>`\n  ${({ firstVisibleIndex }) =>\n    firstVisibleIndex &&\n    css`\n      ${StyledSeparator}:nth-child(${firstVisibleIndex + 1}) {\n        display: none;\n      }\n      > :not(:nth-child(${firstVisibleIndex}) ~ *) {\n        display: none;\n      }\n    `};\n`;\n\n/**\n * Separator to be used between items in a toolbar.\n */\nexport const ToolbarSeparator = (): React.ReactElement => {\n  const orientation = useContext(OrientationContext);\n  return orientation === \"horizontal\" ? (\n    <StyledHorizontalSeparator />\n  ) : (\n    <StyledVerticalSeparator />\n  );\n};\n","import React from \"react\";\nimport { Tooltip, TooltipProps } from \"@intellij-platform/core/Tooltip/Tooltip\";\n\nexport interface ActionHelpTooltipProps\n  extends Omit<TooltipProps, \"children\" | \"multiline\"> {\n  actionName: React.ReactNode;\n  helpText: React.ReactNode;\n  shortcut?: React.ReactNode;\n  link?: React.ReactNode;\n}\n\n/**\n * Tooltip of type \"Action Help\"\n * @see {@link ActionTooltip} {@link HelpTooltip}\n * @see https://jetbrains.github.io/ui/controls/tooltip/#02\n */\nexport const ActionHelpTooltip = ({\n  actionName,\n  helpText,\n  shortcut,\n  link,\n  ...tooltipProps\n}: ActionHelpTooltipProps): JSX.Element => {\n  return (\n    <Tooltip multiline {...tooltipProps}>\n      <Tooltip.Header>\n        {actionName}\n        {shortcut && <Tooltip.Shortcut>{shortcut}</Tooltip.Shortcut>}\n      </Tooltip.Header>\n      <Tooltip.Description>{helpText}</Tooltip.Description>\n      {link && <Tooltip.Link>{link}</Tooltip.Link>}\n    </Tooltip>\n  );\n};\n","import React from \"react\";\nimport { Tooltip, TooltipProps } from \"@intellij-platform/core/Tooltip/Tooltip\";\n\nexport interface ActionTooltipProps\n  extends Omit<TooltipProps, \"children\" | \"multiline\"> {\n  actionName: React.ReactNode;\n  shortcut?: React.ReactNode;\n}\n\n/**\n * Tooltip of type \"Action\"\n * @see {@link ActionHelpTooltip} {@link HelpTooltip}\n * @see https://jetbrains.github.io/ui/controls/tooltip/#02\n */\nexport const ActionTooltip = ({\n  actionName,\n  shortcut,\n  ...tooltipProps\n}: ActionTooltipProps): JSX.Element => {\n  return (\n    <Tooltip {...tooltipProps}>\n      <Tooltip.Header>\n        {actionName}\n        {shortcut && <Tooltip.Shortcut>{shortcut}</Tooltip.Shortcut>}\n      </Tooltip.Header>\n    </Tooltip>\n  );\n};\n","import React from \"react\";\nimport { Tooltip, TooltipProps } from \"@intellij-platform/core/Tooltip/Tooltip\";\n\nexport interface HelpTooltipProps\n  extends Omit<TooltipProps, \"children\" | \"multiline\"> {\n  helpText: React.ReactNode;\n  shortcut?: React.ReactNode;\n  link?: React.ReactNode;\n}\n\n/**\n * Tooltip of type \"Help\"\n * @see {@link ActionTooltip} {@link ActionHelpTooltip}\n * @see https://jetbrains.github.io/ui/controls/tooltip/#02\n */\nexport const HelpTooltip = ({\n  helpText,\n  shortcut,\n  link,\n  ...tooltipProps\n}: HelpTooltipProps): JSX.Element => {\n  return (\n    <Tooltip multiline {...tooltipProps}>\n      <Tooltip.Header>{helpText}</Tooltip.Header>\n      {shortcut && (\n        <div>\n          <Tooltip.Shortcut>{shortcut}</Tooltip.Shortcut>\n        </div>\n      )}\n      {link && <Tooltip.Link>{link}</Tooltip.Link>}\n    </Tooltip>\n  );\n};\n","import React, {\n  HTMLAttributes,\n  ReactElement,\n  RefObject,\n  useEffect,\n  useRef,\n} from \"react\";\nimport { TooltipTriggerProps as AriaTooltipTriggerProps } from \"@react-aria/tooltip\";\nimport { useTooltipTriggerState } from \"@react-stately/tooltip\";\nimport { AriaPositionProps, useOverlayPosition } from \"@react-aria/overlays\";\nimport { TooltipTriggerAndOverlay } from \"./TooltipTriggerAndOverlay\";\nimport { useObjectRef } from \"@react-aria/utils\";\n\nexport interface PositionedTooltipTriggerProps<\n  T extends HTMLElement = HTMLElement\n> extends Omit<AriaTooltipTriggerProps, \"trigger\">,\n    Pick<\n      AriaPositionProps,\n      \"placement\" | \"offset\" | \"crossOffset\" | \"shouldFlip\"\n    > {\n  /**\n   * Tooltip content. The value should be an element of type {@link Tooltip}.\n   */\n  tooltip: ReactElement;\n  /**\n   * Either a focusable component, or a render function which accepts trigger props and passes it to some component.\n   */\n  children:\n    | React.ReactNode\n    | ((\n        props: HTMLAttributes<HTMLElement> & { ref: RefObject<T> }\n      ) => React.ReactNode);\n\n  /**\n   * Whether to show the tooltip on trigger's focus. By default, tooltip is shown only when the trigger\n   * is hovered, but it can improve accessibility to show the tooltip on focus as well.\n   */\n  showOnFocus?: boolean;\n\n  /**\n   * Ref to trigger.\n   * If not provided, a ref will be created internally.\n   * Useful for when a ref to the trigger is necessary where PositionedTooltipTrigger\n   * is used.\n   */\n  triggerRef?: RefObject<T>;\n}\n\n/**\n * Sets {@param tooltip} for its {@param children}. Tooltip will be positioned based relative to the trigger.\n * The default tooltip positioning is based on cursor, which is implemented by {@link TooltipTrigger}\n */\nexport const PositionedTooltipTrigger = <T extends HTMLElement>({\n  tooltip,\n  children,\n  /**\n   * ide.tooltip.initialReshowDelay registry key. [Docs](https://jetbrains.github.io/ui/controls/tooltip/#19) says\n   * it's 300 by default, but it's 500 in the code currently.\n   */\n  delay = 500,\n  offset = 8,\n  showOnFocus,\n  triggerRef: inputTriggerRef,\n  ...props\n}: PositionedTooltipTriggerProps<T>): JSX.Element => {\n  const state = useTooltipTriggerState({\n    ...props,\n    delay,\n  });\n\n  const overlayRef = useRef<HTMLDivElement>(null);\n  const fallbackRef = useObjectRef<T>(inputTriggerRef);\n  const triggerRef = inputTriggerRef || fallbackRef;\n\n  const positionAria = useOverlayPosition({\n    ...props,\n    overlayRef,\n    targetRef: triggerRef,\n    offset,\n    isOpen: state.isOpen,\n    onClose: state.close,\n  });\n\n  // A workaround for a mysterious issue that happens only in docusaurus build.\n  // The ref value is not up-to-date, when the effect runs.\n  // FIXME: Find the explanation for why it happens, and fix it properly, if it's a legit issue.\n  useEffect(() => {\n    if (state.isOpen) {\n      requestAnimationFrame(positionAria.updatePosition);\n    }\n  }, [state.isOpen]);\n\n  return (\n    <TooltipTriggerAndOverlay\n      tooltip={tooltip}\n      positionAria={positionAria}\n      trigger={children}\n      state={state}\n      overlayRef={overlayRef}\n      triggerRef={triggerRef}\n      showOnFocus={showOnFocus}\n      isDisabled={props.isDisabled}\n    />\n  );\n};\n","import { Theme } from \"@intellij-platform/core/Theme\";\n\nexport const WITH_POINTER_BORDER_RADIUS = 4;\nexport const tooltipBackground = ({ theme }: { theme: Theme }) =>\n  theme.color(\"ToolTip.background\", !theme.dark ? \"#f2f2f2\" : \"#3c3f41\");\nexport const tooltipBorderColor = ({ theme }: { theme: Theme }) =>\n  theme.color(\"ToolTip.borderColor\", !theme.dark ? \"#adadad\" : \"#636569\");\n","import { compose, identity } from \"ramda\";\nimport React, { CSSProperties } from \"react\";\nimport { css, styled } from \"@intellij-platform/core/styled\";\n\nimport {\n  tooltipBackground,\n  WITH_POINTER_BORDER_RADIUS,\n} from \"./tooltip-styles\";\n\ntype OffsetValue = number | `${number}%`;\nexport type TooltipPointerPosition = {\n  /**\n   * The side of the tooltip the pointer is shown\n   */\n  side: \"top\" | \"bottom\" | \"left\" | \"right\";\n  /**\n   * - When side is \"top\" or \"bottom\":\n   *   Horizontal offset (in px) with respect to the left (or right, if negative) of the tooltip.\n   * - When side is \"left\" or \"right\":\n   *   Vertical offset (in px) with respect to the top (or bottom, if negative) of the tooltip.\n   *\n   * @default: '50%'\n   */\n  offset?: OffsetValue | { value: OffsetValue; invert?: boolean };\n};\n\nconst POINTER_WIDTH = 6;\nconst POINTER_HEIGHT = 9;\nconst POINTER_THICKNESS = 1.5;\nconst TRANSLATE = `translate(-${POINTER_WIDTH}px, -${POINTER_HEIGHT}px)`;\nconst sideStyles = {\n  top: css`\n    top: 0;\n    transform: ${TRANSLATE};\n  `,\n  bottom: css`\n    bottom: 0;\n    transform: rotateX(180deg) ${TRANSLATE};\n  `,\n  left: css`\n    left: 0;\n    transform: rotate(-90deg) ${TRANSLATE};\n  `,\n  right: css`\n    right: 0;\n    transform: rotate(90deg) ${TRANSLATE};\n  `,\n};\nconst StyledTooltipPointer = styled.span<{\n  side: TooltipPointerPosition[\"side\"];\n}>`\n  position: absolute;\n  width: 0;\n  height: 0;\n  ${({ side }) => sideStyles[side]};\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    border-left: ${POINTER_WIDTH + POINTER_THICKNESS}px solid transparent;\n    border-right: ${POINTER_WIDTH + POINTER_THICKNESS}px solid transparent;\n    border-bottom: ${POINTER_HEIGHT + POINTER_THICKNESS}px solid #636569;\n    left: -${POINTER_THICKNESS}px;\n    top: -${POINTER_THICKNESS}px;\n  }\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    border-left: ${POINTER_WIDTH}px solid transparent;\n    border-right: ${POINTER_WIDTH}px solid transparent;\n    border-bottom: ${POINTER_HEIGHT}px solid ${tooltipBackground};\n  }\n`;\n\nfunction normalizeCssValue(value: string | number) {\n  return typeof value === \"number\" ? `${value}px` : value;\n}\n\nconst withMin = (min: number) => (value: string | number | undefined) =>\n  value != undefined ? `max(${min}px, ${normalizeCssValue(value)})` : value;\nconst withMax = (max: number) => (value: string | number | undefined) =>\n  value != undefined ? `min(${max}px, ${normalizeCssValue(value)})` : value;\nconst HEIGHT_OFFSET = POINTER_HEIGHT + WITH_POINTER_BORDER_RADIUS;\nconst WIDTH_OFFSET = POINTER_WIDTH + WITH_POINTER_BORDER_RADIUS;\n\n/**\n * Ensures pointer is not offset too much or too little that would make the arrow appear\n * outside the tooltip boundary.\n */\nfunction limitPointerPositionStyles(\n  { width, height }: { width: number | undefined; height: number | undefined },\n  { top, left, right, bottom }: CSSProperties\n) {\n  const applyVerticalMinMax = compose(\n    height ? withMax(height - HEIGHT_OFFSET) : identity,\n    withMin(HEIGHT_OFFSET)\n  );\n  const applyHorizontalMinMax = compose(\n    width ? withMax(width - WIDTH_OFFSET) : identity,\n    withMin(WIDTH_OFFSET)\n  );\n  return {\n    top: applyVerticalMinMax(top),\n    bottom: applyVerticalMinMax(bottom),\n    left: applyHorizontalMinMax(left),\n    right: applyHorizontalMinMax(right),\n  };\n}\n\nconst getOffsetCssProp = (\n  side: TooltipPointerPosition[\"side\"],\n  invert?: boolean\n): \"top\" | \"bottom\" | \"left\" | \"right\" => {\n  if (side === \"top\" || side === \"bottom\") {\n    return invert ? \"right\" : \"left\";\n  }\n  return invert ? \"bottom\" : \"top\";\n};\n\nfunction pointerPositionToOffsetStyle({\n  side,\n  offset = \"50%\",\n}: TooltipPointerPosition): CSSProperties {\n  const { invert = false, value: offsetValue } =\n    typeof offset === \"object\" ? offset : { invert: false, value: offset };\n  return {\n    [getOffsetCssProp(side, invert)]: offsetValue,\n  };\n}\n\nexport function TooltipPointer({\n  side,\n  offset,\n  tooltipSize,\n}: {\n  side: TooltipPointerPosition[\"side\"];\n  offset:\n    | { type: \"calculated\"; value: CSSProperties }\n    | { type: \"specific\"; value: TooltipPointerPosition[\"offset\"] };\n  tooltipSize: { width: number; height: number };\n}) {\n  return (\n    <StyledTooltipPointer\n      side={side}\n      style={limitPointerPositionStyles(\n        tooltipSize,\n        offset.type === \"specific\"\n          ? pointerPositionToOffsetStyle({ side, offset: offset.value })\n          : offset.value\n      )}\n    />\n  );\n}\n","import React, {\n  ForwardedRef,\n  MutableRefObject,\n  useContext,\n  useLayoutEffect,\n  useState,\n} from \"react\";\nimport { AriaTooltipProps, useTooltip } from \"@react-aria/tooltip\";\nimport { useObjectRef } from \"@react-aria/utils\";\nimport { PositionAria } from \"@react-aria/overlays\";\nimport { css, styled } from \"@intellij-platform/core/styled\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { WINDOW_SHADOW } from \"@intellij-platform/core/style-constants\";\nimport { TooltipContext } from \"./TooltipContext\";\nimport { TooltipPointer, TooltipPointerPosition } from \"./TooltipPointer\";\nimport {\n  tooltipBackground,\n  tooltipBorderColor,\n  WITH_POINTER_BORDER_RADIUS,\n} from \"./tooltip-styles\";\n\nexport interface TooltipProps extends Omit<AriaTooltipProps, \"isOpen\"> {\n  children: React.ReactNode;\n  multiline?: boolean;\n  className?: string;\n  /**\n   * Whether (and in what position) the arrow pointer should be shown.\n   * When using {@link TooltipTrigger} or {@link PositionedTooltipTrigger}, the position of the pointer is calculated\n   * based on the target element, and a boolean value to define whether the arrow should be shown or not would suffice.\n   *\n   * Tooltips with pointer have slight style difference.\n   * {@see https://www.figma.com/file/nfDfMAdV7j2fnQlpYNAOfP/IntelliJ-Platform-UI-Kit-(Community)?type=design&node-id=15-51&mode=design&t=7PplrxG8ZfXB4hIK-0}\n   *\n   * @example\n   * <Tooltip withPointer />\n   * // shows the pointer in the position controlled by {@link TooltipTrigger} or {@link PositionedTooltipTrigger}\n   * // If there is not `TooltipTrigger` or `PositionedTooltipTrigger`, the arrow is shown on top center by default.\n   *\n   * @example\n   * <Tooltip withPointer={{side: 'top', offset: 30}} />\n   * // shows the pointer on the top side, with horizontal offset of 30px from the left of tooltip, regardless\n   * // of whether `TooltipTrigger` or `PositionedTooltipTrigger` is used.\n   *\n   * @example\n   * <Tooltip withPointer={{side: 'left', offset: -30}} />\n   * // shows the pointer on the left side, with vertidcal offset of 30px from the bottom of the tooltip, regardless\n   * // of whether `TooltipTrigger` or `PositionedTooltipTrigger` is used.\n   */\n  withPointer?: boolean | TooltipPointerPosition;\n}\n\n// Providing default value for paddings, based on intellijlaf theme. In Intellij Platform, themes extend either\n// intellijlaf or darcula. Which means some properties can be omitted in the custom theme, relying on the values\n// in the base theme. This is not how theming works here, at the moment, and there are other similar issues, but\n// this is just a mitigation for one case, spacing in tooltip.\nexport const DEFAULT_TEXT_BORDER_INSETS = \"0.5rem 0.8125rem 0.625rem 0.625rem\";\nexport const DEFAULT_SMALL_TEXT_BORDER_INSETS =\n  \"0.375rem 0.75rem 0.4375rem 0.625rem\";\nconst StyledTooltip = styled.div<{ multiline?: boolean; hasPointer?: boolean }>`\n  box-sizing: content-box;\n  max-width: ${\n    /**\n     * Max width is meant to be set on the multiline description (which is not used in ActionTooltip which would\n     * be right according to [the specs](https://jetbrains.github.io/ui/controls/tooltip/#09)).\n     * But if set on `Tooltip.Description`, title and link can still make the tooltip grow more that the expected max\n     * width. So it makes more sense to set the max width on the container anyway. But since the value of the max width\n     * is meant to be for description we set the box-sizing to \"content-box\" to exclude container's padding in max-width\n     * calculation.\n     */\n    ({ theme, multiline }) =>\n      multiline\n        ? `${\n            theme.value<number>(\n              \"HelpTooltip.maxWidth\" as UnknownThemeProp<\"HelpTooltip.maxWidth\">\n            ) ?? 250\n          }px`\n        : null\n  };\n  white-space: ${({ multiline }) => (!multiline ? \"nowrap\" : null)};\n  display: inline-flex;\n  flex-direction: column;\n  gap: ${({ theme }) =>\n    theme.value<number>(\n      \"HelpToolTip.verticalGap\" as UnknownThemeProp<\"HelpToolTip.verticalGap\">\n    ) ?? 4}px;\n  background: ${tooltipBackground};\n  color: ${({ theme }) =>\n    theme.color(\"ToolTip.foreground\", !theme.dark ? \"#000\" : \"#bfbfbf\")};\n  padding: ${({ theme, multiline }) =>\n    multiline\n      ? theme.inset(\"HelpTooltip.defaultTextBorderInsets\") ||\n        DEFAULT_TEXT_BORDER_INSETS\n      : theme.inset(\"HelpTooltip.smallTextBorderInsets\") ||\n        DEFAULT_SMALL_TEXT_BORDER_INSETS};\n  line-height: 1.2;\n  border-style: solid;\n  border-width: ${({ theme, hasPointer }) =>\n    theme.value<boolean>(\"ToolTip.paintBorder\") || hasPointer ? \"1px\" : \"0px\"};\n  border-color: ${tooltipBorderColor};\n  ${WINDOW_SHADOW};\n  ${({ hasPointer }) =>\n    hasPointer &&\n    css`\n      position: relative; // needed for absolute positioning of the pointer\n      border-radius: ${WITH_POINTER_BORDER_RADIUS}px;\n    `}\n`;\n\nconst StyledShortcut = styled.kbd`\n  all: unset;\n  color: ${({ theme }) =>\n    theme.color(\n      \"ToolTip.shortcutForeground\",\n      !theme.dark ? \"#787878\" : \"#999999\"\n    )};\n`;\n\nconst StyledHeader = styled.div`\n  font-size: ${({ theme }) => theme.fontSizeDelta(\"HelpTooltip.fontSizeDelta\")};\n  display: flex;\n  gap: 0.5rem;\n`;\nconst StyledDescription = styled.div`\n  color: ${({ theme }) =>\n    theme.color(\n      \"Tooltip.infoForeground\" as UnknownThemeProp<\"Tooltip.infoForeground\">,\n      theme.commonColors.contextHelpForeground\n    )};\n  font-size: ${({ theme }) =>\n    theme.fontSizeDelta(\"HelpTooltip.descriptionSizeDelta\")};\n`;\n\nconst StyledLink = styled.div`\n  color: ${({ theme }) =>\n    theme.color(\n      \"ToolTip.linkForeground\" as UnknownThemeProp<\"ToolTip.linkForeground\">,\n      theme.commonColors.linkForegroundEnabled\n    )};\n  a,\n  [role=\"link\"] {\n    // Maybe target Link instead, without important. It didn't work as expected, in the first try tho.\n    color: inherit !important;\n  }\n`;\n\nexport const placementToPointerSide: Record<\n  NonNullable<PositionAria[\"placement\"]>,\n  TooltipPointerPosition[\"side\"]\n> = {\n  bottom: \"top\",\n  top: \"bottom\",\n  left: \"right\",\n  right: \"left\",\n  center: \"top\", // doesn't make sense :-?\n};\n/**\n * Implements the UI of a Tooltip. For tooltip to be shown for a trigger, on hover, use {@link TooltipTrigger}.\n * The following components can be used to compose the content of a tooltip.\n * - {@link Tooltip.Header}\n * - {@link Tooltip.Description}\n * - {@link Tooltip.Link}\n * - {@link Tooltip.Shortcut}\n * Prefer using higher-level components like {@link HelpTooltip}, {@link ActionHelpTooltip} or {@link ActionTooltip}.\n * that ensure different pieces of tooltip content follow the\n * [design system recommendation](https://jetbrains.github.io/ui/controls/tooltip)\n *\n *\n * ### Reference:\n * Tooltip, Tooltip.* and TooltipTrigger are corresponding to [HelpTooltip](https://github.com/JetBrains/intellij-community/blob/854daf45b47a6ea9da0348978608bfbfe998d99c/platform/platform-api/src/com/intellij/ide/HelpTooltip.java#L102)\n * in the original impl.\n */\nconst Tooltip = React.forwardRef(function Tooltip(\n  { children, multiline, withPointer, ...props }: TooltipProps,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n): JSX.Element {\n  const ref: MutableRefObject<HTMLDivElement | null> =\n    useObjectRef(forwardedRef);\n  const {\n    state,\n    isInteractive,\n    pointerPositionStyle,\n    placement = \"bottom\",\n  } = useContext(TooltipContext) || {};\n  const { tooltipProps } = useTooltip(\n    props,\n    state\n      ? {\n          ...state,\n          // if the tooltip is not interactive, let it be closed even when it's hovered. That's the according to the reference impl.\n          open: isInteractive ? state?.open : () => {},\n        }\n      : state\n  );\n  const measuredSize = useMeasuredSize(ref);\n\n  const { side, offset } =\n    typeof withPointer === \"object\"\n      ? withPointer\n      : { side: placementToPointerSide[placement], offset: undefined };\n\n  return (\n    <StyledTooltip\n      hasPointer={Boolean(withPointer)}\n      multiline={multiline}\n      {...tooltipProps}\n      className={props.className}\n      ref={ref}\n    >\n      {withPointer && measuredSize && (\n        <TooltipPointer\n          tooltipSize={measuredSize}\n          side={side}\n          offset={\n            offset || !pointerPositionStyle\n              ? { type: \"specific\", value: offset }\n              : { type: \"calculated\", value: pointerPositionStyle }\n          }\n        />\n      )}\n      {children}\n    </StyledTooltip>\n  );\n});\n\nconst useMeasuredSize = (\n  ref: React.MutableRefObject<HTMLDivElement | null>\n) => {\n  const [measuredSize, setMeasuredSize] = useState<\n    | undefined\n    | {\n        height: number;\n        width: number;\n      }\n  >(undefined);\n\n  useLayoutEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n    const { offsetHeight, offsetWidth } = ref.current;\n    if (\n      offsetHeight != measuredSize?.height ||\n      offsetWidth != measuredSize?.width\n    ) {\n      setMeasuredSize({ height: offsetHeight, width: offsetWidth });\n    }\n  });\n  return measuredSize;\n};\n\nconst _Tooltip = Object.assign(Tooltip, {\n  Header: StyledHeader,\n  Shortcut: StyledShortcut,\n  Description: StyledDescription,\n  Link: StyledLink,\n});\n\nexport { _Tooltip as Tooltip };\n","import React, { CSSProperties } from \"react\";\nimport { TooltipTriggerState } from \"@react-stately/tooltip\";\nimport { PositionAria } from \"@react-aria/overlays\";\n\ninterface TooltipContextObject {\n  state: TooltipTriggerState;\n  isInteractive: boolean;\n  placement: NonNullable<PositionAria[\"placement\"]> | undefined;\n  pointerPositionStyle?: CSSProperties;\n}\n\nexport const TooltipContext = React.createContext<TooltipContextObject | null>(\n  null\n);\n","import React, { useRef } from \"react\";\nimport { useLayoutEffect } from \"@react-aria/utils\";\nimport {\n  AriaPositionProps,\n  PositionAria,\n  useOverlayPosition,\n} from \"@react-aria/overlays\";\n\n/**\n * `useOverlayPosition` only supports positioning overlay relative to an element, at the moment.\n *  For context menu or tooltip, we may want to position the overlay based on the coordinates of the mouse event which\n *  has triggered the overlay.\n *  This hook wraps `useOverlayPosition`, and is very similar to it, but you don't need to pass `targetRef`. Instead,\n *  you have to call the updatePosition in the event handler that triggers the overlay, passing the `MouseEvent` object.\n *\n * This is hopefully a temporary solution to circumvents the limitation of `useOverlayPosition`, until it supports\n * non-element based positioning as well. It works by appending a dummy 1x1 px element to body and positioning it\n * based on React.MouseEvent objects. Then it uses a ref to that element as the `targetRef`, passed to `useOverlayPosition`\n *\n * @example\n * ```ts\n * const { updatePosition, overlyProps} = useMouseEventOverlayPosition({ overlayRef });\n *\n * const onContextMenu = (event: React.ReactEvent) => {\n *  updatePosition(event);\n *  // ...\n * }\n * ```\n */\nlet globalMoveHandler: null | ((e: MouseEvent) => void) = null;\nlet lastMouseClientPos: { clientX: number; clientY: number } | undefined;\n\nexport function useMouseEventOverlayPosition(\n  options: Omit<AriaPositionProps, \"targetRef\">\n): Omit<PositionAria, \"updatePosition\"> & {\n  updatePosition: (event?: React.MouseEvent) => void;\n} {\n  const targetRef = useRef<HTMLElement>(null);\n\n  useLayoutEffect(() => {\n    if (!globalMoveHandler) {\n      // After the first use of the hook, the listener will be attached forever. Not a big deal but can be improved.\n      globalMoveHandler = ({ clientX, clientY }) => {\n        lastMouseClientPos = { clientX, clientY };\n      };\n      document.addEventListener(\"mousemove\", globalMoveHandler);\n    }\n    if (!targetRef.current) {\n      const fakeTarget = document.createElement(\"span\");\n      Object.assign(fakeTarget.style, {\n        width: \"0px\",\n        height: \"0px\",\n        pointerEvents: \"none\",\n        position: \"fixed\",\n        visibility: \"hidden\",\n      });\n      document.body.appendChild(fakeTarget);\n      // @ts-expect-error We intentionally don't pass null to generic argument, to not have it as a mutable nullable\n      // ref, since we are mimicking an element ref.\n      targetRef.current = fakeTarget;\n      return () => {\n        fakeTarget.remove();\n      };\n    }\n  }, []);\n\n  const updatePosition = (e?: React.MouseEvent) => {\n    const coordinatesSource = e || lastMouseClientPos;\n    if (targetRef.current && coordinatesSource) {\n      const { clientX, clientY } = coordinatesSource;\n      targetRef.current.style.left = `${\n        // not sure why crossOffset passed to useOverlayPosition doesn't work, so compensating for it here.\n        clientX + (options.crossOffset ?? 0)\n      }px`;\n      targetRef.current.style.top = `${clientY}px`;\n    }\n    _updatePosition();\n  };\n  useLayoutEffect(() => {\n    if (options.isOpen) {\n      updatePosition();\n    }\n  }, [options.isOpen, targetRef.current]);\n\n  const { updatePosition: _updatePosition, ...result } = useOverlayPosition({\n    ...options,\n    targetRef,\n  });\n\n  return {\n    ...result,\n    /**\n     * Ref to be passed to be passed as targetRef\n     */\n    updatePosition,\n  };\n}\n","import React, {\n  HTMLAttributes,\n  ReactElement,\n  RefObject,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { TooltipTriggerProps as AriaTooltipTriggerProps } from \"@react-aria/tooltip\";\nimport { AriaPositionProps } from \"@react-aria/overlays\";\nimport { useTooltipTriggerState } from \"@react-stately/tooltip\";\nimport { useMouseEventOverlayPosition } from \"@intellij-platform/core/utils/useMouseEventOverlayPosition\";\nimport { useTheme } from \"@intellij-platform/core/styled\";\nimport { TooltipTriggerAndOverlay } from \"@intellij-platform/core/Tooltip/TooltipTriggerAndOverlay\";\n\nexport interface TooltipTriggerProps\n  // controlling isOpen state is not supported since positioning is based on cursor.\n  // PositionedTooltipTrigger can be used for controlled isOpen state\n  extends Omit<AriaTooltipTriggerProps, \"isOpen\" | \"defaultOpen\" | \"trigger\"> {\n  /**\n   * Tooltip content. The value should be an element of type {@link Tooltip}.\n   */\n  tooltip: ReactElement;\n  /**\n   * Placement of the tooltip with respect to the cursor\n   * @default \"bottom left\"\n   */\n  placement?: AriaPositionProps[\"placement\"];\n  /**\n   * The additional offset applied along the main axis between the element and its\n   * anchor element.\n   * @default theme.value<number>(\"HelpTooltip.mouseCursorOffset\") ?? 20\n   */\n  offset?: number;\n  /**\n   * Either a focusable component, or a render function which accepts trigger props and passes it to some component.\n   */\n  children:\n    | React.ReactNode\n    | ((\n        props: HTMLAttributes<HTMLElement> & { ref: RefObject<HTMLElement> }\n      ) => React.ReactNode);\n}\n\n/**\n * Sets {@param tooltip} for its {@param children}.\n * Showing tooltip on focus and controlled open state are not supported at the moment, based on how tooltip works in the\n * reference impl, and since tooltip is positioned based on cursor position. Positioning the tooltip based on cursor\n * position requires tooltip to be opened on hover. That's why neither controlling opened state nor showing the tooltip\n * on focus are supported here. {@link PositionedTooltipTrigger} allows for positioning the tooltip with respect to the\n * trigger element, and offers more options.\n */\nexport const TooltipTrigger = ({\n  tooltip,\n  children,\n  /**\n   * ide.tooltip.initialReshowDelay registry key. [Docs](https://jetbrains.github.io/ui/controls/tooltip/#19) says\n   * it's 300 by default, but it's 500 in the code currently.\n   */\n  delay = 500,\n  offset,\n  placement = \"bottom left\",\n  ...props\n}: TooltipTriggerProps): JSX.Element => {\n  const triggerRef = useRef<HTMLElement>(null);\n  const theme = useTheme();\n  const state = useTooltipTriggerState({\n    ...props,\n    delay,\n  });\n\n  const overlayRef = useRef<HTMLDivElement>(null);\n\n  const positionAria = useMouseEventOverlayPosition({\n    overlayRef,\n    isOpen: state.isOpen,\n    placement,\n    shouldFlip: true,\n    offset:\n      offset ?? theme.value<number>(\"HelpTooltip.mouseCursorOffset\") ?? 20,\n  });\n\n  // FIXME: Find the explanation for why it happens, and fix it properly, if it's a legit issue.\n  useEffect(() => {\n    if (state.isOpen) {\n      requestAnimationFrame(() => {\n        positionAria.updatePosition();\n      });\n    }\n  }, [state.isOpen]);\n\n  return (\n    <TooltipTriggerAndOverlay\n      tooltip={tooltip}\n      positionAria={positionAria}\n      trigger={children}\n      state={state}\n      overlayRef={overlayRef}\n      triggerRef={triggerRef}\n      /**\n       * If we want to support showing tooltip on focus, or if we want to allow controlled open state, we should let it\n       * be positioned by the trigger element in that case, rather than mouse position.\n       * One solution would be to use useOverlayPosition as well, and conditionally use the right `overlayProps`, based on\n       * whether the position determined by mouse is within `triggerRef.current?.getBoundingClientRect()`. Another way\n       * (maybe better) would be to have `useMouseEventOverlayPosition` accept `bounds` or `containerBounds`, which if\n       * passed, makes sure the position is kept within that boundary. Outside positions would be mapped to the closest\n       * point on the border of the boundary.\n       */\n      showOnFocus={false}\n      isDisabled={props.isDisabled}\n    />\n  );\n};\n","import React, {\n  HTMLAttributes,\n  ReactElement,\n  RefObject,\n  useState,\n} from \"react\";\nimport { useTooltipTrigger as useAriaTooltipTrigger } from \"@react-aria/tooltip\";\nimport { TooltipTriggerState } from \"@react-stately/tooltip\";\nimport { FocusableProvider } from \"@react-aria/focus\";\nimport { Overlay, PositionAria } from \"@react-aria/overlays\";\nimport { mergeProps, useLayoutEffect } from \"@react-aria/utils\";\n\nimport { TooltipContext } from \"./TooltipContext\";\n\ninterface TooltipTriggerBaseProps<T extends HTMLElement = HTMLElement> {\n  /**\n   * Tooltip content. The value should be an element of type {@link Tooltip}.\n   */\n  tooltip: ReactElement;\n  /**\n   * Either a focusable component, or a render function which accepts trigger props and passes it to some component.\n   */\n  trigger:\n    | React.ReactNode\n    | ((\n        props: HTMLAttributes<HTMLElement> & { ref: RefObject<T> }\n      ) => React.ReactNode);\n\n  state: TooltipTriggerState;\n\n  showOnFocus?: boolean;\n  positionAria: PositionAria;\n  overlayRef: RefObject<HTMLDivElement>;\n  triggerRef: RefObject<T>;\n  isDisabled?: boolean;\n}\n\n/**\n * Sets {@param tooltip} for its {@param children}. It doesn't handle tooltip positioning, and so shouldn't be used\n * directly. {@param tooltipOverlayProps} should be used to apply the intended positioning.\n *\n * TODO: Implement timeout-based auto-hide (https://jetbrains.github.io/ui/controls/tooltip/#19)\n * TODO: shadow\n */\nexport const TooltipTriggerAndOverlay = <T extends HTMLElement>({\n  tooltip,\n  trigger,\n  state,\n  overlayRef,\n  triggerRef,\n  showOnFocus,\n  positionAria,\n  ...props\n}: TooltipTriggerBaseProps<T>): JSX.Element => {\n  const [isInteractive, setInteractive] = useState(false);\n  const { triggerProps, tooltipProps } = useTooltipTrigger(\n    props,\n    // In Intellij Platform. The tooltip hides right away. We follow the same, unless the tooltip is interactive.\n    // Maybe something to rethink if it's worth following the reference impl for.\n    { ...state, close: isInteractive ? state.close : () => state.close(true) },\n    triggerRef\n  );\n\n  if (!showOnFocus) {\n    delete triggerProps.onFocus;\n  }\n\n  useLayoutEffect(() => {\n    setInteractive(\n      overlayRef.current?.querySelector(\n        'a, button, [role=\"button\"], [role=link]'\n      ) !== null\n    );\n  });\n  return (\n    <>\n      {normalizeChildren(trigger, { ...triggerProps, ref: triggerRef })}\n      {state.isOpen && !props.isDisabled && (\n        <Overlay>\n          <TooltipContext.Provider\n            value={{\n              state,\n              isInteractive,\n              placement: positionAria.placement ?? undefined,\n              pointerPositionStyle: positionAria.arrowProps.style,\n            }}\n          >\n            <div\n              {...mergeProps(\n                positionAria.overlayProps,\n                // Is it ok to apply tooltip props on this wrapper?\n                tooltipProps\n              )}\n              ref={overlayRef}\n            >\n              {tooltip}\n            </div>\n          </TooltipContext.Provider>\n        </Overlay>\n      )}\n    </>\n  );\n};\n\nfunction normalizeChildren<T extends HTMLElement = HTMLElement>(\n  children: TooltipTriggerBaseProps<T>[\"trigger\"],\n  triggerProps: HTMLAttributes<HTMLElement> & { ref: RefObject<T> }\n) {\n  if (typeof children === \"function\") {\n    return children(triggerProps);\n  }\n  if (React.isValidElement(children) && typeof children.type === \"string\") {\n    return React.cloneElement(children, triggerProps);\n  }\n  return <FocusableProvider {...triggerProps}>{children}</FocusableProvider>;\n}\n\n/**\n * A wrapper around react-aria's useTooltipTrigger, adjusting it for Intellij Platform.\n */\nconst useTooltipTrigger: typeof useAriaTooltipTrigger = (props, state, ref) => {\n  const { triggerProps, tooltipProps } = useAriaTooltipTrigger(\n    props,\n    state,\n    ref\n  );\n  // onPointerDown returned from the underlying usePress stops propagation which messes with some usages of tooltip\n  // like in tab or tool window stripe button. We replace onPointerDown handler with a similar handler that closes\n  // the tooltip.\n  triggerProps.onPointerDown = () => {\n    if (!(ref.current instanceof HTMLInputElement)) {\n      state.close(true);\n    }\n  };\n  /**\n   * onMouseDown is preventDefault-ed which interferes with functionality of the tooltip trigger, in use cases like\n   * tool window stripe button. Note that since pointerDown is handled for calling the tooltip trigger's onPressStart\n   * handler (which hides the tooltip), there is no issue in excluding onMouseDown, because it's only used to preventDefault\n   * the event, because of some edge cases focus handling which is not our concern.\n   */\n  delete triggerProps.onMouseDown;\n\n  return {\n    triggerProps,\n    tooltipProps,\n  };\n};\n","import React from \"react\";\nimport { Tooltip } from \"@intellij-platform/core/Tooltip/Tooltip\";\nimport { styled } from \"@intellij-platform/core/styled\";\n\nexport interface ValidationTooltipProps {\n  children: React.ReactNode;\n  /**\n   * @default error\n   */\n  type?: \"error\" | \"warning\";\n}\n\nconst StyledValidationTooltip = styled(Tooltip)`\n  box-shadow: none;\n  padding: 0.25rem 0.5rem; // from ComponentValidator class in the reference impl\n  max-width: ${({ theme }) =>\n    `${theme.value<number>(\"ValidationTooltip.maxWidth\")}px`};\n  background: ${({ theme }) =>\n    theme.color(\"ValidationTooltip.errorBackground\")};\n  border: 1px solid\n    ${({ theme }) => theme.color(\"ValidationTooltip.errorBorderColor\")};\n`;\n\nconst StyledWarningValidationTooltip = styled(StyledValidationTooltip)`\n  background: ${({ theme }) =>\n    theme.color(\"ValidationTooltip.warningBackground\")};\n  border-color: ${({ theme }) =>\n    theme.color(\"ValidationTooltip.warningBorderColor\")};\n`;\n\n/**\n * Tooltip to be used for validation error messages\n * @see https://jetbrains.github.io/ui/principles/validation_errors/\n */\nexport const ValidationTooltip = ({\n  type = \"error\",\n  children,\n}: ValidationTooltipProps): JSX.Element => {\n  const Component =\n    type === \"error\" ? StyledValidationTooltip : StyledWarningValidationTooltip;\n  return <Component multiline>{children}</Component>;\n};\n","import React from \"react\";\nimport { Node } from \"@react-types/shared\";\nimport { TreeNode } from \"../TreeNode\";\nimport { SpeedSearchItemHighlightsProvider } from \"@intellij-platform/core/CollectionSpeedSearch\";\n\nexport const SpeedSearchTreeNode = <T extends object>({\n  item,\n}: {\n  item: Node<T>;\n}) => {\n  return (\n    <SpeedSearchItemHighlightsProvider itemKey={item.key}>\n      <TreeNode key={item.key} item={item} />\n    </SpeedSearchItemHighlightsProvider>\n  );\n};\n","import React, { ForwardedRef } from \"react\";\nimport { Node } from \"@react-types/shared\";\nimport { Virtualizer } from \"@react-aria/virtualizer\";\nimport { CollectionSpeedSearchContext } from \"@intellij-platform/core/CollectionSpeedSearch\";\nimport {\n  SpeedSearchProps,\n  SpeedSearchStateProps,\n} from \"@intellij-platform/core/SpeedSearch\";\nimport { StyledTree } from \"../StyledTree\";\nimport { SpeedSearchPopup } from \"../../SpeedSearch/SpeedSearchPopup\";\nimport { useTreeState } from \"../useTreeState\";\nimport { TreeProps } from \"../Tree\";\nimport { useTreeVirtualizer } from \"../useTreeVirtualizer\";\nimport { TreeContext } from \"../TreeContext\";\nimport { useSpeedSearchTree } from \"./useSpeedSearchTree\";\nimport { SpeedSearchTreeNode } from \"./SpeedSearchTreeNode\";\nimport { filterDOMProps, useObjectRef } from \"@react-aria/utils\";\nimport { useTreeRef } from \"@intellij-platform/core/Tree/useTreeRef\";\n\nexport type SpeedSearchTreeProps<T extends object> = TreeProps<T> &\n  SpeedSearchProps &\n  SpeedSearchStateProps & {\n    /**\n     * Whether speed search popup should not be shown. Useful when speed search state is controlled, and\n     * a search input is rendered outside the tree.\n     */\n    hideSpeedSearchPopup?: boolean;\n  };\n\nexport const SpeedSearchTree = React.forwardRef(\n  <T extends object>(\n    {\n      fillAvailableSpace = false,\n      treeRef,\n      hideSpeedSearchPopup,\n      style,\n      className,\n      ...props\n    }: SpeedSearchTreeProps<T>,\n    forwardedRef: ForwardedRef<HTMLDivElement>\n  ) => {\n    const state = useTreeState({\n      ...props,\n      disallowEmptySelection: !props.allowEmptySelection,\n    });\n\n    const ref = useObjectRef(forwardedRef);\n    useTreeRef({ state, scrollRef: ref }, treeRef);\n\n    const {\n      treeProps,\n      treeContext,\n      speedSearchContextValue,\n      searchPopupProps,\n    } = useSpeedSearchTree({ ...props, isVirtualized: true }, state, ref);\n\n    const { virtualizerProps } = useTreeVirtualizer({ state });\n\n    // NOTE: SpeedSearchPopup can be rendered as a portal with proper positioning (useOverlayPosition), if overflow\n    // issues required it.\n    return (\n      <TreeContext.Provider value={treeContext}>\n        <CollectionSpeedSearchContext.Provider value={speedSearchContextValue}>\n          {!hideSpeedSearchPopup && <SpeedSearchPopup {...searchPopupProps} />}\n          <StyledTree\n            as={Virtualizer}\n            ref={ref}\n            fillAvailableSpace={fillAvailableSpace}\n            {...virtualizerProps}\n            {...treeProps}\n            {...filterDOMProps(props, { labelable: true })}\n            style={style}\n            className={className}\n          >\n            {(type: string, item: unknown) => (\n              <SpeedSearchTreeNode\n                key={(item as Node<T>).key}\n                item={item as Node<T>}\n              />\n            )}\n          </StyledTree>\n        </CollectionSpeedSearchContext.Provider>\n      </TreeContext.Provider>\n    );\n  }\n);\n","import { RefObject } from \"react\";\nimport { useKeyboard } from \"@react-aria/interactions\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { useCollectionSpeedSearch } from \"../../CollectionSpeedSearch/useCollectionSpeedSearch\";\nimport {\n  SpeedSearchProps,\n  SpeedSearchStateProps,\n} from \"../../SpeedSearch/useSpeedSearch\";\nimport { TreeKeyboardDelegate } from \"../TreeKeyboardDelegate\";\nimport { SelectableTreeProps, useSelectableTree } from \"../useSelectableTree\";\nimport { hasAnyModifier } from \"@intellij-platform/core/utils/keyboard-utils\";\n\ninterface UseSpeedSearchTreeProps<T>\n  extends SpeedSearchProps,\n    SpeedSearchStateProps,\n    SelectableTreeProps<T> {}\n\nexport function useSpeedSearchTree<T>(\n  props: UseSpeedSearchTreeProps<T>,\n  state: TreeState<T>,\n  ref: RefObject<HTMLElement>\n) {\n  const {\n    containerProps,\n    keyboardDelegate,\n    selectionManager,\n    speedSearch,\n    ...collectionSpeedSearch\n  } = useCollectionSpeedSearch({\n    ...props,\n    collection: state.collection,\n    selectionManager: state.selectionManager,\n    keyboardDelegate: new TreeKeyboardDelegate(\n      state.collection,\n      state.disabledKeys,\n      ref\n    ),\n    ref,\n    // TODO: maybe allow control over speed search via other props\n  });\n\n  // Speed search is cleared on \"Enter\" key. Alternatively we could wrap onAction and onToggle props\n  // but this seemed more reasonable\n  // NOTE: It may make sense for this behaviour to be pulled up to useCollectionSpeedSearch.\n  const { keyboardProps: speedSearchKeyboardProps } = useKeyboard({\n    onKeyDown: (e) => {\n      if (\n        [\"Enter\", \"ArrowLeft\", \"ArrowRight\"].includes(e.key) &&\n        !hasAnyModifier(e)\n      ) {\n        speedSearch.clear();\n      } else {\n        e.continuePropagation();\n      }\n    },\n  });\n\n  const { treeProps, ...selectableTree } = useSelectableTree(\n    { ...props, keyboardDelegate },\n    { ...state, selectionManager },\n    ref\n  );\n\n  return {\n    treeProps: mergeProps(treeProps, containerProps, speedSearchKeyboardProps),\n    ...collectionSpeedSearch,\n    ...selectableTree,\n  };\n}\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { StyledList } from \"@intellij-platform/core/List/StyledList\";\n\nexport const StyledTree = styled(StyledList).attrs({ role: \"tree\" as string })`\n  background: ${({ theme }) => theme.color(\"Tree.background\")};\n`;\n","import React, { Key, MutableRefObject } from \"react\";\nimport { TreeState } from \"@react-stately/tree\";\n\nexport type TreeContextType<T> = {\n  state: Pick<\n    TreeState<T>,\n    | \"collection\"\n    | \"selectionManager\"\n    | \"expandedKeys\"\n    | \"disabledKeys\"\n    | \"toggleKey\"\n  >;\n  focused: boolean;\n  onActionRef: MutableRefObject<((key: Key) => void) | undefined>;\n};\n\nexport const TreeContext = React.createContext<TreeContextType<any> | null>(\n  null\n);\n","import { ListKeyboardDelegate } from \"@react-aria/selection\";\nimport { Collection, Node } from \"@react-types/shared\";\nimport React, { Key, RefObject } from \"react\";\n\nexport class TreeKeyboardDelegate<T> extends ListKeyboardDelegate<T> {\n  constructor(\n    private collection: Collection<Node<T>>,\n    disabledKeys: Set<Key>,\n    ref: RefObject<HTMLElement>,\n    collator?: Intl.Collator\n  ) {\n    super({\n      collection,\n      disabledKeys,\n      ref,\n      collator,\n      // Since @react-aria/selection@3.16.0 getKeyLeftOf and getKeyRightOf is\n      // removed if orientation is vertical and layout is \"stack\".\n      layout: \"grid\",\n    });\n  }\n\n  getKeyLeftOf(key: React.Key): React.Key | null {\n    const item = this.collection.getItem(key);\n    return item?.parentKey ?? this.getKeyAbove(key);\n  }\n\n  getKeyRightOf(key: React.Key): React.Key | null {\n    return this.getKeyBelow(key);\n  }\n}\n","import { LafIcon } from \"../Icon\";\nimport React, { ComponentProps, useMemo } from \"react\";\nimport { styled } from \"../styled\";\n\nexport const TREE_ICON_SIZE = 16;\nconst StyledTreeNodeIcon = styled(LafIcon)`\n  margin-left: -20px;\n  margin-right: 4px;\n  margin-top: -1px; // the svg path seems to have uneven vertical padding. This is to compensate for that.\n  flex-shrink: 0;\n  align-self: center;\n`;\n\ntype TreeNodeIconProps = ComponentProps<typeof StyledTreeNodeIcon> & {\n  selected: boolean;\n  expanded: boolean;\n};\nconst getIcon = (selected: boolean, expanded: boolean) => {\n  const modifiers = { Selected: selected };\n  if (expanded) {\n    return {\n      themePath: selected ? \"Tree.expandedSelectedIcon\" : \"Tree.expandedIcon\",\n      iconPath: { name: \"treeExpanded\", modifiers },\n    };\n  }\n  if (!expanded) {\n    return {\n      themePath: selected ? \"Tree.collapsedSelectedIcon\" : \"Tree.collapsedIcon\",\n      iconPath: { name: \"treeCollapsed\", modifiers },\n    };\n  }\n};\n\nexport function TreeNodeIcon({\n  selected,\n  expanded,\n  ...props\n}: TreeNodeIconProps) {\n  const icon = useMemo(() => getIcon(selected, expanded), [selected, expanded]);\n  return (\n    <StyledTreeNodeIcon\n      icon={icon?.iconPath}\n      themePath={icon?.themePath}\n      size={TREE_ICON_SIZE}\n      {...props}\n    />\n  );\n}\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { StyledListItem } from \"@intellij-platform/core/List/StyledListItem\";\nimport { TREE_ICON_SIZE } from \"./TreeNodeIcon\";\n\ntype StyledListItemProps = {\n  level: number;\n};\nexport const StyledTreeNode = styled(StyledListItem).attrs<StyledListItemProps>(\n  { role: \"treeitem\" }\n)<StyledListItemProps>`\n  // There are some theme properties for tree node padding (theme.ui.Tree.leftChildIndent and\n  // theme.ui.Tree.leftChildIndent), but they doesn't seem to be applicable.\n  padding-left: ${({ level }) => `${(level + 1) * TREE_ICON_SIZE + 8}px`};\n  padding-right: 0.25rem;\n  ${({ containerFocused, selected, disabled, theme }) => {\n    let backgroundColor;\n    let color = disabled\n      ? theme.color(\"*.disabledForeground\")\n      : theme.color(\n          \"Tree.foreground\" as UnknownThemeProp<\"Tree.foreground\">,\n          theme.commonColors.labelForeground\n        );\n    if (selected) {\n      if (containerFocused) {\n        color = theme.asCurrentForeground(\n          theme.color(\n            \"Tree.selectionForeground\" as UnknownThemeProp<\"Tree.selectionForeground\">\n          ) || theme.commonColors.labelSelectedForeground\n        ) /* Prioritizing \"*.selectionForeground\" over labelSelectedForeground*/;\n        backgroundColor = theme.color(\n          \"Tree.selectionBackground\" as UnknownThemeProp<\"Tree.selectionBackground\">\n        );\n      } else {\n        color = theme.color(\n          \"Tree.selectionInactiveForeground\" as UnknownThemeProp<\"Tree.selectionInactiveForeground\">,\n          color\n        );\n        backgroundColor = theme.color(\n          \"Tree.selectionBackgroundInactive\" as UnknownThemeProp<\"Tree.selectionBackgroundInactive\">\n        );\n      }\n    }\n    return {\n      backgroundColor,\n      color,\n    };\n  }}\n`;\n","import { usePress } from \"@react-aria/interactions\";\nimport { Node } from \"@react-types/shared\";\nimport React, { useContext, useRef } from \"react\";\nimport { ItemStateContext } from \"../Collections/ItemStateContext\";\nimport { TreeNodeIcon } from \"./TreeNodeIcon\";\nimport { useTreeNode } from \"./useTreeNode\";\nimport { useTreeNodeToggleButton } from \"./useTreeNodeToggleButton\";\nimport { TreeContext } from \"./TreeContext\";\nimport { StyledTreeNode } from \"@intellij-platform/core/Tree/StyledTreeNode\";\n\ntype TreeNodeProps<T> = {\n  item: Node<T>;\n  showAsFocused?: boolean;\n};\n\nexport function TreeNode<T>({ item }: TreeNodeProps<T>) {\n  const ref = useRef(null);\n  const {\n    state: {\n      collection,\n      selectionManager,\n      expandedKeys,\n      disabledKeys,\n      toggleKey,\n    },\n    focused: containerFocused,\n    onActionRef: { current: onAction },\n  } = useContext(TreeContext)!;\n\n  const isSelected = selectionManager.isSelected(item.key);\n  const expanded = expandedKeys.has(item.key);\n  const isDisabled = disabledKeys.has(item.key);\n\n  const { pressProps: togglePressProps } = usePress({\n    ...useTreeNodeToggleButton({\n      key: item.key,\n      collection,\n      selectionManager,\n      toggleKey,\n    }).treeNodeToggleButtonProps,\n    isDisabled,\n  });\n\n  const { treeNodeProps } = useTreeNode({\n    item,\n    ref,\n    toggleKey,\n    onAction,\n    selectionManager,\n    disabled: isDisabled,\n  });\n\n  /**\n   * NOTE: TreeNode intentionally is not designed in a recursive way for two main reasons:\n   * - Performance\n   * - Better support for virtualization\n   * So instead of rendering TreeNode for childNodes, if the node is expanded, we expect parent\n   * to render children. It's not a layout issue since we don't need any nesting in terms of\n   * layout of nested items. In terms of layout, a tree will be rendered similar to a flat list,\n   * but with more indentation for nested nodes.\n   */\n  return (\n    <>\n      <StyledTreeNode\n        ref={ref}\n        {...treeNodeProps}\n        containerFocused={containerFocused}\n        disabled={isDisabled}\n        selected={isSelected}\n        aria-disabled={isDisabled}\n        aria-selected={isSelected}\n        level={item.level}\n      >\n        {[...item.childNodes].length > 0 && (\n          <TreeNodeIcon\n            selected={isSelected}\n            expanded={expanded}\n            {...togglePressProps}\n          />\n        )}\n        <ItemStateContext.Provider\n          value={{\n            isDisabled,\n            isSelected,\n            isContainerFocused: containerFocused,\n            node: item,\n          }}\n        >\n          {item.rendered}\n        </ItemStateContext.Provider>\n      </StyledTreeNode>\n    </>\n  );\n}\n","import { Key } from \"react\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { PressProps } from \"@react-aria/interactions\";\n\nexport function useTreeNodeToggleButton<T>({\n  collection,\n  toggleKey,\n  selectionManager,\n  key,\n}: { key: Key } & Pick<\n  TreeState<T>,\n  \"collection\" | \"toggleKey\" | \"selectionManager\"\n>): { treeNodeToggleButtonProps: PressProps } {\n  return {\n    treeNodeToggleButtonProps: {\n      preventFocusOnPress: true,\n      onPress: () => {\n        toggleKey(key);\n\n        // The rest is for deselecting selected descendants and selecting the toggled node, if there\n        // is at least one of such currently selected descendants. This is the exact behavior\n        // of Tree in Intellij Platform, and hence implemented here.\n        const selectedDescendantKeys = [\n          ...selectionManager.selectedKeys,\n        ].filter((key: Key) => {\n          let parentKey = collection.getItem(key)?.parentKey;\n          while (parentKey) {\n            if (parentKey === key) {\n              return true;\n            }\n            parentKey = collection.getItem(parentKey)?.parentKey;\n          }\n          return false;\n        });\n        selectedDescendantKeys.forEach((key) =>\n          selectionManager.toggleSelection(key)\n        );\n        // if any of the descendants are selected\n        if (\n          !selectionManager.isSelected(key) &&\n          selectedDescendantKeys.length > 0\n        ) {\n          selectionManager.toggleSelection(key);\n        }\n      },\n    },\n  };\n}\n","import { usePress } from \"@react-aria/interactions\";\nimport { useSelectableItem } from \"@intellij-platform/core/selection\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { SelectionManager } from \"@react-stately/selection\";\nimport { Node } from \"@react-types/shared\";\nimport { Key, RefObject } from \"react\";\n\nexport function useTreeNode<T>({\n  item,\n  ref,\n  selectionManager,\n  disabled,\n  toggleKey,\n  onAction,\n}: {\n  item: Node<T>;\n  ref: RefObject<HTMLElement>;\n  disabled: boolean;\n  toggleKey: (key: Key) => void;\n  onAction?: (key: Key) => void;\n  selectionManager: SelectionManager;\n}) {\n  const {\n    pressProps: { onKeyDown, ...pressProps },\n  } = usePress({\n    ...useSelectableItem({\n      key: item.key,\n      ref,\n      selectionManager,\n      isVirtualized: false,\n    }).itemProps,\n    isDisabled: disabled,\n    preventFocusOnPress: false,\n  });\n\n  const onDoubleClick = () => {\n    if ([...item.childNodes].length > 0) {\n      toggleKey(item.key);\n    } else {\n      onAction?.(item.key);\n    }\n  };\n  const ariaProps = {\n    role: \"treeitem\",\n  };\n\n  return {\n    treeNodeProps: mergeProps(pressProps, { onDoubleClick }, ariaProps),\n  };\n}\n","import { Key, RefObject, useEffect, useMemo, useRef, useState } from \"react\";\nimport {\n  DOMProps,\n  KeyboardDelegate,\n  KeyboardEvent,\n  Node,\n} from \"@react-types/shared\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { useFocusWithin, useKeyboard } from \"@react-aria/interactions\";\nimport { filterDOMProps, mergeProps } from \"@react-aria/utils\";\nimport { useCollator } from \"@react-aria/i18n\";\nimport { useSelectableCollection } from \"@intellij-platform/core/selection\";\nimport { TreeKeyboardDelegate } from \"./TreeKeyboardDelegate\";\nimport { useCollectionAutoScroll } from \"../Collections/useCollectionAutoScroll\";\nimport { useLatest } from \"@intellij-platform/core/utils/useLatest\";\nimport { TreeContextType } from \"./TreeContext\";\nimport { hasAnyModifier } from \"@intellij-platform/core/utils/keyboard-utils\";\nimport { FocusEvents } from \"@react-types/shared/src/events\";\nimport { FocusStrategy } from \"@react-types/shared/src/selection\";\nimport { groupBy } from \"ramda\";\nimport {\n  CollectionFocusProxyProps,\n  useCollectionFocusProxy,\n} from \"@intellij-platform/core/Collections\";\n\nexport interface SelectableTreeProps<T>\n  extends DOMProps,\n    Omit<FocusEvents, \"onFocusChange\">,\n    CollectionFocusProxyProps {\n  isVirtualized?: boolean;\n  keyboardDelegate?: KeyboardDelegate;\n  /**\n   * Called when the action associated with a leaf tree node should be taken.\n   * The exact UI interaction is abstracted away, but it's either Enter key or double click.\n   */\n  onAction?: (key: Key) => void;\n  onNodeKeyDown?: (event: KeyboardEvent, node: Node<T>) => void;\n\n  allowEmptySelection?: boolean;\n\n  autoFocus?: boolean | FocusStrategy;\n\n  showAsFocused?: boolean;\n}\n\n/**\n * NOTE: at the time of writing this hook, react-aria didn't have support for Tree. When useTree is implemented in\n * react-aria, it makes sense to refactor this and use that. There will still be something on top of it here.\n */\nexport function useSelectableTree<T>(\n  {\n    onAction,\n    onFocus,\n    onBlur,\n    autoFocus,\n    showAsFocused,\n    focusProxyRef,\n    ...props\n  }: SelectableTreeProps<T>,\n  state: TreeState<T>,\n  ref: RefObject<HTMLElement>\n) {\n  const domProps = filterDOMProps(props);\n  const collator = useCollator({ usage: \"search\", sensitivity: \"base\" });\n\n  const [focused, setFocused] = useState(false);\n  const {\n    collectionProps: {\n      // preventDefault in onMouseDown prevents collection from getting focused.\n      // Maybe it should be removed from useSelectableCollection, now that it lives here\n      onMouseDown,\n      onKeyDown: selectionKeyDown,\n      ...collectionProps\n    },\n  } = useSelectableCollection({\n    ref,\n    selectionManager: state.selectionManager,\n    disallowEmptySelection: !props.allowEmptySelection,\n    selectOnFocus: true,\n    autoFocus,\n    keyboardDelegate: useMemo(\n      () =>\n        props.keyboardDelegate ||\n        new TreeKeyboardDelegate(\n          state.collection,\n          state.disabledKeys,\n          ref,\n          collator\n        ),\n      [state.collection, state.disabledKeys, props.keyboardDelegate]\n    ),\n  });\n\n  useCollectionFocusProxy({\n    collectionRef: ref,\n    state,\n    onAction,\n    focusProxyRef,\n  });\n\n  const { focusWithinProps } = useFocusWithin({\n    onFocusWithinChange: setFocused,\n  });\n\n  useCollectionAutoScroll(\n    {\n      isVirtualized: props.isVirtualized,\n      selectionManager: state.selectionManager,\n    },\n    ref\n  );\n\n  const onKeyDown = (event: KeyboardEvent) => {\n    const focusedKey = state.selectionManager.focusedKey;\n    const focusedItem = focusedKey\n      ? state.collection.getItem(focusedKey)\n      : null;\n    if (focusedItem) {\n      const isExpandable = Boolean(focusedItem?.hasChildNodes);\n      const expanded = focusedKey != null && state.expandedKeys.has(focusedKey);\n      const isDisabled =\n        focusedKey != null && state.disabledKeys.has(focusedKey);\n      if (isDisabled) {\n        event.continuePropagation();\n        return;\n      }\n      props?.onNodeKeyDown?.(event, focusedItem);\n      const shouldToggle =\n        !hasAnyModifier(event) &&\n        (event.key === \"Enter\" ||\n          (event.key === \"ArrowLeft\" && expanded) ||\n          (event.key === \"ArrowRight\" && !expanded));\n      if (isExpandable && shouldToggle && focusedKey != null) {\n        event.preventDefault();\n        state.toggleKey(focusedKey);\n        return;\n      } else if (event.key === \"Enter\" && focusedKey != null) {\n        onAction?.(focusedKey);\n        return;\n      }\n    }\n    // selectionKeyDown currently doesn't report back if it handled the event or not. We could have conditionally\n    // continued propagation if the event was not handled. Then we could change Speed Search impl to only handle\n    // inputs when the propagation is not prevented.\n    // Also, selectionKeyDown is not accurate in handling actions like \"select all\". e.g. it takes 'cmd+shift+a' too,\n    // as select all which can conflict with action system. So we don't call it if there are multiple modifiers.\n    const hasAtMostOneModifier =\n      [event.metaKey, event.ctrlKey, event.shiftKey, event.altKey].filter(\n        (i) => i\n      ).length < 2;\n    if (hasAtMostOneModifier) {\n      selectionKeyDown?.(event);\n    }\n    event.continuePropagation();\n  };\n  const { keyboardProps } = useKeyboard({\n    onKeyDown,\n  });\n\n  //////////////////////////////// providing context value ////////////////////////////////\n  const onActionRef = useLatest(onAction);\n\n  const {\n    selectionManager,\n    collection,\n    expandedKeys,\n    disabledKeys,\n    toggleKey,\n  } = state;\n  const treeContext = useMemo<TreeContextType<T>>(\n    () => ({\n      state: {\n        collection,\n        selectionManager,\n        expandedKeys,\n        disabledKeys,\n        toggleKey,\n      },\n      focused: Boolean(focused || showAsFocused),\n      onActionRef,\n    }),\n    [\n      selectionManager,\n      collection,\n      expandedKeys,\n      disabledKeys,\n      toggleKey,\n      focused,\n      showAsFocused,\n      onActionRef,\n    ]\n  );\n  ////////////////////////////////////////////////////////////////////////////////////////\n  useSelectParentOfRemovedSelectedNode(state);\n\n  return {\n    // order of merging here is important. navigation handling should precede selection handling\n    treeProps: mergeProps(\n      focusWithinProps,\n      collectionProps,\n      keyboardProps,\n      domProps,\n      { onFocus, onBlur, role: \"tree\" }\n    ),\n    treeContext,\n    focused,\n  };\n}\n\n/**\n * When a selected node is removed from the tree, selects the parent of the removed node\n * if no other node is selected.\n *\n * Note: this behavior is observed in a couple of tree views, including project files tree.\n * There could be an option for disabling/enabling it, if use cases comes up in future\n * where this behavior causes issues.\n */\nconst useSelectParentOfRemovedSelectedNode = (state: TreeState<unknown>) => {\n  const previousCollectionRef = useRef(state.collection);\n  useEffect(() => {\n    if (state.selectionManager.rawSelection !== \"all\") {\n      const keys = [...state.collection.getKeys()];\n\n      const { invalid = [], valid = [] } = groupBy(\n        (selectedKey) => (keys.includes(selectedKey) ? \"valid\" : \"invalid\"),\n        [...state.selectionManager.selectedKeys]\n      );\n      if (valid.length === 0 && invalid.length > 0) {\n        for (let invalidKey of invalid) {\n          let key: Key | undefined = invalidKey;\n          while (key != undefined) {\n            if (keys.includes(key)) {\n              state.selectionManager.setSelectedKeys(valid.concat(key));\n              state.selectionManager.setFocusedKey(key);\n              return;\n            }\n            key =\n              previousCollectionRef.current.getItem(key)?.parentKey ??\n              undefined;\n          }\n        }\n      }\n    }\n    previousCollectionRef.current = state.collection;\n  }, [state.collection]);\n};\n","import { ForwardedRef, Key, RefObject, useImperativeHandle } from \"react\";\nimport { useLatest } from \"@intellij-platform/core/utils/useLatest\";\nimport { TreeState } from \"./useTreeState\";\nimport { scrollIntoView } from \"@react-aria/utils\";\nimport { getItemElement } from \"@intellij-platform/core/Collections/getItemElement\";\n\n// TODO(api): rename to Tree or ...?\nexport interface TreeRefValue {\n  focus(key: Key): void;\n  replaceSelection(key: Key): void;\n\n  /**\n   * Extends selection to all siblings of the currently focused node.\n   */\n  expandSelection(): void;\n  /**\n   * Shrinks selection towards the currently focused node.\n   */\n  shrinkSelection(): void;\n\n  expandAll(): void;\n  collapseAll(): void;\n}\n\n/**\n * Sets up a tree ref for imperatively working with a treeview from outside.\n * For imperatively focusing, expanding to a specific key, etc.\n */\nexport function useTreeRef<T extends {}>(\n  {\n    state,\n    scrollRef,\n  }: {\n    state: TreeState<T>;\n    scrollRef: RefObject<HTMLElement>;\n  },\n  forwardedRef?: ForwardedRef<TreeRefValue>\n) {\n  const latestState = useLatest(state);\n\n  useImperativeHandle(\n    forwardedRef,\n    () => {\n      return {\n        replaceSelection: (key: Key) => {\n          latestState.current.selectionManager.replaceSelection(key);\n        },\n        /**\n         * Moves focus to the tree and into a given key, scrolling it into view.\n         * @param key\n         */\n        focus: (key: Key) => {\n          const selectionManager = latestState.current.selectionManager;\n          selectionManager.setFocused(true);\n          selectionManager.setFocusedKey(key);\n\n          // When the focus is going to an item not currently rendered due to virtualization,\n          // the virtualizer will make sure to render it (through `persistedKeys` being set),\n          // but it requires a rerender.\n          // setTimeout is used in lack of a cleaner solution.\n          // It's covered in an e2e test, so refactoring attempts can be done with confidence.\n          setTimeout(() => {\n            const element = getItemElement(scrollRef, key);\n            if (scrollRef.current && element) {\n              // When focusedKey is changed, useSelectableCollection no longer auto scrolls\n              // to the new focused key.\n              // Not sure what would be a valid case of focused item changing, but\n              // scrolling into that item being unwanted behavior, especially\n              // with selectOnFocus behavior being on by default in Intellij Platform\n              // components.\n              // It might be worth opening a discussion or issue in React Spectrum.\n              scrollIntoView(scrollRef.current, element);\n            } else {\n              console.error(\n                \"could not find element to scroll into\",\n                scrollRef,\n                element\n              );\n            }\n          });\n        },\n        expandSelection() {\n          latestState.current.selectionManager.expandSelection();\n        },\n        shrinkSelection() {\n          latestState.current.selectionManager.shrinkSelection();\n        },\n        expandAll() {\n          latestState.current.setExpandedKeys(\n            latestState.current.collection.getAllExpandableKeys()\n          );\n        },\n        collapseAll() {\n          const {\n            collection: tree,\n            setExpandedKeys,\n            selectionManager,\n          } = latestState.current;\n          const focusedKey = selectionManager.focusedKey;\n          setExpandedKeys(new Set());\n\n          // Find the root node that is a grandparent of focused node, and focus/select it.\n          // NOTE: this behaviour of updating selection when nodes are collapsed is something to be fixed in general,\n          // and then this custom logic here would be not necessary.\n          if (focusedKey && !tree.rootKeys.includes(focusedKey)) {\n            let item = tree.getItem(focusedKey);\n            while (item?.parentKey != null) {\n              item = tree.getItem(item.parentKey);\n            }\n            if (item) {\n              selectionManager.setFocusedKey(item.key);\n              if (selectionManager.isSelected(focusedKey)) {\n                selectionManager.select(item.key);\n              }\n            }\n          }\n        },\n      };\n    },\n    []\n  );\n}\n","import { usePrevious } from \"@intellij-platform/core/utils/usePrevious\";\nimport { CacheInvalidationContext } from \"./Item\";\n\nexport interface CollectionCacheInvalidationProps {\n  /**\n   * Defines cache invalidation policy for items. By default, the render result is cached based on the item objects.\n   * This is equivalent of passing false or not passing anything for `cacheInvalidation`. If `true` is passed, it will\n   * always invalidate the render result, causing the collection to be recreated on each re-render. It can\n   * considerably affect performance in large collections. in addition to boolean value, an object with the list of\n   * invalidators can also be passed. renderer function is called each time any of the invalidators are changed.\n   * Think of it as [dependency array in react hooks](https://reactjs.org/docs/hooks-reference.html#usememo). Except\n   * that the length of the array can also safely change.\n   */\n  cacheInvalidation?: boolean | { invalidators: ReadonlyArray<unknown> };\n}\n\n/**\n * Allows cache invalidation options based on input props, for components that use collection\n */\nexport const useCollectionCacheInvalidation = ({\n  cacheInvalidation,\n}: CollectionCacheInvalidationProps): CacheInvalidationContext => {\n  const invalidators =\n    typeof cacheInvalidation === \"object\" ? cacheInvalidation.invalidators : [];\n  const lastInvalidators = usePrevious(invalidators);\n\n  const invalidated =\n    typeof cacheInvalidation === \"object\"\n      ? cacheInvalidation.invalidators.length !== lastInvalidators.length ||\n        cacheInvalidation.invalidators.some(\n          (anInvalidator, index) => anInvalidator !== lastInvalidators[index]\n        )\n      : cacheInvalidation;\n\n  return {\n    invalidated,\n  };\n};\n","//@ts-nocheck\n/**\n * Not exported from @react-stately/tree, but needed in the custom implementation of useTreeState\n */\n\nimport { Key } from \"react\";\nimport { Collection, Node } from \"@react-types/shared\";\n\nexport class TreeCollection<T> implements Collection<Node<T>> {\n  private keyMap: Map<Key, Node<T>> = new Map();\n  private iterable: Iterable<Node<T>>;\n  private firstKey: Key;\n  private lastKey: Key;\n\n  constructor(\n    nodes: Iterable<Node<T>>,\n    { expandedKeys }: { expandedKeys?: Set<Key> } = {}\n  ) {\n    this.iterable = nodes;\n    expandedKeys = expandedKeys || new Set();\n\n    let visit = (node: Node<T>) => {\n      this.keyMap.set(node.key, node);\n\n      if (\n        node.childNodes &&\n        (node.type === \"section\" || expandedKeys.has(node.key))\n      ) {\n        for (let child of node.childNodes) {\n          visit(child);\n        }\n      }\n    };\n\n    for (let node of nodes) {\n      visit(node);\n    }\n\n    let last: Node<T>;\n    let index = 0;\n    for (let [key, node] of this.keyMap) {\n      if (last) {\n        last.nextKey = key;\n        node.prevKey = last.key;\n      } else {\n        this.firstKey = key;\n        node.prevKey = undefined;\n      }\n\n      if (node.type === \"item\") {\n        node.index = index++;\n      }\n\n      last = node;\n\n      // Set nextKey as undefined since this might be the last node\n      // If it isn't the last node, last.nextKey will properly set at start of new loop\n      last.nextKey = undefined;\n    }\n\n    this.lastKey = last?.key;\n  }\n\n  *[Symbol.iterator]() {\n    yield* this.iterable;\n  }\n\n  get size() {\n    return this.keyMap.size;\n  }\n\n  getKeys() {\n    return this.keyMap.keys();\n  }\n\n  getKeyBefore(key: Key) {\n    let node = this.keyMap.get(key);\n    return node?.prevKey ?? null;\n  }\n\n  getKeyAfter(key: Key) {\n    let node = this.keyMap.get(key);\n    return node?.nextKey ?? null;\n  }\n\n  getFirstKey() {\n    return this.firstKey;\n  }\n\n  getLastKey() {\n    return this.lastKey;\n  }\n\n  getItem(key: Key) {\n    return this.keyMap.get(key) ?? null;\n  }\n\n  at(idx: number) {\n    const keys = [...this.getKeys()];\n    return this.getItem(keys[idx]);\n  }\n}\n","import { Node } from \"@react-types/shared\";\nimport { Key } from \"react\";\n\n/**\n * given a node, returns keys of all consecutive single children\n */\nexport function getSingleChildrenKeys<T>(\n  node: Node<T> | null | undefined\n): Key[] {\n  return getSingleChildrenKeysRecursive(node, []);\n}\n\nfunction getSingleChildrenKeysRecursive<T>(\n  node: Node<T> | null | undefined,\n  previousKeys: Key[]\n): Key[] {\n  if (!node) {\n    return [];\n  }\n  const childNodesIterator: Iterator<\n    Node<T>,\n    Node<T> | undefined\n  > = node.childNodes[Symbol.iterator]();\n  const { value: firstChild, done } = childNodesIterator.next();\n  const noMoreChildren = done || childNodesIterator.next().value == null;\n  if (firstChild != null && noMoreChildren && isExpandable(firstChild)) {\n    return getSingleChildrenKeysRecursive(\n      firstChild,\n      previousKeys.concat((firstChild as Node<T>).key)\n    );\n  }\n  return previousKeys;\n}\n\nconst isExpandable = <T>(node: Node<T>) =>\n  node.hasChildNodes || !isEmptyIterable(node.childNodes);\n\nfunction isEmptyIterable(iterable: Iterable<unknown> | undefined | null) {\n  for (const _ of iterable || []) {\n    // eslint-disable-line no-unused-vars, no-unreachable-loop\n    return false;\n  }\n  return true;\n}\n","import {\n  MultipleSelectionState,\n  SelectionManager,\n  SelectionManagerOptions,\n} from \"@react-stately/selection\";\nimport { Collection, Node } from \"@react-types/shared\";\nimport React, { Key } from \"react\";\n\nexport class TreeSelectionManager extends SelectionManager {\n  readonly collection: Collection<Node<unknown>>;\n\n  constructor(\n    collection: Collection<Node<unknown>>,\n    state: MultipleSelectionState,\n    options?: SelectionManagerOptions\n  ) {\n    super(collection, state, options);\n    this.collection = collection;\n  }\n\n  expandSelection() {\n    if (this.focusedKey) {\n      const node = this.collection.getItem(this.focusedKey);\n      if (node) {\n        const { expandKeys } = this.getExpandAndShrinkKeys(node);\n        if (expandKeys.length > 0) {\n          this.setSelectedKeys([...this.selectedKeys, ...expandKeys]);\n        }\n      }\n    }\n  }\n  shrinkSelection() {\n    if (this.focusedKey) {\n      const node = this.collection.getItem(this.focusedKey);\n      if (node) {\n        const { shrinkKeys } = this.getExpandAndShrinkKeys(node);\n        if (shrinkKeys.length > 0) {\n          this.setSelectedKeys(\n            [...this.selectedKeys].filter((key) => !shrinkKeys.includes(key))\n          );\n        }\n      }\n    }\n  }\n\n  private getExpandAndShrinkKeys(node: Node<unknown>) {\n    return this.recursivelyGetExpandAndShrinkKeys(\n      node,\n      [...this.collection.getKeys()],\n      null\n    );\n  }\n  /**\n   * Starting from a node, traverses the tree up, until it reaches the root of the fully selected subtree that includes\n   * the starting node. The root itself may or may not be selected. Returns:\n   * - keys to be added to selection, when expanding selection\n   * - keys to be removed from selection, when shrinking selection\n   */\n  private recursivelyGetExpandAndShrinkKeys(\n    node: Node<unknown>,\n    keys: Array<Key>,\n    previousChild: Key | null\n  ): { expandKeys: Key[]; shrinkKeys: Key[] } {\n    const parent =\n      node && node.parentKey ? this.collection.getItem(node.parentKey) : null;\n    const newKeys = keys.filter((key) => key !== previousChild);\n    const parentDescendants = parent\n      ? getAllDescendants(parent, newKeys).map(({ key }) => key)\n      : this.getAllRoots().flatMap((key) => {\n          const item = this.collection.getItem(key);\n          return key !== node.key && item\n            ? getAllDescendants(item, newKeys)\n                .map(({ key }) => key)\n                .concat(key)\n            : [];\n        });\n    if (parent && parentDescendants.every((key) => this.isSelected(key))) {\n      return this.recursivelyGetExpandAndShrinkKeys(parent, keys, node.key);\n    }\n    const descendants = getAllDescendants(\n      node,\n      keys.filter((key) => key !== previousChild)\n    ).map(({ key }) => key);\n\n    return {\n      expandKeys: descendants.some((key) => !this.isSelected(key))\n        ? descendants\n        : !this.isSelected(node.key)\n        ? [node.key]\n        : parentDescendants,\n      shrinkKeys:\n        parentDescendants.length > 0 &&\n        parentDescendants.every((key) => this.isSelected(key))\n          ? parentDescendants\n          : this.isSelected(node.key) && previousChild\n          ? [node.key]\n          : descendants.filter((key) => this.isSelected(key)),\n    };\n  }\n\n  private getAllRoots() {\n    return [...this.collection.getKeys()].filter(\n      (key) => this.collection.getItem(key)?.parentKey == null\n    );\n  }\n}\n\nfunction getAllDescendants<T>(\n  node: Node<T>,\n  stopKeys: Array<React.Key>\n): Node<T>[] {\n  const childNodes = (node.hasChildNodes ? [...node.childNodes] : []).filter(\n    (node) => stopKeys.includes(node.key)\n  );\n  return node.hasChildNodes\n    ? childNodes.concat(\n        childNodes.map((node) => getAllDescendants(node, stopKeys)).flat()\n      )\n    : [];\n}\n","import {\n  Collection,\n  CollectionStateBase,\n  Expandable,\n  MultipleSelection,\n  Node,\n} from \"@react-types/shared\";\nimport { TreeState as AriaTreeState } from \"@react-stately/tree\";\nimport { Key, useCallback, useEffect, useMemo } from \"react\";\nimport { useMultipleSelectionState } from \"@react-stately/selection\";\nimport { useCollection } from \"@react-stately/collections\";\nimport { useControlledState } from \"@react-stately/utils\";\nimport {\n  CollectionCacheInvalidationProps,\n  useCollectionCacheInvalidation,\n} from \"@intellij-platform/core/Collections/useCollectionCacheInvalidation\";\nimport { TreeCollection as _TreeCollection } from \"./__copied__TreeCollection\";\nimport { getSingleChildrenKeys } from \"./getSingleChildrenKeys\";\nimport { TreeSelectionManager } from \"@intellij-platform/core/Tree/TreeSelectionManager\";\n\nexport class TreeCollection<T> extends _TreeCollection<T> {\n  public readonly rootKeys: Key[];\n  constructor(\n    nodes: Iterable<Node<T>>,\n    { expandedKeys }: { expandedKeys: Set<Key> }\n  ) {\n    super(nodes, { expandedKeys });\n    this.rootKeys = Array.from(nodes).map(({ key }) => key);\n  }\n\n  getAllExpandableKeys(): Set<Key> {\n    const rootNodes = this.rootKeys\n      .map((key) => this.getItem(key))\n      .filter((i) => i != null);\n    return this.recursivelyAddExpandableKeys(rootNodes, new Set<Key>());\n  }\n\n  private recursivelyAddExpandableKeys(\n    nodes: Iterable<Node<T>>,\n    result: Set<Key>\n  ) {\n    for (const node of nodes) {\n      if (node?.hasChildNodes) {\n        result.add(node.key);\n        this.recursivelyAddExpandableKeys(node.childNodes, result);\n      }\n    }\n    return result;\n  }\n}\nexport interface TreeProps<T>\n  extends CollectionStateBase<T, TreeCollection<T>>,\n    Expandable,\n    MultipleSelection,\n    CollectionCacheInvalidationProps {\n  childExpansionBehaviour?: \"multi\" | \"single\";\n}\n\nexport interface TreeState<T> extends AriaTreeState<T> {\n  selectionManager: TreeSelectionManager;\n  collection: TreeCollection<T>;\n}\n/**\n * Provides state management for tree-like components. Handles building a collection\n * of items from props, item expanded state, and manages multiple selection state.\n *\n * Similar to (and initially copied from) useTreeState from @react-stately/tree, but with the following changes:\n * - Different onToggle implementation with two adjustments to match Intellij Platform:\n *   - Collapsing a key collapses all descendants as well.\n *   - Expanding a single-child node will recursively expand all single-child descendants.\n *   Couldn't be done with a wrapper in a clean and optimal way. Access to setExpandedKey is not provided. We would need\n *   to either maintain a new state for expanded keys and ignore the one returned from the wrapped hook, or\n *   inefficiently call the returned `toggleKey` function many times.\n * - Supports collection invalidation via CollectionCacheInvalidationProps\n *   Perhaps not the most important addition, but not possible to be done via a wrapper.\n * - Uses TreeSelectionManager instead of the default SelectionManager, which implements expand/shrink selection.\n *   Could be done in a wrapper, with a little hack. Would need to replace selection manager.\n * - returned `collection` is of type `TreeCollection` (which is an improved version of react-stately `TreeCollection`),\n *   instead of the more generic `Collection`.\n */\nexport function useTreeState<T extends object>({\n  childExpansionBehaviour = \"multi\",\n  ...props\n}: TreeProps<T>): TreeState<T> {\n  let [expandedKeys, setExpandedKeys] = useControlledState(\n    props.expandedKeys ? new Set(props.expandedKeys) : undefined!,\n    props.defaultExpandedKeys ? new Set(props.defaultExpandedKeys) : new Set(),\n    props.onExpandedChange!\n  );\n\n  let selectionState = useMultipleSelectionState({\n    ...props,\n    selectionBehavior: \"replace\",\n  });\n  let disabledKeys = useMemo(\n    () => (props.disabledKeys ? new Set(props.disabledKeys) : new Set<Key>()),\n    [props.disabledKeys]\n  );\n\n  const context = useCollectionCacheInvalidation(props);\n\n  let tree = useCollection<T, TreeCollection<T>>(\n    props,\n    useCallback(\n      (nodes) => new TreeCollection(nodes, { expandedKeys }),\n      [expandedKeys]\n    ),\n    context\n  );\n\n  const selectionManager = new TreeSelectionManager(\n    tree as Collection<Node<T>>,\n    selectionState\n  );\n\n  // Reset focused key if that item is deleted from the collection.\n  useEffect(() => {\n    if (\n      selectionState.focusedKey != null &&\n      !tree.getItem(selectionState.focusedKey)\n    ) {\n      selectionState.setFocusedKey(null);\n    }\n  }, [tree, selectionState.focusedKey]);\n\n  const toggleKey = (key: Key) => {\n    let newExpandedKeys = toggleTreeNode(\n      tree as Collection<Node<T>>,\n      expandedKeys,\n      key\n    );\n    if (childExpansionBehaviour === \"single\") {\n      const expandedSiblings = getSiblings(tree, key).filter(\n        (aKey) => aKey !== key && expandedKeys.has(aKey)\n      );\n      newExpandedKeys = expandedSiblings.reduce((expandedKeys, expandedKey) => {\n        return toggleTreeNode(\n          tree as Collection<Node<T>>,\n          expandedKeys,\n          expandedKey\n        );\n      }, newExpandedKeys);\n    }\n    setExpandedKeys(newExpandedKeys);\n  };\n\n  return {\n    collection: tree,\n    expandedKeys,\n    disabledKeys,\n    toggleKey,\n    selectionManager,\n    setExpandedKeys,\n  };\n}\n\nfunction getChildItems<T>(node: Node<T>): Node<T>[] {\n  const childNodes = [...(node.childNodes || [])];\n  const childItems = childNodes.filter(({ type }) => type === \"item\");\n  const sectionItems = childNodes.filter(({ type }) => type === \"section\");\n\n  return childItems.concat(sectionItems.flatMap(getChildItems));\n}\n\nfunction getRootItemKeys(tree: TreeCollection<unknown>) {\n  return tree.rootKeys\n    .map((key) => tree.getItem(key))\n    .filter((i) => i != null)\n    .flatMap(getChildItems)\n    .map(({ key }) => key);\n}\n/**\n * Returns the siblings of an item in tree, ignoring sections.\n * Disclaimer: The code is done quick and dirty and in a rush. Unpleasant code, good candidate for refactoring :D\n */\nfunction getSiblings(tree: TreeCollection<unknown>, key: Key): Key[] {\n  const parentKey = tree.getItem(key)?.parentKey;\n  if (!parentKey) {\n    return [...tree.rootKeys].concat(getRootItemKeys(tree));\n  }\n  let parent = parentKey ? tree.getItem(parentKey) : null;\n  if (parent?.type === \"item\") {\n    return getChildItems(parent).map(({ key }) => key);\n  }\n  const siblings: Key[] = [];\n  while (parent) {\n    siblings.push(...getChildItems(parent).map(({ key }) => key));\n    if (parent.type === \"section\") {\n      if (parent.parentKey) {\n        parent = tree.getItem(parent.parentKey);\n      } else {\n        siblings.push(...getRootItemKeys(tree));\n        parent = null;\n      }\n    } else {\n      parent = null;\n    }\n  }\n  return Array.from(new Set(siblings));\n}\nfunction toggleTreeNode(\n  tree: Collection<Node<unknown>>,\n  expandedKeys: Set<Key>,\n  key: Key\n): Set<Key> {\n  // toggling a non-expandable node should be no-op\n  if (!expandedKeys.has(key) && !tree.getItem(key)?.hasChildNodes) {\n    return expandedKeys;\n  }\n  const newKeys = toggleKey(expandedKeys, key);\n  // In Intellij impl, when a node is collapsed, all descendants are also collapsed. In other words, keys that are\n  // not a part of the list of visible nodes, will be excluded from the expanded keys, with the toggle action.\n  for (const aKey of newKeys) {\n    if (tree.getItem(aKey) == null) {\n      newKeys.delete(aKey);\n    }\n  }\n\n  // If we are toggling it open, expand all expandable single-child items\n  if (newKeys.has(key)) {\n    for (const aKey of getSingleChildrenKeys(tree.getItem(key))) {\n      newKeys.add(aKey);\n    }\n  }\n  return newKeys;\n}\n\nfunction toggleKey(set: Set<Key>, key: Key): Set<Key> {\n  let res = new Set(set);\n  if (res.has(key)) {\n    res.delete(key);\n  } else {\n    res.add(key);\n  }\n\n  return res;\n}\n","import { HTMLAttributes, Key, useMemo } from \"react\";\nimport { LayoutNode } from \"@react-stately/layout\";\nimport { Node } from \"@react-types/shared\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { VirtualizerProps } from \"@react-aria/virtualizer\";\nimport {\n  InvalidationContext,\n  LayoutInfo,\n  Rect,\n  Size,\n} from \"@react-stately/virtualizer\";\nimport { VariableWidthListLayout } from \"@intellij-platform/core/VariableWidthListLayout\";\n\nconst DEFAULT_HEIGHT = 20;\n\nclass FlattenedTreeLayout<T> extends VariableWidthListLayout<T> {\n  padding = 0;\n  buildChild(\n    node: Node<T>,\n    x: number,\n    y: number,\n    parentKey: Key | null\n  ): LayoutNode {\n    const layoutNode = super.buildChild(node, x, y, parentKey);\n    if (\n      node.parentKey &&\n      this.collection.getItem(node.parentKey)?.type === \"item\"\n    ) {\n      layoutNode.layoutInfo.parentKey = null;\n    }\n    return layoutNode;\n  }\n\n  doBuildCollection(y = 0): LayoutNode[] {\n    /**\n     * The only difference here is that in tree, we need to use getKeys() to get the keys for a flattened list of items\n     * that are currently visible. With this difference only, things seem to work as expected, but sections are not\n     * tested, and not even sure if they would be applicable for Tree view.\n     * Diff compared to ListLayout#BuildCollection:\n     * -        for (let node of collection) {\n     * +        const visibleNodes = [...this.collection.getKeys()].map(key => this.collection.getItem(key).filter(i => i!=null));\n     * +        for (let node of visibleNodes) {\n     * This needs to be maintained with version upgrades, until TreeLayout is supported:\n     * https://github.com/adobe/react-spectrum/issues/2396\n     *\n     * UPDATE: another minor change compared to the update made on @react-stately/layout@4.1.1:\n     * collection.size is changed to visibleNodes.length\n     */\n    let collection = this.virtualizer!.collection;\n    let skipped = 0;\n    let nodes: LayoutNode[] = [];\n    const visibleNodes = [...collection.getKeys()]\n      .map((key) => collection.getItem(key))\n      .filter((i) => i != null);\n    for (let node of visibleNodes) {\n      let rowHeight =\n        this.rowHeight ?? this.estimatedRowHeight ?? DEFAULT_HEIGHT;\n\n      // Skip rows before the valid rectangle unless they are already cached.\n      if (\n        node.type === \"item\" &&\n        y + rowHeight < this.requestedRect.y &&\n        !this.isValid(node, y)\n      ) {\n        y += rowHeight;\n        skipped++;\n        continue;\n      }\n\n      let layoutNode = this.buildChild(node, 0, y, null);\n      y = layoutNode.layoutInfo.rect.maxY;\n      nodes.push(layoutNode);\n\n      if (node.type === \"item\" && y > this.requestedRect.maxY) {\n        y += (visibleNodes.length - (nodes.length + skipped)) * rowHeight;\n        break;\n      }\n    }\n    this.contentSize = new Size(this.virtualizer!.visibleRect.width, y);\n    return nodes;\n  }\n\n  protected shouldInvalidateEverything(\n    invalidationContext: InvalidationContext<any>\n  ): boolean {\n    return (\n      super.shouldInvalidateEverything(invalidationContext) ||\n      // When expanded keys changes, the collection changes.\n      // Without invalidating everything in this case, there can be an edge\n      // case of the persisted key (focusedKey) not being rendered because of\n      // bad cached layout info.\n      // It's not clear if it's a bug in ListLayout or something else, but the\n      // workaround here is covered in one of the e2e tests, so removing\n      // it can be tried in future upgrades of react-aria deps.\n      this.lastCollection !== this.collection\n    );\n  }\n\n  protected isVisible(node: LayoutNode, rect: Rect): boolean {\n    return super.isVisible(node, rect);\n  }\n\n  getVisibleLayoutInfos(rect: Rect): LayoutInfo[] {\n    return super\n      .getVisibleLayoutInfos(rect)\n      .filter((layoutInfo) => this.collection.getItem(layoutInfo.key) != null);\n  }\n}\n\nexport const useTreeVirtualizer = <T extends object>({\n  state,\n}: {\n  state: TreeState<T>;\n}): {\n  virtualizerProps: Omit<\n    VirtualizerProps<any, unknown, unknown>,\n    \"children\" | keyof HTMLAttributes<HTMLElement>\n  >;\n} => {\n  const layout = useMemo(\n    () =>\n      new FlattenedTreeLayout({\n        /**\n         * there is currently no documentation available for these fields, but setting `rowHeight` enforces it, which\n         * wouldn't be good for custom tree UI with a different row height.\n         * wrong estimatedRowHeight seems to only affect small scrollbar position inaccuracy, which is a minor issue\n         * and not even noticeable in most cases. Also, it seems it slightly improves the performance if it exactly\n         * matches the real row height. But not even sure.\n         */\n        estimatedRowHeight: 20,\n      }),\n    []\n  );\n\n  const focusedKey = state.selectionManager.focusedKey;\n  const persistedKeys = useMemo(\n    () => new Set(focusedKey ? [focusedKey] : []),\n    [focusedKey]\n  );\n  return {\n    virtualizerProps: {\n      persistedKeys,\n      collection: state.collection,\n      layout,\n      scrollDirection: \"both\",\n    },\n  };\n};\n","import React, { RefObject } from \"react\";\nimport {\n  ActionDefinition,\n  CommonActionId,\n} from \"@intellij-platform/core/ActionSystem\";\nimport { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport { TreeRefValue } from \"@intellij-platform/core/Tree\";\n\n/**\n * Returns action definitions object for common tree actions\n * TODO: add example in docs\n */\nexport function useTreeActions({\n  treeRef,\n}: {\n  treeRef: RefObject<TreeRefValue>;\n}): Array<ActionDefinition> {\n  return [\n    {\n      id: CommonActionId.EXPAND_ALL,\n      title: \"Expand All\",\n      icon: <PlatformIcon icon=\"actions/expandall\" />,\n      actionPerformed: () => {\n        treeRef.current?.expandAll();\n      },\n    },\n    {\n      id: CommonActionId.COLLAPSE_ALL,\n      title: \"Collapse All\",\n      icon: <PlatformIcon icon=\"actions/collapseall\" />,\n      actionPerformed: () => {\n        treeRef.current?.collapseAll();\n      },\n    },\n    {\n      id: CommonActionId.EXPAND_SELECTION,\n      title: \"Expand Selection\",\n      actionPerformed: () => {\n        treeRef.current?.expandSelection();\n      },\n    },\n    {\n      id: CommonActionId.SHRINK_SELECTION,\n      title: \"Shrink Selection\",\n      // TODO: disable if selection is only one item. Would need more data from treeRef. Maybe after treeRef is refactored\n      //  to implement/extend CollectionRef\n      actionPerformed: () => {\n        treeRef.current?.shrinkSelection();\n      },\n    },\n  ];\n}\n","import { Key } from \"react\";\n\ninterface SetState<T> {\n  items: Iterable<T>;\n\n  toggle(key: T): void;\n\n  add(...key: T[]): void;\n\n  delete(...key: T[]): void;\n}\n\nexport type SelectionState = \"NotSelected\" | \"Selected\" | \"PartiallySelected\";\n\nexport interface TreeModel<T, K = Key> {\n  rootNodes: ReadonlyArray<T>;\n  getChildren: (root: T) => ReadonlyArray<T> | /*for convenience*/ T | null;\n  getKey: (item: T) => K;\n}\n\nexport interface NestedSelectionState<T> {\n  getSelectionState: (item: T) => SelectionState;\n  toggle: (item: T) => void;\n}\n\nconst collectSelectableItems = <T>(\n  item: T,\n  getChildren: (item: T) => null | ReadonlyArray<T>\n) => {\n  const collectedItems: T[] = [];\n  collectSelectableItemsRecursive(item, getChildren, collectedItems);\n  return collectedItems;\n};\nconst collectSelectableItemsRecursive = <T>(\n  item: T,\n  getChildren: (item: T) => null | ReadonlyArray<T>,\n  collectedItems: T[] = []\n) => {\n  const children = getChildren(item);\n  if (children == null) {\n    collectedItems.push(item);\n  } else {\n    children.forEach((child) =>\n      collectSelectableItemsRecursive(child, getChildren, collectedItems)\n    );\n  }\n};\n\n// TODO: maybe change the interface to work with keys instead of items?\nexport class NestedSelection<T extends object, K = Key>\n  implements NestedSelectionState<T>\n{\n  cache = new WeakMap<T, SelectionState>();\n  constructor(private state: SetState<K>, private tree: TreeModel<T, K>) {\n    this.tree = tree;\n    this.state = state;\n  }\n\n  toggle(item: T) {\n    const children = this.tree.getChildren(item);\n    const key = this.tree.getKey(item);\n    const isSelectableNode = children == null;\n    if (isSelectableNode) {\n      this.state.toggle(key);\n    } else {\n      const state = this.getSelectionState(item);\n      const itemsInSubtree = collectSelectableItems(item, (item) =>\n        normalizeChildren(this.tree.getChildren(item))\n      ).map(this.tree.getKey);\n      if (state === \"Selected\") {\n        this.state.delete(...itemsInSubtree);\n      } else {\n        this.state.add(...itemsInSubtree);\n      }\n    }\n  }\n\n  getSelectionState(item: T): SelectionState {\n    // caching can be refactored into a nice little decorator like WeakMapCached which would be applicable on a method\n    // with a single object argument.\n    const cachedState = this.cache.get(item);\n    if (cachedState) {\n      return cachedState;\n    }\n    const children = normalizeChildren(this.tree.getChildren(item));\n    const key = this.tree.getKey(item);\n    const isSelectableNode = children == null;\n    let state: SelectionState;\n    if (isSelectableNode) {\n      state = [...this.state.items].includes(key) ? \"Selected\" : \"NotSelected\";\n    } else {\n      const allDescendantsStates = children.map((child) =>\n        this.getSelectionState(child)\n      );\n      if (allDescendantsStates.every((state) => state === \"NotSelected\")) {\n        state = \"NotSelected\";\n      } else {\n        state = allDescendantsStates.every((state) => state === \"Selected\")\n          ? \"Selected\"\n          : \"PartiallySelected\";\n      }\n    }\n    this.cache.set(item, state);\n    return state;\n  }\n}\n\nfunction normalizeChildren<T>(children: T | ReadonlyArray<T> | null) {\n  if (children) {\n    return ([] as ReadonlyArray<T>).concat(children);\n  }\n  return null;\n}\n","import React, { ForwardedRef } from \"react\";\nimport {\n  SpeedSearchTree,\n  SpeedSearchTreeProps,\n} from \"@intellij-platform/core/Tree\";\nimport { NestedSelectionState } from \"./NestedSelection\";\n\n/**\n * Experimental wrapper component around SpeedSearchTree, which allows rendering {@link TreeNodeCheckbox} in nodes.\n *\n * See [design-decisions.md](../Tree/design-decisions.md) for more thoughts about how should different features\n * like this be supported.\n *\n * @alpha\n */\nexport const SpeedSearchTreeWithCheckboxes = React.forwardRef(\n  <T extends object>(\n    {\n      nestedSelection,\n      cacheInvalidation,\n      onNodeKeyDown,\n      ...props\n    }: SpeedSearchTreeProps<T> & {\n      nestedSelection: NestedSelectionState<T>;\n    },\n    ref: ForwardedRef<HTMLDivElement>\n  ): React.ReactElement => {\n    const otherInvalidators =\n      typeof cacheInvalidation === \"object\"\n        ? cacheInvalidation.invalidators\n        : [];\n    return (\n      <SpeedSearchTree\n        ref={ref}\n        {...props}\n        // instead of passing cacheInvalidation, a better approach could be to provide nestedSelection as context.\n        cacheInvalidation={{\n          invalidators: [nestedSelection, ...otherInvalidators],\n        }}\n        onNodeKeyDown={(event, item) => {\n          if (event.key === \" \" && item.value) {\n            nestedSelection.toggle(item.value);\n          }\n          onNodeKeyDown?.(event, item);\n        }}\n      />\n    );\n  }\n);\n","import React, { useContext } from \"react\";\nimport { Checkbox } from \"@intellij-platform/core/Checkbox\";\nimport { TreeContext } from \"@intellij-platform/core/Tree/TreeContext\";\nimport { SelectionState } from \"@intellij-platform/core/TreeCheckboxes/NestedSelection\";\nimport { ItemStateContext } from \"@intellij-platform/core/Collections\";\nimport styled from \"styled-components\";\n\nexport type TreeNodeCheckboxProps<T extends unknown> = {\n  selectionState?: SelectionState;\n  selectItemOnPress?: boolean;\n  onToggle: () => void;\n  // maybe a isDisabled prop to be merged with isDisabled from the item?\n};\n\nconst StyledCheckboxWrapper = styled.span`\n  margin-right: 0.125rem;\n  display: inline-flex;\n`;\n\n/**\n * Checkbox to be used with {@link SpeedSearchTreeWithCheckboxes}. `SpeedSearchTreeWithCheckboxes` doesn't add the\n * checkboxes by default to the nodes, which makes it more flexible in terms of which nodes should have checkbox, or\n * it's exact placement within the tree rows.\n *\n * TreeNodeCheckbox renders a Checkbox with a few extras:\n * - `aria-label` set based on the encompassing item's textValue\n * - `isSelected` and `isIndeterminate` set based on `selectionState`\n * - `isDisabled` is set based in disabled state of the item.\n * - The encompassing item will be selected upon press, if `selectItemOnPress` is `true` (default is `true`).\n * - Small styling adjustment achieved by a wrapper StyledListIconWrapper.\n *\n * @see SpeedSearchTreeWithCheckboxes\n * @see useNestedSelectionState\n *\n * NOTE: this component currently uses TreeContext, to get a hold of selectionManager. If a more abstract component\n * like CollectionCheckbox is needed in the future, we can refactor TreeContext also to something more abstract like\n * CollectionContext which is provided by all such components like List, Tree or Table.\n */\nexport const TreeNodeCheckbox = <T extends unknown>({\n  selectionState,\n  onToggle,\n  selectItemOnPress = true,\n}: TreeNodeCheckboxProps<T>) => {\n  const treeContext = useContext(TreeContext);\n  const itemContext = useContext(ItemStateContext);\n  if (!itemContext) {\n    throw new Error(\"TreeNodeCheckbox is rendered outside tree nodes.\");\n  }\n\n  return (\n    <StyledCheckboxWrapper>\n      <Checkbox\n        preventFocus\n        aria-label={`Select ${itemContext.node.textValue}`}\n        isSelected={selectionState === \"Selected\"}\n        isIndeterminate={selectionState === \"PartiallySelected\"}\n        isDisabled={itemContext.isDisabled}\n        onChange={() => {\n          onToggle();\n          // this if and the whole need for treeContext could be avoided if event.stopPropagation() was not hard coded\n          // in useToggle: https://github.com/adobe/react-spectrum/blob/0d007bca9417c4b7b86fafd5842871bf997bd4c0/packages/@react-aria/toggle/src/useToggle.ts#L46\n          // An improvement could be to replace Checkbox with CheckboxIcon, and simply handle press on it (potential TODO)\n          if (treeContext && itemContext && selectItemOnPress) {\n            treeContext.state.selectionManager.setFocusedKey(\n              itemContext.node.key\n            );\n            treeContext.state.selectionManager.setFocused(true);\n            treeContext.state.selectionManager.setSelectedKeys([\n              itemContext.node.key,\n            ]);\n          }\n        }}\n      />\n    </StyledCheckboxWrapper>\n  );\n};\n","import { Key, useMemo } from \"react\";\nimport { ControlledStateProps } from \"../type-utils\";\nimport { useLatest } from \"@intellij-platform/core/utils/useLatest\";\nimport { useControllableSet } from \"@intellij-platform/core/utils/useSet\";\nimport {\n  NestedSelection,\n  NestedSelectionState,\n  TreeModel,\n} from \"@intellij-platform/core/TreeCheckboxes/NestedSelection\";\n\n/**\n * A state management util for a selectable list of items with an arbitrary nested grouping. In other words,\n * it manages selection of leaves in a tree.\n *\n * tree is represented as a `getChildren` function that returns children for a given root. if null is passed it\n * returns the top level nodes.\n * Important Note: the tree structure that can be generated by calling `getChildren` function is supposed to be\n * **immutable**. in other words, any change in the tree, should result in a new array of top level items.\n */\n\nexport const useNestedSelectionState = <T extends object, K = Key>(\n  tree: TreeModel<T, K>,\n  {\n    selectedKeys: selectedKeysProp,\n    defaultSelectedKeys,\n    onSelectedKeysChange,\n  }: ControlledStateProps<{\n    selectedKeys: Set<K>;\n  }>\n): NestedSelectionState<T> => {\n  const [selectedKeys, selectedKeysSetter] = useControllableSet(\n    selectedKeysProp!, // bad typing in useControlledState\n    defaultSelectedKeys || new Set(),\n    onSelectedKeysChange! // bad typing in useControlledState\n  );\n  const treeRef = useLatest(tree);\n\n  return useMemo(\n    () =>\n      new NestedSelection<T, K>(\n        { items: selectedKeys, ...selectedKeysSetter },\n        treeRef.current\n      ),\n    [selectedKeys, tree.rootNodes]\n  );\n};\n","import {\n  LayoutNode,\n  ListLayout,\n  ListLayoutOptions,\n} from \"@react-stately/layout\";\nimport React, { Key } from \"react\";\nimport { LayoutInfo, Rect, Size } from \"@react-stately/virtualizer\";\nimport { Node } from \"@react-types/shared\";\n\nexport type VariableWidthListLayoutOptions = ListLayoutOptions & {\n  dividerHeight?: number;\n};\n\n/**\n * Extends `ListLayout` and allows items of the list to have width based on the content. `ListLayout` by default\n * sets width based on the virtualizer's visible rect. This means the overflow of list items will be clipped.\n * In `VariableWidthListLayout`, the width of the list depends on the content of the visible items.\n *\n * NOTE: At the time of writing this class, Virtualization in @react-aria and @react-stately don't have proper\n * documentation, and it wasn't clear if there could be better ways of letting list's width grow based on the content.\n * Also, this implementation currently lacks support for sections. `buildSection()` would most probably need to be\n * overridden like how `buildItem` is.\n */\nexport class VariableWidthListLayout<T> extends ListLayout<T> {\n  /**\n   * content width of items are stored here, if the content width is bigger than the Virtualizer's visible rect's width.\n   */\n  keyToWidth = new Map<Key, number>();\n  private visibleContentWidth: number = 0;\n  private dividerHeight: number = 2;\n\n  constructor(options: VariableWidthListLayoutOptions) {\n    super(options);\n    if (options.dividerHeight != undefined) {\n      this.dividerHeight = options.dividerHeight;\n    }\n  }\n\n  buildItem(node: Node<T>, x: number, y: number): LayoutNode {\n    const layoutNode = super.buildItem(node, x, y);\n    if (this.visibleContentWidth) {\n      layoutNode.layoutInfo.rect.width = this.visibleContentWidth;\n    }\n    return layoutNode;\n  }\n\n  buildNode(node: Node<T>, x: number, y: number): LayoutNode {\n    if (node.type === \"divider\") {\n      return this.buildDivider(node, x, y);\n    }\n    return super.buildNode(node, x, y);\n  }\n\n  buildDivider(node: Node<T>, x: number, y: number): LayoutNode {\n    let width = this.virtualizer?.visibleRect.width ?? 0;\n    let rectHeight = this.dividerHeight;\n\n    let rect = new Rect(x, y, width - x, rectHeight);\n    let layoutInfo = new LayoutInfo(node.type, node.key, rect);\n    layoutInfo.estimatedSize = false;\n    return {\n      layoutInfo,\n      validRect: layoutInfo.rect,\n    };\n  }\n\n  /**\n   * Allows for overriding buildCollection in a sub-class\n   */\n  protected doBuildCollection() {\n    return super.buildCollection();\n  }\n\n  buildCollection(): LayoutNode[] {\n    this.visibleContentWidth = this.getVisibleContentWidth();\n    const layoutNodes = this.doBuildCollection();\n    this.contentSize.width = this.visibleContentWidth;\n    return layoutNodes;\n  }\n\n  shouldInvalidate(newRect: Rect, oldRect: Rect): boolean {\n    return (\n      super.shouldInvalidate(newRect, oldRect) ||\n      this.virtualizer?.contentSize.width !== this.visibleContentWidth\n    );\n  }\n\n  protected isValid(node: Node<T>, y: number): boolean | undefined {\n    let cached = this.layoutNodes.get(node.key);\n    return (\n      super.isValid(node, y) &&\n      cached?.layoutInfo.rect.width === this.visibleContentWidth\n    );\n  }\n\n  updateItemSize(key: React.Key, size: Size): boolean {\n    const changed = super.updateItemSize(key, size);\n    const layoutInfo = this.getLayoutInfo(key);\n    if (layoutInfo && size.width > this.contentSize.width) {\n      this.keyToWidth.set(key, size.width);\n      return true;\n    } else {\n      return changed;\n    }\n  }\n\n  // TODO: try overriding getContentSize() and update()\n  // https://reactspectrum.blob.core.windows.net/reactspectrum/baf4c2ac98c3272836fca3f49e2a8647d1ebb5ef/docs/react-aria/Virtualizer.html\n\n  private getVisibleContentWidth() {\n    return Math.max(\n      this.virtualizer?.visibleRect.width ?? 0,\n      ...[...(this.virtualizer?.getVisibleLayoutInfos().values() ?? [])].map(\n        (layoutInfo: LayoutInfo) => {\n          const itemContentWidth =\n            layoutInfo && this.keyToWidth.get(layoutInfo.key);\n          if (\n            itemContentWidth &&\n            this.virtualizer &&\n            layoutInfo.rect.intersects(this.virtualizer?.visibleRect)\n          ) {\n            return itemContentWidth;\n          }\n          return 0;\n        }\n      )\n    );\n  }\n}\n","export function isWordSeparator(c: string) {\n  return (\n    isWhitespace(c) || c == \"_\" || c == \"-\" || c == \":\" || c == \"+\" || c == \".\"\n  );\n}\n\nexport function isWhitespace(char: string): boolean {\n  return /^\\s*$/.test(char);\n}\n\nexport function isUpperCase(str: string) {\n  return str.toUpperCase() === str && str.toLowerCase() !== str;\n}\n","import { createRangesFromIndices, TextRange } from \"./TextRange\";\nimport {\n  isUpperCase,\n  isWhitespace,\n  isWordSeparator,\n} from \"./utils/string-utils\";\n\nfunction isMeaningfulChar(ch: string) {\n  return !isWordSeparator(ch) && !isWhitespace(ch);\n}\n\n// Simplified version of https://github.com/JetBrains/intellij-community/blob/master/platform/util/text-matching/src/com/intellij/psi/codeStyle/MinusculeMatcherImpl.java\nexport const minusculeMatch = (\n  input: string,\n  rawPattern: string\n): Array<TextRange> | null => {\n  const isStarts = input.split(\"\").map(isStart);\n  const pattern = rawPattern.split(\"\").filter(isMeaningfulChar).join(\"\");\n  const matches: Array<{ patternIndex: number; inputIndex: number }> = [];\n  let continuous = false;\n  let inputIndex = 0,\n    patternIndex = 0;\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if (matches.length === pattern.length) {\n      return createRangesFromIndices(matches.map(({ inputIndex: i }) => i));\n    }\n    if (inputIndex > input.length - 1) {\n      if (matches.length > 0) {\n        // TODO: the same character match can be popped out and in several times, if something\n        //  is popped out, it should never be added back again, since it's already examined without\n        //  a full match.\n        const lastMatch = matches.pop()!;\n        inputIndex = lastMatch.inputIndex + 1;\n        patternIndex = lastMatch.patternIndex;\n        continue;\n      }\n      break;\n    }\n    if (!isMeaningfulChar(input[inputIndex])) {\n      inputIndex++;\n      continue;\n    }\n    if (\n      pattern[patternIndex].toLowerCase() === input[inputIndex].toLowerCase() &&\n      (continuous || isStarts[inputIndex] || matches.length === 0)\n    ) {\n      matches.push({ patternIndex, inputIndex });\n      continuous = true;\n      patternIndex++;\n      inputIndex++;\n    } else {\n      continuous = false;\n      inputIndex++;\n    }\n  }\n  return null;\n};\n\nfunction isStart(char: string, index: number, chars: string[]): boolean {\n  const previousChar = chars[index - 1];\n  return (\n    index === 0 ||\n    (isWordSeparator(previousChar) && !isWordSeparator(char)) ||\n    (isUpperCase(char) && !isUpperCase(previousChar))\n  );\n}\n","import { useEffect, useLayoutEffect } from \"react\";\nimport { useSelectableCollection as useAriaSelectableCollection } from \"@react-aria/selection\";\n\n/**\n * Wrapper around react-aria useSelectableCollection to fix pending issues or\n * add missing functionality.\n */\nexport const useSelectableCollection: typeof useAriaSelectableCollection = (\n  options\n) => {\n  const {\n    collectionProps: { onKeyDown, ...collectionProps },\n  } = useAriaSelectableCollection(options);\n  useEffect(() => {\n    // Fixing https://github.com/adobe/react-spectrum/issues/4391\n    const { selectionManager, autoFocus, selectOnFocus } = options;\n    if (\n      selectOnFocus &&\n      (autoFocus === \"first\" || autoFocus === \"last\") &&\n      selectionManager.focusedKey != null\n    ) {\n      selectionManager.replaceSelection(selectionManager.focusedKey);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useLayoutEffect(() => {\n    const { selectionManager } = options;\n    // Working around https://github.com/adobe/react-spectrum/issues/7512\n    // FIXME: remove the workaround the issue is closed\n    if (\n      selectionManager.firstSelectedKey &&\n      selectionManager.focusedKey == null\n    ) {\n      // initialize the focusedKey so that the buggy code that mutates selection\n      // onFocus doesn't get to run.\n      selectionManager.setFocusedKey(selectionManager.firstSelectedKey);\n    }\n  }, []);\n  return {\n    collectionProps: {\n      ...collectionProps,\n      onKeyDown: (e) => {\n        // keydown events used to not be handled when alt key is pressed.\n        // it's changed in https://github.com/adobe/react-spectrum/commit/885b5e6b84253925b2ac9f7f2766417c63b654b5#diff-e356ae602508922357fd9cd1aa7896f74e24f87bcb2ee86a7bb4a486ea87a2f2R120\n        // handling keydown events when alt is down interferes with tree action shortcuts\n        // FIXME: make tree actions use capture phase to handle shortcuts so it takes precedence over\n        //  the default handlers regardless of what the shortcut is. Revert the patch here, after.\n        //  At the time of writing this, `useCapture` is only an option on ActionsProvider, but it\n        //  needs to be an option on each action, to allow for this use case.\n        if (!e.altKey) {\n          onKeyDown?.(e);\n        }\n      },\n    },\n  };\n};\n","import { useSelectableItem as useOriginalSelectableItem } from \"@react-aria/selection\";\nimport { MouseEventHandler } from \"react\";\nimport { mergeProps } from \"@react-aria/utils\";\n\n/**\n * A wrapper around useSelectableItem, which adjusts for intellij platform nuances:\n * - Selects item with right clicks as well, which allows ContextMenuContainer to be used with any collection component\n *   without the need for built-in context-menu support in such components. We won't need this if we move to a built-in\n *   context-menu support for List,Tree, etc.\n * @private\n */\nexport const useSelectableItem: typeof useOriginalSelectableItem = (\n  options\n) => {\n  const onContextMenu: MouseEventHandler<HTMLElement> = (e) => {\n    if (!options.selectionManager.isSelected(options.key)) {\n      options.selectionManager.select(options.key);\n    }\n  };\n  const result = useOriginalSelectableItem(options);\n  return {\n    ...result,\n    itemProps: mergeProps(result.itemProps, { onContextMenu }),\n  };\n};\n","/**\n * Drop shadow of windows and other overlays.\n * The current value is not accurate and needs to be revisited. It should also be os-dependant.\n * FIXME: On windows, there is only a border-like shadow. No drop shadow\n * FIXME: On Mac, there is a border-like shadow and a drop shadow. the border-like shadow is missing in the current value\n */\nexport const WINDOW_SHADOW = \"box-shadow: 0 5px 15px rgb(0 0 0 / 30%)\";\n","import * as styledComponents from \"styled-components\";\nimport { ThemedStyledComponentsModule } from \"styled-components\";\nimport { Theme } from \"./Theme\";\nimport { KnownThemePropertyPath } from \"./Theme/types\";\n\ntype JuiStyledComponentsModule = ThemedStyledComponentsModule<\n  Theme<KnownThemePropertyPath>\n>;\n\nexport const styled =\n  styledComponents.default as JuiStyledComponentsModule[\"default\"];\nexport const useTheme =\n  styledComponents.useTheme as JuiStyledComponentsModule[\"useTheme\"];\nexport const css = styledComponents.css as JuiStyledComponentsModule[\"css\"];\nexport const ThemeConsumer =\n  styledComponents.ThemeConsumer as JuiStyledComponentsModule[\"ThemeConsumer\"];\n","import {\n  FocusManager,\n  FocusScope as WrappedFocusScope,\n  FocusScopeProps,\n  useFocusManager,\n} from \"@react-aria/focus\";\nimport React, { ForwardedRef, useImperativeHandle, useRef } from \"react\";\n\nexport type FocusScopeRef = { focus: (forceFocusFirst?: boolean) => void };\n/**\n * A version of FocusScope which also allows for imperatively moving focus to the scope.\n * and has tiny patches/improvements\n * It's useful for\n */\nexport const FocusScope = React.forwardRef(function BetterFocusScope(\n  { children, ...otherProps }: FocusScopeProps,\n  ref: ForwardedRef<FocusScopeRef>\n) {\n  const directChildRef = useRef<HTMLSpanElement>(null);\n  const focusManagerRef = useRef<FocusManager>(null);\n  useImperativeHandle(\n    ref,\n    () => ({\n      focus: (forceFocusFirst?: boolean) => {\n        const focusManager = focusManagerRef.current;\n        const containerElement = directChildRef.current?.parentElement;\n        if (!focusManager) {\n          throw new Error(\"focus manager not found!\");\n        }\n        if (!containerElement) {\n          throw new Error(\"container element not found\");\n        }\n        if (forceFocusFirst) {\n          return focusManager.focusFirst();\n        }\n        const alreadyHasFocused =\n          document.activeElement &&\n          document.activeElement !== containerElement &&\n          containerElement.contains(document.activeElement);\n        if (!alreadyHasFocused) {\n          focusManager.focusNext({ tabbable: true });\n        }\n      },\n    }),\n    []\n  );\n\n  return (\n    <WrappedFocusScope {...otherProps}>\n      <GetFocusManager ref={focusManagerRef} />\n      <span data-focus-root-direct-child=\"\" hidden ref={directChildRef} />\n      {children}\n    </WrappedFocusScope>\n  );\n});\nconst GetFocusManager = React.forwardRef(function FocusScopeHandle(\n  props: {},\n  ref: ForwardedRef<FocusManager>\n) {\n  const focusManager = useFocusManager()!;\n  useImperativeHandle(ref, () => focusManager, [focusManager]);\n  return null;\n});\n","/**\n * IMPORTANT: this is a copy of a non-exported file from @react-aria/interactions\n */\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport { runAfterTransition } from \"@react-aria/utils\";\n\n// Safari on iOS starts selecting text on long press. The only way to avoid this, it seems,\n// is to add user-select: none to the entire page. Adding it to the pressable element prevents\n// that element from being selected, but nearby elements may still receive selection. We add\n// user-select: none on touch start, and remove it again on touch end to prevent this.\n// This must be implemented using global state to avoid race conditions between multiple elements.\n\n// There are three possible states due to the delay before removing user-select: none after\n// pointer up. The 'default' state always transitions to the 'disabled' state, which transitions\n// to 'restoring'. The 'restoring' state can either transition back to 'disabled' or 'default'.\ntype State = \"default\" | \"disabled\" | \"restoring\";\n\nlet state: State = \"default\";\nlet savedUserSelect = \"\";\n\nexport function disableTextSelection() {\n  if (state === \"default\") {\n    savedUserSelect = document.documentElement.style.webkitUserSelect;\n    document.documentElement.style.webkitUserSelect = \"none\";\n  }\n\n  state = \"disabled\";\n}\n\nexport function restoreTextSelection() {\n  // If the state is already default, there's nothing to do.\n  // If it is restoring, then there's no need to queue a second restore.\n  if (state !== \"disabled\") {\n    return;\n  }\n\n  state = \"restoring\";\n\n  // There appears to be a delay on iOS where selection still might occur\n  // after pointer up, so wait a bit before removing user-select.\n  setTimeout(() => {\n    // Wait for any CSS transitions to complete so we don't recompute style\n    // for the whole page in the middle of the animation and cause jank.\n    runAfterTransition(() => {\n      // Avoid race conditions\n      if (state === \"restoring\") {\n        if (document.documentElement.style.webkitUserSelect === \"none\") {\n          document.documentElement.style.webkitUserSelect =\n            savedUserSelect || \"\";\n        }\n\n        savedUserSelect = \"\";\n        state = \"default\";\n      }\n    });\n  }, 300);\n}\n","import React, { MouseEventHandler } from \"react\";\nimport { disableTextSelection, restoreTextSelection } from \"./textSelection\";\nimport { useLatest } from \"../useLatest\";\n\n/**\n * To be used with {@link UseMoveOptions#canMoveStart} to allow\n * the move to start only on whitespaces. Does that by checking if the\n * element is an HTMLElement with all children being Elements.\n * This logic almost always detects the whitespaces properly, because if mouse\n * was pressed on a piece of text, the event target would have been that element.\n */\nexport function isEventOnEmptySpaces({\n  target,\n  currentTarget,\n}: React.MouseEvent) {\n  return (\n    currentTarget === target ||\n    (target instanceof HTMLElement &&\n      [...target.childNodes].every((child) => child instanceof HTMLElement))\n  );\n}\n\nexport type XY = { x: number; y: number };\nexport type UseMoveOptions<S> = {\n  /**\n   * the amount of movement (in pixels) after which the move should start. It prevents interference\n   * with simple click (or more generally, press) events, and provides better UX.\n   * @default 0\n   */\n  dragThreshold?: number;\n  disabled?: boolean;\n  /**\n   * Whether the move should be initiated from a mouse down event.\n   * Note: regardless of the value of this option, the move won't start when interactive elements like buttons\n   * are being pressed.\n   * @see isEventOnEmptySpaces\n   * @example\n   * ```ts\n   * // Don't move when children are being dragged.\n   * useMove({ canMoveStart: e => e.target === e.currentTarget });\n   * ```\n   *\n   * @example\n   * ```ts\n   * // move when empty spaces are being dragged.\n   * useMove({ canMoveStart: isEventOnEmptySpaces });\n   * ```\n   */\n  canMoveStart?: (eventTarget: React.MouseEvent) => boolean;\n  onMoveStart: (args: { from: XY }) => S;\n  onMove: (args: { from: XY; to: XY; movement: XY; startState: S }) => void;\n  onMoveEnd?: (args: { startState: S }) => void;\n};\n\n// TODO: cleanup if unmount happens during drag.\n// TODO: Better even handling for touch devices?\n//  wrapping `useMove` from react-aria to just add support for movement threshold should be the\n//  way to go, but there are a few problems:\n//    - it seemed a little buggy in the example here: https://react-spectrum.adobe.com/react-aria/useMove.html\n//    - the API is not great in a sense that it only gives the diff in last movement.\n//      Also onMoveStart doesn't give the initial position, so it's not possible to even calculate\n//\n// TODO: move should be finished by pressing Escape. onMoveCancel maybe?\n/**\n * Similar to https://react-spectrum.adobe.com/react-aria/useMove.html, with slightly different\n * features and API.\n * NOTE: initially the API was designed in a way that onMove and onMove end callbacks were\n * returned from onMoveStart, instead of being directly passed in the options.\n * This would enable capturing the initial state of each move transaction, by defining whatever\n * variable in onMoveStart and closing over them by onMove and onMoveEnd.\n * The problem with this approach was that although you could capture the initial state of the\n * movement, by closure, any other variable in the outer scopes was also closed over, and you were\n * stuck with the values from the particular render in which the movement was started.\n * Of course, you could work around it by using refs, but it would be unintuitive.\n * So because of that issue, it's redesigned to have onMoveStart, onMove, and onMoveEnd all\n * directly passed as options, but you can return anything from `onMoveStart` which will be passed\n * to onMove and onMoveEnd as `startState`.\n */\nexport function useMove<S>({\n  dragThreshold = 0,\n  disabled,\n  onMoveStart,\n  onMove,\n  onMoveEnd,\n  canMoveStart = () => true,\n}: UseMoveOptions<S>): { onMouseDown?: MouseEventHandler } {\n  const handlersRef = useLatest({ onMove, onMoveEnd });\n\n  const onMouseDown = (event: React.MouseEvent) => {\n    if (event.button !== 0 || !canMoveStart(event)) {\n      return;\n    }\n    // In the use case of resize handles, preventing default is necessary to avoid focus getting lost\n    // while resizing a container.\n    // It didn't seem necessary in any other use case to not prevent default, so it's done without any option.\n    event.preventDefault();\n    disableTextSelection();\n    const from = { x: event.pageX, y: event.pageY };\n    let dragStarted = false;\n    let startState: S;\n\n    const onMouseMove = (event: MouseEvent) => {\n      const { pageX: x, pageY: y } = event;\n      const movement = { x: x - from.x, y: y - from.y };\n      const isDraggedEnough =\n        Math.abs(movement.x) >= dragThreshold ||\n        Math.abs(movement.y) >= dragThreshold;\n      if (isDraggedEnough && !dragStarted) {\n        dragStarted = true;\n        startState = onMoveStart({ from });\n      }\n      if (dragStarted) {\n        handlersRef.current.onMove({\n          from,\n          to: { x: from.x + movement.x, y: from.y + movement.y },\n          movement,\n          startState,\n        });\n      }\n    };\n    document.addEventListener(\"mousemove\", onMouseMove);\n\n    document.addEventListener(\n      \"mouseup\",\n      () => {\n        restoreTextSelection();\n        if (dragStarted) {\n          handlersRef.current.onMoveEnd?.({ startState });\n        }\n        document.removeEventListener(\"mousemove\", onMouseMove);\n      },\n      { once: true }\n    );\n  };\n  return disabled ? {} : { onMouseDown };\n}\n","import React from \"react\";\nimport { isMac } from \"@react-aria/utils\";\n\n/**\n * TODO: The current name is not accurate, and can be confusing. Rename to something better.\n */\nexport function isCtrlKeyPressed(\n  e: { metaKey: boolean; ctrlKey: boolean } | undefined\n) {\n  if (isMac()) {\n    return e?.metaKey;\n  }\n\n  return e?.ctrlKey;\n}\n\nexport function hasAnyModifier(e: KeyboardEvent | React.KeyboardEvent) {\n  return e.altKey || e.ctrlKey || e.metaKey || e.shiftKey;\n}\n","import { sortBy, uniqBy } from \"ramda\";\n\nexport interface OverflowObserverRecord {\n  target: Element;\n  overflowedElements: Element[];\n  previouslyOverflowedElements: Element[];\n}\n\nexport type OverflowObserverCallback = (\n  change: OverflowObserverRecord,\n  observer: OverflowObserver\n) => void;\n\n/**\n * Allows observing the list of overflowing children of a given target element.\n * An `IntersectionObserver` is created for each target to observe the intersection between the target and each child\n * element. The child elements are observed/unobserved by the intersection observer as they are added/removed to the\n * DOM, which is observed using a `MutationObserver`.\n * `IntersectionObserver` options such as `rootMargin` are supported, to fine tune what should be considered as\n * overflowed.\n *\n * TODO: add a takeRecords method to allow processing pending mutations before disconnect\n * TODO: maybe add direction option?\n *\n */\nexport class OverflowObserver {\n  private mutationObserver: MutationObserver;\n  private data: Map<\n    Element,\n    {\n      intersectionObserver: IntersectionObserver;\n      currentOverflowElements: Element[];\n    }\n  > = new Map();\n\n  constructor(private callback: OverflowObserverCallback) {\n    this.mutationObserver = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        const target = mutation.target;\n        if (!(target instanceof Element)) {\n          return;\n        }\n        mutation.removedNodes.forEach((node) => {\n          if (node instanceof Element) {\n            this.data.get(target)?.intersectionObserver.unobserve(node);\n          }\n        });\n        mutation.addedNodes.forEach((node) => {\n          if (node instanceof Element) {\n            this.data.get(target)?.intersectionObserver.observe(node);\n          }\n        });\n      });\n    });\n  }\n\n  observe(target: Element, options: Omit<IntersectionObserverInit, \"root\">) {\n    this.data.get(target)?.intersectionObserver.disconnect();\n\n    const intersectionObserver = new IntersectionObserver(\n      (entries) => {\n        const data = this.data.get(target);\n        const sortedEntries = sortBy((entry) => -entry.time, entries);\n        const validEntries = uniqBy((entry) => entry.target, sortedEntries);\n\n        const newHiddenElements = validEntries\n          .map((entry) =>\n            !entry.isIntersecting && entry.target instanceof Element\n              ? entry.target\n              : undefined\n          )\n          .filter((i) => i != null);\n        const newVisibleElements = validEntries\n          .map((entry) =>\n            entry.isIntersecting && entry.target instanceof Element\n              ? entry.target\n              : null\n          )\n          .filter((i) => i != null);\n\n        //  Also cover this in Toolbar with a test case\n        const previouslyOverflowedElements =\n          data?.currentOverflowElements || [];\n        const overflowedElements = previouslyOverflowedElements\n          .filter((element) => !newVisibleElements.includes(element))\n          .concat(newHiddenElements)\n          .filter((element) => {\n            // In some cases some elements may be hidden by some styles (e.g. the first/last separator in a toolbar).\n            // It doesn't make sense to report them as overflowed.\n            const isHidden =\n              element instanceof HTMLElement &&\n              element.offsetWidth === 0 &&\n              element.offsetHeight === 0;\n            return !isHidden;\n          });\n        this.callback(\n          {\n            previouslyOverflowedElements,\n            overflowedElements: overflowedElements,\n            target,\n          },\n          this\n        );\n        if (data) {\n          data.currentOverflowElements = overflowedElements;\n        }\n      },\n      {\n        ...options,\n        root: target,\n      }\n    );\n    [...(target?.children || [])].forEach((childElement) => {\n      intersectionObserver.observe(childElement);\n    });\n    this.data.set(target, {\n      intersectionObserver,\n      currentOverflowElements: [],\n    });\n    this.mutationObserver.observe(target, {\n      childList: true,\n    });\n  }\n\n  unobserve(target: Element) {\n    this.data.get(target)?.intersectionObserver.disconnect();\n  }\n\n  disconnect() {\n    [...this.data.values()].forEach(({ intersectionObserver }) =>\n      intersectionObserver.disconnect()\n    );\n    this.data = new Map();\n    this.mutationObserver.disconnect();\n  }\n}\n","import { RefObject, useEffect, useState } from \"react\";\nimport { OverflowObserver } from \"@intellij-platform/core/utils/overflow-utils/OverflowObserver\";\n\n/**\n * Given a ref to a scrollable container, returns the child elements that are not completely visible and\n * are off view because of scroll.\n * @param scrollableContainerRef\n * @param threshold\n */\nexport function useOverflowObserver(\n  scrollableContainerRef: RefObject<HTMLElement>,\n  {\n    threshold = 0.9,\n    rootMargin = \"0px\",\n  }: Omit<IntersectionObserverInit, \"root\"> = {}\n) {\n  const [overflowedElements, setOverflowedElements] = useState<Element[]>([]);\n\n  useEffect(() => {\n    const overflowObserver = new OverflowObserver((change) => {\n      setOverflowedElements(change.overflowedElements);\n    });\n    overflowObserver.observe(scrollableContainerRef.current!, {\n      rootMargin,\n      threshold,\n    });\n    return () => {\n      overflowObserver.disconnect();\n    };\n  }, [\n    /**\n     * It's ok and needed to have the ref value as a dependency here. We don't know if ref is attached to different\n     * elements in each render, and it's ok that it's not a state, since we don't change it, and it's not supposed to\n     * change without a rerender\n     **/\n    scrollableContainerRef.current,\n  ]);\n\n  return {\n    overflowedElements,\n  };\n}\n","import { Key } from \"react\";\nimport { Ord } from \"ramda\";\n\ntype TreeNodeFn<T> = (root: T) => null | readonly T[];\ntype MutableTreeNodeFn<T> = (root: T) => null | T[];\n\ntype Tree<T> = {\n  getChildren: TreeNodeFn<T>;\n  roots: ReadonlyArray<T>;\n};\n\ntype MutableTree<T> = {\n  getChildren: MutableTreeNodeFn<T>;\n  roots: Array<T>;\n};\n\nexport const getExpandAllKeys = <T>(\n  /**\n   * represents a tree as a function. Given a node, it should return the array of children or null, if the node is a\n   * leaf. Note that even an empty array will make the node to be considered a non-leaf node and the key is included.\n   * if null is passed, the root(s) node(s) should be returned.\n   */\n  getChildren: TreeNodeFn<T>,\n  /**\n   * a function that converts each node into a key\n   */\n  getKey: (t: T) => Key,\n  roots: ReadonlyArray<T>\n) => {\n  const keys: Key[] = roots.map(getKey);\n  const processItem = (node: T | null) => {\n    const children = node ? getChildren(node) : null;\n    if (node == null || !children) {\n      return;\n    }\n    keys.push(getKey(node));\n    children.forEach(processItem);\n  };\n  roots.map(getChildren).flat().forEach(processItem);\n  return keys;\n};\n\nexport const getExpandedToNodesKeys = <T>(\n  /**\n   * represents a tree as a function. Given a node, it should return the array of children or null, if the node is a\n   * leaf. Note that even an empty array will make the node to be considered a non-leaf node and the key is included.\n   * if null is passed, the root(s) node(s) should be returned.\n   */\n  getChildren: TreeNodeFn<T>,\n  /**\n   * a function that converts each node into a key\n   */\n  getKey: (t: T) => Key,\n  roots: ReadonlyArray<T>,\n  targetNodeKeys: Iterable<Key>\n) => {\n  const targetNodeKeySet = new Set(targetNodeKeys);\n  const expandedKeys: Key[] = [];\n  dfsVisit<T, boolean>(\n    getChildren,\n    (node, childValues) => {\n      const key = getKey(node);\n      const isExpanded: boolean =\n        childValues?.some((childValue) => childValue) ||\n        targetNodeKeySet.has(key);\n      if (isExpanded) {\n        expandedKeys.push(key);\n      }\n      return isExpanded;\n    },\n    roots\n  );\n  return expandedKeys;\n};\n\nexport const dfsVisit = <T, R>(\n  getChildren: TreeNodeFn<T>,\n  visit: (node: T, childrenValues: null | R[]) => R,\n  roots: ReadonlyArray<T>\n) => {\n  const dfs = (node: T): R => {\n    const children = getChildren(node);\n    const values = children?.map(dfs) ?? null;\n    return visit(node, values);\n  };\n  roots.forEach(dfs);\n};\n\nexport const bfsVisit = <T, R>(\n  getChildren: TreeNodeFn<T>,\n  visit: (node: T, parentValue: R | null) => R,\n  roots: ReadonlyArray<T>\n) => {\n  const bfs: typeof visit = (node, parentValue) => {\n    const result = visit(node, parentValue);\n    const children = getChildren(node);\n    children?.map((childNode) => bfs(childNode, result));\n    return result;\n  };\n  return roots.map((root) => bfs(root, null));\n};\n\nexport const sortTreeNodesInPlace = <T>(\n  by: (t: T) => Ord,\n  tree: MutableTree<T>\n) => {\n  const compareFn = (a: T, b: T) => {\n    const aa = by(a);\n    const bb = by(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  };\n  tree.roots.sort(compareFn);\n  bfsVisit(\n    tree.getChildren,\n    (node) => {\n      const children = tree.getChildren(node);\n      if (children) {\n        children.sort(compareFn);\n      }\n    },\n    tree.roots\n  );\n};\n","import React, { useContext } from \"react\";\n\nexport const useContextOrThrow = <ContextType extends unknown>(\n  Context: React.Context<ContextType | null>,\n  nullErrorMessage: string\n) => {\n  const context = useContext<ContextType | null>(Context);\n\n  if (context == null) {\n    throw new Error(nullErrorMessage);\n  }\n\n  return context;\n};\n","import { useCallback, useLayoutEffect, useRef } from \"react\";\n\n/**\n * Interim solution for non-reactive callbacks, until\n * [useEvent](https://github.com/reactjs/rfcs/blob/useevent/text/0000-useevent.md) (or whatever it will end up being\n * called), becomes available.\n */\nexport function useEventCallback<T extends (...args: any[]) => any>(fn: T): T {\n  let ref = useRef<typeof fn>();\n  useLayoutEffect(() => {\n    ref.current = fn;\n  });\n  const callback = ((...args: Parameters<T>) =>\n    ref.current?.apply(null, args)) as T;\n  return useCallback<T>(callback, []);\n}\n","import { FocusEventHandler } from \"react\";\nimport { getFocusableTreeWalker } from \"@react-aria/focus\";\n\n/**\n * Provides a focus management mechanism for a container that doesn't retain focus but forwards it to its focusable\n * descendants. More specifically:\n * - When the container gets focused, it automatically focuses the first focusable child element.\n *   The {@param forwardFocus} parameter can be used to customize which element should receive focus.\n * - By default, focus is prevented from returning to the container itself when focus is being moved from a descendant\n *   to the container. {@param ignoreFocusedDescendant} can be set to `true`, to disable this behaviour.\n *   If {@param ignoreFocusedDescendant} is true, focus will be forcibly moved to the first element (or the element\n *   specified by {@param forwardFocus}) when the container gets focused.\n *\n * NOTE: This hook does not make the container element focusable. It only returns the focus event handler that should be\n * passed to the container.\n */\nexport function useFocusForwarder({\n  forwardFocus,\n  ignoreFocusedDescendant = false,\n}: {\n  /**\n   * Called when the container gets focused, to forward focus to the appropriate focusable child element.\n   * If not passed, focus is forwarded to the first focusable element, by default.\n   */\n  forwardFocus?: () => void;\n  ignoreFocusedDescendant?: boolean;\n} = {}) {\n  const onFocus: FocusEventHandler = (event) => {\n    if (event.target !== event.currentTarget) {\n      // only when this container is focused. not when anything inside is focused.\n      return;\n    }\n    const possiblyBlurredElement = event.relatedTarget;\n    if (\n      possiblyBlurredElement instanceof Element &&\n      event.currentTarget?.contains(possiblyBlurredElement) &&\n      !ignoreFocusedDescendant\n    ) {\n      // If anything inside the content is being blurred while the container is getting focused, we don't let focus\n      // go from that element, to the container.\n      if (possiblyBlurredElement instanceof HTMLElement) {\n        possiblyBlurredElement.focus();\n      }\n      return;\n    }\n    if (forwardFocus) {\n      forwardFocus();\n    } else {\n      (\n        getFocusableTreeWalker(event.currentTarget).firstChild() as HTMLElement\n      )?.focus();\n    }\n  };\n  return { focusForwarderProps: { onFocus } };\n}\n","import { useLayoutEffect, useRef } from \"react\";\n\nexport function useLatest<T>(value: T) {\n  const ref = useRef(value);\n  useLayoutEffect(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n","import { useEffect, useRef } from \"react\";\n\nexport function usePrevious<T>(value: T): T {\n  const ref = useRef(value);\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n","export class ImmutableSet<T> implements ReadonlySet<T> {\n  readonly size: number;\n  private readonly set: ReadonlySet<T>;\n\n  constructor(values: Iterable<T>) {\n    this.set = new Set(values);\n    this.size = this.set.size;\n  }\n\n  add(...items: T[]): ImmutableSet<T> {\n    return this.setValueWithMutation((newValue) => {\n      items.forEach((item) => {\n        newValue.add(item);\n      });\n    });\n  }\n\n  delete(...items: T[]): ImmutableSet<T> {\n    return this.setValueWithMutation((newValue) => {\n      items.forEach((item) => {\n        newValue.delete(item);\n      });\n    });\n  }\n\n  toggle(...items: T[]): ImmutableSet<T> {\n    return this.setValueWithMutation((newValue) => {\n      items.forEach((item) => {\n        if (!newValue.delete(item)) {\n          newValue.add(item);\n        }\n      });\n    });\n  }\n\n  clear(): ImmutableSet<T> {\n    return this.setValueWithMutation((newValue) => {\n      newValue.clear();\n    });\n  }\n\n  private setValueWithMutation(\n    mutate: (newValue: Set<T>) => void\n  ): ImmutableSet<T> {\n    const newValue = new Set(this.set);\n    mutate(newValue);\n    return new ImmutableSet(newValue);\n  }\n\n  ////////////////////////////////////////////////// delegated methods /////////////////////////////////////////////////\n  forEach(...args: Parameters<ReadonlySet<T>[\"forEach\"]>): void {\n    return this.set.forEach(...args);\n  }\n\n  has(value: T): boolean {\n    return this.set.has(value);\n  }\n\n  [Symbol.iterator](): IterableIterator<T> {\n    return this.set[Symbol.iterator]();\n  }\n\n  entries(): IterableIterator<[T, T]> {\n    return this.set.entries();\n  }\n\n  keys(): IterableIterator<T> {\n    return this.set.keys();\n  }\n\n  values(): IterableIterator<T> {\n    return this.set.values();\n  }\n}\n","import { useControlledState } from \"@react-stately/utils\";\nimport { useMemo } from \"react\";\nimport { ImmutableSet } from \"./immutableSet\";\n\n/**\n * Creates map interface out of a setter of form (currentValue: Map) => Map\n * Use {@link useControllableSet} instead if you need a Set state in a React component.\n * This is useful for use outside React components, such as state management libraries.\n */\nexport const createSetInterface = <T>(\n  set: (value: (prevState: Set<T>) => Set<T>) => void\n) => ({\n  add: (...values: T[]) =>\n    set(\n      (currentValue) => new Set(new ImmutableSet(currentValue).add(...values))\n    ),\n  delete: (...values: T[]) =>\n    set(\n      (currentValue) =>\n        new Set(new ImmutableSet(currentValue).delete(...values))\n    ),\n  clear: () =>\n    set((currentValue) => new Set(new ImmutableSet(currentValue).clear())),\n  toggle: (...values: T[]) =>\n    set(\n      (currentValue) =>\n        new Set(new ImmutableSet(currentValue).toggle(...values))\n    ),\n});\n\nfunction useStateSetterForSet<T>(\n  setValue: (value: (prevState: Set<T>) => Set<T>, ...args: any[]) => void\n) {\n  return useMemo(() => createSetInterface(setValue), [setValue]);\n}\n\n/**\n * controllable state management for a Set. returns a tuple containing the value and an object with Set functions on it,\n * which would update the state.\n */\nexport const useControllableSet = <T>(\n  valueProp: Set<T> | undefined,\n  defaultValue: Set<T> = new Set(),\n  onChange: ((newValue: Set<T>) => void) | undefined\n) => {\n  const [value, setValue] = useControlledState(\n    valueProp!, // bad typing in useControlledState\n    defaultValue,\n    onChange! // bad typing in useControlledState\n  );\n\n  // @ts-expect-error FIXME https://github.com/adobe/react-spectrum/issues/2320\n  return [value, useStateSetterForSet(setValue)] as const;\n};\n","import*as t from\"react\";function n(){return n=Object.assign?Object.assign.bind():function(t){for(var n=1;n<arguments.length;n++){var e=arguments[n];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])}return t},n.apply(this,arguments)}const e=[\"children\",\"options\"],r=[\"allowFullScreen\",\"allowTransparency\",\"autoComplete\",\"autoFocus\",\"autoPlay\",\"cellPadding\",\"cellSpacing\",\"charSet\",\"className\",\"classId\",\"colSpan\",\"contentEditable\",\"contextMenu\",\"crossOrigin\",\"encType\",\"formAction\",\"formEncType\",\"formMethod\",\"formNoValidate\",\"formTarget\",\"frameBorder\",\"hrefLang\",\"inputMode\",\"keyParams\",\"keyType\",\"marginHeight\",\"marginWidth\",\"maxLength\",\"mediaGroup\",\"minLength\",\"noValidate\",\"radioGroup\",\"readOnly\",\"rowSpan\",\"spellCheck\",\"srcDoc\",\"srcLang\",\"srcSet\",\"tabIndex\",\"useMap\"].reduce((t,n)=>(t[n.toLowerCase()]=n,t),{for:\"htmlFor\"}),o={amp:\"&\",apos:\"'\",gt:\">\",lt:\"<\",nbsp:\" \",quot:\"“\"},c=[\"style\",\"script\"],a=/([-A-Z0-9_:]+)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|(?:\\{((?:\\\\.|{[^}]*?}|[^}])*)\\})))?/gi,_=/mailto:/i,u=/\\n{2,}$/,i=/^( *>[^\\n]+(\\n[^\\n]+)*\\n*)+\\n{2,}/,s=/^ *> ?/gm,l=/^ {2,}\\n/,f=/^(?:( *[-*_])){3,} *(?:\\n *)+\\n/,d=/^\\s*(`{3,}|~{3,}) *(\\S+)?([^\\n]*?)?\\n([\\s\\S]+?)\\s*\\1 *(?:\\n *)*\\n?/,p=/^(?: {4}[^\\n]+\\n*)+(?:\\n *)+\\n?/,m=/^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,g=/^(?:\\n *)*\\n/,y=/\\r\\n?/g,h=/^\\[\\^([^\\]]+)](:.*)\\n/,k=/^\\[\\^([^\\]]+)]/,x=/\\f/g,b=/^\\s*?\\[(x|\\s)\\]/,$=/^ *(#{1,6}) *([^\\n]+?)(?: +#*)?(?:\\n *)*(?:\\n|$)/,v=/^ *(#{1,6}) +([^\\n]+?)(?: +#*)?(?:\\n *)*(?:\\n|$)/,S=/^([^\\n]+)\\n *(=|-){3,} *(?:\\n *)+\\n/,z=/^ *(?!<[a-z][^ >/]* ?\\/>)<([a-z][^ >/]*) ?([^>]*)\\/{0}>\\n?(\\s*(?:<\\1[^>]*?>[\\s\\S]*?<\\/\\1>|(?!<\\1)[\\s\\S])*?)<\\/\\1>\\n*/i,w=/&([a-z0-9]+|#[0-9]{1,6}|#x[0-9a-fA-F]{1,6});/gi,A=/^<!--[\\s\\S]*?(?:-->)/,E=/^(data|aria|x)-[a-z_][a-z\\d_.-]*$/,L=/^ *<([a-z][a-z0-9:]*)(?:\\s+((?:<.*?>|[^>])*))?\\/?>(?!<\\/\\1>)(\\s*\\n)?/i,M=/^\\{.*\\}$/,O=/^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,I=/^<([^ >]+@[^ >]+)>/,j=/^<([^ >]+:\\/[^ >]+)>/,B=/-([a-z])?/gi,R=/^(.*\\|?.*)\\n *(\\|? *[-:]+ *\\|[-| :]*)\\n((?:.*\\|.*\\n)*)\\n?/,T=/^\\[([^\\]]*)\\]:\\s+<?([^\\s>]+)>?\\s*(\"([^\"]*)\")?/,C=/^!\\[([^\\]]*)\\] ?\\[([^\\]]*)\\]/,D=/^\\[([^\\]]*)\\] ?\\[([^\\]]*)\\]/,F=/(\\[|\\])/g,N=/(\\n|^[-*]\\s|^#|^ {2,}|^-{2,}|^>\\s)/,P=/\\t/g,Z=/^ *\\| */,G=/(^ *\\||\\| *$)/g,H=/ *$/,q=/^ *:-+: *$/,U=/^ *:-+ *$/,V=/^ *-+: *$/,W=/^([*_])\\1((?:\\[.*?\\][([].*?[)\\]]|<.*?>(?:.*?<.*?>)?|`.*?`|~+.*?~+|.)*?)\\1\\1(?!\\1)/,Q=/^([*_])((?:\\[.*?\\][([].*?[)\\]]|<.*?>(?:.*?<.*?>)?|`.*?`|~+.*?~+|.)*?)\\1(?!\\1|\\w)/,X=/^==((?:\\[.*?\\]|<.*?>(?:.*?<.*?>)?|`.*?`|.)*?)==/,J=/^~~((?:\\[.*?\\]|<.*?>(?:.*?<.*?>)?|`.*?`|.)*?)~~/,K=/^\\\\([^0-9A-Za-z\\s])/,Y=/^[\\s\\S]+?(?=[^0-9A-Z\\s\\u00c0-\\uffff&#;.()'\"]|\\d+\\.|\\n\\n| {2,}\\n|\\w+:\\S|$)/i,tt=/^\\n+/,nt=/^([ \\t]*)/,et=/\\\\([^\\\\])/g,rt=/ *\\n+$/,ot=/(?:^|\\n)( *)$/,ct=\"(?:\\\\d+\\\\.)\",at=\"(?:[*+-])\";function _t(t){return\"( *)(\"+(1===t?ct:at)+\") +\"}const ut=_t(1),it=_t(2);function st(t){return new RegExp(\"^\"+(1===t?ut:it))}const lt=st(1),ft=st(2);function dt(t){return new RegExp(\"^\"+(1===t?ut:it)+\"[^\\\\n]*(?:\\\\n(?!\\\\1\"+(1===t?ct:at)+\" )[^\\\\n]*)*(\\\\n|$)\",\"gm\")}const pt=dt(1),mt=dt(2);function gt(t){const n=1===t?ct:at;return new RegExp(\"^( *)(\"+n+\") [\\\\s\\\\S]+?(?:\\\\n{2,}(?! )(?!\\\\1\"+n+\" (?!\"+n+\" ))\\\\n*|\\\\s*\\\\n*$)\")}const yt=gt(1),ht=gt(2);function kt(t,n){const e=1===n,r=e?yt:ht,o=e?pt:mt,c=e?lt:ft;return{t(t,n,e){const o=ot.exec(e);return o&&(n.o||!n._&&!n.u)?r.exec(t=o[1]+t):null},i:Ht.HIGH,l(t,n,r){const a=e?+t[2]:void 0,_=t[0].replace(u,\"\\n\").match(o);let i=!1;return{p:_.map(function(t,e){const o=c.exec(t)[0].length,a=new RegExp(\"^ {1,\"+o+\"}\",\"gm\"),u=t.replace(a,\"\").replace(c,\"\"),s=e===_.length-1,l=-1!==u.indexOf(\"\\n\\n\")||s&&i;i=l;const f=r._,d=r.o;let p;r.o=!0,l?(r._=!1,p=u.replace(rt,\"\\n\\n\")):(r._=!0,p=u.replace(rt,\"\"));const m=n(p,r);return r._=f,r.o=d,m}),m:e,g:a}},h:(n,e,r)=>t(n.m?\"ol\":\"ul\",{key:r.k,start:n.g},n.p.map(function(n,o){return t(\"li\",{key:o},e(n,r))}))}}const xt=/^\\[([^\\]]*)]\\( *((?:\\([^)]*\\)|[^() ])*) *\"?([^)\"]*)?\"?\\)/,bt=/^!\\[([^\\]]*)]\\( *((?:\\([^)]*\\)|[^() ])*) *\"?([^)\"]*)?\"?\\)/,$t=[i,d,p,$,S,v,A,R,pt,yt,mt,ht],vt=[...$t,/^[^\\n]+(?:  \\n|\\n{2,})/,z,L];function St(t){return t.replace(/[ÀÁÂÃÄÅàáâãäåæÆ]/g,\"a\").replace(/[çÇ]/g,\"c\").replace(/[ðÐ]/g,\"d\").replace(/[ÈÉÊËéèêë]/g,\"e\").replace(/[ÏïÎîÍíÌì]/g,\"i\").replace(/[Ññ]/g,\"n\").replace(/[øØœŒÕõÔôÓóÒò]/g,\"o\").replace(/[ÜüÛûÚúÙù]/g,\"u\").replace(/[ŸÿÝý]/g,\"y\").replace(/[^a-z0-9- ]/gi,\"\").replace(/ /gi,\"-\").toLowerCase()}function zt(t){return V.test(t)?\"right\":q.test(t)?\"center\":U.test(t)?\"left\":null}function wt(t,n,e){const r=e.$;e.$=!0;const o=n(t.trim(),e);e.$=r;let c=[[]];return o.forEach(function(t,n){\"tableSeparator\"===t.type?0!==n&&n!==o.length-1&&c.push([]):(\"text\"!==t.type||null!=o[n+1]&&\"tableSeparator\"!==o[n+1].type||(t.v=t.v.replace(H,\"\")),c[c.length-1].push(t))}),c}function At(t,n,e){e._=!0;const r=wt(t[1],n,e),o=t[2].replace(G,\"\").split(\"|\").map(zt),c=function(t,n,e){return t.trim().split(\"\\n\").map(function(t){return wt(t,n,e)})}(t[3],n,e);return e._=!1,{S:o,A:c,L:r,type:\"table\"}}function Et(t,n){return null==t.S[n]?{}:{textAlign:t.S[n]}}function Lt(t){return function(n,e){return e._?t.exec(n):null}}function Mt(t){return function(n,e){return e._||e.u?t.exec(n):null}}function Ot(t){return function(n,e){return e._||e.u?null:t.exec(n)}}function It(t){return function(n){return t.exec(n)}}function jt(t,n,e){if(n._||n.u)return null;if(e&&!e.endsWith(\"\\n\"))return null;let r=\"\";t.split(\"\\n\").every(t=>!$t.some(n=>n.test(t))&&(r+=t+\"\\n\",t.trim()));const o=r.trimEnd();return\"\"==o?null:[r,o]}function Bt(t){try{if(decodeURIComponent(t).replace(/[^A-Za-z0-9/:]/g,\"\").match(/^\\s*(javascript|vbscript|data(?!:image)):/i))return}catch(t){return null}return t}function Rt(t){return t.replace(et,\"$1\")}function Tt(t,n,e){const r=e._||!1,o=e.u||!1;e._=!0,e.u=!0;const c=t(n,e);return e._=r,e.u=o,c}function Ct(t,n,e){const r=e._||!1,o=e.u||!1;e._=!1,e.u=!0;const c=t(n,e);return e._=r,e.u=o,c}function Dt(t,n,e){return e._=!1,t(n,e)}const Ft=(t,n,e)=>({v:Tt(n,t[1],e)});function Nt(){return{}}function Pt(){return null}function Zt(...t){return t.filter(Boolean).join(\" \")}function Gt(t,n,e){let r=t;const o=n.split(\".\");for(;o.length&&(r=r[o[0]],void 0!==r);)o.shift();return r||e}var Ht;function qt(e,u={}){u.overrides=u.overrides||{},u.slugify=u.slugify||St,u.namedCodesToUnicode=u.namedCodesToUnicode?n({},o,u.namedCodesToUnicode):o;const G=u.createElement||t.createElement;function H(t,e,...r){const o=Gt(u.overrides,`${t}.props`,{});return G(function(t,n){const e=Gt(n,t);return e?\"function\"==typeof e||\"object\"==typeof e&&\"render\"in e?e:Gt(n,`${t}.component`,t):t}(t,u.overrides),n({},e,o,{className:Zt(null==e?void 0:e.className,o.className)||void 0}),...r)}function q(n){let e=!1;u.forceInline?e=!0:u.forceBlock||(e=!1===N.test(n));const r=ct(ot(e?n:`${n.trimEnd().replace(tt,\"\")}\\n\\n`,{_:e}));for(;\"string\"==typeof r[r.length-1]&&!r[r.length-1].trim();)r.pop();if(null===u.wrapper)return r;const o=u.wrapper||(e?\"span\":\"div\");let c;if(r.length>1||u.forceWrapper)c=r;else{if(1===r.length)return c=r[0],\"string\"==typeof c?H(\"span\",{key:\"outer\"},c):c;c=null}return t.createElement(o,{key:\"outer\"},c)}function U(n){const e=n.match(a);return e?e.reduce(function(n,e,o){const c=e.indexOf(\"=\");if(-1!==c){const a=function(t){return-1!==t.indexOf(\"-\")&&null===t.match(E)&&(t=t.replace(B,function(t,n){return n.toUpperCase()})),t}(e.slice(0,c)).trim(),_=function(t){const n=t[0];return('\"'===n||\"'\"===n)&&t.length>=2&&t[t.length-1]===n?t.slice(1,-1):t}(e.slice(c+1).trim()),u=r[a]||a,i=n[u]=function(t,n){return\"style\"===t?n.split(/;\\s?/).reduce(function(t,n){const e=n.slice(0,n.indexOf(\":\"));return t[e.replace(/(-[a-z])/g,t=>t[1].toUpperCase())]=n.slice(e.length+1).trim(),t},{}):\"href\"===t?Bt(n):(n.match(M)&&(n=n.slice(1,n.length-1)),\"true\"===n||\"false\"!==n&&n)}(a,_);\"string\"==typeof i&&(z.test(i)||L.test(i))&&(n[u]=t.cloneElement(q(i.trim()),{key:o}))}else\"style\"!==e&&(n[r[e]||e]=!0);return n},{}):null}const V=[],et={},rt={blockQuote:{t:Ot(i),i:Ht.HIGH,l:(t,n,e)=>({v:n(t[0].replace(s,\"\"),e)}),h:(t,n,e)=>H(\"blockquote\",{key:e.k},n(t.v,e))},breakLine:{t:It(l),i:Ht.HIGH,l:Nt,h:(t,n,e)=>H(\"br\",{key:e.k})},breakThematic:{t:Ot(f),i:Ht.HIGH,l:Nt,h:(t,n,e)=>H(\"hr\",{key:e.k})},codeBlock:{t:Ot(p),i:Ht.MAX,l:t=>({v:t[0].replace(/^ {4}/gm,\"\").replace(/\\n+$/,\"\"),M:void 0}),h:(t,e,r)=>H(\"pre\",{key:r.k},H(\"code\",n({},t.O,{className:t.M?`lang-${t.M}`:\"\"}),t.v))},codeFenced:{t:Ot(d),i:Ht.MAX,l:t=>({O:U(t[3]||\"\"),v:t[4],M:t[2]||void 0,type:\"codeBlock\"})},codeInline:{t:Mt(m),i:Ht.LOW,l:t=>({v:t[2]}),h:(t,n,e)=>H(\"code\",{key:e.k},t.v)},footnote:{t:Ot(h),i:Ht.MAX,l:t=>(V.push({I:t[2],j:t[1]}),{}),h:Pt},footnoteReference:{t:Lt(k),i:Ht.HIGH,l:t=>({v:t[1],B:`#${u.slugify(t[1])}`}),h:(t,n,e)=>H(\"a\",{key:e.k,href:Bt(t.B)},H(\"sup\",{key:e.k},t.v))},gfmTask:{t:Lt(b),i:Ht.HIGH,l:t=>({R:\"x\"===t[1].toLowerCase()}),h:(t,n,e)=>H(\"input\",{checked:t.R,key:e.k,readOnly:!0,type:\"checkbox\"})},heading:{t:Ot(u.enforceAtxHeadings?v:$),i:Ht.HIGH,l:(t,n,e)=>({v:Tt(n,t[2],e),T:u.slugify(t[2]),C:t[1].length}),h:(t,n,e)=>H(`h${t.C}`,{id:t.T,key:e.k},n(t.v,e))},headingSetext:{t:Ot(S),i:Ht.MAX,l:(t,n,e)=>({v:Tt(n,t[1],e),C:\"=\"===t[2]?1:2,type:\"heading\"})},htmlComment:{t:It(A),i:Ht.HIGH,l:()=>({}),h:Pt},image:{t:Mt(bt),i:Ht.HIGH,l:t=>({D:t[1],B:Rt(t[2]),F:t[3]}),h:(t,n,e)=>H(\"img\",{key:e.k,alt:t.D||void 0,title:t.F||void 0,src:Bt(t.B)})},link:{t:Lt(xt),i:Ht.LOW,l:(t,n,e)=>({v:Ct(n,t[1],e),B:Rt(t[2]),F:t[3]}),h:(t,n,e)=>H(\"a\",{key:e.k,href:Bt(t.B),title:t.F},n(t.v,e))},linkAngleBraceStyleDetector:{t:Lt(j),i:Ht.MAX,l:t=>({v:[{v:t[1],type:\"text\"}],B:t[1],type:\"link\"})},linkBareUrlDetector:{t:(t,n)=>n.N?null:Lt(O)(t,n),i:Ht.MAX,l:t=>({v:[{v:t[1],type:\"text\"}],B:t[1],F:void 0,type:\"link\"})},linkMailtoDetector:{t:Lt(I),i:Ht.MAX,l(t){let n=t[1],e=t[1];return _.test(e)||(e=\"mailto:\"+e),{v:[{v:n.replace(\"mailto:\",\"\"),type:\"text\"}],B:e,type:\"link\"}}},orderedList:kt(H,1),unorderedList:kt(H,2),newlineCoalescer:{t:Ot(g),i:Ht.LOW,l:Nt,h:()=>\"\\n\"},paragraph:{t:jt,i:Ht.LOW,l:Ft,h:(t,n,e)=>H(\"p\",{key:e.k},n(t.v,e))},ref:{t:Lt(T),i:Ht.MAX,l:t=>(et[t[1]]={B:t[2],F:t[4]},{}),h:Pt},refImage:{t:Mt(C),i:Ht.MAX,l:t=>({D:t[1]||void 0,P:t[2]}),h:(t,n,e)=>H(\"img\",{key:e.k,alt:t.D,src:Bt(et[t.P].B),title:et[t.P].F})},refLink:{t:Lt(D),i:Ht.MAX,l:(t,n,e)=>({v:n(t[1],e),Z:n(t[0].replace(F,\"\\\\$1\"),e),P:t[2]}),h:(t,n,e)=>et[t.P]?H(\"a\",{key:e.k,href:Bt(et[t.P].B),title:et[t.P].F},n(t.v,e)):H(\"span\",{key:e.k},n(t.Z,e))},table:{t:Ot(R),i:Ht.HIGH,l:At,h:(t,n,e)=>H(\"table\",{key:e.k},H(\"thead\",null,H(\"tr\",null,t.L.map(function(r,o){return H(\"th\",{key:o,style:Et(t,o)},n(r,e))}))),H(\"tbody\",null,t.A.map(function(r,o){return H(\"tr\",{key:o},r.map(function(r,o){return H(\"td\",{key:o,style:Et(t,o)},n(r,e))}))})))},tableSeparator:{t:function(t,n){return n.$?(n._=!0,Z.exec(t)):null},i:Ht.HIGH,l:function(){return{type:\"tableSeparator\"}},h:()=>\" | \"},text:{t:It(Y),i:Ht.MIN,l:t=>({v:t[0].replace(w,(t,n)=>u.namedCodesToUnicode[n]?u.namedCodesToUnicode[n]:t)}),h:t=>t.v},textBolded:{t:Mt(W),i:Ht.MED,l:(t,n,e)=>({v:n(t[2],e)}),h:(t,n,e)=>H(\"strong\",{key:e.k},n(t.v,e))},textEmphasized:{t:Mt(Q),i:Ht.LOW,l:(t,n,e)=>({v:n(t[2],e)}),h:(t,n,e)=>H(\"em\",{key:e.k},n(t.v,e))},textEscaped:{t:Mt(K),i:Ht.HIGH,l:t=>({v:t[1],type:\"text\"})},textMarked:{t:Mt(X),i:Ht.LOW,l:Ft,h:(t,n,e)=>H(\"mark\",{key:e.k},n(t.v,e))},textStrikethroughed:{t:Mt(J),i:Ht.LOW,l:Ft,h:(t,n,e)=>H(\"del\",{key:e.k},n(t.v,e))}};!0!==u.disableParsingRawHTML&&(rt.htmlBlock={t:It(z),i:Ht.HIGH,l(t,n,e){const[,r]=t[3].match(nt),o=new RegExp(`^${r}`,\"gm\"),a=t[3].replace(o,\"\"),_=(u=a,vt.some(t=>t.test(u))?Dt:Tt);var u;const i=t[1].toLowerCase(),s=-1!==c.indexOf(i);e.N=e.N||\"a\"===i;const l=s?t[3]:_(n,a,e);return e.N=!1,{O:U(t[2]),v:l,G:s,H:s?i:t[1]}},h:(t,e,r)=>H(t.H,n({key:r.k},t.O),t.G?t.v:e(t.v,r))},rt.htmlSelfClosing={t:It(L),i:Ht.HIGH,l:t=>({O:U(t[2]||\"\"),H:t[1]}),h:(t,e,r)=>H(t.H,n({},t.O,{key:r.k}))});const ot=function(t){let n=Object.keys(t);function e(r,o){let c=[],a=\"\";for(;r;){let _=0;for(;_<n.length;){const u=n[_],i=t[u],s=i.t(r,o,a);if(s){const t=s[0];r=r.substring(t.length);const n=i.l(s,e,o);null==n.type&&(n.type=u),c.push(n),a=t;break}_++}}return c}return n.sort(function(n,e){let r=t[n].i,o=t[e].i;return r!==o?r-o:n<e?-1:1}),function(t,n){return e(function(t){return t.replace(y,\"\\n\").replace(x,\"\").replace(P,\"    \")}(t),n)}}(rt),ct=(at=function(t){return function(n,e,r){return t[n.type].h(n,e,r)}}(rt),function t(n,e={}){if(Array.isArray(n)){const r=e.k,o=[];let c=!1;for(let r=0;r<n.length;r++){e.k=r;const a=t(n[r],e),_=\"string\"==typeof a;_&&c?o[o.length-1]+=a:null!==a&&o.push(a),c=_}return e.k=r,o}return at(n,t,e)});var at;const _t=q(e);return V.length?H(\"div\",null,_t,H(\"footer\",{key:\"footer\"},V.map(function(t){return H(\"div\",{id:u.slugify(t.j),key:t.j},t.j,ct(ot(t.I,{_:!0})))}))):_t}!function(t){t[t.MAX=0]=\"MAX\",t[t.HIGH=1]=\"HIGH\",t[t.MED=2]=\"MED\",t[t.LOW=3]=\"LOW\",t[t.MIN=4]=\"MIN\"}(Ht||(Ht={}));export default n=>{let{children:r,options:o}=n,c=function(t,n){if(null==t)return{};var e,r,o={},c=Object.keys(t);for(r=0;r<c.length;r++)n.indexOf(e=c[r])>=0||(o[e]=t[e]);return o}(n,e);return t.cloneElement(qt(r,o),c)};export{qt as compiler};\n//# sourceMappingURL=index.modern.js.map\n","import React from \"react\";\nimport Markdown from \"markdown-to-jsx\";\n// @ts-expect-error ¯\\_(ツ)_/¯\nimport { DocgenInfo } from \"@storybook/addon-docs/dist/ts3.9/lib/docgen/types\";\nimport MDXComponents from \"@theme/MDXComponents\";\nimport { useAutoLinkedJsDoc } from \"./component-linking\";\n// import { ApiModel, ApiPackage } from \"@microsoft/api-extractor-model\";\n\n// const apiModel: ApiModel = new ApiModel();\n// language=file-reference\n// const apiPackage: ApiPackage = apiModel.loadPackage(\n//   \"../../../jui/temp/core.api.json\"\n// );\n// console.log(\"apiPackage\", ApiPackage);\n\ntype WithDocGenInfo<T = any> = T & {\n  __docgenInfo?: DocgenInfo;\n};\n/**\n * Renders description (aka Summary) of an exported symbol, from it's jsdoc (tsdoc) comment block.\n * The plan is to use the ApiModel created by @microsoft/api-extractor, but there are issues preventing that at the\n * moment. So we are using a fallback implementation which relies on `react-docgen` babel plugin which adds\n * `__docgetInfo` property to all exports.\n */\nexport const ApiDescription = ({\n  of,\n}: {\n  of:\n    | WithDocGenInfo\n    | {\n        render?: WithDocGenInfo /*for ref forwarding components */;\n      };\n}) => {\n  const docgenInfo = of.render?.__docgenInfo || of.__docgenInfo;\n  if (!docgenInfo?.description) {\n    console.log(\"ApiDescription not found for:\", of);\n    // eslint-disable-next-line no-undef\n    if (process.env.NODE_ENV === \"development\")\n      return (\n        <div style={{ background: \"#ffd7d7\" }}>\n          Could not find API description for:\n          <pre style={{ background: \"none\" }}>\n            {JSON.stringify(of, null, 2)}\n          </pre>\n          See the console.\n        </div>\n      );\n    throw new Error(\"API documentation not found.\");\n  }\n  return (\n    <Markdown options={{ overrides: MDXComponents }}>\n      {useAutoLinkedJsDoc(docgenInfo.description)}\n    </Markdown>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport useDocusaurusContext from \"@docusaurus/useDocusaurusContext\";\nimport type { GlobalPluginData } from \"@docusaurus/plugin-content-docs/client\";\nimport { parse } from \"jsdoc-parse-plus\";\nimport Link from \"@docusaurus/Link\";\n\nfunction useDocs() {\n  return (\n    useDocusaurusContext().globalData[\"docusaurus-plugin-content-docs\"]\n      .default as GlobalPluginData\n  ).versions.find((version) => version.name === \"current\")?.docs;\n}\n\n/**\n * Returns a mapping from component names to documentation pages. We don't have a proper API\n * Docs section now, so not all components have a corresponding page. But it's a middle ground solution\n * until a more structured API documentation page is added, and mdx files are limited to guides, introductions, etc.\n */\nexport function useComponentLinkMap(): { [componentName: string]: string } {\n  const docs = useDocs();\n  return useMemo(() => {\n    const linkMap: Record<string, string> = {};\n    docs?.forEach((doc) => {\n      // maybe change the criteria based on sidebar later, if components are moved to a dedicated sidebar\n      const componentName = doc.id.match(/components\\/(.*)/)?.[1];\n      if (componentName) {\n        linkMap[componentName] = doc.path;\n      }\n    });\n    return linkMap;\n  }, [docs]);\n}\n\n/**\n * A replacement for `code` elements in documentation, which renders a link\n * to the corresponding page, if the code snippet exactly matches one of\n * the components.\n */\nexport function InlineCode({ children }: { children: string }) {\n  const link = useComponentLinkMap()[children];\n  if (link) {\n    return <Link to={link}>{children}</Link>;\n  }\n  return <code>{children}</code>;\n}\n\n/**\n * Converts links in the form of \"{\\@link SomeComponent}\" to Markdown link\n * format (\"[SomeComponent](./path/to/component/page)\"), which otherwise will\n * not be rendered as a link, due to missing url.\n */\nexport function useAutoLinkedJsDoc(content: string) {\n  const componentLinkMap = useComponentLinkMap();\n  const comment = toCommentBlock(content);\n  return (\n    parse(comment, [], (link) => {\n      const path = componentLinkMap[link.url];\n      if (path) {\n        return `[${link.text}](${path})`;\n      }\n      return `\\`${link.text}\\``;\n    }).description as any\n  )?.value;\n}\n\nconst toCommentBlock = (str: string) =>\n  [\"/**\", ...str.split(\"\\n\").map((line) => `* ${line}`), \"*/\"].join(\"\\n\");\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { ComponentType } from \"react\";\nimport { useTheme } from \"@intellij-platform/core\";\nimport Playground from \"./Playground\";\nimport ReactLiveScope from \"@theme/ReactLiveScope\";\nimport type { Props as CodeBlockProps } from \"@theme/CodeBlock\";\nimport CodeBlock from \"@theme-init/CodeBlock\";\nimport clsx from \"clsx\";\nimport styles from \"../Playground/style-overrides.module.css\";\n\nconst withLiveEditor = <P extends CodeBlockProps & { live?: boolean }>(\n  Component: ComponentType<P>\n) => {\n  function WithLiveEditor(props: P) {\n    if (typeof props.children !== \"string\") {\n      throw new Error(\n        `unexpected non-string code block children: ${props.children}`\n      );\n    }\n    if (props.live) {\n      // idea: We can support playground with alternative sources, where each of them will show up as a button\n      // below the default playground. Clicking on buttons will switch to that example. There can be a simple syntax\n      // for embedding multiple sources in one code block which then will be converted into examples here.\n      return (\n        <Playground scope={ReactLiveScope} {...props}>\n          {props.children}\n        </Playground>\n      );\n    }\n\n    return <Component {...props} />;\n  }\n\n  return WithLiveEditor;\n};\n\nconst withThemeBackground = <P extends CodeBlockProps>(\n  Component: ComponentType<P>\n) => {\n  function WithThemeBackground(props: P) {\n    const theme = useTheme();\n    const content = <Component {...props} />;\n    const style: Record<string, string | number | undefined> = {\n      \"--ifm-list-item-margin\": 0,\n    };\n\n    const flags = props.metastring?.split(\" \") ?? [];\n    const themed = flags.includes(\"themed\");\n    if (themed) {\n      style.color = theme.color(\"*.foreground\");\n      style[\"--ifm-pre-background\"] = theme.color(\"*.background\");\n      style[\"--ifm-code-background\"] = \"none\";\n    }\n    return (\n      <div\n        style={style}\n        className={clsx(styles.playground, {\n          [styles.noPadding]: flags.includes(\"noPadding\"),\n        })}\n      >\n        {content}\n      </div>\n    );\n  }\n\n  return WithThemeBackground;\n};\n\nexport default withThemeBackground(withLiveEditor(CodeBlock));\n","import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledSvg = styled.svg`\n  position: absolute;\n  width: 24px;\n  left: 50%;\n  bottom: 1rem;\n  transform: translate(-50%, 0) rotate(180deg);\n`;\n\nconst StyledExpandButton = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 50%;\n  bottom: 0;\n  background: linear-gradient(0deg, rgba(255, 255, 255, 1), transparent);\n  cursor: pointer;\n  ${StyledSvg} {\n    opacity: 0;\n    transition: opacity 0.3s;\n  }\n  &:hover ${StyledSvg} {\n    opacity: 1;\n  }\n`;\nconst StyledContainer = styled.div<{ expanded: boolean }>`\n  position: relative;\n  max-height: ${({ expanded }) => (expanded ? undefined : \"200px\")};\n`;\n\nexport function Expandable({\n  children,\n  expanded,\n  onExpand,\n  isExpandable,\n  setIsExpandable,\n}: {\n  children: React.ReactNode;\n  expanded: boolean;\n  onExpand: () => void;\n  isExpandable: boolean;\n  setIsExpandable: (isExpandable: boolean) => void;\n}) {\n  const ref = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (ref.current) {\n      const expandable = ref.current?.scrollHeight > ref.current?.offsetHeight;\n      if (expandable !== isExpandable) {\n        setIsExpandable(expandable);\n      }\n    }\n  });\n  return (\n    <StyledContainer ref={ref} expanded={expanded}>\n      {children}\n      {!expanded && isExpandable && (\n        <StyledExpandButton onClick={onExpand}>\n          <StyledSvg viewBox=\"0 0 50 50\">\n            <path\n              fill=\"none\"\n              stroke=\"#000\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M-20 10 0-10l20 20\"\n              transform=\"translate(25 25)\"\n            />\n          </StyledSvg>\n        </StyledExpandButton>\n      )}\n    </StyledContainer>\n  );\n}\n","/**\n * NOTE: this file is copied from Docusaurus repo, to customize the live code blocks UI, since the exported\n * functionality doesn't allow for the needed customizations.\n * Original file: https://github.com/facebook/docusaurus/blob/main/packages/docusaurus-theme-live-codeblock/src/theme/Playground/index.tsx\n */\n\nimport React, { ForwardedRef, useState } from \"react\";\nimport clsx from \"clsx\";\nimport useIsBrowser from \"@docusaurus/useIsBrowser\";\nimport { LiveEditor, LiveError, LivePreview, LiveProvider } from \"react-live\";\nimport Translate from \"@docusaurus/Translate\";\nimport BrowserOnly from \"@docusaurus/BrowserOnly\";\nimport {\n  ErrorBoundaryTryAgainButton,\n  usePrismTheme,\n} from \"@docusaurus/theme-common\";\nimport ErrorBoundary from \"@docusaurus/ErrorBoundary\";\n\nimport type { Props } from \"@theme/Playground\";\nimport type { Props as ErrorProps } from \"@theme/Error\";\n\nimport styles from \"@docusaurus/theme-live-codeblock/lib/theme/Playground/styles.module.css\";\nimport { Expandable } from \"./Expandable\";\nimport {\n  PlatformIcon,\n  IconButton,\n  ThemeProvider,\n  Theme,\n  ActionTooltip,\n  TooltipTrigger,\n} from \"@intellij-platform/core\";\nimport lightThemeJson from \"@intellij-platform/core/themes/intellijlaf.theme.json\";\n\nfunction Header({\n  children,\n  icons,\n}: {\n  children: React.ReactNode;\n  icons?: React.ReactNode;\n}) {\n  return (\n    <div className={clsx(styles.playgroundHeader)} style={{ display: \"flex\" }}>\n      <span style={{ flex: 1 }}>{children}</span>\n      {icons}\n    </div>\n  );\n}\n\nfunction LivePreviewLoader() {\n  // Is it worth improving/translating?\n  return <div>Loading...</div>;\n}\n\nfunction ErrorFallback({ error, tryAgain }: ErrorProps): JSX.Element {\n  return (\n    <div className={styles.errorFallback}>\n      <p>{error.message}</p>\n      <ErrorBoundaryTryAgainButton onClick={tryAgain} />\n    </div>\n  );\n}\n\nfunction Preview() {\n  // No SSR for the live preview\n  // See https://github.com/facebook/docusaurus/issues/5747\n  return (\n    <BrowserOnly fallback={<LivePreviewLoader />}>\n      {() => (\n        <>\n          <ErrorBoundary fallback={(params) => <ErrorFallback {...params} />}>\n            <LivePreview />\n          </ErrorBoundary>\n          <LiveError />\n        </>\n      )}\n    </BrowserOnly>\n  );\n}\n\nfunction ResultWithHeader() {\n  return (\n    <>\n      <Header>\n        <Translate\n          id=\"theme.Playground.result\"\n          description=\"The result label of the live codeblocks\"\n        >\n          Result\n        </Translate>\n      </Header>\n      {/* https://github.com/facebook/docusaurus/issues/5747 */}\n      <div className={styles.playgroundPreview}>\n        <Preview />\n      </div>\n    </>\n  );\n}\n\nfunction ThemedLiveEditor({\n  expanded,\n  isExpandable,\n  onExpand,\n  setIsExpandable,\n}: {\n  expanded: boolean;\n  isExpandable: boolean;\n  onExpand: () => void;\n  setIsExpandable: (expandable: boolean) => void;\n}) {\n  const isBrowser = useIsBrowser();\n  return (\n    <Expandable\n      expanded={expanded}\n      isExpandable={isExpandable}\n      onExpand={onExpand}\n      setIsExpandable={setIsExpandable}\n    >\n      <LiveEditor\n        // We force remount the editor on hydration,\n        // otherwise dark prism theme is not applied\n        key={String(isBrowser)}\n        className={styles.playgroundEditor}\n      />\n    </Expandable>\n  );\n}\n\nfunction EditorWithHeader() {\n  const [expanded, setExpanded] = useState(false);\n  const [expandable, setExpandable] = useState(false);\n  return (\n    <>\n      <Header\n        icons={\n          <ThemeProvider theme={new Theme(lightThemeJson as any)}>\n            {(expanded || expandable) && (\n              <TooltipTrigger\n                tooltip={\n                  <ActionTooltip\n                    actionName={expanded ? \"Collapse code\" : \"Expand code\"}\n                  />\n                }\n              >\n                <IconButton\n                  onPress={() => setExpanded((expanded) => !expanded)}\n                >\n                  <PlatformIcon\n                    icon={\n                      expanded ? \"actions/collapseall\" : \"actions/expandall\"\n                    }\n                  />\n                </IconButton>\n              </TooltipTrigger>\n            )}\n          </ThemeProvider>\n        }\n      >\n        <Translate\n          id=\"theme.Playground.liveEditor\"\n          description=\"The live editor label of the live codeblocks\"\n        >\n          Live Editor\n        </Translate>\n      </Header>\n      <ThemedLiveEditor\n        expanded={expanded}\n        onExpand={() => setExpanded(true)}\n        isExpandable={expandable}\n        setIsExpandable={setExpandable}\n      />\n    </>\n  );\n}\n\nexport default React.forwardRef(function Playground(\n  { children, transformCode, ...props }: Props,\n  ref: ForwardedRef<HTMLDivElement>\n): JSX.Element {\n  const prismTheme = usePrismTheme();\n\n  const noInline = props.metastring?.includes(\"noInline\") ?? false;\n\n  return (\n    <>\n      <div ref={ref} className={styles.playgroundContainer}>\n        <LiveProvider\n          code={children?.replace(/\\n$/, \"\")}\n          noInline={noInline}\n          transformCode={transformCode ?? ((code) => `${code};`)}\n          theme={prismTheme}\n          {...props}\n        >\n          <ResultWithHeader />\n          <EditorWithHeader />\n        </LiveProvider>\n      </div>\n    </>\n  );\n});\n","import { styled } from \"../styled\";\n\nexport const SpeedSearchContainer = styled.div`\n  position: relative;\n  overflow: visible;\n  max-height: 100%;\n`;\n","import styled from \"styled-components\";\nimport { SpeedSearchContainer } from \"../SpeedSearch/SpeedSearchContainer\";\n\nexport const CollectionSpeedSearchContainer = styled(SpeedSearchContainer)<{\n  fillAvailableSpace?: boolean;\n}>`\n  display: flex;\n  flex-direction: column;\n  flex: ${({ fillAvailableSpace }) => (fillAvailableSpace ? 1 : undefined)};\n`;\n","import { ListState } from \"@react-stately/list\";\nimport { SelectionManager } from \"@react-stately/selection\";\nimport { HTMLProps, Key, RefObject } from \"react\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { ListKeyboardDelegate } from \"@react-aria/selection\";\nimport {\n  CollectionSpeedSearchContextValue,\n  useCollectionSpeedSearch,\n} from \"@intellij-platform/core/CollectionSpeedSearch\";\nimport { SpeedSearchProps } from \"@intellij-platform/core/SpeedSearch\";\nimport { SpeedSearchPopupProps } from \"../../SpeedSearch/SpeedSearchPopup\";\nimport { TextRange } from \"../../TextRange\";\nimport { ListProps, useList } from \"../useList\";\n\ninterface UseListProps\n  extends Omit<ListProps, \"keyboardDelegate\" | \"disallowTypeAhead\">,\n    Pick<SpeedSearchProps, \"keepSearchActiveOnBlur\"> {}\n\nexport function useSpeedSearchList<T>(\n  props: UseListProps,\n  listState: ListState<T>,\n  ref: RefObject<HTMLElement>\n): ReturnType<typeof useList<T>> & {\n  searchPopupProps: SpeedSearchPopupProps;\n  focused: boolean;\n  selectionManager: SelectionManager;\n  speedSearchContextValue: CollectionSpeedSearchContextValue;\n  matches: Map<Key, TextRange[]>;\n} {\n  const { keepSearchActiveOnBlur } = props;\n\n  const {\n    speedSearch,\n    selectionManager,\n    keyboardDelegate,\n    containerProps: speedSearchContainerProps,\n    searchPopupProps,\n    speedSearchContextValue,\n  } = useCollectionSpeedSearch({\n    collection: listState.collection,\n    selectionManager: listState.selectionManager,\n    keyboardDelegate: new ListKeyboardDelegate(\n      listState.collection,\n      listState.disabledKeys,\n      ref\n    ),\n    keepSearchActiveOnBlur,\n    ref,\n  });\n  const { listProps, ...otherOutputs } = useList(\n    {\n      ...props,\n      disallowTypeAhead: true,\n      keyboardDelegate,\n    },\n    { ...listState, selectionManager },\n    ref\n  );\n\n  return {\n    ...otherOutputs,\n    listProps: mergeProps(listProps, speedSearchContainerProps),\n    matches: speedSearch.matches,\n    selectionManager,\n    speedSearchContextValue,\n    searchPopupProps,\n  };\n}\n","import React, { ForwardedRef } from \"react\";\nimport { AriaListBoxProps } from \"@react-types/listbox\";\nimport { filterDOMProps, useObjectRef } from \"@react-aria/utils\";\nimport { Virtualizer } from \"@react-aria/virtualizer\";\nimport { Node } from \"@react-types/shared\";\n\nimport {\n  CollectionSpeedSearchContainer,\n  CollectionSpeedSearchContext,\n  SpeedSearchItemHighlightsProvider,\n} from \"@intellij-platform/core/CollectionSpeedSearch\";\nimport {\n  SpeedSearch,\n  SpeedSearchPopup,\n  SpeedSearchProps,\n} from \"@intellij-platform/core/SpeedSearch\";\nimport { CollectionRefProps } from \"@intellij-platform/core/Collections/useCollectionRef\";\n\nimport { StyledList } from \"../StyledList\";\nimport { ListProps } from \"../List\";\nimport { useListState } from \"../useListState\";\nimport { ListItem } from \"../ListItem\";\nimport { ListContext } from \"../ListContext\";\nimport { useListVirtualizer } from \"../useListVirtualizer\";\nimport { useSpeedSearchList } from \"./useSpeedSearchList\";\n\nexport interface SpeedSearchListProps<T extends object>\n  extends ListProps<T>,\n    SpeedSearchProps {}\n\n/**\n * List component with {@link SpeedSearch}, which is a more advanced version of typeahead.\n */\nexport const SpeedSearchList = React.forwardRef(function SpeedSearchList<\n  T extends object\n>(\n  {\n    allowEmptySelection = false,\n    fillAvailableSpace = false,\n    estimatedItemHeight,\n    ...inputProps\n  }: SpeedSearchListProps<T>,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n) {\n  const props: AriaListBoxProps<T> & CollectionRefProps = {\n    ...inputProps,\n    disallowEmptySelection: !allowEmptySelection,\n  };\n  const ref = useObjectRef(forwardedRef);\n  const state = useListState(props);\n\n  const { listProps, listContext, searchPopupProps, speedSearchContextValue } =\n    useSpeedSearchList({ ...props, isVirtualized: true }, state, ref);\n\n  const {\n    virtualizerProps: { children: renderNode, ...virtualizerProps },\n  } = useListVirtualizer({\n    state,\n    estimatedItemHeight,\n    renderItem: (item) => (\n      <SpeedSearchItemHighlightsProvider itemKey={item.key}>\n        <ListItem key={item.key} item={item} />\n      </SpeedSearchItemHighlightsProvider>\n    ),\n  });\n\n  return (\n    <ListContext.Provider value={listContext}>\n      <CollectionSpeedSearchContainer fillAvailableSpace={fillAvailableSpace}>\n        <CollectionSpeedSearchContext.Provider value={speedSearchContextValue}>\n          <SpeedSearchPopup {...searchPopupProps} />\n          <StyledList\n            as={Virtualizer<Node<any>, any, any>}\n            ref={ref}\n            fillAvailableSpace={fillAvailableSpace}\n            {...filterDOMProps(props, { labelable: true })}\n            {...virtualizerProps}\n            {...listProps}\n          >\n            {renderNode}\n          </StyledList>\n        </CollectionSpeedSearchContext.Provider>\n      </CollectionSpeedSearchContainer>\n    </ListContext.Provider>\n  );\n});\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n/**\n * Green circle indicator used with icons.\n * Reference: platform/execution/src/com/intellij/execution/runners/IndicatorIcon.kt\n */\nexport const StyledIconLiveIndicator = styled.span`\n  position: absolute;\n  width: 4px;\n  height: 4px;\n  border-radius: 1000px;\n  background: #00ff00;\n  box-shadow: 0.5px 0.5px 1px 1px rgba(0, 0, 0, 0.4);\n  bottom: 1px;\n  right: 1px;\n`;\n","import { mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport React, { ForwardedRef, HTMLProps } from \"react\";\nimport { SpeedSearchContainer } from \"./SpeedSearchContainer\";\nimport { SpeedSearchPopup } from \"./SpeedSearchPopup\";\nimport {\n  SpeedSearchStateProps,\n  useSpeedSearch,\n  useSpeedSearchState,\n} from \"./useSpeedSearch\";\n\ninterface Props extends SpeedSearchStateProps {\n  children: React.ReactNode;\n  keepSearchActiveOnBlur?: boolean;\n  match?: boolean;\n  className?: string;\n  containerProps?: Omit<HTMLProps<HTMLDivElement>, \"as\" | \"ref\">;\n}\n\n// Maybe no need for this component, now that almost everything is moved to hooks, and a couple of\n// styled components. Then useSpeedSearchState can also be moved to useSpeedSearch\nexport const SpeedSearch = React.forwardRef(function SpeedSearch(\n  {\n    children,\n    keepSearchActiveOnBlur = false,\n    className,\n    containerProps = {},\n    match,\n    ...otherProps\n  }: Props,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n) {\n  const ref = useObjectRef(forwardedRef);\n  const speedSearchState = useSpeedSearchState(otherProps);\n  const { containerProps: speedSearchContainerProps } = useSpeedSearch(\n    { keepSearchActiveOnBlur: keepSearchActiveOnBlur },\n    speedSearchState,\n    ref\n  );\n\n  return (\n    <SpeedSearchContainer\n      /* We might as well use useFocusable. The return type was troublesome in the first try. */\n      tabIndex={-1}\n      ref={ref}\n      {...mergeProps(containerProps, speedSearchContainerProps, { className })}\n    >\n      <SpeedSearchPopup active={speedSearchState.active} match={match}>\n        {speedSearchState.searchTerm}\n      </SpeedSearchPopup>\n      {children}\n    </SpeedSearchContainer>\n  );\n});\n","import React, { CSSProperties, ForwardedRef, RefObject } from \"react\";\nimport { Node } from \"@react-types/shared\";\nimport { Virtualizer } from \"@react-aria/virtualizer\";\nimport { StyledTree } from \"./StyledTree\";\nimport { TreeRefValue, useTreeRef } from \"./useTreeRef\";\nimport { TreeNode } from \"./TreeNode\";\nimport { TreeContext } from \"./TreeContext\";\nimport { TreeProps as StatelyTreeProps, useTreeState } from \"./useTreeState\";\nimport { SelectableTreeProps, useSelectableTree } from \"./useSelectableTree\";\nimport { useTreeVirtualizer } from \"./useTreeVirtualizer\";\nimport { CollectionCacheInvalidationProps } from \"@intellij-platform/core/Collections/useCollectionCacheInvalidation\";\nimport { filterDOMProps, useObjectRef } from \"@react-aria/utils\";\n\nexport interface TreeProps<T extends object>\n  extends Omit<StatelyTreeProps<T>, \"disallowEmptySelection\">,\n    CollectionCacheInvalidationProps,\n    Omit<SelectableTreeProps<T>, \"keyboardDelegate\" | \"isVirtualized\"> {\n  fillAvailableSpace?: boolean;\n  /**\n   * When true, shows the tree in focused style, even when it's not focused. A common use case is when the tree\n   * is virtually focused. i.e. the focus is physically on some other element (like a search input) which handles\n   * keyboard events as if the tree was focused.\n   */\n  showAsFocused?: boolean;\n  treeRef?: RefObject<TreeRefValue>;\n\n  className?: string;\n  style?: CSSProperties;\n}\n\n/**\n * TODO:\n *  - Match select all behaviour. Currently, `getSelectAllKeys` in `SelectionManager` returns\n *   all nested keys too. But it's not aligned with Tree implementation in Intellij Platform. And\n *   beside from that, it seems to be a little inconsistent in some edge cases where you select all,\n *   and then deselect a node. Then all of a sudden, all collapsed nested keys are no longer selected.\n */\nexport const Tree = React.forwardRef(\n  <T extends object>(\n    {\n      fillAvailableSpace = false,\n      treeRef,\n      style,\n      className,\n      ...props\n    }: TreeProps<T>,\n    forwardedRef: ForwardedRef<HTMLDivElement>\n  ) => {\n    const state = useTreeState(props);\n    const ref = useObjectRef(forwardedRef);\n    useTreeRef({ state, scrollRef: ref }, treeRef);\n\n    const { treeProps, treeContext } = useSelectableTree(\n      {\n        ...props,\n        isVirtualized: true,\n      },\n      state,\n      ref\n    );\n\n    const { virtualizerProps } = useTreeVirtualizer({ state });\n\n    return (\n      <TreeContext.Provider value={treeContext}>\n        <StyledTree\n          as={Virtualizer<Node<any>, unknown, unknown>}\n          ref={ref}\n          fillAvailableSpace={fillAvailableSpace}\n          {...virtualizerProps}\n          {...treeProps}\n          {...filterDOMProps(props, { labelable: true })}\n          style={style}\n          className={className}\n        >\n          {(itemType: string, item: Node<any>) => (\n            <TreeNode key={item.key} item={item as Node<T>} />\n          )}\n        </StyledTree>\n      </TreeContext.Provider>\n    );\n  }\n);\n","import React, { useRef } from \"react\";\nimport { AutoHoverPlatformIcon } from \"@intellij-platform/core/Icon\";\nimport { useProgressBarPauseIconButton } from \"./ProgressBar\";\n\ninterface ProgressBarPauseButtonProps {\n  /**\n   * Whether progress is paused.\n   */\n  paused: boolean;\n  /**\n   * Called when progress is paused or resumed.\n   * @param paused `true` when progress is being paused. `false` when resumed.\n   */\n  onPausedChange: (paused: boolean) => void | Promise<unknown>;\n\n  /**\n   * whether small icon should be used.\n   */\n  small?: boolean;\n}\n\n/**\n * Pause/Resume icon button for progress bar, to be used in {@link ProgressBarProps#button}.\n */\nexport const ProgressBarPauseButton = ({\n  paused,\n  onPausedChange,\n  small,\n}: ProgressBarPauseButtonProps) => {\n  const ref = useRef<HTMLSpanElement>(null);\n  const { buttonProps } = useProgressBarPauseIconButton(\n    {\n      onPress: () => onPausedChange(!paused),\n      hoverTooltip: paused ? \"Resume\" : \"Pause\",\n      paused,\n    },\n    ref\n  );\n  return (\n    <AutoHoverPlatformIcon\n      {...buttonProps}\n      icon={\n        paused\n          ? `process/progressResume${small ? \"Small\" : \"\"}.svg`\n          : `process/progressPause${small ? \"Small\" : \"\"}.svg`\n      }\n    />\n  );\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { ComponentType } from \"react\";\nimport * as juiComponents from \"@intellij-platform/core\";\nimport darculaThemeJson from \"@intellij-platform/core/themes/darcula.theme.json\";\nimport lightThemeJson from \"@intellij-platform/core/themes/intellijlaf.theme.json\";\nimport highContrastThemeJson from \"@intellij-platform/core/themes/HighContrast.theme.json\";\nimport { JSX } from \"react/jsx-runtime\";\n\nconst WithLoading =\n  <P,>(Component: ComponentType<P>) =>\n  (props: P & JSX.IntrinsicAttributes) =>\n    (\n      // Because ReactLive doesn't render a Suspense around what it renders.\n      <React.Suspense fallback=\"loading\">\n        <Component {...props} />\n      </React.Suspense>\n    );\n\n// Add react-live imports you need here\nconst ReactLiveScope = {\n  React,\n  ...React,\n  ...juiComponents,\n  ExampleApp: WithLoading(React.lazy(() => import(\"jui-example-app/src/App\"))),\n  darculaThemeJson,\n  lightThemeJson,\n  highContrastThemeJson,\n  MonacoEditor: WithLoading(React.lazy(() => import(\"@monaco-editor/react\"))),\n};\n\nexport default ReactLiveScope;\n","// extracted by css-extract-rspack-plugin\nexport default {\"playground\":\"playground_whuD\",\"noPadding\":\"noPadding_tWI2\"};","import React from \"react\";\nimport Code from \"@theme-original/MDXComponents/Code\";\nimport type { Props } from \"@theme/CodeBlock\";\nimport { InlineCode } from \"../../components/component-linking\";\n\n/**\n * Wrapping the default Code component, to replace inline codes with links, if possible.\n * `Code` component is used only when rendering jsdoc descriptions. It's not used\n * when inline code in mdx files is rendered. For that, `inlineCode` entry is set\n * in swizzled `MDXComponents`.\n */\nexport default function CodeWrapper(props: Props): JSX.Element {\n  // Code is used to render both `something` and ```something```.\n  // There is no prop to distinguish code blocks from inline codes\n  // but it seems like code blocks always have more props, like className\n  const isInlineCode = Object.keys(props).length === 1;\n  if (typeof props.children === \"string\" && isInlineCode) {\n    return <InlineCode>{props.children}</InlineCode>;\n  }\n  return (\n    <>\n      <Code {...props} />\n    </>\n  );\n}\n","import MDXComponents from \"@theme-original/MDXComponents\";\nimport { InlineCode } from \"../../components/component-linking\";\n\nexport default {\n  ...MDXComponents,\n  inlineCode: InlineCode,\n};\n","\n\nexport const frontMatter = {};\nexport const contentTitle = 'Input';\nexport {default as metadata} from '@site/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-components-input-mdx-b91.json'\nexport const assets = {\n\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {ApiDescription} from \"@site/src/components/ApiDescription\";\nimport {Input} from \"@intellij-platform/core\";\nexport const toc = [{\n  \"value\": \"Features\",\n  \"id\": \"features\",\n  \"level\": 3\n}, {\n  \"value\": \"Remaining\",\n  \"id\": \"remaining\",\n  \"level\": 4\n}, {\n  \"value\": \"Live example\",\n  \"id\": \"live-example\",\n  \"level\": 3\n}, {\n  \"value\": \"Addons\",\n  \"id\": \"addons\",\n  \"level\": 3\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    h3: \"h3\",\n    h4: \"h4\",\n    header: \"header\",\n    input: \"input\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.header, {\n      children: _jsx(_components.h1, {\n        id: \"input\",\n        children: \"Input\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"A themed \", _jsx(_components.a, {\n        href: \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\",\n        children: \"input\"\n      }), \", with a few extra features.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"See also:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"/jui/-/post-push/docs/components/InputField\",\n          children: \"InputField\"\n        }), \", for a \", _jsx(_components.a, {\n          href: \"https://jetbrains.github.io/ui/controls/input_field/#label\",\n          children: \"labeled\"\n        }), \"\\ninput with support for \", _jsx(_components.a, {\n          href: \"https://jetbrains.github.io/ui/principles/context_help/#07\",\n          children: \"context help\"\n        }), \" and\\n\", _jsx(_components.a, {\n          href: \"https://jetbrains.github.io/ui/controls/input_field/#27\",\n          children: \"error message\"\n        }), \".\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/jui/-/post-push/docs/components/SearchInput\",\n          children: \"SearchInput\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"features\",\n      children: \"Features\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Support for \\\"invalid\\\" state (red outline). \", _jsx(_components.a, {\n          href: \"https://jetbrains.github.io/ui/controls/input_field/#27\",\n          children: \"See spec\"\n        }), \".\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Support for auto selecting the text when the input is focused.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Disables spell check by default. It can be overwritten.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"before and after addons, aka. \", _jsx(_components.a, {\n          href: \"https://jetbrains.github.io/ui/controls/built_in_button/\",\n          children: \"built-in buttons\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"remaining\",\n      children: \"Remaining\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      className: \"contains-task-list\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \"🚧 Support for add-ons, (aka built-in buttons, aka decorators), within the input box, before and after the\\ninput area.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"live-example\",\n      children: \"Live example\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        metastring: \"live themed\",\n        live: true,\n        children: \"<>\\n  <Input placeholder=\\\"Simple example\\\" /> <br /> <br />\\n  <Input placeholder=\\\"Error\\\" validationState=\\\"error\\\" /> <br /> <br />\\n  <Input placeholder=\\\"Warning\\\" validationState=\\\"warning\\\" /> <br />\\n</>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"addons\",\n      children: \"Addons\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"addonBefore\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"addonAfter\"\n      }), \" can be used to render icons and icon buttons within the input box, before and after\\nthe input element. Buttons rendered in \", _jsx(_components.code, {\n        children: \"addonAfter\"\n      }), \" are also known as\\n\", _jsx(_components.a, {\n        href: \"https://jetbrains.github.io/ui/controls/built_in_button/\",\n        children: \"Built-in buttons\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        metastring: \"live themed\",\n        live: true,\n        children: \"<>\\n  <Input\\n    addonBefore={<PlatformIcon icon=\\\"actions/search.svg\\\" />}\\n    addonAfter={\\n      <>\\n        <TooltipTrigger tooltip={<ActionTooltip actionName=\\\"Match Case\\\" />}>\\n          <StyledHoverContainer as={IconButton} excludeFromTabOrder={false}>\\n            <AutoHoverPlatformIcon\\n              icon=\\\"actions/regex\\\"\\n              hoverIcon=\\\"actions/regexHovered\\\"\\n            />\\n          </StyledHoverContainer>\\n        </TooltipTrigger>\\n        <TooltipTrigger tooltip={<ActionTooltip actionName=\\\"Regex\\\" />}>\\n          <StyledHoverContainer as={IconButton} excludeFromTabOrder={false}>\\n            <AutoHoverPlatformIcon\\n              icon=\\\"actions/matchCase.svg\\\"\\n              hoverIcon=\\\"actions/matchCaseHovered.svg\\\"\\n            />\\n          </StyledHoverContainer>\\n        </TooltipTrigger>\\n      </>\\n    }\\n  />\\n  <br /> <br />\\n  <Input\\n    placeholder=\\\"Environment variables\\\"\\n    style={{ width: \\\"min(300px, 90vw)\\\" }}\\n    addonAfter={\\n      <TooltipTrigger\\n        tooltip={<ActionTooltip actionName=\\\"Edit environment Variables (⇧⏎)\\\" />}\\n      >\\n        {(props) => (\\n          <AutoHoverPlatformIcon\\n            {...props}\\n            style={{ marginRight: \\\".2rem\\\" }}\\n            role=\\\"button\\\"\\n            icon=\\\"general/inlineVariables\\\"\\n          />\\n        )}\\n      </TooltipTrigger>\\n    }\\n  />\\n</>\\n\"\n      })\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n"],"names":["isInResolvedActionGroup","action","isActionGroup","isResolvedActionGroup","isActionGroupDefinition","ActionShortcut","_ref","actionId","children","shortcutString","getShortcut","useGetActionShortcut","_jsx","_Fragment","keymap","useKeymap","keyboardShortcut","find","_ref2","type","shortcutToString","__docgenInfo","isKeyMatch","keyStroke","e","loose","code","modifiers","supportedModifiers","every","modifier","getModifierState","Boolean","includes","ActionsContext","React","generateId","Math","floor","random","ACTION_PROVIDER_ID_ATTRIBUTE","ACTION_PROVIDER_ID_DATA_PREFIX","actionProvidersMap","Map","ActionsProvider","props","parentContext","useContext","actions","dfsVisit","DividerItem","push","recursivelyCreateActions","actionDefinitions","parent","map","actionDefinition","shortcuts","id","useShortcutsOf","undefined","firstShortcut","shortcut","perform","context","isDisabled","actionPerformed","event","element","child","Object","fromEntries","actionProviderId","useState","shortcutHandlerProps","useShortcuts","onAction","_temp","useCapture","firstKeyActivatedShortcutsRef","useRef","secondStrokeResetTimerIdRef","useEventCallback","isModifierOnly","nativeEvent","location","repeat","current","window","clearTimeout","length","some","secondKeyStroke","triggerAction","firstKeyMatches","entries","flatMap","filter","input","isKeyboardShortcut","_ref3","firstKeyStroke","_ref4","setTimeout","document","addEventListener","once","capture","stopPropagation","preventDefault","target","Element","allActions","useEffect","set","delete","Provider","value","getAvailableActionsFor","closestActionProvider","closest","HTMLElement","actionSets","keys","dataset","dataKey","startsWith","replace","get","values","isSearchable","concat","sortBy","actionSet","useActions","useAction","usePerformAction","console","error","CommonActionId","EXPAND_ALL","COLLAPSE_ALL","EXPAND_SELECTION","SHRINK_SELECTION","GO_TO_ACTION","GO_TO_FILE","SHOW_INTENTION_ACTIONS","EDIT_SOURCE","SHOW_SEARCH_HISTORY","COPY_REFERENCE","REFRESH","COPY","CUT","PASTE","DELETE","CODE_COMPLETION","KeymapContext","defaultKeymap","KeymapProvider","keymapProp","assign","create","ActionButton","otherProps","actionButton","IconButton","title","onPress","icon","TooltipTrigger","tooltip","ActionTooltip","actionName","ActionGroupMenu","actionGroup","ActionsMenu","isAction","item","actionContext","actionMenuProps","Menu","getAllActions","items","flatten","disabledKeys","key","Divider","renderActionAsMenuItem","isGroup","menuPresentation","Section","hasDivider","Item","textValue","childItems","MenuItemLayout","content","useCreateDefaultActionGroup","show","usePopupManager","getActionShortcut","openActionsInPopup","close","Popup","positioning","targetRef","querySelector","MENU_POSITION_TARGET_DATA_ATTRIBUTE","placement","SpeedSearchMenu","onClose","autoFocus","header","groupDefinition","RESIZE_TOOL_WINDOW_RIGHT_ACTION_ID","RESIZE_TOOL_WINDOW_LEFT_ACTION_ID","RESIZE_TOOL_WINDOW_TOP_ACTION_ID","RESIZE_TOOL_WINDOW_BOTTOM_ACTION_ID","MAXIMIZE_TOOL_WINDOW_ACTION_ID","FOCUS_EDITOR_ACTION_ID","HIDE_ACTIVE_WINDOW_ACTION_ID","HIDE_ALL_WINDOWS_ACTION_ID","JUMP_TO_LAST_WINDOW_ACTION_ID","defaultKeyToStr","Control","ArrowDown","ArrowUp","ArrowLeft","ArrowRight","Enter","Quote","Minus","Subtract","NumpadAdd","Multiply","NumpadMultiply","Equal","Backspace","fromPairs","Array","from","i","x","String","fromCharCode","a","toUpperCase","KeystrokeToString","isMac","separator","codeToStr","Alt","Shift","Meta","Escape","modifiersOrder","keystrokeToString","keystroke","sort","b","indexOf","join","Error","useActionGroup","actionGroupId","StyledModalWindow","styled","ModalWindow","StyledWindowContainer","StyledContainer","StyledHeading","StyledBody","StyledContent","StyledCheckbox","StyledButtons","ButtonGroup","StyledIcon","StyledHelpIcon","AlertDialog","heading","body","checkbox","helpButton","buttons","minWidth","role","interactions","defaultBounds","top","innerHeight","observeContentResize","OverlayMoveHandle","dragThreshold","canMoveStart","isEventOnEmptySpaces","moveHandleProps","_jsxs","PlatformIcon","size","useAlertDialog","open","useWindowManager","confirm","message","okText","cancelText","Promise","resolve","Button","variant","bgColor","theme","color","dark","StyledHeaderActions","StyledBalloonContainer","StyledIconContainer","StyledBalloonHeader","StyledBalloonBody","_ref5","lineClamp","_ref6","StyledBalloonFooter","StyledToggleIconContainer","StyledToggleExpandButtonContainer","StyledToggleExpandButtonFooterContainer","BalloonContext","BalloonActionLink","ref","Link","_len","arguments","args","_key","Balloon","iconProp","expanded","expandedProp","defaultExpanded","onExpandedChange","headerActions","containerProps","bodyRef","expandable","setExpandable","setExpanded","useControlledState","maxLinesWhenNotExpanded","bodyElem","getNumLines","clientHeight","parseFloat","getComputedStyle","lineHeight","scrollHeight","validIconTypes","iconType","index","arr","toggle","effectiveExpanded","AutoHoverPlatformIcon","onClick","style","marginLeft","ToggleWrapper","enabled","onToggle","Component","toggleIcon","hoverContainerSelector","className","NotImplementedFn","BalloonsContext","showSticky","useBalloonManager","BalloonManager","disablePortal","BalloonsContainer","StyledBalloonsStack","balloons","setBalloons","timeoutIdsRef","lastIdRef","api","useMemo","timeout","aBalloon","balloon","timeoutId","aTimeoutId","forEach","notificationsStack","position","ReactDOM","displayName","componentId","BareButton","forwardedRef","elementType","elementTypeProp","useObjectRef","buttonProps","useButton","domProps","filterDOMProps","mergeProps","StyledButton","disabled","_ref7","StyledDefaultButton","_ref8","_ref9","_ref10","_ref11","StyledIconButton","variants","default","mnemonic","href","form","as","MnemonicTrigger","onTriggered","StyledButtonGroup","FocusScope","HorizontalArrowKeyNavigation","arrowKeyNavigationProps","focusManager","useFocusManager","keyboardProps","useKeyboard","onKeyDown","hasAnyModifier","focusPrevious","wrap","focusNext","continuePropagation","StyledWrapperLabel","StyledCheckboxLabelText","StyledInput","Checkbox","preventFocus","disableFocusAlwaysVisible","state","useToggleState","inputProps","useCheckbox","isFocusVisible","isFocused","focusProps","useFocusRing","focusDisabledProps","onFocusCapture","relatedTarget","focus","blur","tabIndex","CheckboxIcon","isIndeterminate","isSelected","pointerEvents","LafIcon","name","Disabled","Selected","Focused","CollectionSpeedSearchContext","CollectionSpeedSearchItemContext","SpeedSearchItemHighlightsProvider","itemKey","collection","getItem","text","warn","highlightedRanges","matches","HighlightedTextValue","speedSearchContext","TextWithHighlights","highlights","useCollectionSpeedSearch","selectionManager","keepSearchActiveOnBlur","keyboardDelegate","focusBestMatch","speedSearchStateProps","speedSearch","useSpeedSearchState","speedSearchSelectionManager","useCollectionSpeedSearchResult","inputSelectionManager","searchTerm","active","getKeys","matchedRanges","minusculeMatch","selectAll","wrappedSelectionManager","setSelectedKeys","Set","has","latestValues","useLatest","keyToFocus","matchedKeys","noneOfTheMatchesAreSelected","matchedKey","firstRange","rangeA","rangeB","to","getMatchToSelect","passedFirstSelection","firstSelectedKey","setFocusedKey","replaceSelection","useSpeedSearch","createSpeedSearchKeyboardDelegate","wrappedKeyboardDelegate","findFirstMatch","fromKey","direction","currentKey","getKeyAbove","getKeyBelow","getFirstKey","global","firstKey","next","getLastKey","lastKey","pop","searchPopupProps","match","speedSearchContextValue","constructor","seq","_Divider","getCollectionNode","rendered","hasChildNodes","_Item","result","itemGenerator","StatelyItem","originalShouldInvalidate","shouldInvalidate","invalidated","GAP","StyledItemLayout","StyledHint","currentForegroundAware","commonColors","inactiveTextColor","small","StyledGroup","ItemLayout","Hint","Group","ItemStateContext","getItemElement","collectionRef","selector","CSS","escape","useCollectionAutoScroll","isVirtualized","focusedKey","scrollIntoView","useCollectionFocusProxy","focusProxyRef","proxy","dispatchEvent","KeyboardEvent","currentTarget","log","removeEventListener","StyledComboBoxContainer","StyledComboBoxInput","inset","StyledDropdownButton","border","ComboBox","forwardRef","labelPlacement","defaultValue","onValueChange","validationState","validationMessage","contextHelp","contextHelpPlacement","inputRef","inputRefProp","buttonRef","dropdownContainerRef","popoverRef","listBoxRef","useComboBoxState","menuTrigger","allowsCustomValue","inputValue","defaultInputValue","onInputChange","isInvalid","descriptionProps","errorMessageProps","labelProps","comboboxInputProps","listBoxProps","useComboBox","offsetWidth","WithLabel","label","WithInlineContextHelp","PositionedTooltipTrigger","showOnFocus","triggerRef","ValidationTooltip","delay","tooltipTriggerProps","StyledDropdownArrowIcon","isOpen","Popover","containerPadding","offset","crossOffset","StatelessListBox","StyledDropdownContainer","StyledDropdownValue","Dropdown","useSelectState","menuProps","triggerProps","valueProps","useSelect","selectedItem","ListBox","useListState","selectionBehavior","selectionMode","useListBox","StyledList","ListBoxSection","section","Option","optionProps","useOption","isContainerFocused","node","StyledListItem","selected","containerFocused","StyledSectionHeading","StyledSection","itemProps","headingProps","groupProps","useListBoxSection","StyledVerticalSeparator","getChildren","childNodes","focusRing","focused","borderRadius","attrs","StyledContextHelp","contextHelpForeground","StyledContextHelpWrapper","css","StyledLabelContainer","StyledLabel","labelRef","useAlignedLabels","applyLabelWidth","commonWidth","LabelAlignmentContext","useLayoutEffect","apply","width","LabeledControlsAlignmentProvider","setCommonWidth","currentWidth","StyledHoverContainer","StyledIconHoverContainer","hoverIcon","amendName","themePath","resolvedIconPath","useIconPath","iconDescriptor","useTheme","resolvedValue","findIconPath","basePath","isUnderDarcula","suffix","reduce","soFar","useSvgIcon","path","StyledIconWrapper","iconNameOrPath","amendment","ext","split","getDarkPath","darkPath","getPlatformIconPath","relativePath","slice","darkIcon","iconName","fallbackPath","itemState","svg","setSvg","ariaBusy","remove","svgElement","createElement","appendChild","outerHTML","makeIdsUnique","randomPostfix","toFixed","matchAll","modifiedSvg","_","newId","replaceAll","canceled","fetchIcon","getSvgIcon","catch","theOld","theNew","str","replaced","replacedAgain","DEFAULT_MINIMUM_BUTTON_SIZE","NAVBAR_MINIMUM_BUTTON_SIZE","minSize","preventFocusOnPress","excludeFromTabOrder","isPressed","isPressedInput","onPressChange","onPressEnd","onPressStart","onPressUp","shouldCancelOnPointerExit","focusableProps","useFocusable","pressProps","usePress","ArrowIcon","withConfig","IconButtonWithMenu","renderMenu","noArrow","previouslyFocusedElementRef","MenuTrigger","onOpenChange","onFocus","Img","darkSrc","src","StyledInputBox","appearance","StyledAddons","StyledRightAddons","StyledLeftAddons","Input","autoSelect","addonBefore","addonAfter","onBlur","setIsFocused","focusWithinProps","useFocusWithin","onFocusWithinChange","select","spellCheck","onMouseDown","StyledWithLabel","InputField","fieldProps","useField","errorMessage","placeholder","onChange","StyledLink","focusBorderColor","linkForegroundEnabled","labelable","interactionHandlers","FocusRing","focusRingClass","List","allowEmptySelection","fillAvailableSpace","estimatedItemHeight","disallowEmptySelection","listProps","listContext","useList","virtualizerProps","renderNode","useListVirtualizer","renderItem","ListItem","ListContext","Virtualizer","ListDivider","useSeparator","orientation","separatorProps","listFocused","useSelectableItem","shouldForwardProp","prop","backgroundColor","labelForeground","asCurrentForeground","labelSelectedForeground","asCurrentBackground","showAsFocused","useSelectableList","shouldFocusWrap","selectOnFocus","disallowTypeAhead","shouldUseVirtualFocus","allowsTabNavigation","collator","useCollator","usage","sensitivity","delegate","ListKeyboardDelegate","collectionProps","useSelectableCollection","setFocused","isEmpty","onActionCallback","originalUseListState","useCollectionRef","selectionManagerRef","useImperativeHandle","StyledListSectionHeader","paddingLeft","fontWeight","outline","cursor","ListSection","reusableView","headerRef","useVirtualizerItem","layoutInfo","virtualizer","layoutInfoToStyle","renderWrapper","renderChildren","viewType","c","VirtualizerItem","ListWithSectionsLayout","VariableWidthListLayout","opts","paddingY","update","invalidationContext","doBuildCollection","nodes","y","contentSize","height","rect","Rect","visibleRect","LayoutInfo","validRect","layoutNodes","maxY","buildSection","headerNode","parentKey","level","buildSectionHeader","unshift","layout","estimatedRowHeight","estimatedHeadingHeight","dividerHeight","persistedKeys","scrollDirection","DEFAULT_LOADING_DELAY_MS","DelayedLoadingSpinner","Delayed","LoadingSpinner","waitedEnough","setWaitedEnough","timer","LOADING_SPINNER_SIZE_SMALL","LOADING_SPINNER_SIZE_BIG","viewBox","transform","fill","fillOpacity","fillRule","opacity","attributeName","keyTimes","dur","repeatCount","calcMode","useContextMenu","onOpen","positionOrigin","setPositionOrigin","onContextMenu","overlayRef","ContextMenuContainer","useMenuTriggerState","allProps","MenuOverlayFromOrigin","origin","defaultAutoFocus","patchCollectionItem","partialNode","result2","partialChildNode","partialChildNodeWithoutType","PatchedItem","PatchedSection","convertChildren","isArray","Item2","MenuOverlayContext","MenuContext","useMenu","onActionProp","submenuBehavior","useMenuAria","menuContextValue","useMenuState","patchCollectionProps","useTreeState","childExpansionBehaviour","expandedKeys","expandedKey","onExpandedKeyChange","defaultExpandedKeys","defaultExpandedKey","StyledMenu","renderMenuNodes","StyledMenuItemText","StyledMenuItemPlatformIcon","StyledMenuItemLafIcon","MenuItemContext","keyboardShortcutProps","useMenuItemLayout","MenuItem","nestedMenuRef","isExpanded","selectedKeys","renderSubmenu","Submenu","itemWrapper","menuItemProps","useMenuItem","hasSubmenu","ariaMenuItemProps","useMenuItemAria","onMouseEnter","onPointerEnter","onPointerDown","hoverProps","useHover","onHoverStart","isAnySubmenuOpen","toggleKey","togglePressProps","overlayProps","positionProps","useOverlayPosition","shouldFlip","MENU_VERTICAL_PADDING","MENU_BORDER_WIDTH","arrowProps","onPointerUp","StyledMenuItem","isActive","StyledMenuItemIcon","StyledNestedArrow","Overlay","OverlayComponent","SimpleOverlay","parentState","rootKey","portalContainer","StyledMenuItemLayout","Content","Shortcut","useContextOrThrow","allowedIcon","MenuOverlay","restoreFocus","otherOverlayProps","inputOverlayRef","suspense","useOverlay","shouldCloseOnBlur","isKeyboardDismissDisabled","isDismissable","shouldCloseOnInteractOutside","areInNestedOverlays","usePreventScroll","onOutsideContextMenu","MaybeSuspend","fallback","DisableScrollStyles","createGlobalStyle","disableAutoFocus","useOverlayPositionFromOrigin","setPosition","overlayElement","calculatePosition","clientX","clientY","overlayWidth","overlayHeight","totalWidth","documentElement","clientWidth","totalHeight","left","max","offsetHeight","zIndex","scrollParent","isScrollable","getScrollParent","classList","add","align","positioningTargetRef","menuTriggerProps","useMenuTrigger","ariaButtonProps","getPlacement","PressResponder","StyledItemsContainer","StyledSearchFieldWrapper","StyledSpeedSearchMenu","StyledPlaceholder","useSpeedSearchMenu","containerRef","speedSearchContainerProps","ListCollection","MenuKeyboardDelegate","contains","activeElement","focusSafely","lastSize","setSize","measureSize","isSearchActive","useResizeObserver","onResize","sizeStyleProps","minHeight","maxHeight","emptyText","clear","SpeedSearchSubmenu","SpeedSearchMenuContent","menuRef","SpeedSearchInput","useSubmenuState","rootItem","submenuProps","useSubmenu","WINDOW_SHADOW","highlightedStyle","defaultStyle","disabledStyle","useSubmenuAria","keyBelow","keyAbove","root","isFocusedRef","focusedKeyRef","defineProperties","SelectionManager","StyledMenuHeading","StyledMenuSectionItemsContainer","MenuSection","useMenuSection","MnemonicContext","createContext","character","onTriggeredProp","setActive","keydownListener","toLowerCase","parentElement","getClientRects","keyupListener","renderedMnemonicRef","timerId","hidden","MnemonicText","RegExp","found","UNSAFE_React17SuspenseFix","measureContentSize","NullSuspenseFallback","afterUnsuspended","afterSuspended","afterSuspendedProp","afterUnsuspendedProp","StyledWindowUnderlay","StyledWindowInnerContainer","DEFAULT_WINDOW_MIN_WIDTH","DEFAULT_WINDOW_MIN_HEIGHT","WindowControllerContext","StyledDelayedLoadingSpinner","propsContext","modalProps","underlayProps","useModalOverlay","useOverlayTriggerState","disableFocusManagement","WindowFrame","windowRef","modalWindowProps","dialogProps","titleProps","useDialog","bounds","overlayInteractionHandlerProps","UNSAFE_measureContentSize","useResizableMovableOverlay","OverlayInteractionHandler","contain","WindowContext","movable","OverlayResizeHandles","StyledFooter","hasBorder","contrastBorder","StyledFooterSide","WindowFooter","right","StyledWindowTitle","WindowHeader","renderTitle","StyledWindowFooter","StyledWindowContentWrapper","WindowLayout","footer","Footer","Header","WindowsContext","WindowManager","windows","setWindows","newKeyRef","currentWindows","aWindow","requestAnimationFrame","ParentOverlayContext","AriaOverlay","element1","element2","overlayRoot1","overlayRoot2","OverlayInteractionHandlerContext","useOverlayInteractionHandler","useOverlayMoveHandle","options","interactionHandler","finishInteraction","startInteraction","updateBounds","moveProps","useMove","onMoveStart","onMove","startState","movement","onMoveEnd","overlayResizer","useOverlayResizer","initialBoundsRef","bottom","newWidth","initialBounds","newHeight","getResizerProps","side","horizontal","onResizeStarted","onResizeEnd","RightResizer","LeftResizer","TopResizer","BottomResizer","StyledPopover","popoverProps","usePopover","DismissButton","onDismiss","withMinSize","getCenteredBounds","innerWidth","targetElement","targetBounds","getBoundingClientRect","ensureInViewport","gap","viewportWidth","viewportHeight","clamp","useDebouncedCallback","fn","fnRef","currentTimeoutId","useCallback","withTemporaryStyle","curry","clone","cloneNode","returnValue","removeChild","getContentSize","computedStyle","ceil","useContentSize","observe","measuredSizes","setMeasuredSizes","lastMeasuredSize","at","Size","isEqual","newSize","cancelAnimationFrame","measure","currentSize","aSize","debouncedMeasure","mutationObserver","MutationObserver","subtree","childList","disconnect","width2","height2","inputBounds","onBoundsChange","onBoundsChanging","setBounds","currentInteraction","setCurrentInteraction","effectiveMinWidth","effectiveMinHeight","applyMinSize","partialBounds","centeredContentBounds","positioned","sized","getBounds","updatedBounds","mergeNonNullProps","propsArray","StyledInnerContainer","DEFAULT_POPUP_MIN_WIDTH","DEFAULT_POPUP_MIN_HEIGHT","_Popup","nonDismissable","allowScroll","positioningProp","onCloseProp","PopupControllerContext","useInteractOutside","onInteractOutsideStart","onInteractOutside","positionedBounds","pipe","focusForwarderProps","useFocusForwarder","titleId","useSlotId","useOverlayFocusContain","StyledPopupContainer","PopupContext","PopupHeader","Layout","PopupLayout","StyledPopupHint","StyledPopupHeader","hasControls","labelDisabledForeground","renderHeader","StyledPopupLayout","StyledPopupLayoutHeader","StyledPopupLayoutContent","StyledPopupLayoutFooter","PopupsContext","PopupManager","popups","setPopups","popup","currentPopups","aPopup","wrappedPopup","PopupTrigger","useOverlayTrigger","ProgressBar","maxValue","minValue","namePosition","details","secondaryDetails","button","dense","valueLabel","showValueLabel","progressBarProps","useProgressBar","percentage","forcedDetails","setForcedDetails","setTooltip","contextValue","StyledProgressBarLabel","effectiveDetails","StyledProgressBarContainer","StyledProgressBarLineContainer","hasTopMargin","hasBottomMargin","StyledProgressBarTrack","indeterminate","StyledProgressBarProgress","ProgressBarContext","StyledProgressBarDetails","getIndeterminateStartColor","getIndeterminateEndColor","indeterminateBackgroundAnimation","keyframes","useProgressBarIconButton","_ref12","hoverTooltip","isHovered","useProgressBarPauseIconButton","_ref13","paused","Container","Label","LineContainer","Track","Progress","Details","ProgressBarStopButton","ResizableView","resizerPlacement","ThreeViewSplitter","firstView","firstSize","onFirstResize","lastView","onLastResize","resizerProps","useBottomResizer","VerticalResizer","StyledHorizontalResizer","StyledHorizontalResizerArea","handleSize","HorizontalResizer","outerPadding","background","useLeftResizer","useRightResizer","useTopResizer","StyledVerticalResizer","StyledVerticalResizerArea","useResizer","invert","SearchInput","searchHistory","onClear","onSubmit","onHistoryItemSelected","historyButtonTitle","valueProp","setValue","inputContainerRef","isSearchHistoryOpen","setSearchHistoryOpen","showSearchHistoryAction","searchIcon","historyItemText","parseInt","historyItem","StyledSearchIcon","StyledSpeedSearchInput","noMatch","getOutlineColor","StyledSearchText","clearButtonRef","SpeedSearchPopup","StyledSpeedSearchPopup","red","tooltipForeground","defaultIsSearchActive","onIsSearchActiveChange","setSearchTerm","defaultSearchTerm","onSearchTermChange","ghostInputKeydown","useGhostInput","valueRef","elem","ctrlKey","altKey","metaKey","isContentEditable","HTMLInputElement","nonTypeableInputTypes","HTMLTextAreaElement","sliceEnd","trimmedValue","trimStart","onKeyUp","onBlurWithin","StatusBar","StyledStatusBar","StyledStatusBarLeft","StyledStatusBarRight","StyledStatusBarSection","StatusBarWidget","StyledWrapper","StyledStatusBarWidget","StyledStatusBarIconWidget","defaultSize","StyledSeparator","backgroundClip","boxSizing","margin","flexShrink","StyledHorizontalSeparator","DebuggerTabContent","closeButton","TabContentLayout","startIcon","endIcon","debuggerTabTheme","underlineHeight","underlinedTabBackground","StyledDebuggerTab","StyledDefaultTab","getTabThemeStyles","DebuggerTabs","Tabs","TabComponent","focusable","EditorTabContent","onUnpin","pinned","editorTabTheme","borderColor","underlinedTabInactiveBackground","hoverInactiveBackground","hoverBackground","inactiveUnderlineColor","underlineColor","underlinedTabInactiveForeground","underlinedTabForeground","StyledEditorTab","StyledEditorTabs","StyledDefaultTabs","getTabsThemeStyles","EditorTabs","TabsComponent","noBorders","TabCloseButton","StyledTabItemLayout","iconStyle","StyledStartIconWrapper","StyledEndIconWrapper","TabItem","horizontalOverflowIndicatorStyles","StyledHorizontalOverflowShadows","hasOverflowAtStart","panelBackground","hasOverflowAtEnd","Tab","shouldSelectOnPressUp","tabProps","useTab","selectedKey","scrollBarDisabledStyle","StyledTabList","multiRow","noOverflowMenu","noScroll","useTabListState","tabListProps","useTabList","scrolledIndicatorProps","hasOverflow","useHasOverflow","threshold","setHasOverflow","offsetLeft","scrollLeft","offsetRight","scrollWidth","newHasOverflow","offsetTop","scrollTop","offsetBottom","onScroll","overflowedElements","useOverflowObserver","overflowedKeys","scrollableContainer","selectedTabElement","TabsOverflowMenu","onSelect","setSelectedKey","menuItem","inOverflowMenu","ToolWindowTabContent","toolWindowTabTheme","StyledToolWindowTab","StyledToolWindowTabs","ToolWindowTabs","getAllRanges","ranges","gapRange","range","createRangesFromIndices","indices","lastRange","HighlightedMatch","parts","highlighted","numberPattern","parseComponent","componentStr","round","min","parseHexRgba","parseShorthandHex","parseRgb","parseRgba","parseColorString","parse","Number","isInteger","Color","rgba","g","r","NaN","isValid","withTransparency","alpha","brighter","int","FACTOR","darker","toString","blend","colorOrColorString","getBlendedValue","component","isNaN","padStart","StyledSplitterContainer","StyledView","StyledSplitterInnerView","resizerPropsOverrides","innerView","firstViewMinSize","lastViewMinSize","innerViewMinSize","firstViewRef","lastViewRef","resizeFromRef","firstSizeState","setFirstSizeState","lastSizeState","setLastSizeState","horizontalValue","verticalValue","FirstResizer","SecondResizer","sizeStyleProp","minSizeStyleProp","isFractionSize","normalizeSize","getSize","getNewSize","fromSize","resize","newFractionSize","getActualSize","viewElem","actualSize","currentLastSize","currentFirstSize","StyledFloatView","FloatView","boundsStyle","FloatToolWindows","floatWindows","renderToolWindow","stackedFloatWindows","useStackedLayersState","getKey","sortedKeys","setSortedKeys","sorted","bringToFront","move","layersProps","toolWindow","MovableToolWindowStripeContext","MovableToolWindowStripeProvider","stripes","draggingRect","setDraggingRect","draggingKey","setDraggingKey","dropPosition","setDropPosition","getDropPositionRef","moveStartLocationRef","addStripe","propsRef","startMove","stripe","stripeElRef","itemElement","toJSON","indexInMain","mainItems","findIndex","indexInSplit","splitItems","anchor","isSplit","display","dropPositionGetters","createGetDropPosition","getDropPosition","draggedRect","endMove","TopStripe","BottomStripe","LeftStripe","RightStripe","InnerView","hideStripes","getSizeInAnchor","containerSize","isHorizontalToolWindow","mapToKey","sortAndMapToKey","compose","order","filterMains","getMains","filterSplits","filterVisible","expectedViewMode","viewMode","isVisible","getSplits","filterVisibleDocked","filterVisibleUnDocked","getDocked","toolWindows","docks","mains","splits","weight","mainKey","sizeFraction","sideWeight","getUnDocked","getSideState","main","activeKeys","undocked","docked","getFloatWindowState","floatingBounds","DEFAULT_HEIGHT","DEFAULT_WIDTH","getFloatWindowsState","stripeElement","getItemRect","getStripeRect","getCanDrop","stripeRect","start","end","getDropPositions","getRef","score","abs","relative","keyToOffsets","getKeyToOffsets","boundingRect","dropPositions","lastDropPosition","bestMatch","candidate","STRIPE_BUTTON_LINE_HEIGHT","StyledToolWindowStripeButton","StyledToolWindowStripe","theOtherSide","preventCollapse","StyledSpacer","ToolWindowStripe","render","onItemPress","getProps","useMovableStripeButtons","latestPropsRef","moveDisabled","isNotCurrentItem","anItem","ToolWindowStripeButton","getStripeButtonStyles","styles","marginValue","useElementMove","ghost","ghostOption","otherOptions","updateGhostPosition","defaultGhost","createDefaultGhost","findEffectiveBackgroundColor","colors","computedBackground","resultColor","nextColor","append","StyledUndockSide","UndockSide","ToolWindows","onFocusLost","hideToolWindowBars","useWidescreenLayout","toolWindowsState","onToolWindowStateChange","mainContentMinWidth","windowsById","indexBy","mainContentFocusScopeRef","layoutState","setLayoutState","windowFocusableRefs","latestRef","container","_setLayoutState","getToolWindowsLayoutState","windowIds","removedFromSideBarIds","groupBy","observer","ResizeObserver","contentRect","unobserve","hasFocus","focusLastActiveWindow","lastFocusedKey","focusMainContent","changeState","updater","interactionOutsideRef","focusReceivingElement","handleBodyFocus","focusLosingElement","renderStripe","toolbarButton","all","lastFocused","ToolWindowStateProvider","mainContentFocusableRef","renderSideDockedView","resizeDockSplitView","onDockResize","containerBounds","resizeDock","getSplitViewProps","firstAnchor","secondAnchor","renderInnerLayout","horizontalSplitterProps","verticalSplitterProps","outerSplitterProps","innerSplitterProps","undockLayers","resizeUndock","setFloatingBound","ToolWindowStateContext","useToolWindowState","hide","removeFromSidebar","moveToSide","changeViewMode","stretchWidth","stretchHeight","setFloatingBounds","isDocked","isAutoHide","areInSameSection","window1","window2","getViewModeType","ToolWindowsState","layoutToRestore","invalidWindows","targetKey","mapWindows","hideAll","restoreWindows","closableViewModes","viewModeType","sideOrIndex","targetSide","targetIndex","targetSideWindows","indexInTargetSide","sortedTargetWindows","insert","newTargetSideWindows","newValue","targetViewMode","stretch","mapFn","mapObjIndexed","property","currentFloatingBound","expectedProperty","resizeSide","dock","isInResizingView","toolWindowState","_temp2","inputs","getAnchorOrientation","ToolWindowSettingsIconMenu","viewModeActionGroup","VIEW_MODE_ACTION_GROUP_ID","moveToActionGroup","MOVE_TO_ACTION_GROUP_ID","resizeActions","TOOL_WINDOW_RESIZE_ACTION_GROUP_ID","maximizeAction","removeFromSideBarAction","REMOVE_TOOL_WINDOW_FROM_SIDEBAR_ACTION_ID","gearIconActions","ViewModeToActionId","StyledToolWindowHeader","StyledToolWindowHeaderActions","StyledToolWindowHeaderContent","DefaultToolWindowHeader","additionalActions","contentHasFocus","Toolbar","DOCK_TOOL_WINDOW_ACTION_ID","StyledToolWindowContainer","StyledToolWindowContent","DefaultToolWindowContext","useDefaultToolWindowContext","DefaultToolWindow","headerContent","onFocusChange","mainContentTitle","contentRef","focusableContentRef","toolWindowProps","toolWindowContentProps","toolWindowHeaderProps","useToolWindow","setContentHasFocus","contentFocusWithinProps","autoHideProps","useAutoHide","hideTimeoutId","windowFocusWithinProps","onFocusWithin","forwardFocus","ignoreFocusedDescendant","defaultToolWindowContext","useToolWindowActions","getToolWindowNumberFromShortcut","num","DefaultToolWindowToolbarButton","showNumber","getActivateToolWindowActionId","number","DefaultToolWindows","showNumbers","toolWindowsRef","windowById","useToolWindowsActions","getPresentation","MultiViewToolWindow","groupTabs","isToolWindowFocused","setToolWindowFocused","activeKey","setActiveKey","defaultActiveKey","onActiveKeyChange","contents","validChild","MultiContentToolWindowContent","renderedViewSwitcher","onSelectionChange","tabContent","previousKeys","usePrevious","newActiveKey","activeContent","View","DOCK_PINNED_MODE_ACTION_ID","DOCK_UNPINNED_MODE_ACTION_ID","UNDOCK_MODE_ACTION_ID","FLOAT_MODE_ACTION_ID","WINDOW_MODE_ACTION_ID","anchors","getAnchorName","docked_pinned","docked_unpinned","undock","float","createDefaultActionGroup","alert","resizeGroup","isAnySideWindowWindowOpen","getOrdinal","description","n","ord","nth","exceptions","borderStyle","borderPropToCssProp","StyledToolbar","vertical","StyledShowMoreButton","StyledHorizontalToolbar","StyledVerticalToolbar","StyledToolbarContent","shouldWrap","firstOverflowedIndex","OrientationContext","overflowBehavior","rootProps","showMoreButtonRef","isOverflowPopupVisible","setOverflowPopupVisible","popupHeight","setPopupHeight","firstOverflowedChildIndex","setFirstOverflowedChildIndex","firstOverflowedChildRef","childElements","firstOverflowedChild","onMouseMove","firstOverflowedElement","shouldShow","onMouseLeave","showOverflowPopup","ToolbarInOverlay","firstVisibleIndex","ToolbarSeparator","ActionHelpTooltip","helpText","link","tooltipProps","Tooltip","multiline","HelpTooltip","inputTriggerRef","useTooltipTriggerState","fallbackRef","positionAria","updatePosition","TooltipTriggerAndOverlay","trigger","tooltipBackground","TRANSLATE","sideStyles","StyledTooltipPointer","POINTER_WIDTH","POINTER_HEIGHT","normalizeCssValue","withMin","withMax","getOffsetCssProp","TooltipPointer","tooltipSize","limitPointerPositionStyles","applyVerticalMinMax","identity","applyHorizontalMinMax","pointerPositionToOffsetStyle","offsetValue","StyledTooltip","hasPointer","StyledShortcut","StyledHeader","fontSizeDelta","StyledDescription","placementToPointerSide","center","withPointer","isInteractive","pointerPositionStyle","TooltipContext","useTooltip","measuredSize","useMeasuredSize","setMeasuredSize","_Tooltip","Description","lastMouseClientPos","globalMoveHandler","useMouseEventOverlayPosition","fakeTarget","visibility","coordinatesSource","_updatePosition","setInteractive","useTooltipTrigger","FocusableProvider","useAriaTooltipTrigger","StyledValidationTooltip","StyledWarningValidationTooltip","SpeedSearchTreeNode","TreeNode","SpeedSearchTree","treeRef","hideSpeedSearchPopup","useTreeRef","scrollRef","treeProps","treeContext","useSpeedSearchTree","useTreeVirtualizer","TreeContext","StyledTree","collectionSpeedSearch","TreeKeyboardDelegate","speedSearchKeyboardProps","selectableTree","useSelectableTree","getKeyLeftOf","getKeyRightOf","StyledTreeNodeIcon","getIcon","iconPath","TreeNodeIcon","StyledTreeNode","onActionRef","useTreeNodeToggleButton","treeNodeToggleButtonProps","selectedDescendantKeys","toggleSelection","treeNodeProps","useTreeNode","onDoubleClick","selectionKeyDown","focusedItem","isExpandable","onNodeKeyDown","shouldToggle","shiftKey","useSelectParentOfRemovedSelectedNode","previousCollectionRef","rawSelection","invalid","valid","invalidKey","latestState","expandSelection","shrinkSelection","expandAll","setExpandedKeys","getAllExpandableKeys","collapseAll","tree","rootKeys","useCollectionCacheInvalidation","cacheInvalidation","invalidators","lastInvalidators","anInvalidator","TreeCollection","last","keyMap","iterable","visit","nextKey","prevKey","Symbol","iterator","getKeyBefore","getKeyAfter","idx","isEmptyIterable","TreeSelectionManager","expandKeys","getExpandAndShrinkKeys","shrinkKeys","recursivelyGetExpandAndShrinkKeys","previousChild","newKeys","parentDescendants","getAllDescendants","getAllRoots","descendants","stopKeys","flat","_TreeCollection","rootNodes","recursivelyAddExpandableKeys","selectionState","useMultipleSelectionState","useCollection","newExpandedKeys","toggleTreeNode","expandedSiblings","getSiblings","getRootItemKeys","getChildItems","siblings","aKey","sectionItems","res","getSingleChildrenKeysRecursive","childNodesIterator","firstChild","done","noMoreChildren","FlattenedTreeLayout","padding","buildChild","layoutNode","skipped","visibleNodes","rowHeight","requestedRect","shouldInvalidateEverything","lastCollection","getVisibleLayoutInfos","useTreeActions","collectSelectableItems","collectedItems","collectSelectableItemsRecursive","NestedSelection","cache","WeakMap","getSelectionState","itemsInSubtree","normalizeChildren","cachedState","allDescendantsStates","SpeedSearchTreeWithCheckboxes","nestedSelection","otherInvalidators","StyledCheckboxWrapper","TreeNodeCheckbox","selectItemOnPress","itemContext","useNestedSelectionState","selectedKeysProp","defaultSelectedKeys","onSelectedKeysChange","selectedKeysSetter","useControllableSet","ListLayout","keyToWidth","visibleContentWidth","buildItem","buildNode","buildDivider","rectHeight","estimatedSize","buildCollection","getVisibleContentWidth","newRect","oldRect","cached","updateItemSize","changed","getLayoutInfo","itemContentWidth","intersects","isWordSeparator","isWhitespace","char","test","isUpperCase","isMeaningfulChar","ch","rawPattern","isStarts","isStart","pattern","continuous","inputIndex","patternIndex","lastMatch","chars","previousChar","useAriaSelectableCollection","useOriginalSelectableItem","styledComponents","ThemeConsumer","directChildRef","focusManagerRef","forceFocusFirst","containerElement","focusFirst","tabbable","WrappedFocusScope","GetFocusManager","savedUserSelect","handlersRef","webkitUserSelect","pageX","pageY","dragStarted","runAfterTransition","OverflowObserver","callback","data","mutations","mutation","removedNodes","intersectionObserver","addedNodes","IntersectionObserver","sortedEntries","entry","time","validEntries","uniqBy","newHiddenElements","isIntersecting","newVisibleElements","previouslyOverflowedElements","currentOverflowElements","childElement","scrollableContainerRef","rootMargin","setOverflowedElements","overflowObserver","change","getExpandAllKeys","roots","processItem","getExpandedToNodesKeys","targetNodeKeys","targetNodeKeySet","childValues","childValue","dfs","bfsVisit","bfs","parentValue","childNode","sortTreeNodesInPlace","by","compareFn","aa","bb","Context","nullErrorMessage","possiblyBlurredElement","getFocusableTreeWalker","ImmutableSet","setValueWithMutation","_len2","_key2","_len3","_key3","mutate","createSetInterface","currentValue","t","Ht","v","S","z","w","A","E","L","M","O","I","j","B","R","T","C","D","F","N","P","Z","tt","nt","ut","st","it","lt","ft","dt","pt","mt","gt","yt","ht","kt","o","p","u","s","l","f","d","m","xt","bt","$t","St","zt","Et","Lt","Mt","Ot","It","jt","Bt","decodeURIComponent","Rt","Dt","Ft","Tt","Nt","Pt","Gt","G","q","ct","ot","H","et","V","k","$","Ct","At","Y","W","Q","K","X","J","rt","vt","U","_t","ApiDescription","of","docgenInfo","Markdown","overrides","MDXComponents","useAutoLinkedJsDoc","useComponentLinkMap","docs","useDocusaurusContext","globalData","versions","version","linkMap","doc","componentName","InlineCode","componentLinkMap","comment","toCommentBlock","url","line","StyledSvg","StyledExpandButton","Expandable","onExpand","setIsExpandable","stroke","strokeLinecap","strokeLinejoin","strokeWidth","icons","clsx","flex","LivePreviewLoader","ErrorFallback","tryAgain","ErrorBoundaryTryAgainButton","Preview","BrowserOnly","ErrorBoundary","params","LivePreview","LiveError","ResultWithHeader","Translate","ThemedLiveEditor","isBrowser","useIsBrowser","LiveEditor","EditorWithHeader","ThemeProvider","Theme","lightThemeJson","transformCode","prismTheme","usePrismTheme","noInline","metastring","LiveProvider","SpeedSearchContainer","CollectionSpeedSearchContainer","useSpeedSearchList","listState","otherOutputs","SpeedSearchList","StyledIconLiveIndicator","SpeedSearch","speedSearchState","Tree","itemType","ProgressBarPauseButton","onPausedChange","WithLoading","ReactLiveScope","juiComponents","ExampleApp","darculaThemeJson","highContrastThemeJson","MonacoEditor","CodeBlock","live","Playground","scope","flags","CodeWrapper","isInlineCode","Code","inlineCode","frontMatter","contentTitle","assets","toc","_createMdxContent","_components","MDXContent","MDXLayout"],"mappings":"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"}