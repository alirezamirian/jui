{"version":3,"file":"assets/js/972e5777.76459967.js","sources":["webpack://website/../jui/src/Collections/ItemStateContext.tsx","webpack://website/../jui/src/Icon/PlatformIcon.tsx","webpack://website/../jui/src/Icon/StyledIconWrapper.tsx","webpack://website/../jui/src/Icon/useSvgIcon.tsx","webpack://website/../jui/src/styled.ts","webpack://website/./src/components/EmbeddedStory.tsx","webpack://website/./src/components/RefToIntellijPlatform.tsx","webpack://website/./docs/components/ToolWindows.mdx","webpack://website/../../node_modules/@react-aria/utils/dist/useObjectRef.mjs"],"sourcesContent":["import React from \"react\";\nimport { Node } from \"@react-types/shared\";\n\n/**\n * Generic state of items in collections, provided via a context.\n * To be used in Menu, Tree, or anything that deals with a collection of items for which the common states like\n * **disabled** or **selected** is applicable.\n */\nexport interface ItemStateContextType {\n  node: Node<unknown>;\n  isSelected: boolean;\n  isContainerFocused: boolean;\n  isDisabled: boolean;\n}\n\nexport const ItemStateContext =\n  React.createContext<ItemStateContextType | null>(null);\n","import React, { ForwardedRef } from \"react\";\nimport { useTheme } from \"@intellij-platform/core/styled\";\nimport { IconProps } from \"./IconProps\";\nimport { StyledIconWrapper } from \"./StyledIconWrapper\";\nimport { useSvgIcon } from \"./useSvgIcon\";\nimport { useObjectRef } from \"@react-aria/utils\";\n\nexport interface PlatformIconProps extends IconProps {\n  /**\n   * Icon path in intellij platform repo.\n   * If starts with \"/\", the path will be from the repo root. Otherwise, it's relative to \"platform/icons/src\".\n   * \".svg\" extension is optional.\n   */\n  icon: string;\n  /**\n   * Similar to icon, but for dark themes.\n   */\n  darkIcon?: string;\n}\n\nexport const amendName = (iconNameOrPath: string, amendment: string) => {\n  const [name, ext] = iconNameOrPath.split(\".\");\n  return `${name}${amendment}${ext ? `.${ext}` : \"\"}`;\n};\n\nexport const getDarkPath = (path: string, darkPath?: string) => {\n  const [name, ext] = path.split(\".\");\n  return darkPath || `${name}_dark${ext ? `.${ext}` : \"\"}`;\n};\n\nconst getPlatformIconPath = (relativePath: string) =>\n  relativePath.startsWith(\"/\")\n    ? relativePath.slice(1)\n    : `platform/icons/src/${relativePath}`;\n\n/**\n * Renders an icon from the predefined list of platform icons.\n * icon name must follow the directory structure in platform icons.\n * @example <PlatformIcon icon=\"general/hideToolWindow\" />\n * @example <PlatformIcon icon=\"toolbar/pin\" />\n * @example <PlatformIcon icon=\"toolbar/pin.svg\" />\n * @example <PlatformIcon icon=\"/platform/dvcs-impl/resources/icons/currentBranchLabel.svg\" />\n */\nexport const PlatformIcon = React.forwardRef(\n  (\n    { icon, darkIcon, ...props }: PlatformIconProps,\n    forwardedRef: ForwardedRef<HTMLElement>\n  ) => {\n    const ref = useObjectRef(forwardedRef);\n    const theme = useTheme();\n    const iconName = theme.dark ? getDarkPath(icon, darkIcon) : icon;\n    useSvgIcon(\n      {\n        path: getPlatformIconPath(iconName),\n        fallbackPath: getPlatformIconPath(icon),\n      },\n      ref\n    );\n\n    return <StyledIconWrapper {...props} ref={ref} />;\n  }\n);\n","import { styled } from \"../styled\";\nimport { IconSize } from \"@intellij-platform/core/Icon/IconProps\";\n\nconst DEFAULT_ICON_SIZE: IconSize = 16;\n\nexport const StyledIconWrapper = styled.span<{\n  size?: IconSize;\n  useCurrentColor?: boolean;\n  role?: string;\n}>`\n  box-sizing: border-box;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 0;\n  width: ${({ size = DEFAULT_ICON_SIZE }) => `${size}px`};\n  height: ${({ size = DEFAULT_ICON_SIZE }) => `${size}px`};\n  position: relative; // to allow absolute positioned indicators and overlays on icon\n  cursor: ${({ role }) => (role === \"button\" ? \"pointer\" : undefined)};\n`;\n","import {\n  RefObject,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useState,\n} from \"react\";\nimport { useTheme } from \"@intellij-platform/core/styled\";\nimport { ItemStateContext } from \"@intellij-platform/core/Collections\";\n\nexport function useSvgIcon(\n  { path, fallbackPath }: { path: string; fallbackPath?: string },\n  /**\n   * ref to the icon wrapper element in which the svg should be injected.\n   * This hook used to return svg string, and that svg was set as dangerouslySetInnerHTML. But now it injects the svg.\n   * by direct DOM manipulation. That's to eliminate the need for using dangerouslySetInnerHTML, so that we can allow\n   * arbitrary children (like LiveIndicator) as overlays on top of icons.\n   */\n  ref: RefObject<HTMLElement>\n) {\n  const theme = useTheme();\n  const itemState = useContext(ItemStateContext);\n  const selected = itemState?.isSelected || itemState?.isContainerFocused;\n  const [svg, setSvg] = useState<null | string>(null);\n\n  useLayoutEffect(() => {\n    const element = ref.current;\n    if (element) {\n      element.ariaBusy = svg === null ? \"true\" : null;\n      element.querySelector(\"svg\")?.remove();\n      if (svg) {\n        const svgElement = document.createElement(\"svg\");\n        element.appendChild(svgElement);\n        svgElement.outerHTML = makeIdsUnique(svg); // UNSAFE! Would require sanitization, or icon sources must be trusted.\n      }\n    } else {\n      console.log(`unexpected state - ${path}`);\n    }\n  }, [svg]);\n\n  useEffect(() => {\n    let canceled = false;\n    const fetchIcon = async () => {\n      if (!path) {\n        console.error(\"icon path is empty\");\n        return;\n      }\n      setSvg(null);\n      const svg = await theme\n        .getSvgIcon(path, selected)\n        .catch((e) => {\n          if (fallbackPath) {\n            return theme.getSvgIcon(fallbackPath, selected);\n          }\n          throw e;\n        })\n        .catch((e) => {\n          console.error(`Could not resolve icon \"${path}\"`, e);\n          return \"\";\n        });\n      if (!canceled) {\n        setSvg(svg);\n      }\n    };\n    fetchIcon().catch(console.error);\n    return () => {\n      canceled = true;\n    };\n  }, [path, selected]);\n}\n\n/**\n * If multiple instance of the same icon is rendered at the same time, and the SVG includes\n * url(#...) references to locally defined ids, in some cases the icon is not rendered properly.\n * because of ids colliding. We make sure the ids are unique in each rendered icon.\n */\nfunction makeIdsUnique(svg: string): string {\n  const randomPostfix = (Math.random() * 1000).toFixed(0);\n  const idMatches = svg.matchAll(/id=\"(.*?)\"/g);\n  return [...idMatches].reduce((modifiedSvg, [_, id]) => {\n    const newId = `${id}-${randomPostfix}`;\n    return replaceAll(\n      `id=\"${id}\"`,\n      `id=\"${newId}\"`,\n      replaceAll(`url(#${id})`, `url(#${newId})`, modifiedSvg)\n    );\n  }, svg);\n}\n\nfunction replaceAll(theOld: string, theNew: string, str: string): string {\n  const replaced = str.replace(theOld, theNew);\n  const replacedAgain = replaced.replace(theOld, theNew);\n  if (replaced === replacedAgain) {\n    return replaced;\n  }\n  return replaceAll(theOld, theNew, replacedAgain);\n}\n","import * as styledComponents from \"styled-components\";\nimport { ThemedStyledComponentsModule } from \"styled-components\";\nimport { Theme } from \"./Theme\";\nimport { KnownThemePropertyPath } from \"./Theme/types\";\n\ntype JuiStyledComponentsModule = ThemedStyledComponentsModule<\n  Theme<KnownThemePropertyPath>\n>;\n\nexport const styled =\n  styledComponents.default as JuiStyledComponentsModule[\"default\"];\nexport const useTheme =\n  styledComponents.useTheme as JuiStyledComponentsModule[\"useTheme\"];\nexport const css = styledComponents.css as JuiStyledComponentsModule[\"css\"];\nexport const ThemeConsumer =\n  styledComponents.ThemeConsumer as JuiStyledComponentsModule[\"ThemeConsumer\"];\n","import Link from \"@docusaurus/Link\";\nimport { useBaseUrlUtils } from \"@docusaurus/useBaseUrl\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledIframe = styled.iframe`\n  width: 100%;\n  border: none;\n`;\n\nconst externalLinkIcon = (\n  <svg\n    width=\"13.5\"\n    height=\"13.5\"\n    aria-hidden=\"true\"\n    viewBox=\"0 0 24 24\"\n    className=\"iconExternalLink__-_-node_modules-@docusaurus-theme-classic-lib-next-theme-IconExternalLink-styles-module\"\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z\"\n    ></path>\n  </svg>\n);\nconst storybookBaseUrl =\n  process.env.NODE_ENV === \"development\"\n    ? \"http://localhost:6008\"\n    : \"/storybook\";\n\n/**\n * A component for embedding a story based on storyId.\n *\n * TODO: pass theme based on docusaurus theme.\n */\nexport const EmbeddedStory = ({\n  height = 450,\n  storyId,\n}: {\n  storyId: string;\n  height?: number;\n}) => {\n  const { withBaseUrl } = useBaseUrlUtils();\n  return (\n    <>\n      <Link\n        href={`${storybookBaseUrl}/?path=/story/${storyId}`}\n        target=\"_blank\"\n      >\n        Open in storybook\n        {externalLinkIcon}\n      </Link>\n      <StyledIframe\n        style={{ height }}\n        src={withBaseUrl(\n          `${storybookBaseUrl}/iframe.html?id=${storyId}&args=&viewMode=story`\n        )}\n      />\n    </>\n  );\n};\n","import React from \"react\";\n\n/**\n * To make relation between things in jui and original reference impl in Intellij Platform\n */\nexport const RefToIntellijPlatform = ({\n  path,\n  name,\n}: {\n  path: string;\n  name?: string;\n}) => {\n  return (\n    // TODO: make it some nice box with an icon and a hint text which says something like \"Intellij Platform\" or\n    //  \"Reference\" or something better :D\n    <a\n      href={`https://github.com/JetBrains/intellij-community/blob/master/${path}`}\n      target=\"_blank\"\n    >\n      {name || path.split(\"/\").pop()}\n    </a>\n  );\n};\n","\n\nexport const frontMatter = {};\nexport const contentTitle = 'ToolWindows';\nexport {default as metadata} from '@site/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-components-tool-windows-mdx-972.json'\nexport const assets = {\n\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {RefToIntellijPlatform} from \"@site/src/components/RefToIntellijPlatform.tsx\";\nimport {EmbeddedStory} from \"@site/src/components/EmbeddedStory\";\nimport {PlatformIcon} from \"@intellij-platform/core\";\nexport const toc = [{\n  \"value\": \"Simple example\",\n  \"id\": \"simple-example\",\n  \"level\": 2\n}, {\n  \"value\": \"Tool window components\",\n  \"id\": \"tool-window-components\",\n  \"level\": 2\n}, {\n  \"value\": \"DefaultToolWindow\",\n  \"id\": \"defaulttoolwindow\",\n  \"level\": 3\n}, {\n  \"value\": \"MultiViewToolWindow\",\n  \"id\": \"multiviewtoolwindow\",\n  \"level\": 3\n}, {\n  \"value\": \"Multi view tool window header\",\n  \"id\": \"multi-view-tool-window-header\",\n  \"level\": 4\n}, {\n  \"value\": \"MultiViewToolWindow story\",\n  \"id\": \"multiviewtoolwindow-story\",\n  \"level\": 4\n}, {\n  \"value\": \"ToolWindowsState\",\n  \"id\": \"toolwindowsstate\",\n  \"level\": 2\n}, {\n  \"value\": \"State of a single tool window\",\n  \"id\": \"state-of-a-single-tool-window\",\n  \"level\": 3\n}, {\n  \"value\": \"Tool window actions\",\n  \"id\": \"tool-window-actions\",\n  \"level\": 2\n}, {\n  \"value\": \"Advanced API\",\n  \"id\": \"advanced-api\",\n  \"level\": 2\n}, {\n  \"value\": \"Hiding tool window bars\",\n  \"id\": \"hiding-tool-window-bars\",\n  \"level\": 3\n}, {\n  \"value\": \"Wide screen layout\",\n  \"id\": \"wide-screen-layout\",\n  \"level\": 3\n}, {\n  \"value\": \"useToolWindowState\",\n  \"id\": \"usetoolwindowstate\",\n  \"level\": 3\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    admonition: \"admonition\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\",\n    header: \"header\",\n    input: \"input\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.header, {\n      children: _jsx(_components.h1, {\n        id: \"toolwindows\",\n        children: \"ToolWindows\"\n      })\n    }), \"\\n\", _jsx(RefToIntellijPlatform, {\n      path: \"platform/platform-impl/src/com/intellij/toolWindow/ToolWindowPane.kt\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ToolWindows is the main component in Intellij applications. It's consisted of a main content in the center (typically\\nthe editor), and a number of tool windows, typically positioned around the main area. Each side of the main area, can\\nhost two groups of tool windows (Primary and Secondary), and tool windows can be moved across all these groups.\\nThey can also be rendered as floating windows. Read more about tool windows, in\\n\", _jsx(_components.a, {\n        href: \"https://plugins.jetbrains.com/docs/intellij/tool-windows.html?from=jetbrains.org\",\n        children: \"Intellij Platform Plugin SDK\"\n      }), \",\\nor in \", _jsx(_components.a, {\n        href: \"https://jetbrains.github.io/ui/components/tool_window/#tool-window-structure\",\n        children: \"jetbrains design system website\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"simple-example\",\n      children: \"Simple example\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Bellow is a simple usage of \", _jsx(_components.code, {\n        children: \"ToolWindows\"\n      }), \". Main content goes into \", _jsx(_components.code, {\n        children: \"children\"\n      }), \", and the state of tool windows is\\ncontrolled via \", _jsx(_components.code, {\n        children: \"toolWindowsState\"\n      }), \" prop. Tool windows are identified by a unique string id.\\nTry moving tool windows to different anchors.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        metastring: \"live themed noInline\",\n        live: true,\n        children: \"const StyledContent = styled.div`\\n  display: flex;\\n  height: 100%;\\n  justify-content: center;\\n  align-items: center;\\n  color: rgba(255, 255, 255, 0.4);\\n`;\\n\\nconst App = () => {\\n  const [toolWindowsState, setToolWindowsState] = useState(\\n    new ToolWindowsState({\\n      Project: toolWindowState({ isVisible: true }),\\n      Commit: toolWindowState({ isSplit: true }),\\n      Run: toolWindowState({ anchor: \\\"bottom\\\", isVisible: true }),\\n    })\\n  );\\n  const exampleToolWindow = (id) => ({\\n    id,\\n    toolbarButton: id,\\n    content: <StyledContent>{id}</StyledContent>,\\n  });\\n  return (\\n    <ToolWindows\\n      toolWindowsState={toolWindowsState}\\n      // called when the state is changed because of some UI interaction, e.g. opening/closing a tool window.\\n      onToolWindowStateChange={setToolWindowsState}\\n      windows={[\\n        exampleToolWindow(\\\"Project\\\"),\\n        exampleToolWindow(\\\"Commit\\\"),\\n        exampleToolWindow(\\\"Run\\\"),\\n      ]}\\n      height={500} // Use `100vh` if it's the only top level component in your app.\\n      containerProps={{ style: { margin: \\\"-1rem\\\" } }} // just to counteract the default padding in Live Preview\\n    >\\n      <StyledContent style={{ background: \\\"#2b2b2b\\\" }}>\\n        Main content\\n      </StyledContent>\\n    </ToolWindows>\\n  );\\n};\\nrender(<App />);\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"tool-window-components\",\n      children: \"Tool window components\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"While any content can be rendered in a tool window, there are a few built-in components that implement a header and\\ncontent tool window view according to\\n\", _jsx(_components.a, {\n        href: \"https://jetbrains.github.io/ui/components/tool_window\",\n        children: \"Intellij Platform UI Guidelines\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"defaulttoolwindow\",\n      children: \"DefaultToolWindow\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Implements a header and content view, where a title and some action buttons are displayed in the header.\\n\", _jsx(_components.code, {\n        children: \"additionalActions\"\n      }), \" prop can be used to render extra action buttons before the default action buttons: Options\\n(\", _jsx(PlatformIcon, {\n        style: {\n          verticalAlign: 'middle'\n        },\n        icon: \"general/gearPlain\"\n      }), \") and Hide\\n(\", _jsx(PlatformIcon, {\n        style: {\n          verticalAlign: 'middle'\n        },\n        icon: \"general/hideToolWindow\"\n      }), \").\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Features provided by Options menu:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      className: \"contains-task-list\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"\\\"Stretch to left\\\" resize action in options menu\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"\\\"Stretch to right\\\" resize action in options menu\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          disabled: true\n        }), \" \", \"Maximize resize action in options menu\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"\\\"Move to\\\" actions in options menu to change the tool window anchor\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"\\\"View Mode\\\" actions in options menu to change the \", _jsx(_components.code, {\n          children: \"viewMode\"\n        }), \" of the tool window between \\\"Dock Pinned\\\",\\n\\\"Dock Unpinned\\\", \\\"Undock\\\", and \\\"Float\\\".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        className: \"task-list-item\",\n        children: [_jsx(_components.input, {\n          type: \"checkbox\",\n          checked: true,\n          disabled: true\n        }), \" \", \"Hide button, which toggles \", _jsx(_components.code, {\n          children: \"isVisible\"\n        }), \" of the tool window state.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        metastring: \"live themed noInline\",\n        live: true,\n        children: \"const StyledContent = styled.div`\\n  display: flex;\\n  height: 100%;\\n  justify-content: center;\\n  align-items: center;\\n  color: rgba(255, 255, 255, 0.4);\\n`;\\n\\nconst App = () => {\\n  const [toolWindowsState, setToolWindowsState] = useState(\\n    new ToolWindowsState({\\n      Project: toolWindowState({ isVisible: true }),\\n      Commit: toolWindowState({ isSplit: true }),\\n      Run: toolWindowState({ anchor: \\\"bottom\\\", isVisible: true }),\\n    })\\n  );\\n  const exampleToolWindow = (id) => ({\\n    id,\\n    toolbarButton: id,\\n    content: (\\n      <DefaultToolWindow>\\n        <StyledContent>{id}</StyledContent>\\n      </DefaultToolWindow>\\n    ),\\n  });\\n  return (\\n    <ToolWindows\\n      toolWindowsState={toolWindowsState}\\n      onToolWindowStateChange={setToolWindowsState}\\n      windows={[\\n        exampleToolWindow(\\\"Project\\\"),\\n        exampleToolWindow(\\\"Commit\\\"),\\n        exampleToolWindow(\\\"Run\\\"),\\n      ]}\\n      height={500}\\n      containerProps={{ style: { margin: \\\"-1rem\\\" } }} // just to counteract the default padding in Live Preview\\n    >\\n      <StyledContent style={{ background: \\\"#2b2b2b\\\" }}>\\n        Main content\\n      </StyledContent>\\n    </ToolWindows>\\n  );\\n};\\nrender(<App />);\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"multiviewtoolwindow\",\n      children: \"MultiViewToolWindow\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Built on top of \", _jsx(_components.a, {\n        href: \"#defaulttoolwindow\",\n        children: \"DefaultToolWindow\"\n      }), \", extends it to support multiple views within the same tool\\nwindow, switched by either \", _jsx(_components.a, {\n        href: \"./Tabs#tool-window-theme\",\n        children: \"Tabs\"\n      }), \" or a dropdown.\"]\n    }), \"\\n\", _jsx(_components.admonition, {\n      title: \"tab grouping\",\n      type: \"warning\",\n      children: _jsxs(_components.p, {\n        children: [\"Grouping tabs in a dropdown is not implemented at the moment, and passing \", _jsx(_components.code, {\n          children: \"true\"\n        }), \" to \", _jsx(_components.code, {\n          children: \"groupTabs\"\n        }), \" will throw a warning.\\n\", _jsx(_components.a, {\n          href: \"https://github.com/alirezamirian/jui/issues/18\",\n          children: \"Github issue\"\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use \", _jsx(_components.code, {\n        children: \"MultiViewToolWindow.View\"\n      }), \" in a \", _jsx(_components.code, {\n        children: \"MultiViewToolWindow\"\n      }), \", to render many views. Each view must have a unique\\nkey.\\nYou can control the active view of a \", _jsx(_components.code, {\n        children: \"MultiViewToolWindow\"\n      }), \" through \", _jsx(_components.code, {\n        children: \"activeKey\"\n      }), \", and \", _jsx(_components.code, {\n        children: \"onActiveKeyChange\"\n      }), \" props.\\nOr you can leave it uncontrolled and set \", _jsx(_components.code, {\n        children: \"defaultActiveKey\"\n      }), \" if needed.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<MultiViewToolWindow>\\n  <MultiViewToolWindow.View tabContent={<>First view</>} key=\\\"v1\\\">\\n    ...\\n  </MultiViewToolWindow.View>\\n  <MultiViewToolWindow.View tabContent={<>Second view</>} key=\\\"v2\\\">\\n    ...\\n  </MultiViewToolWindow.View>\\n</MultiViewToolWindow>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"ToolWindowTabContent\"\n      }), \" can be used in tabContent, to show a tab with an icon, a text and maybe a optional close button.\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"multi-view-tool-window-header\",\n      children: \"Multi view tool window header\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Similar to \", _jsx(_components.a, {\n        href: \"#defaulttoolwindow\",\n        children: \"DefaultToolWindow\"\n      }), \", \", _jsx(_components.code, {\n        children: \"additionalActions\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"headerContent\"\n      }), \" props can be used to\\ndefine the content that goes into the header of a multi view tool window. View switcher UI (whether\\nit be tabs or dropdown) is rendered immediately after \", _jsx(_components.code, {\n        children: \"headerContent\"\n      }), \".\\nIf you need more flexibility, you can pass a render function to \", _jsx(_components.code, {\n        children: \"headerContent\"\n      }), \". Rendered view switcher\\nis then passed to that function to be placed in the returned UI:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<MultiViewToolWindow\\n  headerContent={({ renderedViewSwitcher }) => (\\n    <>\\n      {<span style={{ marginRight: 4 }}>Some title:</span>}\\n      {/* if there is only one view, render something else instead of the content switcher */}\\n      {executions.length > 1 ? renderedViewSwitcher : <SomethingElse />}\\n    </>\\n  )}\\n>\\n  {executions.map((execution) => (\\n    <MultiViewToolWindow.View\\n      key={execution.id}\\n      tabContent={execution.title}\\n    >\\n      ...\\n    </MultiViewToolWindow.View>\\n  ))}\\n</MultiViewToolWindow>\\n<></> // FIXME: this is a hack for fixing webstorm issue in formatting mdx files.\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"multiviewtoolwindow-story\",\n      children: \"MultiViewToolWindow story\"\n    }), \"\\n\", _jsx(EmbeddedStory, {\n      storyId: \"components-toolwindow--multi-view\",\n      height: 450\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"toolwindowsstate\",\n      children: \"ToolWindowsState\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use \", _jsx(_components.code, {\n        children: \"ToolWindowsState\"\n      }), \" to create immutable state of tool windows. It accepts a mapping from ids to\\n\", _jsx(_components.code, {\n        children: \"ToolWindowState\"\n      }), \" objects, and keeps it on a readonly property \", _jsx(_components.code, {\n        children: \"windows\"\n      }), \". You can use \", _jsx(_components.code, {\n        children: \"toolWindowState\"\n      }), \" helper function\\nto create \", _jsx(_components.code, {\n        children: \"ToolWindowState\"\n      }), \" objects.\\nThere are many methods on \", _jsx(_components.code, {\n        children: \"ToolWindowsState\"\n      }), \" for supported UI interactions that can change the state.\\nAll of these functions return a new instance of \", _jsx(_components.code, {\n        children: \"ToolWindowsState\"\n      }), \", instead of mutating \", _jsx(_components.code, {\n        children: \"windows\"\n      }), \" property in place.\"]\n    }), \"\\n\", _jsx(_components.admonition, {\n      type: \"tip\",\n      children: _jsxs(_components.p, {\n        children: [\"Calling \", _jsx(_components.code, {\n          children: \"ToolWindowsState\"\n        }), \" methods doesn't magically mutate the state. It just returns a new \", _jsx(_components.code, {\n          children: \"ToolWindowsState\"\n        }), \" object.\\nYou have to set the state yourself from the returned value.\"]\n      })\n    }), \"\\n\", _jsx(_components.admonition, {\n      type: \"note\",\n      children: _jsxs(_components.p, {\n        children: [\"Immutability of \", _jsx(_components.code, {\n          children: \"ToolWindowsState\"\n        }), \" is at typescript level, not runtime.\"]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const [toolWindowsState, setToolWindowsState] = useState(\\n  new ToolWindowsState(keyToWindowState)\\n);\\nconst toggleFoo = () => setToolWindowsState((state) => state.toggle(\\\"foo\\\"));\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        metastring: \"live noInline themed\",\n        live: true,\n        children: \"const toolWindows = [\\n  {\\n    id: \\\"Foo\\\",\\n    initialState: toolWindowState(),\\n    toolbarButton: \\\"Foo\\\",\\n    content: <DefaultToolWindow headerContent=\\\"Foo\\\"></DefaultToolWindow>,\\n  },\\n  {\\n    id: \\\"Bar\\\",\\n    initialState: toolWindowState({ anchor: \\\"bottom\\\", isVisible: true }),\\n    toolbarButton: \\\"Bar\\\",\\n    content: <DefaultToolWindow headerContent=\\\"Bar\\\"></DefaultToolWindow>,\\n  },\\n];\\nconst App = () => {\\n  const [toolWindowsState, setToolWindowsState] = useState(\\n    () =>\\n      new ToolWindowsState(\\n        Object.fromEntries(\\n          toolWindows.map(({ id, initialState }) => [id, initialState])\\n        )\\n      )\\n  );\\n\\n  const isFooVisible = toolWindowsState.windows.Foo.isVisible;\\n  const openFoo = () => setToolWindowsState((state) => state.toggle(\\\"Foo\\\"));\\n  return (\\n    <ToolWindows\\n      toolWindowsState={toolWindowsState}\\n      onToolWindowStateChange={setToolWindowsState}\\n      windows={toolWindows}\\n      height={500}\\n      containerProps={{ style: { margin: \\\"-1rem\\\" } }} // just to counteract the default padding in Live Preview\\n    >\\n      <div style={{ padding: \\\"1rem\\\" }}>\\n        {\\n          <Button onClick={openFoo}>\\n            {isFooVisible ? \\\"Close\\\" : \\\"Open\\\"} Foo\\n          </Button>\\n        }\\n      </div>\\n    </ToolWindows>\\n  );\\n};\\nrender(<App />);\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"state-of-a-single-tool-window\",\n      children: \"State of a single tool window\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"ToolWindowState\"\n      }), \" describes the state of a single tool window, and it's usually created by \", _jsx(_components.code, {\n        children: \"toolWindowState\"\n      }), \" helper\\nfunction. It's used when creating \", _jsx(_components.a, {\n        href: \"#toolwindowsstate\",\n        children: \"ToolWindowsState\"\n      }), \" objects.\"]\n    }), \"\\n\", _jsx(_components.admonition, {\n      type: \"tip\",\n      children: _jsxs(_components.p, {\n        children: [\"No more than one \", _jsx(_components.strong, {\n          children: \"docked\"\n        }), \" tool window within the same group (the same \", _jsx(_components.code, {\n          children: \"anchor\"\n        }), \" and \", _jsx(_components.code, {\n          children: \"isSplit\"\n        }), \") can be visible.\\nSetting \", _jsx(_components.code, {\n          children: \"isVisible\"\n        }), \" to \", _jsx(_components.code, {\n          children: \"true\"\n        }), \" for more than one window in the same group causes a render error in \", _jsx(_components.code, {\n          children: \"ToolWindows\"\n        }), \".\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Here are some example usages of \", _jsx(_components.code, {\n        children: \"toolWindowState\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"// closed docked and pinned tool window in the Primary group of the left side.\\ntoolWindowState();\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"// open unpinned docked tool window in the Secondary group of the bottom side\\ntoolWindowState({\\n  anchor: \\\"bottom\\\",\\n  viewMode: \\\"docked_unpinned\\\", // docked (not an overlay), but unpinned, meaning that it will be closed when lost focus.\\n  isSplit: true, // Secondary group\\n  isVisible: true,\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"// open unpinned docked tool window in the Secondary group of the bottom side\\ntoolWindowState({\\n  anchor: \\\"bottom\\\",\\n  viewMode: \\\"undock\\\", // An overlay over other tool windows and the main content. An undock tool window is unpinned too.\\n  weight: 0.7, // Gets 70% of the available space of its side (\\\"bottom\\\"). The visible window from the Secondary\\n  // group (if any) will take 30% of the width.\\n\\n  floatingBounds: {\\n    // Defines the boundaries of the tool window if view mode is changed to \\\"float\\\". Note that a window state can have\\n    // `floatingBounds`, even though its viewMode is not \\\"float\\\", this allows for \\\"remembering\\\" the full state, even if a\\n    // a piece of state is not actively in use because of the value of some other pieces.\\n    left: 300,\\n    top: 300,\\n    width: 600,\\n    height: 300,\\n  },\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"tool-window-actions\",\n      children: \"Tool window actions\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"TODO\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"advanced-api\",\n      children: \"Advanced API\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"hiding-tool-window-bars\",\n      children: \"Hiding tool window bars\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"hideToolWindowBars\"\n      }), \" prop can be used to implement\\n\", _jsx(_components.a, {\n        href: \"https://www.jetbrains.com/help/idea/tool-windows.html#show_hide_tool_window_bars\",\n        children: \"quick access button\"\n      }), \" for showing\\ntool windows. Quick access button itself is not available out of the box at the moment.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"wide-screen-layout\",\n      children: \"Wide screen layout\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"useWidescreenLayout\"\n      }), \" can be used to\\n\", _jsx(_components.a, {\n        href: \"https://www.jetbrains.com/help/idea/manipulating-the-tool-windows.html#wide-screen\",\n        children: \"optimize for wide-screen monitors\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"usetoolwindowstate\",\n      children: \"useToolWindowState\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"useToolWindowState\"\n      }), \" can be used from any content within a tool window, to access the state of the tool window.\\nIt also provides some functions for updating the state. These functions are used in\\n\", _jsx(_components.a, {\n        href: \"#defaulttoolwindow\",\n        children: \"DefaultToolWindow\"\n      }), \" header.\"]\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n","import {useRef as $gbmns$useRef, useMemo as $gbmns$useMemo} from \"react\";\n\n/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \nfunction $df56164dff5785e2$export$4338b53315abf666(forwardedRef) {\n    const objRef = (0, $gbmns$useRef)(null);\n    return (0, $gbmns$useMemo)(()=>({\n            get current () {\n                return objRef.current;\n            },\n            set current (value){\n                objRef.current = value;\n                if (typeof forwardedRef === 'function') forwardedRef(value);\n                else if (forwardedRef) forwardedRef.current = value;\n            }\n        }), [\n        forwardedRef\n    ]);\n}\n\n\nexport {$df56164dff5785e2$export$4338b53315abf666 as useObjectRef};\n//# sourceMappingURL=useObjectRef.module.js.map\n"],"names":["ItemStateContext","React","amendName","iconNameOrPath","amendment","name","ext","split","getDarkPath","path","darkPath","getPlatformIconPath","relativePath","startsWith","slice","PlatformIcon","_ref","forwardedRef","icon","darkIcon","props","ref","useObjectRef","iconName","theme","useTheme","dark","useSvgIcon","fallbackPath","_jsx","StyledIconWrapper","__docgenInfo","styled","size","_ref2","_ref3","role","undefined","itemState","useContext","selected","isSelected","isContainerFocused","svg","setSvg","useState","useLayoutEffect","element","current","ariaBusy","querySelector","remove","svgElement","document","createElement","appendChild","outerHTML","makeIdsUnique","randomPostfix","Math","random","toFixed","matchAll","reduce","modifiedSvg","_","id","newId","replaceAll","console","log","useEffect","canceled","fetchIcon","error","getSvgIcon","catch","e","theOld","theNew","str","replaced","replace","replacedAgain","styledComponents","css","ThemeConsumer","StyledIframe","displayName","componentId","externalLinkIcon","width","height","viewBox","className","children","fill","d","storybookBaseUrl","EmbeddedStory","storyId","withBaseUrl","useBaseUrlUtils","_jsxs","_Fragment","Link","href","target","style","src","RefToIntellijPlatform","pop","frontMatter","contentTitle","assets","toc","_createMdxContent","_components","MDXContent","MDXLayout","$df56164dff5785e2$export$4338b53315abf666","objRef","value"],"mappings":"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"}