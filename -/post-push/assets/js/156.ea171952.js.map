{"version":3,"file":"assets/js/156.ea171952.js","sources":["webpack://website/../../node_modules/monaco-editor/esm/vs/basic-languages/typespec/typespec.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.0(f6dc0eb8fce67e57f6036f4769d92c1666cdf546)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/typespec/typespec.ts\nvar bounded = (text) => `\\\\b${text}\\\\b`;\nvar notBefore = (regex) => `(?!${regex})`;\nvar identifierStart = \"[_a-zA-Z]\";\nvar identifierContinue = \"[_a-zA-Z0-9]\";\nvar identifier = bounded(`${identifierStart}${identifierContinue}*`);\nvar directive = bounded(`[_a-zA-Z-0-9]+`);\nvar keywords = [\n  \"import\",\n  \"model\",\n  \"scalar\",\n  \"namespace\",\n  \"op\",\n  \"interface\",\n  \"union\",\n  \"using\",\n  \"is\",\n  \"extends\",\n  \"enum\",\n  \"alias\",\n  \"return\",\n  \"void\",\n  \"if\",\n  \"else\",\n  \"projection\",\n  \"dec\",\n  \"extern\",\n  \"fn\"\n];\nvar namedLiterals = [\"true\", \"false\", \"null\", \"unknown\", \"never\"];\nvar nonCommentWs = `[ \\\\t\\\\r\\\\n]`;\nvar numericLiteral = `[0-9]+`;\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"/**\", close: \" */\", notIn: [\"string\"] }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' }\n  ],\n  indentationRules: {\n    decreaseIndentPattern: new RegExp(\"^((?!.*?/\\\\*).*\\\\*/)?\\\\s*[\\\\}\\\\]].*$\"),\n    increaseIndentPattern: new RegExp(\n      \"^((?!//).)*(\\\\{([^}\\\"'`/]*|(\\\\t|[ ])*//.*)|\\\\([^)\\\"'`/]*|\\\\[[^\\\\]\\\"'`/]*)$\"\n    ),\n    // e.g.  * ...| or */| or *-----*/|\n    unIndentedLinePattern: new RegExp(\n      \"^(\\\\t|[ ])*[ ]\\\\*[^/]*\\\\*/\\\\s*$|^(\\\\t|[ ])*[ ]\\\\*/\\\\s*$|^(\\\\t|[ ])*[ ]\\\\*([ ]([^\\\\*]|\\\\*(?!/))*)?$\"\n    )\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".tsp\",\n  brackets: [\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }\n  ],\n  symbols: /[=:;<>]+/,\n  keywords,\n  namedLiterals,\n  escapes: `\\\\\\\\(u{[0-9A-Fa-f]+}|n|r|t|\\\\\\\\|\"|\\\\\\${)`,\n  tokenizer: {\n    root: [{ include: \"@expression\" }, { include: \"@whitespace\" }],\n    stringVerbatim: [\n      { regex: `(|\"|\"\")[^\"]`, action: { token: \"string\" } },\n      { regex: `\"\"\"${notBefore(`\"`)}`, action: { token: \"string\", next: \"@pop\" } }\n    ],\n    stringLiteral: [\n      { regex: `\\\\\\${`, action: { token: \"delimiter.bracket\", next: \"@bracketCounting\" } },\n      { regex: `[^\\\\\\\\\"$]+`, action: { token: \"string\" } },\n      { regex: \"@escapes\", action: { token: \"string.escape\" } },\n      { regex: `\\\\\\\\.`, action: { token: \"string.escape.invalid\" } },\n      { regex: `\"`, action: { token: \"string\", next: \"@pop\" } }\n    ],\n    bracketCounting: [\n      { regex: `{`, action: { token: \"delimiter.bracket\", next: \"@bracketCounting\" } },\n      { regex: `}`, action: { token: \"delimiter.bracket\", next: \"@pop\" } },\n      { include: \"@expression\" }\n    ],\n    comment: [\n      { regex: `[^\\\\*]+`, action: { token: \"comment\" } },\n      { regex: `\\\\*\\\\/`, action: { token: \"comment\", next: \"@pop\" } },\n      { regex: `[\\\\/*]`, action: { token: \"comment\" } }\n    ],\n    whitespace: [\n      { regex: nonCommentWs },\n      { regex: `\\\\/\\\\*`, action: { token: \"comment\", next: \"@comment\" } },\n      { regex: `\\\\/\\\\/.*$`, action: { token: \"comment\" } }\n    ],\n    expression: [\n      { regex: `\"\"\"`, action: { token: \"string\", next: \"@stringVerbatim\" } },\n      { regex: `\"${notBefore(`\"\"`)}`, action: { token: \"string\", next: \"@stringLiteral\" } },\n      { regex: numericLiteral, action: { token: \"number\" } },\n      {\n        regex: identifier,\n        action: {\n          cases: {\n            \"@keywords\": { token: \"keyword\" },\n            \"@namedLiterals\": { token: \"keyword\" },\n            \"@default\": { token: \"identifier\" }\n          }\n        }\n      },\n      { regex: `@${identifier}`, action: { token: \"tag\" } },\n      { regex: `#${directive}`, action: { token: \"directive\" } }\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":["bounded","text","notBefore","regex","identifier","directive","nonCommentWs","conf","RegExp","language","keywords","namedLiterals"],"mappings":"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"}