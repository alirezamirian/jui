"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7162],{65212:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>m});var a=n(28427),o=(n(2784),n(30876));const i={id:"getting-started",sidebar_position:0},r="Getting started",s={unversionedId:"getting-started",id:"getting-started",title:"Getting started",description:"Installation",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/jui/-/pre-actions/docs/getting-started",draft:!1,editUrl:"https://github.com/alirezamirian/jui/edit/master/packages/website/docs/getting-started.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"getting-started",sidebar_position:0},sidebar:"tutorialSidebar",next:{title:"Theming",permalink:"/jui/-/pre-actions/docs/guides/Theming"}},l={},m=[{value:"Installation",id:"installation",level:2},{value:"Configuring theme",id:"configuring-theme",level:3},{value:"Hello World!",id:"hello-world",level:3},{value:"Next steps",id:"next-steps",level:2}],p={toc:m};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getting-started"},"Getting started"),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("p",null,"The packaging may be subject to change as the library evolves. At the moment, everything is shipped in a single package,\n",(0,o.kt)("inlineCode",{parentName:"p"},"@intellij-platform/core"),".\nThere is a peer dependency on ",(0,o.kt)("inlineCode",{parentName:"p"},"styled-components"),". While styled-components@4 might work too, only v5 has been tested."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @intellij-platform/core styled-components\n")),(0,o.kt)("p",null,"Or with npm:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm i @intellij-platform/core styled-components\n")),(0,o.kt)("h3",{id:"configuring-theme"},"Configuring theme"),(0,o.kt)("p",null,"All components rely on ",(0,o.kt)("a",{parentName:"p",href:"/jui/-/pre-actions/docs/guides/Theming#theme"},"Theme")," to be provided. So you need to wrap your application code in a\n",(0,o.kt)("inlineCode",{parentName:"p"},"ThemeProvider"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import { ThemeProvider } from "@intellij-platform/core";\nimport darculaThemeJson from "@intellij-platform/core/themes/darcula.theme.json";\n\nconst theme = new Theme(darculaThemeJson);\n\nfunction App() {\n  return <ThemeProvider theme={theme}>...</ThemeProvider>;\n}\n')),(0,o.kt)("p",null,"The only required value for creating a ",(0,o.kt)("inlineCode",{parentName:"p"},"Theme")," object is a theme json object. You can use any\n",(0,o.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/JetBrains/intellij-community/e3c7d96daba1d5d84d5650bde6c220aed225bfda/plugins/devkit/devkit-core/resources/schemes/theme.schema.json"},"valid theme json")," but\n",(0,o.kt)("a",{parentName:"p",href:"https://www.jetbrains.com/help/idea/user-interface-themes.html"},"the default themes")," are\navailable under ",(0,o.kt)("inlineCode",{parentName:"p"},"@intellij-platform/core/themes"),".\nSee more options for creating theme in ",(0,o.kt)("a",{parentName:"p",href:"/jui/-/pre-actions/docs/guides/Theming#creating-a-theme"},"theming docs"),"."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Set ",(0,o.kt)("inlineCode",{parentName:"p"},"resolveJsonModule")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," in your ",(0,o.kt)("inlineCode",{parentName:"p"},"tsconfig.json")," to allow importing theme json files.")),(0,o.kt)("h3",{id:"hello-world"},"Hello World!"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live",live:!0},'// import { Item, List, Theme, ThemeProvider } from "@intellij-platform/core";\n// import darculaThemeJson from "@intellij-platform/core/themes/darcula.theme.json";\n\nfunction App() {\n  const darculaTheme = new Theme(darculaThemeJson);\n  return (\n    <ThemeProvider theme={darculaTheme}>\n      <List selectionMode="multiple">\n        <Item>Hello React!</Item>\n        <Item>Hello Intellij Platform</Item>\n        <Item>Hello World!</Item>\n      </List>\n    </ThemeProvider>\n  );\n}\n')),(0,o.kt)("h2",{id:"next-steps"},"Next steps"),(0,o.kt)("p",null,"A good next step would be to check out ",(0,o.kt)("a",{parentName:"p",href:"/jui/-/pre-actions/docs/components/ToolWindows"},"Tool Windows"),". It's the centric component in\nmost apps. A few other commonly used components to start with would be\n",(0,o.kt)("a",{parentName:"p",href:"/jui/-/pre-actions/docs/components/Tree#speedsearchtree"},"SpeedSearchTree"),", ",(0,o.kt)("a",{parentName:"p",href:"/jui/-/pre-actions/docs/components/List#speedsearchlist"},"SpeedSearchList")," and\n",(0,o.kt)("a",{parentName:"p",href:"/jui/-/pre-actions/docs/components/Tabs"},"Tabs"),"."))}d.isMDXComponent=!0}}]);
//# sourceMappingURL=d589d3a7.d7ad7970.js.map