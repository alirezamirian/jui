{"version":3,"file":"assets/js/0b1e8508.8388b3bf.js","mappings":"wGAqDO,SAASA,EACdC,GAEA,MAAO,WAAYA,CACrB,CACO,SAASC,EAAcD,GAC5B,MAAO,aAAcA,CACvB,CAEO,SAASE,EACdF,GAEA,MAAO,aAAcA,GAAU,WAAYA,CAC7C,CAEO,SAASG,EACdH,GAEA,MAAO,aAAcA,CACvB,C,2HChEO,MAAMI,EAAiBC,IAMvB,IANwB,SAC7BC,EAAQ,SACRC,GAIDF,EACC,MACMG,EADcC,GACGC,CAAYJ,GACnC,OACEK,EAAAA,cAAAA,EAAAA,SAAA,KACGH,IAAmBD,EAAWA,EAASC,GAAkBA,GACzD,EAQMC,EAAuBA,KAClC,MAAMG,GAASC,EAAAA,EAAAA,MACf,OAAQP,IACN,MAAMQ,EAAmBF,IAASN,IAAWS,MAC3CC,IAAA,IAAC,KAAEC,GAAMD,EAAA,MAAc,aAATC,CAAmB,IAEnC,OAAOH,GAAmBI,EAAAA,EAAAA,GAAiBJ,GAAoB,EAAE,CAClE,EACDV,EAAAe,aAAA,ikB,uJCwFF,MAAMC,EAAaA,CACjBC,EACAC,EACAC,IAEAD,EAAEE,OAASH,GAAWG,OACrBD,EAAQF,EAAUI,WAAa,GAAKC,EAAAA,GAAoBC,OACtDC,GACCN,EAAEO,iBAAiBD,KACnBE,QAAQT,EAAUI,WAAWM,SAASH,M,0BC3F5C,MAAMI,EAAiBrB,EAAAA,cAA8B,IAErD,SAASsB,IACP,MAAQ,OAAMC,KAAKC,MAAsB,IAAhBD,KAAKE,WAChC,CAEA,MAAMC,EAA+B,uBAC/BC,EAAiC,sBACjCC,EAAqB,IAAIC,IAUxB,SAASC,EAAgBC,GAC9B,MAAMC,GAAgBC,EAAAA,EAAAA,YAAWZ,GAC3BpB,GAASC,EAAAA,EAAAA,MACTgC,EAAoB,IAC1BC,EAAAA,EAAAA,KACG9C,IACCA,GAAYA,aAAkB+C,EAAAA,KAAgB9C,EAAAA,EAAAA,IAAcD,GAExD,KADAA,EAAOO,WAEZP,KACKA,GAAYA,aAAkB+C,EAAAA,GAChCF,EAAQG,KAAKhD,EACf,GAEFiD,EAAyBrC,EAAQ8B,EAAMG,UAGzC,MAAMK,EAAYC,OAAOC,YACvBP,EAAQQ,KAAKrD,GAAW,CAACA,EAAOsD,GAAItD,EAAOkD,WAAa,QAEnDK,IAAoBC,EAAAA,EAAAA,UAASvB,IAE9B,qBAAEwB,GDxEH,SACLP,EACAQ,EAKmBC,GAUlB,IATD,WACEC,GAAa,QAOd,IAAAD,EAAG,CAAC,EAACA,EAEN,MAAME,GAAgCC,EAAAA,EAAAA,QAEpC,IACIC,GAA8BD,EAAAA,EAAAA,QAAsB,MACpDE,GAA+CC,EAAAA,EAAAA,IAAkB3C,IAwGzE,IAAwB4C,EAtGpB,GAuGwB,KADJA,EAtGD5C,EAAE6C,aAuGVC,UAAqC,IAAnBF,EAAME,WAvGE9C,EAAE+C,OAkBvC,GAd4C,OAAxCN,EAA4BO,SAC9BC,OAAOC,aAAaT,EAA4BO,SAa9CT,EAA8BS,QAAQG,OAAS,EACjDZ,EAA8BS,QAAQI,MAAKrE,IAA6B,IAA5B,SAAEsE,EAAQ,SAAErE,GAAUD,EAChE,GAAIe,EAAWuD,EAASC,gBAAiBtD,GAAG,GAE1C,OADAuD,EAAcvE,IACP,CACT,IAEFuD,EAA8BS,QAAU,OACnC,CACL,MAAMQ,EAAkB3B,OAAO4B,QAAQ7B,GACpC8B,SAAQhE,IAAA,IAAEV,EAAU4C,GAAUlC,EAAA,OAC7BkC,EAAUG,KAAKsB,IAAQ,CAAQrE,WAAUqE,cAAY,IAEtDM,QAEGC,IAIGC,EAAAA,EAAAA,GAAmBD,EAAMP,YAE/BM,QAAOG,IAAA,IAAC,SAAET,GAAUS,EAAA,OAAKhE,EAAWuD,EAASU,eAAgB/D,EAAE,IAElEuC,EAA8BS,QAAUQ,EAAgBG,QACtDK,IAAA,IAAC,SAAEX,EAAQ,SAAErE,GAAUgF,EAAA,OAAKX,EAASC,eAAe,IAGlDf,EAA8BS,QAAQG,OAAS,GACjDV,EAA4BO,QAAUC,OAAOgB,YAAW,KACtD1B,EAA8BS,QAAU,EAAE,GACzC,KACHkB,SAASC,iBACP,WACA,KACED,SAASC,iBACP,SACA,KACE5B,EAA8BS,QAAU,EAAE,GAE5C,CAAEoB,MAAM,GACT,GAGH,CAAEA,MAAM,EAAMC,SAAS,KAEhBb,EAAgBL,OAAS,GAClCI,EAAcC,EAAgB,GAAGxE,SAErC,CA1DA,SAASuE,EAAcvE,IAEN,IADAoD,EAASpD,EAAU,CAAE4D,MAAO5C,MAGzCA,EAAEsE,kBACFtE,EAAEuE,iBAEN,CAmDA,IAqBF,MAAO,CAAEpC,qBAnBoB,CAiB3B,CAACG,EAAa,mBAAqB,aAAcI,GAGrD,CCxCmC8B,CAC/B5C,GACA,CAAC5C,EAAQD,KAAiB,IAAf,MAAE6D,GAAO7D,EAClBwC,EACG9B,MAAMf,GAAWA,EAAOsD,KAAOhD,KAC9ByF,QAAQ,CACR7B,QAEA8B,QAAS9B,EAAM+B,kBAAkBC,QAAUhC,EAAM+B,OAAS,MAC1D,GAEN,CAAErC,WAAYlB,EAAMkB,aAGhBuC,EAAa,IAAIxD,KAAkBE,GAiBzC,OAdAY,EAAqBpB,GAAgCkB,EAErDE,EACG,QAAOnB,IAAiCiB,KACvC,IAEJ6C,EAAAA,EAAAA,YAAU,KACR7D,EAAmB8D,IAAI9C,EAAkB4C,EAAW,KAEtDC,EAAAA,EAAAA,YAAU,IACD,KACL7D,EAAmB+D,OAAO/C,EAAiB,GAE5C,IAED5C,EAAAA,cAACqB,EAAeuE,SAAQ,CAACC,MAAOL,GAC7BzD,EAAMnC,SAAS,CAAEkD,yBAGxB,CAiBA,SAASR,EACPrC,EACA6F,EACAC,GAEA,OAAOD,EAAkBpD,KAErBsD,IAEA,GAAIA,aAA4B5D,EAAAA,EAC9B,OAAO4D,EAET,MAAMzD,EACJtC,IAAS+F,EAAiBrD,MACzBqD,EAAiBC,eACdhG,IAAS+F,EAAiBC,qBAC1BC,GACAC,EAAgB5D,IAAY,GAC5BlD,EAAgD,IACjD2G,MACCxG,EAAAA,EAAAA,IAAwBwG,GACxB,CAAED,OAAQA,GAAU,MACpB,CAAC,EACLxD,YACAyB,SAAUmC,GAAgB5F,EAAAA,EAAAA,GAAiB4F,QAAiBD,EAC5Dd,QAAUgB,IACH/G,EAAOgH,YACVL,EAAiBM,gBACfF,GAAW,CAAE7C,MAAO,KAAM8B,QAAS,MAEvC,GAeJ,OA5DN,SACEhG,GAEA,MAAO,aAAcA,CACvB,CA6CQkH,CAAqBlH,KACrBG,EAAAA,EAAAA,IAAwBwG,KAExB3G,EAAOO,SAAW0C,EAChBrC,EACA+F,EAAiBpG,SAAS8C,KAAK8D,GACnB,YAAVA,EAAsB,IAAIpE,EAAAA,EAAgBoE,IAE5CnH,IAGGA,CAAM,GAGnB,CAOO,SAASoH,EAAuBpB,GACrC,MAAMqB,EAAwBrB,EAAQsB,QACnC,IAAGjF,MAEN,GAAIgF,aAAiCE,YAAa,CAWhD,MAAMC,EAAarE,OAAOsE,KAAKJ,EAAsBK,SAClDzC,QAAQ0C,GAAYA,EAAQC,WAAWtF,KACvCe,KAAKsE,IACJ,MAAMrE,EAAKqE,GAASE,QAAQvF,EAAgC,IACtDO,EAAUS,GAAMf,EAAmBuF,IAAIxE,GAE7C,OAAOT,EACHM,OAAO4E,OAAOlF,GAASoC,QACrBjE,IAAA,IAAC,aAAEgH,GAAchH,EAAA,OAAsB,IAAjBgH,CAAsB,IAE9C,EAAE,IAEPC,SACH,OAAOC,EAAAA,EAAAA,IAAQC,IAAeA,EAAU1D,QAAQ+C,GAAY,IAAM,EACpE,CACA,MAAO,EACT,CAEO,SAASY,IACd,OAAOxF,EAAAA,EAAAA,YAAWZ,EACpB,CAEO,MAAMqG,EAAa/H,GACjB8H,IAAarH,MAAKqE,IAAA,IAAC,GAAE9B,GAAI8B,EAAA,OAAK9B,IAAOhD,CAAQ,KAAK,KAG9CgI,EAAmBA,KAI9B,MAAMzF,EAAUuF,IAChB,OAAOnE,EAAAA,EAAAA,IAAiB,CAAC3D,EAAkByG,KACzC,MAAM/G,EAAS6C,EAAQ9B,MAAKuE,IAAA,IAAC,GAAEhC,GAAIgC,EAAA,OAAKhC,IAAOhD,CAAQ,IACnDN,EACFA,EAAO+F,QAAQgB,GAEfwB,QAAQC,MACL,wCAAuClI,wCAE5C,GACA,EACFmC,EAAAtB,aAAA,29C,mCCtPK,MAAMsH,EAAiB,CAC5BC,WAAY,YACZC,aAAc,cACdC,iBAAkB,mBAClBC,iBAAkB,qBAClBC,aAAc,aACdC,WAAY,WACZC,uBAAwB,uBACxBC,YAAa,2BACbC,oBAAqB,oBACrBC,eAAgB,gBAChBC,QAAS,UACTC,KAAM,QACNC,IAAK,OACLC,MAAO,SACPC,OAAQ,UACRC,gBAAiB,iB,+ECRZ,MAAMC,EAAgB/I,EAAAA,cAAmCgJ,EAAAA,GAEnDC,EAGRvJ,IAAuC,IAApCO,OAAQiJ,EAAU,SAAEtJ,GAAUF,EACpC,MAAMyJ,GAAelH,EAAAA,EAAAA,YAAW8G,GAC1B9I,EAASuC,OAAO4G,OAAO5G,OAAO6G,OAAOF,GAAeD,GAC1D,OACElJ,EAAAA,cAAC+I,EAAcnD,SAAQ,CAACC,MAAO5F,GAASL,EAAkC,EAIjEM,EAAYA,KAAM+B,EAAAA,EAAAA,YAAW8G,GAAeE,EAAAzI,aAAA,wD,0CCMlD,MAAMgE,EACXR,GACmD,aAAlBA,EAAS1D,KAE/BS,EAA0C,CACrD,MACA,OACA,QACA,U,uGC3BK,MAAMuI,EAAe5J,IAUU,IAVT,SAC3BC,EAAQ,SACRC,KACG2J,GAOc7J,EACjB,MAAML,GAASqI,EAAAA,EAAAA,IAAU/H,GACzB,IAAKN,EACH,OAAOW,EAAAA,cAAAA,EAAAA,SAAA,MAET,MAAMwJ,EACJxJ,EAAAA,cAACyJ,EAAAA,IAAUC,EAAAA,EAAAA,GAAA,CACTrD,WAAYhH,EAAOgH,WACnB,aAAYhH,EAAOsK,OACfJ,EAAU,CACdK,QAAUjJ,IACRtB,GAAQ+F,UACRmE,EAAWK,UAAUjJ,EAAE,IAGxBf,GAAYP,EAAOwK,MAGxB,OAAIxK,EAAOsK,MAEP3J,EAAAA,cAAC8J,EAAAA,EAAc,CACbC,QACE/J,EAAAA,cAACgK,EAAAA,EAAa,CAACC,WAAY5K,EAAOsK,MAAO3F,SAAU3E,EAAO2E,YAG3DwF,GAIAA,CAAY,EACnBF,EAAA9I,aAAA,+P,sECtCK,MAAM0J,EAAkBxK,IAGF,IAHG,YAC9ByK,KACGpI,GACkBrC,EACrB,OACEM,EAAAA,cAACoK,EAAAA,GAAWV,EAAAA,EAAAA,GAAA,CACV,aAAYS,EAAYR,MACxBzH,QAASiI,EAAYvK,UACjBmC,GACJ,EAEJmI,EAAA1J,aAAA,oL,2HCJF,SAAS6J,EAASC,GAChB,MAAO,YAAaA,CACtB,CAmCO,SAASF,EAAW1K,GAKN,IALO,QAC1BwC,EAAO,cACPqI,EAAa,SACb3K,EAAY4K,IAAoBxK,EAAAA,cAACyK,EAAAA,GAASD,OACvCjB,GACa7J,EAChB,MAAM8F,EAAakF,EAAcxI,GAC3ByI,EAAenF,EAClBlB,QAAOjE,IAAA,IAAC,WAAEgG,GAAYhG,EAAA,OAAKgG,CAAU,IACrC3D,KAAI+B,IAAA,IAAC,GAAE9B,GAAI8B,EAAA,OAAK9B,CAAE,IAErB,OACE3C,EAAAA,cAAAA,EAAAA,SAAA,KACGJ,EAAS,IACL2J,EACHxG,SAAW6H,IACT,MAAMvL,EAASmG,EAAWpF,MAAKuE,IAAA,IAAC,GAAEhC,GAAIgC,EAAA,OAAKhC,IAAOiI,CAAG,IACjDvL,GAAUgL,EAAShL,IACrBA,EAAO+F,QACoB,mBAAlBmF,EACHA,MACAA,EAER,EAEFI,eAEAE,MAAO3I,EACPtC,SAAWP,GACLA,aAAkB+C,EAAAA,EACbpC,EAAAA,cAAC8K,EAAAA,EAAO,MAEVC,EAAuB1L,KAKxC,CAIO,SAAS0L,EACd1L,GAEA,MAAM2L,EAAU,aAAc3L,EAC9B,OACE2L,GAC6B,YAA5B3L,EAAO4L,kBACsB,kBAA5B5L,EAAO4L,iBAmBP5L,aAAkB+C,EAAAA,EACbpC,EAAAA,cAAC8K,EAAAA,EAAO,MAGf9K,EAAAA,cAACkL,EAAAA,EAAI,CACHN,IAAKvL,EAAOsD,GACZwI,UAAW9L,EAAOsK,MAClB,aAAYtK,EAAOsK,MACnByB,WACEJ,GAAuC,YAA5B3L,EAAO4L,iBACd5L,EAAOO,cACPsG,GAGNlG,EAAAA,cAACqL,EAAAA,EAAc,CACbC,QAASjM,EAAOsK,MAChBE,KAAMxK,EAAOwK,KACb7F,SAAU,aAAc3E,EAASA,EAAO2E,cAAWkC,KAjCrDlG,EAAAA,cAACuL,EAAAA,EAAO,CACNX,IAAKvL,EAAOsD,GAEZ6I,YAAU,EACV,aAC8B,YAA5BnM,EAAO4L,iBAAiC5L,EAAOsK,WAAQzD,EAEzDyD,MAC8B,kBAA5BtK,EAAO4L,iBAAuC5L,EAAOsK,WAAQzD,EAE/D2E,MAAOxL,EAAOO,UAEbmL,EAyBT,CAEA,SAASL,EAAcG,GACrB,OAAOY,EAAAA,EAAAA,GACLZ,EAAMnI,KAAK4H,GACT,CAACA,GAAMhD,OAAO,aAAcgD,EAAOI,EAAcJ,EAAK1K,UAAY,OAEpE0E,OAAO+F,EACX,CAACD,EAAA5J,aAAA,quFAAAuK,EAAAvK,aAAA,gE,+JCrIM,MAAMkL,EAA8BA,KACzC,MAAM,KAAEC,IAASC,EAAAA,EAAAA,KACXC,GAAoB/L,EAAAA,EAAAA,KACpBgM,GAAqBxI,EAAAA,EAAAA,IACzB,CAAA5D,EAEE0G,KACI,IAFJ,SAAExG,EAAQ,MAAE+J,GAA0DjK,EAGtEiM,GAAKtL,IAAA,IAAC,MAAE0L,GAAO1L,EAAA,OACbL,EAAAA,cAACgM,EAAAA,GACC,CACAC,YACE7F,EAAQf,mBAAmBuB,YACvB,CACEsF,UAAW,CACTvI,QACEyC,EAAQf,QAAQ8G,cACb,IAAGC,EAAAA,OACDhG,EAAQf,SAEjBgH,UAAW,eAEbnG,GAGNlG,EAAAA,cAACgM,EAAAA,GAAMM,OAAM,CACXhB,QAMEtL,EAAAA,cAACuM,EAAAA,EAAe,CACd,aAAY5C,EACZkB,MAAOjL,EAAS8C,KAAK4H,GACV,YAATA,EAAqB,IAAIlI,EAAAA,EAAgBkI,IAE3CvH,SAAW6H,IAET,MAOMvL,GAPaoM,EAAAA,EAAAA,GACjB7L,EAAS8C,KAAK4H,GACH,YAATA,IAAsB9K,EAAAA,EAAAA,IAAwB8K,GAC1CA,EAAK1K,SACL0K,KAGkBlK,MACvBf,GACmB,iBAAXA,GAAuBA,EAAOsD,KAAOiI,IAE5CvL,IAAWA,EAAOgH,YACpBhH,EAAOiH,gBAAgBF,EACzB,EAEFoG,QAAST,EACTU,UAAU,UAERnC,IACAS,EAAAA,EAAAA,GACET,aAAgBlI,EAAAA,EACZkI,EACA,IACKA,EAEHtG,SAAU6H,EAAkBvB,EAAK3H,QAM/C+J,OAAQ/C,IAEJ,GACR,IAIN,OACEgD,IAEO,CACL1B,iBAAkB,aACf0B,EACHrG,gBAAkBF,GAChB0F,EAAmBa,EAAiBvG,IAEzC,C,6DC/EI,MAAM4C,EAAwB,CACnC,CAAC4D,EAAAA,IAAqC,CACpC,CACEtM,KAAM,WACNoE,eAAgB,CACd7D,KAAM,aACNC,UAAW,CAAC,UAAW,UAI7B,CAAC+L,EAAAA,IAAoC,CACnC,CACEvM,KAAM,WACNoE,eAAgB,CACd7D,KAAM,YACNC,UAAW,CAAC,UAAW,UAI7B,CAACgM,EAAAA,IAAmC,CAClC,CACExM,KAAM,WACNoE,eAAgB,CACd7D,KAAM,UACNC,UAAW,CAAC,UAAW,UAI7B,CAACiM,EAAAA,IAAsC,CACrC,CACEzM,KAAM,WACNoE,eAAgB,CACd7D,KAAM,YACNC,UAAW,CAAC,UAAW,UAI7B,CAACkM,EAAAA,IAAiC,CAChC,CACE1M,KAAM,WACNoE,eAAgB,CACd7D,KAAM,QACNC,UAAW,CAAC,QAAS,WAI3B,CAACmM,EAAAA,IAAyB,CACxB,CACE3M,KAAM,WACNoE,eAAgB,CACd7D,KAAM,YAIZ,CAACqM,EAAAA,IAA+B,CAC9B,CACE5M,KAAM,WACNoE,eAAgB,CACd7D,KAAM,SACNC,UAAW,CAAC,YAIlB,CAACqM,EAAAA,IAA6B,CAC5B,CACE7M,KAAM,WACNoE,eAAgB,CACd7D,KAAM,MACNC,UAAW,CAAC,QAAS,WAI3B,CAACsM,EAAAA,IAAgC,CAC/B,CACE9M,KAAM,WACNoE,eAAgB,CACd7D,KAAM,SAIZ,CAACiH,EAAAA,EAAeG,kBAAmB,CACjC,CACE3H,KAAM,WACNoE,eAAgB,CACd5D,UAAW,CAAC,QACZD,KAAM,SAGV,CACEP,KAAM,WACNoE,eAAgB,CACd5D,UAAW,CAAC,OACZD,KAAM,aAIZ,CAACiH,EAAAA,EAAeI,kBAAmB,CACjC,CACE5H,KAAM,WACNoE,eAAgB,CACd5D,UAAW,CAAC,OAAQ,SACpBD,KAAM,SAGV,CACEP,KAAM,WACNoE,eAAgB,CACd5D,UAAW,CAAC,OACZD,KAAM,eAIZ,CAACiH,EAAAA,EAAeC,YAAa,CAC3B,CACEzH,KAAM,WACNoE,eAAgB,CACd5D,UAAW,CAAC,QACZD,KAAM,UAGV,CACEP,KAAM,WACNoE,eAAgB,CACd5D,UAAW,CAAC,QACZD,KAAM,eAIZ,CAACiH,EAAAA,EAAeE,cAAe,CAC7B,CACE1H,KAAM,WACNoE,eAAgB,CACd5D,UAAW,CAAC,QACZD,KAAM,UAGV,CACEP,KAAM,WACNoE,eAAgB,CACd5D,UAAW,CAAC,QACZD,KAAM,oBAIZ,CAACiH,EAAAA,EAAeK,cAAe,CAC7B,CACE7H,KAAM,WACNoE,eAAgB,CACd5D,UAAW,CAAC,OAAQ,SACpBD,KAAM,UAIZ,CAACiH,EAAAA,EAAeO,wBAAyB,CACvC,CACE/H,KAAM,WACNoE,eAAgB,CACd5D,UAAW,CAAC,OACZD,KAAM,WAIZ,CAACiH,EAAAA,EAAeM,YAAa,CAC3B,CACE9H,KAAM,WACNoE,eAAgB,CACd5D,UAAW,CAAC,OAAQ,SACpBD,KAAM,UAIZ,CAACiH,EAAAA,EAAeQ,aAAc,CAC5B,CACEhI,KAAM,WACNoE,eAAgB,CACd5D,UAAW,CAAC,QACZD,KAAM,cAGV,CACEP,KAAM,WACNoE,eAAgB,CACd7D,KAAM,QAIZ,CAACiH,EAAAA,EAAeS,qBAAsB,CACpC,CACEjI,KAAM,WACNoE,eAAgB,CACd5D,UAAW,CAAC,OACZD,KAAM,eAIZ,CAACiH,EAAAA,EAAeU,gBAAiB,CAC/B,CACElI,KAAM,WACNoE,eAAgB,CACd5D,UAAW,CAAC,OAAQ,QAAS,OAC7BD,KAAM,UAIZ,CAACiH,EAAAA,EAAeW,SAAU,CACxB,CACEnI,KAAM,WACNoE,eAAgB,CACd5D,UAAW,CAAC,QACZD,KAAM,UAIZ,CAACiH,EAAAA,EAAee,QAAS,CACvB,CACEvI,KAAM,WACNoE,eAAgB,CACd7D,KAAM,eAIZ,CAACiH,EAAAA,EAAeY,MAAO,CACrB,CACEpI,KAAM,WACNoE,eAAgB,CACd5D,UAAW,CAAC,QACZD,KAAM,UAIZ,CAACiH,EAAAA,EAAea,KAAM,CACpB,CACErI,KAAM,WACNoE,eAAgB,CACd5D,UAAW,CAAC,QACZD,KAAM,UAIZ,CAACiH,EAAAA,EAAec,OAAQ,CACtB,CACEtI,KAAM,WACNoE,eAAgB,CACd5D,UAAW,CAAC,QACZD,KAAM,UAIZ,CAACiH,EAAAA,EAAegB,iBAAkB,CAChC,CACExI,KAAM,WACNoE,eAAgB,CACd5D,UAAW,CAAC,WACZD,KAAM,W,+ECtQd,MAAMwM,EAKF,CACFC,QAAS,OACT,IAAK,QACLC,UAAW,SACXC,QAAS,SACTC,UAAW,SACXC,WAAY,SACZC,MAAO,SACPC,MAAO,IACPC,MAAO,IACPC,SAAU,IACVC,UAAW,IACXC,SAAU,IACVC,eAAgB,IAChBC,MAAO,IACPC,UAAW,aAERC,EAAAA,EAAAA,GACDC,MAAMC,KAAKD,MAAM,KACd3L,KAAI,CAAC/B,EAAG4N,IAAMA,EAAI,IAAIC,WAAW,KACjC9L,KAAK+L,GAAMC,OAAOC,aAAaF,KAC/B/L,KAAKkM,GAAM,CAACA,EAAGA,EAAEC,mBAGlBC,GAGFC,EAAAA,EAAAA,MACA,CACEC,UAAW,GACXC,UAAW,IACN5B,EACH6B,IAAK,SACLC,MAAO,SACPC,KAAM,SACN9B,QAAS,IACT+B,OAAQ,WAGZ,CACEL,UAAW,IACXC,UAAW5B,GAGXiC,EAAsC,CAAC,UAAW,MAAO,QAAS,QAC3DC,EAAqBC,GACzB,KACDA,EAAU1O,WAAa,IAAI2O,MAC7B,CAACb,EAAGc,IAAMJ,EAAeK,QAAQf,GAAKU,EAAeK,QAAQD,KAE/DF,EAAU3O,MAET6B,KAAK7B,GAASiO,EAAkBG,UAAUpO,IAASA,IACnD6B,KAAK7B,GAASA,EAAKqG,QAAQ,0BAA2B,QACtD0I,KAAKd,EAAkBE,WAEfzO,EAAoByD,IAC/B,IAAIQ,EAAAA,EAAAA,GAAmBR,GACrB,MAAO,CAACA,EAASU,eAAgBV,EAASC,iBACvCK,QAAQiK,GAA2BrI,MAALqI,IAC9B7L,IAAI6M,GACJK,KAAK,MAEV,MAAM,IAAIC,MAAM,sBAAsB,C,6DChFjC,MAAMC,EACXC,IAEA,MAAM1Q,GAASqI,EAAAA,EAAAA,IAAUqI,GACzB,GAAI1Q,EAAQ,CACV,IAAIE,EAAAA,EAAAA,IAAsBF,GACxB,OAAOA,EAET,MAAM,IAAIwQ,MAAO,kBAAiBE,mBACpC,CACA,OAAO,IAAI,C,6HC4Db,MAAMC,GAAoBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAa;IAC1CC,EAAAA;;;;EAMEC,EAAkBH,EAAAA,GAAOI,GAAI;;;;;;;EAS7BC,EAAgBL,EAAAA,GAAOM,EAAG;;;;;EAO1BC,EAAaP,EAAAA,GAAOI,GAAI;;EAIxBI,EAAgBR,EAAAA,GAAOI,GAAI;;;;;;EAQ3BK,EAAiBT,EAAAA,GAAOI,GAAI;;;;EAM5BM,GAAgBV,EAAAA,EAAAA,IAAOW,EAAAA,EAAa;;;;EAMpCC,EAAaZ,EAAAA,GAAOa,IAAK;;EAIzBC,EAAiBd,EAAAA,GAAOI,GAAI;;EAcrBW,EAActR,IASW,IATV,KAC1BY,EAAO,WAAU,QACjB2Q,EAAO,KACPC,EAAI,SACJC,EAAQ,WACRC,EAAU,QACVC,EAAO,SACPC,EAAW,OACR/H,GACc7J,EACjB,OACEM,EAAAA,cAACgQ,GAAiBtG,EAAAA,EAAAA,GAAA,CAChB6H,KAAK,cACLC,aAAa,OACbF,SAAUA,EACVG,cAAe,CACbC,IAAK9N,OAAO+N,YAAc,GAG5BC,sBAAoB,GAChBrI,GAEJvJ,EAAAA,cAAC6R,EAAAA,EAAiB,CAACC,cAAe,EAAGC,aAAcC,EAAAA,IAChD3R,IAAA,IAAC,gBAAE4R,GAAiB5R,EAAA,OACnBL,EAAAA,cAACoQ,EAAoB6B,EACnBjS,EAAAA,cAAC6Q,EAAU,KAET7Q,EAAAA,cAACkS,EAAAA,GAAY,CAACC,KAAM,GAAItI,KAAO,WAAUvJ,aAE3CN,EAAAA,cAACyQ,EAAa,KACZzQ,EAAAA,cAACsQ,EAAa,KAAEW,GAChBjR,EAAAA,cAACwQ,EAAU,KAAEU,GACZC,GAAYnR,EAAAA,cAAC0Q,EAAc,KAAES,IAEhCnR,EAAAA,cAAC+Q,EAAc,KAAEK,GACjBpR,EAAAA,cAAC2Q,EAAa,KAAEU,GACA,IAGJ,EAEtBL,EAAAxQ,aAAA,wtE,kFC5JK,SAAS4R,IACd,MAAM,KAAEC,IAASC,EAAAA,EAAAA,KACjB,MAAO,CACLC,QAAS7S,IAAA,IAAC,MAAEiK,EAAK,QAAE6I,EAAO,OAAEC,EAAS,KAAI,WAAEC,EAAa,UAAUhT,EAAA,OAChE,IAAIiT,SAASC,IACXP,GAAKhS,IAAA,IAAC,MAAE0L,GAAO1L,EAAA,OACbL,EAAAA,cAACgR,EAAAA,EAAW,CACV1Q,KAAK,WACL4Q,KAAMsB,EACNvB,QAAStH,EACT0H,QACErR,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAC6S,EAAAA,EAAM,CAACjJ,QAASmC,GAAQ2G,GACzB1S,EAAAA,cAAC6S,EAAAA,EAAM,CACLC,QAAQ,UACRlJ,QAASA,KACPgJ,GAAQ,GACR7G,GAAO,GAGR0G,IAIPjG,QAASA,IAAMoG,GAAQ,IACvB,GACF,GACF,EAER,C,2HCjDA,MAEMG,EAAUrT,IAAA,IAAC,MAAEsT,GAAyBtT,EAAA,OAC1CsT,EAAMC,MACJ,0BACCD,EAAME,KAA4B,UAArB,mBACf,EAEUC,EAAsBlD,EAAAA,GAAOI,GAAI;;;;;;;;;;sDAUQ0C;;;;;;EAQzCK,EAAyBnD,EAAAA,GAAOI,GAAI;;;;;;;MAO3ChQ,IAAA,IAAC,MAAE2S,GAAO3S,EAAA,OACV2S,EAAMC,MACJ,2BACCD,EAAME,KAAqB,YAAd,YACf;mBACYzO,IAAA,IAAC,MAAEuO,GAAOvO,EAAA,OAEtBuO,EAAMnN,MACL,qBAzCc,IA0CM,EAHvB,IAIG;;;;sBAIckN;WACXpO,IAAA,IAAC,MAAEqO,GAAOrO,EAAA,OACjBqO,EAAMC,MACJ,0BACCD,EAAME,KAAgB,mBAAT,OACf;;IAEDC;;;YAGQA;;;EAKCE,EAAsBpD,EAAAA,GAAOa,IAAK;;;;EAMlCwC,EAAsBrD,EAAAA,GAAOI,GAAI;;;;;;;EASjCkD,EAAoBtD,EAAAA,GAAOI,GAErC;;;;wBAIqBmD,IAAA,IAAC,UAAEC,GAAWD,EAAA,OAAKC,CAAS;gBACpCC,IAAA,IAAC,UAAED,GAAWC,EAAA,OAAmB,IAAdD,GAAmB,WAAW;;;;;;EAQpDE,EAAsB1D,EAAAA,GAAOI,GAAI;;;;;;;;;EAWjCuD,EAA4B3D,EAAAA,GAAOa,IAAK;;;;;sBAK/BiC;;EAITc,EAAoC5D,EAAAA,GAAOa,IAAK;;;;;EAOhDgD,GAA0C7D,EAAAA,EAAAA,IACrD4D,EACA;;;;;IAKED;;;IAGAD;;;;IAIAA;;;IAGAA;;;2HCrFJ,MAAMI,EAAiB/T,EAAAA,cAA8C,MAMxDgU,EAAiChU,EAAAA,YAC5C,CAAAN,EAAwBuU,KAAS,IAAhC,QAAErK,KAAY7H,GAAOrC,EACpB,MAAM0G,GAAUnE,EAAAA,EAAAA,YAAW8R,GAC3B,GAAgB,OAAZ3N,EACF,MAAM,IAAIyJ,MACR,0EAGJ,OACE7P,EAAAA,cAACkU,EAAAA,GAAIxK,EAAAA,EAAAA,GAAA,CACHuK,IAAKA,GACDlS,EAAK,CACT6H,QAAS,WACPxD,GAASoG,YAAY,QAAA2H,EAAAC,UAAAtQ,OADVuQ,EAAI,IAAAhG,MAAA8F,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAJD,EAAIC,GAAAF,UAAAE,GAEf,OAAO1K,OAAayK,EACtB,IACA,IAaKE,EAAUlU,IAWkB,IAVvCwJ,KAAM2K,EAAW,OACjBC,SAAUC,EAAY,gBACtBC,GAAkB,EAAK,iBACvBC,EAAgB,MAChBjL,EAAK,cACLkL,EAAa,QACbrI,EAAO,KACP0E,EAAI,QACJhP,KACG4S,GACUzU,EACb,MAAM0U,GAAU5R,EAAAA,EAAAA,QAAuB,OAChC6R,EAAYC,IAAiBpS,EAAAA,EAAAA,WAAS,IACtC4R,EAAUS,IAAeC,EAAAA,EAAAA,GAC9BT,EACAC,EACAC,GAEIQ,EAA0B,GAAKzL,EAAQ,EAAI,IAAMzH,EAAU,EAAI,IAErEuD,EAAAA,EAAAA,YAAU,KACR,MAAM4P,EAAWN,EAAQpR,QAEvBsR,IADEI,IAEAZ,EAqHR,SAAqBY,GACnB,OACEA,EAASC,aAAeC,WAAWC,iBAAiBH,GAAUI,WAElE,CAxHYC,CAAYL,GAAYD,EACxBC,EAASM,aAAeN,EAASC,cAIzC,GACC,CAACb,IACJ,MACM5K,EACgB,iBAAb2K,EACLxU,EAAAA,cAACkS,EAAAA,GAAY,CACXrI,KAAO,uBAJU,CAAC,QAAS,UAAW,QAIMzJ,MAC1C,CAACwV,EAAUC,EAAOC,IAChBF,IAAapB,GAAYqB,IAAUC,EAAIhS,OAAS,YAItD0Q,EAGEuB,EAASA,IAAMb,GAAaT,IAAcA,IAE1CuB,EAAoBvB,GAAYtT,QAAQ+P,GAE9C,OACElR,EAAAA,cAAC+T,EAAenO,SAAQ,CAACC,MAAO,CAAE2G,YAChCxM,EAAAA,cAACoT,EAAAA,IAAsB1J,EAAAA,EAAAA,GAAA,CAAC,cAAY,WAAcoL,GAChD9U,EAAAA,cAACqT,EAAAA,GAAmB,KAAExJ,GACrBF,GAAS3J,EAAAA,cAACsT,EAAAA,GAAmB,KAAE3J,GAChC3J,EAAAA,cAACmT,EAAAA,GAAmB,KACjB0B,EACArI,GACCxM,EAAAA,cAACiW,EAAAA,EAAqB,CACpBpM,KAAK,6BACLqM,QAAS1J,EACT+E,KAAK,SACL,cAAY,YACZ4E,MAAO,CAAEC,WAAY,cAI1BlF,GACClR,EAAAA,cAACqW,EAAa,CACZ5B,SAAUuB,EACVM,QAAStB,IAAegB,EACxBO,SAAUR,GAEV/V,EAAAA,cAACuT,EAAAA,GAAiB,CAChBE,WAAYuC,GAAqBZ,EACjCnB,IAAKc,GAEJ7D,IAIPlR,EAAAA,cAACqW,EAAa,CACZ5B,SAAUuB,EACVM,QAAStB,GAAcgB,EACvBO,SAAUR,EACVS,UAAW1C,EAAAA,IAEV5R,GACClC,EAAAA,cAAC2T,EAAAA,GAAmB,CAACuC,QAAUvV,GAAMA,EAAEsE,mBACpC/C,KAKe,EAOxBmU,EAMD5R,IAME,IAND,SACJ7E,EAAQ,SACR2W,EAAQ,SACR9B,EAAQ,QACR6B,EAAO,UACPE,EAAY3C,EAAAA,IACbpP,EACC,MAAMgS,EAAWhC,EAAW,WAAa,SACnCiC,EACJ1W,EAAAA,cAAC4T,EAAAA,GAAyB,KACxB5T,EAAAA,cAACiW,EAAAA,EAAqB,CACpBU,uBAAyB,GAAEH,IAC3B3M,KAAO,oBAAmB4M,QAC1BG,UAAU,UAKhB,OAAON,EACLtW,EAAAA,cAACwW,EAAS,CACRN,QAASK,EACThF,KAAK,SACL,eAAgBkD,EAAW,WAAa,UAA1B,QAEb7U,EACA8W,GAGH1W,EAAAA,cAAAA,EAAAA,SAAA,KAAGJ,EACJ,EAUFoU,EAAAxT,aAAA,iLAAA+T,EAAA/T,aAAA,msD,oGC/MD,MAAMqW,EAAmBA,KACvB,MAAM,IAAIhH,MAAM,sCAAsC,EAGlDiH,EAAkB9W,EAAAA,cAAuC,CAC7D2L,KAAMkL,EACNE,WAAYF,IAGDG,EAAoBA,KAC/B/U,EAAAA,EAAAA,YAAW6U,GAuBAG,EAAgDvX,IAItD,IAJuD,SAC5DE,EAAQ,cACRsX,EAAa,kBACbC,EAAoBC,EAAAA,GACrB1X,EACC,MAAO2X,EAAUC,IAAezU,EAAAA,EAAAA,UAAgC,IAC1D0U,GAAgBpU,EAAAA,EAAAA,QAAiB,IACjCqU,GAAYrU,EAAAA,EAAAA,QAAe,GAE3BsU,GAAMC,EAAAA,EAAAA,UAA2B,KACrC,MAAM/L,EAAkC,SAAC5J,EAAO4V,QAAO,IAAPA,IAAAA,EAAU,KACxDH,EAAU7T,UACV,MAAM6I,EAAUA,KACd8K,GAAaD,GACXA,EAAS/S,QAAQsT,GAAaA,IAAaC,KAC5C,EAEGA,EACJ7X,EAAAA,cAACuU,EAAAA,GAAO7K,EAAAA,EAAAA,GAAA,CACNkB,IAAK4M,EAAU7T,SACX5B,EAAK,CACT4H,MAAO5H,EAAM4H,MACb6C,QAASA,KAeb,OAZA8K,GAAaD,IACX,GAAIM,EAAU,EAAG,CACf,MAAMG,EAAYlU,OAAOgB,YAAW,KAClC4H,IACA+K,EAAc5T,QAAU4T,EAAc5T,QAAQW,QAC3CyT,GAAeA,IAAeD,GAChC,GACAH,GACHJ,EAAc5T,QAAU,IAAI4T,EAAc5T,QAASmU,EACrD,CACA,OAAOT,EAAS/P,OAAOuQ,EAAQ,IAE1BrL,CACT,EACA,MAAO,CACLb,OACAoL,WAAahV,GAAU4J,EAAK5J,EAAO,GACpC,GACA,KAGH0D,EAAAA,EAAAA,YAAU,IACD,KACL8R,EAAc5T,QAAQqU,SAASrV,IAC7BiB,OAAOC,aAAalB,EAAG,GACvB,GAEH,IAEH,MAAMsV,EACJjY,EAAAA,cAACmX,EAAiB,CAChBhB,MAAO,CAAE+B,SAAUhB,EAAgB,gBAAahR,IAE/CmR,GAIL,OACErX,EAAAA,cAAC8W,EAAgBlR,SAAQ,CAACC,MAAO4R,GAC9B7X,EACAsX,EACGe,EACAE,EAAAA,aAAsBF,EAAoBpT,SAASqM,MAC9B,EAE7B+F,EAAAzW,aAAA,q6B,6DC7HK,MAAM4W,EAAsBnH,EAAAA,GAAOI,IAAG+H,WAAA,CAAAC,YAAA,sBAAAC,YAAA,eAAVrI,CAAU,6EAKzCmD,EAAAA,G,6FCUG,MAAMmF,EAAavY,EAAAA,YAAiB,SAAmBN,EAE5D8Y,GACC,IAFCC,YAAaC,KAAoB3W,GAAwBrC,EAG3D,MAAM+Y,EACJC,IACC1Y,EAAAA,eAAqB+B,EAAMnC,WACG,iBAAxBmC,EAAMnC,SAASU,KACjByB,EAAMnC,SAASU,UAChB4F,IACJ,SACI+N,GAAM0E,EAAAA,EAAAA,GAAaH,IACnB,YAAEI,IAAgBC,EAAAA,EAAAA,GACtB,CACEJ,iBACG1W,GAELkS,GAEI6E,GAAWC,EAAAA,EAAAA,GAAehX,IAC1B,UAAE0K,GAAc1K,EAEtB,OAAO/B,EAAAA,aACL+B,EAAMnC,UACNoZ,EAAAA,EAAAA,GAAWF,EAAUF,EAAa,CAAEnM,YAAWwH,QAEnD,IAAGsE,EAAA/X,aAAA,wf,kHC5CI,MAAMyY,EAAehJ,EAAAA,GAAOiJ,MAA+B;;;;;;sBAM5CxZ,IAAA,IAAC,MAAEsT,EAAK,SAAEmG,GAAUzZ,EAAA,OACtCyZ,EAAW,cAAgBnG,EAAMC,MAAM,yBAAyB;WACzD5S,IAAA,IAAC,MAAE2S,EAAK,SAAEmG,GAAU9Y,EAAA,OAC3B8Y,EACInG,EAAMC,MAAM,uBACZD,EAAMC,MACJ,oBACD;;MAEHxO,IAAA,IAAC,MAAEuO,EAAK,SAAEmG,GAAU1U,EAAA,OACpB0U,EACInG,EAAMC,MAAM,8BACZD,EAAMC,MAAM,0BAA0B;mBAC7BtO,IAAA,IAAC,MAAEqO,GAAOrO,EAAA,OACxBqO,EAAMnN,MAAc,eAAiB,GAAK,CAAC;gBAChC2N,IAAA,IAAC,MAAER,GAAOQ,EAAA,OACtBR,EAAMnN,MAAM,sBACP,SAAQmN,EAAMnN,MAAM,uBAAyB,OAC5CmN,EAAMC,MAAM,wBACXD,EAAME,KAAO,YAAc,eAE9B,EAAE;;;;;;;oBAOUQ,IAAA,IAAC,MAAEV,GAAOU,EAAA,OACxBV,EAAMC,MAAM,4BAA6B,UAAU;;kBAEvCmG,IAAA,IAAC,MAAEpG,GAAOoG,EAAA,MACrB,aAECpG,EAAMC,MAAM,yBACZD,EAAMC,MACJ,oBACA,YAEF;;EAGKoG,GAAsBpJ,EAAAA,EAAAA,IAAOgJ,EAAc;sBAClCK,IAAA,IAAC,MAAEtG,EAAK,SAAEmG,GAAUG,EAAA,OACrCH,GAAYnG,EAAMC,MAAM,iCAAkC,UAAU;WAC9DsG,IAAA,IAAC,MAAEvG,EAAK,SAAEmG,GAAUI,EAAA,OAC1BJ,GAAYnG,EAAMC,MAAM,4BAA4B;kBACvCuG,IAAA,IAAC,MAAExG,EAAK,SAAEmG,GAAUK,EAAA,OACjCL,GAAYnG,EAAMC,MAAM,kCAAmC,UAAU;;;oBAGtDwG,IAAA,IAAC,MAAEzG,GAAOyG,EAAA,OACxBzG,EAAMC,MAAM,oCAAqC,UAAU;;EAIpDyG,GAAmBzJ,EAAAA,EAAAA,IAAOgJ,EAAc;;;;;;;iBCvBrD,MAAMU,EAA4D,CAChEC,QAASP,EACTxP,KAAM6P,GA0BK7G,EAAgC7S,EAAAA,YAAiB,SAAeN,EAE3E8Y,GACC,IAFD,QAAE1F,EAAO,MAAEqD,EAAK,UAAES,EAAS,SAAEiD,KAAa9X,GAAoBrC,EAG9D,MAAMuU,GAAM0E,EAAAA,EAAAA,GAAaH,IACnB,YAAEI,IAAgBC,EAAAA,EAAAA,GAAU9W,EAAOkS,GACnC6E,GAAWC,EAAAA,EAAAA,GAAehX,IAC1B,UAAE0K,EAAS,KAAEqN,GAAS/X,EAEtByU,EAAa1D,GAAW6G,EAAS7G,IAAamG,EACpD,OACEjZ,EAAAA,cAACwW,GAAS9M,EAAAA,EAAAA,GAAA,IACJsP,EAAAA,EAAAA,GAAWF,EAAUF,EAAa,CAAEnM,YAAWqN,SAAO,CAC1D3D,MAAOA,EACPS,UAAWA,EACX3C,IAAKA,IAEJ4F,EACC7Z,EAAAA,cAAC+Z,EAAAA,EAAe,CACdF,SAAUA,EACVxT,WAAYtE,EAAMsE,WAClB2T,YAAajY,EAAM6H,SAElB7H,EAAMnC,UAGTmC,EAAMnC,SAId,IAAGiT,EAAArS,aAAA,i4F,6FCtFH,MAAMyZ,E,SAAoBhK,GAAOI,GAAI;;;;EAc9B,SAASO,EAAY7O,GAC1B,OACE/B,EAAAA,cAACka,EAAAA,GAAU,KACTla,EAAAA,cAACma,EAA4B,MACzBC,GACApa,EAAAA,cAACia,GAAsBjB,EAAAA,EAAAA,GAAWjX,EAAOqY,MAKnD,CAEA,SAASD,EAA4Bza,GAIjC,IAJkC,SACpCE,GAGDF,EACC,MAAM2a,GAAeC,EAAAA,EAAAA,OACf,cAAEC,IAAkBC,EAAAA,EAAAA,GAAY,CACpCnX,UAAY1C,IACV,KAAK8Z,EAAAA,EAAAA,GAAe9Z,GAAI,CACtB,GAAc,cAAVA,EAAEiK,IACJ,OAAOyP,GAAcK,cAAc,CAAEC,MAAM,IACtC,GAAc,eAAVha,EAAEiK,IACX,OAAOyP,GAAcO,UAAU,CAAED,MAAM,GAE3C,CACAha,EAAEka,qBAAqB,IAI3B,OAAO7a,EAAAA,cAAAA,EAAAA,SAAA,KAAGJ,EAAS2a,GACrB,CAAC3J,EAAApQ,aAAA,0hB,uIC0BD,MAAMsa,EAAqB7K,EAAAA,GAAO8K,KAAM;;;;EAMlCC,EAA0B/K,EAAAA,GAAOa,IAEpC;;WAEQpR,IAAA,IAAC,MAAEsT,EAAK,WAAE3M,GAAY3G,EAAA,OAC7B2G,EACI2M,EAAMC,MACJ,wBACA,WAIFD,EAAMC,MAAM,eAAe;EAG7BgI,EAAchL,EAAAA,GAAO1L,KAAM;;;;;;;;;EAkBpB2W,EAAW7a,IAMF,IANG,aACvB8a,EAAY,UACZvE,EAAS,0BACTwE,EAAyB,SACzBvB,KACG9X,GACW1B,EACd,MAAMgb,GAAQC,EAAAA,EAAAA,GAAevZ,GACvBkS,EAAMjU,EAAAA,OAA+B,OACrC,WAAEub,IAAeC,EAAAA,EAAAA,GAAYzZ,EAAOsZ,EAAOpH,IAE3C,eAAEwH,EAAc,UAAEC,EAAS,WAAEC,IAAeC,EAAAA,EAAAA,GAAa,CAC7DnP,UAAW1K,EAAM0K,YAGboP,EAGFV,EACA,CACEW,eAAiBvY,IACfA,EAAM0B,kBACN1B,EAAM2B,iBACF3B,EAAMwY,yBAAyBnV,YACjCrD,EAAMwY,cAAcC,QAEpBzY,EAAM+B,OAAO2W,MACf,EAEFC,UAAW,GAEb,CAAC,EAEL,OACElc,EAAAA,cAAC8a,EAAkB,CAAClE,UAAWA,GAC7B5W,EAAAA,cAACib,GAAWvR,EAAAA,EAAAA,GAAA,IACNsP,EAAAA,EAAAA,GAAWuC,EAAYI,EAAYE,GAAmB,CAC1D5H,IAAKA,KAEPjU,EAAAA,cAACmc,EAAAA,EAAY,CACXC,gBAAiBra,EAAMqa,gBACvBV,UAAWN,EAA4BK,EAAiBC,EACxDW,WAAYta,EAAMqa,iBAAmBf,EAAMgB,WAC3ChW,WAAYtE,EAAMsE,WAClB,cAAY,OACZ8P,MAAO,CACLmG,cAAe,UAGlBva,EAAMnC,UACLI,EAAAA,cAACgb,EAAuB,CAAC3U,WAAYtE,EAAMsE,YACxCwT,EACC7Z,EAAAA,cAAC+Z,EAAAA,EAAe,CACdF,SAAUA,EACVxT,WAAYtE,EAAMsE,WAClB2T,YAAaqB,EAAMtF,QAElBhU,EAAMnC,UAGTmC,EAAMnC,UAIO,EAEvBsb,EAAA1a,aAAA,+xG,sECxLK,MAAM2b,EAAezc,IAWrB,IAXsB,WAC3B2G,EAAU,UACVqV,EAAS,gBACTU,EAAe,WACfC,KACG9S,GAMJ7J,EACC,OACEM,EAAAA,cAACuc,EAAAA,GAAO7S,EAAAA,EAAAA,GAAA,GACFH,EAAU,CACd4I,KAAM,GACNtI,KAAM,CACJ2S,KAAMJ,EAAkB,wBAA0B,WAClDtb,UAAW,CACT2b,SAAUpW,EACVqW,SAAUL,GAAcD,EACxBO,QAASjB,MAGb,EAEJS,EAAA3b,aAAA,slB,mCCxBK,MAAMoc,E,QACX5c,cAA8D,K,+ECAhE,MAAM6c,EACJ7c,EAAAA,cAAkE,MAEvD8c,EAGRpd,IAA4B,IAA3B,SAAEE,EAAQ,QAAEmd,GAASrd,EACzB,MAAM0G,GAAUnE,EAAAA,EAAAA,YAAW2a,EAAAA,GAC3B,IAAKxW,EACH,MAAM,IAAIyJ,MACP,mMAIL,MAAMvF,EAAOlE,EAAQ4W,WAAWC,QAAQF,GAClCG,EAAO5S,GAAMa,WAAa,GAMhC,OALK+R,QAAkChX,IAA1BoE,GAAMvI,MAAMoJ,WACvBvD,QAAQuV,KACN,sIAIFnd,EAAAA,cAAC6c,EAAiCjX,SAAQ,CACxCC,MAAO,CACLuX,kBAAmBhX,EAAQiX,QAAQlW,IAAI4V,IAAY,KACnDG,KAAMA,IAGPtd,EACyC,EAQnC0d,EAAuB,SAAAjd,GAShC,IAT0C,UAC5CmW,EAAY,QAQbnW,EACC,MAAMkd,EAAqBvd,EAAAA,WAAiB6c,GAC5C,IAAKU,EACH,MAAM,IAAI1N,MACR,wGAGJ,MAAM,kBAAEuN,EAAiB,KAAEF,GAASK,EACpC,OACEvd,EAAAA,cAACwW,EAAS,KACP4G,EACCpd,EAAAA,cAACwd,EAAAA,EAAkB,CAACC,WAAYL,GAC7BF,GAGHA,EAIR,EAAEJ,EAAAtc,aAAA,4EAAA8c,EAAA9c,aAAA,gmB,qFChEK,SAASkd,EAA8Bhe,GAiB1C,IAjB8C,WAChDsd,EACAW,iBAAkBC,EAAqB,YACvCC,EAAW,eACXC,GAAiB,GAalBpe,EACC,MAAM,WAAEqe,EAAU,OAAEC,GAAWH,GAWzB,QAAER,IAAY3F,EAAAA,EAAAA,UAAQ,KAC1B,MAAM2F,EAAwC,IAAIxb,IAclD,OAbIgc,EAAYG,QAEd,IAAIhB,EAAWiB,WACZvb,KAAKkI,GAAQoS,EAAWC,QAAQrS,KAChCtG,QAAOjE,IAAA,IAAC,KAAEC,GAAMD,EAAA,MAAc,SAATC,CAAe,IACpC0X,SAAS1N,IACR,MAAM4T,GAAgBC,EAAAA,EAAAA,GAAe7T,EAAKa,UAAW4S,GACjDG,GACFb,EAAQ3X,IAAI4E,EAAKM,IAAKsT,EACxB,IAIC,CACLb,UACD,GACA,CAACU,EAAYf,EAAYgB,IAEtBL,ECzDD,SACLS,EACAf,GAEA,OAAO7a,OAAO6G,OAAO+U,EAAyB,CAC5CC,UAAW,CACTxY,MAAOA,KACL,GAAIwX,EAAS,CAGX,MAAMhC,EAAQ+C,EAAwB/C,MACtCA,EAAMiD,gBACJ,IAAIC,IACF,IAAIlB,EAAQvW,QAAQxC,QAAQsG,IAASyQ,EAAM1Q,aAAa6T,IAAI5T,MAGlE,MACEwT,EAAwBC,WAC1B,IAIR,CDmC2BI,CACvBb,EACAI,EAASX,EAAU,MAEfqB,GAAeC,EAAAA,EAAAA,GAAU,CAC7BtB,UACAM,mBACAX,aACAc,mBA8BF,OAzBArY,EAAAA,EAAAA,YAAU,KACR,MAAM,iBAAEkY,EAAgB,QAAEN,EAAO,WAAEL,GAAe0B,EAAa/a,QACzDib,EAAc,IAAIvB,EAAQvW,QAC1B+X,GAA+BD,EAAY7a,MAAM+a,GACrDnB,EAAiBtB,WAAWyC,KAE9B,IAAIC,EACAL,EAAa/a,QAAQma,iBACvBiB,EAkDN,SAAqC1B,GACnC,MAAO,IAAIA,EAAQjZ,WAChBE,QAAOK,IAAA,IAAE,EAAGqa,IAAYra,EAAA,OAA0B,IAArBqa,GAAY1Q,IAAU,IACnDmB,MACC,CAAA+D,EAAAE,KAAA,IAAE,EAAGuL,IAAQzL,GAAG,EAAG0L,IAAQxL,EAAA,OACzBwL,EAAOC,GAAKD,EAAO5Q,KAAO2Q,EAAOE,GAAKF,EAAO3Q,IAAI,MACjD,KAAK,EACb,CAzDmB8Q,CAA4B/B,KAEtC0B,GAAcH,EAAY9a,OAAS,GAAK+a,IAC3CE,EAuBN,SAAyBta,GAQhB,IARiB,WACxBuY,EAAU,iBACVW,EAAgB,YAChBiB,GAKDna,EACK4a,GAAuB,EAC3B,IAAK,MAAMzU,KAAOoS,EAAWiB,UAI3B,GAHIrT,IAAQ+S,EAAiB2B,mBAC3BD,GAAuB,GAErBA,GAAwBT,EAAYxd,SAASwJ,GAC/C,OAAOA,EAGX,OAAOgU,EAAY,EACrB,CA1CmBW,CAAiB,CAC5BvC,aACAW,mBACAiB,iBAGAG,IACFpB,EAAiB6B,cAAcT,GAC/BpB,EAAiB8B,iBAAiBV,GACpC,GACC,CACDhB,EACAW,IAEK,CACLrB,UACAM,mBAEJ,CE3DO,SAAS+B,EAAwBhgB,GAeoC,IAfhC,WAC1Csd,EAAU,iBACVW,EAAgB,uBAChBgC,EAAsB,iBACtBC,EAAgB,eAChB9B,EAAc,IACd7J,KACG4L,GAQ6CngB,EAChD,MAAMme,GAAciC,EAAAA,EAAAA,GAAoBD,IAElC,QAAExC,EAASM,iBAAkBoC,GACjCrC,EAA+B,CAC7BV,aACAW,mBACAE,cACAC,oBAEE,eAAEhJ,IAAmBkL,EAAAA,EAAAA,GACzB,CAAEL,0BACF9B,EACA5J,GAEIgM,GAA8BvI,EAAAA,EAAAA,UAClC,IChEG,SACLwI,EACA7C,GAIA,MAAM8C,EAAiBA,CACrBC,EACAC,KAEA,IAAIC,EAA2CF,EAC/C,KAAqB,MAAdE,GAAoB,CACzB,IAAKjD,GAAWA,EAAQmB,IAAI8B,GAC1B,OAAOA,EAETA,EACgB,OAAdD,EACIH,EAAwBK,cAAcD,GACtCJ,EAAwBM,cAAcF,EAC9C,CACA,OAAOA,QAAcpa,CAAS,EAEhC,OAAO1D,OAAO6G,OAAO6W,EAAyB,CAC5CM,YAAa,CACX3a,MAAQ+E,GACNuV,EAAeD,EAAwBM,cAAc5V,GAAM,SAE/D2V,YAAa,CACX1a,MAAQ+E,GACNuV,EAAeD,EAAwBK,cAAc3V,GAAM,OAE/D6V,YAAa,CACX5a,MAAOA,CAAC+E,EAAiB8V,KACvB,MAAMC,EAAWR,EACfD,EAAwBO,cAAc7V,EAAK8V,GAC3C,QAEF,OAAmB,MAAZC,EAAmBtD,GAASjW,SAASwZ,OAAO/a,MAAQ8a,CAAQ,GAGvEE,WAAY,CACVhb,MAAOA,CAAC+E,EAAiB8V,KACvB,MAAMI,EAAUX,EACdD,EAAwBW,aAAajW,EAAK8V,GAC1C,QAEF,OAAkB,MAAXI,EACH,IAAKzD,GAASvW,QAAU,IAAKia,OAAS,KACtCD,CAAO,IAInB,CDaME,CACEpB,EACA/B,EAAYG,OAASX,EAAU,OAEnC,CAACQ,EAAYG,OAAQ4B,EAAkBvC,IAInC4D,EAA0B,CAAE5D,UAASL,cAE3C,MAAO,CACLlI,iBACA6I,iBAAkBoC,EAClBH,iBAAkBK,EAClBpC,YAAa,IACRA,EACHR,WAEF6D,iBAAkB,CAChBlD,OAAQH,EAAYG,OACpBmD,MAAO9D,EAAQlL,KAAO,EACtBvS,SAAUie,EAAYE,YAExBkD,0BAEJ,C,2CE9EO,MAAM7e,EAAYgf,WAAAA,GAAA,KAEvBxW,IAAM,WAAaxI,EAAYif,KAAM,CACrC,MAAI1e,GACF,OAAO2e,KAAK1W,GACd,EAGF,SAASE,EAAOpL,GAAkC,MAAjBA,EAE/B,OAAO,IACT,CAXa0C,EACIif,IAAM,EAYvB,IAAIE,EAAWzW,EAGfA,EAAQ0W,kBAAoB,UAC1Bzf,QAIM,CACJzB,KAAM,UACN+E,QAAS,KACTtD,MAAOA,EACP0f,SANa,KAObC,eAAe,EAEnB,C,kDCxCA,SAASxW,EAAQnJ,GACf,OAAO,IACT,CAKA,IAAI4f,EAAQzW,EAMZA,EAAKsW,kBAAoB,UACvBzf,EACAqE,GAEA,MAGMwb,EAFJC,EAAAA,EACAL,kBAAkBzf,EAAOqE,GACEwa,OAAO/a,MAC9Bic,EAA2BF,EAAOG,iBACxCH,EAAOG,iBAAoB3b,GACzB0b,IAA2B1b,IAAYA,EAAQ4b,kBAC3CJ,CACR,C,iFC9BA,MAAMK,EAAM,YACNC,EAAmBjS,EAAAA,GAAOI,GAAI;;;;SAI3B4R;EAGHE,EAAalS,EAAAA,GAAOa,IAA0B;;WAEzCpR,IAAA,IAAC,MAAEsT,GAAOtT,EAAA,OACjBsT,EAAMoP,uBAAuBpP,EAAMqP,aAAaC,kBAAkB;;eAEvDjiB,IAAA,IAAC,MAAEkiB,GAAOliB,EAAA,OAAKkiB,GAAS,OAAO;EAGxCC,EAAcvS,EAAAA,GAAOa,KAAK2R,MAAM,CACpClR,KAAM,gBACL;;;;SAIM0Q;EAkBIS,EACX3gB,GAGE/B,EAAAA,cAACkiB,GAAgBxY,EAAAA,EAAAA,GAAA,CACT,CAAC0C,EAAAA,IAAsC,GACzCrK,IAUV2gB,EAAWC,KAAOR,EAOlBO,EAAWE,MAAQJ,EAAYE,EAAAliB,aAAA,srB,mCCrDxB,MAAMqiB,E,QACX7iB,cAAiD,K,0DCP5C,SAAS8iB,EAAuBpjB,EAErCuU,GACC,IAFD,cAAE8O,EAAa,iBAAEpF,GAA6Cje,GAK9D+F,EAAAA,EAAAA,YAAU,KACR,IAAKsd,GAAiBpF,EAAiBqF,YAAc/O,GAAKtQ,QAAS,CACjE,IAAI0B,EAAU4O,EAAItQ,QAAQwI,cACvB,cAAawR,EAAiBqF,gBAE7B3d,IACF4d,EAAAA,EAAAA,GAAehP,EAAItQ,QAAS0B,EAEhC,IACC,CAAC0d,EAAe9O,EAAK0J,EAAiBqF,YAC3C,C,iDCwBO,MAAME,EAA0BxjB,IAehC,IAfoC,MACzC2b,EAAK,cACL8H,EAAa,cACbC,EAAa,SACbrgB,GAWDrD,GAGC+F,EAAAA,EAAAA,YACE,KACE,MAAM4d,EAAQF,GAAexf,QAC7B,GAAI0f,EAAO,CACT,MAAMhgB,EAAaE,IACC,YAAdA,EAAMqH,KAAmC,cAAdrH,EAAMqH,KACnCrH,EAAM2B,iBACN3B,EAAM0B,kBAENme,EAAczf,SAAS2f,cACrB,IAAIC,cAAchgB,EAAMjD,KAAMiD,KAGlB,UAAdA,EAAMqH,KACgC,MAAtCyQ,EAAMsC,kBAAkBqF,aAExBzf,EAAM2B,iBACL3B,EAAMigB,eAA+B1e,iBACpC,SACCvB,IACCqE,QAAQ6b,IACN,QACAlgB,EAAMqH,IACNyQ,EAAMsC,iBAAiBqF,WACvB,WACAjgB,GAGc,UAAdQ,EAAMqH,KAC+B,MAArCyQ,EAAMsC,iBAAiBqF,YAEvBjgB,IAAWsY,EAAMsC,iBAAiBqF,WACpC,GAEF,CAAEje,MAAM,EAAMC,SAAS,IAE3B,EAGF,OADAqe,EAAMve,iBAAiB,UAAWzB,GAC3B,KACLggB,EAAMK,oBAAoB,UAAWrgB,EAAU,CAEnD,IAGH,C,mNC/BH,MAAMsgB,GAA0B1T,EAAAA,EAAAA,IAAOG,EAAAA,EAAiB;;WAE7C1Q,IAAA,IAAC,MAAEsT,EAAK,SAAEmG,GAAUzZ,EAAA,OAC3ByZ,EACInG,EAAMC,MACJ,gCAEFD,EAAMC,MACJ,uBACD;EAEH2Q,EAAsB3T,EAAAA,GAAO1L,KAAM;;;;;;aAM5BlE,IAAA,IAAC,MAAE2S,GAAO3S,EAAA,OACnB2S,EAAM6Q,MAAM,qBAAuB,iBAAiB;;EAIlDC,EAAuB7T,EAAAA,GAAOiJ,MAAO;;;;gBAI3BzU,IAAA,IAAC,MAAEuO,GAAOvO,EAAA,OAAKuO,EAAMC,MAAM,kCAAkC;;;;;;2BAMlDtO,IAAA,IAAC,MAAEqO,GAAOrO,EAAA,OAAKqO,EAAMqP,aAAa0B,QAAQ;;;;;;;;;;;;;;;;EAwBxDC,GAAWC,EAAAA,EAAAA,aACtB,CAAAzQ,EAgBEgF,KACuB,IAhBvB,eACE0L,EAAc,MACd/N,EAAK,UACLS,EAAS,MACT/Q,EAAK,aACLse,EAAY,cACZC,EAAa,gBACbC,EAAe,kBACfC,EAAiB,YACjBC,EAAW,qBACXC,EAAoB,WACpBjJ,EACAkJ,SAAUC,KACP3iB,GACcyR,EAGnB,MAAMS,GAAM0E,EAAAA,EAAAA,GAAaH,GACnBmM,GAAYxhB,EAAAA,EAAAA,QAA0B,MACtCshB,GAAW9L,EAAAA,EAAAA,GAAa+L,GACxBE,GAAuBzhB,EAAAA,EAAAA,QAAuB,MAC9C0hB,GAAa1hB,EAAAA,EAAAA,QAAuB,MACpC2hB,GAAa3hB,EAAAA,EAAAA,QAAuB,MACpC4hB,EAAY5jB,QAAQkjB,IAAwC,UAApBA,EAExChJ,GAAQ2J,EAAAA,EAAAA,GAAiB,CAG7BC,YAAa,SACbC,mBAAmB,EACnBC,WAAYtf,EACZuf,kBAAmBjB,EACnBkB,cAAejB,EACfW,eACGhjB,KAEC,iBACJujB,EAAgB,kBAChBC,EAAiB,WACjBC,EACAjK,WAAYkK,EAAkB,aAC9BC,EAAY,YACZ9M,IACE+M,EAAAA,EAAAA,GACF,IACK5jB,EACHmjB,mBAAmB,EACnBP,YACAF,WACAI,aACAC,cAEFzJ,GAKI/J,EAAWsT,EAAqBjhB,QAClCihB,EAAqBjhB,SAASiiB,YAAc,OAC5C1f,EACJ,OACElG,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAC6lB,EAAAA,EAAS,CACR5R,IAAKA,EACL5N,WAAYtE,EAAMsE,WAClB0U,MAAOhZ,EAAMgZ,MACbmJ,eAAgBA,EAChBsB,WAAYA,EACZ5O,UAAWA,EACXT,MAAOA,GAGPnW,EAAAA,cAAC8lB,EAAAA,EAAqB,CACpBvB,YAAaA,EACbC,qBAAsBA,EACtBc,iBAAkBA,GAElBtlB,EAAAA,cAAC2jB,EAAuB,CACtB1P,IAAK2Q,EACLP,gBAAiBA,EACjBlL,SAAUpX,EAAMsE,WAChBuQ,UAAWyE,EAAMK,UAAY,WAAa,IAG1C1b,EAAAA,cAAC+lB,EAAAA,EAAwB,CACvB1Z,UAAU,MACV2Z,aAAW,EACX3f,YAAaie,EACb2B,WAAYxB,EACZ1a,QACE/J,EAAAA,cAACkmB,EAAAA,EAAiB,CAChB5lB,KACsB,UAApB+jB,EAA8BA,OAAkBne,GAGlDlG,EAAAA,cAAA,MAASulB,EAAoBjB,IAGjC6B,MAAO,IAELC,GACApmB,EAAAA,cAAC4jB,GACK5K,EAAAA,EAAAA,GACFyM,EACAlK,EACA6K,MAMRpmB,EAAAA,cAACuY,EAAAA,GAAU7O,EAAAA,EAAAA,GAAA,GAAKkP,EAAW,CAAE3E,IAAK0Q,IAChC3kB,EAAAA,cAAC8jB,EAAoB,KACnB9jB,EAAAA,cAACqmB,EAAAA,EAAuB,CACtBlN,SAAUpX,EAAMsE,WAChB8L,KAAM,GACNtI,KAAK,+BAOhBwR,EAAMiL,QACLtmB,EAAAA,cAACumB,EAAAA,EAAO,CACNtS,IAAK4Q,EACLxJ,MAAOA,EACP4K,WAAYrB,EACZvY,UAAU,eACVma,iBAAkB,EAClBC,OAAQ,EACRC,aAAc,GAEd1mB,EAAAA,cAAC2mB,EAAAA,GAAgBjd,EAAAA,EAAAA,GAAA,GACXgc,EAAY,CAChBzR,IAAK6Q,EACLzJ,MAAOA,EACPlF,MAAO,CAAE7E,gBAId,IAGP0S,EAAAxjB,aAAA,8oD,iFC3QK,MAAMomB,EAAU5mB,EAAAA,YAAiB,SAAgBN,EAEtD8Y,GACC,IAFD,SAAElH,KAAavP,GAAwBrC,EAGvC,MAAM2b,GAAQwL,EAAAA,EAAAA,GAAa,CACzBC,kBAAmB,SACnBC,cAAe,YACZhlB,IAGL,OAAO/B,EAAAA,cAAC2mB,EAAAA,GAAgBjd,EAAAA,EAAAA,GAAA,CAAC2R,MAAOA,EAAOpH,IAAKuE,GAAkBzW,GAChE,IAAG6kB,EAAApmB,aAAA,uL,yKCEI,MAAMmmB,EAAmB3mB,EAAAA,YAAiB,SAAyBN,EAUxE8Y,GACC,IARD,MACE6C,EAAK,MACLlF,EAAK,UACLS,EAAS,cACTuM,KACGphB,GACsBrC,EAG3B,MAAMuU,GAAM0E,EAAAA,EAAAA,GAAaH,IACnB,aAAEkN,EAAY,WAAEF,IAAewB,EAAAA,EAAAA,GAAWjlB,EAAOsZ,EAAOpH,GAS9D,OAPAiP,EAAAA,EAAAA,GAAwB,CACtB7H,QACA+H,cAAenP,EACfkP,gBACApgB,SAAUhB,EAAMgB,WAIhB/C,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,MAASwlB,EAAazjB,EAAMgZ,OAC5B/a,EAAAA,cAACinB,EAAAA,GAAUvd,EAAAA,EAAAA,GAAA,GACLgc,EAAY,CAChBzR,IAAKA,EACLkC,MAAOA,EACPS,UAAWA,IAEV,IAAIyE,EAAM2B,YAAYta,KAAK4H,GACZ,YAAdA,EAAKhK,KACHN,EAAAA,cAACknB,EAAc,CAACtc,IAAKN,EAAKM,IAAKuc,QAAS7c,EAAM+Q,MAAOA,IAErDrb,EAAAA,cAAConB,EAAM,CAACxc,IAAKN,EAAKM,IAAKN,KAAMA,EAAM+Q,MAAOA,OAMtD,IACA,SAAS+L,EAAM/mB,GAMX,IAN8B,KAChCiK,EAAI,MACJ+Q,GAIDhb,EACC,MAAM4T,EAAMjU,EAAAA,OAA6B,OACnC,YAAEqnB,IAAgBC,EAAAA,EAAAA,GAAU,CAAE1c,IAAKN,EAAKM,KAAOyQ,EAAOpH,GAEtD5N,EAAagV,EAAM1Q,aAAa6T,IAAIlU,EAAKM,KACzCyR,EAAahB,EAAMsC,iBAAiBqF,aAAe1Y,EAAKM,IAC9D,OACE5K,EAAAA,cAAC6iB,EAAAA,EAAiBjd,SAAQ,CACxBC,MAAO,CACLQ,aACAkhB,mBAAoBlM,EAAMsC,iBAAiBjC,UAC3CW,aACAmL,KAAMld,IAGRtK,EAAAA,cAACynB,EAAAA,GAAc/d,EAAAA,EAAAA,GAAA,GACT2d,EAAW,CACfpT,IAAKA,EACLkF,SAAU9S,EACVqhB,SAAUrL,EACVsL,kBAAgB,IAEfrd,EAAKmX,UAId,CAEA,MAAMmG,EAAuB3X,EAAAA,GAAOI,GAAI;;;WAG7B5L,IAAA,IAAC,MAAEuO,GAAOvO,EAAA,OAAKuO,EAAMqP,aAAaC,iBAAiB;EAGxDuF,EAAgB5X,EAAAA,GAAOI,GAAI;;;;EAMjC,SAAS6W,EAAcviB,GAMnB,IANsC,QACxCwiB,EAAO,MACP9L,GAID1W,GACK,UAAEmjB,EAAS,aAAEC,EAAY,WAAEC,IAAeC,EAAAA,EAAAA,GAAkB,CAC9DhX,QAASkW,EAAQ1F,SACjB,aAAc0F,EAAQ,gBAMxB,OACEnnB,EAAAA,cAAAA,EAAAA,SAAA,KACGmnB,EAAQvc,MAAQyQ,EAAM2B,WAAWyD,eAChCzgB,EAAAA,cAACkoB,EAAAA,GAAuB,CAAC3W,KAAK,iBAEhCvR,EAAAA,cAAA,KAAQ8nB,EACLX,EAAQ1F,UACPzhB,EAAAA,cAAC4nB,EAAyBG,EACvBZ,EAAQ1F,UAGbzhB,EAAAA,cAAC6nB,EAAkBG,EAChB,IACK3M,EAAM2B,WAAWmL,cAAchB,EAAQvc,MACzCuc,EAAQiB,YACV1lB,KAAK8kB,GACLxnB,EAAAA,cAAConB,EAAM,CAACxc,IAAK4c,EAAK5c,IAAKN,KAAMkd,EAAMnM,MAAOA,QAMtD,CAACsL,EAAAnmB,aAAA,mW,mCCvJM,MAAM4P,E,SAAkBH,GAAOI,GAGnC;;;;;;gBAMa3Q,IAAA,IAAC,MAAEsT,EAAK,SAAEmG,GAAUzZ,EAAA,OAChCyZ,EACInG,EAAMC,MAAM,+BACZD,EAAMC,MAAM,sBAAsB;WAC/B5S,IAAA,IAAC,MAAE2S,EAAK,SAAEmG,GAAU9Y,EAAA,OAC3B8Y,EACInG,EAAMC,MAAM,+BACZD,EAAMC,MACJ,sBACD;;MAEHxO,IAAA,IAAC,MAAEuO,EAAK,SAAEmG,EAAQ,gBAAEkL,GAAiB5f,EAAA,OACrCuO,EAAMqP,aAAa0B,OAAO,CACxB5K,WACAkL,mBACA;;;;MAIF1f,IAAA,IAAC,MAAEqO,EAAK,gBAAEqR,GAAiB1f,EAAA,OAC3BqO,EAAMqP,aAAagG,UAAU,CAC3BhE,kBACAiE,SAAS,GACT;;;oBAGY9U,IAAA,IAAC,MAAER,EAAK,gBAAEqR,GAAiB7Q,EAAA,OACzCR,EAAMqP,aAAa0B,OAAO,CACxBuE,SAAS,EACTjE,mBACA;;;QAGA3Q,IAAA,IAAC,MAAEV,EAAK,gBAAEqR,GAAiB3Q,EAAA,OAC3BV,EAAMqP,aAAagG,UAAU,CAC3BhE,kBACAiE,SAAS,GACT;;;mBAGSlP,IAAA,IAAC,MAAEpG,GAAOoG,EAAA,OAAKpG,EAAMuV,aAAa3O,OAAO;mDCjDrD,MAAMyM,GAA0BpW,E,SAAAA,IAAOiC,EAAAA,IAAcuQ,MAEzD,CACD,cAAe,QACd;;;;;;;;YAQS/iB,IAAA,IAAC,MAAEsT,EAAK,SAAEmG,GAAUzZ,EAAA,OAC1ByZ,EACInG,EAAMC,MAAM,0CACZD,EAAMC,MAAM,iCAAiC;;6DCGvD,MAAMuV,EAAoBvY,EAAAA,GAAOI,GAAI;WAC1B3Q,IAAA,IAAC,MAAEsT,GAAOtT,EAAA,OAAKsT,EAAMqP,aAAaoG,qBAAqB;EAG5DC,EAA2BzY,EAAAA,GAAOI,GAErC;;;;;;IAMChQ,IAAA,IAAC,UAAEgM,GAAWhM,EAAA,MACA,UAAdgM,GACAsc,EAAAA,EAAI;;;;KAIH;;EAQQ7C,EAAwBrhB,IAYX,IAZY,SACpC7E,EAAQ,iBACR0lB,EAAgB,qBAChBd,EAAoB,YACpBD,GAQkB9f,EAClB,OACEzE,EAAAA,cAAC0oB,EAAwB,CAACrc,UAAWmY,GAClC5kB,EACA2kB,GACCvkB,EAAAA,cAACwoB,EAAsBlD,EACpBf,GAGoB,EAE7BuB,EAAAtlB,aAAA,mgC,6ECzDF,MAAMooB,EAAuB3Y,EAAAA,GAAOI,GAEjC;;oBAEiB3Q,IAAA,IAAC,eAAEwkB,GAAgBxkB,EAAA,MAChB,UAAnBwkB,EAA6B,SAAW,KAAK;;;EAK3C2E,EAAc5Y,EAAAA,GAAO8K,KAAgC;WAChD1a,IAAA,IAAC,MAAE2S,EAAO3M,WAAY8S,GAAU9Y,EAAA,OACvC2S,EAAMqP,aAAatH,MAAM,CAAE5B,YAAW;;;EAS7B0M,GAAY5B,EAAAA,EAAAA,aAAW,SAAkBxf,EAcpD+T,GACC,IAdD,MACEuC,EAAK,eACLmJ,EAAc,WACdsB,EAAU,SACV5lB,EAAQ,WACRyG,KACGtE,GAMY0C,EAGjB,MAAMqkB,EAAW9oB,EAAAA,OAA+B,MAEhD,OAgBF,SAAyB2E,GAMrB,IANsB,IACxBsP,EAAG,QACHqC,GAID3R,EACC,MAAM,gBAAEokB,EAAe,YAAEC,IAAgB/mB,EAAAA,EAAAA,YAAWgnB,IACpDC,EAAAA,EAAAA,kBAAgB,KACd,MAAMC,EAAQA,KACZ,MAAMC,EAAQnV,EAAItQ,SAASiiB,YAC3B,QAAIwD,IACFL,EAAgBK,IACT,EAEG,EAGTD,KACHvkB,WAAWukB,EAAO,EACpB,KAGF1jB,EAAAA,EAAAA,YAAU,KACJwO,EAAItQ,UACNsQ,EAAItQ,QAAQwS,MAAMiT,MAChBJ,GAAe1S,EAAW,GAAE0S,MAAkB,GAClD,GACC,CAACA,EAAa1S,GACnB,CA9CE+S,CAAiB,CAAEpV,IAAK6U,EAAUxS,QAA4B,UAAnB4N,IAEzClkB,EAAAA,cAAC4oB,GAAoBlf,EAAAA,EAAAA,GAAA,GACf3H,EAAK,CACTmiB,eAAgBA,EAChBjQ,IAAKuE,IAEJuC,GACC/a,EAAAA,cAAC6oB,GAAWnf,EAAAA,EAAAA,GAAA,GAAK8b,EAAU,CAAEnf,WAAYA,EAAY4N,IAAK6U,IACvD/N,GAGJnb,EAGP,IAiCA,MAAMqpB,EAAwBjpB,EAAAA,cAG3B,CAAEgpB,YAAa,KAAMD,gBAAiBA,SAclC,SAASO,EAAgC9V,GAI5C,IAJ6C,SAC/C5T,GAGD4T,EACC,MAAOwV,EAAaO,GAAkBvpB,EAAAA,SAA8B,MASpE,OACEA,EAAAA,cAACipB,EAAsBrjB,SAAQ,CAACC,MAAO,CAAEmjB,cAAaD,gBAR/BK,IACvBG,GAAgBC,GACdJ,GAASI,GAAgB,GACrBJ,EAAQ,EACRI,GACL,IAIE5pB,EAGP,CAACimB,EAAArlB,aAAA,gtBAAA8oB,EAAA9oB,aAAA,2lB,yFCnIM,MAAMipB,EAAuBxZ,EAAAA,GAAOa,IAExC;IACCpR,IAAA,IAAC,uBAAEiX,GAAwBjX,EAAA,OAC3BiX,EACK,GAAEA,MACH,EAAE;;;;IAINtW,IAAA,IAAC,uBAAEsW,GAAwBtW,EAAA,OAC3BsW,EAA0B,GAAEA,YAAmC,SAAS;;;;;;;;;EAWtE+S,GAA2BzZ,EAAAA,EAAAA,IAAOwZ,EAAsB;;EAkCjDxT,EAAwBjW,EAAAA,YACnC,SAA8ByE,EAY5BwP,GACC,IAZD,UACE0V,EAAS,uBACThT,KACG5U,GAOJ0C,EAGD,MAAMmS,EAAa,QAAO7U,EAAM6U,WAAa,KAC7C,OACE5W,EAAAA,cAAC0pB,EAAwB,CACvBzV,IAAKA,EACL0C,uBAAwBA,GAExB3W,EAAAA,cAACkS,EAAAA,IAAYxI,EAAAA,EAAAA,GAAA,GAAK3H,EAAK,CAAE6U,UAAWA,KACpC5W,EAAAA,cAACkS,EAAAA,IAAYxI,EAAAA,EAAAA,GAAA,GACP3H,EAAK,CACT6U,UAAWA,EACX/M,KAAM8f,IAAaC,EAAAA,EAAAA,IAAU7nB,EAAM8H,KAAM,SACzC,mBAIR,IACAoM,EAAAzV,aAAA,y6C,uGC/DF,MAAMqpB,EAAmB,iCA2BzB,SAASC,EACPC,EACAC,GAEA,MAAMhX,GAAQiX,EAAAA,EAAAA,MACRC,EAAgBF,GAAahX,EAAMnN,MAAMmkB,GAC/C,GAAIE,EACF,OAAOA,EAET,MAAM,UAAEppB,EAAY,CAAC,EAAC,KAAE0b,GACI,iBAAnBuN,EACH,CAAEvN,KAAMuN,GACRA,EACN,OArCF,SACE/W,EACAwJ,EACA1b,GAkBA,YAlBwB,IAAxBA,IAAAA,EAA2B,CAAC,GAkBpB,GAhBY+oB,IAClB7W,EAAMmX,iBAAmB,WAAa,cAenB3N,IAZnB,CAAC,WAAY,WAAY,UAAW,UAAW,YAI9ClY,QAAQrD,IAEPH,EAAU2b,WAAY,CAAC,UAAW,WAAWrb,SAASH,KAEvDmpB,QACC,CAACC,EAAOppB,IAAaopB,GAASvpB,EAAUG,GAAYA,EAAW,KAC/D,SAGN,CAeSqpB,CAAatX,EAAOwJ,EAAM1b,EACnC,CAEO,MAAMyb,EAAUvc,EAAAA,YACrB,CAAAN,EAEE8Y,KACI,IAFJ,UAAEwR,EAAS,KAAEngB,EAAI,KAAEsI,KAASpQ,GAAuBrC,EAGnD,MAAM6qB,EAAmBT,EAAYjgB,EAAMmgB,GAErC/V,GAAM0E,EAAAA,EAAAA,GAAaH,GAEzB,OADAgS,EAAAA,EAAAA,GAAW,CAAEC,KAAO,8BAA6BF,KAAsBtW,GAChEjU,EAAAA,cAAC0qB,EAAAA,GAAiBhhB,EAAAA,EAAAA,GAAA,GAAK3H,EAAK,CAAEkS,IAAKA,EAAK9B,KAAMA,IAAQ,IAE/DoK,EAAA/b,aAAA,mnB,iHC9DK,MAAMopB,EAAYA,CAACe,EAAwBC,KAChD,MAAOpO,EAAMqO,GAAOF,EAAeG,MAAM,KACzC,MAAQ,GAAEtO,IAAOoO,IAAYC,EAAO,IAAGA,IAAQ,IAAI,EAQ/CE,EAAuBC,GAC3BA,EAAa/jB,WAAW,KACpB+jB,EAAaC,MAAM,GAClB,sBAAqBD,IAUf9Y,EAAelS,EAAAA,YAC1B,CAAAN,EAEE8Y,KACI,IAFJ,KAAE3O,EAAI,SAAEqhB,KAAanpB,GAA0BrC,EAG/C,MAAMuU,GAAM0E,EAAAA,EAAAA,GAAaH,GAEnB/B,GADQwT,EAAAA,EAAAA,MACS/W,KAzBAiY,EAACV,EAAcW,KACxC,MAAO5O,EAAMqO,GAAOJ,EAAKK,MAAM,KAC/B,OAAOM,GAAa,GAAE5O,SAAYqO,EAAO,IAAGA,IAAQ,IAAI,EAuBxBM,CAAYthB,EAAMqhB,GAAYrhB,EAS5D,OARA2gB,EAAAA,EAAAA,GACE,CACEC,KAAMM,EAAoBtU,GAC1B4U,aAAcN,EAAoBlhB,IAEpCoK,GAGKjU,EAAAA,cAAC0qB,EAAAA,GAAiBhhB,EAAAA,EAAAA,GAAA,GAAK3H,EAAK,CAAEkS,IAAKA,IAAO,IAEnD/B,EAAA1R,aAAA,mxB,kDC1DF,MAAM8qB,EAA8B,GAEvBZ,EAAoBza,EAAAA,GAAOa,IAIrC;;;;;;WAMQpR,IAAA,IAAC,KAAEyS,EAAOmZ,GAAmB5rB,EAAA,MAAM,GAAEyS,KAAQ;YAC5C9R,IAAA,IAAC,KAAE8R,EAAOmZ,GAAmBjrB,EAAA,MAAM,GAAE8R,KAAQ;;YAE7C1N,IAAA,IAAC,KAAE8M,GAAM9M,EAAA,MAAe,WAAT8M,EAAoB,eAAYrL,CAAS;wECd7D,SAASskB,EAAU9qB,EAQxBuU,GACC,IARD,KAAEwW,EAAI,aAAEY,GAAuD3rB,EAS/D,MAAMsT,GAAQiX,EAAAA,EAAAA,MACRsB,GAAYtpB,EAAAA,EAAAA,YAAW4gB,EAAAA,GACvB6E,EAAW6D,GAAWlP,YAAckP,GAAWhE,oBACrD9hB,EAAAA,EAAAA,YAAU,KACR,IAAI+lB,GAAW,EAoCf,MAnCkBC,WAChB,IAAKhB,EAEH,YADA7iB,QAAQC,MAAM,sBAGZoM,EAAItQ,UAENsQ,EAAItQ,QAAQ+nB,SAAW,QAEzB,MAAMC,QAAY3Y,EACf4Y,WAAWnB,EAAM/C,GACjBmE,OAAOlrB,IACN,GAAI0qB,EACF,OAAOrY,EAAM4Y,WAAWP,EAAc3D,GAExC,MAAM/mB,CAAC,IAERmrB,SAAQ,KACH7X,GAAKtQ,UAAY6nB,IACnBvX,EAAItQ,QAAQ+nB,SAAW,QACzB,IAEJ,GAAIC,EAAK,CACP,MAAMtmB,EAAU4O,GAAKtQ,QACrB,IAAK6nB,GAAYnmB,EAAS,CACxBA,EAAQ8G,cAAc,QAAQ4f,SAC9B,MAAMC,EAAannB,SAASonB,cAAc,OAC1C5mB,EAAQ6mB,YAAYF,GACpBA,EAAWG,UAkBrB,SAAuBR,GACrB,MAAMS,GAAiC,IAAhB7qB,KAAKE,UAAiB4qB,QAAQ,GAC/CC,EAAYX,EAAIY,SAAS,eAC/B,MAAO,IAAID,GAAWlC,QAAO,CAACoC,EAAWnsB,KAAe,IAAZosB,EAAG9pB,GAAGtC,EAChD,MAAMqsB,EAAS,GAAE/pB,KAAMypB,IACvB,OAAOO,EACJ,OAAMhqB,KACN,OAAM+pB,KACPC,EAAY,QAAOhqB,KAAQ,QAAO+pB,KAAUF,GAC7C,GACAb,EACL,CA7BiCiB,CAAcjB,EACvC,CACF,MACE/jB,QAAQC,MAAM,0BAA2B4iB,EAC3C,EAEFoC,GAAYhB,MAAMjkB,QAAQC,OACnB,KACL2jB,GAAW,CAAI,CAChB,GACA,CAACf,EAAM/C,GACZ,CAoBA,SAASiF,EAAWG,EAAgBC,EAAgBC,GAClD,MAAMC,EAAWD,EAAI9lB,QAAQ4lB,EAAQC,GAC/BG,EAAgBD,EAAS/lB,QAAQ4lB,EAAQC,GAC/C,OAAIE,IAAaC,EACRD,EAEFN,EAAWG,EAAQC,EAAQG,EACpC,C,8IC5DO,MAAMC,EAA8B,GAC9BC,EAA6B,GAE7B1T,EAAmBzJ,EAAAA,GAAOiJ,MAA4B;;;;;;;;;gBASnDxZ,IAAA,IAAC,QAAE2tB,GAAS3tB,EAAA,MAAM,GAAE2tB,KAAW;eAChChtB,IAAA,IAAC,QAAEgtB,GAAShtB,EAAA,MAAM,GAAEgtB,KAAW;;;;;;;kBAO5B5oB,IAAA,IAAC,MAAEuO,GAAOvO,EAAA,OACtBuO,EAAMC,MAAM,+BAAgC,UAAU;oBACxCtO,IAAA,IAAC,MAAEqO,GAAOrO,EAAA,OACxBqO,EAAMC,MAAM,gCAAiC,UAAU;;;;kBAI3CO,IAAA,IAAC,MAAER,GAAOQ,EAAA,OACtBR,EAAMC,MAAM,iCAAkC,UAAU;oBAC1CS,IAAA,IAAC,MAAEV,GAAOU,EAAA,OACxBV,EAAMC,MACJ,kCACAD,EAAME,KAAO,UAAY,UAC1B;;;;kBAIWkG,IAAA,IAAC,MAAEpG,GAAOoG,EAAA,OACtBpG,EAAMC,MAAM,iCAAkC,UAAU;oBAC1CqG,IAAA,IAAC,MAAEtG,GAAOsG,EAAA,OACxBtG,EAAMC,MAAM,kCAAmC,UAAU;;EAQlDxJ,EAAazJ,EAAAA,YAAiB,SAAmBuZ,EAe5Df,GACC,IAfD,QACE6U,EAAUF,EAA2B,oBACrCG,GAAsB,EAAI,oBAC1BC,GAAsB,EACtBC,UAAWC,EAAc,WACzBpnB,EAAU,QACVuD,EAAO,cACP8jB,EAAa,WACbC,EAAU,aACVC,EAAY,UACZC,EAAS,0BACTC,KACGvkB,GACagQ,EAKlB,MAAMtF,GAAM0E,EAAAA,EAAAA,GAAaH,IACnB,eAAEuV,IAAmBC,EAAAA,EAAAA,GAAa,CAAE3nB,cAAc4N,IAClD,WAAEga,EAAU,UAAET,IAAcU,EAAAA,EAAAA,GAAS,CACzCja,MACAuZ,UAAWC,EACXpnB,aACAuD,UACA8jB,gBACAC,aACAC,eACAC,YACAC,4BACAR,wBAGF,OACEttB,EAAAA,cAAC0Z,GAAgBhQ,EAAAA,EAAAA,GAAA,CACfkN,UAAW4W,EAAY,SAAW,GAClCrU,SAAU9S,IACN2S,EAAAA,EAAAA,GAAWiV,EAAY1kB,EAAYwkB,GAAe,CACtDV,QAASA,EACTnR,SAAUqR,IAAwBlnB,GAAc,OAAIH,EACpD+N,IAAKA,IAGX,IAAGxK,EAAAjJ,aAAA,6xB,kHC3GH,MAAM2tB,GAAYle,EAAAA,EAAAA,IAAOiC,EAAAA,IAAakG,WAAA,CAAAC,YAAA,gCAAAC,YAAA,eAApBrI,CAAoB,6CAwBzBme,EAAqB1uB,IAKF,IALG,WACjC2uB,EAAU,SACVzuB,EAAQ,QACR0uB,GAAU,KACP1V,GACqBlZ,EACxB,MAAM6uB,GAA8BprB,EAAAA,EAAAA,UACpC,OACEnD,EAAAA,cAACwuB,EAAAA,EAAW,CACVH,WAAYA,EACZI,aAAepc,KACRA,GAAQkc,EAA4B5qB,SACvC4qB,EAA4B5qB,QAAQqY,OACtC,IAGD,CAACja,EAAOkS,IACPjU,EAAAA,cAACyJ,EAAAA,IAAUC,EAAAA,EAAAA,GAAA,IACLsP,EAAAA,EAAAA,GAAWJ,EAAa7W,EAAO,CACjC2sB,QAAU/tB,IACJA,EAAEob,eAAiBpb,EAAEob,yBAAyBnV,cAChD2nB,EAA4B5qB,QAAUhD,EAAEob,cAC1C,IAEF,CACF9H,IAAKA,IAEJrU,GACC0uB,GAAWtuB,EAAAA,cAACmuB,EAAS,CAACtkB,KAAK,2BAGrB,EAEhBukB,EAAA5tB,aAAA,o1B,sECrDK,MAAMmuB,EAAuBjvB,IAA4B,IAA3B,QAAEkvB,KAAY7sB,GAAOrC,EAExD,OADcuqB,EAAAA,EAAAA,MACJ/W,KACDlT,EAAAA,cAAA,OAAA0J,EAAAA,EAAAA,GAAA,GAAS3H,EAAK,CAAE8sB,IAAKD,GAAW7sB,EAAM8sB,OAExC7uB,EAAAA,cAAA,MAAS+B,EAAS,EACzB4sB,EAAAnuB,aAAA,6J,kHCRF,MAAMsuB,EAAiB7e,EAAAA,GAAOI,GAK3B;;;;gBAIa3Q,IAAA,IAAC,MAAEsT,EAAK,SAAEmG,GAAUzZ,EAAA,OAChCyZ,EACInG,EAAMC,MAAM,gCACZD,EAAMC,MAAM,uBAAuB;;MAErC5S,IAAA,IAAC,MAAE2S,EAAK,QAAEsV,EAAO,SAAEnP,EAAQ,gBAAEkL,GAAiBhkB,EAAA,OAC9C2S,EAAMqP,aAAa0B,OAAO,CACxBuE,UACAnP,WACAkL,mBACA;;MAEF5f,IAAA,IAAC,MAAEuO,EAAK,QAAEsV,GAAU,EAAK,gBAAEjE,EAAe,SAAElL,GAAU1U,EAAA,OACtD0U,EACI,cACAnG,EAAMqP,aAAagG,UAAU,CAC3BhE,kBACAiE,QAASA,GACT;;;;IAIR3jB,IAAA,IAAC,WAAEoqB,EAAU,gBAAE1K,EAAe,SAAElL,GAAUxU,EAAA,MAC3B,aAAfoqB,GACApG,EAAAA,EAAI;sBACkC,UAApBtE,GAA+B;oBACb,UAApBA,GAA+B;qBAC9BlL,GAAY;KAC5B;EAGC8B,EAAchL,EAAAA,GAAO1L,KAA8B;;;;;;WAM9CiP,IAAA,IAAC,MAAER,GAAOQ,EAAA,OACjBR,EAAMC,MACJ,uBACD;WACMS,IAAA,IAAC,MAAEV,EAAK,SAAEmG,GAAUzF,EAAA,OAC3ByF,GACAnG,EAAMC,MACJ,+BACD;;iBAEYmG,IAAA,IAAC,MAAEpG,GAAOoG,EAAA,OACvBpG,EAAMC,MACJ,4BACD;;kBAEaqG,IAAA,IAAC,MAAEtG,GAAOsG,EAAA,OACtBtG,EAAMC,MACJ,wBACD;aACMsG,IAAA,IAAC,MAAEvG,GAAOuG,EAAA,OACjBvG,EAAMC,MACJ,wBACD;;;aAGMuG,IAAA,IAAC,MAAExG,GAAOwG,EAAA,OAAKxG,EAAMqP,aAAaC,iBAAiB;;EAI1D0M,EAAe/e,EAAAA,GAAOI,GAAI;;;;;EAM1B4e,GAAoBhf,EAAAA,EAAAA,IAAO+e,EAAc;;EAIzCE,GAAmBjf,EAAAA,EAAAA,IAAO+e,EAAc;;EA0CjCG,EAAQnvB,EAAAA,YAAiB,SAAcyZ,EAelDjB,GACC,IAfD,gBACE6L,EAAe,WACf+K,EAAU,YACVC,EAAW,WACXC,EAAU,MACVnZ,EAAK,UACLS,EACA6N,SAAUC,EAAY,QACtBgK,EAAO,OACPa,EAAM,UACN9iB,EAAS,WACTsiB,KACGhtB,GACQ0X,EAGb,MAAMxF,GAAM0E,EAAAA,EAAAA,GAAaH,GACnBiM,GAAW9L,EAAAA,EAAAA,GAAa+L,IACxB,eAAEqJ,IAAmBC,EAAAA,EAAAA,GACzB,CACE3nB,WAAYtE,EAAMoX,SAClB1M,YACAiiB,UACAa,UAEF9K,IAEK/I,EAAW8T,IAAgB3sB,EAAAA,EAAAA,WAAS,IACrC,iBAAE4sB,IAAqBC,EAAAA,EAAAA,GAAe,CAC1CC,oBAAqBH,IASvB,OANA/pB,EAAAA,EAAAA,YAAU,KACJ2pB,GACF3K,EAAS9gB,SAASisB,QACpB,GACC,CAACR,IAGFpvB,EAAAA,cAAC8uB,GAAcplB,EAAAA,EAAAA,GAAA,CACbuK,IAAKA,EACL4b,YAAY,EACZd,WAAYA,IACR/V,EAAAA,EAAAA,GAAWyW,EAAkB,CAC/B7Y,YACAT,QACA2Z,YAAcvsB,IACRA,EAAM+B,SAAWmf,EAAS9gB,UAC5BJ,EAAM2B,iBACNuf,EAAS9gB,SAASqY,QACpB,IAEF,CACFsM,QAAS5M,EACT2I,gBAAiBA,EACjBlL,SAAUpX,EAAMoX,WAEfkW,GAAervB,EAAAA,cAACkvB,EAAgB,KAAEG,GACnCrvB,EAAAA,cAACib,GAAWvR,EAAAA,EAAAA,GAAA,CAACuK,IAAKwQ,IAAczL,EAAAA,EAAAA,GAAWjX,EAAOgsB,KACjDuB,GAActvB,EAAAA,cAACivB,EAAiB,KAAEK,GAGzC,IAAGH,EAAA3uB,aAAA,+iD,0JChHH,MAAMya,GAAchL,EAAAA,EAAAA,IAAOkf,EAAAA,EAAO;;EAOrBY,EAAa/vB,EAAAA,YAAiB,SAAmBN,EAe5D8Y,GACc,IAfd,gBACE6L,EAAe,kBACfC,EAAiB,UACjB1N,EAAS,MACTT,EAAK,eACL+N,EAAiB,SAAQ,YACzBK,EAAW,qBACXC,EAAoB,WACpBjJ,EAAa,CAAC,EAAC,YACf8T,EAAW,WACXC,EAAU,SACV7K,KACG1iB,GACarC,EAGlB,MAAMuU,GAAM0E,EAAAA,EAAAA,GAAaH,IACnB,WAAEwX,EAAU,kBAAEzK,EAAiB,WAAEC,EAAU,iBAAEF,IACjD2K,EAAAA,EAAAA,GAAS,IACJluB,EACHmuB,aAAc5L,EACdD,gBACsB,UAApBA,GAAmD,YAApBA,EAC3B,UACA,UAGV,OACErkB,EAAAA,cAAC6lB,EAAAA,EAAS,CACR5R,IAAKA,EACL8G,MAAOhZ,EAAMgZ,MACbmJ,eAAgBA,EAChB7d,WAAYtE,EAAMsE,WAClBmf,WAAYA,EACZ5O,UAAWA,EACXT,MAAOA,GAEPnW,EAAAA,cAAC8lB,EAAAA,EAAqB,CACpBvB,YAAaA,EACbC,qBAAsBA,EACtBc,iBAAkBA,GAElBtlB,EAAAA,cAAC+lB,EAAAA,EAAwB,CACvB1Z,UAAU,YACVqa,YAAa,GACbV,aAAW,EACX3f,YAAaie,EACbva,QACE/J,EAAAA,cAACkmB,EAAAA,EAAiB,CAChB5lB,KAA0B,UAApB+jB,EAA8BA,OAAkBne,GAEtDlG,EAAAA,cAAA,MAASulB,EAAoBjB,IAGjC6B,MAAO,GAEPnmB,EAAAA,cAACib,GAAWvR,EAAAA,EAAAA,GAAA,CACV+a,SAAUA,EACV0L,YAAapuB,EAAMouB,YACnBhX,SAAUpX,EAAMsE,WAChBge,gBAAiBA,EACjB+K,WAAYrtB,EAAMqtB,WAClB3iB,UAAW1K,EAAM0K,UACjB6iB,WAAYA,EACZD,YAAaA,IACTrW,EAAAA,EAAAA,GAAWgX,EAAYzU,EAAY,CACrC1V,MAAO9D,EAAM8D,MACbse,aAAcpiB,EAAMoiB,aACpBiM,SAAWzvB,GACToB,EAAMquB,WAAWzvB,EAAE2E,OAAOO,aAO1C,IAAGkqB,EAAAvvB,aAAA,27E,iFC3KH,MAGa6vB,E,SAAapgB,GAAOrB,CAAE;;;;;;;QAO3BvO,IAAA,IAAC,MAAE2S,GAAO3S,EAAA,OACV2S,EAAMC,MACJ,0BACAD,EAAMqP,aAAaiO,iBACpB;;;WAdmB5wB,IAAA,IAAC,MAAEsT,GAAyBtT,EAAA,OACtDsT,EAAMqP,aAAakO,qBAAqB;;;;;aAqB7B9rB,IAAA,IAAC,MAAEuO,GAAOvO,EAAA,OACjBuO,EAAMC,MACJ,uBACAD,EAAMC,MACJ,wBACA,IAEH;;;;aAIMtO,IAAA,IAAC,MAAEqO,GAAOrO,EAAA,OACjBqO,EAAMC,MACJ,yBACAD,EAAMC,MACJ,0BACCD,EAAME,KAAmB,UAAZ,WAEjB;;;;;;aAMMM,IAAA,IAAC,MAAER,GAAOQ,EAAA,OACjBR,EAAMC,MACJ,0BACAD,EAAMC,MACJ,2BACAD,EAAMC,MAAM,qBAAsB,SAErC;;;;;;;aAOMS,IAAA,IAAC,MAAEV,GAAOU,EAAA,OACjBV,EAAMC,MACJ,yBACAD,EAAMC,MACJ,0BACCD,EAAME,KAAmB,UAAZ,WAEjB;;kDC3CA,MAAMgB,EAAOlU,EAAAA,YAClB,CACE+B,EACAyW,KAEA,MAAMvE,GAAM0E,EAAAA,EAAAA,GAAaH,IAEnB,eAAEuV,IAAmBC,EAAAA,EAAAA,GAAajsB,EAAOkS,IACzC,WAAEga,EAAU,UAAET,IAAcU,EAAAA,EAAAA,GAAS,IAAKnsB,EAAOkS,QACjD6E,GAAWC,EAAAA,EAAAA,GAAehX,EAAO,CAAEyuB,WAAW,IAC9CC,GAAsBzX,EAAAA,EAAAA,GAAW+U,EAAgBE,GAEvD,OACEjuB,EAAAA,cAAC0wB,EAAAA,EAAS,CAACC,eAAe,iBACxB3wB,EAAAA,cAACqwB,GAAU3mB,EAAAA,EAAAA,GAAA,IACLsP,EAAAA,EAAAA,GAAW+U,EAAgB0C,EAAqB3X,GAAS,CAC7D8X,GAAG,OACHrf,KAAK,OACL0C,IAAKA,EAEL2C,UAAY,GAAE7U,EAAMsE,WAAa,WAAa,MAC5CmnB,EAAY,SAAW,MACrBzrB,EAAM6U,WAAa,KACvB,gBAAe7U,EAAMsE,iBAAcH,EACnCgW,SACGna,EAAMsE,gBAAoDH,EAAtCnE,EAAMwrB,qBAAuB,EAAI,IAGvDxrB,EAAMnC,UAEC,IAGhBsU,EAAA1T,aAAA,y5B,6JCRK,MAAMqwB,EAAO7wB,EAAAA,YAAiB,SAAaN,EAQhD8Y,GACC,IARD,oBACEsY,GAAsB,EAAK,mBAC3BC,GAAqB,EAAK,oBAC1BC,EAAmB,UACnBpa,KACG2E,GACU7b,EAGf,MAAMqC,EAAkD,IACnDwZ,EACH0V,wBAAyBH,GAErB7c,GAAM0E,EAAAA,EAAAA,GAAaH,GACnB6C,GAAQwL,EAAAA,EAAAA,GAAa9kB,IACrB,UAAEmvB,EAAS,YAAEC,IAAgBC,EAAAA,EAAAA,GACjC,IACKrvB,EACHghB,eAAe,GAEjB1H,EACApH,IAIAod,kBAAoBzxB,SAAU0xB,KAAeD,KAC3CE,EAAAA,EAAAA,GAAmB,CACrBlW,QACA2V,sBACAQ,WAAalnB,GAAStK,EAAAA,cAACyxB,EAAAA,EAAQ,CAAC7mB,IAAKN,EAAKM,IAAKN,KAAMA,MAGvD,OACEtK,EAAAA,cAAC0xB,EAAAA,EAAY9rB,SAAQ,CAACC,MAAOsrB,GAC3BnxB,EAAAA,cAACinB,EAAAA,GAAUvd,EAAAA,EAAAA,GAAA,CACTknB,GAAIe,EAAAA,IACAN,EACAH,GACAnY,EAAAA,EAAAA,GAAehX,EAAO,CAAEyuB,WAAW,IAAO,CAC9CO,mBAAoBA,EACpBna,UAAWA,EACX3C,IAAKA,IAEJqd,GAIT,G,mCC3FO,MAAMI,E,QAAc1xB,cACzB,K,iFCNK,MAAM4xB,EAAwBA,IAEjC5xB,EAAAA,cAACkoB,EAAAA,IAAuBxe,EAAAA,EAAAA,GAAA,CACtBknB,GAAI,OACAiB,EAAAA,EAAAA,GAAa,CAAEpZ,YAAa,KAAMqZ,YAAa,aAChDC,iBAGPH,EAAApxB,aAAA,qD,sGCCK,SAASixB,EAAQ/xB,GAA2C,IAAvC,KAAE4K,EAAI,SAAE1K,GAA4BF,EAC9D,MAAM,MAAE2b,EAAOiN,QAAS0J,EAAW,SAAEjvB,IAAad,EAAAA,EAAAA,YAAWyvB,EAAAA,GACvDzd,EAAMjU,EAAAA,OAAa,MACnBqG,EAAagV,EAAM1Q,aAAa6T,IAAIlU,EAAKM,KACzCyR,EAAahB,EAAMsC,iBAAiBtB,WAAW/R,EAAKM,MAEpD,UAAEkd,IAAcmK,EAAAA,EAAAA,GAAkB,CACtCrnB,IAAKN,EAAKM,IACVqJ,MACAlR,SAAUA,IAAMA,IAAWuH,EAAKM,KAChC+S,iBAAkBtC,EAAMsC,mBAG1B,OACE3d,EAAAA,cAACynB,EAAAA,GAAc/d,EAAAA,EAAAA,GAAA,CACbie,iBAAkBqK,EAClBtK,SAAUrL,EACVlD,SAAU9S,EACV,gBAAeA,EACf,gBAAegW,EACf,aAAY/R,EAAK,eACbwd,EAAS,CACb7T,IAAKA,IAELjU,EAAAA,cAAC6iB,EAAAA,EAAiBjd,SAAQ,CACxBC,MAAO,CACLQ,aACAgW,aACAkL,mBAAoByK,EACpBxK,KAAMld,IAGP1K,GAAY0K,EAAKmX,UAI1B,CAACgQ,EAAAjxB,aAAA,gP,kDC3CM,MAAMymB,E,SAAahX,GAAOI,IAC9BoS,OAAwB1gB,IAAK,CAAQwP,KAAMxP,EAAMwP,MAAQ,WACzD6G,WAA4B,CAC3B8Z,kBAAoBC,GAAkB,uBAATA,GACX;;;;;;WAMXzyB,IAAA,IAAC,MAAEsT,GAAOtT,EAAA,OAAKsT,EAAMC,MAAM,mBAAmB;;IAErD5S,IAAA,IAAC,mBAAE0wB,GAAoB1wB,EAAA,OACvB0wB,IACApI,EAAAA,EAAAA,IAAG,kCAGF;gBACWlkB,IAAA,IAAC,MAAEuO,GAAOvO,EAAA,OAAKuO,EAAMC,MAAM,kBAAkB;oCCftD,MAAMwU,E,SAAiBxX,GAAOI,IAAIoS,OACtC1gB,IAAK,CACJwP,KAAMxP,EAAMwP,MAAQ,cAED;IACnB7R,IAAsD,IAClD0yB,GADH,iBAAEzK,EAAgB,SAAED,EAAQ,SAAEvO,EAAQ,MAAEnG,GAAOtT,EAE5CuT,EAAQkG,EACRnG,EAAMC,MAAM,wBACZD,EAAMC,MACJ,kBACAD,EAAMqP,aAAagQ,iBAsBzB,OApBI3K,IACEC,GACF1U,EAAQD,EAAMsf,oBACZtf,EAAMC,MACJ,6BACGD,EAAMqP,aAAakQ,yBAE1BH,EAAkBpf,EAAMC,MACtB,8BAGFA,EAAQD,EAAMC,MACZ,mCACAA,GAEFmf,EAAkBpf,EAAMC,MACtB,sCAIC,CACLmf,gBAAiBpf,EAAMwf,oBAAoBJ,GAC3Cnf,QACD;;;;;;;;;6ICRE,SAASme,EAAO1xB,EAErB2b,EACApH,GACC,IAHD,SAAElR,EAAQ,cAAE0vB,EAAa,cAAEtP,KAAkBphB,GAAkBrC,EAI/D,MACEwxB,WAAW,YAAEpB,KAAgBoB,ICwD1B,SACLnvB,GAEA,IAAI,iBACF4b,EAAgB,WAChBX,EAAU,aACVrS,EAAY,IACZsJ,EAAG,iBACH2L,EAAgB,UAChBnT,EAAS,gBACTimB,EAAe,cACf3P,EAAa,uBACbkO,EAAsB,cACtB0B,GAAgB,EAAK,kBACrBC,EAAiB,sBACjBC,EAAqB,oBACrBC,GACE/wB,EAIAgxB,GAAWC,EAAAA,EAAAA,GAAY,CAAEC,MAAO,SAAUC,YAAa,SACvDC,GAAWzb,EAAAA,EAAAA,UACb,IACEkI,GACA,IAAIwT,EAAAA,EAAqBpW,EAAYrS,EAAcsJ,EAAK8e,IAC1D,CAACnT,EAAkB5C,EAAYrS,EAAcsJ,EAAK8e,KAEpDjQ,EAAAA,EAAAA,GACE,CAAEC,gBAAepF,iBAAkBA,GACnC1J,GAGF,IAAI,gBAAEof,IAAoBC,EAAAA,EAAAA,GAAwB,CAChDrf,MACA0J,mBACAiC,iBAAkBuT,EAClB1mB,YACAimB,kBACAzB,yBACA0B,gBACAC,oBACAC,wBACAC,wBAGF,MAAO,CACL5B,UAAWmC,EAEf,CDxGME,CAAkB,IACjBxxB,EACHkS,MACA0J,iBAAkBtC,EAAMsC,iBACxBsT,wBAAyBlvB,EAAM+uB,oBAC/B9T,WAAY3B,EAAM2B,WAClBrS,aAAc0Q,EAAM1Q,aAEpBgoB,eAAe,KAGjBzP,EAAAA,EAAAA,GAAwB,CACtBC,gBACApgB,WACAsY,QACA+H,cAAenP,IAGjB,MAAOqU,EAASkL,IAAc3wB,EAAAA,EAAAA,WAAS,IAEjC,iBAAE4sB,IAAqBC,EAAAA,EAAAA,GAAe,CAC1CC,oBAAqB6D,KAIvB/tB,EAAAA,EAAAA,YAAU,KACR,MAAMkb,EAAWtF,EAAM2B,WAAWyD,eAE/B1e,EAAM+uB,qBACPzV,EAAMsC,iBAAiB8V,SACvB9S,IAEAtF,EAAMsC,iBAAiB6B,cAAcmB,GACrCtF,EAAMsC,iBAAiBiS,OAAOjP,GAChC,GACC,EAAE5e,EAAM+uB,sBAEX,MAAM4C,GAAmBpwB,EAAAA,EAAAA,GAAiBP,GAAQ,MAAa,IACzDouB,GAAkCzZ,EAAAA,EAAAA,UACtC,MACE2D,QACAiN,QAASnnB,QAAQmnB,GAAWmK,GAC5B1vB,SAAU2wB,KAEZ,CAACrY,EAAOiN,EAASmK,IAGnB,MAAO,CACLvB,WAAWlY,EAAAA,EAAAA,GAAWkY,EAAWzB,GACjC0B,cACA7I,UAEJ,C,4DEtFO,SAASzB,EACd9kB,GAEA,MAAMsZ,GAAQsY,EAAAA,EAAAA,GAAqB,IAC9B5xB,EACH+kB,kBAAmB,YAGrB,OCJK,SAAyBpnB,EAE9B2b,GACC,IAFD,oBAAEuY,GAAyCl0B,GAG3Cm0B,EAAAA,EAAAA,qBAAoBD,GAAqB,IAAMvY,EAAMsC,kBACvD,CDFEmW,CAAiB/xB,EAAOsZ,GACjBA,CACT,C,sEEjBO,MAAM0Y,E,SAA0B9jB,GAAOI,KAAI3Q,IAAA,IAAC,MAAEsT,GAAOtT,EAAA,MAAM,CAChEs0B,YAAa,EACbC,WAAY,OACZxe,WAAY,OACZye,QAAS,OACTC,OAAQ,UACRlhB,MAAOD,EAAMC,MAAM,mBAAoBD,EAAMC,MAAM,iBACpD,ICQD,SAASmhB,EAAW10B,GAIC,IAJkB,aACrC20B,EAAY,OACZ3nB,EAAM,SACN9M,GACgBF,EAChB,MAAM40B,GAAYnxB,EAAAA,EAAAA,QAAuB,MAKzC,OAJAoxB,EAAAA,EAAAA,GAAmB,CACjBF,aAAc3nB,EACduH,IAAKqgB,IAGLt0B,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAC+zB,EAAuB,CACtBxiB,KAAK,eACL0C,IAAKqgB,EACLne,OAAOqe,EAAAA,EAAAA,IAAkB9nB,EAAO+nB,WAAa,QAE5CJ,EAAa/oB,QAAQmW,UAExBzhB,EAAAA,cAAA,OACE4K,IAAKypB,EAAazpB,IAClBuL,OAAOqe,EAAAA,EAAAA,IAAkBH,EAAaI,WAAa,QAElD70B,GAIT,CAEO,MAAM80B,EAGQA,CAAC3uB,EAAQsuB,EAAcz0B,EAAU+0B,IACtB,YAA1BN,EAAaO,SAEb50B,EAAAA,cAACo0B,EAAW,CACVxpB,IAAKypB,EAAazpB,IAClBypB,aAAcA,EACd3nB,OAAQ9M,EAASQ,MAAMy0B,GAAqB,WAAfA,EAAED,YAE9BD,EAAe/0B,EAAS0E,QAAQuwB,GAAqB,SAAfA,EAAED,aAK7C50B,EAAAA,cAAC80B,EAAAA,GAAe,CACdlqB,IAAKypB,EAAazpB,IAClBypB,aAAcA,EACdtuB,OAAQA,QAAUG,IAGtBwuB,EAAAl0B,aAAA,wD,eCzDK,MAAM+wB,EAAqB7xB,IAa5B,IAb+C,WACnD8xB,EAAU,oBACVR,EAAsB,GAAE,MACxB3V,GAKD3b,EAMC,MAAMq1B,GAASrd,EAAAA,EAAAA,UACb,IACE,IAAIsd,EAAAA,EAA2B,CAQ7BC,mBAAoBjE,EACpBkE,uBAAwB,GACxBC,cAAe,KAEnB,IAKF,OAHAJ,EAAO/X,WAAa3B,EAAM2B,WAC1B+X,EAAOpqB,aAAe0Q,EAAM1Q,aAErB,CACL0mB,iBAAkB,CAChBrO,WAAY3H,EAAMsC,iBAAiBqF,WACnChG,WAAY3B,EAAM2B,WAClB+X,SAKAK,UAAW,SACXC,aAAezqB,GACNmqB,EAAOO,YAAYD,aAAazqB,EAAK,CAC1C2qB,eAAe,EACfC,SAAU,IAGd51B,SAAUA,CAACU,EAAMgK,IACF,SAAThK,EACKkxB,EAAWlnB,GAEP,YAAThK,EACKN,EAAAA,cAAC4xB,EAAAA,EAAW,CAAChnB,IAAKN,EAAKM,WADhC,EAIF8pB,cAAa,EAEbe,gBAAiB,QAEpB,C,wGC3CI,MAAMC,EAAuB11B,EAAAA,YAClC,CAAAN,EAQEuU,KACI,IARJ,SACErU,EAAQ,WACRyuB,EAAU,OACVsH,EAAM,WACNtvB,KACGtE,GACuBrC,EAG5B,MAAM2b,GAAQua,EAAAA,EAAAA,GAAoB,CAAC,IAE7B,eAAEC,EAAc,eAAE/gB,EAAc,WAAEghB,GCpBdC,EAAAr2B,EAE5B2b,KACI,IAFJ,WAAEhV,GAAa,EAAK,OAAEsvB,GAA6Bj2B,EAGnD,MAAOm2B,EAAgBG,IAAqBnzB,EAAAA,EAAAA,YA6C5C,MAAO,CAILiS,eATwDzO,EACtD,CAAC,EACD,CACE4vB,cA5BiBt1B,IACfA,EAAE2E,kBAAkBC,UAG1BywB,EAAkBr1B,GAClBg1B,IAAS,CAAErwB,OAAQ3E,EAAE2E,SACrB3E,EAAEuE,iBAEEmW,EAAMiL,QAMRjL,EAAMtP,QACNnH,YAAW,KACTyW,EAAMhJ,KAAK,KAAK,KAGlBgJ,EAAMhJ,KAAK,MACb,GAmBAyjB,YAhBiB3yB,EAAAA,EAAAA,QAAO,MAkBxB0yB,iBACD,EDzCwDE,CACrD,CAAEJ,SAAQtvB,cACVgV,GAEI6a,GAAWld,EAAAA,EAAAA,GAAWjX,EAAO+S,GACnC,OACE9U,EAAAA,cAAAA,EAAAA,SAAA,KACuB,mBAAbJ,EACNA,EAASs2B,GAETl2B,EAAAA,cAAA,OAAA0J,EAAAA,EAAAA,GAAA,GAASwsB,EAAQ,CAAEjiB,IAAKA,IACrBrU,GAGJyb,EAAMiL,QACLtmB,EAAAA,cAACm2B,EAAAA,EAAqB,CACpB3pB,QAAS6O,EAAMtP,MACfkI,IAAK6hB,EACLM,OAAQP,EAKRQ,kBAAkB,GAEjBhI,KAGJ,IAQIjiB,EACX,oCAAoCspB,EAAAl1B,aAAA,i+B,4IErEtC,SAAU81B,EAAuBC,GAC/B,IAAK,MAAMC,KAAeD,OAClB,IACDC,EACH,WAACpO,GACC,MAAMqO,EAAUD,EAAYpO,eAC5B,GAAIqO,EACF,IAAK,MAAMC,KAAoBD,EAAS,CACtC,MAAM,KAAEn2B,KAASq2B,GAAgCD,QAC3CC,CACR,CAEJ,EAEN,CAEA,MAAMC,EAAc1rB,EAAAA,EAAK2rB,KAAK,MAG9BD,EAAYpV,kBAAoB,SAC9Bzf,EACAqE,GAGA,OAAOkwB,EAAoBprB,EAAAA,EAAKsW,kBAAkBzf,EAAOqE,GAC3D,EAEA,MAAM0wB,EAAiBvrB,EAAAA,EAAQsrB,KAAK,MAuCpC,SAASE,EAAmBn3B,GAC1B,OAAOyO,MAAM2oB,QAAQp3B,GAEjBA,EAAS8C,IAAIq0B,IA/BjBnV,EAgC6BhiB,GA7B3BI,EAAAA,eAAqB4hB,IACpBA,EAAOthB,OAAS4K,EAAAA,GAAQ0W,EAAOthB,OAAS22B,EAAAA,EAWvCj3B,EAAAA,eAAqB4hB,IAAWA,EAAOthB,OAASiL,EAAAA,EAC3CvL,EAAAA,cACL82B,EACA,CACElsB,IAAmB,MAAdgX,EAAOhX,IAAcgX,EAAOhX,SAAM1E,KACnC0b,EAAO7f,OAEbg1B,EAAiBnV,EAAO7f,MAAcnC,WAGnCgiB,EAnBE5hB,EAAAA,cACL42B,EACA,CACEhsB,IAAmB,MAAdgX,EAAOhX,IAAcgX,EAAOhX,SAAM1E,KACnC0b,EAAO7f,OAEbg1B,EAAgBnV,EAAO7f,MAAMnC,YAbnC,IACEgiB,CAiCF,CAzCAkV,EAAetV,kBAAoB,SACjCzf,EACAqE,GAGA,OAAOkwB,EAAoB/qB,EAAAA,EAAQiW,kBAAkBzf,EAAOqE,GAC9D,E,qCC8BO,MAAM8wB,EAAqBl3B,EAAAA,cAG/B,CACD+L,MAAOA,OACPsqB,sBAAkBnwB,IAEPixB,EAAcn3B,EAAAA,cAWzB,CAAC,GAEI,SAASo3B,EAAO13B,EAMrB2b,EACApH,GACC,IANClR,SAAUs0B,EAAY,gBACtBC,EAAkB,aACfv1B,GAC+BrC,EAIpC,MAAM,MAAEqM,EAAK,iBAAEsqB,IAAqBp0B,EAAAA,EAAAA,YAAWi1B,GACzCzqB,EAAY1K,EAAM0K,WAAa4pB,EAC/B7pB,EAAUA,KACdzK,EAAMyK,YACNT,GAAO,EAEHhJ,EAAY6H,GAIbyQ,EAAM2B,WAAWC,QAAQrS,IAAM8W,cAGH,kBAApB4V,GACT9qB,IACO6qB,IAAezsB,SAFjB,EADEysB,IAAezsB,GAMpB2sB,EAA0D,CAC9DD,kBACA7qB,YACA1J,WACAyJ,YAEI,UAAEgrB,IAAcC,EAAAA,EAAAA,GACpB,IAAK11B,EAAOgB,WAAUyJ,UAASC,aAC/B4O,EACApH,GAGF,MAAO,CACLujB,YACAD,mBAEJ,CAEO,SAASG,EACd31B,GAOA,OADAA,EDxDK,SAA6BrC,GAGe,IAHX,SACtCE,KACGmC,GACwBrC,EAC3B,MAAO,IACFqC,EACHnC,SACsB,mBAAbA,EACF4nB,GAAYuP,EAAgBn3B,EAAS4nB,IACrCuP,EAAgBn3B,GAE3B,CC6CU+3B,CAAqB51B,IACtB61B,EAAAA,EAAAA,GAAa,IACf71B,EACH81B,wBAAyB,SACzBC,aAAc/1B,EAAMg2B,YAAc,CAACh2B,EAAMg2B,kBAAe7xB,EACxD0O,iBAAkBvU,IAAA,IAAEsgB,GAAStgB,EAAA,OAAK0B,GAAOi2B,sBAAsBrX,EAAS,EACxEsX,oBAAqBl2B,EAAMm2B,mBACvB,CAACn2B,EAAMm2B,yBACPhyB,GAER,CAwBO,SAASuE,EAAIhG,GAA0D,IAAvC,SAAE6M,KAAavP,GAAqB0C,EACzE,MAAMwP,EAAMjU,EAAAA,OAA+B,MACrCqb,EAAQqc,EAAa31B,IACrB,iBAAEw1B,EAAgB,UAAEC,GAAcJ,EAAQr1B,EAAOsZ,EAAOpH,GAE9D,OAQEjU,EAAAA,cAACm3B,EAAYvxB,SAAQ,CAACC,MAAO0xB,GAC3Bv3B,EAAAA,cAACm4B,EAAAA,IAAUzuB,EAAAA,EAAAA,GAAA,GACL8tB,EAAS,CACbvjB,IAAKA,EACLkC,MAAO,CAAE7E,YACTyf,mBAAoBhvB,EAAMgvB,sBAEzBqH,EAAAA,EAAAA,GAAgB/c,EAAO,IAAIA,EAAM2B,cAI1C,CAACvS,EAAAjK,aAAA,quF,mPC9KD,MAAM63B,EAAqBpoB,EAAAA,GAAOa,IAAK;;EAIjCwnB,GAA6BroB,EAAAA,EAAAA,IAAOiC,EAAAA,GAAc;;;;EAMlDqmB,GAAwBtoB,EAAAA,EAAAA,IAAOsM,EAAAA,EAAS;;;;EAyG9C,MAAMic,EAAkBx4B,EAAAA,cAIrB,CAAEslB,iBAAkB,CAAC,EAAGE,WAAY,CAAC,EAAGiT,sBAAuB,CAAC,IAEtDC,EAAoBA,KACxBz2B,EAAAA,EAAAA,YAAWu2B,GAGb,SAASG,EAAQt4B,GAAwC,IAApC,KAAEiK,EAAI,MAAE+Q,GAAyBhb,EAE3D,MAAM4T,EAAMjU,EAAAA,OAA4B,MAClC44B,EAAgB54B,EAAAA,OAA6B,MAC7CqG,EAAagV,EAAM1Q,aAAa6T,IAAIlU,EAAKM,KACzCiuB,EAAaxd,EAAMyc,aAAatZ,IAAIlU,EAAKM,KACzCyR,EAAahB,EAAMsC,iBAAiBmb,aAAata,IAAIlU,EAAKM,KAC1D8Q,EAAYL,EAAMsC,iBAAiBqF,aAAe1Y,EAAKM,KACvD,QACJ4B,EAAO,gBACP8qB,EAAe,cACfyB,EAAiBh3B,IAA2B/B,EAAAA,cAACg5B,EAAAA,EAAYj3B,IAAS,YAClEk3B,EAAe1qB,IAAuBA,KACpCtM,EAAAA,EAAAA,YAAWk1B,EAAAA,KAET,cAAE+B,EAAa,WAAE1T,EAAU,iBAAEF,EAAgB,sBAAEmT,GA5HvD,SAAoB/4B,EAKlB2b,EACApH,GACe,IANf,gBACEqjB,KACGv1B,GACsErC,EAI3E,MAAM4K,EAAO+Q,EAAM2B,WAAWC,QAAQlb,EAAM6I,KACtCvE,EAAagV,EAAM1Q,aAAa6T,IAAIlU,EAAKM,KACzCiuB,EAAaxd,EAAMyc,aAAatZ,IAAIlU,EAAKM,KACzCuuB,EAAa7uB,EAAKoX,eAChBwX,cAAeE,KAAsBxX,IAAWyX,EAAAA,EAAAA,GACtD,CACEzuB,IAAKN,EAAKM,IAGV4B,QAAS2sB,EAAa,YAAWjzB,GAEnCmV,EACApH,UAMKmlB,EAAkBE,oBAClBF,EAAkBG,eAED,YAApBjC,GAAiCuB,UAE5BO,EAAkBI,cAG3B,MAAM,WAAEC,IAAeC,EAAAA,EAAAA,GAAS,CAC9BrzB,WAAYA,EACZszB,aAAcA,KACZ,MAAMC,EAAmB,IAAIve,EAAMyc,cAAc/zB,MAC9Cg0B,GACC1c,EAAM2B,WAAWC,QAAQ8a,IAAc8B,YAAcvvB,EAAKuvB,YAGtC,YAApBvC,GAAkCuB,GACpCxd,EAAMye,UAAUxvB,EAAKM,MAGlB6Q,EAAAA,EAAAA,QAEmB,YAApB6b,GAAiCuB,GAAce,IAE/Cve,EAAMsC,iBAAiB6V,YAAW,GAEpCnY,EAAMsC,iBAAiB6B,cAAclV,EAAKM,KAC5C,IAIE2P,EAAgB,CACpBlX,UAAY1C,IACV,IACc,UAAVA,EAAEiK,KAA6B,MAAVjK,EAAEiK,MACH,kBAApB0sB,GACF,eAAiB32B,EAAEiK,IAInB,OAFAyQ,EAAMye,UAAUxvB,EAAKM,UACrBjK,EAAEsE,iBAEJ,IAIIgpB,WAAY8L,IAAqB7L,EAAAA,EAAAA,GAAS,CAChD7nB,WAAYA,EACZwnB,UAAWA,KACTxS,EAAMye,UAAUxvB,EAAKM,KACjBiuB,GAEFxd,EAAMsC,iBAAiB6B,cAAclV,EAAKM,IAC5C,IAIJ,MAAO,IACFgX,EACHsX,eAAelgB,EAAAA,EAAAA,GACbmgB,EACI,CACE,gBAAiBN,EACjB,gBAAiB,QAEnB,CAAC,EACLO,EACAK,EACAlf,EACoB,kBAApB+c,EAAsCyC,EAAmB,CAAC,GAGhE,CA4BIC,CACE,CACE1C,kBACA1sB,IAAKN,EAAKM,KAEZyQ,EACApH,IAGIga,WAAY8L,IAAqB7L,EAAAA,EAAAA,GAAS,CAChD7nB,WAAYA,EACZwnB,UAAWA,KACTxS,EAAMye,UAAUxvB,EAAKM,KACjBiuB,GAEFxd,EAAMsC,iBAAiB6B,cAAclV,EAAKM,IAC5C,IAIJ,IAAMqvB,aAAcC,IAAkBC,EAAAA,EAAAA,GAAmB,CACvDjuB,UAAW+H,EACX6hB,WAAY8C,EACZvsB,UAAW,YACX+tB,YAAY,EACZ5tB,UACAia,OAAQ,EACRC,cAAe2T,EAAAA,GAAwBC,EAAAA,IACvChU,OAAQuS,IAGV,MAAM0B,EACgB,YAApBjD,EACI,CACE/lB,KAAM,SACN,aAAc,WACXyH,EAAAA,EAAAA,GAAW+gB,EAAkB,CAE9BS,YAAc75B,GAA0BA,EAAEsE,qBAG9C,CAAC,EACP,OACEjF,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACy6B,EAAAA,IAAc/wB,EAAAA,EAAAA,GAAA,GACTwvB,EAAa,CACjB7yB,WAAYA,EACZq0B,SAAUhf,EACVzH,IAAKA,IAEJoI,GACCrc,EAAAA,cAAC26B,EAAAA,GAAkB,KACjB36B,EAAAA,cAACu4B,EAAqB,CACpB1uB,KAAM,CACJ2S,KAAM,YACN1b,UAAW,CAAE4b,SAAUhB,OAK/B1b,EAAAA,cAAC6iB,EAAAA,EAAiBjd,SAAQ,CACxBC,MAAO,CACLQ,aACAkhB,mBAAoBlM,EAAMsC,iBAAiBjC,UAC3CW,aACAmL,KAAMld,IAGRtK,EAAAA,cAACw4B,EAAgB5yB,SAAQ,CACvBC,MAAO,CAAE2f,aAAYF,mBAAkBmT,0BAEtCQ,EAC0B,iBAAlB3uB,EAAKmX,SACVzhB,EAAAA,cAACq4B,EAAuB7S,EACrBlb,EAAKmX,UAGRnX,EAAKmX,SAEPnX,KAILA,EAAKoX,eACJ1hB,EAAAA,cAAC46B,EAAAA,EAAsBL,EACrBv6B,EAAAA,cAACs4B,EAA0B,CAACzuB,KAAK,0BAItCgvB,GASC74B,EAAAA,cAAC66B,EAAAA,EAAO,CACNC,iBAOEC,GAGF/6B,EAAAA,cAAA,OAAA0J,EAAAA,EAAAA,GAAA,CAAKuK,IAAK2kB,GAAmBsB,GAC1BnB,EAAc,CAAEiC,YAAa3f,EAAO4f,QAAS3wB,EAAKM,QAM/D,CAKA,SAASmwB,EAAat2B,GAMlB,IANmB,SACrB7E,EAAQ,gBACRs7B,EAAkBr2B,SAASqM,MAI5BzM,EACC,OAAO0T,EAAAA,aAAsBvY,EAAUs7B,EACzC,CAACvC,EAAAn4B,aAAA,gZ,wGChSD,MAAM26B,EAAuBlrB,EAAAA,GAAOI,GAAI;;;;EAKlC+qB,EAAUnrB,EAAAA,GAAOa,IAAK;;EAItBuqB,EAAWprB,EAAAA,GAAOqrB,GAAI;;;;WAIjB57B,IAAA,IAAC,MAAEsT,GAAOtT,EAAA,OACjBsT,EAAMoP,uBACJpP,EAAMC,MAAM,kCACb;EAGQ5H,EAAiBhL,IAIF,IAJG,QAC7BiL,EAAO,SACPtH,EAAQ,KACR6F,GACoBxJ,EACpB,MAAM,WAAEgc,IAAekf,EAAAA,EAAAA,GACrB1Y,EAAAA,EACA,sEAEI,WAAE2C,EAAU,sBAAEiT,IAA0BC,EAAAA,EAAAA,KACxC8C,GAAenf,GAAcxS,EACnC,OACE7J,EAAAA,cAACm7B,EAAoB,KAClBK,GAAex7B,EAAAA,cAAC26B,EAAAA,GAAkB,KAAEa,GACrCx7B,EAAAA,cAACo7B,EAAY5V,EAAala,GACzBtH,GAAYhE,EAAAA,cAACq7B,EAAa5C,EAAwBz0B,GAC9B,EAEzBqH,EAAA7K,aAAA,4U,uICxBK,SAASi7B,EAAW/7B,GAOL,IAPM,SAC1BE,EAAQ,aACR87B,EACAzB,aAAc0B,EACd7F,WAAY8F,EAAe,iBAC3BvF,EAAgB,QAChB7pB,GACiB9M,EACjB,MAAMo2B,GAAand,EAAAA,EAAAA,GAAaijB,IAC1B,aAAE3B,IAAiB4B,EAAAA,EAAAA,GACvB,CACErvB,UACAsvB,mBAAmB,EACnBxV,QAAQ,EACRyV,2BAA2B,EAC3BC,eAAe,EACfC,6BAA+B52B,KAErB62B,EAAAA,EAAAA,GAAoBpG,EAAWnyB,QAAS0B,IAGpDywB,GAuBF,OApBAqG,EAAAA,EAAAA,MASA12B,EAAAA,EAAAA,YAAU,KACR,MAAM22B,EAAuBA,KAC3B5vB,GAAS,EAKX,OAHA3H,SAASC,iBAAiB,cAAes3B,EAAsB,CAC7Dp3B,SAAS,IAEJ,IACLH,SAAS6e,oBAAoB,cAAe0Y,EAAqB,GAClE,IAGDp8B,EAAAA,cAAC66B,EAAAA,EAAO,KACN76B,EAAAA,cAACka,EAAAA,EAAU,CAACwhB,aAAcA,EAAcjvB,WAAS,GAC/CzM,EAAAA,cAACk3B,EAAAA,GAAmBtxB,SAAQ,CAC1BC,MAAO,CACLkG,MAAOS,EACP6pB,qBAGFr2B,EAAAA,cAAA,OAAA0J,EAAAA,EAAAA,GAAA,IACMsP,EAAAA,EAAAA,GAAWihB,EAAc0B,GAAkB,CAC/C1nB,IAAK6hB,IAEJl2B,KAMb,CAAC67B,EAAAj7B,aAAA,y8B,sEC3EM,SAAS67B,EAA4B38B,GAQxC,IARyC,WAC3Co2B,EAAU,OACVM,EAAM,iBACN5P,GAKD9mB,EACC,MAAOwY,EAAUokB,IAAez5B,EAAAA,EAAAA,UAA0C,CAAC,GAkB3E,OAhBAqmB,EAAAA,EAAAA,kBAAgB,KACd,MAAMqT,EAAiBzG,EAAWnyB,QAClC24B,EACElG,GAAUmG,EAoBhB,SAA0Bl8B,GAYtB,IAZuB,QACzBm8B,EAAO,QACPC,EAAO,aACPC,EAAY,cACZC,EAAa,iBACbnW,EAAmB,GAOpBnmB,EACC,MAAMu8B,EACJ/3B,SAASg4B,gBAAgBC,aACI,iBAArBtW,EACJA,EAAiB/X,EACjB+X,GACAuW,EACJl4B,SAASg4B,gBAAgBvnB,cACI,iBAArBkR,EACJA,EAAiBwW,EACjBxW,GAEN,IAAI9U,EAAM+qB,EACNQ,EAAOT,EAEPS,EAAOP,EAAeE,IACxBK,EAAOL,EAAaF,GAGlBhrB,EAAMirB,EAAgBI,IACxBrrB,EAAMqrB,EAAcJ,GAMtB,OAHAjrB,EAAMnQ,KAAK27B,IAAI,EAAGxrB,GAClBurB,EAAO17B,KAAK27B,IAAI,EAAGD,GAEZ,CAAEvrB,MAAKurB,OAChB,CA1DUE,CAAkB,CAChBX,QACEpG,EAAOoG,QACP,IACFC,QAASrG,EAAOqG,QAChBjW,mBACAkW,aAAcH,EAAe3W,YAC7B+W,cAAeJ,EAAea,eAEhC,CAAC,EACN,GACA,CAAChH,GAAQoG,QAASpG,GAAQqG,UACtB,CACLvC,cAAe,CACb/jB,MAAO,CAAE+B,SAAU,QAASmlB,OAAQ,OAAWnlB,IAGrD,C,qCCRA,MAAMolB,GAAsBC,E,SAAAA,IAAiB,kDAUhCpH,EAAwBn2B,EAAAA,YACnC,SAA8BN,EAE5B8Y,GACC,IAFD,SAAE5Y,EAAQ,OAAEw2B,KAAW7sB,GAAwC7J,EAG/D,MAAMo2B,GAAand,EAAAA,EAAAA,GAAaH,IAC1B,cAAE0hB,GAAkBmC,EAA6B,CACrDvG,aACAM,SACA5P,iBAAkB,CAAE/X,EAAG,EAAGuuB,EAAG,KAGzBQ,GAA+B9lB,EAAAA,EAAAA,UAAQ,IACrC0e,GAAQ9wB,kBAAkBsB,aAGzB62B,EAAAA,EAAAA,GAAarH,EAAO9wB,QACvB8wB,EAAO9wB,QACPo4B,EAAAA,EAAAA,GAAgBtH,EAAO9wB,QAJlB,MAKR,CAAC8wB,GAAQ9wB,SAYZ,OAVAG,EAAAA,EAAAA,YAAU,KAIR+3B,GAAcG,WAAWC,IAAI,kBACtB,KACLJ,GAAcG,WAAW5R,OAAO,iBAAiB,IAElD,IAGD/rB,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACs9B,EAAmB,MACnBn8B,QAAQi1B,IACPp2B,EAAAA,cAACy7B,EAAAA,GAAW/xB,EAAAA,EAAAA,GAAA,CACVuwB,aAAcC,EACdpE,WAAYA,EACZ4F,cAAY,GACRnyB,GAEH3J,GAKX,IACAu2B,EAAA31B,aAAA,q1D,wGCjCK,MAAMguB,EAA0C9uB,IAUhD,IAViD,SACtDE,EAAQ,WACRyuB,EAAU,UACVhO,EAAY,SAAQ,MACpBwd,EAAQ,QAAO,WACfzD,GAAa,EAAI,aACjBsB,GAAe,EAAI,oBACnBpO,GAAsB,EAAI,qBAC1BwQ,KACGv0B,GACJ7J,EACC,MAAM2b,GAAQua,EAAAA,EAAAA,GAAoBrsB,GAC5B0c,EAAajmB,EAAAA,OAAa,MAC1B81B,EAAa91B,EAAAA,OAAa,OAGxB+9B,iBAAkBC,EAAY,UAAExG,IAAcyG,EAAAA,EAAAA,GACpD,CAAE39B,KAAM,QACR+a,EACA4K,GAEIiY,EAA6C,IAC9CF,EAEH1Q,wBAEI,YAAE1U,IAAgBC,EAAAA,EAAAA,GAAUqlB,EAAiBjY,IAE3CgU,aAAcC,IAAkBC,EAAAA,EAAAA,GAAmB,CACzDjuB,UAAW4xB,GAAwB7X,EACnC6P,aACAzpB,UAAW8xB,EAAa9d,EAAWwd,GACnCzD,aACA3T,OAAQ,EACRD,iBAAkB,EAClBha,QAASA,IAAM6O,EAAMtP,QACrBua,OAAQjL,EAAMiL,SAGhB,OACEtmB,EAAAA,cAAAA,EAAAA,SAAA,KACGJ,EAASgZ,EAAaqN,GACtB5K,EAAMiL,QACLtmB,EAAAA,cAACy7B,EAAAA,EAAW,CACVxB,aAAcC,EACdpE,WAAYA,EACZtpB,QAAS6O,EAAMtP,MACf2vB,aAAcA,GAEbrN,EAAW,CAAEmJ,eAGjB,EAIP,SAAS2G,EACP9d,EACAwd,GAEA,OAAQxd,GACN,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,MACH,MAAQ,GAAEA,KAAuB,QAAVwd,EAAkB,SAAW,QAGtD,QACE,MAAQ,GAAExd,KAAawd,IAE7B,CAACrP,EAAAhuB,aAAA,+hB,2OCvFD,MAAM49B,EAAuBnuB,EAAAA,GAAOouB,EAAG;;;;EAMjCC,EAA2BruB,EAAAA,GAAOI,GAAI;;;EAKtCkuB,GAAwBtuB,EAAAA,EAAAA,IAAOkoB,EAAAA,GAAY;;IAE7CjQ,EAAAA;;;EAKEsW,EAAoBvuB,EAAAA,GAAOI,GAAI;WAC1B3Q,IAAA,IAAC,MAAEsT,GAAOtT,EAAA,OAEjBsT,EAAMC,MACJ,2BACAD,EAAME,KAAO,UAAY,UAC1B;;;;;;;;;EAWL,SAASurB,EACPpjB,EACA4f,EACAhnB,EACAyqB,GAEA,MAAM,YACJ7gB,EAAW,iBACXF,EAAgB,iBAChBiC,EACA9K,eAAgB6pB,EAAyB,iBACzCzd,IACExB,EAAAA,EAAAA,GAAyB,CAC3B1C,YAAYtF,EAAAA,EAAAA,UACV,IACE,IAAIknB,EAAAA,EACF3D,EACI5f,EAAM2B,WAAWC,QAAQge,IAAU7S,YAAc,GACjD/M,EAAM2B,aAEd,CAACie,EAAS5f,EAAM2B,aAElBW,iBAAkBtC,EAAMsC,iBACxBiC,iBAAkB,IAAIif,EAAAA,EACpB5D,EACA5f,EAAM2B,WACN3B,EAAM1Q,aACNsJ,GAEF0L,wBAAwB,EACxB7B,gBAAgB,EAChB7J,SAKFxO,EAAAA,EAAAA,YAAU,KACR,MAAMJ,EAAU4O,EAAItQ,QAElB0B,GACAgW,EAAMsC,iBAAiBjC,YACtBrW,GAASy5B,SAASj6B,SAASk6B,iBAE5BC,EAAAA,EAAAA,GAAY35B,EACd,IAGF,MAAM45B,GAAW97B,EAAAA,EAAAA,QAAiD,OAC3DgP,EAAM+sB,IAAWr8B,EAAAA,EAAAA,UACtB,MAEIs8B,EAAcA,KAClB,MAAM,YAAEvZ,EAAc,EAAC,aAAEwX,EAAe,GAAMsB,EAAa/6B,SAAW,CAAC,EACnEiiB,EAAc,GAAKwX,EAAe,IACpC6B,EAASt7B,QAAU,CACjBylB,MAAOxD,EACPwZ,OAAQhC,GAEZ,EAEIiC,EACJxhB,EAAYG,QAAUH,EAAYE,WAAWja,OAAS,GACxDw7B,EAAAA,EAAAA,GAAkB,CAChBrrB,IAAKyqB,EACLa,UAAUj8B,EAAAA,EAAAA,IAAiB,KACpB+7B,GACHF,GACF,OAGJjW,EAAAA,EAAAA,IAAgB,KACVmW,EACEJ,EAASt7B,SACXu7B,EAAQD,EAASt7B,UAGds7B,EAASt7B,SACZw7B,IAEFD,EAAQ,MACV,GACC,CAACG,IAEJ,MAAMG,EAA8CrtB,EAChD,CACEgE,MAAO,IACFhE,EACHstB,UAAWttB,EAAKitB,OAChBM,UAAWvtB,EAAKitB,SAGpB,CAAC,EACL,MAAO,CACLvhB,cACA+B,mBACAjC,mBACAghB,2BAA2B3lB,EAAAA,EAAAA,GACzB2lB,EACAa,EACA,CACE1P,YAAcnvB,IAGZA,EAAEuE,gBAAgB,IAIxBgc,mBAEJ,CAOO,MAAM3U,EAAkBlM,IAMC,IANkB,gBAChDi3B,EAAkB,gBAAe,UACjC7qB,EAAY,QAAO,UACnBkzB,EAAY,kBAAiB,SAC7BruB,KACGvP,GACqB1B,EACxB,MAIM4T,EAAMjU,EAAAA,OAA+B,MACrC0+B,EAAe1+B,EAAAA,OAA6B,MAC5Cqb,GAAQqc,EAAAA,EAAAA,IAAa,IAAK31B,KAC1B,YACJ8b,EAAW,0BACX8gB,EAAyB,iBACzBzd,EAAgB,iBAChBtB,GACE6e,EAAmBpjB,EAAO,KAAMpH,EAAKyqB,IACnC,iBAAEnH,EAAgB,UAAEC,IAAcJ,EAAAA,EAAAA,IACtC,IACKr1B,EACH0K,YACA1J,SAjBc6H,IAChB7I,EAAMgB,WAAW6H,GACjBiT,EAAY+hB,OAAO,EAgBjBhgB,mBACA0X,mBAEFjc,EACApH,GAGF,OACEjU,EAAAA,cAACm3B,EAAAA,GAAYvxB,SAAQ,CACnBC,MAAO,IACF0xB,EACHwB,cAAgBh3B,GACd/B,EAAAA,cAAC6/B,GAAkBn2B,EAAAA,EAAAA,GAAA,CAACi2B,UAAWA,GAAe59B,MAIlD/B,EAAAA,cAACu+B,GAAqB70B,EAAAA,EAAAA,GAAA,CACpBknB,GAAG,MACH3c,IAAKyqB,EACLvoB,MAAO,CAAE7E,aACLqtB,EAAyB,CAC7B5N,mBAAoBhvB,EAAMgvB,qBAE1B/wB,EAAAA,cAAC8/B,EAAsB,CACrBj1B,MAAO,IAAIwQ,EAAM2B,YACjB2iB,UAAWA,EACX9hB,YAAaA,EACbqD,iBAAkBA,EAClB7F,MAAOA,EACPmc,UAAWA,EACXuI,QAAS9rB,KAGQ,EAI3B,SAAS6rB,EAAsBr7B,GAgB3B,IAhB+B,MACjCoG,EAAK,MACLwQ,EAAK,YACLwC,EAAW,iBACXqD,EAAgB,UAChBsW,EAAS,QACTuI,EAAO,UACPJ,GASDl7B,EACC,MAAMH,EAASuZ,EAAYG,OACvBrZ,IAAA,IAAC,IAAEiG,EAAG,KAAEtK,GAAeqE,EAAA,MACZ,SAATrE,GAAmBud,EAAYR,QAAQmB,IAAI5T,EAAI,OACjD1E,EACJ,OACElG,EAAAA,cAAAA,EAAAA,SAAA,KACGkhB,EAAiBthB,UAChBI,EAAAA,cAACs+B,EAAwB,CACvBpoB,QAAUvV,IACRA,EAAEuE,gBAAgB,GAGpBlF,EAAAA,cAACggC,EAAAA,GAAgBt2B,EAAAA,EAAAA,GAAA,GAAKwX,EAAgB,CAAE0e,MAAO/hB,EAAY+hB,UAG/D5/B,EAAAA,cAACo+B,GAAoB10B,EAAAA,EAAAA,GAAA,GAAK8tB,EAAS,CAAEvjB,IAAK8rB,KACvC3H,EAAAA,EAAAA,GAAgB/c,EAAOxQ,EAAOvG,GAC9BuZ,EAAYG,QAAuC,IAA7BH,EAAYR,QAAQlL,MACzCnS,EAAAA,cAACw+B,EAAiB,KAAEmB,IAK9B,CAEA,SAASE,EAAkBrsB,GAI2B,IAJvB,YAC7BwnB,EAAW,QACXC,EAAO,UACP0E,GACiDnsB,EACjD,MAAMS,GAAM9Q,EAAAA,EAAAA,QAAyB,MAC/Bu7B,GAAev7B,EAAAA,EAAAA,QAAuB,MACtCkY,GAAQ4kB,EAAAA,EAAAA,GAAgBjF,GACxBkF,EAAW7kB,EAAM2B,WAAWC,QAAQge,IAEpC,YACJpd,EAAW,0BACX8gB,EAAyB,iBACzBzd,EAAgB,iBAChBtB,GACE6e,EAAmBpjB,EAAO4f,EAAShnB,EAAKyqB,IACtC,aAAEyB,IAAiBC,EAAAA,EAAAA,GACvB,CAAEnF,UAASD,cAAapb,oBACxBvE,EACApH,GAGF,OACEjU,EAAAA,cAACu+B,GAAqB70B,EAAAA,EAAAA,GAAA,GAChBi1B,EAAyB,CAC7B/N,GAAG,MACH3c,IAAKyqB,IAEL1+B,EAAAA,cAAC8/B,EAAsB,CACrBj1B,MAAO,IAAKq1B,GAAU9X,YAAc,IACpCvK,YAAaA,EACbqD,iBAAkBA,EAClB7F,MAAOA,EACPmc,UAAW2I,EACXJ,QAAS9rB,EACT0rB,UAAWA,IAInB,CAACpzB,EAAA/L,aAAA,gwB,iHC5UM,MAAM65B,EAAwB,EACxBC,EAAoB,EAGpBnC,EAAaloB,EAAAA,GAAOouB,EAAqC;;;;;;aAMzDhE;;;;;;;;gBAQGC;MACV56B,IAAA,IAAC,MAAEsT,GAAOtT,EAAA,OACZsT,EAAMC,MAAM,mBAAqBD,EAAME,KAAmB,UAAZ,UAAsB;IACpEmtB,EAAAA;gBACYhgC,IAAA,IAAC,MAAE2S,GAAO3S,EAAA,OACtB2S,EAAMC,MACJ,uBACD;WACMxO,IAAA,IAAC,MAAEuO,GAAOvO,EAAA,OACjBuO,EAAMC,MACJ,uBACD;;IAEDiV,EAAAA;IACAA,EAAAA;IACAA,EAAAA,QAA6BA,EAAAA;;;IAG7BA,EAAAA;wBACoBvjB,IAAA,IAAC,MAAEqO,GAAOrO,EAAA,OAAKqO,EAAMC,MAAM,sBAAsB;cAC3DO,IAAA,IAAC,MAAER,GAAOQ,EAAA,MACjB,GAAER,EAAMnN,MAAM,8BAAgC,KAAK;eAC3C6N,IAAA,IAAC,MAAEV,GAAOU,EAAA,MAClB,GAAEV,EAAMnN,MAAM,oCAAsC,OAAO;cACpDuT,IAAA,IAAC,MAAEpG,GAAOoG,EAAA,MACjB,KAAIpG,EAAMnN,MAAM,kCAAoC,KAAK;;IAE5DyT,IAAA,IAAC,mBAAEyX,GAAoBzX,EAAA,OACvByX,IACApI,EAAAA,EAAAA,IAAG,uDAIF;;;;;;IAMD8R,EAAAA;;;;UAIME,EAAAA;;;;;;;;MAQJF,EAAAA,eAA2BE,EAAAA;;;;;;;IAO7BA,EAAAA;;;;qEClFG,MAAMA,EAAqB1qB,EAAAA,GAAOa,IAAK;;EAIjC8pB,EAAoB3qB,EAAAA,GAAOa,IAAK;;;;EAMvCwvB,EAAmB3X,EAAAA,EAAI;WAClBjpB,IAAA,IAAC,MAAEsT,GAAOtT,EAAA,OACjBsT,EAAMsf,oBACJtf,EAAMC,MACJ,gCAEH;gBACW5S,IAAA,IAAC,MAAE2S,GAAO3S,EAAA,OACtB2S,EAAMC,MACJ,+BACD;EAECstB,EAAe5X,EAAAA,EAAI;WACdlkB,IAAA,IAAC,MAAEuO,GAAOvO,EAAA,OACjBuO,EAAMC,MACJ,sBACD;;EAGCutB,EAAgB7X,EAAAA,EAAI;WACfhkB,IAAA,IAAC,MAAEqO,GAAOrO,EAAA,OACjBqO,EAAMC,MAAM,+BAAiC,YAAY;;EAGhDwnB,EAAiBxqB,EAAAA,GAAOwwB,EAGlC;;;;;;;IAOCF;IACA/sB,IAAA,IAAC,SAAEknB,GAAUlnB,EAAA,OAAKknB,GAAY4F,CAAgB;IAC9C5sB,IAAA,IAAC,WAAErN,GAAYqN,EAAA,OAAKrN,GAAcm6B,CAAa;;;;;;iJCnC5C,SAASJ,EAAU1gC,EASxB2b,EACApH,GACC,IAVD,QACEgnB,EAAO,YACPD,EAAW,iBACXpb,GAIDlgB,EAID,MAAMwgC,EAAW7kB,EAAM2B,WAAWC,QAAQge,IACpC,gBACJ3D,EAAe,UACf7qB,GAAY,EAAI,QAChBD,EAAO,SACPzJ,IACEd,EAAAA,EAAAA,YAAWk1B,EAAAA,IACf,IAAI,UAAEK,IAAcJ,EAAAA,EAAAA,GAClB,CACE,aAAc8I,IAAW,eAAiBA,GAAU/0B,UACpDpI,WACAyJ,UACAssB,aAAczd,EAAMsC,iBAAiBmb,aACrClZ,iBACEA,GACA,IAAIif,EAAAA,EACF5D,EACA5f,EAAM2B,WACN3B,EAAM1Q,aACNsJ,GAEJxH,aAEF4O,EACApH,GAEF,MAAM,aAAEksB,IAAiBO,EAAAA,EAAAA,GAAe,CAAEzF,WAAWD,EAAa/mB,GAE5D0sB,EAAuB,CAC3Bt9B,UAAY1C,IACV,GAAc,WAAVA,EAAEiK,IAQJ,OANAyQ,EAAMye,UAAUmB,GAChB5f,EAAMsC,iBAAiB6B,cAAcyb,GACrCD,EAAYrd,iBAAiB6V,YAAW,QAChB,YAApB8D,GACF32B,EAAEsE,kBAGN,GAeJ,OAXAQ,EAAAA,EAAAA,YAAU,KACRb,YAAW,MAIS,IAAd6H,GACFwH,EAAItQ,SAASqY,OACf,GACA,GACD,IAEI,CACLmkB,cAAcnnB,EAAAA,EAAAA,GAAWwe,EAAW2I,EAAcQ,GAEtD,CAOO,SAAS3H,EAAO34B,GAAgD,IAA5C,YAAE26B,EAAW,QAAEC,GAA0B56B,EAClE,MAAM4T,GAAM9Q,EAAAA,EAAAA,QAAyB,MAC/BkY,GAAQ4kB,EAAAA,EAAAA,GAAgBjF,GACxBkF,EAAW7kB,EAAM2B,WAAWC,QAAQge,IAEpC,aAAEkF,GAAiBC,EAAW,CAAEnF,UAASD,eAAe3f,EAAOpH,GAErE,OACEjU,EAAAA,cAACm4B,EAAAA,IAAUzuB,EAAAA,EAAAA,GAAA,GAAKy2B,EAAY,CAAElsB,IAAKA,KAChCmkB,EAAAA,EAAAA,GAAgB/c,EAAO,IAAK6kB,GAAU9X,YAAc,KAG3D,CAAC4Q,EAAAx4B,aAAA,mP,qEChGM,MAAMq+B,UAAgCzL,EAAAA,EAE3ChS,WAAAA,CACE6Z,EACQje,EACRrS,EACAsJ,EACA8e,GAEA6N,MAAM5jB,EAAYrS,EAAcsJ,EAAK8e,GAAU,KALvC/V,WAAAA,EAA+B,KAHjClW,UAAI,EASVwa,KAAKxa,KAAO,IAAIkW,EAAWiB,WACxBvb,KAAKkI,GAAQoS,EAAWC,QAAQrS,KAChCvG,SAASiG,IACR,GAAIA,GAAQA,EAAKuvB,WAAaoB,EAAS,CACrC,GAAkB,SAAd3wB,EAAKhK,KACP,MAAO,CAACgK,EAAKM,KACR,GAAkB,YAAdN,EAAKhK,KACd,MAAO,IAAIgK,EAAK8d,YAAY1lB,KAAIhD,IAAA,IAAC,IAAEkL,GAAKlL,EAAA,OAAKkL,CAAG,GAEpD,CACA,MAAO,EAAE,GAEf,CAEA6V,WAAAA,GACE,OAAOa,KAAKxa,KAAK,EACnB,CACA+Z,UAAAA,GACE,OAAOS,KAAKxa,KAAKmkB,OAAO,GAAG,EAC7B,CAEAzK,WAAAA,CAAY5V,GACV,MAAMi2B,EAAWD,MAAMpgB,YAAY5V,GAEnC,OAAO0W,KAAKxa,KAAK1F,SAASy/B,GAAYA,EAAW,IACnD,CACAtgB,WAAAA,CAAY3V,GACV,MAAMk2B,EAAWF,MAAMrgB,YAAY3V,GAEnC,OAAO0W,KAAKxa,KAAK1F,SAAS0/B,GAAYA,EAAW,IACnD,EAYK,SAASV,EAAU//B,EAExBgb,EACApH,GACC,IAHD,QAAEgnB,GAA2B56B,EAI7B,MAAQka,cAAe4lB,IAAiB3lB,EAAAA,EAAAA,GAAY,CAClDnX,UAAY1C,IAGV,IAAKsT,EAAItQ,SAASm7B,SAASn+B,EAAE2E,QAE3B,YADA3E,EAAEka,sBAGJ,MAAMkmB,EAAO1lB,EAAM2B,WAAWC,QAAQge,GACtC,GAAc,cAAVt6B,EAAEiK,KAAuBm2B,GAAQ1lB,EAAMyc,aAAatZ,IAAIuiB,EAAKn2B,KAG/D,OAFAyQ,EAAMye,UAAUiH,EAAKn2B,UACrByQ,EAAMsC,iBAAiB6V,YAAW,GAGpC7yB,EAAEka,qBAAqB,IAI3B,MAAO,CACLslB,eAEJ,C,4DCvEO,SAASF,EAAmBjF,GAGjC,MAAO,CAAExH,IAAc3wB,EAAAA,EAAAA,WAAS,IACzB,CAAE2c,IAAiB3c,EAAAA,EAAAA,UAAqB,MACzCm+B,GAAe79B,EAAAA,EAAAA,SAAO,GACtB89B,GAAgB99B,EAAAA,EAAAA,QAAmB,MAEnCkY,EAAgC,IAEjC2f,EAAYrd,iBAAiBtC,MAChCmY,WAAa9X,IACXslB,EAAar9B,QAAU+X,EACvB8X,EAAW9X,EAAU,EAEvB8D,aAAAA,CAAc5U,GACZq2B,EAAct9B,QAAUiH,EACxB4U,EAAc5U,EAChB,GAeF,OAbApI,OAAO0+B,iBAAiB7lB,EAAO,CAC7BK,UAAW,CACTvU,IAAGA,IACM65B,EAAar9B,SAGxBqf,WAAY,CACV7b,IAAGA,IACM85B,EAAct9B,WAKpB,IACFq3B,EACHrd,iBAAkB,IAAIwjB,EAAAA,EAAiBnG,EAAYhe,WAAY3B,GAEnE,C,6FCpCA,MAAM+lB,EAAoBnxB,EAAAA,GAAOI,GAAI;;;;;WAK1B3Q,IAAA,IAAC,MAAEsT,GAAOtT,EAAA,OACjBsT,EAAMC,MACJ,8BACD;EAGCouB,EAAkCpxB,EAAAA,GAAOouB,EAAG;;;EAKrCiD,EAAcjhC,IAIqB,IAJD,KAC7CiK,EAAI,MACJ+Q,EAAK,OACL/W,EAASA,MAAM,IACKjE,GAChB,UAAEynB,EAAS,aAAEC,EAAY,WAAEC,IAAeuZ,EAAAA,EAAAA,GAAe,CAC3DtwB,QAAS3G,EAAKmX,SACd,aAAcnX,EAAK,gBAGrB,MAAMisB,EAAQ,IAAIjsB,EAAK8d,YAAY9jB,OAAOA,GAC1C,OAA2D,IAAvDiyB,EAAMjyB,QAAOG,IAAA,IAAC,KAAEnE,GAAMmE,EAAA,MAAc,SAATnE,CAAe,IAAEwD,OACvC9D,EAAAA,cAAAA,EAAAA,SAAA,MAGPA,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,KAAQ8nB,EACLxd,EAAKmX,UACJzhB,EAAAA,cAACohC,EAAsBrZ,EACpBzd,EAAKmX,UAGVzhB,EAAAA,cAACqhC,EAAoCrZ,EAClCoQ,EAAgB/c,EAAOkb,KAG3B,EChDA,SAAS6B,EACd/c,EACAkb,EACAjyB,GAEA,YAFkC,IAAlCA,IAAAA,EAAqCA,KAAM,GAEpCiyB,EAAMjyB,OAAOA,GAAQ5B,KAAK8kB,IAC/B,OAAQA,EAAKlnB,MACX,IAAK,OACH,OAAON,EAAAA,cAAC24B,EAAAA,EAAQ,CAAC/tB,IAAK4c,EAAK5c,IAAKN,KAAMkd,EAAMnM,MAAOA,IACrD,IAAK,UACH,OACErb,EAAAA,cAAAA,EAAAA,SAAA,KACGwnB,EAAKzlB,MAAMyJ,YACVxL,EAAAA,cAAC4xB,EAAAA,EAAW,CAAChnB,IAAK4c,EAAK5c,IAAM,cAE/B5K,EAAAA,cAACshC,EAAW,CACV12B,IAAK4c,EAAK5c,IACVN,KAAMkd,EACNnM,MAAOA,EACP/W,OAAQA,IAETkjB,EAAKzlB,MAAMyJ,YACVxL,EAAAA,cAAC4xB,EAAAA,EAAW,CAAChnB,IAAK4c,EAAK5c,IAAM,eAIrC,IAAK,UACH,OAAO5K,EAAAA,cAAC4xB,EAAAA,EAAW,CAAChnB,IAAK4c,EAAK5c,MAClC,GAEJ,CDoBE02B,EAAA9gC,aAAA,ghB,oEE/BF,MAAMghC,GAAkBC,EAAAA,EAAAA,eAQrB,CAAEC,UAAW,KAAM1jB,QAAQ,EAAOyD,SAAUA,SAElC1H,EAAkBra,IAKI,IALH,SAC9BE,EAAQ,SACRia,EAAQ,WACRxT,EACA2T,YAAa2nB,EAAkBA,UACjBjiC,EACd,MAAMuU,GAAM9Q,EAAAA,EAAAA,QAAoB,MAC1B6W,GAAc1W,EAAAA,EAAAA,GAAiBq+B,IAC9B3jB,EAAQ4jB,IAAa/+B,EAAAA,EAAAA,WAAS,GAC/Bg/B,GAAkBv+B,EAAAA,EAAAA,IAAkB3C,IACxC,IAAI0F,EAAJ,CAGA,GAAI2X,IAAWrd,EAAE+C,OAAQ,CACvB,MAAMg+B,EAAY/gC,EAAEE,KAAKsgB,MAAM,gBAAgB,GAC3CugB,GAAaA,EAAUI,gBAAkBjoB,EAASioB,eACpD9nB,GAEJ,CAkEJ,IAAsB3U,EAjEJ,QAAV1E,EAAEiK,KAAiBqJ,EAAItQ,YAiET0B,EAjEiC4O,EAAItQ,SAmE9CgD,QAAQ,kBACS,OAA1BtB,EAAQ08B,eAIZ,SAAmBphC,GACjB,SAAUA,EAAEilB,aAAejlB,EAAEy8B,cAAgBz8B,EAAEqhC,iBAAiBl+B,OAClE,CALIm+B,CAAU58B,EAAQ08B,iBApEhBH,GAAU,EARZ,CASA,KAGFn8B,EAAAA,EAAAA,YAAU,KAKR,SAAS8pB,IACPqS,GAAU,EACZ,CACA,SAASM,EAAcvhC,GACP,QAAVA,EAAEiK,KACJg3B,GAAU,EAEd,CACA,OAXA/8B,SAASC,iBAAiB,UAAW+8B,GACrCh9B,SAASC,iBAAiB,QAASo9B,GACnCt+B,OAAOkB,iBAAiB,OAAQyqB,GASzB,KACL1qB,SAAS6e,oBAAoB,UAAWme,GACxCh9B,SAAS6e,oBAAoB,QAASwe,GACtCt+B,OAAO8f,oBAAoB,OAAQ6L,EAAO,CAC3C,GACA,IAEH,MAAM4S,GAAsBh/B,EAAAA,EAAAA,QAAe,IAgB3C,OAfAsC,EAAAA,EAAAA,YAAU,KACR,MAAM28B,EAAUx9B,YAAW,KACrBu9B,EAAoBx+B,UAAYkW,GAClCjS,QAAQuV,KACL,YAAWtD,8LAGZ5F,EAAItQ,SAASo+B,cAEjB,IAEF,MAAO,KACLl+B,aAAau+B,EAAQ,CACtB,GACA,CAACvoB,IAEF7Z,EAAAA,cAACwhC,EAAgB57B,SAAQ,CACvBC,MAAO,CACL67B,UAAW7nB,EACXmE,SACAyD,SAAUA,KACR0gB,EAAoBx+B,QAAUkW,CAAQ,IAI1C7Z,EAAAA,cAAA,QAAMqiC,QAAM,EAACpuB,IAAKA,IACG,iBAAbrU,EACNI,EAAAA,cAACsiC,EAAY,KAAE1iC,GAEfA,EAEuB,EA6BxB,SAAS0iC,EAAYjiC,GAAsC,IAArC,SAAET,GAAgCS,EAC7D,MAAM,UAAEqhC,EAAS,OAAE1jB,EAAM,SAAEyD,IAAaxf,EAAAA,EAAAA,YAAWu/B,GACnD,GAAIE,EAAW,CACb,MAAM7rB,EAAQjW,EAASkiC,cAAcnyB,QAAQ+xB,EAAUI,eACjDS,EAAQ1sB,GAAS,EAIvB,GAHI0sB,GACF9gB,IAEE8gB,GAASvkB,EACX,OACEhe,EAAAA,cAAAA,EAAAA,SAAA,KACGJ,EAASqrB,MAAM,EAAGpV,GACnB7V,EAAAA,cAAA,SAAIJ,EAASqrB,MAAMpV,EAAOA,EAAQ,IACjCjW,EAASqrB,MAAMpV,EAAQ,GAIhC,CACA,OAAO7V,EAAAA,cAAAA,EAAAA,SAAA,KAAGJ,EACZ,CAACma,EAAAvZ,aAAA,mwBAAA8hC,EAAA9hC,aAAA,kV,wPCnJM,SAASgiC,EAAyB9iC,GAMrC,IANsC,mBACxC+iC,EAAkB,SAClB7iC,GAIDF,EACC,OAAIM,EAAAA,QAAciH,WAAW,MAEzBjH,EAAAA,cAACA,EAAAA,SAAc,CACb0iC,SACE1iC,EAAAA,cAAC2iC,EAAoB,CAACC,iBAAkBH,KAGzC7iC,GAIAI,EAAAA,cAAAA,EAAAA,SAAA,KAAGJ,EACZ,CAEA,SAAS+iC,EAAoBtiC,GAMzB,IALFwiC,eAAgBC,EAAqBA,SACrCF,iBAAkBG,EAAuBA,UAI1C1iC,EACC,MAAMwiC,GAAiBv/B,EAAAA,EAAAA,GAAiBw/B,GAClCF,GAAmBt/B,EAAAA,EAAAA,GAAiBy/B,GAO1C,OANAt9B,EAAAA,EAAAA,YAAU,KACRo9B,MACO,KACLD,KAAoB,IAErB,IACI,IACT,CAACJ,EAAAhiC,aAAA,w3BCzBD,MAAMwiC,EAAuB/yB,EAAAA,GAAOI,GAAI;;;;EAM3BF,EAAwBF,EAAAA,GAAOI,GAAI;;;sBAG1B3Q,IAAA,IAAC,MAAEsT,GAAOtT,EAAA,OAAKsT,EAAMC,MAAM,eAAe;WACrD5S,IAAA,IAAC,MAAE2S,GAAO3S,EAAA,OAAK2S,EAAMC,MAAM,eAAe;;IAEjDotB,EAAAA;;EASE4C,EAA6BhzB,EAAAA,GAAOI,GAAI;;;;;EAOjC6yB,EAA2B,GAC3BC,EAA4B,GAE5BC,EAA0BpjC,EAAAA,cAErC,CAAC,GAqBUkQ,EAAczL,IAMkB,IANjB,aAC1B+M,EAAe,MAAK,SACpBF,EAAW4xB,EAAwB,UACnCzD,EAAY0D,EAAyB,UACrCvsB,KACG7U,GACc0C,EACjB,MAAM,SAAE7E,GAAamC,EACfshC,GAAephC,EAAAA,EAAAA,YAAWmhC,GAM1BnvB,EAAMjU,EAAAA,OAA6B,OACnC,WAAEsjC,EAAU,cAAEC,IAAkBC,EAAAA,EAAAA,GACpC,CACExH,eAAe,EACfD,2BAA2B,IAO7B0H,EAAAA,EAAAA,GAAuB,CACrBnd,QAAQ,EACRmI,aAAenI,IACRA,IAlBT+c,EAAa72B,YACbzK,EAAMyK,YAmBF,IAGJyH,IAEFkoB,EAAAA,EAAAA,KAEA,MAAM,YAAEuH,EAAW,WAAEC,IAAeC,EAAAA,EAAAA,GAAU7hC,EAAOkS,IAGnD4vB,OAAQ1tB,EAAK,+BACb2tB,EAA8B,0BAC9BC,IACEC,EAAAA,EAAAA,GAA2B/vB,EAAK,IAAKlS,EAAO09B,YAAWnuB,cAErD,yBAAE2yB,GAwCV,WACE,MAAMC,GAAwB/gC,EAAAA,EAAAA,QAA2B,MAyBzD,MAAO,CACL8gC,yBAA0B,CACxBvV,QA1BmC/tB,IACrCujC,EAAsBvgC,QAAUhD,EAAE2E,MAAM,EA0BtCiqB,OAxB+B5uB,IACjC,MAAMwjC,EAAyBxjC,EAAEob,cACjC,IACGooB,GACAA,aAAkC5+B,UAChC5E,EAAE6iB,cAAcsb,SAASqF,KAQzBA,EAAuBx9B,QAAQ,uBAClC,CACA,MAAMy9B,EAAiBF,EAAsBvgC,QACzCygC,IACFpF,EAAAA,EAAAA,GAAYoF,EAEhB,IAQJ,CAxEuCC,GAErC,OACErkC,EAAAA,cAACgjC,GAAoBt5B,EAAAA,EAAAA,GAAA,GAAK65B,EAAa,CAAE3sB,UAAWA,IAClD5W,EAAAA,cAACskC,EAAAA,EAA8BR,EAC7B9jC,EAAAA,cAACka,EAAAA,GAAU,CAACqqB,SAAO,EAAC7I,cAAY,EAACjvB,WAAS,GACxCzM,EAAAA,cAACmQ,GAAqBzG,EAAAA,EAAAA,GAAA,IAChBsP,EAAAA,EAAAA,GAAW0qB,EAAaJ,EAAYW,EAA0B,CAChE9tB,UACA,CACFlC,IAAKA,IAELjU,EAAAA,cAACijC,EAA0B,KACzBjjC,EAAAA,cAACwkC,EAAAA,EAAc5+B,SAAQ,CACrBC,MAAO,CACL60B,UAAU,EACViJ,aACAc,QAA0B,SAAjBjzB,IAGXxR,EAAAA,cAACwiC,EAAyB,CACxBC,mBAAoBsB,GAEnBnkC,KAIW,QAAjB4R,GAA0BxR,EAAAA,cAAC0kC,EAAAA,EAAoB,SAIjC,EAyC1Bx0B,EAAA1P,aAAA,kpD,mCClMM,MAAMgkC,E,QAAgBxkC,cAI1B,CAAE06B,UAAU,EAAO+J,SAAS,EAAMd,WAAY,CAAC,G,sECHlD,MAAMgB,EAAe10B,EAAAA,GAAOI,GAA6B;;;;;;;kBAOvC3Q,IAAA,IAAC,UAAEklC,EAAS,MAAE5xB,GAAOtT,EAAA,OACnCklC,GAAa5xB,EAAMqP,aAAawiB,cAAc;EAE5CC,EAAmB70B,EAAAA,GAAOI,GAAI;;;EAS7B,SAAS00B,EAAY1kC,GAmBxB,IAnByB,KAC3B48B,EAAI,MACJ+H,EAAK,UACLJ,GAgBDvkC,EACC,OACEL,EAAAA,cAAC2kC,EAAY,CAACC,UAAWA,GACvB5kC,EAAAA,cAAC8kC,EAAgB,KAAE7H,GACnBj9B,EAAAA,cAAC8kC,EAAgB,KACf9kC,EAAAA,cAAC4Q,EAAAA,EAAW,KAAEo0B,IAItB,CAACD,EAAAvkC,aAAA,20B,6FC5CD,MAAMykC,EAAoBh1B,EAAAA,GAAOi1B,EAAG;;;;;;;;EAqBvBC,EAAezlC,IAAmD,IAAlD,SAAEE,GAA0CF,EACvE,MAAM,QAAE+kC,EAAO,WAAEd,IAAe1hC,EAAAA,EAAAA,YAAWuiC,EAAAA,GACrCY,EAAc,SAAC77B,GAA4C,YAAL,IAAvCA,IAAAA,EAA0C,CAAC,GAC9DvJ,EAAAA,cAACilC,GAAsBjsB,EAAAA,EAAAA,GAAW2qB,EAAYp6B,GAC3C3J,GAAYI,EAAAA,cAAAA,EAAAA,SAAA,KAAE,QACG,EAEtB,OAAOykC,EACLzkC,EAAAA,cAAC6R,EAAAA,EAAiB,MACfxR,IAAA,IAAC,gBAAE4R,GAAiB5R,EAAA,OAAK+kC,EAAYnzB,EAAgB,IAGxDmzB,GACD,EACDD,EAAA3kC,aAAA,4Z,cCrCF,MAAM6kC,EAAqBp1B,EAAAA,GAAOI,GAAI;;EAIhCi1B,EAA6Br1B,EAAAA,GAAOI,GAAI;;;EAQvC,SAASk1B,EAAY7lC,GAoBxB,IApByB,OAC3BgN,EAAM,OACN84B,EAAM,QACNl6B,GAiBD5L,EACC,OACEM,EAAAA,cAAAA,EAAAA,SAAA,KACG0M,IACoB,iBAAXA,EACN1M,EAAAA,cAACmlC,EAAY,KAAEz4B,GAEfA,GAEJ1M,EAAAA,cAACslC,EAA0B,KAAEh6B,GAC5Bk6B,GAAUxlC,EAAAA,cAACqlC,EAAkB,KAAEG,GAGtC,CAGAD,EAAaE,OAASV,EAAAA,EACtBQ,EAAaG,OAASP,EAAaI,EAAA/kC,aAAA,m3B,oECSnC,MAMMmlC,EAAiB3lC,EAAAA,cAAsC,CAC3DqS,KAPuBwE,KACvB,MAAM,IAAIhH,MACR,4GACD,IAWUyC,EAAmBA,KAC9BrQ,EAAAA,EAAAA,YAAW0jC,GAaAC,EAA8ClmC,IAAmB,IAAlB,SAAEE,GAAUF,EACtE,MAAOmmC,EAASC,IAAcjjC,EAAAA,EAAAA,UAA+B,IACvDkjC,GAAY5iC,EAAAA,EAAAA,QAAe,GAE3BsU,GAAMC,EAAAA,EAAAA,UAA0B,KAC7B,CACLrF,KAAM,SAAa/G,GACjB,OAAO,IAAIqH,SAAwBC,IACjCmzB,EAAUpiC,UACV,MAAMoI,EAAS6V,IACbkkB,GAAYE,GACVA,EAAe1hC,QAAQ2hC,GAAYA,IAAYriC,MAKjDsiC,uBAAsB,KACpBtzB,EAAQgP,EAAO,GACf,EAEEhe,EACJ5D,EAAAA,cAACojC,EAAAA,GAAwBx9B,SAAQ,CAC/BC,MAAO,CACL2G,QAASA,KACPT,GAAO,GAGXnB,IAAKm7B,EAAUpiC,SAEK,mBAAZ2H,EAEJA,EAAQ,CAAES,UACVT,GAGRw6B,GAAYE,GAAmBA,EAAe1+B,OAAO1D,IAAQ,GAEjE,KAED,IAEH,OACE5D,EAAAA,cAAC2lC,EAAe//B,SAAQ,CAACC,MAAO4R,GAC7B7X,EACAimC,EACuB,EAE5BD,EAAAplC,aAAA,uN,oECvIF,MAAM2lC,EAAuBnmC,EAAAA,cAAwC,MAQ9D,SAAS66B,EAAOn7B,GAMnB,IANoB,SACtBE,EAAQ,iBACRk7B,EAAmBsL,EAAAA,IAIpB1mC,EACC,MAAMqhC,GAAO9+B,EAAAA,EAAAA,YAAWkkC,GAClBzH,GAAev7B,EAAAA,EAAAA,QAAuB,MAE5C,OAAI49B,EAEA/gC,EAAAA,cAAC86B,EAAgB,CAACI,gBAAiB6F,GAAOnhC,GAI5CI,EAAAA,cAACmmC,EAAqBvgC,SAAQ,CAACC,MAAO64B,EAAa/6B,SACjD3D,EAAAA,cAAC86B,EAAgB,KACf96B,EAAAA,cAAA,OAAKiU,IAAKyqB,EAAc,oBAAkB,IACvC9+B,IAKX,CAMO,SAASs8B,EACdmK,EACAC,GAEA,MAAMC,EAAeF,GAAU1/B,QAAQ,uBACjC6/B,EAAeF,GAAU3/B,QAAQ,uBACvC,OAAOxF,QAAQolC,IAAiBA,IAAiBC,CACnD,CAAC3L,EAAAr6B,aAAA,ioB,yDClBD,MAAMimC,EACJzmC,EAAAA,cAA2D,MAuBhDskC,EAA4B5kC,IAG8B,IAH7B,SACxCE,KACGmC,GAC4DrC,EAC/D,OACEM,EAAAA,cAACymC,EAAiC7gC,SAAQ,CAACC,MAAO9D,GAC/CnC,EACyC,EAInC8mC,EAA+BA,KAC1CzkC,EAAAA,EAAAA,YAAWwkC,GAAkCnC,EAAA9jC,aAAA,05E,qECnDxC,SAASmmC,EAAqBC,GACnC,MAAMC,GAAqBH,EAAAA,EAAAA,KAC3B,IAAKG,EACH,MAAO,CAAE50B,gBAAiB,CAAC,GAE7B,MAAM,kBAAE60B,EAAiB,iBAAEC,EAAgB,aAAEC,GAC3CH,EAkBF,MAAO,CAAE50B,iBAhBSg1B,EAAAA,EAAAA,GAAQ,IACrBL,EACHM,YAAaA,IACJH,EAAiB,QAE1BI,OAAQznC,IAA+B,IAA9B,WAAE0nC,EAAU,SAAEC,GAAU3nC,EAC/BsnC,EAAa,IACRI,EACH11B,IAAK01B,EAAW11B,IAAM21B,EAASrK,EAC/BC,KAAMmK,EAAWnK,KAAOoK,EAAS54B,GACjC,EAEJ64B,UAAWA,KACTR,GAAmB,KAGgB,CAAC,EAC1C,CAQO,MAAMj1B,EAAoBxR,IAOI,IAPH,SAChCT,KACGmC,GAK0B1B,EAC7B,OAAOT,EAAS+mC,EAAqB5kC,GAAO,C,uGC/BvC,SAAS2iC,EAAqB3iC,GACnC,MAAMwlC,EAiBR,SAA2BxlC,QAAgC,IAAhCA,IAAAA,EAAmC,CAAC,GAC7D,MAAMylC,GAAmBrkC,EAAAA,EAAAA,QAAe,CACtCuO,IAAK,EACL0tB,OAAQ,EACRhW,MAAO,EACP6T,KAAM,IAEF4J,GAAqBH,EAAAA,EAAAA,MACrB,SACJp1B,EAAWu1B,GAAoBv1B,UAAY,EAAC,UAC5CmuB,EAAYoH,GAAoBpH,WAAa,GAC3C19B,EACJ,IAAK8kC,EACH,OAAO,KAET,MAAM,kBAAEC,EAAiB,iBAAEC,EAAgB,aAAEC,GAC3CH,EAEItH,EAAW,CACfyF,MAAQ7yB,GACN60B,EAAa,IACRQ,EAAiB7jC,QACpBylB,MAAO7nB,KAAK27B,IAAI5rB,EAAUk2B,EAAiB7jC,QAAQylB,MAAQjX,KAE/Ds1B,OAASt1B,GACP60B,EAAa,IACRQ,EAAiB7jC,QACpBy7B,OAAQ79B,KAAK27B,IAAIuC,EAAW+H,EAAiB7jC,QAAQy7B,OAASjtB,KAElE8qB,KAAO9qB,IACL,MAAMu1B,EAAWnmC,KAAK27B,IACpB5rB,EACAk2B,EAAiB7jC,QAAQylB,MAAQjX,GAE7Bw1B,EAAgBH,EAAiB7jC,QACvC,OAAOqjC,EAAa,IACfW,EACH1K,KAAM0K,EAAc1K,KAAO0K,EAAcve,MAAQse,EACjDte,MAAOse,GACP,EAEJh2B,IAAMS,IACJ,MAAMy1B,EAAYrmC,KAAK27B,IACrBuC,EACA+H,EAAiB7jC,QAAQy7B,OAASjtB,GAE9Bw1B,EAAgBH,EAAiB7jC,QACvC,OAAOqjC,EAAa,IACfW,EACHj2B,IAAKi2B,EAAcj2B,IAAMi2B,EAAcvI,OAASwI,EAChDxI,OAAQwI,GACR,GAMN,SAASC,EACPC,GAGA,MAAO,CACL31B,KAAM,EACNgiB,OAH0B,SAAT2T,GAA4B,UAATA,EAGf,KAAO,KAC5BC,gBAAiBA,KACfP,EAAiB7jC,QAAUojC,EAAiB,SAAS,EAEvDxH,SAAUA,EAASuI,GACnBE,YAAalB,EACb3wB,MAAO,CAAE+B,SAAU,WAAY,CAAC4vB,GAAO,GAE3C,CAEA,MAAO,CACLD,kBAEJ,CA7FyBI,CAAkBlmC,GACzC,OACEwlC,GACEvnC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACkoC,EAAAA,EAAiBX,EAAeM,gBAAgB,UACjD7nC,EAAAA,cAACmoC,EAAAA,EAAgBZ,EAAeM,gBAAgB,SAChD7nC,EAAAA,cAACooC,EAAAA,EAAeb,EAAeM,gBAAgB,QAC/C7nC,EAAAA,cAACqoC,EAAAA,EAAkBd,EAAeM,gBAAgB,WAI1D,CAkFCnD,EAAAlkC,aAAA,mY,4HCpGD,MAAM8nC,EAAgBr4B,EAAAA,GAAOI,GAAI;;;sBAGX3Q,IAAA,IAAC,MAAEsT,GAAOtT,EAAA,OAAKsT,EAAMC,MAAM,eAAe;WACrD5S,IAAA,IAAC,MAAE2S,GAAO3S,EAAA,OAAK2S,EAAMC,MAAM,eAAe;;IAEjDotB,EAAAA;EAES9Z,EAAUvmB,EAAAA,YAAiB,SAAgByE,EAEtD+T,GACC,IAFD,SAAE5Y,EAAQ,MAAEyb,EAAK,OAAEoL,EAAS,KAAM1kB,GAAqB0C,EAGvD,MAAMogB,GAAalM,EAAAA,EAAAA,GAAaH,IAC1B,aAAE+vB,IAAiBC,EAAAA,EAAAA,GACvB,IACKzmC,EACH0kB,SACA5B,cAEFxJ,GAGF,OACErb,EAAAA,cAAC66B,EAAAA,GAAO,KAEN76B,EAAAA,cAACsoC,GAAa5+B,EAAAA,EAAAA,GAAA,GAAK6+B,EAAY,CAAEt0B,IAAK4Q,IACpC7kB,EAAAA,cAACyoC,EAAAA,EAAa,CAACC,UAAWrtB,EAAMtP,QAC/BnM,EACDI,EAAAA,cAACyoC,EAAAA,EAAa,CAACC,UAAWrtB,EAAMtP,SAIxC,IAAGwa,EAAA/lB,aAAA,uS,8EC/CI,MAAMmoC,EACXjpC,IAAA,IAAG0pB,MAAO9X,EAAU8tB,OAAQK,GAA8C//B,EAAA,OACzEmkC,IACC,MAAMza,EAAQ7nB,KAAK27B,IAAI5rB,EAAUuyB,EAAOza,OAClCgW,EAAS79B,KAAK27B,IAAIuC,EAAWoE,EAAOzE,QAC1C,OAAIyE,EAAOza,OAASA,GAASya,EAAOzE,QAAUA,EACrC,IAAKyE,EAAQza,QAAOgW,UAEtByE,CAAM,CACd,EAEI,SAAS+E,EAAkBxf,EAAegW,GAC/C,MAAO,CACLnC,MAAOr5B,OAAOilC,WAAazf,GAAS,EACpC1X,KAAM9N,OAAO+N,YAAcytB,GAAU,EACrChW,QACAgW,SAEJ,CAUO,MAkDMlnB,EACX7X,IAAA,IAAC,cACCyoC,EAAa,UACbz8B,EAAY,UAIbhM,EAAA,OACDoE,IAAwC,IAAvC,OAAE26B,EAAM,MAAEhW,GAAe3kB,EACxB,MAAMskC,EAAeD,EAAcE,wBACnC,MAAO,CACL/L,KAAM8L,EAAa9L,KACnBvrB,IACgB,WAAdrF,EACI08B,EAAar3B,IAAMq3B,EAAa3J,OAChC2J,EAAar3B,IAAM0tB,EACzBhW,QACAgW,SACD,CACF,EAEI,SAAS6J,EACdpF,EAAc7gC,GAEL,IADT,IAAEkmC,EAAM,QAAqB,IAAAlmC,EAAG,CAAC,EAACA,EAElC,MAAMmmC,EAAgBvlC,OAAOilC,WAAaK,EACpCE,EAAiBxlC,OAAO+N,YAAcu3B,EACtCjM,GAAOoM,EAAAA,EAAAA,GAAMH,EAAKC,EAAgBtF,EAAOza,MAAOya,EAAO5G,MACvDvrB,GAAM23B,EAAAA,EAAAA,GAAMH,EAAKE,EAAiBvF,EAAOzE,OAAQyE,EAAOnyB,KAC9D,OAAIurB,IAAS4G,EAAO5G,MAAQvrB,IAAQmyB,EAAOnyB,IAClC,CACLurB,OACAvrB,MACA0X,MAAOya,EAAOza,MACdgW,OAAQyE,EAAOzE,QAGZyE,CACT,C,+ECtHO,MCiCMyF,GApBTnzB,EAqBF,CACEiT,MAAO,GACP9X,SAAU,cACV8tB,OAAQ,GACRK,UAAW,eAxBX8J,EA0BDlkC,IAAO,CACN+jB,MAAO7nB,KAAKioC,KAAKj0B,WAAWC,iBAAiBnQ,GAAS+jB,QACtDgW,OAAQ79B,KAAKioC,KAAKj0B,WAAWC,iBAAiBnQ,GAAS+5B,WA1BxD/5B,IACC,MAAMokC,EAAQpkC,EAAQqkC,WAAU,GAChCD,EAAMtzB,MAAM+B,SAAW,WACvBuxB,EAAMtzB,MAAM8mB,KAAO,UACnBp4B,SAASqM,KAAKgb,YAAYud,GAE1BjnC,OAAO4G,OAAOqgC,EAAMtzB,MAAOA,GAC3B,MAAMwzB,EAAcJ,EAAGE,GAGvB,OADA5kC,SAASqM,KAAK04B,YAAYH,GACnBE,CAAW,GAdpBE,IACE1zB,EACAozB,EAgCG,MAAMO,EAAiB,SAC5B71B,EAA2BjR,GAWvB,IAVJ,QACE+mC,GAAU,QAQX,IAAA/mC,EAAG,CAAC,EAACA,EAEN,MAAOgnC,EAAeC,IAAoBpnC,EAAAA,EAAAA,UAAiB,KAC3DqmB,EAAAA,EAAAA,kBAAgB,KACd,MAAM7jB,EAAU4O,EAAItQ,QACpB,IAAK0B,GAAW2kC,EAAclmC,OAAS,EACrC,OAEF,MAAMqO,EAAOm3B,EAAejkC,GAEtB6kC,EAAmBF,EAAcG,IAAI,GACtCD,GAAqBE,EAAKC,QAAQH,EAAkB/3B,IACvD83B,EAAiB,CAAC93B,IAEpB,MAAMxP,EAAKiB,OAAOsiC,uBAAsB,KACtC,MAAMoE,EAAUhB,EAAejkC,GAC1B+kC,EAAKC,QAAQC,EAASn4B,IACzB83B,EAAiB,IAAID,EAAeM,GACtC,IAEF,MAAO,KACL1mC,OAAO2mC,qBAAqB5nC,EAAG,CAChC,GACA,CACDqnC,EAGA/1B,EAAItQ,UAEN,MAAM6mC,EAAUA,KACd,MAAMN,EAAmBF,EAAcG,IAAI,GAC3C,GAAIl2B,EAAItQ,SAAWumC,EAAkB,CACnC,MAAMO,EAAcnB,EAAer1B,EAAItQ,SAErC8mC,EAAYrL,SAAW8K,EAAiB9K,QACxCqL,EAAYrhB,QAAU8gB,EAAiB9gB,OAEvC6gB,EACED,EAActnC,KAAKgoC,GACjBA,IAAUR,EAAmBO,EAAcC,IAInD,GAEIC,EDtG4B,SAClCpB,EAAcvmC,GAEV,IADJ,QAAE2U,EAAU,UAAK,IAAA3U,EAAG,CAAC,EAACA,EAEtB,MAAM4nC,GAAQznC,EAAAA,EAAAA,QAAOomC,GACfsB,GAAmB1nC,EAAAA,EAAAA,QAAsB,MAW/C,OAVA+lB,EAAAA,EAAAA,kBAAgB,KACd0hB,EAAMjnC,QAAU4lC,CAAE,KAEpB9jC,EAAAA,EAAAA,YAAU,IACD,KAC4B,OAA7BolC,EAAiBlnC,SACnBE,aAAagnC,EAAiBlnC,QAChC,GAED,KACImnC,EAAAA,EAAAA,cAAY,KACgB,OAA7BD,EAAiBlnC,SACnBE,aAAagnC,EAAiBlnC,SAEhCknC,EAAiBlnC,QAAUC,OAAOgB,WAAWgmC,EAAMjnC,QAASgU,EAAQ,GACnE,GACL,CCgF2BozB,CAAqBP,GAsB9C,OApBA/kC,EAAAA,EAAAA,YAAU,KACR,MAAMJ,EAAU4O,EAAItQ,QACpB,GAAIomC,GAAW1kC,EAAS,CACtB,MAAM2lC,EAAmB,IAAIC,kBAAiB,KAC5CN,GAAkB,IAMpB,OAJAK,EAAiBjB,QAAQ1kC,EAAS,CAChC6lC,SAAS,EACTC,WAAW,IAEN,KACLH,EAAiBI,YAAY,CAEjC,IACC,CACDrB,EAGA91B,EAAItQ,UAEC,CAACqmC,EAAcG,IAAI,IAAM,CAAE/gB,MAAO,EAAGgW,OAAQ,GAAKoL,EAC3D,EAOaJ,EAAO,CAClBC,QAASA,CAAA3qC,EAAAW,KAAA,IACP,MAAE+oB,EAAK,OAAEgW,GAAc1/B,GACrB0pB,MAAOiiB,EAAQjM,OAAQkM,GAA4CjrC,EAAA,OAClE+oB,IAAUiiB,GAAUjM,IAAWkM,CAAO,G,eCpDtC,SAAStH,EACdlO,EAAkCp2B,GAwCjC,IAtCCmkC,OAAQ0H,EAAW,cACnB95B,EAAa,eACb+5B,EAAc,iBACdC,EAAoBl9B,IAAMA,GAAC,SAC3B+C,EAAQ,UACRmuB,EAAS,qBACT7tB,GAC+BlS,EAgCjC,MAAOmkC,EAAQ6H,IAAav2B,EAAAA,EAAAA,GAC1Bo2B,EACA95B,EAEA+5B,IAKKG,EAAalJ,GAAsBqH,EAAehU,EAAY,CACnEiU,QAASn4B,KAMJg6B,EAAoBC,IAAyBhpC,EAAAA,EAAAA,UAGjD,MAEGipC,EACS,YAAbx6B,EAAyBq6B,EAAYviB,MAAQ9X,GAAY,EACrDy6B,EACU,YAAdtM,EAA0BkM,EAAYvM,OAASK,GAAa,EACxDuM,GAAerD,EAAAA,EAAAA,IAAY,CAC/Bvf,MAAO0iB,EACP1M,OAAQ2M,IAEJjI,EAAiE,CACrEiD,iBAAmBzmC,IACjB,IAAKw1B,EAAWnyB,QACd,MAAM,IAAIkM,MACR,kGAGJ,MAAMg0B,EAASoI,EAAUnW,EAAWnyB,SAEpC,OADAkoC,EAAsB,CAAEhI,SAAQvjC,SACzBujC,CAAM,EAEfmD,aAAekF,IACbL,GAAuBD,IACrB,GAAIA,EAAoB,CACtB,MAAM,KAAEtrC,GAASsrC,EACjB,MAAO,CACLtrC,OACAujC,OAAQ4H,EAAiBS,EAAe5rC,IAAS4rC,EAErD,CACA,OAAON,CAAkB,GACzB,EAEJ9E,kBAAmBA,KACb8E,GAAsB9V,EAAWnyB,SAEnC+nC,EAAUO,EAAUnW,EAAWnyB,SAAUioC,EAAmBtrC,MAE9DurC,EAAsB,KAAK,EAE7Bv6B,SAAUw6B,EACVrM,UAAWsM,GAGPI,EAAgBP,GAAoB/H,QAAUA,EAC9CuI,GAAwBxD,EAAAA,EAAAA,KAC5BS,EAAAA,EAAAA,GACEyC,EACAloC,OAAOilC,WACPhF,GAAQza,OAASuiB,EAAYviB,QAE/BigB,EAAAA,EAAAA,GACE0C,EACAnoC,OAAO+N,YACPkyB,GAAQzE,QAAUuM,EAAYvM,SAGlC,MAAO,CACLiN,WACyBnmC,MAAvBimC,GAAelP,MAA2C/2B,MAAtBimC,GAAez6B,IACrD46B,MAC0BpmC,MAAxBimC,GAAe/iB,OAA+CljB,MAAzBimC,GAAe/M,OACtDyE,OAAQmI,EAAa,IAMhBI,KACCD,IAAiB7nC,EAAAA,EAAAA,IAAQuB,GAAmB,MAATA,GAAesmC,KAExDpI,0BAA2BtB,EAC3BqB,iCAEJ,CAEA,SAASmI,EAAU5mC,GACjB,MAAM,KAAE43B,EAAI,IAAEvrB,EAAG,MAAE0X,EAAK,OAAEgW,GAAW/5B,EAAQ2jC,wBAC7C,MAAO,CAAE/L,OAAMvrB,MAAK0X,QAAOgW,SAC7B,C,+WChMA,MAAMmN,EAAuBt8B,EAAAA,GAAOI,GAAI;;;EA0B3Bm8B,EAA0B,GAC1BC,EAA2B,GAO3BC,EAASA,CAAAhtC,EAYpB8Y,KACiB,IAXjB,aACEhH,EAAe,OAAM,eACrBm7B,GAAiB,EAAK,YACtBC,EAAc,OAAM,SACpBt7B,EAAWk7B,EAAuB,UAClC/M,EAAYgN,EACZxgC,YAAa4gC,EACbrgC,QAASsgC,KACN/qC,GACQrC,EAGb,MAAM2jC,GAAephC,EAAAA,EAAAA,YAAW8qC,EAAAA,GAC1B9gC,EAAc4gC,GAAmBxJ,EAAap3B,YAC9CO,EAAUA,KACdsgC,MACAzJ,EAAa72B,WAAW,EAEpByH,GAAM0E,EAAAA,EAAAA,GAA6BH,GACnCyjB,EAAgC52B,IAEjC4G,GAAaC,UAAUvI,SAASm7B,SAASz5B,MACzC62B,EAAAA,EAAAA,GAAoBjoB,EAAItQ,QAAS0B,IAGhC,aAAE40B,IAAiB4B,EAAAA,EAAAA,GACvB,CACEvV,QAAQ,EACR9Z,UACAsvB,mBAAoB6Q,EACpB1Q,gCAEFhoB,IAMF+4B,EAAAA,EAAAA,GAAmB,CACjB/4B,MACAg5B,uBAAyBtsC,KAEpBgsC,GACD1Q,EAA6Bt7B,EAAE2E,SAE/BkH,GACF,EAGF0gC,kBAAmBA,UAGrB/Q,EAAAA,EAAAA,GAAiB,CACf91B,WAA4B,SAAhBumC,GAA0B3gC,EAAc2gC,IAGtD,MAAM,OAAE/I,EAAM,WAAEwI,EAAU,+BAAEvI,IAC1BE,EAAAA,EAAAA,GAA2B/vB,EAAK,IAC3BlS,EACHuP,WACAmuB,YACA7tB,sBAAsB,IAEpBu7B,EACJlhC,GAAaC,UAAUvI,UAAY0oC,GAC/Be,EAAAA,EAAAA,IACEl1B,EAAAA,EAAAA,IAAS,CACP4wB,cAAe78B,EAAYC,UAAUvI,QACrC0I,UAAWJ,EAAYI,YAEzB48B,EAAAA,GALFmE,CAMEvJ,GACFA,GAECnJ,EAAUkH,IAAa/+B,EAAAA,EAAAA,WAAS,IACjC,iBAAE4sB,IAAqBC,EAAAA,EAAAA,GAAe,CAC1CC,oBAAqBiS,KAEjB,eAAE7T,IAAmBC,EAAAA,EAAAA,GACzB,CACET,qBAAqB,GAEvBtZ,IAEI,oBAAEo5B,IAAwBC,EAAAA,EAAAA,MAE1B,YAAE5J,EAAW,WAAEC,GC1HhB,SACL5hC,EACAkS,GAEA,IAAI,KAAE1C,EAAO,UAAaxP,EACtBwrC,GAA8BC,EAAAA,EAAAA,MAYlC,OAXAD,EAAUxrC,EAAM,mBAAgBmE,EAAYqnC,GAG5C9nC,EAAAA,EAAAA,YAAU,KACJwO,EAAItQ,UAAYsQ,EAAItQ,QAAQm7B,SAASj6B,SAASk6B,iBAChDC,EAAAA,EAAAA,GAAY/qB,EAAItQ,QAClB,GACC,CAACsQ,KAEJw5B,EAAAA,EAAAA,MAEO,CACL/J,YAAa,KACR3qB,EAAAA,EAAAA,GAAehX,EAAO,CAAEyuB,WAAW,IACtCjf,OACA2K,UAAW,EACX,kBAAmBna,EAAM,oBAAsBwrC,GAEjD5J,WAAY,CACVhhC,GAAI4qC,GAGV,CD8FsC3J,CAAU7hC,EAAOkS,GAM/CopB,GAAS3C,EAAW,EAAI,EAE9B,OACE16B,EAAAA,cAAC66B,EAAAA,EAAO,KACN76B,EAAAA,cAACskC,EAAAA,EAA8BR,EAE7B9jC,EAAAA,cAACka,EAAAA,GAAU,CAACwhB,cAAY,GACtB17B,EAAAA,cAAC0tC,EAAAA,GAAoBhkC,EAAAA,EAAAA,GAAA,CACnBuK,IAAKA,EACLkC,MAAO,IACFg3B,EACH9P,WAEFnhB,UAAW,GEtK6B,WAAoB,IAAD,IAAA/H,EAAAC,UAAAtQ,OAAf6pC,EAAU,IAAAt/B,MAAA8F,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAVq5B,EAAUr5B,GAAAF,UAAAE,GAChE,OAAO0E,EAAAA,EAAAA,MACF20B,EAAWjrC,KAAKX,IACjBuC,EAAAA,EAAAA,IAAQuB,GAAmBK,MAATL,GAAoB9D,GAAS,MAGrD,CFiKgB6rC,CACFne,EACA1B,EACAsf,EACApT,EACAoJ,EAAapJ,cAAgB,CAAC,EAC9ByJ,GACA3qB,EAAAA,EAAAA,GAAehX,KAGjB/B,EAAAA,cAAC6tC,EAAAA,EAAajoC,SAAQ,CACpBC,MAAO,CACL60B,WACA+J,QAA0B,SAAjBjzB,EACTmyB,eAGF3jC,EAAAA,cAACusC,EAAoB,KAAExqC,EAAMnC,UACX,QAAjB4R,GAA0BxR,EAAAA,cAAC0kC,EAAAA,EAAoB,UAKhD,EAID14B,EAAQxJ,OAAO4G,OAAOpJ,EAAAA,WAAiB0sC,GAAS,CAC3DhH,OAAQoI,EAAAA,EACRxhC,OAAQyhC,EAAAA,EACRprB,KAAMqrB,EAAAA,IACLtB,EAAAlsC,aAAA,k6D,yDG3MI,MAAMqtC,GAAepM,EAAAA,EAAAA,eAIzB,CAAE/G,UAAU,EAAO+J,SAAS,EAAMd,WAAY,CAAC,IAMrCoJ,GAAyBtL,EAAAA,EAAAA,eAIpC,CAAC,E,uGCTH,MAAMwM,EAAoBh+B,EAAAA,GAAOI,GAG9B;;;;;;gBAMa3Q,IAAA,IAAC,YAAEwuC,GAAaxuC,EAAA,OAAKwuC,GAAe,SAAS;;;WAGlD7tC,IAAA,IAAC,MAAE2S,EAAK,OAAEgL,GAAQ3d,EAAA,OACzB2d,EACIhL,EAAMC,MACJ,gCACAD,EAAMqP,aAAagQ,iBAErBrf,EAAMC,MACJ,kCACAD,EAAMqP,aAAa8rB,wBACpB;sBACa1pC,IAAA,IAAC,MAAEuO,EAAK,OAAEgL,GAAQvZ,EAAA,OACpCuZ,EACIhL,EAAMC,MAAM,gCAAiC,WAC7CD,EAAMC,MAAM,kCAAoC,UAAS;EAepD66B,EAAcnpC,IAUpB,IAVqB,SAC1B/E,EAAQ,YACRsuC,EAAW,UACXt3B,EAAS,MACTT,GAMDxR,EACC,MAAM,SAAE+1B,EAAQ,QAAE+J,EAAO,WAAEd,IAAe1hC,EAAAA,EAAAA,YAAW4rC,EAAAA,GAC/CO,EAAe,SAAC7kC,GAA4C,YAAL,IAAvCA,IAAAA,EAA0C,CAAC,GAC/DvJ,EAAAA,cAACiuC,GAAiBvkC,EAAAA,EAAAA,GAAA,CAChBsU,OAAQ0c,EACRwT,YAAaA,EACbt3B,UAAWA,EACXT,MAAOA,IACH6C,EAAAA,EAAAA,GAAW2qB,EAAYp6B,IAE1B3J,EACiB,EAEtB,OAAO6kC,EACLzkC,EAAAA,cAAC6R,EAAAA,EAAiB,MACf2B,IAAA,IAAC,gBAAEvB,GAAiBuB,EAAA,OAAK46B,EAAan8B,EAAgB,IAGzDm8B,GACD,EACDN,EAAAttC,aAAA,utB,kFCzEF,MAAM6tC,EAAoBp+B,EAAAA,GAAOI,GAAI;;;;EAK/Bi+B,EAA0Br+B,EAAAA,GAAOI,GAAI;;EAGrCk+B,EAA2Bt+B,EAAAA,GAAOI,GAAI;;;;;;;;EAStCm+B,EAA0Bv+B,EAAAA,GAAOI,GAAI;;EAOpC,SAAS09B,EAAWruC,GAiBvB,IAjBwB,OAC1BgN,EAAM,OACN84B,EAAM,QACNl6B,GAcD5L,EACC,OACEM,EAAAA,cAACquC,EAAiB,KACf3hC,GACC1M,EAAAA,cAACsuC,EAAuB,KACH,iBAAX5hC,EACN1M,EAAAA,cAAC8tC,EAAAA,EAAW,KAAEphC,GAEdA,GAIN1M,EAAAA,cAACuuC,EAAwB,KAAEjjC,GAC1Bk6B,GACCxlC,EAAAA,cAACwuC,EAAuB,KACH,iBAAXhJ,EACNxlC,EAAAA,cAACguC,EAAAA,EAAe,KAAExI,GAElBA,GAMZ,CAACuI,EAAAvtC,aAAA,ipB,oEC9CD,MAMMiuC,EAAgBzuC,EAAAA,cAAqC,CACzD2L,KAPuBkL,KACvB,MAAM,IAAIhH,MACR,yGACD,IAUUjE,EAAkBA,KAAuB3J,EAAAA,EAAAA,YAAWwsC,GAYpDC,EAA4ChvC,IAAmB,IAAlB,SAAEE,GAAUF,EACpE,MAAOivC,EAAQC,IAAa/rC,EAAAA,EAAAA,UAA8B,IACpDkjC,GAAY5iC,EAAAA,EAAAA,QAAe,GAE3BsU,GAAMC,EAAAA,EAAAA,UAAyB,KAkB5B,CACL/L,KAlBqCkjC,IACrC9I,EAAUpiC,UACV,MAAMoI,EAAQA,KACZ6iC,GAAWE,GACTA,EAAcxqC,QAAQyqC,GAAWA,IAAWC,KAC7C,EAEGA,EACJhvC,EAAAA,cAAC+sC,EAAAA,EAAuBnnC,SAAQ,CAC9BgF,IAAKm7B,EAAUpiC,QACfkC,MAAO,CAAE2G,QAAST,IAEA,mBAAV8iC,EAAuBA,EAAM,CAAE9iC,UAAW8iC,GAGtDD,GAAWE,GAAkBA,EAAcxnC,OAAO0nC,IAAc,KAKjE,IAEH,OACEhvC,EAAAA,cAACyuC,EAAc7oC,SAAQ,CAACC,MAAO4R,GAC5B7X,EACA+uC,EACsB,EAE3BD,EAAAluC,aAAA,mN,iHCxDK,MAAMyuC,EAAejvC,EAAAA,YAAiB,SAAqBN,EAEhE8Y,GACC,IAFD,UAAEnM,EAAS,SAAEzM,EAAQ,MAAEivC,KAAU9sC,GAA0BrC,EAG3D,MAAM2b,GAAQooB,EAAAA,EAAAA,GAAuB1hC,GAC/BkkB,GAAatN,EAAAA,EAAAA,GAAaH,IAC1B,aAAEyhB,EAAY,aAAE+D,IAAiBkR,EAAAA,EAAAA,GACrC,CAAE5uC,KAAMyB,EAAMzB,MAAQ,QACtB+a,EACA4K,GAEF,OACEjmB,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACmvC,EAAAA,GAAczlC,EAAAA,EAAAA,GAAA,CAACuK,IAAKgS,GAAgB+X,GAClCp+B,GAEFyb,EAAMiL,QACLtmB,EAAAA,cAAC+sC,EAAAA,EAAuBnnC,SAAQ,CAC9BC,MAAO,CACLo0B,eACAhuB,YAAa,CACXC,UAAW+Z,EACX5Z,aAEFG,QAAS6O,EAAMtP,QAGC,mBAAV8iC,EAAuBA,EAAM,CAAE9iC,MAAOsP,EAAMtP,QAAW8iC,GAKzE,IAAGI,EAAAzuC,aAAA,2yB,kDCxDI,MAAMktC,E,SAAuBz9B,GAAOI,GAAI;;;;sBAIzB3Q,IAAA,IAAC,MAAEsT,GAAOtT,EAAA,OAAKsT,EAAMC,MAAM,eAAe;WACrD5S,IAAA,IAAC,MAAE2S,GAAO3S,EAAA,OAAK2S,EAAMC,MAAM,eAAe;;IAEjDotB,EAAAA;oCCJG,MAAM2N,E,SAAkB/9B,GAAOI,GAAI;;;;;;gBAM1B3Q,IAAA,IAAC,MAAEsT,GAAOtT,EAAA,OACtBsT,EAAMC,MACJ,8BACAD,EAAMC,MAAM,0CACb;WACM5S,IAAA,IAAC,MAAE2S,GAAO3S,EAAA,OACjB2S,EAAMC,MACJ,8BACAD,EAAMC,MAAM,0CACb;;;;;;;iJC+DE,MAAMm8B,EAAc1vC,IAgBkB,IAhBjB,MAC1BmG,EAAQ,EAAC,SACTwpC,EAAW,IAAG,SACdC,EAAW,EAAC,KACZ9yB,EAAI,aACJ+yB,EAAe,MAAK,QACpBC,EAAO,iBACPC,EAAgB,OAChBv2B,EAAM,MACNkQ,EAAK,MACLsmB,EAAK,UACL94B,EAAS,MACTT,EAAK,WACLw5B,EAAU,eACVC,EAAiBzuC,QAAQwuC,MACtB5tC,GACcrC,EACjB,MAAM,iBAAEmwC,EAAgB,WAAErqB,IAAesqB,EAAAA,EAAAA,GAAe,IACnD/tC,EACHgZ,MAAOyB,EACP3W,QACA8pC,aACAN,WACAC,aAEIS,GAAqBlqC,EAAQwpC,EAAf,KAA0BhjB,QAAQ,IAC/C2jB,EAAeC,IAAoBptC,EAAAA,EAAAA,UAAwB,KAC3DkH,EAASmmC,IAAcrtC,EAAAA,EAAAA,UAAwB,IAEhDstC,GAAsCz4B,EAAAA,EAAAA,UAC1C,MACEu4B,mBACAC,gBAEF,IAEIn1B,EACJ/a,EAAAA,cAACowC,EAA2B5qB,EAAahJ,GAErC6zB,EAAmBb,EAAUzlC,GAAWimC,GAAiBR,EAAU,KACzE,OACExvC,EAAAA,cAACswC,EAA0B,CAACn6B,MAAOA,EAAOS,UAAWA,GACjC,QAAjB24B,GAA0Bx0B,EAC3B/a,EAAAA,cAACuwC,EAA8B,CAC7Bb,MAAOA,EACPc,aAAcrvC,QAAQqb,IAA0B,QAAjB+yB,EAC/BkB,gBAAiBtvC,QAAQkvC,IAEP,SAAjBd,GAA2Bx0B,EAC5B/a,EAAAA,cAAC0wC,GAAsBhnC,EAAAA,EAAAA,GAAA,CACrByM,MAAO,CAAEiT,UACLymB,EAAgB,CACpBc,cAAe5uC,EAAMqa,mBAEnBra,EAAMqa,iBACNpc,EAAAA,cAAC4wC,EAAyB,CAACz6B,MAAO,CAAEiT,MAAQ,GAAE2mB,SAGjDH,GAAkB5vC,EAAAA,cAAA,YAAO2vC,GAAe,GAAEI,MAC3C/vC,EAAAA,cAAC6wC,EAAmBjrC,SAAQ,CAACC,MAAOsqC,GACjCj3B,IAGLlZ,EAAAA,cAAC8wC,EAAwB,KAAET,GAC3BrwC,EAAAA,cAAC8wC,EAAwB,KAAErB,GACA,EAI3BoB,EAAqB7wC,EAAAA,cACzB,MAGIswC,EAA6BrgC,EAAAA,GAAOI,GAAI;WACnChQ,IAAA,IAAC,MAAE2S,GAAO3S,EAAA,OAAK2S,EAAMqP,aAAagQ,eAAe;;EAItDke,EAAiCtgC,EAAAA,GAAOI,GAI3C;;;SAGM5L,IAAA,IAAC,MAAEirC,GAAOjrC,EAAA,OAAMirC,EAAQ,SAAW,UAAU;;;;;gBAKtC/qC,IAAA,IAAC,aAAE6rC,GAAc7rC,EAAA,OAAK6rC,GAAgB,UAAU;mBAC7Ch9B,IAAA,IAAC,gBAAEi9B,GAAiBj9B,EAAA,OAAKi9B,GAAmB,SAAS;EAGlEL,EAAyBngC,EAAAA,GAAOI,GAAI;;;;EAMpCygC,EAA2B7gC,EAAAA,GAAOI,GAAI;WACjCqD,IAAA,IAAC,MAAEV,GAAOU,EAAA,OAAKV,EAAMqP,aAAaoG,qBAAqB;;;;;;EAQ5DioB,EAAyBzgC,EAAAA,GAAOI,GAAiC;;;;;;;;;;gBAUvD+I,IAAA,IAAC,MAAEpG,GAAOoG,EAAA,OACtBpG,EAAMC,MACJ,yBACAD,EAAME,KAAO,gBAAkB,mBAChC;IACDoG,IAAA,IAAC,cAAEq3B,GAAer3B,EAAA,OAClBq3B,GACAhoB,EAAAA,EAAI;;;UAGEooB;UACAC;UACAD;;;yBAGeE;KACpB;EAGCF,EAA6Bx3B,IAAA,IAAC,MAAEvG,GAAyBuG,EAAA,OAC7DvG,EAAMC,MAAM,sCAAsC,EAC9C+9B,EAA2Bx3B,IAAA,IAAC,MAAExG,GAAyBwG,EAAA,OAC3DxG,EAAMC,MAAM,oCAAoC,EAE5Cg+B,GAAmCC,EAAAA,EAAAA,IAAS,+DAS5CN,EAA4B3gC,EAAAA,GAAOI,GAAI;;gBAE7BoJ,IAAA,IAAC,MAAEzG,GAAOyG,EAAA,OACtBzG,EAAMC,MACJ,4BACAD,EAAME,KAAO,mBAAqB,mBACnC;EAWE,SAASi+B,EAAwBC,EAEtCn9B,GACC,IAFD,QAAErK,EAAO,aAAEynC,GAA0CD,EAGrD,MAAM,YAAEx4B,IAAgBC,EAAAA,EAAAA,GACtB,CACEjP,UACA6O,YAAa,OACb8U,qBAAqB,EAErBD,qBAAqB,GAEvBrZ,GAEI7N,GAAUnE,EAAAA,EAAAA,YAAW4uC,IACrB,WAAEpX,EAAU,UAAE6X,IAAc5X,EAAAA,EAAAA,GAAS,CAAC,GAI5C,OAHAj0B,EAAAA,EAAAA,YAAU,KACRW,GAAS8pC,WAAWoB,EAAYD,EAAe,KAAK,GACnD,CAACA,EAAcC,IACX,CACL14B,aAAaI,EAAAA,EAAAA,GAAWJ,EAAa6gB,GAEzC,CAKO,SAAS8X,EAA6BC,EAE3Cv9B,GACC,IAFD,OAAEw9B,KAAW1vC,GAAyDyvC,EAGtE,MAAMprC,GAAUnE,EAAAA,EAAAA,YAAW4uC,GAI3B,OAHAprC,EAAAA,EAAAA,YAAU,KACRW,GAAS6pC,iBAAiBwB,EAAS,SAAW,KAAK,GAClD,CAACA,IACGN,EAAyBpvC,EAAOkS,EACzC,CAeAm7B,EAAYsC,UAAYpB,EACxBlB,EAAYuC,MAAQvB,EACpBhB,EAAYwC,cAAgBrB,EAC5BnB,EAAYyC,MAAQnB,EACpBtB,EAAY0C,SAAWlB,EACvBxB,EAAY2C,QAAUjB,EAAyB1B,EAAA5uC,aAAA,4/F,iFCtSxC,MAAMwxC,EAAwBtyC,IAGA,IAHC,MACpC6iB,EAAK,QACL3Y,GAC6BlK,EAC7B,MAAMuU,GAAM9Q,EAAAA,EAAAA,QAAwB,OAC9B,YAAEyV,IAAgBu4B,EAAAA,EAAAA,IACtB,CAAEvnC,UAASynC,aAAc,UACzBp9B,GAEF,OACEjU,EAAAA,cAACiW,EAAAA,GAAqBvM,EAAAA,EAAAA,GAAA,CACpBuK,IAAKA,GACD2E,EAAW,CACf/O,KAAO,eAAc0Y,EAAQ,QAAU,SACvCoH,UAAY,eAAcpH,EAAQ,QAAU,kBAC5C,EAEJyvB,EAAAxxC,aAAA,4Y,qECDK,MAAMyxC,EAAgBvyC,IAAA,IAAC,SAC5BE,EAAQ,KACRuS,EAAI,SACJotB,EAAQ,iBACR2S,EAAmB,WAChBnwC,GACgBrC,EAAA,OACnBM,EAAAA,cAACmyC,EAAAA,GAAiBzoC,EAAAA,EAAAA,GAAA,GACU,UAArBwoC,EACD,CAAEE,UAAWxyC,EAAUyyC,UAAWlgC,EAAMmgC,cAAe/S,GACvD,CAAEgT,SAAU3yC,EAAUq/B,SAAU9sB,EAAMqgC,aAAcjT,GACpDx9B,GACJ,EACFkwC,EAAAzxC,aAAA,+qC,iFCnCK,MAAM6nC,EAAoD3oC,IAK1D,IAL2D,SAChE6/B,EAAQ,YACRyI,EAAW,gBACXD,KACGhmC,GACJrC,EACC,MAAM,aAAE+yC,IAAiBC,EAAAA,EAAAA,IAAiB,CACxCnT,WACAyI,cACAD,oBAEF,OAAO/nC,EAAAA,cAAC2yC,EAAAA,GAAejpC,EAAAA,EAAAA,GAAA,CAAC+oC,aAAcA,GAAkB1wC,GAAS,EACjEsmC,EAAA7nC,aAAA,qO,qECfF,MAAMoyC,EAA0B3iC,EAAAA,GAAOI,IAAG+H,WAAA,CAAAC,YAAA,6CAAAC,YAAA,eAAVrI,CAAU,4DAQpC4iC,EAA8B5iC,EAAAA,GAAOI,IAAG+H,WAAA,CAAAC,YAAA,iDAAAC,YAAA,eAAVrI,CAAU,kEAKlCvQ,IAAA,IAAC,OAAEy0B,GAAQz0B,EAAA,MAAM,GAAEy0B,UAAe,IACnC9zB,IAAA,IAAC,WAAEyyC,GAAYzyC,EAAA,MAAM,eAAcyyC,MAAe,IAEnDruC,IAAA,IAAC,WAAEquC,GAAYruC,EAAA,MAAM,IAAGquC,EAAa,KAAK,IAQvCC,EAA0DpuC,IAQhE,IARiE,aACtEquC,EAAe,GAAE,WACjBC,EAAU,KACV9gC,EAAO,EAAC,OACRgiB,EAAS,MAAK,SACdv0B,EAAQ,MACRuW,EAAQ,CAAC,EAAC,aACVs8B,GACD9tC,EACC,OACE3E,EAAAA,cAAC4yC,GAAuBlpC,EAAAA,EAAAA,GAAA,GAClB+oC,EAAY,CAChBt8B,MAAO,IAAKA,EAAO88B,aAAY7pB,MAAOjX,KAErCvS,EACDI,EAAAA,cAAC6yC,EAA2B,CAACC,WAAYE,EAAc7e,OAAQA,IACvC,EAE5B4e,EAAAvyC,aAAA,se,+ECvCK,MAAM2nC,EAAoDzoC,IAK1D,IAL2D,SAChE6/B,EAAQ,YACRyI,EAAW,gBACXD,KACGhmC,GACJrC,EACC,MAAM,aAAE+yC,IAAiBS,EAAAA,EAAAA,IAAe,CACtC3T,WACAyI,cACAD,oBAEF,OAAO/nC,EAAAA,cAAC+yC,EAAAA,GAAiBrpC,EAAAA,EAAAA,GAAA,CAAC+oC,aAAcA,GAAkB1wC,GAAS,EACnEomC,EAAA3nC,aAAA,qO,gFCZK,MAAM0nC,EAAqDxoC,IAK3D,IAL4D,SACjE6/B,EAAQ,YACRyI,EAAW,gBACXD,KACGhmC,GACJrC,EACC,MAAM,aAAE+yC,IAAiBU,EAAAA,EAAAA,IAAgB,CACvC5T,WACAyI,cACAD,oBAEF,OAAO/nC,EAAAA,cAAC+yC,EAAAA,GAAiBrpC,EAAAA,EAAAA,GAAA,CAAC+oC,aAAcA,GAAkB1wC,GAAS,EACnEmmC,EAAA1nC,aAAA,uO,iFCZK,MAAM4nC,EAAiD1oC,IAKvD,IALwD,SAC7D6/B,EAAQ,YACRyI,EAAW,gBACXD,KACGhmC,GACJrC,EACC,MAAM,aAAE+yC,IAAiBW,EAAAA,EAAAA,IAAc,CACrC7T,WACAyI,cACAD,oBAEF,OAAO/nC,EAAAA,cAAC2yC,EAAAA,GAAejpC,EAAAA,EAAAA,GAAA,CAAC+oC,aAAcA,GAAkB1wC,GAAS,EACjEqmC,EAAA5nC,aAAA,kO,sECfF,MAAM6yC,EAAwBpjC,EAAAA,GAAOI,IAAG+H,WAAA,CAAAC,YAAA,yCAAAC,YAAA,gBAAVrI,CAAU,sDAOlCqjC,EAA4BrjC,EAAAA,GAAOI,IAAG+H,WAAA,CAAAC,YAAA,6CAAAC,YAAA,gBAAVrI,CAAU,iEAKhCvQ,IAAA,IAAC,OAAEy0B,GAAQz0B,EAAA,MAAM,GAAEy0B,UAAe,IAClC9zB,IAAA,IAAC,WAAEyyC,GAAYzyC,EAAA,MAAM,eAAcyyC,MAAe,IAErDruC,IAAA,IAAC,WAAEquC,GAAYruC,EAAA,MAAM,IAAGquC,EAAa,KAAK,IAQtCH,EAAsDhuC,IAAA,IAAC,aAClEquC,EAAe,GAAE,WACjBC,EAAU,KACV9gC,EAAO,EAAC,OACRgiB,EAAS,MAAK,aACdse,EAAY,SACZ7yC,EAAQ,MACRuW,EAAQ,CAAC,GACVxR,EAAA,OACC3E,EAAAA,cAACqzC,GAAqB3pC,EAAAA,EAAAA,GAAA,GAChB+oC,EAAY,CAChBt8B,MAAO,IAAKA,EAAO88B,aAAY7T,OAAQjtB,KAEtCvS,EACDI,EAAAA,cAACszC,EAAyB,CAACR,WAAYE,EAAc7e,OAAQA,IACvC,EACxBwe,EAAAnyC,aAAA,ke,8EC/BF,MAAM+yC,EAAaA,CACjBzhB,EACA0hB,EAAe9zC,KAEX,IADJ,gBAAEqoC,EAAe,SAAExI,EAAQ,YAAEyI,GAA8BtoC,EAa3D,MAAO,CACL+yC,cAZYxL,EAAAA,EAAAA,GAAQ,CACpBn1B,cAAe,EACfo1B,YAAaA,IAAMa,KAAqB,EACxCT,UAAWA,IAAMU,MACjBb,OAAQ9mC,IAAA,IAAC,SAAEgnC,EAAQ,WAAED,GAAY/mC,EAAA,OAC/Bk/B,EACE6H,GACGoM,GAAU,EAAI,GACbnM,EAAyB,eAAhBvV,EAA+B,IAAM,KACnD,IAIJ,EAGUohB,EAAkBnxC,GACtBwxC,EAAW,cAAc,EAAMxxC,GAG3BoxC,EAAmBpxC,GACvBwxC,EAAW,cAAc,EAAOxxC,GAG5BqxC,EAAiBrxC,GACrBwxC,EAAW,YAAY,EAAMxxC,GAGzB2wC,EAAoB3wC,GACxBwxC,EAAW,YAAY,EAAOxxC,E,gOCkBvC,MAAMkZ,GAAchL,EAAAA,EAAAA,IAAOkf,EAAAA,EAAO;;;;;;;;;;EA+BrBskB,EAAczzC,EAAAA,YAAiB,SAAoBN,EAgB9D8Y,GACC,IAhBD,YACE6W,EAAW,WACXC,EAAU,cACVokB,EAAa,QACbC,EAAO,SACPC,EAAQ,sBACRC,EAAqB,mBACrBC,EAAqB,gBACrBjuC,MAAOkuC,EAAS,aAChB5vB,EAAe,GAAE,SACjBiM,EAAQ,KACR9vB,EAAO,SACPmkB,SAAUC,KACP3iB,GACcrC,EAGnB,MAAOmG,EAAOmuC,IAAY7+B,EAAAA,EAAAA,GACxB4+B,EACA5vB,EACAiM,GAEI6jB,GAAoBt7B,EAAAA,EAAAA,GAAaH,GACjCiM,GAAW9L,EAAAA,EAAAA,GAAa+L,IACvBwvB,EAAqBC,IAAwBtxC,EAAAA,EAAAA,WAAS,GACvDuxC,EAA4C,CAChDzxC,GAAImF,EAAAA,EAAeS,oBACnBoB,MAAOmqC,EACPxtC,gBAAiBA,KACf6tC,GAAqB,EAAK,GAKxBp0C,GAAcD,EAAAA,EAAAA,KACdu0C,EAAaX,EACjB1zC,EAAAA,cAACwuB,EAAAA,EAAW,CACVlI,OAAQ4tB,EACRzlB,aAAc0lB,EACdrW,qBAAsBmW,EACtB5lB,WAAYhuB,IAAA,IAAC,UAAEm3B,GAAWn3B,EAAA,OACxBL,EAAAA,cAACyK,EAAAA,IAAIf,EAAAA,EAAAA,GAAA,GACC8tB,EAAS,CACb/qB,UAAU,QACV1J,SAAW6H,IACT,MAAM0pC,EACJZ,EAAca,SAAU,GAAE3pC,IAAMkgB,MAAM,KAAK,UACrB5kB,IAApBouC,IACFN,EAASM,GACTT,IAAwBS,EAAiBzuC,GACzC4e,EAAS9gB,SAASqY,QACpB,IAGD03B,EAAchxC,KAAI,CAAC8xC,EAAa3+B,IAC/B7V,EAAAA,cAACkL,EAAAA,EAAI,CAACN,IAAM,GAAEiL,KAAS2+B,KAAgBA,KAEpC,IAGR,CAACzW,EAAkB9pB,IAClBjU,EAAAA,cAAC8J,EAAAA,EAAc,CACbC,QACE/J,EAAAA,cAACgK,EAAAA,EAAa,CACZC,WAAY6pC,EACZ9vC,SAAUjE,EAAY+H,EAAAA,EAAeS,yBAIvC6d,GACApmB,EAAAA,cAACkS,EAAAA,IAAYxI,EAAAA,EAAAA,GAAA,IACPsP,EAAAA,EAAAA,GAAWoN,EAAqB2X,GAAiB,CACrD9pB,IAAKA,EACLpK,KAAK,gCACL0H,KAAK,SACL,aAAYuiC,SAOtB9zC,EAAAA,cAACkS,EAAAA,GAAY,CAACrI,KAAK,uBAEf+1B,EAAQA,KACZoU,EAAS,IACTL,IAAU9tC,EAAM,EAEZ0V,GAAavC,EAAAA,EAAAA,GAA2CjX,EAAO,CACnEkS,IAAKggC,EACLxvB,WACA5e,QACAvF,OACA8vB,SAAW7sB,IACTywC,EAASzwC,EAAM+B,OAAOO,MAAM,EAE9BwpB,YACErvB,EAAAA,cAAAA,EAAAA,SAAA,KACGq0C,EACAhlB,GAGLC,WACEtvB,EAAAA,cAAAA,EAAAA,SAAA,KACG6F,GACC7F,EAAAA,cAACiW,EAAAA,EAAqB,CACpBC,QAAS0pB,EACTruB,KAAK,SACL,aAAW,eACX1H,KAAK,gBACL8f,UAAU,yBAGb2F,GAGLjsB,UAAYE,IACNA,EAAMG,SAGQ,UAAdH,EAAMqH,IACRgpC,IAAWrwC,EAAMigB,cAAc3d,OACR,WAAdtC,EAAMqH,KACfg1B,IACF,IAGJ,OAAI8T,EAEA1zC,EAAAA,cAAC8B,EAAAA,GAAe,CAACI,QAAS,CAACkyC,KACxB3vC,IAAA,IAAC,qBAAE3B,GAAsB2B,EAAA,OACxBzE,EAAAA,cAACib,GAAgBjC,EAAAA,EAAAA,GAAWuC,EAAYzY,GAAyB,IAKlE9C,EAAAA,cAACib,EAAgBM,EAC1B,IAAGk4B,EAAAjzC,aAAA,i7G,uGC3NH,MAAMi0C,GAAmBxkC,EAAAA,EAAAA,IAAOiC,EAAAA,GAAc;;EAIxCwiC,EAAyBzkC,EAAAA,GAAOa,IAA4B;;;;gBAIlDpR,IAAA,IAAC,MAAEsT,EAAK,QAAE2hC,GAASj1C,EAAA,OAC/Bi1C,EACI3hC,EAAMC,MACJ,8BACAD,EAAME,KAAO,UAAY,WAE3BF,EAAMC,MACJ,uBACD;WACE5S,IAAA,IAAC,MAAE2S,GAAO3S,EAAA,OACjB2S,EAAMC,MACJ,uBACD;;;sBAGiBxO,IAAA,IAAC,MAAEuO,GAAOvO,EAAA,OAAKuO,EAAM4hC,iBAAgB,GAAM,EAAM;mBACpDjwC,IAAA,IAAC,MAAEqO,GAAOrO,EAAA,OACvBqO,EAAMnN,MAAM,kBAA+B,GAAK,CAAC;EAEjDgvC,EAAmB5kC,EAAAA,GAAOa,IAAK;;;EAUxBkvB,EAAmBhgC,EAAAA,YAG9B,CAAAwT,EAAqCS,KAAS,IAA7C,OAAE+J,EAAM,MAAEmD,EAAK,SAAEvhB,EAAQ,MAAEggC,GAAOpsB,EACnC,MAAMshC,GAAiB3xC,EAAAA,EAAAA,QAAoB,OACrC,YAAEyV,IAAgBC,EAAAA,EAAAA,GACtB,CACEJ,YAAa,OACb,aAAc,eACd8U,qBAAqB,EAErBD,qBAAqB,EACrB1jB,QAASg2B,GAEXkV,GAIF,OAAO92B,EACLhe,EAAAA,cAAC00C,EAAsB,CAACzgC,IAAKA,EAAK0gC,SAAUxzB,GAC1CnhB,EAAAA,cAACy0C,EAAgB,CAAC5qC,KAAM,mBACxB7J,EAAAA,cAAC60C,EAAgB,MACbj1C,GAAY,IAAIsH,QAAQ,KAAM,SAEjCtH,GACCI,EAAAA,cAACiW,EAAAA,GAAqBvM,EAAAA,EAAAA,GAAA,GAChBkP,EAAW,CACf3E,IAAK6gC,EACLjrC,KAAK,gBACL8f,UAAU,2BAId,IAAI,IACPqW,EAAAx/B,aAAA,6M,uEC7EH,MAAMi0C,GAAmBxkC,EAAAA,EAAAA,IAAOiC,EAAAA,GAAc;;;EAUjC6iC,EAAmB/0C,EAAAA,YAG9B,CAAAN,EAA8BuU,KAAG,IAAhC,OAAE+J,EAAM,MAAEmD,EAAK,SAAEvhB,GAAUF,EAAA,OAC5Bse,EACEhe,EAAAA,cAACg1C,EAAsB,CAAC/gC,IAAKA,EAAK0gC,SAAUxzB,GAC1CnhB,EAAAA,cAACy0C,EAAgB,CAAC5qC,KAAM,oBACtBjK,GAAY,IAAIsH,QAAQ,KAAM,SAEhC,IAAI,IAGJ8tC,EAAyB/kC,EAAAA,GAAOa,IAA4B;;;;gBAIlDzQ,IAAA,IAAC,MAAE2S,GAAO3S,EAAA,OACtB2S,EAAMC,MACJ,yBACAD,EAAME,KAAO,mBAAqB,OACnC;;MAECzO,IAAA,IAAC,MAAEuO,GAAOvO,EAAA,OACVuO,EAAMC,MACJ,0BACAD,EAAME,KAAO,kBAAoB,qBAClC;WACIvO,IAAA,IAAC,QAAEgwC,EAAO,MAAE3hC,GAAOrO,EAAA,OAC1BgwC,EACI3hC,EAAMC,MAAM,8BAA+BD,EAAMqP,aAAa4yB,KAC9DjiC,EAAMC,MACJ,yBACAD,EAAMqP,aAAa6yB,kBACpB;;;;;;EAMPH,EAAAv0C,aAAA,uL,yDClCK,SAAS20C,EAAaz1C,GAMzB,IAN0B,MAC5BmG,EAAK,SACLuqB,GAID1wB,EACC,MAAM01C,GAAWjyC,EAAAA,EAAAA,QAAO0C,GACxBuvC,EAASzxC,QAAUkC,EAqBnB,MAAO,CAAExC,UApBUE,IACjB,KACGA,EAAM8xC,SACN9xC,EAAM+xC,QACN/xC,EAAMgyC,SACJhyC,EAAM+B,kBAAkBsB,cArCN4uC,EAsCAjyC,EAAM+B,OA/B7BkwC,EAAKC,mBACJD,aAAgBE,mBAP4C,CAC7D,WACA,QACA,UAKyBt0C,SAASo0C,EAAKl1C,OACvCk1C,aAAgBG,sBA6Bd,CACA,GAAyB,IAArBpyC,EAAMqH,IAAI9G,OAIZ,OADAP,EAAM2B,iBACCkrB,EAAU,GAAEglB,EAASzxC,UAAUJ,EAAMqH,OAE9C,GAAkB,cAAdrH,EAAMqH,IAAqB,CAC7B,MAAMgrC,EAAWryC,EAAMgyC,QAAU,GAAK,EACtCnlB,EAASglB,EAASzxC,QAAQsnB,MAAM,EAAG2qB,GACrC,CACF,CAlDJ,IAA2BJ,CAkDvB,EAGJ,C,gDCzBO,SAAS11B,EACd/d,GAEA,MAAOic,EAAQ4jB,IAAazsB,EAAAA,EAAAA,GAC1BpT,EAAMs9B,eACNt9B,EAAM8zC,wBAAyB,EAC/B9zC,EAAM+zC,yBAED/3B,EAAYg4B,IAAiB5gC,EAAAA,EAAAA,GAClCpT,EAAMgc,WACNhc,EAAMi0C,mBAAqB,GAC3Bj0C,EAAMk0C,oBAGR,MAAO,CACLj4B,SACAD,aACA6jB,YACAmU,gBACAnW,MAAOA,KACLmW,EAAc,IACdnU,GAAU,EAAM,EAGtB,CAcO,SAAS5hB,EAActgB,EAAAW,EAG5B4T,GACC,IAHD,uBAAE0L,GAA0CjgB,GAC5C,WAAEqe,EAAU,OAAEC,EAAM,UAAE4jB,EAAS,cAAEmU,GAAiC11C,EAGlE,MAAQgD,UAAW6yC,GAAsBf,EAAc,CACrDtvC,MAAOkY,EACPqS,SAAWvqB,IACT,MAAMswC,EAAetwC,EAAMuwC,YAC3BL,EAAcI,GACTn4B,GAA2B,KAAjBm4B,GACbvU,GAAU,EACZ,IAGEhC,EAAQA,KACZmW,EAAc,IACdnU,GAAU,EAAM,GAIhBrnB,eAAe,UAAElX,EAAS,QAAEgzC,KAC1B77B,EAAAA,EAAAA,GAAY,CACdnX,UAAY1C,IACLsT,EAAItQ,SAASm7B,SAASn+B,EAAE2E,UAIf,MAAV3E,EAAEiK,MAAgBjK,EAAE40C,SAAW50C,EAAE00C,UACnC10C,EAAEuE,iBAEU,WAAVvE,EAAEiK,IACJg1B,IAEAsW,EAAkBv1C,GASfqd,KAAUvD,EAAAA,EAAAA,GAAe9Z,IAC5BA,EAAEka,sBACJ,KAKF4U,kBAAkB,QAAEf,EAAO,OAAEa,KAC3BG,EAAAA,EAAAA,GAAe,CACjB4mB,aAAe/yC,KAEyB,mBAA3Boc,EACLA,EAAuBpc,GACvBoc,IAEJigB,GACF,IAIJ,MAAO,CACL9qB,eAAgB,CACd4Z,UACAa,SACAlsB,YACAgzC,WAGN,C,4DC3HO,MAAME,EAAY72C,IAGkB,IAHjB,KACxBu9B,EAAI,MACJ+H,GACetlC,EACf,OACEM,EAAAA,cAACw2C,EAAe,CACd1mB,YAAcnvB,IAGZA,EAAEuE,gBAAgB,GAGpBlF,EAAAA,cAACy2C,EAAmB,KAAExZ,GACtBj9B,EAAAA,cAAC02C,EAAoB,KAAE1R,GACP,EAIhBwR,EAAkBvmC,EAAAA,GAAOI,GAAI;;;;;;;sBAObhQ,IAAA,IAAC,MAAE2S,GAAO3S,EAAA,OAC5B2S,EAAMC,MACJ,uBACAD,EAAMC,MAAM,sBACT,MAAM;WACJxO,IAAA,IAAC,MAAEuO,GAAOvO,EAAA,OACjBuO,EAAMC,MACJ,8BACAD,EAAMqP,aAAagQ,gBACpB;;MAEC1tB,IAAA,IAAC,MAAEqO,GAAOrO,EAAA,OAAKqO,EAAMC,MAAM,wBAAyB,qBAAqB;;;;;EAOzE0jC,EAAyB1mC,EAAAA,GAAOI,GAAI;;;;EAMpCqmC,GAAuBzmC,EAAAA,EAAAA,IAAO0mC,EAAwB;;EAGtDF,GAAsBxmC,EAAAA,EAAAA,IAAO0mC,EAAwB;;;;EAIzDJ,EAAA/1C,aAAA,0nB,kHCvDK,MAAMo2C,EAAkB52C,EAAAA,YAAiB,SAC9C+B,EACAyW,GAEA,MAAMvE,GAAM0E,EAAAA,EAAAA,GAAaH,IAEnB,WAAEyV,EAAU,UAAET,IAAcU,EAAAA,EAAAA,GAAS,CACzCja,SACGlS,EACHurB,qBAAqB,KAEjB,eAAES,IAAmBC,EAAAA,EAAAA,GAAa,CAAET,qBAAqB,GAAQtZ,GAEjE4iC,EAAgB90C,EAAMgZ,MACxB+7B,EACAC,EACJ,OACE/2C,EAAAA,cAAC62C,GAAantC,EAAAA,EAAAA,GAAA,IACRsP,EAAAA,EAAAA,GAAWiV,EAAYF,GAAe,CAC1CnX,UAAW4W,EAAY,UAAY,GACnCvZ,IAAKA,IAEJlS,EAAM8H,KACN9H,EAAM8H,MAAQ9H,EAAMgZ,OACnB/a,EAAAA,cAAAA,EAAAA,SAAA,KAAE,QAEH+B,EAAMgZ,MAGb,IAEM+7B,EAAwB7mC,EAAAA,GAAOa,IAAK;;;aAG7BpR,IAAA,IAAC,MAAEsT,GAAOtT,EAAA,OACnBsT,EAAM6Q,MACJ,kCACG,YAAY;;;;wBAIGxjB,IAAA,IAAC,MAAE2S,GAAO3S,EAAA,OAC5B2S,EAAMC,MACJ,mCACAD,EAAMC,MAAM,+BAAgC,WAC7C;aACMxO,IAAA,IAAC,MAAEuO,GAAOvO,EAAA,OACjBuO,EAAMC,MACJ,mCACAD,EAAMqP,aAAagQ,gBACpB;;;wBAGiB1tB,IAAA,IAAC,MAAEqO,GAAOrO,EAAA,OAC5BqO,EAAMC,MACJ,qCACAD,EAAMC,MAAM,iCAAkC,WAC/C;aACMO,IAAA,IAAC,MAAER,GAAOQ,EAAA,OACjBR,EAAMC,MACJ,qCACAD,EAAMqP,aAAagQ,gBACpB;;EAID0kB,GAA4B9mC,EAAAA,EAAAA,IAAO6mC,EAAuB;aACnDpjC,IAAA,IAAC,MAAEV,GAAOU,EAAA,OACnBV,EAAM6Q,MACJ,kCACG,WAAW;EAClB+yB,EAAAp2C,aAAA,me,qEC/EF,MAAMw2C,EACW,EAIXC,EACJ,EAAID,EAJU,EAMHE,EAAkBjnC,EAAAA,GAAOknC,IAAGz3C,IAAA,IAAC,MAAEsT,GAAOtT,EAAA,MAAM,CACvD0yB,gBAAiBpf,EAAMC,MACrB,2BACAD,EAAME,KAAO,UAAY,WAE3BkkC,eAAgB,cAChBC,UAAW,aACXC,OAAQ,EACRvzB,OAAQ,OACRwzB,WAAY,EACb,IAEYC,GAA4BvnC,EAAAA,EAAAA,IAAOinC,EAAiB;;eAElDF;WACJC;EAEE/uB,GAA0BjY,EAAAA,EAAAA,IAAOinC,EAAiB;;aAElDF;YACDC;6DCjCL,MAAMQ,EAAqB/3C,IAyB3B,IAzB4B,KACjCmK,EAAI,MACJF,EAAK,YACL+tC,GAsBDh4C,EACC,OACEM,EAAAA,cAAC23C,EAAAA,EAAgB,CAACC,UAAW/tC,EAAMF,MAAOA,EAAOkuC,QAASH,GAAe,EAE3ED,EAAAj3C,aAAA,krB,6FCxBK,MAIMs3C,GAAoB7nC,EAAAA,EAAAA,IAAO8nC,EAAAA,EAAkB;IACtD13C,IAAA,IAAC,MAAE2S,GAAO3S,EAAA,OAAK23C,EAAAA,EAAAA,GALat4C,KAAA,IAAC,MAAEsT,GAAyBtT,EAAA,MAAgB,CAC1Eu4C,gBAAiBjlC,EAAMnN,MAAc,iCAAmC,EACxEqyC,wBAAyBllC,EAAMC,MAAM,wCACtC,EAEoCklC,CAAiB,CAAEnlC,UAAS;gBCL1D,MAAMolC,EAAkCr2C,GAC7C/B,EAAAA,cAACq4C,EAAAA,GAAI3uC,EAAAA,EAAAA,GAAA,GAAK3H,EAAK,CAAEu2C,aAAcR,EAAmBS,WAAW,KAC7DH,EAAA53C,aAAA,sD,wGC4BK,MAAMg4C,EAAmB94C,IAOF,IAPG,KAC/BmK,EAAI,MACJF,EAAK,YACL+tC,EAAW,QACXe,EAAO,OACPC,EAAM,eACN5jC,GACsBpV,EACtB,OACEM,EAAAA,cAAC23C,EAAAA,EAAgB,CACfC,UAAW/tC,EACXF,MAAOA,EACPmL,eAAgBA,EAChB+iC,QACEa,EACE14C,EAAAA,cAAC8J,EAAAA,EAAc,CAACC,QAAS/J,EAAAA,cAACgK,EAAAA,EAAa,CAACC,WAAW,eACjDjK,EAAAA,cAACuY,EAAAA,EAAU,CACT3O,QAAS6uC,EACTlrB,qBAAmB,EACnBD,qBAAmB,GAEnBttB,EAAAA,cAACkS,EAAAA,GAAY,CAACrI,KAAK,qBAIvB6tC,GAGJ,EAEJc,EAAAh4C,aAAA,grC,6FC7DK,MAAMm4C,EAAiBj5C,IAAA,IAAC,MAAEsT,GAAyBtT,EAAA,MAAgB,CACxEk5C,YAAa5lC,EAAMC,MAAM,0BACzBglC,gBAAiBjlC,EAAMnN,MAAc,8BACrCotC,WAAYjgC,EAAMC,MAAM,yBACxB4lC,gCAAiC7lC,EAAMC,MACrC,sCAEFilC,wBAAyBllC,EAAMC,MAAM,sCACrC6lC,wBAAyB9lC,EAAMC,MAC7B,sCAEF8lC,gBAAiB/lC,EAAMC,MAAM,8BAC7B+lC,uBAAwBhmC,EAAMC,MAAM,qCACpCgmC,eAAgBjmC,EAAMC,MAAM,6BAE5BimC,gCAAiClmC,EAAMC,MACrC,sCAEFkmC,wBAAyBnmC,EAAMC,MAAM,sCACtC,EACYmmC,GAAkBnpC,EAAAA,EAAAA,IAAO8nC,EAAAA,EAAkB;;IAEpD13C,IAAA,IAAC,MAAE2S,GAAO3S,EAAA,OAAK23C,EAAAA,EAAAA,GAAkBW,EAAe,CAAE3lC,UAAS;iBCzBxD,MAAMqmC,GAAmBppC,EAAAA,EAAAA,IAAOqpC,EAAAA,EAAmB;IACtD55C,IAAA,IAAC,MAAEsT,GAAOtT,EAAA,OAAK65C,EAAAA,EAAAA,GAAmBZ,EAAe,CAAE3lC,UAAS;gBCIzD,MAAMwmC,EAAgCz3C,GAC3C/B,EAAAA,cAACq4C,EAAAA,GAAI3uC,EAAAA,EAAAA,GAAA,GACC3H,EAAK,CACTu2C,aAAcc,EACdK,cAAeJ,EACfd,WAAW,KAEbiB,EAAAh5C,aAAA,oD,kDCPF,MAqCau3C,E,SAAmB9nC,GAAOI,GAAoB;;;;;;;;;;;;;aAa9ChQ,IAAA,IAAC,SAAE8Y,GAAU9Y,EAAA,OAAM8Y,EAAW,KAAO,GAAG;WAC1C1U,IAAA,IAAC,MAAEuO,GAAOvO,EAAA,OACjBuO,EAAMC,MACJ,yBACD;;;;;;;;;;;IAtDmBvT,IAAA,IAAC,MAAEsT,GAAyBtT,EAAA,OAClDs4C,EAAAA,EAAAA,GAAkB,CAChBC,gBAAiBjlC,EAAMnN,MAAc,gCAAkC,EACvEmzC,uBAAwBhmC,EAAMC,MAC5B,qCACAD,EAAME,KAAO,UAAY,WAE3B+lC,eAAgBjmC,EAAMC,MACpB,6BACAD,EAAME,KAAO,UAAY,WAG3BgmC,gCAAiClmC,EAAMC,MACrC,+CAEFkmC,wBAAyBnmC,EAAMC,MAAM,uCAErCggC,WAAYjgC,EAAMC,MAChB,yBACAD,EAAME,KAAO,UAAY,WAE3B2lC,gCAAiC7lC,EAAMC,MACrC,+CAEFilC,wBAAyBllC,EAAMC,MAC7B,uCAEF6lC,wBAAyB9lC,EAAMC,MAC7B,sCACAD,EAAME,KAAO,kBAAoB,kBAEnC6lC,gBAAiB/lC,EAAMC,MACrB,8BACAD,EAAME,KAAO,kBAAoB,mBAEnC;8DCzCJ,MASaomC,EAAoBrpC,EAAAA,GAAOI,GAA6B;;;;;kBAKnDhQ,IAAA,IAAC,UAAEq5C,GAAWr5C,EAAA,OAAMq5C,EAAY,IAAM,OAAO;;IAdtCh6C,IAAA,IAAC,MAAEsT,GAAyBtT,EAAA,OACnD65C,EAAAA,EAAAA,GAAmB,CACjBX,YAAa5lC,EAAMC,MACjB,0BACAD,EAAMqP,aAAawiB,gBAErBoO,WAAYjgC,EAAMC,MAAM,2BACxB;kFCNJ,MAAMyX,E,SAAoBza,GAAOa,IAAK;;;;;;;;;;;;;EAiBzB6oC,EAAkB53C,GAG3B/B,EAAAA,cAACuY,EAAAA,GAAU7O,EAAAA,EAAAA,GAAA,GAAK3H,EAAK,CAAEwrB,qBAAmB,EAACD,qBAAmB,IAC5DttB,EAAAA,cAAC0qB,EAAiB,KAChB1qB,EAAAA,cAACkS,EAAAA,GAAY,CAACrI,KAAM,uBAAwB+M,UAAU,eACtD5W,EAAAA,cAACkS,EAAAA,GAAY,CAACrI,KAAM,gBAAiB+M,UAAU,WAIrD+iC,EAAAn5C,aAAA,4E,uGC3BF,MAAMo5C,EAAsB3pC,EAAAA,GAAOI,GAAI;;;EAKjCwpC,EAAYlxB,EAAAA,EAAI;;;EAKhBmxB,EAAyB7pC,EAAAA,GAAOa,IAAK;IACvC+oC;;EAIEE,EAAuB9pC,EAAAA,GAAOa,IAAK;IACrC+oC;;;;EA6BSlC,EAAmB33C,EAAAA,YAC9B,CAAAN,EAEEuU,KACI,IAFJ,UAAE2jC,EAAS,MAAEjuC,EAAK,QAAEkuC,EAAO,eAAE/iC,EAAiB,CAAC,GAAuBpV,EAItE,MAAM,eAAEquB,IAAmBC,EAAAA,EAAAA,GAAa,CAAC,GAAGrV,EAAAA,EAAAA,GAAa1E,IACzD,OACEjU,EAAAA,cAAC45C,GAAmBlwC,EAAAA,EAAAA,GAAA,IACdsP,EAAAA,EAAAA,GAAW+U,EAAgBjZ,GAAe,CAC9Cb,IAAKA,IAEJ2jC,GACC53C,EAAAA,cAAC85C,EAAsB,KAAElC,GAE1BjuC,EACAkuC,GAAW73C,EAAAA,cAAC+5C,EAAoB,KAAElC,GACf,IAG1BF,EAAAn3C,aAAA,k7B,mCC7CK,MAAMw5C,E,SAAuD9uC,C,0DCA7D,MAAMquC,EAAqB75C,IAAA,IAAC,WACjCuzC,EAAU,YACV2F,GAC6Cl5C,EAAA,OAAKipB,EAAAA,EAAI;kBACtCiwB;gBACF3F;CACf,EAYY+E,EAAoB33C,IAAA,IAAC,gBAChC43C,EAAe,WAEfhF,EAAU,wBACViF,EAAuB,gCACvBW,EAA+B,wBAC/BC,EAAuB,gBACvBC,EAAe,wBAEfI,EAAuB,gCACvBD,EAA+B,uBAE/BF,EAAsB,eACtBC,GACS54C,EAAA,OACTsoB,EAAAA,EAAoB;;;gBAGa,MAAnBsvB,EAA2B,GAAEA,WAAsB/xC;0BACzCzB,IAAA,IAAC,SAAEijB,GAAUjjB,EAAA,OAAKijB,GAAYsxB,CAAsB;0BACpDr0C,IAAA,IAAC,SAAE+iB,EAAQ,OAAE1J,GAAQrZ,EAAA,OACvC+iB,GAAY1J,GAAUi7B,CAAc;;;;aAI/BzlC,IAAA,IAAC,SAAEkU,GAAUlU,EAAA,OAAKkU,GAAYwxB,CAA+B;aAC7DxlC,IAAA,IAAC,SAAEgU,EAAQ,OAAE1J,GAAQtK,EAAA,OAC5BgU,GAAY1J,GAAUm7B,CAAuB;;;kBAGjClG;kBACA75B,IAAA,IAAC,SAAEsO,GAAUtO,EAAA,OACzBsO,GAAYmxB,CAA+B;kBAC/Bv/B,IAAA,IAAC,SAAEoO,EAAQ,OAAE1J,GAAQ1E,EAAA,OACjCoO,GAAY1J,GAAUk6B,CAAuB;;MAE7C3+B,IAAA,IAAC,SAAEJ,EAAQ,OAAE6E,GAAQzE,EAAA,OACpBJ,GACDwP,EAAAA,EAAI;;;wBAGcmwB;wBACA96B,GAAU+6B;;OAE3B;GACJ,C,2HCjFH,MAAMkB,EAAoCtxB,EAAAA,EAAI;;;;;;;;EASjCuxB,EAAkCjqC,EAAAA,GAAOI,GAAW;;;;IAI7D3Q,IAAA,IAAC,mBAAEy6C,GAAoBz6C,EAAA,OACvBy6C,GACAxxB,EAAAA,EAAI;;UAEEsxB;;;YAGE55C,IAAA,IAAC,MAAE2S,GAAO3S,EAAA,OAAK2S,EAAMqP,aAAa+3B,eAAe;;;;;KAKxD;IACD31C,IAAA,IAAC,iBAAE41C,GAAkB51C,EAAA,OACrB41C,GACA1xB,EAAAA,EAAI;;UAEEsxB;;;YAGEt1C,IAAA,IAAC,MAAEqO,GAAOrO,EAAA,OAAKqO,EAAMqP,aAAa+3B,eAAe;;;;;KAKxD;2ECvBE,MAAME,GAAMr2B,EAAAA,EAAAA,aAAW,SAAYvkB,EASxC8Y,GACqB,IATrB,MACE6C,EAAK,KACL/Q,EAAI,UACJiuC,EAAS,OACTv6B,EAAM,sBACNu8B,EAAqB,UACrB/jC,EAAYuhC,EAAAA,GACAr4C,EAGd,MAAM,IAAEkL,EAAG,SAAE6W,GAAanX,EACpB2J,GAAM0E,EAAAA,EAAAA,GAAaH,IAEvBgiC,UAAU,SAKRt+B,KACGs+B,KAEHC,EAAAA,EAAAA,IACF,CACE7vC,MACA2vC,yBAEFl/B,EACApH,GAEIoI,EAAahB,EAAMq/B,cAAgB9vC,EACnCvE,EAAagV,EAAM1Q,aAAa6T,IAAI5T,GAE1C,OACE5K,EAAAA,cAACwW,GAAS9M,EAAAA,EAAAA,GAAA,GACJ8wC,EAAQ,CACZt+B,SAAUq8B,EAAYr8B,OAAWhW,EACjC+N,IAAKA,EACL+J,OAAQA,EACR0J,SAAUrL,EACVlD,SAAU9S,IAETob,EAGP,IAAG64B,EAAA95C,aAAA,0nBCsBH,MAAMm6C,EAAyBhyB,EAAAA,EAAI;;;;;;;EAS7BiyB,EAAgB3qC,EAAAA,GAAOI,GAA4B;;eAE1C3Q,IAAA,IAAC,SAAEm7C,GAAUn7C,EAAA,OAAMm7C,EAAW,OAAS,QAAQ;;;IAG1DF;EAUStC,EAAOh4C,IAWqB,IAXF,UACrCk4C,EAAS,sBACTgC,EAAqB,OACrBv8B,EAAM,aACNs6B,EAAY,cACZmB,EAAgBH,EAAAA,EAAiB,SACjCuB,EAAQ,eACRC,EAAc,SACdC,EAAQ,UACRrB,KACG33C,GACU1B,EACb,MAAMgb,GAAQ2/B,EAAAA,EAAAA,GAAgBj5C,GACxBkS,EAAMjU,EAAAA,OAA6B,OACnC,aAAEi7C,IAAiBC,EAAAA,EAAAA,IAAWn5C,EAAOsZ,EAAOpH,IAE5C,uBAAEknC,EAAsB,YAAEC,GC/H3B,SAAuB17C,GAM1B,IANkD,UACpD27C,EAAY,EAAC,IACbpnC,GAIDvU,EACC,MAAO07C,EAAaE,IAAkBz4C,EAAAA,EAAAA,UAAS,CAC7Co6B,MAAM,EACN+H,OAAO,EACPtzB,KAAK,EACL+1B,QAAQ,IAGJ8T,EAASA,KACb,MAAMl2C,EAAU4O,EAAItQ,QACpB,GAAI0B,EAAS,CACX,MAAMm2C,EAAan2C,EAAQo2C,WACrBC,EACJr2C,EAAQs2C,aAAet2C,EAAQugB,YAAcvgB,EAAQo2C,YACjDG,EAAYv2C,EAAQw2C,UACpBC,EACJz2C,EAAQsQ,cAAgBtQ,EAAQ+3B,aAAe/3B,EAAQw2C,WACnDE,EAAiB,CACrBrqC,IAAKkqC,EAAYP,EACjB5T,OAAQqU,EAAeT,EACvBpe,KAAMue,EAAaH,EACnBrW,MAAO0W,EAAcL,GAGrBD,EAAY1pC,MAAQqqC,EAAerqC,KACnC0pC,EAAY3T,SAAWsU,EAAetU,QACtC2T,EAAYne,OAAS8e,EAAe9e,MACpCme,EAAYpW,QAAU+W,EAAe/W,OAErCsW,EAAeS,EAEnB,GAIF,OAFAt2C,EAAAA,EAAAA,WAAU81C,GAEH,CACLJ,uBAAwB,CACtBa,SAAUT,GAEZH,cAEJ,CDgFkDa,CAAe,CAAEhoC,SAC3D,mBAAEioC,IAAuBC,EAAAA,EAAAA,GAAoBloC,GAC7CmoC,EAAiB,IAAI79B,IACzB29B,EACGx5C,KAAK2C,GACJA,aAAmBuB,YAAcvB,EAAQ0B,QAAa,IAAI,OAE3DzC,OAAO+3C,EAAAA,KAGZ52C,EAAAA,EAAAA,YAAU,KACR,IAAKs1C,EAAU,CACb,MAAMuB,EAAsBroC,EAAItQ,QAC1B44C,EAAqBD,GAAqBnwC,cAC7C,cAAakP,EAAMq/B,iBAElB4B,GAAuBC,IACzBt5B,EAAAA,EAAAA,GAAeq5B,EAAqBC,EAExC,CACE,GAED,CAAClhC,EAAMq/B,cAIV,GAAIK,EACF,MAAM,IAAIlrC,MAAM,kCAElB,OACE7P,EAAAA,cAACy5C,GAAa/vC,EAAAA,EAAAA,GAAA,CAACgwC,UAAWA,IAAe3gC,EAAAA,EAAAA,GAAehX,IACtD/B,EAAAA,cAACk6C,EAA+B,CAC9BC,mBAAoBiB,EAAYne,KAChCod,iBAAkBe,EAAYpW,MAC9B7uB,MAAO,CAAE7E,SAAU,IAEnBtR,EAAAA,cAAC46C,GAAalxC,EAAAA,EAAAA,GAAA,IACRsP,EAAAA,EAAAA,GAAWiiC,EAAcE,GAAuB,CACpDN,SAAUA,EACV5mC,IAAKA,IAEJ,IAAIoH,EAAM2B,YAAYta,KAAK4H,GAC1BtK,EAAAA,cAACs6C,EAAG,CACF1vC,IAAKN,EAAKM,IACVN,KAAMA,EACN+Q,MAAOA,EACPk9B,UAAWA,EACXgC,sBAAuBA,EACvBv8B,OAAQA,EACRxH,UAAW8hC,SAKjBwC,GACA96C,EAAAA,cAACw8C,EAAAA,EAAgB,CACfx/B,WAAY3B,EAAM2B,WAClBo/B,eAAgBA,EAChBK,SAnC4B7xC,IAClCyQ,EAAMqhC,eAAe9xC,EAAI,IAqCT,EAElBytC,EAAA73C,aAAA,mqG,kHEzLK,MAAMg8C,EAAmB98C,IAAA,IAAoB,WAClDsd,EAAU,eACVo/B,EAAc,SACdK,GAKD/8C,EAAA,OACCM,EAAAA,cAAAA,EAAAA,SAAA,KACGo8C,EAAejqC,KAAO,GACrBnS,EAAAA,cAACwuB,EAAAA,EAAW,CACVqP,MAAM,MACNxP,WAAYhuB,IAAoB,IAAnB,UAAEm3B,GAAWn3B,EACxB,MAAMwK,EAAiC,IAAImS,GAAY1Y,QACpDq4C,GAAaP,EAAe59B,IAAIm+B,EAAS/xC,OAE5C,OACE5K,EAAAA,cAACyK,EAAAA,IAAIf,EAAAA,EAAAA,GAAA,GACC8tB,EAAS,CACbz0B,SAAW6H,IACT6xC,EAAS7xC,EAAI,EAEfC,MAAOA,KAELP,GACAtK,EAAAA,cAACkL,EAAAA,EAAI,CAACN,IAAKN,EAAKM,IAAKO,UAAWb,EAAKa,WAClCb,EAAKvI,MAAM66C,gBAAkBtyC,EAAKa,YAGlC,IAIV,CAACpJ,EAAOkS,IACPjU,EAAAA,cAACyJ,EAAAA,IAAUC,EAAAA,EAAAA,GAAA,GAAK3H,EAAK,CAAEkS,IAAKA,IAC1BjU,EAAAA,cAACkS,EAAAA,GAAY,CAACrI,KAAK,sCAK1B,EACH2yC,EAAAh8C,aAAA,wf,4DCrBK,MAAMq8C,EAAuB78C,EAAAA,YAClC,CAAAN,EAEEuU,KACI,IAFJ,KAAEpK,EAAI,MAAEF,EAAK,YAAE+tC,EAAW,eAAE5iC,GAA2CpV,EAGvE,OACEM,EAAAA,cAAC23C,EAAAA,EAAgB,CACf7iC,eAAgBA,EAChBb,IAAKA,EACL2jC,UAAW/tC,EACXF,MAAOA,EACPkuC,QAASH,GACT,IAGNmF,EAAAr8C,aAAA,g/B,sGCnCK,MAAMs8C,EAAqBp9C,IAAA,IAAC,MAAEsT,GAAyBtT,EAAA,MAAgB,CAC5Ek5C,YAAa5lC,EAAMC,MAAM,oCACzBglC,gBAAiBjlC,EAAMnN,MAAc,wCACrCotC,WAAY,cACZ4F,gCAAiC7lC,EAAMC,MACrC,wDAEFilC,wBAAyBllC,EAAMC,MAC7B,gDAEF6lC,wBACE9lC,EAAMC,MAAM,iDACZD,EAAMC,MAAM,wCACd8lC,gBAAiB/lC,EAAMC,MAAM,wCAC7B+lC,uBAAwBhmC,EAAMC,MAC5B,+CAEFgmC,eAAgBjmC,EAAMC,MAAM,uCAE5BimC,gCACElmC,EAAMC,MAAM,yDACZD,EAAMC,MAAM,gDACdkmC,wBAAyBnmC,EAAMC,MAC7B,gDAEH,EACY8pC,GAAsB9sC,EAAAA,EAAAA,IAAO8nC,EAAAA,EAAkB;;IAExD13C,IAAA,IAAC,MAAE2S,GAAO3S,EAAA,OAAK23C,EAAAA,EAAAA,GAAkB8E,EAAmB,CAAE9pC,UAAS;iBC/B5D,MAAMgqC,GAAuB/sC,EAAAA,EAAAA,IAAOqpC,EAAAA,EAAmB;IAC1D55C,IAAA,IAAC,MAAEsT,GAAOtT,EAAA,OAAK65C,EAAAA,EAAAA,GAAmBuD,EAAmB,CAAE9pC,UAAS;ECIvDiqC,EACXl7C,GAEA/B,EAAAA,cAACq4C,EAAAA,GAAI3uC,EAAAA,EAAAA,GAAA,GACC3H,EAAK,CACTu2C,aAAcyE,EACdtD,cAAeuD,EACfzE,WAAW,EACXgC,uBAAqB,KAEvB0C,EAAAz8C,aAAA,wD,kBCdK,SAAS08C,EACdC,EACAr5C,GAEA,MAAM8d,EAAsC,GAC5C,OAAKu7B,GAAQr5C,QAGTq5C,EAAO,GAAG7uC,KAAO,GACnBsT,EAAOvf,KAAK,CAAC,CAAEiM,KAAM,EAAG6Q,GAAIg+B,EAAO,GAAG7uC,KAAO,IAAK,IAEpD6uC,EAAOnlC,SAAQ,CAAAtY,EAAemW,KAAW,IAAzB,KAAEvH,EAAI,GAAE6Q,GAAIzf,EAC1BkiB,EAAOvf,KAAK,CAAC,CAAEiM,OAAM6Q,OAAM,IAC3B,MAAMi+B,EAAsBD,EAAOtnC,EAAQ,GACvC,CAAEvH,KAAM6Q,EAAK,EAAGA,GAAIg+B,EAAOtnC,EAAQ,GAAGvH,KAAO,GAC7C,CAAEA,KAAM6Q,EAAK,EAAGA,GAAIrb,EAAS,GAnB9B,IAAsBu5C,KAoBPD,GAnBP9uC,KAAO+uC,EAAMl+B,IAoBtByC,EAAOvf,KAAK,CAAC+6C,GAAU,GACzB,IAEKx7B,GAdE,CAAC,CAAC,CAAEtT,KAAM,EAAG6Q,GAAIrb,EAAS,IAAK,GAe1C,CAEO,SAASw5C,EAAwBC,GACtC,OAAOA,EAAQnzB,QAAO,CAAC+yB,EAAQtnC,KAC7B,MAAM2nC,EAAYL,EAAOlyB,OAAO,GAAG,GACnC,OAAIuyB,GAAWr+B,KAAOtJ,EAAQ,EACrB,IAAIsnC,EAAOlyB,MAAM,GAAI,GAAI,CAAE3c,KAAMkvC,EAAUlvC,KAAM6Q,GAAItJ,IAEvD,IAAIsnC,EAAQ,CAAE7uC,KAAMuH,EAAOsJ,GAAItJ,GAAQ,GAC7C,GACL,C,sFCjCA,MAAM4nC,E,SAAmBxtC,GAAOa,IAAK;gBACrBpR,IAAA,IAAC,MAAEsT,GAAOtT,EAAA,MACrB,mBAAkBsT,EAAMC,MACvB,8BACA,iBACID,EAAMC,MAAM,4BAA6B,eAAe;;;EAS3D,SAASuK,EAAkBnd,GAMV,IANW,SACjCT,EAAQ,WACR6d,GAIDpd,EACC,MAAMq9C,EAAqCjgC,GACvCy/B,EAAAA,EAAAA,IAAaz/B,EAAY7d,EAASkE,QAClC,CAAC,CAAC,CAAEwK,KAAM,EAAG6Q,GAAIvf,EAASkE,SAAU,IACxC,OACE9D,EAAAA,cAAAA,EAAAA,SAAA,KACG09C,EAAMh7C,KAAI+B,IAAkC,KAAhC,KAAE6J,EAAI,GAAE6Q,GAAMw+B,GAAYl5C,EACrC,MAAMyY,EAAOtd,EAASqrB,MAAM3c,EAAM6Q,EAAK,GACvC,OAEEnf,EAAAA,cAACA,EAAAA,SAAc,CAAC4K,IAAM,GAAE0D,KAAQ6Q,KAC7Bw+B,EAAc39C,EAAAA,cAACy9C,EAAgB,KAAEvgC,GAA2BA,EAC9C,IAK3B,CAACM,EAAAhd,aAAA,of,mCCxCD,MAAMo9C,EAAgB,qBAEhBC,EAAiBA,CAACC,EAAsBjoC,IAC5CioC,EACIjoC,EAAQ,EACN0+B,SAASuJ,GACTv8C,KAAKw8C,MAA8C,IAAxCx8C,KAAKy8C,IAAIzoC,WAAWuoC,GAAe,SAChD53C,EAEA+3C,EAAgBjxB,GACpBA,EACG7L,MAAM,+DACL8J,MAAM,EAAG,GACVvoB,KAAK6L,GAAOA,EAAIgmC,SAAShmC,EAAG,SAAMrI,IACjCg4C,EAAqBlxB,GACzBA,EACG7L,MAAM,wCACL8J,MAAM,EAAG,GACVvoB,KAAK6L,GAAOA,EAAIgmC,SAAShmC,EAAIA,EAAG,SAAMrI,IACrCi4C,EAAYnxB,GAChBA,EACG7L,MACC,IAAIi9B,OACD,eAAcR,eAA2BA,eAA2BA,gBAGvE3yB,MAAM,EAAG,GACVvoB,IAAIm7C,GACHQ,EAAarxB,GACjBA,EACG7L,MACC,IAAIi9B,OACD,gBAAeR,eAA2BA,eAA2BA,eAA2BA,gBAGnG3yB,MAAM,EAAG,GACVvoB,IAAIm7C,GChCF,MAAMS,EAWXl9B,WAAAA,CACEm9B,EACAC,EACA9uC,EACAd,GAEA,IAAI6vC,OAFK,IAAT7vC,IAAAA,EAAY,KAAG,KAdD6vC,OAAC,OACDD,OAAC,OACD9uC,OAAC,OACDd,OAAC,EAcK,iBAAT2vC,GACRE,EAAIC,IAAKF,EAAIE,IAAKhvC,EAAIgvC,IAAK9vC,EAAI,KDoBpCoe,KAEA,MAAMpL,EAAS,CAACq8B,EAAcC,EAAmBC,EAAUE,GAAWj0B,QAEpE,CAACxI,EAAQ+8B,IAAU/8B,GAAU+8B,EAAM3xB,SAAM9mB,GAC3C,OAAOmI,MAAM2oB,QAAQpV,IACnBA,EAAOqJ,MAAM,EAAG,GAAGjqB,OAAO6zB,GAAM+pB,OAAOC,UAAUhqB,KAC9CjT,EACD,IAAI,EC5BmCk9B,CAAiBP,IAAS,GACxDA,aAAgBD,GACxBG,EAAGD,EAAG9uC,EAAGd,GAAK,CAAC2vC,EAAKE,EAAGF,EAAKC,EAAGD,EAAK7uC,EAAG6uC,EAAK3vC,GAE7C6vC,EAAIF,EAENj9B,KAAKm9B,EAAIA,EACTn9B,KAAKk9B,EAAIA,EACTl9B,KAAK5R,EAAIA,EACT4R,KAAK1S,EAAIA,EAAI,EAAIrN,KAAKw8C,MAAU,IAAJnvC,GAAWA,CACzC,CAEAmwC,OAAAA,GACE,OACEH,OAAOC,UAAUv9B,KAAKm9B,IACtBG,OAAOC,UAAUv9B,KAAKk9B,IACtBI,OAAOC,UAAUv9B,KAAK5R,IACtBkvC,OAAOC,UAAUv9B,KAAK1S,EAE1B,CAKAowC,gBAAAA,CAAiBC,GACf,OAAO,IAAIX,EAAMh9B,KAAKm9B,EAAGn9B,KAAKk9B,EAAGl9B,KAAK5R,EAAGuvC,EAC3C,CAEAC,QAAAA,GACE,IAAI,EAAET,EAAC,EAAED,EAAC,EAAE9uC,EAAGd,EAAGqwC,GAAU39B,KAC5B,MAAM69B,EAAM59C,KAAKC,MACf49C,EAASd,EAAMc,OAEjB,IAAI7wC,EAAI4wC,EAAI,GAAO,EAAMC,IACzB,OAAS,GAALX,GAAe,GAALD,GAAe,GAAL9uC,EACf,IAAI4uC,EAAM/vC,EAAGA,EAAGA,EAAG0wC,IAExBR,EAAI,GAAKA,EAAIlwC,IAAGkwC,EAAIlwC,GACpBiwC,EAAI,GAAKA,EAAIjwC,IAAGiwC,EAAIjwC,GACpBmB,EAAI,GAAKA,EAAInB,IAAGmB,EAAInB,GAEjB,IAAI+vC,EACT/8C,KAAKy8C,IAAImB,EAAIV,EAAIW,GAAS,KAC1B79C,KAAKy8C,IAAImB,EAAIX,EAAIY,GAAS,KAC1B79C,KAAKy8C,IAAImB,EAAIzvC,EAAI0vC,GAAS,KAC1BH,GAEJ,CAEAI,MAAAA,GACE,MAAMD,EAASd,EAAMc,OACfD,EAAM59C,KAAKC,MAEjB,OAAO,IAAI88C,EACT/8C,KAAK27B,IAAIiiB,EAAI79B,KAAKm9B,EAAIW,GAAS,GAC/B79C,KAAK27B,IAAIiiB,EAAI79B,KAAKk9B,EAAIY,GAAS,GAC/B79C,KAAK27B,IAAIiiB,EAAI79B,KAAK5R,EAAI0vC,GAAS,GAC/B99B,KAAK1S,EAET,CAEA,eAAOswC,CAASjsC,GAGd,OAAO,IAAIqrC,EAAMrrC,GAAOisC,WAAWI,UACrC,CAEAC,KAAAA,CAAMC,GACJ,MAAMvsC,EAC0B,iBAAvBusC,EACH,IAAIlB,EAAMkB,GACVA,EACAC,EAAmBC,GACvBn+C,KAAKw8C,MACF9qC,EAAMrE,EAAI,IAAOqE,EAAMysC,GACrBp+B,KAAK1S,EAAI,KAAQ,EAAIqE,EAAMrE,EAAI,KAAO0S,KAAKo+B,IAElD,OAAO,IAAIpB,EACTmB,EAAgB,KAChBA,EAAgB,KAChBA,EAAgB,KAEpB,CAEAH,QAAAA,GACE,MAAMA,EAAYI,GAChBd,OAAOe,MAAMD,GAAa,GAAKA,EAAUJ,SAAS,IAAIM,SAAS,EAAG,KAKpE,MAAQ,IAJEN,EAASh+B,KAAKm9B,KACda,EAASh+B,KAAKk9B,KACdc,EAASh+B,KAAK5R,KACH,MAAX4R,KAAK1S,EAAY,GAAK0wC,EAASh+B,KAAK1S,IAEhD,EA/GW0vC,EAMac,OAAS,E,gHCsBnC,MAAMS,EAA0B5vC,EAAAA,GAAOI,IAAG+H,WAAA,CAAAC,YAAA,6CAAAC,YAAA,eAAVrI,CAAU,6EAOtBvQ,IAAA,IAAC,YAAEoyB,GAAapyB,EAAA,MAChB,aAAhBoyB,EAA6B,SAAW,KAAK,IAG3CguB,EAAa7vC,EAAAA,GAAOI,IAAG+H,WAAA,CAAAC,YAAA,gCAAAC,YAAA,eAAVrI,CAAU,oBAQvB8vC,GAA0B9vC,EAAAA,EAAAA,IAAO6vC,GAAW1nC,WAAA,CAAAC,YAAA,6CAAAC,YAAA,eAAlBrI,CAAkB,aAuBrCkiC,EAAsD9xC,IAchB,IAdiB,YAClEyxB,EAAc,aAAY,UAC1BsgB,EAAS,UACTC,EAAS,SACTE,EAAQ,SACRtT,EAAQ,cACRqT,EAAa,aACbE,EACAC,aAAcuN,EAAwB,CAAC,EAAC,UACxCC,EAAS,iBACTC,EAAgB,gBAChBC,EAAe,iBACfC,KACGtrC,GACoBzU,EACvB,MAAMq+B,GAAev7B,EAAAA,EAAAA,QAAuB,MACtCk9C,GAAel9C,EAAAA,EAAAA,QAAuB,MACtCm9C,GAAcn9C,EAAAA,EAAAA,QAAuB,OACpCo9C,EAAgBC,IAAqB39C,EAAAA,EAAAA,UAAwB,OAC7D49C,EAAeC,IAAoB79C,EAAAA,EAAAA,UAAwB,MAC5DmQ,GAAQiX,EAAAA,EAAAA,MAERpkB,EAAQA,CAAS86C,EAAqBC,IAC1B,eAAhB9uB,EAA+B6uB,EAAkBC,EAE7CC,EAAkDh7C,EACtDqiC,EAAAA,EACAG,EAAAA,GAEIyY,EAAmDj7C,EACvDsiC,EAAAA,EACAC,EAAAA,GAEI2Y,EAAgBl7C,EAAM,QAAS,UAC/Bm7C,EAAmBn7C,EAAM,WAAY,aAErC4sC,EAAuD,CAC3DQ,WAAYjgC,EAAMqP,aAAawiB,eAC/B1yB,KAAM,KACH6tC,GAGCiB,EAAkB9uC,GAAiBA,EAAO,EAE1C+uC,EACJ/uC,GAEQ,MAARA,EACI8uC,EAAe9uC,GACH,IAAPA,EAAF,IACD5Q,KAAKw8C,MAAM5rC,QACbjM,EAEAi7C,EAAW3L,GACf3vC,EAAM2vC,EAAK5vB,YAAa4vB,EAAKpY,cAEzBgkB,EAAaA,CAAC3W,EAAqBH,KACvC,GAAmB,MAAfG,GAAuBwW,EAAexW,GAAc,CACtD,IAAK/L,EAAa/6B,QAChB,MAAM,IAAIkM,MACR,4EAGJ,MAIMwxC,EAAkB/W,EAJFzkC,EACpB64B,EAAa/6B,QAAQiiB,YACrB8Y,EAAa/6B,QAAQy5B,cAGvB,OAAOikB,EAAkB,EAAIA,EAAkB5W,CACjD,CACE,OAAOlpC,KAAK27B,IAAIoN,EAAS,EAC3B,EAGIgX,EAAiBC,IACrB,IAAK7iB,EAAa/6B,UAAY49C,EAC5B,OAAO,KAET,MAAMC,EAAaL,EAAQI,GAC3B,OAAIA,EAASprC,MAAM4qC,IAAgB3/C,SAAS,KACnCogD,EAAaL,EAAQziB,EAAa/6B,SAEpC69C,CAAU,EAGbC,EAAkBP,EAAcT,GAAiBxhB,GACjDyiB,EAAmBR,EAAcX,GAAkBlO,GACzD,OACEryC,EAAAA,cAAC6/C,GAAuBn2C,EAAAA,EAAAA,GAAA,CACtBuK,IAAKyqB,EACL5M,YAAaA,GACThd,GAEHs9B,GACCpyC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAC8/C,EAAU,CACT7rC,IAAKosC,EACLlqC,MAAO,CACL,CAAC4qC,GAAgBW,EAIjB,CAACV,IACoB,OAAlBP,EAAyBiB,OAAmBx7C,IAC7Cg6C,IAGH9N,GAEHpyC,EAAAA,cAAC6gD,GAAYn3C,EAAAA,EAAAA,GAAA,CACXq+B,gBAAiBA,KACf,MAAM51B,EAAOkuC,EAAa18C,QACtBw9C,EAAQd,EAAa18C,SACrB,EAEJ,OADA68C,EAAkBnO,GAAalgC,GACxBA,CAAI,EAEbotB,SAAW+K,IACa,MAAlBiW,GACFC,EAAkBY,EAAWb,EAAgBjW,GAC/C,EAEFtC,YAAaA,KACX,MAAMwZ,EAAaF,EAAcjB,EAAa18C,SAC3B,OAAf69C,GACFlP,IAAgBkP,GAElBhB,EAAkB,KAAK,GAErB/N,KAITwN,GACCjgD,EAAAA,cAAC+/C,EAAuB,CACtB5pC,MAAO,CACL,CAAC6qC,GAAmBZ,IAGrBH,GAGJ1N,GACCvyC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAC8gD,GAAap3C,EAAAA,EAAAA,GAAA,CACZq+B,gBAAiBA,KACf,MAAM51B,EAAOgvC,EAAQb,EAAY38C,SAEjC,OADA+8C,EAAiBzhB,GAAY9sB,GACtBA,CAAI,EAEbotB,SAAW+K,IACY,MAAjBmW,GACFC,EAAiBU,EAAWX,EAAenW,GAC7C,EAEFtC,YAAaA,KACX,MAAMwZ,EAAaF,EAAchB,EAAY38C,SAC1B,OAAf69C,GACFhP,IAAegP,GAEjBd,EAAiB,KAAK,GAEpBjO,IAENzyC,EAAAA,cAAC8/C,EAAU,CACT7rC,IAAKqsC,EACLnqC,MAAO,CACL,CAAC4qC,GAAgBU,EAIjB,CAACT,IACqB,OAAnBT,EAA0BkB,OAAkBv7C,IAC7Ci6C,IAGH5N,IAIiB,EAE5BJ,EAAA3xC,aAAA,qrG,sMClPF,MAGMmhD,EAAkB1xC,EAAAA,GAAOI,GAAI;;;gBAGnB3Q,IAAA,IAAC,MAAEsT,GAAOtT,EAAA,OAAKsT,EAAMqP,aAAa+3B,eAAe;WACtD/5C,IAAA,IAAC,MAAE2S,GAAO3S,EAAA,OAAK2S,EAAMC,MAAM,eAAe;;;YAGzCxO,IAAA,IAAC,MAAEuO,GAAOvO,EAAA,MAAM,aAAYuO,EAAMC,MAAM,0BAA0B;IAC1EotB,EAAAA;KACAtxB,EAAAA,EAAAA,QACF4Z,EAAAA,EAAAA,IAAG;;EAUQi5B,EAKTj9C,IAAqE,IAApE,SAAE/E,EAAUyb,OAAO,OAAEwoB,GAAQ,eAAE2H,KAAmBjiC,GAAY5E,EACjE,MAAMsP,GAAM9Q,EAAAA,EAAAA,QAAO,OACX0gC,OAAQge,EAAW,+BAAE/d,IAC3BE,EAAAA,EAAAA,GAA2B/vB,EAAK,CAC9B4vB,SACA2H,mBAGJ,OACExrC,EAAAA,cAAC66B,EAAAA,GAAO,KACN76B,EAAAA,cAAC2hD,GAAej4C,EAAAA,EAAAA,GAAA,GACVH,EAAU,CACd0K,IAAKA,EACLkC,MAAO,IAAK5M,EAAW4M,SAAU0rC,KAEjC7hD,EAAAA,cAACskC,EAAAA,EAA8BR,EAC7B9jC,EAAAA,cAAC0kC,EAAAA,EAAoB,CACnBpzB,SA7CmB,IA8CnBmuB,UA7CoB,KA+CrB7/B,IAGG,ECEP,SAASkiD,EAAgBpiD,GAQ5B,IAR6B,aAC/BqiD,EAAe,GAAE,eACjBvW,EAAc,iBACdwW,GAKDtiD,EACC,MAAMuiD,EAtDR,SAIEp3C,EAKAq3C,GAGA,MAAOC,EAAYC,IAAiBv/C,EAAAA,EAAAA,UAAc,IAC5Cw/C,EAASx3C,EAAM4E,MACnB,CAACb,EAAGc,IAAMyyC,EAAWxyC,QAAQuyC,EAAOtzC,IAAMuzC,EAAWxyC,QAAQuyC,EAAOxyC,MAEtE,MAAO,CACL2yC,SACAC,aAAezsC,IACbusC,GAAcG,EAAAA,EAAAA,GAAK1sC,GAAQ,EAAGwsC,GAAQ3/C,IAAIw/C,GAAQ,EAGxD,CAgC8BM,CAC1BT,GACA1hD,IAAA,IAAC,IAAEuK,GAAKvK,EAAA,OAAKuK,CAAG,KAEZ,YAAE63C,GA3BD,CACLA,aAJyBpnC,EA8Bc4mC,GA1BpBI,OAAO3/C,KAAI,CAAC+pB,EAAG5W,KAAK,CACrC6Y,QAASA,KACPrT,EAAMinC,aAAazsC,EAAM,OANjC,IAA6BwF,EAiC3B,OACErb,EAAAA,cAAAA,EAAAA,SAAA,KACGiiD,EAAoBI,OAAO3/C,KAAI,CAACggD,EAAY7sC,IAC3C7V,EAAAA,cAAC4hD,GAASl4C,EAAAA,EAAAA,GAAA,CACRkB,IAAK83C,EAAW93C,IAChByQ,MAAOqnC,GACHD,EAAY5sC,GAAM,CACtB21B,eAAiB3H,GAAW2H,EAAekX,EAAW93C,IAAKi5B,KAE1Dme,EAAiBU,EAAW93C,QAKvC,CD9BEg3C,EAAAphD,aAAA,4OC8BDshD,EAAAthD,aAAA,y5BC/CD,MAAMmiD,EACJ3iD,EAAAA,cAAoE,MAQzD4iD,EAAkCljD,IAGC,IAHmB,OACjEynC,EAAM,SACNvnC,GACwCF,EACxC,MAAMmjD,GAAU1/C,EAAAA,EAAAA,QAEb,CAAC,IACG2/C,EAAcC,IAAmBlgD,EAAAA,EAAAA,UAAsB,OACvDmgD,EAAaC,IAAkBpgD,EAAAA,EAAAA,UAAqB,OACpDqgD,EAAcC,IAAmBtgD,EAAAA,EAAAA,UAG9B,MACJugD,GAAqBjgD,EAAAA,EAAAA,SAKzB,IAAM,OACFkgD,GAAuBlgD,EAAAA,EAAAA,QAK1B,MAEGgtC,GAAez4B,EAAAA,EAAAA,UACnB,MACE4rC,UAAWA,CAAC3gD,EAAI4gD,KACVV,EAAQl/C,QAAQhB,IAClBiF,QAAQC,MAAO,sCAAqClF,KAGtDkgD,EAAQl/C,QAAQhB,GAAM4gD,EACf,YACEV,EAAQl/C,QAAQhB,EAAG,GAG9B6gD,UAAWA,CAAC7gD,EAAEtC,KAAqB,IAAnB,KAAEiO,EAAI,IAAE1D,GAAKvK,EAC3B,MAAMojD,EAASZ,EAAQl/C,QAAQhB,IAAKgB,QACpC,IAAK8/C,EACH,OAEF,MAAM,YAAEC,GAAgBD,EAClBE,EAAgBD,EAAY//C,QASlCo/C,EARqBn4C,IACnB+4C,EACGx3C,cAAe,cAAavB,OAC5Bo+B,wBAKW4a,CAAYh5C,GAAKi5C,UACjCZ,EAAer4C,GAEf,MAAMk5C,EAAcL,EAAOM,UAAUC,WAClC15C,GAASm5C,EAAOvB,OAAO53C,KAAUM,IAE9Bq5C,EAAeR,EAAOS,WAAWF,WACpC15C,GAASm5C,EAAOvB,OAAO53C,KAAUM,IAEpCy4C,EAAqB1/C,QAAU,CAC7BhB,KACAwhD,OAAQV,EAAOU,OACftuC,MAAOiuC,GAAe,EAAIA,EAAcG,EACxCG,QAASH,GAAgB,GAG3B,MAAMI,EAAsB7hD,OAAO4B,QAAQy+C,EAAQl/C,SAASjB,KAC1D+B,IAAA,IAAE9B,EAAI8gD,GAAOh/C,EAAA,MACX,CAAC9B,EAAI8gD,EAAO9/C,QAAS2gD,sBAAsB15C,GAAK,IAE9C25C,EAAmBC,IACvB,IAAK,MAAO7hD,EAAI4hD,KAAoBF,EAAqB,CACvD,MAAMnB,EAAeqB,EAAgBC,GACrC,GAAItB,EACF,MAAO,CACLvgD,KACAugD,eAGN,CACA,OAAO,IAAI,EAGbC,EAAgBoB,EAAgBj2C,IAEhC80C,EAAmBz/C,QAAU4gD,CAAe,EAE9ChC,KAAM59C,IAAa,IAAZ,GAAEwa,GAAIxa,EACXw+C,EAAgBC,EAAmBz/C,QAAQwb,GAAI,EAEjDslC,QAASA,KACHvB,GAAgBF,GAClB7b,EAAO,CACL74B,KAAM+0C,EAAqB1/C,QAC3Bwb,GAAI,CACFglC,OAAQjB,EAAavgD,GACrBkT,MAAOqtC,EAAaA,aAAartC,MACjCuuC,QAASlB,EAAaA,aAAap4B,SAIzCm4B,EAAe,MACfE,EAAgB,MAChBJ,EAAgB,KAAK,EAEvBG,eACAJ,eACAE,iBAEF,CAACE,EAAcF,EAAaF,IAG9B,OACE9iD,EAAAA,cAAC2iD,EAA+B/8C,SAAQ,CAACC,MAAOsqC,GAC7CvwC,EACuC,EAyC7CgjD,EAAApiD,aAAA,k/CCxND,MAAMkkD,EAAYz0C,EAAAA,GAAOI,GAAI;;;EAIvBs0C,EAAe10C,EAAAA,GAAOI,GAAI;;;EAI1Bu0C,EAAa30C,EAAAA,GAAOI,GAAI;;EAGxBw0C,EAAc50C,EAAAA,GAAOI,GAAI;;EAGzBy0C,EAAY70C,EAAAA,GAAOI,GAAI;;;;;;EAsChB00C,EAA8B,CACzCC,MAxBY/0C,EAAAA,GAAOI,GAA8B;;;;;;;;;gBASnC3Q,IAAA,IAAC,MAAEsT,GAAOtT,EAAA,OAAKsT,EAAMqP,aAAa+3B,eAAe;WACtD/5C,IAAA,IAAC,MAAE2S,GAAO3S,EAAA,OAAK2S,EAAMC,MAAM,eAAe;IACjDxO,IAAA,IAAC,YAAEwgD,GAAaxgD,EAAA,OAChBwgD,IACAt8B,EAAAA,EAAAA,IAAG,mCACC+7B,EACAC,EACAC,EACAC,EAGH;EAKHH,YACAC,eACAC,aACAC,cACAC,a,yFCaF,MAAMI,EAAkBA,CAACC,EAA8BhB,IACrDgB,GAAcC,EAAAA,EAAAA,IAAuBjB,GAAU,SAAW,SAEtDkB,GAAW3iD,EAAAA,EAAAA,IAAiCyvB,EAAAA,EAAAA,GAAK,QACjDmzB,GAAkBC,EAAAA,EAAAA,GACtBF,GACA99C,EAAAA,EAAAA,IAAO7H,IAAA,IAAC,MAAE8lD,GAA+B9lD,EAAA,OAAK8lD,CAAK,KAE/CC,GAAcnhD,EAAAA,EAAAA,IAClBjE,IAAA,IAAC,QAAE+jD,GAAiC/jD,EAAA,OAAM+jD,CAAO,IAE7CsB,GAAWH,EAAAA,EAAAA,GAAQD,EAAiBG,GACpCE,GAAerhD,EAAAA,EAAAA,IACnBG,IAAA,IAAC,QAAE2/C,GAAiC3/C,EAAA,OAAK2/C,CAAO,IAE5CwB,EAAgB,SAACC,GAA4C,YAAL,IAAvCA,IAAAA,EAA0C,KAC/DvhD,EAAAA,EAAAA,IACEK,IAAA,IAAC,SAAEmhD,EAAQ,UAAE7jB,GAAmCt9B,EAAA,OAC9Cs9B,GACC,GAAkB36B,OAAOu+C,GAAkBzkD,SAAS0kD,EAAS,GAChE,EACEC,GAAYR,EAAAA,EAAAA,GAAQD,EAAiBK,GAErCK,EAAsBJ,EAAc,CAAC,kBAAmB,kBACxDK,EAAwBL,EAAc,UAEtCM,EAAYA,CAChB/B,EACAgB,EACAgB,KAEA,MAAMC,EAAQJ,EAAoBG,GAC5BE,EAAQZ,EAAYW,GACpBE,EAASX,EAAaS,GAC5B,GAAIC,EAAMviD,OAAS,GAAKwiD,EAAOxiD,OAAS,EACtC,MAAM,IAAI+L,MACR,iEAGJ,GAAIw2C,EAAM,IAAMC,EAAO,GAAI,CACzB,MAAMC,EAASF,EAAM,IAAIE,QAAUD,EAAO,IAAIC,OAC9C,MAAO,CACLC,QAASH,EAAM,IAAIz7C,KAAO07C,EAAO,IAAI17C,IACrCkgB,MACEu7B,EAAM,IAAIz7C,KAAO07C,EAAO,IAAI17C,IACxB,CACEA,IAAK07C,EAAO,GAAG17C,IACf67C,aAAcJ,EAAM,GAAGE,OACnB,EAAIF,EAAM,GAAGK,WACbJ,EAAO,GAAGI,YAEhB,KACNv0C,KAAMo0C,EAASrB,EAAgBC,EAAehB,GAElD,CACA,OAAO,IAAI,EAGPwC,EAAcA,CAClBxC,EACAgB,EACAgB,KAEA,MAAMtgB,EAAUogB,EAAsBE,GACtC,GAAuB,IAAnBtgB,EAAQ/hC,OACV,MAAO,CACL8G,IAAKi7B,EAAQ,GAAGj7B,IAChBuH,KAAM0zB,EAAQ,GAAG0gB,OAASrB,EAAgBC,EAAehB,IAG7D,GAAuB,IAAnBte,EAAQ/hC,OACV,OAAO,KAET,MAAM,IAAI+L,MACR,kEACD,EAGG+2C,EAAeA,CACnBzC,EACAgB,EACAgB,KAAqC,CAErCtD,QAAS,CACPgE,KAAMnB,EAASS,GACfr7B,MAAOi7B,EAAUI,GACjBW,WAAYzB,EAASc,EAAY7hD,QAAOkP,IAAA,IAAC,UAAEyuB,GAAWzuB,EAAA,OAAKyuB,CAAS,MAEtE8kB,SAAUJ,EAAYxC,EAAQgB,EAAegB,GAC7Ca,OAAQd,EAAU/B,EAAQgB,EAAegB,KAGrCc,EAAiB,IACjBC,EAAgB,IAahBC,EAAuBA,CAC3BrB,EACAX,EACAgB,KAEA/Y,EAAAA,EAAAA,GACEwY,EAAcE,IACdpjD,EAAAA,EAAAA,GAlBDyiD,IACDzxC,IAAA,IACE0zC,eAAgBvjB,EAAS,CACvBnyB,IAAKyzC,EAAc/lB,OAAS,EAAI6nB,EAAiB,EACjDhqB,KAAMkoB,EAAc/7B,MAAQ,EAAI89B,EAAgB,EAChD9nB,OAAQ6nB,EACR79B,MAAO89B,GACR,IACDt8C,GACuB8I,EAAA,MAAwB,CAAEmwB,SAAQj5B,MAAK,EAU5Dy8C,CAAoBlC,IAHxB/X,CAKE+Y,G,0BC7KG,MAAM7B,GAAwB5kD,IAcgB,IAdA,OACnDykD,EAAM,cACNR,EAAa,WACbO,EAAU,UACVH,EAAS,YACTH,EAAW,OACX1B,GAQDxiD,EAIC,MAAM4nD,EAAgBA,IAAM3D,EAAc3a,wBAYpCue,EAASC,IACbpC,EAAAA,EAAAA,IAAuBjB,GAAUqD,EAAKvqB,KAAOuqB,EAAK91C,IAC9C+1C,EAAOD,IACXpC,EAAAA,EAAAA,IAAuBjB,GAAUqD,EAAKxiB,MAAQwiB,EAAK/f,OAe/CigB,EAAmB,SACvB78C,EACAigB,QAAK,IAALA,IAAAA,GAAQ,GAGR,MAAM68B,EAAS78B,EAAQ28B,EAAMF,EAC7B,OAAqB,IAAjB18C,EAAM/G,OAED,CACL,CACE+R,MAAO,EACPiV,QACA88B,MAAQ9E,GACNvhD,KAAKsmD,IAAIF,EAAO7E,GAAgB6E,EAAOL,QAIxCz8C,EAAMxG,SAAQ,CAACiG,EAAMuL,KAC1B,MAAMjL,EAAMs3C,EAAO53C,GACnB,MAAO,CACL,CACEuL,QACAiV,QACAg9B,SAAU,CAAEl9C,MAAKyB,UAAW,UAC5Bu7C,MAAQ9E,GACNvhD,KAAKsmD,IAAIF,EAAO7E,GAAgBiF,EAAan9C,GAAK28C,QAEtD,CACE1xC,MAAOA,EAAQ,EACfiV,QACAg9B,SAAU,CAAEl9C,MAAKyB,UAAW,SAC5Bu7C,MAAQ9E,GACNvhD,KAAKsmD,IAAIF,EAAO7E,GAAgBiF,EAAan9C,GAAK68C,MAEvD,GAEL,EAEMM,EAnDmBl9C,KACvB,MAAMk9C,EAA4D,CAAC,EASnE,OARAl9C,EAAMmN,SAAS1N,IACb,MAAMM,EAAMs3C,EAAO53C,GACb09C,EAAepE,EAAYh5C,GACjCm9C,EAAan9C,GAAO,CAClB28C,MAAOA,EAAMS,GACbP,IAAKA,EAAIO,GACV,IAEID,CAAY,EAyCAE,CAAgB,IAAIlE,KAAcG,IAEjDgE,EAAgB,IACjBR,EAAiB3D,MACjB2D,EAAiBxD,GAAY,IAGlC,IAAIiE,EAAwC,KAC5C,OAAQrF,IACN,IA3EkBA,KAClB,MAAMsF,EAAad,IACnB,OACExE,EAAa9d,MAAQojB,EAAWnrB,KAAOmrB,EAAWh/B,OAClD05B,EAAa7lB,KAAOmrB,EAAWpjB,OAC/B8d,EAAarb,OAAS2gB,EAAW12C,IAAM02C,EAAWhpB,QAClD0jB,EAAapxC,IAAM02C,EAAW3gB,MAAM,EAqEjC4gB,CAAWvF,GACd,OAAO,KAET,MAAMlhC,EAASsmC,EAAc99B,QAC3B,CAACk+B,EAAWC,KACV,MAAMX,EAAQW,EAAUX,MAAM9E,GAC9B,OAAKwF,GAAaV,EAAQU,EAAUV,MAC3B,IACFW,EACHX,SAGGU,CAAS,GAElB,MAOF,OAAK1mC,GAIHA,EAAOkJ,QAAUq9B,GAAkBr9B,OACnClJ,EAAO/L,QAAUsyC,GAAkBtyC,QAEnCsyC,EAAmBvmC,GAEdumC,GARE,IAQc,CACxB,E,gBCpII,MACMK,GAA4B,OAuB5BC,GAA+Bx4C,EAAAA,GAAOa,IAAwC;;;;;;;;;;iBAU1E03C;;WAENnoD,IAAA,IAAC,MAAE2S,EAAK,OAAEgL,GAAQ3d,EAAA,OACzB2d,EACIhL,EAAMC,MACJ,uCACAD,EAAME,KAAO,mBAAqB,cAEpCF,EAAMC,MAAM,eAAe;gBACnBxO,IAAA,IAAC,MAAEuO,EAAK,OAAEgL,GAAQvZ,EAAA,OAC9BuZ,EACIhL,EAAMC,MACJ,uCACAD,EAAME,KAAO,sBAAwB,4BAEvChN,CAAS;;IA9CIxG,IAAqC,IAApC,OAAEykD,GAA4BzkD,EAIlD,MAAuB,gBAFV,SAAXykD,GAAgC,UAAXA,EAAqB,WAAa,eAGrDx7B,EAAAA,EAAAA,IAAG,wBARkC,MAWrCA,EAAAA,EAAAA,IAAG,6FAXkC,IAeX,SAAXw7B,EAAoB,uBAAoBj+C,EAGnDwkB,GAAAA,EAGH;IA+BH/lB,IAAA,IAAC,OAAEqZ,GAAQrZ,EAAA,OACVqZ,IACD2K,EAAAA,EAAAA,IAAG,8BAEenV,IAAA,IAAC,MAAER,GAAOQ,EAAA,OACtBR,EAAMC,MACJ,oCACAD,EAAME,KAAO,sBAAwB,sBACtC,GAEN;kBC9DL,MAAMusB,GAAa,QAAO+oB,YAoCbE,GAAyBz4C,EAAAA,GAAOI,GAAiC;;gBAE9D5L,IAAA,IAAC,MAAEuO,EAAK,YAAE2qC,GAAal5C,EAAA,OACnCk5C,EACIW,GAAAA,EAAMY,SAASlsC,EAAMqP,aAAa+3B,iBAClCpnC,EAAMqP,aAAa+3B,eAAe;;;IAhBtB/5C,IAAA,IAAC,OAAE8jD,EAAM,MAAEnxC,GAAyC3S,EAAA,OACtEsoB,EAAAA,EAAAA,IAAG,8BAAUggC,EAAAA,EAAAA,IAAaxE,GACxBnxC,EAAMqP,aAAawiB,eAAc;IAvBhBnlC,IAAA,IAAC,OACpBykD,EAAM,gBACNyE,GAC4BlpD,EAAA,OAC5B0lD,EAAAA,EAAAA,IAAuBjB,IACnBx7B,EAAAA,EAAAA,IAAG,sEAGaigC,EAAkBnpB,GAAY,cAC1CgpB,KAIJ9/B,EAAAA,EAAAA,IAAG,wEAGYigC,EAAkBnpB,GAAY,cACzCgpB,GAGH;EAwBMI,GAAe54C,EAAAA,GAAOI,GAAI;;kBChBhC,SAASy4C,GAAcppD,GAOA,IAPI,IAChCuU,EAAG,YACHizB,EAAW,OACXC,EAAM,UACNG,EACAyhB,MAAOC,KACJC,GACsBvpD,EACzB,OAAOunC,EAAAA,GAAAA,GAAQ,IACVgiB,EACH/hB,YAAaA,KACX,MAAM7hC,EAAU4O,EAAItQ,QACpB,IAAIolD,EAA4B,KAChC,IAAK1jD,EACH,MAAM,IAAIwK,MACR,yHAGJ,MAAMq5C,EAAuB1B,IACvBuB,IACFA,EAAM5yC,MAAM8mB,KAAQ,GAAEuqB,EAAKvqB,SAC3B8rB,EAAM5yC,MAAMzE,IAAO,GAAE81C,EAAK91C,QAC5B,EAEIpD,EAAajJ,EAAQ2jC,wBAC3B,GAAIggB,EAAa,CACf,MAAMG,EAsCd,SAA4B9jD,GAC1B,MAAM0jD,EAAQ1jD,EAAQqkC,WAAU,GAEhC,OADAqf,EAAM5yC,MAAMic,gBCnGP,SAAsC/sB,GAC3C,IAAImwC,EAA2BnwC,EAC3B+jD,EAAkB,GACtB,KAAe,MAAR5T,GAAc,CACnB,MAAM6T,EAAqB7zC,iBAAiBggC,GAAMpjB,gBAClD,GAAIi3B,EAAoB,CACtB,MAAMp2C,EAAQ,IAAIqrC,GAAAA,EAAM+K,GAExB,GADAD,EAAOE,QAAQr2C,GACC,MAAZA,EAAMrE,EAER,KAEJ,CACA4mC,EAAOA,EAAKzT,aACd,CACA,OACEqnB,EACGh/B,QAAqB,CAACm/B,EAAaC,IAC3BD,EAAcA,EAAYhK,MAAMiK,GAAaA,GACnD,OACDlK,YAAc,EAEtB,CD6EgCmK,CAA6BpkD,GACpD0jD,CACT,CA1C6BW,CAAmBrkD,GACxC0jD,EACyB,mBAAhBC,GACHA,EAAYG,IACZA,EACNJ,EAAM5yC,MAAM+B,SAAW,QACvBrT,SAASqM,KAAKy4C,OAAOZ,GACrBG,EAAoB56C,EACtB,CACA,MAAO,CACLy6C,QACAz6C,OACA46C,sBACA9hB,WAAYF,EAAY,CAAE54B,SAC3B,EAEH64B,OAAQ9mC,IAGD,IAHE,SACPgnC,EACAD,YAAY,KAAE94B,EAAI,oBAAE46C,EAAmB,WAAE9hB,IAC1C/mC,EACC,MAAM8e,EAAW,CACf8d,KAAM3uB,EAAK2uB,KAAOoK,EAAS54B,EAC3Bu2B,MAAO12B,EAAK02B,MAAQqC,EAAS54B,EAC7BiD,IAAKpD,EAAKoD,IAAM21B,EAASrK,EACzByK,OAAQn5B,EAAKm5B,OAASJ,EAASrK,EAC/BoC,OAAQ9wB,EAAK8wB,OACbhW,MAAO9a,EAAK8a,OAEd8/B,EAAoB/pC,GACpBgoB,EAAO,CAAE74B,OAAM6Q,KAAIkoB,WAAUD,cAAa,EAE5CE,UAAW7iC,IAA4C,IAAzC2iC,YAAY,MAAE2hB,EAAK,WAAE3hB,IAAc3iC,EAC/CskD,GAAOh9B,SACPub,IAAY,CAAEF,cAAa,GAGjC,CEnFO,SAASwiB,GAAgBlqD,GAQF,IARM,OAClCykD,EACAt5C,MAAOk5C,EACPvyB,WAAYq4B,EAAM,WAClB3F,EAAa,GAAE,aACfprB,EAAe,GAAE,YACjBgxB,EAAW,OACX5H,GACyBxiD,EACzB,MAAMg/B,GAAev7B,EAAAA,EAAAA,QAAuB,OAEtC,SAAE4mD,EAAQ,aAAEjH,EAAY,YAAEE,EAAW,aAAEE,GRqJxC,SAAoCnhD,GAEzC,MAAMY,EAAKZ,EAAMoiD,OACX/9C,GAAUnE,EAAAA,EAAAA,YAAW0gD,GACrBqH,GAAiBrrC,EAAAA,EAAAA,GAAU5c,GAwBjC,OAvBA0D,EAAAA,EAAAA,YAAU,KACR,GAAIW,EACF,OAAOA,EAAQk9C,UAAU3gD,EAAIqnD,EAC/B,GACC,CAAC5jD,EAASzD,IAmBN,CACLonD,SAjBAn/C,IAAQ,CAKRq/C,cAAe7jD,EACf8gC,YAAa1zB,IAAe,IAAd,KAAElF,GAAMkF,EACpBpN,GAASo9C,YAAY7gD,EAAI,CAAE2L,OAAM1D,OAAM,EAEzCu8B,OAAQzzB,IAAa,IAAZ,GAAEyL,GAAIzL,EACbtN,GAASm8C,KAAK,CAAEpjC,MAAK,EAEvBmoB,UAAWA,KACTlhC,GAASq+C,SAAS,IAKpB3B,aAAc18C,GAAS08C,cAAgB,KACvCI,aACE98C,GAAS88C,cAAcvgD,KAAOA,EAC1ByD,GAAS88C,aAAaA,aACtB,KACNF,YAAa58C,GAAS48C,aAAe,KAEzC,CQzLIkH,CAAwB,CACtBxG,YAAahlB,EACbwjB,SACAiC,SACAJ,YACAG,aACAI,sBAAwB15C,IACtB,MAAMu/C,EAAoBC,GAAclI,EAAOkI,KAAYx/C,EACrD+4C,EAAgBjlB,EAAa/6B,QAKnC,OAAO2gD,GAAsB,CAC3BX,cAAeA,EACfI,UAAWA,EAAUz/C,OAAO6lD,GAC5BjG,WAAYA,EAAW5/C,OAAO6lD,GAC9BjI,SACAiC,SACAP,YAVmBh5C,GACnB+4C,EACGx3C,cAAe,cAAavB,OAC5Bo+B,yBAQH,IAIF2U,EACY,MAAhBuF,GACe,MAAfF,GACA,IAAIe,KAAcG,GAAYljD,OAAOsJ,GAAS43C,EAAO53C,KAAU04C,IAE3DxxB,EAAclnB,IAClB,MAAMM,EAAMs3C,EAAO53C,GAEnB,OACEtK,EAAAA,cAACqqD,IAAsB3gD,EAAAA,EAAAA,GAAA,CACrBy6C,OAAQA,EACRv5C,IAAKA,EACL,WAAUA,EACVuL,MAAO,IACFm0C,GAAsB,CACvB1/C,MACAs4C,eACAiB,SACArB,eACAE,kBAGA+G,EAASn/C,GAAI,CACjBoT,OAAQ8a,EAAa13B,SAASwJ,GAC9BhB,QAASA,IAAMkgD,IAAcl/C,KAE5Bi/C,EAAOv/C,GACe,EAG7B,OACEtK,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAC0oD,GAAsB,CACrBvE,OAAQA,EACRyE,gBAAiBznD,QAAQ+hD,GACzBvF,YAAaA,EACb1pC,IAAKyqB,GAEJqlB,EAAUrhD,IAAI8uB,GACfxxB,EAAAA,cAAC6oD,GAAY,MACZ3E,EAAWxhD,IAAI8uB,IAIxB,CAGA,SAAS84B,GAAqBjqD,GAY1B,IAZ2B,OAC7B8jD,EAAM,IACNv5C,EAAG,aACHs4C,EAAY,aACZJ,EAAY,YACZE,GAOD3iD,EACC,MAAMkqD,EAAwB,CAC5B,EAEF,GAAIrH,GAAc4E,UAAUl9C,MAAQA,GAAOk4C,EAAc,CACvD,MAAM0H,GAAcpF,EAAAA,EAAAA,IAAuBjB,GACvCrB,EAAa15B,MACb05B,EAAa1jB,QAEbgmB,EAAAA,EAAAA,IAAuBjB,GACzBoG,EACsC,WAApCrH,EAAa4E,SAASz7C,UAClB,aACA,eACFm+C,EAEJD,EACsC,WAApCrH,EAAa4E,SAASz7C,UAClB,YACA,gBACFm+C,CAER,CAIA,OAHI5/C,IAAQo4C,IACVuH,EAAOE,QAAU,QAEZF,CACT,CAEA,SAASF,GAAsB5lD,GAmB3B,IAnBkC,SACpC7E,EAAQ,OACRukD,EAAM,YACNjd,EAAW,OACXC,EAAM,UACNG,EAAS,QACT19B,EAAO,aACPqgD,KACG1gD,GAWJ9E,EACC,MAAMwP,GAAM9Q,EAAAA,EAAAA,QAAoB,OAK1B,WAAE8qB,GAAe,CACrBA,WAAY,CACVuM,YAAa5wB,EACbkmB,YAAcnvB,IACZA,EAAEuE,gBAAgB,IAIlBnD,EAAQ+mD,GAAe,CAC3B70C,MACAkF,SAAU8wC,EACVn4C,cAAe,EACfi3C,OAAO,EACP7hB,cACAC,SACAG,cAGF,OACEtnC,EAAAA,cAACyoD,IAA4B/+C,EAAAA,EAAAA,GAAA,CAC3By6C,OAAQA,IACJnrC,EAAAA,GAAAA,GAAWzP,EAAY0kB,EAAYlsB,GAAM,CAC7CkS,IAAKA,IAEJrU,EAGP,CAACgqD,GAAAppD,aAAA,6lC,gBC/LM,MAAMkqD,GAAmBz6C,EAAAA,GAAOI,GAAwB;;;;IAI3D3Q,IAAA,IAAC,OAAEykD,GAAQzkD,EAAA,OACX0lD,EAAAA,EAAAA,IAAuBjB,IACnBx7B,EAAAA,EAAAA,IAAG,sBAIHA,EAAAA,EAAAA,IAAG,oBAGF;IACLtoB,IAAA,IAAC,OAAE8jD,GAAQ9jD,EAAA,OACXsoB,EAAAA,EAAAA,IAAG,WACCw7B,EAAM;EAIP,SAASwG,GAAUlmD,GAUtB,IAVuB,MACzB4W,EAAK,OACL8oC,EAAM,SACNvkD,EAAQ,SACR2/B,GAMD96B,EACC,OACE4W,GACErb,EAAAA,cAAC0qD,GAAgB,CAACvG,OAAQA,GACxBnkD,EAAAA,cAACiyC,GAAAA,EAAa,CACZngB,aACEszB,EAAAA,EAAAA,IAAuBjB,GAAU,WAAa,aAEhDjS,iBACa,SAAXiS,GAAgC,QAAXA,EAAmB,QAAU,SAEpDhyC,KAAMkJ,EAAMlJ,KACZotB,SAAUA,GAET3/B,GAKX,CAAC+qD,GAAAnqD,aAAA,siB,gBC+CM,MAAMoqD,GAAc5qD,EAAAA,YAAiB,SAAoBN,EAa9DuU,GACqB,IAbrB,mBACE42C,GAAqB,EAAK,oBAC1BC,GAAsB,EAAK,OAC3B1rB,EAAS,OAAM,UACfK,EAAY,IAAG,iBACfsrB,EAAgB,wBAChBC,EAAuB,QACvBnlB,EAAO,SACPjmC,EAAQ,oBACRqrD,EAAsB,GAAE,eACxBn2C,EAAiB,CAAC,GACDpV,EAGnB,MAAMwrD,GAAcC,EAAAA,EAAAA,IAAQ9qD,IAAA,IAAC,GAAEsC,GAAItC,EAAA,OAAKsC,CAAE,GAAEkjC,GACtCnH,GAAev7B,EAAAA,EAAAA,QAAuB,MACtCioD,GACJjoD,EAAAA,EAAAA,QAA8C,OACzCkoD,EAAaC,IAAkBzoD,EAAAA,EAAAA,YAChC0oD,GAAsBpoD,EAAAA,EAAAA,QAEzB,CAAC,GAEEqoD,GAAY7sC,EAAAA,EAAAA,GAAU,CAAEosC,mBAAkBC,6BAEhD9hC,EAAAA,EAAAA,kBAAgB,KACd,MAAMuiC,EAAY/sB,EAAa/6B,QACzB+nD,EAAkBA,IACtBJ,ER4DC,SACLjwC,EACA8pC,EAKAwG,QAAmB,IAAnBA,IAAAA,EAAsBnpD,OAAOsE,KAAKuU,EAAMwqB,UAExC,MAAMsgB,EAAc3jD,OAAOsE,KAAKuU,EAAMwqB,SACnCvhC,QACEsG,GAAQ+gD,EAAUvqD,SAASwJ,KAASyQ,EAAMuwC,sBAAsBptC,IAAI5T,KAEtElI,KAAKkI,IAAG,IACJyQ,EAAMwqB,QAAQj7B,GACjBA,WAEE,IACJ8G,EAAM,GAAE,OACR+1B,EAAS,GAAE,KACXxK,EAAO,GAAE,MACT+H,EAAQ,KACN6mB,EAAAA,EAAAA,IAAQzyC,IAAA,IAAC,OAAE+qC,GAAQ/qC,EAAA,OAAK+qC,CAAM,GAAEgC,GACpC,MAAO,CACLlpB,KAAM2pB,EAAa,OAAQzB,EAAeloB,GAC1CvrB,IAAKk1C,EAAa,MAAOzB,EAAezzC,GACxCszB,MAAO4hB,EAAa,QAASzB,EAAengB,GAC5CyC,OAAQmf,EAAa,SAAUzB,EAAe1d,GAC9C5B,QAASshB,EAAqB,SAAUhC,EAAegB,GACvDpE,aAAcoF,EAAqB,QAAShC,EAAegB,GAE/D,CQ1FQ2F,CACEf,EACAU,EAAWziB,wBACXnD,EAAQnjC,KAAI+B,IAAA,IAAC,GAAE9B,GAAI8B,EAAA,OAAK9B,CAAE,MAWhC,GAA+B,IAA3B8oD,GAAW7lC,aAAiD,IAA5B6lC,GAAWruB,aAAoB,CACjE,MAAM2uB,EAAW,IAAIC,gBAAernD,IAAe,IAAbsnD,GAAOtnD,EACvCsnD,EAAOC,YAAY9iC,MAAQ,GAAK6iC,EAAOC,YAAY9sB,OAAS,IAC9DssB,IACAK,EAASI,UAAUV,GACrB,IAEFM,EAAShiB,QAAQ0hB,EACnB,CACAC,GAAiB,GAChB,CAACX,KAEJl3B,EAAAA,EAAAA,qBACE5f,GACA,MACE+H,MAAQpR,IACN2gD,EAAoB5nD,QAAQiH,IAAMjH,SAASqY,OAAO,EAEpDowC,SAAWxhD,GAET,OADA/F,SAASk6B,eAAep4B,QAAS,yBAAwBiE,OAE3DyhD,sBAAuBA,KACrB,MAAM,eAAEC,GAAmBd,EAAU7nD,QAAQonD,iBACvB,MAAlBuB,IAECd,EAAU7nD,QAAQonD,iBAAiBllB,QAAQymB,GACzCrqB,WAEHupB,EAAU7nD,QAAQqnD,wBAChBD,EAAiBp/C,KAAK2gD,IAG1Bf,EAAoB5nD,QAAQ2oD,GAAgB3oD,SAASqY,OAAM,GAC7D,EAEFuwC,iBAAkBA,KAChBnB,EAAyBznD,SAASqY,OAAO,EAE3CwwC,YAAcC,IACZzB,EAAwByB,EAAQjB,EAAU7nD,QAAQonD,kBAAkB,KAGxE,IAGF,MAAM2B,GAAwBvpD,EAAAA,EAAAA,SAAO,IACrC6pC,EAAAA,GAAAA,GAAmB,CACjB/4B,IAAKyqB,EACLuO,uBAAwBA,KACtByf,EAAsB/oD,SAAU,CAAI,EAEtCupC,kBAAmBA,KACjBwf,EAAsB/oD,SAAU,CAAK,IC5LpC,SACLgpD,EAIAjuB,IAEAj5B,EAAAA,EAAAA,YAAU,KACR,MAAMmnD,EAAmBjsD,IAErBA,EAAE2E,kBAAkBsB,aACpB83B,EAAa/6B,SAASm7B,SAASn+B,EAAE2E,WAC/B3E,EAAEob,eAAiBpb,EAAEob,yBAAyBnV,eAC/C83B,EAAa/6B,SAASm7B,SAASn+B,EAAEob,gBAElC4wC,EAAY,CACVE,mBAAoBlsD,EAAE2E,OACtBwnD,sBAAuBnsD,EAAEob,eAE7B,EAGF,OADA2iB,EAAa/6B,SAASmB,iBAAiB,WAAY8nD,GAC5C,KACLluB,EAAa/6B,SAAS+f,oBAAoB,WAAYkpC,EAAgB,CACvE,GACA,GACL,CDsKEG,EAAev5C,IAAgC,IAA/B,sBAAEs5C,GAAuBt5C,EAClCs5C,GAA0BJ,EAAsB/oD,SACnDynD,EAAyBznD,SAASqY,OACpC,GACC0iB,GAGH,MAAMsuB,EAAet5C,IAAA,IAAC,OACpBywC,EAAM,MACN9oC,GAID3H,EAAA,OACC1T,EAAAA,cAAC4pD,GAAgB,CACfzF,OAAQA,EACRt5C,MAAOwQ,EAAMwrC,KACb3C,WAAY7oC,EAAMyP,MAClBo3B,OAAS53C,GAASA,EAClBknB,WAAalnB,GAAS4gD,EAAY5gD,IAAO2iD,cACzCnD,YAAcl/C,GACZogD,EAAwBD,EAAiBh1C,OAAOnL,IAElDkuB,aAAczd,EAAMyrC,YACpB,EAGE9E,EAAoBp3C,IACnB2gD,EAAoB5nD,QAAQiH,KAC/B2gD,EAAoB5nD,QAAQiH,GAAO5K,EAAAA,aAGnCA,EAAAA,cAAA,OACEmW,MAAO,CAAE+2C,IAAK,SACd,sBAAqBtiD,EACrB8jB,QAASA,KACPs8B,EAAwBD,EAAiBoC,YAAYviD,GAAK,GAG5D5K,EAAAA,cAACka,EAAAA,EAAU,CAACjG,IAAKs3C,EAAoB5nD,QAAQiH,IAC3C5K,EAAAA,cAACotD,EAAAA,EAAuB,CACtBzqD,GAAIiI,EACJ8zB,aAAcA,EACd2uB,wBAAyBjC,EACzBL,iBAAkBA,EAClBC,wBAAyBA,GAExBE,EAAYtgD,IAAMU,YAOvBgiD,EAAuBl0C,IAMtB,IANuB,OAC5B+qC,EAAM,MACN9oC,GAIDjC,EACC,OAAKiC,EAIHrb,EAAAA,cAACmyC,EAAAA,EAAiB,CAChB8N,UAAW+B,EAAiB3mC,EAAMmrC,SAClCpG,iBAAkB,GAClB7N,SAAUl3B,EAAMyP,OAASk3B,EAAiB3mC,EAAMyP,MAAMlgB,KACtDq0B,SAAU5jB,EAAMyP,OAAO27B,aACvBjU,aAAelI,IACb0gB,EACED,EAAiBwC,oBAAoBpJ,EAAQ7Z,GAC9C,EAEHxY,aAAaszB,EAAAA,EAAAA,IAAuBjB,GAAU,aAAe,aAbxD,IAcL,EAGAqJ,EAAgBrJ,GAAoBhyC,IACxC,MAAMs7C,EAAkB/uB,EAAa/6B,SAASqlC,wBAE1CykB,GACFzC,EACED,EAAiB2C,WAAWvJ,EAAQhyC,EAAMs7C,GAE9C,EAEIE,EAAoBA,CACxBtC,EACAv5B,KAEA,MAAM87B,EAA8B,eAAhB97B,EAA+B,OAAS,MACtD+7B,EAA+B,eAAhB/7B,EAA+B,QAAU,SAC9D,MAAO,CACLA,cACAsgB,UAAWkb,EAAqB,CAC9BnJ,OAAQyJ,EACRvyC,MAAOgwC,EAAYuC,GAAa5G,SAElC3U,UAAWgZ,EAAYuC,GAAa5G,QAAQ70C,KAC5CmgC,cAAekb,EAAaI,GAC5Brb,SAAU+a,EAAqB,CAC7BnJ,OAAQ0J,EACRxyC,MAAOgwC,EAAYwC,GAAc7G,SAEnC/nB,SAAUosB,EAAYwC,GAAc7G,QAAQ70C,KAC5CqgC,aAAcgb,EAAaK,GAC5B,EAyHH,OACE7tD,EAAAA,cAAC+kD,EAA4BC,OAAKt7C,EAAAA,EAAAA,GAAA,GAC5BoL,EAAc,CAClBb,IAAKyqB,EAMLumB,YAAa4F,EACb10C,MAAO,CAAEipB,SAAQK,eAAc3qB,GAAgBqB,SAE9Ck1C,GAnIsBA,KACzB,MAAMyC,EAA0BH,EAC9BtC,EACA,cAEI0C,EAAwBJ,EAAkBtC,EAAa,aAEtD2C,EAAoBC,GAAsBnD,EAC7C,CAACgD,EAAyBC,GAC1B,CAACA,EAAuBD,GAEtBI,EAAgB,CAAC,OAAQ,MAAO,QAAS,UAAoBxrD,KAChEyhD,IACC,MAAM9oC,EAAQgwC,EAAYlH,GAAQ4C,SAClC,OACE1rC,GACErb,EAAAA,cAAC2qD,GAAU,CACT//C,IAAKu5C,EACLA,OAAQA,EACR9oC,MAAOA,EACPkkB,SAAWptB,IACTusB,EAAa/6B,SACXqnD,EACED,EAAiBoD,aACfhK,EACAhyC,EACAusB,EAAa/6B,QAAQqlC,yBAExB,GAGJgZ,EAAiB3mC,EAAMzQ,KAE3B,IAKP,OACE5K,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAC4iD,EAA+B,CAC9Bzb,OAAQ7tB,IAAmB,IAAlB,GAAE6F,EAAE,KAAE7Q,GAAMgL,EACnB0xC,EACED,EAAiBxI,KACf8I,EAAY/8C,EAAK61C,QAAQtB,QACvBv0C,EAAK81C,QAAU,QAAU,QACzB91C,EAAKuH,OACP,CAAEsuC,OAAQhlC,EAAGglC,OAAQC,QAASjlC,EAAGilC,SACjCjlC,EAAGtJ,OAEN,GAQH7V,EAAAA,cAAC+kD,EAA4BH,WAAU,KACpCoI,EAAa,CACZ7I,OAAQ,OACR9oC,MAAOgwC,EAAkB,KAAExI,WAG/B7iD,EAAAA,cAAC+kD,EAA4BL,UAAS,KACnCsI,EAAa,CACZ7I,OAAQ,MACR9oC,MAAOgwC,EAAiB,IAAExI,WAG9B7iD,EAAAA,cAAC+kD,EAA4BF,YAAW,KACrCmI,EAAa,CACZ7I,OAAQ,QACR9oC,MAAOgwC,EAAmB,MAAExI,WAGhC7iD,EAAAA,cAAC+kD,EAA4BJ,aAAY,KACtCqI,EAAa,CACZ7I,OAAQ,SACR9oC,MAAOgwC,EAAoB,OAAExI,YAQnC7iD,EAAAA,cAAC+kD,EAA4BD,UAAS,KACpC9kD,EAAAA,cAACmyC,EAAAA,GAAiBzoC,EAAAA,EAAAA,GAAA,GACZskD,EAAkB,CACtB/N,UACEjgD,EAAAA,cAACmyC,EAAAA,GAAiBzoC,EAAAA,EAAAA,GAAA,CAChB02C,iBAAkB6K,EAClBhL,UACEjgD,EAAAA,cAACka,EAAAA,EAAU,CAACjG,IAAKm3C,GACdxrD,IAGDquD,OAITC,EAECluD,EAAAA,cAAC8hD,EAAgB,CACfC,aAAcsJ,GAAatJ,aAC3BC,iBAAkBA,EAClBxW,eAAgBA,CAAC5gC,EAAKi5B,IACpBmnB,EACED,EAAiBqD,iBAAiBxjD,EAAKi5B,OAMhD,EAgBawqB,CAAkBhD,GAGxC,IAAGT,GAAApqD,aAAA,+nG,mEE7aH,MAAM8tD,EACJtuD,EAAAA,cAAwD,MAK7CuuD,EAAqBA,KAChC,MAAMnoD,GAAUnE,EAAAA,EAAAA,YAAWqsD,GAC3B,IAAKloD,EACH,MAAM,IAAIyJ,MACR,kEAGJ,OAAOzJ,CAAO,EAOHgnD,EAOT1tD,IAOG,IAPF,iBACHqrD,EAAgB,aAChBrsB,EAAY,wBACZ2uB,EAAuB,wBACvBrC,EAAuB,GACvBroD,EAAE,SACF/C,GACDF,EACC,MAAMuc,GAAO3Y,EAAAA,EAAAA,IAAiB,KAC5B0nD,EAAwBD,EAAiB9uC,KAAKtZ,GAAI,IAE9C6rD,GAAOlrD,EAAAA,EAAAA,IAAiB,KAC5B0nD,EAAwBD,EAAiByD,KAAK7rD,GAAI,IAE9CopB,GAASzoB,EAAAA,EAAAA,IAAiB,KAC9B0nD,EAAwBD,EAAiB0D,kBAAkB9rD,GAAI,IAE3D4pD,GAAmBjpD,EAAAA,EAAAA,IAAiB,KACxC+pD,EAAwB1pD,SAASqY,OAAO,IAEpC0yC,GAAaprD,EAAAA,EAAAA,IAChBwkC,IACCkjB,EAAwBD,EAAiBxI,KAAK5/C,EAAImlC,GAAM,IAGtD6mB,GAAiBrrD,EAAAA,EAAAA,IAAkBwiD,IACvCkF,EAAwBD,EAAiB4D,eAAehsD,EAAImjD,GAAU,IAElE8I,GAAetrD,EAAAA,EAAAA,IAAkBuC,IACrC,MAAM4lD,EAAY/sB,EAAa/6B,QAC/B,IAAK8nD,EACH,MAAM,IAAI57C,MAAM,sDAElBm7C,EACED,EAAiB6D,aACfjsD,EACAkD,EACA4lD,EAAUziB,yBAEb,IAEG6lB,GAAgBvrD,EAAAA,EAAAA,IAAkBuC,IACtC,MAAM4lD,EAAY/sB,EAAa/6B,QAC/B,IAAK8nD,EACH,MAAM,IAAI57C,MAAM,sDAElBm7C,EACED,EAAiB8D,cACflsD,EACAkD,EACA4lD,EAAUziB,yBAEb,IAEG8lB,GAAoBxrD,EAAAA,EAAAA,IAAkBugC,IAC1CmnB,EAAwBD,EAAiBqD,iBAAiBzrD,EAAIkhC,GAAQ,IAElEsM,GAAez4B,EAAAA,EAAAA,UAAQ,KAEpB,CACL2D,MAFY0vC,EAAiBllB,QAAQljC,GAGrC6rD,OACAvyC,OACA8P,SACAwgC,mBACAmC,aACAC,iBACAC,eACAC,gBACAC,uBAED,CAAC/D,EAAkBpoD,IACtB,OACE3C,EAAAA,cAACsuD,EAAuB1oD,SAAQ,CAACC,MAAOsqC,GACrCvwC,EAC+B,EAEpCwtD,EAAA5sD,aAAA,mP,gJC3CF,MAAMuuD,EAAYrM,GACQ,oBAAxBA,EAAWoD,UACa,kBAAxBpD,EAAWoD,SAaAkJ,GAAmBC,EAAAA,EAAAA,IAC9B,CAACC,EAAmBC,IAClBD,EAAQ/K,SAAWgL,EAAQhL,QAAU+K,EAAQ9K,UAAY+K,EAAQ/K,UAGxDgL,EAAmBtJ,GACb,kBAAbA,GAA6C,oBAAbA,EAC3B,SAEQ,WAAbA,GAAsC,UAAbA,EACpB,QAEFA,EAcF,MAAMuJ,EAIXjuC,WAAAA,CACkBykB,EAA2B7iC,GAU1C,IATD,eACEspD,EAAiB,KAAI,gBACrBgD,EAAkB,CAAC,EAAC,sBACpB1D,EAAwB,SAKzB,IAAA5oD,EAAG,CAAC,EAACA,EAAA,KATU6iC,QAAAA,EAA2B,KAJ7BymB,oBAAc,OACdV,2BAAqB,OACpB0D,qBAAe,EAa9BhuC,KAAKgrC,eAAiBA,EACtBhrC,KAAKguC,gBAAkBA,EACvBhuC,KAAKsqC,sBAAwB,IAAIrtC,IAAIqtC,GAIrC,MAAM2D,EAAiB/sD,OAAOsE,KAAKwa,KAAKukB,SAASvhC,QAC9CsG,GACC0W,KAAKsqC,sBAAsBptC,IAAI5T,IAAQ0W,KAAKukB,QAAQj7B,GAAKq3B,YAE7D,GAAIstB,EAAezrD,OAAS,EAC1B,MAAM,IAAI+L,MACP,wGAAuG0/C,IAG9G,CAEAf,IAAAA,CAAKgB,GACH,OAAOluC,KAAKmuC,YAAW,CAAC/M,EAAY93C,IAClCA,IAAQ4kD,EACJ,IACK9M,EACHzgB,WAAW,GAEbygB,GAER,CACAgN,OAAAA,GACE,OAAOpuC,KAAKmuC,YACV,CAAC/M,EAAY93C,IAC8B,UAAzCwkD,EAAgB1M,EAAWoD,UACvBpD,EACA,IACKA,EACHzgB,WAAW,IAEnB,CAAEqtB,gBAAiBhuC,KAAKukB,SAE5B,CAKA8pB,cAAAA,GACE,OAAOruC,KAAKmuC,YACV,CAAC/M,EAAY93C,IAAQ0W,KAAKguC,gBAAgB1kD,IAAQ83C,GAEtD,CAEAyK,WAAAA,CAAYviD,GACV,OAAO0W,KAAKmuC,YAAY/M,GAAeA,GAAY,CACjD4J,eAAgB1hD,GAEpB,CAEAe,IAAAA,CAAK6jD,GACH,MAAMlqD,EAASgc,KAAKukB,QAAQ2pB,GAC5B,IAAKlqD,EACH,OAAOgc,KAET,MAAMsuC,EAAgC,GAMtC,MALwB,WAApBtqD,EAAOwgD,SACT8J,EAAkBvtD,KAAK,UACd0sD,EAASzpD,IAClBsqD,EAAkBvtD,KAAK,kBAAmB,gBAAiB,UAEtDif,KAAKmuC,YACV,CAAC/M,EAAY93C,IACPA,IAAQ4kD,EACH,IACF9M,EACHzgB,WAAW,GAIbygB,EAAWzgB,WACX+sB,EAAiB1pD,EAAQo9C,IACzBkN,EAAkBxuD,SAASshD,EAAWoD,UAE/B,IAAKpD,EAAYzgB,WAAW,GAE9BygB,GAET,CACEkJ,sBAAuB,IAAItqC,KAAKsqC,uBAAuBtnD,QACpDsG,GAAQA,IAAQ4kD,KAIzB,CAEAz5C,MAAAA,CAAOy5C,GACL,OAAOluC,KAAKukB,QAAQ2pB,IAAYvtB,UAC5B3gB,KAAKktC,KAAKgB,GACVluC,KAAK3V,KAAK6jD,EAChB,CAEAvzC,IAAAA,CAAKuzC,GACH,MAAMlqD,EAASgc,KAAKukB,QAAQ2pB,GAC5B,OAAKlqD,IAhJiB,qBADNo9C,EAiJWp9C,GAhJlBwgD,UAA0D,WAAxBpD,EAAWoD,UAmJ/CxkC,KAAKmuC,YAAY/M,GAClBA,IAAep9C,EACV,IACFo9C,EACHzgB,WAAW,GAGRygB,IATAphC,KAlJOohC,KA6JlB,CAGAiM,cAAAA,CAAea,EAAgB1J,GAC7B,MAAMxgD,EAASgc,KAAKukB,QAAQ2pB,GAC5B,OAAKlqD,EAGEgc,KAAKmuC,YAAY/M,IACtB,GAAIA,IAAep9C,EACjB,MAAO,IACFo9C,EACHoD,YAGJ,MAAM+J,EAAeT,EAAgB1M,EAAWoD,UAChD,OACEpD,EAAWzgB,WACM,UAAjB4tB,GACAb,EAAiBtM,EAAYp9C,IAC7BuqD,IAAiBT,EAAgBtJ,GAE1B,IACFpD,EACHzgB,WAAW,GAGRygB,CAAU,IArBVphC,IAuBX,CAIAihC,IAAAA,CACEiN,EACAM,EACAj6C,GAEA,MAAMvQ,EAASgc,KAAKukB,QAAQ2pB,GAC5B,IAAKlqD,EACH,OAAOgc,KAET,MAAMyuC,EAAoC,iBAAhBD,EAA2BA,EAAcxqD,EAC7D0qD,EAAqC,iBAAhBF,EAA2BA,EAAcj6C,EAC9Do6C,EAAoBztD,OAAO4B,QAAQkd,KAAKukB,SAASvhC,QAAO5E,IAAA,IAAE,CAAEmG,GAAMnG,EAAA,OACtEsvD,EAAiBe,EAAYlqD,EAAM,IAE/BqqD,EAAoBD,EAAkBjM,WAC1C3jD,IAAA,IAAE,CAAEuD,GAAOvD,EAAA,OAAKuD,IAAW0B,CAAM,IAE7B6qD,EACJD,EAAoB,GAChBE,EAAAA,EAAAA,GACEJ,IAAgB,EAChB,CAACR,EAAW,IAAKlqD,KAAWyqD,IAC5BE,IAEF1N,EAAAA,EAAAA,GACE2N,EACAF,GAAeE,EACfD,GAEFI,GAAuBjiD,EAAAA,EAAAA,GAC3B+hD,EAAoBztD,KAAI,CAAA+B,EAAeoR,KAAW,IAAxBjL,EAAK/E,GAAMpB,EAC/B6rD,EAAWzqD,EACXA,EAAM2/C,QAAU3vC,IAClBy6C,EAAW,IAAKzqD,EAAO2/C,MAAO3vC,IAEhC,MAAM06C,EAAiBnB,EAAgB9pD,EAAOwgD,UAU9C,OAREl7C,IAAQ4kD,GACRlqD,EAAO28B,WACPp8B,EAAMo8B,WACa,UAAnBsuB,GACAnB,EAAgBvpD,EAAMigD,YAAcyK,IAEpCD,EAAW,IAAKzqD,EAAOo8B,WAAW,IAE7B,CAAE,GAAEr3B,IAAO0lD,EAAS,KAG/B,OAAOhvC,KAAKmuC,YAAW,CAAC5pD,EAAO+E,IAAQylD,EAAqBzlD,IAAQ/E,GACtE,CAEA+oD,YAAAA,CACEY,EACA3pD,EACA4nD,GAEA,OAAOnsC,KAAKkvC,QAAQhB,EAAW3pD,EAAO4nD,EAAiB,QACzD,CAEAoB,aAAAA,CACEW,EACA3pD,EACA4nD,GAEA,OAAOnsC,KAAKkvC,QAAQhB,EAAW3pD,EAAO4nD,EAAiB,SACzD,CAEAW,gBAAAA,CACEoB,EACApI,GAEA,OAAO9lC,KAAKi6B,OAAOiU,EAAW,iBAAkBpI,EAClD,CAEAqH,iBAAAA,CAAkBe,GAChB,OAAOluC,KAAKmuC,YACV,CAACp0C,EAAOzQ,IACNA,IAAQ4kD,EACJ,IACKn0C,EACH4mB,WAAW,GAEb5mB,GACN,CACEuwC,sBAAuB,IAAItqC,KAAKsqC,sBAAuB4D,IAG7D,CAEAC,UAAAA,CACEgB,EACA7pB,GAEA,YAF0D,IAA1DA,IAAAA,EAA6D,CAAC,GAEvD,IAAIyoB,GAAiBqB,EAAAA,EAAAA,GAAcD,EAAOnvC,KAAKukB,SAAU,CAC9DymB,eAAgBhrC,KAAKgrC,eACrBgD,gBAAiBhuC,KAAKguC,gBACtB1D,sBAAuBtqC,KAAKsqC,yBACzBhlB,GAEP,CAEQ2U,MAAAA,CACNiU,EACA5kD,EACA/E,GAEA,MAAMP,EAASgc,KAAKukB,QAAQ2pB,GAC5B,OAAKlqD,EAGEgc,KAAKmuC,YAAY7rD,GAClBA,IAAW0B,EACN,IACF1B,EACH,CAACgH,GAAM/E,GAGJjC,IATA0d,IAWX,CAEQkvC,OAAAA,CACNhB,EACA3pD,EACA4nD,EACAkD,GAEA,MAAMrrD,EAASgc,KAAKukB,QAAQ2pB,GAC5B,IAAKlqD,EACH,OAAOgc,KAET,MAAMuuC,EAAeT,EAAgB9pD,EAAOwgD,UAC5C,GAAqB,UAAjB+J,EACF,OAAOvuC,KAAKmuC,YAAY7rD,IACtB,GAAIA,IAAW0B,EAAQ,CACrB,MAAMsrD,EAAuBhtD,EAAOwjD,eACpC,MAAO,IACFxjD,EACHwjD,eAAgB,IACXwJ,EACH,CAACD,GAAWC,EAAqBD,GAAY9qD,GAGnD,CACA,OAAOjC,CAAM,IAMjB,KAHyBwhD,EAAAA,EAAAA,IAAuB9/C,EAAO6+C,QACnD,SACA,WACqBwM,EACvB,OAAOrvC,KAET,MAAM6jC,EAAgBsI,EAAgBkD,GAChCL,EAAWnL,EAAgB7/C,EAAOihD,OAAS1gD,EAEjD,OADwBwjC,EAAAA,EAAAA,GAAM,EAAG8b,EAAemL,KAAcA,EAEvC,WAAjBT,EACKvuC,KAAKosC,WAAWpoD,EAAO6+C,OAAQmM,EAAU7C,GAEzCnsC,KAAK6sC,aAAa7oD,EAAO6+C,OAAQmM,EAAU7C,GAG/CnsC,IACT,CAEAosC,UAAAA,CACEvJ,EACAhyC,EACAs7C,GAEA,OAAOnsC,KAAKuvC,YAAW,EAAM1M,EAAQhyC,EAAMs7C,EAC7C,CAEAU,YAAAA,CACEhK,EACAhyC,EACAs7C,GAEA,OAAOnsC,KAAKuvC,YAAW,EAAO1M,EAAQhyC,EAAMs7C,EAC9C,CAEAF,mBAAAA,CAAoBpJ,EAAgBoC,GAClC,OAAOjlC,KAAKmuC,YAAY7rD,GAClBA,EAAOugD,SAAWA,GAAUvgD,EAAOq+B,WAAa8sB,EAASnrD,GACpD,IACFA,EACH8iD,WAAY9iD,EAAOwgD,QAAUmC,EAAS,EAAIA,GAGvC3iD,GAEX,CAEQitD,UAAAA,CACNC,EACA3M,EACAhyC,EACAs7C,GAEA,OAAOnsC,KAAKmuC,YAAY7rD,IACtB,MAAMmtD,EAAmBD,EACrB/B,EAASnrD,GACW,WAApBA,EAAOkiD,SACX,GAAIliD,EAAOugD,SAAWA,GAAU4M,GAAoBntD,EAAOq+B,UAAW,CACpE,MAAMkjB,GAAiBC,EAAAA,EAAAA,IAAuBjB,GAE1CsJ,EAAgBruB,OADhBquB,EAAgBrkC,MAEpB,MAAO,IACFxlB,EACH2iD,OAAQp0C,EAAOgzC,EAEnB,CACA,OAAOvhD,CAAM,GAEjB,EAGK,MAAMotD,EAAkB,SAAAC,GAAA,IAAC,SAC9BnL,EAAW,mBACRoL,QACsB,IAAAD,EAAG,CAAC,EAACA,EAAA,MAAuB,CACrD9M,OAAQ,OACRC,SAAS,EACT0B,SAAUA,EACVN,MAAO,EACPe,OAAQ,GACRG,WAAY,GACZzkB,WAAW,EACXmlB,eACgC,UAA9BgI,EAAgBtJ,GACZ,CACE7oB,KAAM,IACNvrB,IAAK,IACL0X,MAAO,IACPgW,OAAQ,UAEVl5B,KACHgrD,EACJ,C,sDCrgBM,MAAMC,EACXhN,GAEAiB,EAAuBjB,GAAU,aAAe,WAErCiB,EAA0BjB,GAC1B,QAAXA,GAA+B,WAAXA,EAETwE,EAAgBxE,IAC1B,CACClnB,KAAM,QACN+H,MAAO,OACPtzB,IAAK,SACL+1B,OAAQ,OACR0c,G,oKCTG,SAASiN,EAAa1xD,EAAAsD,GAW1B,IAVD,aACE07B,EAAY,WACZ2yB,EAAU,oBACVC,GAKD5xD,GACD,cAAE6xD,QAA+D,IAAAvuD,EAAG,CAAC,EAACA,EAEtE,MAAOwuD,EAAiBC,IAAsB5uD,EAAAA,EAAAA,WAAS,IAqB/C4sB,iBAAkBiiC,IAA4BhiC,EAAAA,EAAAA,GAAe,CACnEC,oBAAqB8hC,KAGjB,iBAAEhiC,IAAqBC,EAAAA,EAAAA,GAAe,CAC1CC,oBAAqB4hC,KAGfI,gBAAiBC,GA8C3B,WACE,MAAM,KAAE31C,IAASsyC,EAAAA,EAAAA,KACXsD,GAAgB1uD,EAAAA,EAAAA,QAAsB,OACpCssB,iBAAkBqiC,IAA2BpiC,EAAAA,EAAAA,GAAe,CAClE4mB,aAAe31C,IAEbkxD,EAAcluD,QAAUC,OAAOgB,YAAW,KAKTjE,EAAEob,eAE/BE,GACF,GACA,EAEJ81C,cAAeA,KACiB,OAA1BF,EAAcluD,UAChBE,aAAaguD,EAAcluD,SAC3BkuD,EAAcluD,QAAU,KAC1B,IAGJ,MAAO,CACLguD,gBAAiBG,EAErB,CAzE6CE,IAErC,oBAAE3kB,IAAwBC,EAAAA,EAAAA,GAAkB,CAChD2kB,aAAcX,EAAoB3tD,SAASqY,MAC3Ck2C,yBAAyB,KAK3BzsD,EAAAA,EAAAA,YAAU,KAELZ,SAASk6B,eACTL,EAAa/6B,SAASm7B,SAASj6B,SAASk6B,gBAEzCL,EAAa/6B,SAASqY,OACxB,GACC,IAEH,MAAM,gBAAE/J,IAAoB00B,EAAAA,EAAAA,KAE5B,MAAO,CACL6qB,kBACAG,iBAAiB34C,EAAAA,EAAAA,GACfq0B,EACA5d,EACAmiC,EACA,CACE11C,UAAW,IAGfi2C,uBAAwBT,EACxBU,sBAAuBngD,EAE3B,C,wICtDO,SAASogD,EAA0B3yD,GAItC,IAJuC,UACzC83B,GAGD93B,EACC,MAAM,MAAE2b,IAAUkzC,EAAAA,EAAAA,KAEZ+D,GAAsBxiD,EAAAA,EAAAA,GAAeyiD,EAAAA,IACrCC,GAAoB1iD,EAAAA,EAAAA,GAAe2iD,EAAAA,IACnCC,GAAgB5iD,EAAAA,EAAAA,GAAe6iD,EAAAA,IAC/BC,GAAiBlrD,EAAAA,EAAAA,IAAUsF,EAAAA,IAC3B6lD,GAA0BnrD,EAAAA,EAAAA,IAC9BorD,EAAAA,IAEF,KACGR,GACAE,GACAE,GACAE,GACAC,GAED,MAAM,IAAIhjD,MACR,iEAIJ,MAAMkjD,EAAqC,CACzCT,EACAE,EACA,CACE7vD,GAAI,SACJgH,MAAO,SACPsB,iBAAkB,UAClBrL,SAAU,IAAI8yD,EAAc9yD,SAAUgzD,IAExC,IAAIxwD,EAAAA,EACJywD,GAEF,OACE7yD,EAAAA,cAACoK,EAAAA,GAAWV,EAAAA,EAAAA,GAAA,CACVxH,QAAS6wD,EACTj6B,aAAc,CAACk6B,EAAAA,GAAmB33C,EAAMyqC,YACpCtuB,GAGV,CAAC66B,EAAA7xD,aAAA,8X,eClDD,MAAMyyD,EAAyBhjD,EAAAA,GAAOI,GAAyB;;;;;;;MAOzD3Q,IAAA,IAAC,MAAEsT,GAAOtT,EAAA,OACVsT,EAAMC,MACJ,kCAEFD,EAAMC,MAAM,4BACZD,EAAMqP,aAAawiB,cAAc;gBACvBxkC,IAAA,IAAC,MAAE2S,EAAK,OAAEgL,GAAQ3d,EAAA,OAC9B2d,EACIhL,EAAMC,MAAM,iCACZD,EAAMC,MACJ,wCAEF,UACAD,EAAMC,MAAM,yCACZD,EAAMC,MAAM,iCACZ,SAAS;EAGXigD,EAAgCjjD,EAAAA,GAAOI,GAAI;;EAI3C8iD,EAAgCljD,EAAAA,GAAOI,GAAI;;;;;EAOpC+iD,EAA2D3uD,IAKjE,IALkE,SACvE7E,EAAQ,kBACRyzD,EAAiB,gBACjB7B,GAAkB,KACfjoD,GACJ9E,EACC,OACEzE,EAAAA,cAACizD,GAAsBvpD,EAAAA,EAAAA,GAAA,CAACsU,OAAQwzC,GAAqBjoD,GACnDvJ,EAAAA,cAACmzD,EAA6B,KAAEvzD,GAChCI,EAAAA,cAACkzD,EAA6B,KAC5BlzD,EAAAA,cAACszD,EAAAA,EAAO,KACLD,GACCrzD,EAAAA,cAAAA,EAAAA,SAAA,KACGqzD,EACDrzD,EAAAA,cAACw3C,EAAAA,GAAyB,OAG9Bx3C,EAAAA,cAACsJ,EAAAA,EAAY,CAAC3J,SAAU4zD,EAAAA,KACxBvzD,EAAAA,cAACwuB,EAAAA,EAAW,CACVH,WAAY1pB,IAAoB,IAAnB,UAAE6yB,GAAW7yB,EACxB,OAAO3E,EAAAA,cAACqyD,EAA0B,CAAC76B,UAAWA,GAAa,IAG5D,CAACz1B,EAAOkS,IACPjU,EAAAA,cAAC8J,EAAAA,EAAc,CAACC,QAAS/J,EAAAA,cAACgK,EAAAA,EAAa,CAACC,WAAW,aACjDjK,EAAAA,cAACyJ,EAAAA,IAAUC,EAAAA,EAAAA,GAAA,GAAK3H,EAAK,CAAEkS,IAAKA,IAC1BjU,EAAAA,cAACkS,EAAAA,GAAY,CAACrI,KAAK,0BAK3B7J,EAAAA,cAACsJ,EAAAA,EAAY,CAAC3J,SAAUuN,EAAAA,OAGL,EAE3BkmD,EAAA5yD,aAAA,iJCxDF,MAAMgzD,EAA4BvjD,EAAAA,GAAOI,GAAI;;;;;;;EAQvCojD,EAA0BxjD,EAAAA,GAAOI,GAAI;;;EASrCqjD,EACJ1zD,EAAAA,cAAiD,CAC/CosD,UAAU,IAGDuH,EAA8BA,KACzC1xD,EAAAA,EAAAA,YAAWyxD,GAWAE,EAAsDl0D,IAQ5D,IAR6D,cAClEm0D,EAAa,SACbj0D,EAAQ,kBACRyzD,EAAiB,cACjB9B,EAAa,QACbrvD,EAAO,iBACP4xD,EAAmB,YAChBvqD,GACJ7J,EACC,MAAMg/B,GAAev7B,EAAAA,EAAAA,QAAuB,MACtCkuD,GAAaluD,EAAAA,EAAAA,QAAuB,MACpCmuD,GAAsBnuD,EAAAA,EAAAA,QAAsB,OAC5C,gBAGJquD,EAAe,gBACfG,EAAe,uBACfQ,EAAsB,sBACtBC,GACEhB,EACF,CAAE1yB,eAAc2yB,aAAYC,uBAC5B,CACEC,kBAIEwC,GAA2Br8C,EAAAA,EAAAA,UAC/B,MACE00C,SAAUoF,KAEZ,CAACA,IAKGhsD,EAAa,EAHiBwuD,EAAAA,EAAAA,IAAqB,CACvDF,wBAEmD5xD,GAAW,IAEhE,OACElC,EAAAA,cAAC8B,EAAAA,GAAe,CAACI,QAASsD,IACvBnF,IAAA,IAAC,qBAAEyC,GAAsBzC,EAAA,OACxBL,EAAAA,cAACwzD,GAAyB9pD,EAAAA,EAAAA,GAAA,IACpBsP,EAAAA,EAAAA,GACF24C,EACA7uD,GACAiW,EAAAA,EAAAA,GAAexP,IAChB,CACD0K,IAAKyqB,IAEL1+B,EAAAA,cAAC0zD,EAAyB9tD,SAAQ,CAACC,MAAOkuD,GACxC/zD,EAAAA,cAACozD,GAAuB1pD,EAAAA,EAAAA,GAAA,CACtB2pD,kBAAmBA,EACnB7B,gBAAiBA,GACbY,GAEHyB,GAEH7zD,EAAAA,cAACyzD,GAAuB/pD,EAAAA,EAAAA,GAAA,CACtBuK,IAAKo9C,GACDc,GAQJnyD,EAAAA,cAACka,EAAAA,EAAU,CAACjG,IAAKq9C,EAAqB7kD,WAAS,GAC5C7M,KAImB,GAEd,EAEpBg0D,EAAApzD,aAAA,oa,wGC7IF,MAAMyzD,EAAmCjwD,IACvC,MAAMkwD,EACc,aAAlBlwD,EAAS1D,MACqC,IAA9C0D,EAASU,eAAe5D,WAAWgD,QACnC,CAAC,MAAO,OAAQ,WAAW1C,SAAS4C,EAASU,eAAe5D,UAAU,KACtEkD,EAASU,eAAe7D,KAAKsgB,MAAM,6BAA6B,GAClE,OAAI+yC,EACK3f,SAAS2f,GAEX,IAAI,EAGPrd,EAAgB5mC,EAAAA,GAAOa,KAAIsH,WAAA,CAAAC,YAAA,gDAAAC,YAAA,gBAAXrI,CAAW,mBAWpBkkD,EAAiCz0D,IAUvC,IAVwC,GAC7CiD,EAAE,MACFgH,EAAK,KACLE,EAAI,WACJuqD,GAAa,GAMd10D,EACC,MAAML,GAASqI,EAAAA,EAAAA,KAAU2sD,EAAAA,EAAAA,GAA+B,GAAE1xD,MAEpD2xD,EAASj1D,GAAQkD,WACnBG,IAAIuxD,GACL7zD,KAAKw+C,OAAOC,WACf,OACE7+C,EAAAA,cAAC8J,EAAAA,EAAc,CACbC,QAAS/J,EAAAA,cAACgK,EAAAA,EAAa,CAACC,WAAYN,EAAO3F,SAAU3E,GAAQ2E,YAE7DhE,EAAAA,cAAC62C,EAAa,KACXhtC,EAAK,OAEK,MAAVyqD,GAAkBF,EACjBp0D,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,SAAIs0D,GAAW,SAEf,KACH3qD,GAEY,EAEnBwqD,EAAA3zD,aAAA,2sB,sICrCK,MAAM+zD,EAAqBv0D,EAAAA,YAAiB,SAA2BN,EAU5E8Y,GACqB,IATnBqtB,QAASsgB,EAAW,iBACpB4E,EAAgB,YAChByJ,KACGzyD,GAIJrC,EAGD,MAAM+0D,GAAiB97C,EAAAA,EAAAA,GAAaH,GAC9Bk8C,GAAavJ,EAAAA,EAAAA,IAAQ9qD,IAAA,IAAC,GAAEsC,GAAItC,EAAA,OAAKsC,CAAE,GAAEwjD,GACrCjkD,GAAUyyD,EAAAA,EAAAA,GAAsB,CACpCF,iBACA1J,mBACA6J,gBAAkBjyD,GAAO+xD,EAAW/xD,KAEtC,OACE3C,EAAAA,cAAC8B,EAAAA,GAAe,CAACI,QAASA,IACvBuC,IAAA,IAAC,qBAAE3B,GAAsB2B,EAAA,OACxBzE,EAAAA,cAAC4qD,EAAAA,GAAWlhD,EAAAA,EAAAA,GAAA,GACN3H,EAAK,CACTkS,IAAKwgD,EACL1J,iBAAkBA,EAClBllB,QAASsgB,EAAYzjD,KAAIiC,IAAA,IAAC,GAAEhC,EAAE,KAAEkH,EAAI,QAAEyB,EAAO,MAAE3B,GAAOhF,EAAA,MAAM,CAC1DhC,KACAsqD,cACEjtD,EAAAA,cAACm0D,EAAAA,EAA8B,CAC7BxxD,GAAIA,EACJkH,KAAMA,EACNF,MAAOA,EACPyqD,WAAYI,IAGhBlpD,UACD,IACDwJ,gBAAgBkE,EAAAA,EAAAA,GACdjX,EAAM+S,gBAAkB,CAAC,EACzBhS,KAEF,GAIV,IAAGyxD,EAAA/zD,aAAA,8jB,sGCpBI,MAAMq0D,EAAsBn1D,IAKC,IALA,UAClCo1D,EAAS,SACTl1D,EAAQ,cACRi0D,KACG9xD,GACyBrC,EAC5B,MAAOq1D,EAAqBC,IAAwBnyD,EAAAA,EAAAA,WAAS,IACtDoyD,EAAWC,IAAgB//C,EAAAA,EAAAA,GAChCpT,EAAMkzD,UACNlzD,EAAMozD,iBACNpzD,EAAMqzD,mBAEFC,EAAWr1D,EAAAA,SAAes1D,QAAQ11D,GACrC0E,QAEGkC,IAEA,MAAM+uD,EACJv1D,EAAAA,eAAqBwG,IACrBA,EAAMlG,OAASk1D,EAQjB,OAPKD,GAEH3tD,QAAQuV,KACN,mHACA3W,GAGG+uD,CAAU,IAMpB7yD,KAAK4I,IAAO,IAAWA,EAASV,IAAM,GAAEU,EAAQV,MAAMqgB,MAAM,OAmBzDwqC,GAjBAX,GACFltD,QAAQC,MACN,yFAIF7H,EAAAA,cAACi9C,EAAAA,EAAc,CACbvD,WAAS,EACT7uC,MAAOwqD,EACPr3C,OAAQ+2C,EACRra,YAAaua,EACbS,kBAAmBR,IAEjB5qD,GAAStK,EAAAA,cAACg6C,EAAAA,EAAO,CAACpvC,IAAKN,EAAKM,KAAMN,EAAKvI,MAAM4zD,eAW/C7uD,EAAOuuD,EAAS3yD,KAAIrC,IAAA,IAAC,IAAEuK,GAAKvK,EAAA,OAAKuK,CAAG,IACpCgrD,GAAeC,EAAAA,EAAAA,GAAY/uD,IACjCrB,EAAAA,EAAAA,YAAU,KACR,IAAKqB,EAAK1F,SAAS6zD,GAAY,CAC7B,MAAMa,EAAehvD,EAAK8uD,EAAajmD,QAAQslD,GAAa,IAAMnuD,EAAK,GACnDZ,MAAhB4vD,GACFZ,EAAaY,EAEjB,KAGF,MAAMC,EAAgBV,EAASj1D,MAC5BkL,GAAyBpF,MAAb+uD,GAA0BA,IAAc3pD,EAAQV,MAE/D,OACE5K,EAAAA,cAAC4zD,EAAAA,EAAiB,CAChBrC,cAAeyD,EACfnB,cAC2B,mBAAlBA,EACLA,EAAc,CAAE4B,yBAEhBz1D,EAAAA,cAAAA,EAAAA,SAAA,KACG6zD,EACA4B,GAIPpC,kBAAmBtxD,EAAMsxD,mBAExB0C,GAAeh0D,MAAMnC,SACJ,EAclB41D,EACJ/wD,IAA6C,MAANA,EACrC,MAAM,IAAIoL,MACR,oHACD,EAGLglD,EAAoBmB,KAAOR,EAA8BX,EAAAr0D,aAAA,wuF,2KChKlD,MAAM2M,EAA6B,iBAC7BC,EAAgC,mBAChCF,EAA+B,mBAC/BF,EAAiC,qBACjCumD,EAA6B,iBAC7B3mD,EAAqC,wBACrCC,EAAoC,uBACpCC,EAAmC,sBACnCC,EAAsC,yBACtCkpD,EAA6B,iBAC7BC,EAA+B,mBAC/BC,EAAwB,aACxBC,EAAuB,YACvBC,EAAwB,aACxBppD,EAAyB,cACzB6lD,EACX,6B,qJCgBF,MAAMwD,EAAqB,GACrBC,EAAoB,GAEbC,EAIR,CACH,CAAE7zD,GAAI,gBAAiBwhD,OAAQ,OAAQC,SAAS,GAChD,CAAEzhD,GAAI,mBAAoBwhD,OAAQ,OAAQC,SAAS,GACnD,CAAEzhD,GAAI,mBAAoBwhD,OAAQ,SAAUC,SAAS,GACrD,CAAEzhD,GAAI,oBAAqBwhD,OAAQ,SAAUC,SAAS,GACtD,CAAEzhD,GAAI,iBAAkBwhD,OAAQ,QAASC,SAAS,GAClD,CAAEzhD,GAAI,oBAAqBwhD,OAAQ,QAASC,SAAS,GACrD,CAAEzhD,GAAI,iBAAkBwhD,OAAQ,MAAOC,SAAS,GAChD,CAAEzhD,GAAI,gBAAiBwhD,OAAQ,MAAOC,SAAS,IAG3CqS,EAAgB/2D,IAAA,IAAC,OACrBykD,EAAM,QACNC,GAID1kD,EAAA,MACE,GAAEykD,EAAO,GAAGt1C,gBAAgBs1C,EAAOl5B,MAAM,OACxCm6B,EAAAA,EAAAA,IAAuBjB,GACnBC,EACE,QACA,OACFA,EACA,SACA,OACJ,EAES4O,EAA+C,CAC1D0D,cAAeT,EAAAA,GACfU,gBAAiBT,EAAAA,GACjBU,OAAQT,EAAAA,GACRU,MAAOT,EAAAA,GACPxyD,OAAQyyD,EAAAA,IAGG9D,EAA4B,mBAC5BE,EAA0B,iBAC1BE,EAAqC,wBAE3C,SAASqB,EAAoB3zD,GAIT,IAJU,iBACnCyzD,GAGDzzD,EACC,MAAM,aACJuuD,EAAY,cACZC,EAAa,eACbF,EAAc,WACdD,EAAU,iBACVnC,EAAgB,KAChBiC,EAAI,OACJziC,EAAM,MACN1Q,IACEkzC,EAAAA,EAAAA,KACEuI,GAA2BprD,EAAAA,EAAAA,KAE3BxJ,EAA8B,GACpC,IAAKmZ,EAGH,OAAOy7C,EAAyB,CAC9Bn0D,GAAI,wBACJgH,MAAO,qBACP/J,SAAU,KAGd,MAAM0yD,EAAsBwE,EAAyB,CACnDn0D,GAAI4vD,EACJ5oD,MAAO,YACP/J,SAAU,CACR,CACE+C,GAAIszD,EAAAA,GACJtsD,MAAO,cACPrD,gBAAiBA,KACfqoD,EAAe,gBAAgB,GAGnC,CACEhsD,GAAIuzD,EAAAA,GACJvsD,MAAO,gBACPrD,gBAAiBA,KACfqoD,EAAe,kBAAkB,GAGrC,CACEhsD,GAAIwzD,EAAAA,GACJxsD,MAAO,SACPrD,gBAAiBA,KACfqoD,EAAe,SAAS,GAG5B,CACEhsD,GAAIyzD,EAAAA,GACJzsD,MAAO,QACPrD,gBAAiBA,KACfqoD,EAAe,QAAQ,GAG3B,CACEhsD,GAAI0zD,EAAAA,GACJ1sD,MAAO,SACPrD,gBAAiBA,KACfqoD,EAAe,SAAS,MAK1B6D,EAAoBsE,EAAyB,CACjDn0D,GAAI8vD,EACJ9oD,MAAO,UACP/J,SAAU42D,EAAQ9zD,KACfyhD,IAAM,CACLxhD,GAAK,aAAYwhD,EAAOxhD,KACxBgH,MAAO8sD,EAActS,GACrBt6C,KAAM7J,EAAAA,cAACkS,EAAAA,GAAY,CAACrI,KAAO,WAAUs6C,EAAOxhD,OAC5C0D,WACEgV,EAAM8oC,SAAWA,EAAOA,QAAU9oC,EAAM+oC,UAAYD,EAAOC,QAC7D99C,gBAAiBA,KACfooD,EAAWvK,EAAO,QA0D1B,GArDAjiD,EAAQG,KACN,CACEM,GAAIsK,EAAAA,GACJtD,MAAQ,SAAQmqD,IAChBxtD,gBAAiBA,KACfimD,GAAkB,GAGtB,CACE5pD,GAAIuK,EAAAA,GACJvD,MAAO,OACPE,KAAM7J,EAAAA,cAACkS,EAAAA,GAAY,CAACrI,KAAK,2BACzBvD,gBAAiBA,KACfkoD,GAAM,GAGV,CACE7rD,GAAIqK,EAAAA,GACJrD,MAAO,uBACPrD,gBAAiBA,KAEfywD,MAAM,kBAAkB,GAG5B,CACEp0D,GAAImwD,EAAAA,GACJnpD,MAAO,sBACPrD,gBAAiBA,KACfylB,GAAQ,GAGZumC,EACAE,GAEqB,UAAnBn3C,EAAMyqC,UACR5jD,EAAQG,KAAK,CACXM,GAAI4wD,EAAAA,GACJ5pD,MAAO,OACPE,KACE7J,EAAAA,cAACkS,EAAAA,GAAY,CACXrI,KAAO,WACL2sD,EAAQp2D,MACNqE,IAAA,IAAC,OAAE0/C,EAAM,QAAEC,GAAS3/C,EAAA,OAClB0/C,IAAW9oC,EAAM8oC,QAAUC,IAAY/oC,EAAM+oC,OAAO,KACrDzhD,OAIT2D,gBAAiBA,KACfqoD,EAAe,gBAAgB,IAId,UAAnBtzC,EAAMyqC,UAA2C,WAAnBzqC,EAAMyqC,SAAuB,CAC7D,MAAMkR,EAAcF,EAAyB,CAC3Cn0D,GAAIgwD,EACJhpD,MAAO,SACP/J,SAAU,MAERwlD,EAAAA,EAAAA,IAAuB/pC,EAAM8oC,SAC/B6S,EAAYp3D,SAASyC,KAAK,CACxBM,GAAIoK,EAAAA,GACJpD,MAAO,oBACPrD,gBAAiBA,KACfuoD,EACmB,WAAjBxzC,EAAM8oC,QAAuBmS,EAAqBA,EACnD,IAGLU,EAAYp3D,SAASyC,KAAK,CACxBM,GAAImK,EAAAA,GACJnD,MAAO,iBACPrD,gBAAiBA,KACfuoD,EACmB,QAAjBxzC,EAAM8oC,QAAoBmS,EAAqBA,EAChD,MAILU,EAAYp3D,SAASyC,KAAK,CACxBM,GAAIkK,EAAAA,GACJlD,MAAO,kBACPrD,gBAAiBA,KACfsoD,EACmB,SAAjBvzC,EAAM8oC,QAAqBoS,EAAoBA,EAChD,IAGLS,EAAYp3D,SAASyC,KAAK,CACxBM,GAAIiK,EAAAA,GACJjD,MAAO,mBACPrD,gBAAiBA,KACfsoD,EACmB,UAAjBvzC,EAAM8oC,QAAsBoS,EAAoBA,EACjD,KAIPr0D,EAAQG,KAAK20D,EACf,CACA,OAAOF,EAAyB,CAC9Bn0D,GAAI,wBACJgH,MAAO,qBACP/J,SAAUsC,GAEd,C,qEClPO,MAAMmyD,EAAiC1xD,GAC3C,WAAUA,EAAGuE,QAAQ,IAAK,YAUtB,SAASytD,EAAqBj1D,GAIF,IAJG,iBACpCqrD,EAAgB,eAChB0J,EAAc,gBACdG,GAC8Bl1D,EAC9B,MAAMu3D,EAA6B57C,GACjC7Y,OAAO4E,OAAOiU,EAAMwqB,SAAS9hC,MAC3B1D,IAAA,IAAC,UAAE4hC,EAAS,SAAE6jB,GAAUzlD,EAAA,OACtB4hC,GAA2C,WAA9BmtB,EAAAA,EAAAA,IAAgBtJ,EAAqB,IA0DxD,MAhCoC,IAxBlBtjD,OAAOsE,KAAKikD,EAAiBllB,SAASnjC,KACrDkI,GAAS,GAAEA,MAE8BlI,KAC1C,CAACC,EAAYkT,KACX,MAAM,MAAElM,EAAK,KAAEE,GAAS+qD,IAAkBjyD,IAAO,CAAC,EAClD,MAAO,CACLA,GAAI0xD,EAA8B1xD,GAClCgH,MAAOA,GAAU,GAAEutD,EAAWrhD,YAC9BhM,OACAstD,YAAc,YAAWxtD,GAASutD,EAAWrhD,YAC7CvP,gBAAiBA,KAEbykD,EAAiBllB,QAAQljC,IAAKs/B,YAC7BwyB,EAAe9wD,SAASyoD,SAASzpD,GAElC8xD,EAAe9wD,SAASqY,MAAMrZ,GAE9B8xD,EAAe9wD,SAAS6oD,aAAanxC,GAAUA,EAAMtF,OAAOpT,IAC9D,EAEH,IAKH,CACEA,GAAIwK,EAAAA,GACJxD,MAAOstD,EAA0BlM,GAC7B,mBACA,kBACJzkD,gBAAiBA,KACfmuD,EAAe9wD,SAAS6oD,aAAanxC,GAC/B47C,EAA0B57C,GACrBA,EAAMq0C,UAENr0C,EAAMs0C,mBAMjB/qD,YAAW,KACT6vD,EAAe9wD,SAAS4oD,kBAAkB,GAC1C,GAGN,CACE5pD,GAAIyK,EAAAA,GACJzD,MAAO,2BACPtD,WAA+C,MAAnC0kD,EAAiBuB,eAC7BhmD,gBAAiBA,KACfmuD,EAAe9wD,SAAS0oD,uBAAuB,GAKvD,CAEA,SAAS6K,EAAWE,GAClB,IAAIC,EAAM,CAAC,KAAM,KAAM,MAMvB,OAAOD,GAHgBlxD,MAArBmxD,EAAKD,EAAI,GAAM,IAFA,CAAC,GAAI,GAAI,IAEqBh2D,SAASg2D,EAAI,KACtD,KACAC,EAAKD,EAAI,GAAM,GAEvB,C,2JC7DA,MAAME,EAAc53D,IAAA,IAAC,OAAEqkB,GAAwCrkB,EAAA,OAC7DqkB,GACA4E,EAAAA,EAAI;;oBAEctoB,IAAA,IAAC,MAAE2S,GAAO3S,EAAA,OAAK2S,EAAMqP,aAAau2B,WAAW;qBAClC,IAAX70B,EAAkB,MAAQwzC,EAAoBxzC;GAC/D,EAEGyzC,EAAgBvnD,EAAAA,GAAOI,GAE1B;;;;;;;;IAQCinD;IACApgB,EAAAA;;;IAGAA,EAAAA;;;EAKEqgB,EAGF,CACF7lD,IAAK,YACL+1B,OAAQ,YACRzC,MAAO,YACP/H,KAAM,YACNw6B,WAAY,QACZC,SAAU,SAMNC,EAAuB1nD,EAAAA,GAAOiJ,MAAO;;;;;IAKvCo+C;EAGEM,GAA0B3nD,EAAAA,EAAAA,IAAOunD,EAAe;aAXjC,OACD;;;;IAehBhgB,EAAAA;;;IAGAmgB;qBAlBgB;;EAuBdE,GAAwB5nD,EAAAA,EAAAA,IAAOunD,EAAe;;;;;aAvBhC,OADC;IA8BjBtvC,EAAAA;;;IAGAyvC;sBAhCgB;;EAqCdG,EAAuB7nD,EAAAA,GAAOI,GAGjC;;;;eAIY5L,IAAA,IAAC,WAAEszD,GAAYtzD,EAAA,OAAMszD,EAAa,OAAS,QAAQ;;;;;;;IAO9DpzD,IAAA,IAAC,qBAAEqzD,GAAsBrzD,EAAA,OAOzBgkB,EAAAA,EAAI;UAC2B,IAAzBqvC,EACE,IACC,cAAaA;;;;KAIrB;EAGCC,EAAqBj4D,EAAAA,cACzB,cA+CWszD,EAAkC9/C,IAIpB,IAJqB,OAC9CuQ,EAAM,YACN+N,EAAc,gBACX/vB,GACJyR,EACC,MAAM0kD,EACY,eAAhBpmC,GAAgC,qBAAsB/vB,EAClDA,EAAMm2D,iBACN,KACAC,EAAY,CAAEhiD,MAAOpU,EAAMoU,MAAOS,UAAW7U,EAAM6U,WACnD3C,GAAM9Q,EAAAA,EAAAA,QAAuB,MAC7B2yB,GAAa3yB,EAAAA,EAAAA,QAAuB,MACpCi1D,GAAoBj1D,EAAAA,EAAAA,QAA0B,MAC9Cq0D,EACY,eAAhB1lC,EACI8lC,EACAC,GACA,mBAAE3b,IAAuBC,EAAAA,EAAAA,GAAoBloC,EAAK,CAAEonC,UAAW,MAC9Dgd,EAAwBC,IAA2Bz1D,EAAAA,EAAAA,WAAS,IAC5D01D,EAAaC,IAAkB31D,EAAAA,EAAAA,UAAS,KACxC41D,EAA2BC,IAChC71D,EAAAA,EAAAA,WAAkB,GACd81D,GAA0Bx1D,EAAAA,EAAAA,WAEhC+lB,EAAAA,EAAAA,kBAAgB,KACd,GAAIjV,EAAItQ,QAAS,CACf,MAAMi1D,EAAgB,IAAI3kD,EAAItQ,QAAQ/D,UAAU0E,QAC7CkjB,GAA8BA,aAAgB5gB,cAE3CiyD,EAAuBD,EAAc5U,WAAWx9C,GACpD01C,EAAmB96C,SAASoF,KAE9BkyD,EAA6BG,GAC7BF,EAAwBh1D,QAAUi1D,EAAcC,EAClD,IACC,CAAC3c,KAEJhzB,EAAAA,EAAAA,kBAAgB,KACV4M,EAAWnyB,SAAW40D,IAAgBziC,EAAWnyB,QAAQy5B,cAC3Do7B,EAAe1iC,EAAWnyB,QAAQy5B,aACpC,IAGF,MAAM,aAAEnD,IAAiBE,EAAAA,EAAAA,GAAmB,CAC1C7T,OAAQ+xC,EACRhsD,UAAW,cACXoa,OAGkB,eAAhBqL,EAtKe,EAuKVymC,EAA6B,EACf,EAAdA,EACP7xC,YACkB,eAAhBoL,GAAgC,GAAsB,EACxDtL,iBAAkB,EAClB4T,YAAY,EACZluB,UAA2B,eAAhB4lB,EAA+B7d,EAAMmkD,EAChDtiC,WAAYA,EACZtpB,QAASA,KACP8rD,GAAwB,EAAM,IAQ5BQ,EAAe,CACnBC,YAAcx1D,IACZ,MAAMy1D,EAAyBL,EAAwBh1D,QACvD,IAAKq1D,EACH,OAEF,MAAMC,EACY,aAAhBnnC,EACIvuB,EAAMk5B,QAAUu8B,EAAuBhwB,wBAAwBt3B,IAC/DnO,EAAMi5B,QAAUw8B,EAAuBhwB,wBAAwB/L,KACjEg8B,IAAeZ,GACjBC,EAAwBW,EAC1B,EAEFC,aAAcA,KACRb,GACFC,GAAwB,EAC1B,GAGEa,EAA4B,CAChC7/B,aAAcA,IAAMg/B,GAAwB,GAC5CY,aAAcA,IAAMZ,GAAwB,IAE9C,OACEt4D,EAAAA,cAACi4D,EAAmBryD,SAAQ,CAACC,MAAOisB,GAClC9xB,EAAAA,cAACw3D,GAAa9tD,EAAAA,EAAAA,GAAA,CACZqa,OAAQA,IACJ/K,EAAAA,EAAAA,GAAWm/C,EAAWW,GAAa,CACvCvnD,KAAK,YAELvR,EAAAA,cAAC83D,EAAoB,CACnB7jD,IAAKA,EACL1C,KAAK,eACLymD,qBAAsBS,EACtBV,WAAiC,SAArBG,GAEXn2D,EAAMnC,UAERs8C,EAAmBp4C,OAAS,GAC3B9D,EAAAA,cAAC23D,EAAoB,CACnB1jD,IAAKmkD,EACLl8C,UAAW,EACXod,aA/CgB8/B,KACxBd,GAAwB,EAAK,GAgDrBt4D,EAAAA,cAACkS,EAAAA,GAAY,CAACrI,KAAK,eAIxBwuD,GAA0Bnc,EAAmBp4C,OAAS,GAKrD9D,EAAAA,cAACi4D,EAAmBryD,SAAQ,CAACC,MAAM,cACjC7F,EAAAA,cAAC66B,EAAAA,GAAO,KACN76B,EAAAA,cAAC0tC,EAAAA,GAAoBhkC,EAAAA,EAAAA,GAAA,CACnBuK,IAAK6hB,IACD9c,EAAAA,EAAAA,GAAWihB,EAAck/B,IAE7Bn5D,EAAAA,cAACq5D,EAAgB,CACft1C,QAAM,EACNu1C,kBACkB,aAAhBxnC,EACI2mC,OACAvyD,GAGLnE,EAAMnC,aAMW,EAI5By5D,GAAmBppD,EAAAA,EAAAA,IAAO2nD,EAE7B;IACClkD,IAAA,IAAC,kBAAE4lD,GAAmB5lD,EAAA,OACtB4lD,GACA3wC,EAAAA,EAAI;QACAuuB,EAAAA,gBAA6BoiB,EAAoB;;;0BAG/BA;;;KAGrB;EAMQC,EAAmBA,IAEP,gBADHt3D,EAAAA,EAAAA,YAAWg2D,GAE7Bj4D,EAAAA,cAACw3C,EAAAA,GAAyB,MAE1Bx3C,EAAAA,cAACkoB,EAAAA,GAAuB,MAE1BorC,EAAA9yD,aAAA,ooBAAA+4D,EAAA/4D,aAAA,0G,sEC3WK,MAAMg5D,EAAoB95D,IAMW,IANV,WAChCuK,EAAU,SACVwvD,EAAQ,SACRz1D,EAAQ,KACR01D,KACGC,GACoBj6D,EACvB,OACEM,EAAAA,cAAC45D,EAAAA,GAAOlwD,EAAAA,EAAAA,GAAA,CAACmwD,WAAS,GAAKF,GACrB35D,EAAAA,cAAC45D,EAAAA,EAAQl0B,OAAM,KACZz7B,EACAjG,GAAYhE,EAAAA,cAAC45D,EAAAA,EAAQv+B,SAAQ,KAAEr3B,IAElChE,EAAAA,cAAC45D,EAAAA,EAAQE,YAAW,KAAEL,GACrBC,GAAQ15D,EAAAA,cAAC45D,EAAAA,EAAQ1lD,KAAI,KAAEwlD,GAChB,EAEZF,EAAAh5D,aAAA,skB,4DCnBK,MAAMwJ,EAAgBtK,IAIW,IAJV,WAC5BuK,EAAU,SACVjG,KACG21D,GACgBj6D,EACnB,OACEM,EAAAA,cAAC45D,EAAAA,EAAYD,EACX35D,EAAAA,cAAC45D,EAAAA,EAAQl0B,OAAM,KACZz7B,EACAjG,GAAYhE,EAAAA,cAAC45D,EAAAA,EAAQv+B,SAAQ,KAAEr3B,IAE1B,EAEZgG,EAAAxJ,aAAA,+Y,sECZK,MAAMu5D,EAAcr6D,IAKW,IALV,SAC1B+5D,EAAQ,SACRz1D,EAAQ,KACR01D,KACGC,GACcj6D,EACjB,OACEM,EAAAA,cAAC45D,EAAAA,GAAOlwD,EAAAA,EAAAA,GAAA,CAACmwD,WAAS,GAAKF,GACrB35D,EAAAA,cAAC45D,EAAAA,EAAQl0B,OAAM,KAAE+zB,GAChBz1D,GACChE,EAAAA,cAAA,WACEA,EAAAA,cAAC45D,EAAAA,EAAQv+B,SAAQ,KAAEr3B,IAGtB01D,GAAQ15D,EAAAA,cAAC45D,EAAAA,EAAQ1lD,KAAI,KAAEwlD,GAChB,EAEZK,EAAAv5D,aAAA,ke,6FCoBK,MAAMulB,EAA2BrmB,IAYc,IAZU,QAC9DqK,EAAO,SACPnK,EAAQ,MAKRumB,EAAQ,IAAG,OACXM,EAAS,EAAC,YACVT,EACAC,WAAY+zC,KACTj4D,GAC8BrC,EACjC,MAAM2b,GAAQ4+C,EAAAA,EAAAA,GAAuB,IAChCl4D,EACHokB,UAGI2P,GAAa3yB,EAAAA,EAAAA,QAAuB,MACpC+2D,GAAcvhD,EAAAA,EAAAA,GAAgBqhD,GAC9B/zC,EAAa+zC,GAAmBE,EAEhCC,GAAehgC,EAAAA,EAAAA,GAAmB,IACnCp4B,EACH+zB,aACA5pB,UAAW+Z,EACXQ,SACAH,OAAQjL,EAAMiL,OACd9Z,QAAS6O,EAAMtP,QAYjB,OANAtG,EAAAA,EAAAA,YAAU,KACJ4V,EAAMiL,QACR4f,sBAAsBi0B,EAAaC,eACrC,GACC,CAAC/+C,EAAMiL,SAGRtmB,EAAAA,cAACq6D,EAAAA,EAAwB,CACvBtwD,QAASA,EACTowD,aAAcA,EACdG,QAAS16D,EACTyb,MAAOA,EACPya,WAAYA,EACZ7P,WAAYA,EACZD,YAAaA,EACb3f,WAAYtE,EAAMsE,YAClB,EAEJ0f,EAAAvlB,aAAA,65C,wICvDK,MAGD+5D,EAAgBtqD,EAAAA,GAAOI,GAAmD;;eAW5E3Q,IAAA,IAAC,MAAEsT,EAAK,UAAE6mD,GAAWn6D,EAAA,OACnBm6D,EACK,GACC7mD,EAAMnN,MACJ,yBACG,QAEP,IAAI;iBAEGxF,IAAA,IAAC,UAAEw5D,GAAWx5D,EAAA,OAAOw5D,EAAuB,KAAX,QAAe;;;SAGxDp1D,IAAA,IAAC,MAAEuO,GAAOvO,EAAA,OACfuO,EAAMnN,MACJ,4BACG,CAAC;gBACM20D,EAAAA;WACL71D,IAAA,IAAC,MAAEqO,GAAOrO,EAAA,OACjBqO,EAAMC,MAAM,qBAAuBD,EAAME,KAAgB,UAAT,OAAmB;aAC1DM,IAAA,IAAC,MAAER,EAAK,UAAE6mD,GAAWrmD,EAAA,OAC9BqmD,EACI7mD,EAAM6Q,MAAM,wCAnCsB,qCAqClC7Q,EAAM6Q,MAAM,sCAnClB,qCAoCsC;;;kBAGtBnQ,IAAA,IAAC,MAAEV,EAAK,WAAEynD,GAAY/mD,EAAA,OACpCV,EAAMnN,MAAe,wBAA0B40D,EAAa,MAAQ,KAAK;kBAC3DC,EAAAA;IACdr6B,EAAAA;IACAjnB,IAAA,IAAC,WAAEqhD,GAAYrhD,EAAA,OACfqhD,GACA9xC,EAAAA,EAAI;;uBAEegyC,EAAAA;KAClB;EAGCC,EAAiB3qD,EAAAA,GAAOqrB,GAAI;;WAEvBhiB,IAAA,IAAC,MAAEtG,GAAOsG,EAAA,OACjBtG,EAAMC,MACJ,6BACCD,EAAME,KAAmB,UAAZ,UACf;EAGC2nD,EAAe5qD,EAAAA,GAAOI,GAAI;eACjBkJ,IAAA,IAAC,MAAEvG,GAAOuG,EAAA,OAAKvG,EAAM8nD,cAAc,4BAA4B;;;EAIxEC,EAAoB9qD,EAAAA,GAAOI,GAAI;WAC1BmJ,IAAA,IAAC,MAAExG,GAAOwG,EAAA,OACjBxG,EAAMC,MACJ,yBACAD,EAAMqP,aAAaoG,sBACpB;eACUhP,IAAA,IAAC,MAAEzG,GAAOyG,EAAA,OACrBzG,EAAM8nD,cAAc,mCAAmC;EAGrDzqC,EAAapgB,EAAAA,GAAOI,GAAI;WACnB+gC,IAAA,IAAC,MAAEp+B,GAAOo+B,EAAA,OACjBp+B,EAAMC,MACJ,yBACAD,EAAMqP,aAAakO,sBACpB;;;;;;EAQQyqC,EAGT,CACFvzB,OAAQ,MACR/1B,IAAK,SACLurB,KAAM,QACN+H,MAAO,OACPi2B,OAAQ,OAkBJrB,EAAU55D,EAAAA,YAAiB,SAAgBwxC,EAE/Ch5B,GACc,IAFd,SAAE5Y,EAAQ,UAAEi6D,EAAS,YAAEqB,KAAgBn5D,GAAqByvC,EAG5D,MAAMv9B,GACJ0E,EAAAA,EAAAA,GAAaH,IACT,MACJ6C,EAAK,cACL8/C,EAAa,qBACbC,EAAoB,UACpB/uD,EAAY,WACVpK,EAAAA,EAAAA,YAAWo5D,EAAAA,IAAmB,CAAC,GAC7B,aAAE1B,IAAiB2B,EAAAA,EAAAA,GACvBv5D,EACAsZ,EACI,IACKA,EAEHhJ,KAAM8oD,EAAgB9/C,GAAOhJ,KAAO,QAEtCgJ,IAGA,KAAEysB,EAAI,OAAErhB,GACW,iBAAhBy0C,EACHA,EACA,CAAEpzB,KAAMkzB,EAAuB3uD,GAAYoa,YAAQvgB,GAEzD,OACElG,EAAAA,cAACu6D,GAAa7wD,EAAAA,EAAAA,GAAA,CACZ+wD,WAAYt5D,QAAQ+5D,GACpBrB,UAAWA,GACPF,EAAY,CAChB/iD,UAAW7U,EAAM6U,UACjB3C,IAAKA,IAEJinD,GACCl7D,EAAAA,cAACu7D,EAAAA,EAAc,CACbC,WAAYvnD,EACZ6zB,KAAMA,EACNrhB,OACEA,IAAW20C,EACP,CAAE96D,KAAM,WAAYuF,MAAO4gB,GAC3B,CAAEnmB,KAAM,aAAcuF,MAAOu1D,KAItCx7D,EAGP,IAEM67D,EAAWj5D,OAAO4G,OAAOwwD,EAAS,CACtCl0B,OAAQm1B,EACRx/B,SAAUu/B,EACVd,YAAaiB,EACb7mD,KAAMmc,IACLupC,EAAAp5D,aAAA,0+E,mCCnNI,MAAM66D,E,QAAiBr7D,cAC5B,K,4FCcF,MAEM07D,EAAoB,IACpBC,EAAa,wBACbC,EAAa,CACjBlqD,IAAKiX,EAAAA,EAAI;;iBAEMgzC;IAEfl0B,OAAQ9e,EAAAA,EAAI;;iCAEmBgzC;IAE/B1+B,KAAMtU,EAAAA,EAAI;;gCAEoBgzC;IAE9B32B,MAAOrc,EAAAA,EAAI;;+BAEkBgzC;KAGzBE,EAAuB5rD,EAAAA,GAAOa,IAEjC;;;;IAICpR,IAAA,IAAC,KAAEooC,GAAMpoC,EAAA,OAAKk8D,EAAW9zB,EAAK;;;;;mBAKfg0B;oBACCA;qBACCC;aACRL;YACDA;;;;;;mBArCU;oBAAA;qBACC,aA4CwBlB,EAAAA;;EAI/C,SAASwB,EAAkBn2D,GACzB,MAAwB,iBAAVA,EAAsB,GAAEA,MAAYA,CACpD,CAEA,MAAMo2D,EAAWje,GAAiBn4C,GACvBK,MAATL,EAAsB,OAAMm4C,QAAUge,EAAkBn2D,MAAYA,EAChEq2D,EAAWh/B,GAAiBr3B,GACvBK,MAATL,EAAsB,OAAMq3B,QAAU8+B,EAAkBn2D,MAAYA,EAChEs2D,EAxDiB,EAwDgBxB,EAAAA,GACjCyB,EA1DgB,EA0DezB,EAAAA,GAMrC,SAAS0B,EAA0Bh8D,EAAAoE,GAGhC,IAFD,MAAE2kB,EAAK,OAAEgW,GAAmE/+B,GAC5E,IAAEqR,EAAG,KAAEurB,EAAI,MAAE+H,EAAK,OAAEyC,GAAuBhjC,EAE3C,MAAM63D,GAAsB/W,EAAAA,EAAAA,GAC1BnmB,EAAS88B,EAAQ98B,EAAS+8B,GAAiBI,EAAAA,EAC3CN,EAAQE,IAEJK,GAAwBjX,EAAAA,EAAAA,GAC5Bn8B,EAAQ8yC,EAAQ9yC,EAAQgzC,GAAgBG,EAAAA,EACxCN,EAAQG,IAEV,MAAO,CACL1qD,IAAK4qD,EAAoB5qD,GACzB+1B,OAAQ60B,EAAoB70B,GAC5BxK,KAAMu/B,EAAsBv/B,GAC5B+H,MAAOw3B,EAAsBx3B,GAEjC,CAEA,MAAMy3B,EAAmBA,CACvB30B,EACA0L,IAEa,QAAT1L,GAA2B,WAATA,EACb0L,EAAS,QAAU,OAErBA,EAAS,SAAW,MAG7B,SAASkpB,EAA4B/3D,GAGM,IAHL,KACpCmjC,EAAI,OACJrhB,EAAS,OACc9hB,EACvB,MAAM,OAAE6uC,GAAS,EAAO3tC,MAAO82D,GACX,iBAAXl2C,EAAsBA,EAAS,CAAE+sB,QAAQ,EAAO3tC,MAAO4gB,GAChE,MAAO,CACL,CAACg2C,EAAiB30B,EAAM0L,IAAUmpB,EAEtC,CAEO,SAASpB,EAAc/nD,GAU1B,IAV2B,KAC7Bs0B,EAAI,OACJrhB,EAAM,WACN+0C,GAODhoD,EACC,MAAOrB,EAAM+sB,IAAWr8B,EAAAA,EAAAA,UAGrB,CAAEu8B,YAAQl5B,EAAWkjB,WAAOljB,IAQ/B,OAPAT,EAAAA,EAAAA,YAAU,KACR,MAAM,aAAE23B,EAAY,YAAExX,GAAgB41C,EAAW73D,SAAW,CAAC,EACzDy5B,GAAgBjrB,GAAMitB,QAAUxZ,GAAezT,GAAMiX,OACvD8V,EAAQ,CAAEE,OAAQhC,EAAchU,MAAOxD,GACzC,IAIA5lB,EAAAA,cAAC67D,EAAoB,CACnB/zB,KAAMA,EACN3xB,MAAOkmD,EACLlqD,EACgB,aAAhBsU,EAAOnmB,KACHo8D,EAA6B,CAAE50B,OAAMrhB,OAAQA,EAAO5gB,QACpD4gB,EAAO5gB,QAInB,CAAC01D,EAAA/6D,aAAA,u9B,kFCvID,IACIo8D,EADAC,EAAsD,K,0BCuBnD,MAAM/yD,EAAiBpK,IAWW,IAXV,QAC7BqK,EAAO,SACPnK,EAAQ,MAKRumB,EAAQ,IAAG,OACXM,EAAM,UACNpa,EAAY,iBACTtK,GACiBrC,EACpB,MAAMumB,GAAa9iB,EAAAA,EAAAA,QAAoB,MACjC6P,GAAQiX,EAAAA,EAAAA,MACR5O,GAAQ4+C,EAAAA,EAAAA,GAAuB,IAChCl4D,EACHokB,UAGI2P,GAAa3yB,EAAAA,EAAAA,QAAuB,MAEpCg3D,EDzCD,SACLvzB,GAIA,MAAM16B,GAAY/I,EAAAA,EAAAA,QAAoB,OAEtC+lB,EAAAA,EAAAA,IAAgB,KAQd,GAPK2zC,IAEHA,EAAoBn9D,IAA2B,IAA1B,QAAE88B,EAAO,QAAEC,GAAS/8B,EACvCk9D,EAAqB,CAAEpgC,UAASC,UAAS,EAE3C53B,SAASC,iBAAiB,YAAa+3D,KAEpC3wD,EAAUvI,QAAS,CACtB,MAAMm5D,EAAaj4D,SAASonB,cAAc,QAY1C,OAXAzpB,OAAO4G,OAAO0zD,EAAW3mD,MAAO,CAC9BiT,MAAO,MACPgW,OAAQ,MACR9iB,cAAe,OACfpE,SAAU,QACV6kD,WAAY,WAEdl4D,SAASqM,KAAKgb,YAAY4wC,GAG1B5wD,EAAUvI,QAAUm5D,EACb,KACLA,EAAW/wC,QAAQ,CAEvB,IACC,IAEH,MAAMquC,EAAkBz5D,IACtB,MAAMq8D,EAAoBr8D,GAAKi8D,EAC/B,GAAI1wD,EAAUvI,SAAWq5D,EAAmB,CAC1C,MAAM,QAAExgC,EAAO,QAAEC,GAAYugC,EAC7B9wD,EAAUvI,QAAQwS,MAAM8mB,KAAQ,GAE9BT,GAAWoK,EAAQlgB,aAAe,OAEpCxa,EAAUvI,QAAQwS,MAAMzE,IAAO,GAAE+qB,KACnC,CACAwgC,GAAiB,GAEnB/zC,EAAAA,EAAAA,IAAgB,KACV0d,EAAQtgB,QACV8zC,GACF,GACC,CAACxzB,EAAQtgB,OAAQpa,EAAUvI,UAE9B,MAAQy2D,eAAgB6C,KAAoBr7C,IAAWuY,EAAAA,EAAAA,GAAmB,IACrEyM,EACH16B,cAGF,MAAO,IACF0V,EAIHw4C,iBAEJ,CCvBuB8C,CAA6B,CAChDpnC,aACAxP,OAAQjL,EAAMiL,OACdja,YACA+tB,YAAY,EACZ3T,OACEA,GAAUzT,EAAMnN,MAAc,kCAAoC,KAYtE,OARAJ,EAAAA,EAAAA,YAAU,KACJ4V,EAAMiL,QACR4f,uBAAsB,KACpBi0B,EAAaC,gBAAgB,GAEjC,GACC,CAAC/+C,EAAMiL,SAGRtmB,EAAAA,cAACq6D,EAAAA,EAAwB,CACvBtwD,QAASA,EACTowD,aAAcA,EACdG,QAAS16D,EACTyb,MAAOA,EACPya,WAAYA,EACZ7P,WAAYA,EAUZD,aAAa,EACb3f,WAAYtE,EAAMsE,YAClB,EAEJyD,EAAAtJ,aAAA,mpD,6HCpEK,MAAM65D,EAA2B36D,IASQ,IATgB,QAC9DqK,EAAO,QACPuwD,EAAO,MACPj/C,EAAK,WACLya,EAAU,WACV7P,EAAU,YACVD,EAAW,aACXm0C,KACGp4D,GACwBrC,EAC3B,MAAOy7D,EAAegC,IAAkBt6D,EAAAA,EAAAA,WAAS,IAC3C,aAAEm7B,EAAY,aAAE27B,GAAiByD,EACrCr7D,EAGA,IAAKsZ,EAAOtP,MAAOovD,EAAgB9/C,EAAMtP,MAAQ,IAAMsP,EAAMtP,OAAM,IACnEka,GAcF,OAXKD,UACIgY,EAAatP,SAGtBxF,EAAAA,EAAAA,IAAgB,KACdi0C,EAGQ,OAFNrnC,EAAWnyB,SAASwI,cAClB,2CAEH,IAGDnM,EAAAA,cAAAA,EAAAA,SAAA,KA6BJ,SACEJ,EACAo+B,GAEA,GAAwB,mBAAbp+B,EACT,OAAOA,EAASo+B,GAElB,GAAIh+B,EAAAA,eAAqBJ,IAAsC,iBAAlBA,EAASU,KACpD,OAAON,EAAAA,aAAmBJ,EAAUo+B,GAEtC,OAAOh+B,EAAAA,cAACq9D,EAAAA,EAAsBr/B,EAAep+B,EAC/C,CAvCO09D,CAAkBhD,EAAS,IAAKt8B,EAAc/pB,IAAKgS,IACnD5K,EAAMiL,SAAWvkB,EAAMsE,YACtBrG,EAAAA,cAAC66B,EAAAA,GAAO,KACN76B,EAAAA,cAACq7D,EAAAA,EAAez1D,SAAQ,CACtBC,MAAO,CACLwV,QACA8/C,gBACA9uD,UAAW8tD,EAAa9tD,UACxB+uD,qBAAsBjB,EAAa5/B,WAAWpkB,QAGhDnW,EAAAA,cAAA,OAAA0J,EAAAA,EAAAA,GAAA,IACMsP,EAAAA,EAAAA,GACFmhD,EAAalgC,aAEb0/B,GACD,CACD1lD,IAAK6hB,IAEJ/rB,KAKR,EAoBP,MAAMqzD,EAAkDA,CAACr7D,EAAOsZ,EAAOpH,KACrE,MAAM,aAAE+pB,EAAY,aAAE27B,IAAiB4D,EAAAA,EAAAA,GACrCx7D,EACAsZ,EACApH,GAkBF,OAbA+pB,EAAaxE,cAAgB,KACrBvlB,EAAItQ,mBAAmB+xC,kBAC3Br6B,EAAMtP,OAAM,EACd,SAQKiyB,EAAalO,YAEb,CACLkO,eACA27B,eACD,EACDU,EAAA75D,aAAA,u3C,sECtIF,MAAMg9D,GAA0BvtD,EAAAA,EAAAA,IAAO2pD,EAAAA,EAAS;;;eAGjCl6D,IAAA,IAAC,MAAEsT,GAAOtT,EAAA,MACpB,GAAEsT,EAAMnN,MAAc,iCAAiC;gBAC5CxF,IAAA,IAAC,MAAE2S,GAAO3S,EAAA,OACtB2S,EAAMC,MAAM,oCAAoC;;MAE9CxO,IAAA,IAAC,MAAEuO,GAAOvO,EAAA,OAAKuO,EAAMC,MAAM,qCAAqC;EAGhEwqD,GAAiCxtD,EAAAA,EAAAA,IAAOutD,EAAyB;gBACvD74D,IAAA,IAAC,MAAEqO,GAAOrO,EAAA,OACtBqO,EAAMC,MAAM,sCAAsC;kBACpCO,IAAA,IAAC,MAAER,GAAOQ,EAAA,OACxBR,EAAMC,MAAM,uCAAuC;EAO1CiT,EAAoBxS,IAGW,IAHV,KAChCpT,EAAO,QAAO,SACdV,GACuB8T,EACvB,MAAM8C,EACK,UAATlW,EAAmBk9D,EAA0BC,EAC/C,OAAOz9D,EAAAA,cAACwW,EAAS,CAACqjD,WAAS,GAAEj6D,EAAqB,EAClDsmB,EAAA1lB,aAAA,2e,sDCvCK,MAAMm6D,EAA6B,EAC7BH,EAAoB96D,IAAA,IAAC,MAAEsT,GAAyBtT,EAAA,OAC3DsT,EAAMC,MAAM,qBAAuBD,EAAME,KAAmB,UAAZ,UAAsB,EAC3DwnD,EAAqBr6D,IAAA,IAAC,MAAE2S,GAAyB3S,EAAA,OAC5D2S,EAAMC,MAAM,sBAAwBD,EAAME,KAAmB,UAAZ,UAAsB,C,wKCDlE,MAAMwqD,EAAsBh+D,IAI5B,IAJ+C,KACpD4K,GAGD5K,EACC,OACEM,EAAAA,cAAC8c,EAAAA,EAAiC,CAACC,QAASzS,EAAKM,KAC/C5K,EAAAA,cAAC29D,EAAAA,EAAQ,CAAC/yD,IAAKN,EAAKM,IAAKN,KAAMA,IACG,EAEtCozD,EAAAl9D,aAAA,iK,0BCaK,MAAMo9D,EAAkB59D,EAAAA,YAC7B,CAAAN,EASE8Y,KACI,IATJ,mBACEuY,GAAqB,EAAK,QAC1B8sC,EAAO,qBACPC,EAAoB,MACpB3nD,EAAK,UACLS,KACG7U,GACqBrC,EAG1B,MAAM2b,GAAQuc,EAAAA,EAAAA,GACZ,IAAK71B,EAAOkvB,wBAAyBlvB,EAAM+uB,qBAC3C+sC,GAEI5pD,GAAM0E,EAAAA,EAAAA,GAAaH,IACnB,UACJulD,EAAS,YACTC,EAAW,wBACX/8C,EAAuB,iBACvBC,IACE+8C,EAAAA,EAAAA,GAAmB,IAAKl8D,EAAOghB,eAAe,GAAQ1H,EAAOpH,IAE3D,iBAAEod,IAAqB6sC,EAAAA,EAAAA,GAAmB,CAAE7iD,UAIlD,OACErb,EAAAA,cAACm+D,EAAAA,EAAYv4D,SAAQ,CAACC,MAAOm4D,GAC3Bh+D,EAAAA,cAAC4c,EAAAA,EAA6BhX,SAAQ,CAACC,MAAOob,IAC1C68C,GAAwB99D,EAAAA,cAAC+0C,EAAAA,EAAqB7zB,GAChDlhB,EAAAA,cAACo+D,EAAAA,GAAU10D,EAAAA,EAAAA,GAAA,CACTknB,GAAIe,EAAAA,GACJ1d,IAAKA,EACL8c,mBAAoBA,GAChBM,EACA0sC,GACAhlD,EAAAA,EAAAA,GAAehX,EAAO,CAAEyuB,WAAW,IAAO,CAC9Cra,MAAOA,EACPS,UAAWA,KAEV,CAACtW,EAAcgK,IACdtK,EAAAA,cAAC09D,EAAmB,CAClB9yD,IAAMN,EAAiBM,IACvBN,KAAMA,OAKO,IAG3BszD,EAAAp9D,aAAA,oW,yGC/DK,SAASy9D,EACdl8D,EACAsZ,EACApH,GAEA,MAAM,eACJa,EAAc,iBACd8K,EAAgB,iBAChBjC,EAAgB,YAChBE,KACGwgD,IACD3+C,EAAAA,EAAAA,GAAyB,IACxB3d,EACHib,WAAY3B,EAAM2B,WAClBW,iBAAkBtC,EAAMsC,iBACxBiC,iBAAkB,IAAI0+C,EAAAA,EACpBjjD,EAAM2B,WACN3B,EAAM1Q,aACNsJ,GAEFA,SAOMsG,cAAegkD,IAA6B/jD,EAAAA,EAAAA,GAAY,CAC9DnX,UAAY1C,IAER,CAAC,QAAS,YAAa,cAAcS,SAAST,EAAEiK,QAC/C6P,EAAAA,EAAAA,GAAe9Z,GAEhBkd,EAAY+hB,QAEZj/B,EAAEka,qBACJ,KAIE,UAAEkjD,KAAcS,IAAmBC,EAAAA,EAAAA,GACvC,IAAK18D,EAAO6d,oBACZ,IAAKvE,EAAOsC,oBACZ1J,GAGF,MAAO,CACL8pD,WAAW/kD,EAAAA,EAAAA,GAAW+kD,EAAWjpD,EAAgBypD,MAC9CF,KACAG,EAEP,C,6DClEO,MAAMJ,GAAanuD,EAAAA,EAAAA,IAAOgX,EAAAA,GAAYxE,MAAM,CAAElR,KAAM,QAAoB;gBAC/D7R,IAAA,IAAC,MAAEsT,GAAOtT,EAAA,OAAKsT,EAAMC,MAAM,kBAAkB;oCCYtD,MAAMkrD,E,QAAcn+D,cACzB,K,kDCbK,MAAMs+D,UAAgClrC,EAAAA,EAC3ChS,WAAAA,CACUpE,EACRrS,EACAsJ,EACA8e,GAEA6N,MAAM,CACJ5jB,aACArS,eACAsJ,MACA8e,WAGAgC,OAAQ,SACP,KAbK/X,WAAAA,CAcV,CAEA0hD,YAAAA,CAAa9zD,GACX,MAAMN,EAAOgX,KAAKtE,WAAWC,QAAQrS,GACrC,OAAON,GAAMuvB,WAAavY,KAAKf,YAAY3V,EAC7C,CAEA+zD,aAAAA,CAAc/zD,GACZ,OAAO0W,KAAKd,YAAY5V,EAC1B,E,uGCzBK,MAAMg0D,EAAiB,GACxBC,GAAqB5uD,EAAAA,EAAAA,IAAOsM,EAAAA,EAAS;;;;;;EAYrCuiD,EAAUA,CAACp3C,EAAmBjT,KAClC,MAAM3T,EAAY,CAAE4b,SAAUgL,GAC9B,OAAIjT,EACK,CACLuV,UAAWtC,EAAW,4BAA8B,oBACpDq3C,SAAU,CAAEviD,KAAM,eAAgB1b,cAGjC2T,OAAL,EACS,CACLuV,UAAWtC,EAAW,6BAA+B,qBACrDq3C,SAAU,CAAEviD,KAAM,gBAAiB1b,aAEvC,EAGK,SAASk+D,EAAYt/D,GAIL,IAJM,SAC3BgoB,EAAQ,SACRjT,KACG1S,GACerC,EAClB,MAAMmK,GAAO6N,EAAAA,EAAAA,UAAQ,IAAMonD,EAAQp3C,EAAUjT,IAAW,CAACiT,EAAUjT,IACnE,OACEzU,EAAAA,cAAC6+D,GAAkBn1D,EAAAA,EAAAA,GAAA,CACjBG,KAAMA,GAAMk1D,SACZ/0C,UAAWngB,GAAMmgB,UACjB7X,KAAMysD,GACF78D,GAGV,CAACi9D,EAAAx+D,aAAA,2L,yBC3CM,SAASy+D,EAAuBv/D,GAQQ,IARJ,WACzCsd,EAAU,UACV8c,EAAS,iBACTnc,EAAgB,IAChB/S,GAIDlL,EACC,MAAO,CACLw/D,0BAA2B,CACzB5xC,qBAAqB,EACrB1jB,QAASA,KACPkwB,EAAUlvB,GAKV,MAAMu0D,EAAyB,IAC1BxhD,EAAiBmb,cACpBx0B,QAAQsG,IACR,IAAIivB,EAAY7c,EAAWC,QAAQrS,IAAMivB,UACzC,KAAOA,GAAW,CAChB,GAAIA,IAAcjvB,EAChB,OAAO,EAETivB,EAAY7c,EAAWC,QAAQ4c,IAAYA,SAC7C,CACA,OAAO,CAAK,IAEdslC,EAAuBnnD,SAASpN,GAC9B+S,EAAiByhD,gBAAgBx0D,MAIhC+S,EAAiBtB,WAAWzR,IAC7Bu0D,EAAuBr7D,OAAS,GAEhC6Z,EAAiByhD,gBAAgBx0D,EACnC,GAIR,C,0BCvCO,MAAMy0D,GAAiBpvD,EAAAA,EAAAA,IAAOwX,EAAAA,GAAgBhF,MACnD,CAAElR,KAAM,YACa;;;kBAGL7R,IAAA,IAAC,MAAE4/D,GAAO5/D,EAAA,OAAS4/D,EAAQ,GAAKV,EAAiB,EAAjC,IAAsC;;IAEpEv+D,IAAsD,IAClD+xB,GADH,iBAAEzK,EAAgB,SAAED,EAAQ,SAAEvO,EAAQ,MAAEnG,GAAO3S,EAE5C4S,EAAQkG,EACRnG,EAAMC,MAAM,wBACZD,EAAMC,MACJ,kBACAD,EAAMqP,aAAagQ,iBAsBzB,OApBI3K,IACEC,GACF1U,EAAQD,EAAMsf,oBACZtf,EAAMC,MACJ,6BACGD,EAAMqP,aAAakQ,yBAE1BH,EAAkBpf,EAAMC,MACtB,8BAGFA,EAAQD,EAAMC,MACZ,mCACAA,GAEFmf,EAAkBpf,EAAMC,MACtB,sCAIC,CACLmf,kBACAnf,QACD;EC/BE,SAAS0qD,EAAQj+D,GAAiC,IAA7B,KAAE4K,GAAwB5K,EACpD,MAAMuU,GAAM9Q,EAAAA,EAAAA,QAAO,OAEjBkY,OAAO,WACL2B,EAAU,iBACVW,EAAgB,aAChBma,EAAY,aACZntB,EAAY,UACZmvB,GAEFxR,QAASX,EACT43C,aAAe57D,QAASZ,KACtBd,EAAAA,EAAAA,YAAWk8D,EAAAA,GAET9hD,EAAasB,EAAiBtB,WAAW/R,EAAKM,KAC9C6J,EAAWqjB,EAAatZ,IAAIlU,EAAKM,KACjCvE,EAAasE,EAAa6T,IAAIlU,EAAKM,MAEjCqjB,WAAY8L,IAAqB7L,EAAAA,EAAAA,GAAS,IAC7C+wC,EAAwB,CACzBr0D,IAAKN,EAAKM,IACVoS,aACAW,mBACAmc,cACColC,0BACH74D,gBAGI,cAAEm5D,GCpCH,SAAoB9/D,GAcvB,IAd2B,KAC7B4K,EAAI,IACJ2J,EAAG,iBACH0J,EAAgB,SAChBxE,EAAQ,UACR2gB,EAAS,SACT/2B,GAQDrD,EACC,MACEuuB,YAAY,UAAE5qB,KAAc4qB,KAC1BC,EAAAA,EAAAA,GAAS,KACR+D,EAAAA,EAAAA,GAAkB,CACnBrnB,IAAKN,EAAKM,IACVqJ,MACA0J,mBACAoF,eAAe,IACd+E,UACHzhB,WAAY8S,EACZmU,qBAAqB,IAcvB,MAAO,CACLkyC,eAAexmD,EAAAA,EAAAA,GAAWiV,EAAY,CAAEwxC,cAZpBA,KAChB,IAAIn1D,EAAK8d,YAAYtkB,OAAS,EAChCg2B,EAAUxvB,EAAKM,KAEf7H,IAAWuH,EAAKM,IAClB,GAEgB,CAChB2G,KAAM,aAMV,CDN4BmuD,CAAY,CACpCp1D,OACA2J,MACA6lB,YACA/2B,WACA4a,mBACAxE,SAAU9S,IAYZ,OACErG,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACq/D,GAAc31D,EAAAA,EAAAA,GAAA,CACbuK,IAAKA,GACDurD,EAAa,CACjB73C,iBAAkBA,EAClBxO,SAAU9S,EACVqhB,SAAUrL,EACV,gBAAehW,EACf,gBAAegW,EACfijD,MAAOh1D,EAAKg1D,QAEX,IAAIh1D,EAAK8d,YAAYtkB,OAAS,GAC7B9D,EAAAA,cAACg/D,GAAYt1D,EAAAA,EAAAA,GAAA,CACXge,SAAUrL,EACV5H,SAAUA,GACNslB,IAGR/5B,EAAAA,cAAC6iB,EAAAA,EAAiBjd,SAAQ,CACxBC,MAAO,CACLQ,aACAgW,aACAkL,mBAAoBI,EACpBH,KAAMld,IAGPA,EAAKmX,WAKhB,CAACk8C,EAAAn9D,aAAA,wN,mLE5CM,SAASi+D,EAAiB/+D,EAU/B2b,EACApH,GACC,IAXD,SACElR,EAAQ,QACR2rB,EAAO,OACPa,EAAM,UACN9iB,EAAS,cACTgmB,EAAa,cACbtP,KACGphB,GACoBrC,EAIzB,MAAMoZ,GAAWC,EAAAA,EAAAA,GAAehX,GAC1BgxB,GAAWC,EAAAA,EAAAA,GAAY,CAAEC,MAAO,SAAUC,YAAa,UAEtD5K,EAASkL,IAAc3wB,EAAAA,EAAAA,WAAS,IAErCwwB,iBAAiB,YAGfvD,EACAzsB,UAAWs8D,KACRtsC,KAEHC,EAAAA,EAAAA,GAAwB,CAC1Brf,MACA0J,iBAAkBtC,EAAMsC,iBACxBsT,wBAAyBlvB,EAAM+uB,oBAC/B6B,eAAe,EACflmB,YACAmT,kBAAkBlI,EAAAA,EAAAA,UAChB,IACE3V,EAAM6d,kBACN,IAAI0+C,EAAAA,EACFjjD,EAAM2B,WACN3B,EAAM1Q,aACNsJ,EACA8e,IAEJ,CAAC1X,EAAM2B,WAAY3B,EAAM1Q,aAAc5I,EAAM6d,sBAIjDsD,EAAAA,EAAAA,GAAwB,CACtBE,cAAenP,EACfoH,QACAtY,WACAogB,kBAGF,MAAM,iBAAEsM,IAAqBC,EAAAA,EAAAA,GAAe,CAC1CC,oBAAqB6D,KAGvB1Q,EAAAA,EAAAA,GACE,CACEC,cAAehhB,EAAMghB,cACrBpF,iBAAkBtC,EAAMsC,kBAE1B1J,GAGF,MA0CM,cAAEsG,IAAkBC,EAAAA,EAAAA,GAAY,CACpCnX,UA3CiBE,IACjB,MAAMyf,EAAa3H,EAAMsC,iBAAiBqF,WACpC48C,EAAc58C,EAChB3H,EAAM2B,WAAWC,QAAQ+F,GACzB,KACJ,GAAI48C,EAAa,CACf,MAAMC,EAAe1+D,QAAQy+D,GAAal+C,eACpCjN,EAAW4G,EAAMyc,aAAatZ,IAAIwE,GAExC,GADmB3H,EAAM1Q,aAAa6T,IAAIwE,GAGxC,YADAzf,EAAMsX,sBAGR9Y,GAAO+9D,gBAAgBv8D,EAAOq8D,GAC9B,MAAMG,IACHtlD,EAAAA,EAAAA,GAAelX,KACD,UAAdA,EAAMqH,KACU,cAAdrH,EAAMqH,KAAuB6J,GACf,eAAdlR,EAAMqH,MAAyB6J,GACpC,GAAIorD,GAAgBE,EAGlB,OAFAx8D,EAAM2B,sBACNmW,EAAMye,UAAU9W,GAEX,GAAkB,UAAdzf,EAAMqH,IAEf,YADA7H,IAAWigB,EAGf,CAOE,CAACzf,EAAMgyC,QAAShyC,EAAM8xC,QAAS9xC,EAAMy8D,SAAUz8D,EAAM+xC,QAAQhxC,QAC1DiK,GAAMA,IACPzK,OAAS,GAEX67D,IAAmBp8D,GAErBA,EAAMsX,qBAAqB,IAOvB0kD,GAAc5gD,EAAAA,EAAAA,GAAU5b,IAExB,iBACJ4a,EAAgB,WAChBX,EAAU,aACV8a,EAAY,aACZntB,EAAY,UACZmvB,GACEze,EACE2iD,GAActmD,EAAAA,EAAAA,UAClB,MACE2D,MAAO,CACL2B,aACAW,mBACAma,eACAntB,eACAmvB,aAEFxR,QAASnnB,QAAQmnB,GAAWmK,GAC5B8sC,iBAEF,CACE5hD,EACAX,EACA8a,EACAntB,EACAmvB,EACAxR,EACAmK,EACA8sC,IAMJ,OAFAU,EAAqC5kD,GAE9B,CAEL0iD,WAAW/kD,EAAAA,EAAAA,GACTyW,EACA4D,EACA9Y,EACAzB,EACA,CAAE4V,UAASa,SAAQhe,KAAM,SAE3BysD,cACA11C,UAEJ,CAUA,MAAM23C,EAAwC5kD,IAC5C,MAAM6kD,GAAwB/8D,EAAAA,EAAAA,QAAOkY,EAAM2B,aAC3CvX,EAAAA,EAAAA,YAAU,KACR,GAA4C,QAAxC4V,EAAMsC,iBAAiBwiD,aAAwB,CACjD,MAAMr5D,EAAO,IAAIuU,EAAM2B,WAAWiB,YAE5B,QAAEmiD,EAAU,GAAE,MAAEC,EAAQ,KAAOxU,EAAAA,EAAAA,IAClCnR,GAAiB5zC,EAAK1F,SAASs5C,GAAe,QAAU,WACzD,IAAIr/B,EAAMsC,iBAAiBmb,eAE7B,GAAqB,IAAjBunC,EAAMv8D,QAAgBs8D,EAAQt8D,OAAS,EACzC,IAAK,IAAIw8D,KAAcF,EAAS,CAC9B,IAAIx1D,EAAuB01D,EAC3B,KAAcp6D,MAAP0E,GAAkB,CACvB,GAAI9D,EAAK1F,SAASwJ,GAGhB,OAFAyQ,EAAMsC,iBAAiBW,gBAAgB+hD,EAAM/4D,OAAOsD,SACpDyQ,EAAMsC,iBAAiB6B,cAAc5U,GAGvCA,EACEs1D,EAAsBv8D,QAAQsZ,QAAQrS,IAAMivB,gBAC5C3zB,CACJ,CACF,CAEJ,CACAg6D,EAAsBv8D,QAAU0X,EAAM2B,UAAU,GAC/C,CAAC3B,EAAM2B,YAAY,C,0GChOjB,MAAMujD,EAAiC7gE,IAEqB,IAFpB,kBAC7C8gE,GACiC9gE,EACjC,MAAM+gE,EACyB,iBAAtBD,EAAiCA,EAAkBC,aAAe,GACrEC,GAAmB7K,EAAAA,EAAAA,GAAY4K,GAUrC,MAAO,CACLz+C,YAR6B,iBAAtBw+C,EACHA,EAAkBC,aAAa38D,SAAW48D,EAAiB58D,QAC3D08D,EAAkBC,aAAa18D,MAC7B,CAAC48D,EAAe9qD,IAAU8qD,IAAkBD,EAAiB7qD,KAE/D2qD,EAIL,E,QC2BCI,OAAOC,SAvDJ,MAAMC,EAMX1/C,WAAAA,CACEmV,EAAwBvzB,GAEvB,IADD,aAAE80B,QAA2C,IAAA90B,EAAG,CAAC,EAACA,EAAA,KAP5C+9D,OAA4B,IAAIl/D,IAAM,KACtCm/D,cAAQ,OACRrgD,cAAQ,OACRG,aAAO,EAMbQ,KAAK0/C,SAAWzqC,EAChBuB,EAAeA,GAAgB,IAAIvZ,IAEnC,IAiBI0iD,EAjBAC,EAAS15C,IAGX,GAFAlG,KAAKy/C,OAAOr7D,IAAI8hB,EAAK5c,IAAK4c,GAGxBA,EAAKY,aACU,YAAdZ,EAAKlnB,MAAsBw3B,EAAatZ,IAAIgJ,EAAK5c,MAElD,IAAK,IAAIpE,KAASghB,EAAKY,WACrB84C,EAAM16D,EAEV,EAGF,IAAK,IAAIghB,KAAQ+O,EACf2qC,EAAM15C,GAIR,IAAI3R,EAAQ,EACZ,IAAK,IAAKjL,EAAK4c,KAASlG,KAAKy/C,OACvBE,GACFA,EAAKE,QAAUv2D,EACf4c,EAAK45C,QAAUH,EAAKr2D,MAEpB0W,KAAKX,SAAW/V,EAChB4c,EAAK45C,aAAUl7D,GAGC,SAAdshB,EAAKlnB,OACPknB,EAAK3R,MAAQA,KAGforD,EAAOz5C,EAIPy5C,EAAKE,aAAUj7D,EAGjBob,KAAKR,QAAUmgD,GAAMr2D,GACvB,CAEA,EAAAy2D,WACS//C,KAAK0/C,QACd,CAEA,QAAI7uD,GACF,OAAOmP,KAAKy/C,OAAO5uD,IACrB,CAEA8L,OAAAA,GACE,OAAOqD,KAAKy/C,OAAOj6D,MACrB,CAEAw6D,YAAAA,CAAa12D,GACX,IAAI4c,EAAOlG,KAAKy/C,OAAO55D,IAAIyD,GAC3B,OAAO4c,GAAM45C,SAAW,IAC1B,CAEAG,WAAAA,CAAY32D,GACV,IAAI4c,EAAOlG,KAAKy/C,OAAO55D,IAAIyD,GAC3B,OAAO4c,GAAM25C,SAAW,IAC1B,CAEA1gD,WAAAA,GACE,OAAOa,KAAKX,QACd,CAEAE,UAAAA,GACE,OAAOS,KAAKR,OACd,CAEA7D,OAAAA,CAAQrS,GACN,OAAO0W,KAAKy/C,OAAO55D,IAAIyD,IAAQ,IACjC,CAEAu/B,EAAAA,CAAGq3B,GACD,MAAM16D,EAAO,IAAIwa,KAAKrD,WACtB,OAAOqD,KAAKrE,QAAQnW,EAAK06D,GAC3B,EC9FK,SAASC,EACdj6C,GAEA,OAAOk6C,EAA+Bl6C,EAAM,GAC9C,CAEA,SAASk6C,EACPl6C,EACAouC,GAEA,IAAKpuC,EACH,MAAO,GAET,MAAMm6C,EAGFn6C,EAAKY,WAAWw4C,OAAOC,aACnBh7D,MAAO+7D,EAAU,KAAEC,GAASF,EAAmB/gD,OACjDkhD,EAAiBD,GAA2C,MAAnCF,EAAmB/gD,OAAO/a,MACzD,OAAkB,MAAd+7D,GAAsBE,GAAkBjC,EAAa+B,GAChDF,EACLE,EACAhM,EAAatuD,OAAQs6D,EAAuBh3D,MAGzCgrD,CACT,CAEA,MAAMiK,EAAmBr4C,GACvBA,EAAK9F,gBAEP,SAAyBs/C,GACvB,IAAK,MAAMv0C,KAAKu0C,GAAY,GAE1B,OAAO,EAET,OAAO,CACT,CARyBe,CAAgBv6C,EAAKY,Y,eC3BvC,MAAM45C,UAA6B7gC,EAAAA,EAGxC/f,WAAAA,CACEpE,EACA3B,EACAurB,GAEAhG,MAAM5jB,EAAY3B,EAAOurB,GAAS,KAPnB5pB,gBAAU,EAQzBsE,KAAKtE,WAAaA,CACpB,CAEAilD,eAAAA,GACE,GAAI3gD,KAAK0B,WAAY,CACnB,MAAMwE,EAAOlG,KAAKtE,WAAWC,QAAQqE,KAAK0B,YAC1C,GAAIwE,EAAM,CACR,MAAM,WAAE06C,GAAe5gD,KAAK6gD,uBAAuB36C,GAC/C06C,EAAWp+D,OAAS,GACtBwd,KAAKhD,gBAAgB,IAAIgD,KAAKwX,gBAAiBopC,GAEnD,CACF,CACF,CACAE,eAAAA,GACE,GAAI9gD,KAAK0B,WAAY,CACnB,MAAMwE,EAAOlG,KAAKtE,WAAWC,QAAQqE,KAAK0B,YAC1C,GAAIwE,EAAM,CACR,MAAM,WAAE66C,GAAe/gD,KAAK6gD,uBAAuB36C,GAC/C66C,EAAWv+D,OAAS,GACtBwd,KAAKhD,gBACH,IAAIgD,KAAKwX,cAAcx0B,QAAQsG,IAASy3D,EAAWjhE,SAASwJ,KAGlE,CACF,CACF,CAEQu3D,sBAAAA,CAAuB36C,GAC7B,OAAOlG,KAAKghD,kCACV96C,EACA,IAAIlG,KAAKtE,WAAWiB,WACpB,KAEJ,CAOQqkD,iCAAAA,CACN96C,EACA1gB,EACAy7D,GAEA,MAAMx8D,EACJyhB,GAAQA,EAAKqS,UAAYvY,KAAKtE,WAAWC,QAAQuK,EAAKqS,WAAa,KAC/D2oC,EAAU17D,EAAKxC,QAAQsG,GAAQA,IAAQ23D,IACvCE,EAAoB18D,EACtB28D,EAAkB38D,EAAQy8D,GAAS9/D,KAAIhD,IAAA,IAAC,IAAEkL,GAAKlL,EAAA,OAAKkL,CAAG,IACvD0W,KAAKqhD,cAAct+D,SAASuG,IAC1B,MAAMN,EAAOgX,KAAKtE,WAAWC,QAAQrS,GACrC,OAAOA,IAAQ4c,EAAK5c,KAAON,EACvBo4D,EAAkBp4D,EAAMk4D,GACrB9/D,KAAIrC,IAAA,IAAC,IAAEuK,GAAKvK,EAAA,OAAKuK,CAAG,IACpBtD,OAAOsD,GACV,EAAE,IAEZ,GAAI7E,GAAU08D,EAAkBzhE,OAAO4J,GAAQ0W,KAAKjF,WAAWzR,KAC7D,OAAO0W,KAAKghD,kCAAkCv8D,EAAQe,EAAM0gB,EAAK5c,KAEnE,MAAMg4D,EAAcF,EAClBl7C,EACA1gB,EAAKxC,QAAQsG,GAAQA,IAAQ23D,KAC7B7/D,KAAI+B,IAAA,IAAC,IAAEmG,GAAKnG,EAAA,OAAKmG,CAAG,IAEtB,MAAO,CACLs3D,WAAYU,EAAY7+D,MAAM6G,IAAS0W,KAAKjF,WAAWzR,KACnDg4D,EACCthD,KAAKjF,WAAWmL,EAAK5c,KAEtB63D,EADA,CAACj7C,EAAK5c,KAEVy3D,WACEI,EAAkB3+D,OAAS,GAC3B2+D,EAAkBzhE,OAAO4J,GAAQ0W,KAAKjF,WAAWzR,KAC7C63D,EACAnhD,KAAKjF,WAAWmL,EAAK5c,MAAQ23D,EAC7B,CAAC/6C,EAAK5c,KACNg4D,EAAYt+D,QAAQsG,GAAQ0W,KAAKjF,WAAWzR,KAEtD,CAEQ+3D,WAAAA,GACN,MAAO,IAAIrhD,KAAKtE,WAAWiB,WAAW3Z,QACnCsG,GAAmD,MAA3C0W,KAAKtE,WAAWC,QAAQrS,IAAMivB,WAE3C,EAGF,SAAS6oC,EACPl7C,EACAq7C,GAEA,MAAMz6C,GAAcZ,EAAK9F,cAAgB,IAAI8F,EAAKY,YAAc,IAAI9jB,QACjEkjB,GAASq7C,EAASzhE,SAASomB,EAAK5c,OAEnC,OAAO4c,EAAK9F,cACR0G,EAAW9gB,OACT8gB,EAAW1lB,KAAK8kB,GAASk7C,EAAkBl7C,EAAMq7C,KAAWC,QAE9D,EACN,C,cC9FO,MAAMhC,UAA0BiC,EAErC3hD,WAAAA,CACEmV,EAAwB72B,GAEvB,IADD,aAAEo4B,GAA0Cp4B,EAE5CkhC,MAAMrK,EAAO,CAAEuB,iBAAgB,KALjBkrC,cAAQ,EAMtB1hD,KAAK0hD,SAAW30D,MAAMC,KAAKioB,GAAO7zB,KAAIrC,IAAA,IAAC,IAAEuK,GAAKvK,EAAA,OAAKuK,CAAG,GACxD,CAEAq4D,oBAAAA,GACE,MAAMC,EAAY5hD,KAAK0hD,SACpBtgE,KAAKkI,GAAQ0W,KAAKrE,QAAQrS,KAC1BtG,OAAO+3C,EAAAA,GACV,OAAO/6B,KAAK6hD,6BAA6BD,EAAW,IAAI3kD,IAC1D,CAEQ4kD,4BAAAA,CACN5sC,EACA3U,GAEA,IAAK,MAAM4F,KAAQ+O,EACb/O,GAAM9F,gBACRE,EAAOgc,IAAIpW,EAAK5c,KAChB0W,KAAK6hD,6BAA6B37C,EAAKY,WAAYxG,IAGvD,OAAOA,CACT,EA6BK,SAASgW,EAAYnzB,EAE1Bo5D,GACe,IAFf,wBAAEhmC,EAA0B,WAAY91B,GAAqB0C,GAGxDqzB,EAAcsrC,IAAmBjuD,EAAAA,EAAAA,GACpCpT,EAAM+1B,aAAe,IAAIvZ,IAAIxc,EAAM+1B,mBAAgB5xB,EACnDnE,EAAMk2B,oBAAsB,IAAI1Z,IAAIxc,EAAMk2B,qBAAuB,IAAI1Z,IACrExc,EAAM6S,kBAGJyuD,GAAiBC,EAAAA,EAAAA,GAA0B,IAC1CvhE,EACH+kB,kBAAmB,YAEjBnc,GAAe+M,EAAAA,EAAAA,UACjB,IAAO3V,EAAM4I,aAAe,IAAI4T,IAAIxc,EAAM4I,cAAgB,IAAI4T,KAC9D,CAACxc,EAAM4I,eAGT,MAAMvE,EAAUm6D,EAA+Bx+D,GAE/C,IAAIwhE,GAAOC,EAAAA,EAAAA,GACTzhE,GACA+oC,EAAAA,EAAAA,cACGvU,GAAU,IAAIuqC,EAAevqC,EAAO,CAAEuB,kBACvC,CAACA,IAEH1xB,GAGF,MAAMuX,EAAmB,IAAIqkD,EAC3BuB,EACAF,ICxFG,SACLthE,EAKAyW,GAEA,MAAMirD,GAAc9kD,EAAAA,EAAAA,GAAU5c,IAE9B8xB,EAAAA,EAAAA,qBACErb,GACA,KACS,CACLiH,iBAAmB7U,IACjB64D,EAAY9/D,QAAQga,iBAAiB8B,iBAAiB7U,EAAI,EAE5DoR,MAAQpR,IACN,MAAM+S,EAAmB8lD,EAAY9/D,QAAQga,iBAC7CA,EAAiB6V,YAAW,GAO5B7V,EAAiB6B,cAAc,MAC/B5a,YAAW,KACT+Y,EAAiB6B,cAAc5U,EAAI,GACnC,EAEJq3D,eAAAA,GACEwB,EAAY9/D,QAAQga,iBAAiBskD,iBACvC,EACAG,eAAAA,GACEqB,EAAY9/D,QAAQga,iBAAiBykD,iBACvC,EACAsB,SAAAA,GACED,EAAY9/D,QAAQy/D,gBAClBK,EAAY9/D,QAAQ4/D,KAAKN,uBAE7B,EACAU,WAAAA,GACE,MAAM,KAAEJ,EAAI,gBAAEH,EAAe,iBAAEzlD,GAC7B8lD,EAAY9/D,QACRqf,EAAarF,EAAiBqF,WAMpC,GALAogD,EAAgB,IAAI7kD,KAKhByE,IAAeugD,EAAKP,SAAS5hE,SAAS4hB,GAAa,CACrD,IAAI1Y,EAAOi5D,EAAKtmD,QAAQ+F,GACxB,KAA0B,MAAnB1Y,GAAMuvB,WACXvvB,EAAOi5D,EAAKtmD,QAAQ3S,EAAKuvB,WAEvBvvB,IACFqT,EAAiB6B,cAAclV,EAAKM,KAChC+S,EAAiBtB,WAAW2G,IAC9BrF,EAAiBiS,OAAOtlB,EAAKM,KAGnC,CACF,KAGJ,GAEJ,CDuBEg5D,CAAW,CAAEjmD,mBAAkBylD,kBAAiBG,QAAQ1F,IAGxDp4D,EAAAA,EAAAA,YAAU,KAEuB,MAA7B49D,EAAergD,YACdugD,EAAKtmD,QAAQomD,EAAergD,aAG7BqgD,EAAe7jD,cAAc,KAC/B,GACC,CAAC+jD,EAAMF,EAAergD,aAuBzB,MAAO,CACLhG,WAAYumD,EACZzrC,eACAntB,eACAmvB,UAzBiBlvB,IACjB,IAAIi5D,EAAkBC,EACpBP,EACAzrC,EACAltB,GAEF,GAAgC,WAA5BitB,EAAsC,CACxC,MAAMksC,EA2CZ,SAAqBR,EAA+B34D,GAClD,MAAMivB,EAAY0pC,EAAKtmD,QAAQrS,IAAMivB,UACrC,IAAKA,EACH,MAAO,IAAI0pC,EAAKP,UAAU17D,OAAO08D,EAAgBT,IAEnD,IAAIx9D,EAAS8zB,EAAY0pC,EAAKtmD,QAAQ4c,GAAa,KACnD,GAAqB,SAAjB9zB,GAAQzF,KACV,OAAO2jE,EAAcl+D,GAAQrD,KAAI0W,IAAA,IAAC,IAAExO,GAAKwO,EAAA,OAAKxO,CAAG,IAEnD,MAAMs5D,EAAkB,GACxB,KAAOn+D,GACLm+D,EAAS7hE,QAAQ4hE,EAAcl+D,GAAQrD,KAAI4W,IAAA,IAAC,IAAE1O,GAAK0O,EAAA,OAAK1O,CAAG,KACvC,YAAhB7E,EAAOzF,KACLyF,EAAO8zB,UACT9zB,EAASw9D,EAAKtmD,QAAQlX,EAAO8zB,YAE7BqqC,EAAS7hE,QAAQ2hE,EAAgBT,IACjCx9D,EAAS,MAGXA,EAAS,KAGb,OAAOsI,MAAMC,KAAK,IAAIiQ,IAAI2lD,GAC5B,CAnE+BC,CAAYZ,EAAM34D,GAAKtG,QAC7C8/D,GAASA,IAASx5D,GAAOktB,EAAatZ,IAAI4lD,KAE7CP,EAAkBE,EAAiB35C,QAAO,CAAC0N,EAAcC,IAChD+rC,EACLP,EACAzrC,EACAC,IAED8rC,EACL,CACAT,EAAgBS,EAAgB,EAQhClmD,mBACAylD,kBAEJ,CAEA,SAASa,EAAiBz8C,GACxB,MAAMY,EAAa,IAAKZ,EAAKY,YAAc,IACrChd,EAAagd,EAAW9jB,QAAOK,IAAA,IAAC,KAAErE,GAAMqE,EAAA,MAAc,SAATrE,CAAe,IAC5D+jE,EAAej8C,EAAW9jB,QAAOkP,IAAA,IAAC,KAAElT,GAAMkT,EAAA,MAAc,YAATlT,CAAkB,IAEvE,OAAO8K,EAAW9D,OAAO+8D,EAAahgE,QAAQ4/D,GAChD,CAEA,SAASD,EAAgBT,GACvB,OAAOA,EAAKP,SACTtgE,KAAKkI,GAAQ24D,EAAKtmD,QAAQrS,KAC1BtG,OAAO+3C,EAAAA,GACPh4C,QAAQ4/D,GACRvhE,KAAIgR,IAAA,IAAC,IAAE9I,GAAK8I,EAAA,OAAK9I,CAAG,GACzB,CA8BA,SAASk5D,EACPP,EACAzrC,EACAltB,GAGA,IAAKktB,EAAatZ,IAAI5T,KAAS24D,EAAKtmD,QAAQrS,IAAM8W,cAChD,OAAOoW,EAET,MAAM0qC,EAkBR,SAAmB98D,EAAekF,GAChC,IAAI05D,EAAM,IAAI/lD,IAAI7Y,GACd4+D,EAAI9lD,IAAI5T,GACV05D,EAAI3+D,OAAOiF,GAEX05D,EAAI1mC,IAAIhzB,GAGV,OAAO05D,CACT,CA3BkBxqC,CAAUhC,EAAcltB,GAGxC,IAAK,MAAMw5D,KAAQ5B,EACS,MAAtBe,EAAKtmD,QAAQmnD,IACf5B,EAAQ78D,OAAOy+D,GAKnB,GAAI5B,EAAQhkD,IAAI5T,GACd,IAAK,MAAMw5D,KAAQ3C,EAAsB8B,EAAKtmD,QAAQrS,IACpD43D,EAAQ5kC,IAAIwmC,GAGhB,OAAO5B,CACT,C,iFE7NA,MAAM+B,UAA+BvvC,EAAAA,EACnCwvC,UAAAA,CAAWh9C,EAAe/Y,EAAWuuB,GACnC,MAAMynC,EAAa7jC,MAAM4jC,WAAWh9C,EAAM/Y,EAAGuuB,GAO7C,OALExV,EAAKqS,WAC6C,SAAlDvY,KAAKtE,WAAWC,QAAQuK,EAAKqS,YAAYv5B,OAEzCmkE,EAAWhwC,WAAWoF,UAAY,MAE7B4qC,CACT,CAEAC,iBAAAA,GACE,IAAI1nC,EAAI1b,KAAKqjD,QACTpuC,EAAQ,GAYZ,MAAMquC,EAAe,IAAItjD,KAAKtE,WAAWiB,WACtCvb,KAAKkI,GAAQ0W,KAAKtE,WAAWC,QAAQrS,KACrCtG,OAAO+3C,EAAAA,GACV,IAAK,IAAI70B,KAAQo9C,EAAc,CAC7B,IAAIH,EAAanjD,KAAKkjD,WAAWh9C,EAAM,EAAGwV,GAC1CA,EAAIynC,EAAWhwC,WAAW+yB,KAAKqd,KAC/BtuC,EAAMl0B,KAAKoiE,EACb,CAEA,GAAInjD,KAAKwjD,UAAW,CAClB,IAAItd,EAAO,IAAIud,EAAAA,GACb,EACA/nC,EACA1b,KAAKgU,YAAY0vC,YAAY57C,MAC7B9H,KAAK2jD,cAAgB3jD,KAAKgU,YAAY0vC,YAAY5lC,QAEhD8lC,EAAS,IAAIC,EAAAA,GAAW,SAAU,SAAU3d,GAChDlmC,KAAK8jD,YAAY1/D,IAAI,SAAUw/D,GAC/B3uC,EAAMl0B,KAAK,CAAEoyB,WAAYywC,IACzBloC,EAAIkoC,EAAO1d,KAAKqd,IAClB,CAEA,GAAqB,IAAjBtuC,EAAMzyB,OAAc,CACtB,IAAI0jD,EAAO,IAAIud,EAAAA,GACb,EACA/nC,EACA1b,KAAKgU,YAAY0vC,YAAY57C,MAC7B9H,KAAK+jD,mBAAqB/jD,KAAKgU,YAAY0vC,YAAY5lC,QAErDjP,EAAc,IAAIg1C,EAAAA,GAAW,cAAe,cAAe3d,GAC/DlmC,KAAK8jD,YAAY1/D,IAAI,cAAeyqB,GACpCoG,EAAMl0B,KAAK,CAAEoyB,WAAYtE,IACzB6M,EAAI7M,EAAYq3B,KAAKqd,IACvB,CAMA,OAJAvjD,KAAKqqB,YAAc,IAAIvB,EAAAA,GACrB9oB,KAAKgU,YAAY0vC,YAAY57C,MAC7B4T,EAAI1b,KAAKqjD,SAEJpuC,CACT,CAEA+uC,qBAAAA,CAAsB9d,GACpB,OAAO5mB,MACJ0kC,sBAAsB9d,GACtBljD,QAAQmwB,GAA0D,MAA3CnT,KAAKtE,WAAWC,QAAQwX,EAAW7pB,MAC/D,EAGK,MAAMszD,EAAqBx+D,IAS5B,IAT+C,MACnD2b,GAGD3b,EAMC,MAAMq1B,GAASrd,EAAAA,EAAAA,UACb,IACE,IAAI6sD,EAAoB,CAQtBtvC,mBAAoB,MAExB,IAKF,OAHAF,EAAO/X,WAAa3B,EAAM2B,WAC1B+X,EAAOpqB,aAAe0Q,EAAM1Q,aAErB,CACL0mB,iBAAkB,CAChBrO,WAAY3H,EAAMsC,iBAAiBqF,WACnChG,WAAY3B,EAAM2B,WAClB+X,SAKAK,UAAW,SACXC,aAAezqB,GACNmqB,EAAOO,YAAYD,aAAazqB,EAAK,CAC1C2qB,eAAe,EACfC,SAAU,IAGdC,gBAAiB,QAEpB,C,uECrHI,SAAS8vC,EAAc7lE,GAID,IAJE,QAC7Bm+D,GAGDn+D,EACC,MAAO,CACL,CACEiD,GAAImF,EAAAA,EAAeC,WACnB4B,MAAO,aACPE,KAAM7J,EAAAA,cAACkS,EAAAA,GAAY,CAACrI,KAAK,sBACzBvD,gBAAiBA,KACfu3D,EAAQl6D,SAAS+/D,WAAW,GAGhC,CACE/gE,GAAImF,EAAAA,EAAeE,aACnB2B,MAAO,eACPE,KAAM7J,EAAAA,cAACkS,EAAAA,GAAY,CAACrI,KAAK,wBACzBvD,gBAAiBA,KACfu3D,EAAQl6D,SAASggE,aAAa,GAGlC,CACEhhE,GAAImF,EAAAA,EAAeG,iBACnB0B,MAAO,mBACPrD,gBAAiBA,KACfu3D,EAAQl6D,SAASs+D,iBAAiB,GAGtC,CACEt/D,GAAImF,EAAAA,EAAeI,iBACnByB,MAAO,mBAGPrD,gBAAiBA,KACfu3D,EAAQl6D,SAASy+D,iBAAiB,GAI1C,C,mCC1BA,MAQMoD,EAAkC,SACtCl7D,EACA6d,EACAs9C,QAAmB,IAAnBA,IAAAA,EAAsB,IAEtB,MAAM7lE,EAAWuoB,EAAY7d,GACb,MAAZ1K,EACF6lE,EAAepjE,KAAKiI,GAEpB1K,EAASoY,SAASxR,GAChBg/D,EAAgCh/D,EAAO2hB,EAAas9C,IAG1D,EAGO,MAAMC,EAIXtkD,WAAAA,CAAoB/F,EAA4BkoD,GAAwB,KAApDloD,MAAAA,EAAkB,KAAUkoD,KAAAA,EAAqB,KADrEoC,MAAQ,IAAIC,QAEVtkD,KAAKiiD,KAAOA,EACZjiD,KAAKjG,MAAQA,CACf,CAEAtF,MAAAA,CAAOzL,GACL,MAAM1K,EAAW0hB,KAAKiiD,KAAKp7C,YAAY7d,GACjCM,EAAM0W,KAAKiiD,KAAKrhB,OAAO53C,GAE7B,GADqC,MAAZ1K,EAEvB0hB,KAAKjG,MAAMtF,OAAOnL,OACb,CACL,MAAMyQ,EAAQiG,KAAKukD,kBAAkBv7D,GAC/Bw7D,EAzCmBC,EAC7Bz7D,EACA6d,KAEA,MAAMs9C,EAAsB,GAE5B,OADAD,EAAgCl7D,EAAM6d,EAAas9C,GAC5CA,CAAc,EAmCMM,CAAuBz7D,GAAOA,GACnDgzD,EAAkBh8C,KAAKiiD,KAAKp7C,YAAY7d,MACxC5H,IAAI4e,KAAKiiD,KAAKrhB,QACF,aAAV7mC,EACFiG,KAAKjG,MAAM1V,UAAUmgE,GAErBxkD,KAAKjG,MAAMuiB,OAAOkoC,EAEtB,CACF,CAEAD,iBAAAA,CAAkBv7D,GAGhB,MAAM07D,EAAc1kD,KAAKqkD,MAAMx+D,IAAImD,GACnC,GAAI07D,EACF,OAAOA,EAET,MAAMpmE,EAAW09D,EAAkBh8C,KAAKiiD,KAAKp7C,YAAY7d,IACnDM,EAAM0W,KAAKiiD,KAAKrhB,OAAO53C,GAE7B,IAAI+Q,EACJ,GAFqC,MAAZzb,EAGvByb,EAAQ,IAAIiG,KAAKjG,MAAMxQ,OAAOzJ,SAASwJ,GAAO,WAAa,kBACtD,CACL,MAAMq7D,EAAuBrmE,EAAS8C,KAAK8D,GACzC8a,KAAKukD,kBAAkBr/D,KAGvB6U,EADE4qD,EAAqBjlE,OAAOqa,GAAoB,gBAAVA,IAChC,cAEA4qD,EAAqBjlE,OAAOqa,GAAoB,aAAVA,IAC1C,WACA,mBAER,CAEA,OADAiG,KAAKqkD,MAAMjgE,IAAI4E,EAAM+Q,GACdA,CACT,EAGF,SAASiiD,EAAqB19D,GAC5B,OAAIA,EACM,GAAwB0H,OAAO1H,GAElC,IACT,C,sEChGO,MAAMsmE,EAAgClmE,EAAAA,YAC3C,CAAAN,EASEuU,KACwB,IATxB,gBACEkyD,EAAe,kBACf3F,EAAiB,cACjBV,KACG/9D,GAGJrC,EAGD,MAAM0mE,EACyB,iBAAtB5F,EACHA,EAAkBC,aAClB,GACN,OACEzgE,EAAAA,cAAC49D,EAAAA,GAAel0D,EAAAA,EAAAA,GAAA,CACduK,IAAKA,GACDlS,EAAK,CAETy+D,kBAAmB,CACjBC,aAAc,CAAC0F,KAAoBC,IAErCtG,cAAeA,CAACv8D,EAAO+G,KACH,MAAd/G,EAAMqH,KAAeN,EAAKzE,OAC5BsgE,EAAgBpwD,OAAOzL,EAAKzE,OAE9Bi6D,IAAgBv8D,EAAO+G,EAAK,IAE9B,IAGN47D,EAAA1lE,aAAA,wd,kFCnCF,MAAM6lE,E,SAAwBp2D,GAAOa,KAAIsH,WAAA,CAAAC,YAAA,0CAAAC,YAAA,gBAAXrI,CAAW,gDAwB5Bq2D,EAAmB5mE,IAIC,IAJmB,eAClD2jE,EAAc,SACd9sD,EAAQ,kBACRgwD,GAAoB,GACK7mE,EACzB,MAAMs+D,GAAc/7D,EAAAA,EAAAA,YAAWk8D,EAAAA,GACzBqI,GAAcvkE,EAAAA,EAAAA,YAAW4gB,EAAAA,GAC/B,IAAK2jD,EACH,MAAM,IAAI32D,MAAM,oDAGlB,OACE7P,EAAAA,cAACqmE,EAAqB,KACpBrmE,EAAAA,cAACkb,EAAAA,EAAQ,CACPC,cAAY,EACZ,aAAa,UAASqrD,EAAYh/C,KAAKrc,YACvCkR,WAA+B,aAAnBgnD,EACZjnD,gBAAoC,sBAAnBinD,EACjBh9D,WAAYmgE,EAAYngE,WACxB+pB,SAAUA,KACR7Z,IAIIynD,GAAewI,GAAeD,IAChCvI,EAAY3iD,MAAMsC,iBAAiB6B,cACjCgnD,EAAYh/C,KAAK5c,KAEnBozD,EAAY3iD,MAAMsC,iBAAiB6V,YAAW,GAC9CwqC,EAAY3iD,MAAMsC,iBAAiBW,gBAAgB,CACjDkoD,EAAYh/C,KAAK5c,MAErB,IAGkB,EAE1B07D,EAAA9lE,aAAA,w8C,+ECvDK,MAAMimE,EAA0BA,CACrClD,EAAqB7jE,KAQQ,IAN3Bo5B,aAAc4tC,EAAgB,oBAC9BC,EAAmB,qBACnBC,GAGAlnE,EAEF,MAAOo5B,EAAc+tC,IAAsBC,EAAAA,EAAAA,GACzCJ,EACAC,GAAuB,IAAIpoD,IAC3BqoD,GAEI/I,GAAUl/C,EAAAA,EAAAA,GAAU4kD,GAE1B,OAAO7rD,EAAAA,EAAAA,UACL,IACE,IAAIguD,EAAAA,EACF,CAAE76D,MAAOiuB,KAAiB+tC,GAC1BhJ,EAAQl6D,UAEZ,CAACm1B,EAAcyqC,EAAKL,WACrB,C,6DCpBI,MAAMluC,UAAmC+xC,EAAAA,EAQ9C3lD,WAAAA,CAAYwlB,GACVhG,MAAMgG,GARR,KAGAogC,WAAa,IAAInlE,IAAmB,KAC5BolE,oBAA8B,EAAE,KAChC9xC,cAAwB,EAIDjvB,MAAzB0gC,EAAQzR,gBACV7T,KAAK6T,cAAgByR,EAAQzR,cAEjC,CAEA+xC,SAAAA,CAAU1/C,EAAe/Y,EAAWuuB,GAClC,MAAMynC,EAAa7jC,MAAMsmC,UAAU1/C,EAAM/Y,EAAGuuB,GAI5C,OAHI1b,KAAK2lD,sBACPxC,EAAWhwC,WAAW+yB,KAAKp+B,MAAQ9H,KAAK2lD,qBAEnCxC,CACT,CAEA0C,SAAAA,CAAU3/C,EAAe/Y,EAAWuuB,GAClC,MAAkB,YAAdxV,EAAKlnB,KACAghB,KAAK8lD,aAAa5/C,EAAM/Y,EAAGuuB,GAE7B4D,MAAMumC,UAAU3/C,EAAM/Y,EAAGuuB,EAClC,CAEAoqC,YAAAA,CAAa5/C,EAAe/Y,EAAWuuB,GACrC,IAAI5T,EAAQ9H,KAAKgU,YAAY0vC,YAAY57C,MACrCi+C,EAAa/lD,KAAK6T,cAElBqyB,EAAO,IAAIud,EAAAA,GAAKt2D,EAAGuuB,EAAG5T,EAAQ3a,EAAG44D,GACjC5yC,EAAa,IAAI0wC,EAAAA,GAAW39C,EAAKlnB,KAAMknB,EAAK5c,IAAK48C,GAErD,OADA/yB,EAAW6yC,eAAgB,EACpB,CACL7yC,aAGJ,CAKUiwC,iBAAAA,GACR,OAAO9jC,MAAM2mC,iBACf,CAEAA,eAAAA,GACEjmD,KAAK2lD,oBAAsB3lD,KAAKkmD,yBAMhClmD,KAAKmmD,qBACHnmD,KAAKqqB,aAAaviB,QAAU9H,KAAK2lD,oBACnC,MAAMS,EAAcpmD,KAAKojD,oBAEzB,OADApjD,KAAKqqB,YAAYviB,MAAQ9H,KAAK2lD,oBACvBS,CACT,CAEA3lD,gBAAAA,CAAiB4lD,EAAeC,GAC9B,OACEhnC,MAAM7e,iBAAiB4lD,EAASC,IAChCtmD,KAAKkmD,2BAA6BlmD,KAAK2lD,mBAE3C,CAGAY,QAAAA,CAASC,GACPlnC,MAAMinC,SAASC,GACfxmD,KAAKymD,UAAYzmD,KAAKqqB,YAAYviB,KACpC,CAEA4+C,cAAAA,CAAep9D,EAAgBuH,GAC7B,MAAM81D,EAAUrnC,MAAMonC,eAAep9D,EAAKuH,GAE1C,OADmBmP,KAAK8jD,YAAYj+D,IAAIyD,IACtBuH,EAAKiX,MAAQ9H,KAAKqqB,YAAYviB,OAC9C9H,KAAK0lD,WAAWthE,IAAIkF,EAAKuH,EAAKiX,QACvB,IAEP9H,KAAK0lD,WAAWrhE,OAAOiF,GAChBq9D,EAEX,CAEQT,sBAAAA,GACN,OAAOjmE,KAAK27B,IACV5b,KAAKgU,YAAY0vC,YAAY57C,SAC1B9H,KAAKgU,YAAY4yC,aAAaxlE,KAAKylE,IACpC,MAAM1zC,EAAa0zC,EAAK1zC,WAClB2zC,EACJ3zC,GAAcnT,KAAK0lD,WAAW7/D,IAAIstB,EAAW7pB,KAC/C,OACEw9D,GACA3zC,EAAW+yB,KAAK6gB,WAAW/mD,KAAKgU,YAAYgzC,kBAErCF,EAEF,CAAC,IAGd,E,kDCjIK,SAASG,EAAgB1zC,GAC9B,OACE2zC,EAAa3zC,IAAW,KAALA,GAAiB,KAALA,GAAiB,KAALA,GAAiB,KAALA,GAAiB,KAALA,CAEvE,CAEO,SAAS2zC,EAAaC,GAC3B,MAAO,QAAQC,KAAKD,EACtB,CAEO,SAASE,EAAY37C,GAC1B,OAAOA,EAAIne,gBAAkBme,GAAOA,EAAI8U,gBAAkB9U,CAC5D,CCLA,SAAS47C,EAAiBC,GACxB,OAAQN,EAAgBM,KAAQL,EAAaK,EAC/C,CAGO,MAAM1qD,EAAiBA,CAC5B5Z,EACAukE,KAEA,MAAMC,EAAWxkE,EAAMumB,MAAM,IAAIpoB,IAAIsmE,GAC/BC,EAAUH,EAAWh+C,MAAM,IAAIxmB,OAAOskE,GAAkBh5D,KAAK,IAC7DyN,EAA+D,GACrE,IAAI6rD,GAAa,EACbC,EAAa,EACfC,EAAe,EAEjB,OAAa,CACX,GAAI/rD,EAAQvZ,SAAWmlE,EAAQnlE,OAC7B,OAAOw5C,EAAAA,EAAAA,IAAwBjgC,EAAQ3a,KAAIhD,IAAA,IAAGypE,WAAY56D,GAAG7O,EAAA,OAAK6O,CAAC,KAErE,GAAI46D,EAAa5kE,EAAMT,OAAS,EAAG,CACjC,GAAIuZ,EAAQvZ,OAAS,EAAG,CAItB,MAAMulE,EAAYhsD,EAAQ0D,MAC1BooD,EAAaE,EAAUF,WAAa,EACpCC,EAAeC,EAAUD,aACzB,QACF,CACA,KACF,CACKR,EAAiBrkE,EAAM4kE,IAK1BF,EAAQG,GAActnC,gBAAkBv9B,EAAM4kE,GAAYrnC,gBACzDonC,GAAcH,EAASI,IAAkC,IAAnB9rD,EAAQvZ,SAE/CuZ,EAAQhb,KAAK,CAAE+mE,eAAcD,eAC7BD,GAAa,EACbE,IACAD,MAEAD,GAAa,EACbC,KAbAA,GAeJ,CACA,OAAO,IAAI,EAGb,SAASH,EAAQP,EAAc5yD,EAAeyzD,GAC5C,MAAMC,EAAeD,EAAMzzD,EAAQ,GACnC,OACY,IAAVA,GACC0yD,EAAgBgB,KAAkBhB,EAAgBE,IAClDE,EAAYF,KAAUE,EAAYY,EAEvC,C,2DC3DO,MAAMj2C,EACXsT,IAEA,MACEvT,iBAAiB,UAAEhwB,KAAcgwB,KAC/Bm2C,EAAAA,EAAAA,GAA4B5iC,GAwBhC,OAvBAnhC,EAAAA,EAAAA,YAAU,KAER,MAAM,iBAAEkY,EAAgB,UAAElR,EAAS,cAAEkmB,GAAkBiU,GAErDjU,GACe,UAAdlmB,GAAuC,SAAdA,GACK,MAA/BkR,EAAiBqF,YAEjBrF,EAAiB8B,iBAAiB9B,EAAiBqF,YAMnDrF,EAAiB2B,kBACc,MAA/B3B,EAAiBqF,YAIjBrF,EAAiB6B,cAAc7B,EAAiB2B,iBAClD,GAEC,IACI,CACL+T,gBAAiB,IACZA,EACHhwB,UAAY1C,IAQLA,EAAE20C,QACLjyC,IAAY1C,EACd,GAGL,C,4DCzCI,MAAMsxB,EACX2U,IAEA,MAKMhlB,GAAS6nD,EAAAA,EAAAA,GAA0B7iC,GACzC,MAAO,IACFhlB,EACHkG,WAAW9O,EAAAA,EAAAA,GAAW4I,EAAOkG,UAAW,CAAEmO,cARWt1B,IAChDimC,EAAQjpB,iBAAiBtB,WAAWuqB,EAAQh8B,MAC/Cg8B,EAAQjpB,iBAAiBiS,OAAOgX,EAAQh8B,IAC1C,IAMD,C,mCCjBI,MAAMy1B,EAAgB,yC,8ECGtB,MAAMpwB,EACXy5D,EAAAA,GACWz/C,EACXy/C,EAAAA,GACW/gD,EAAM+gD,EAAAA,GACNC,EACXD,EAAAA,E,4DCDK,MAAMxvD,EAAala,EAAAA,YAAiB,SAAyBN,EAElEuU,GACC,IAFD,SAAErU,KAAa2J,GAA6B7J,EAG5C,MAAMkqE,GAAiBzmE,EAAAA,EAAAA,QAAwB,MACzC0mE,GAAkB1mE,EAAAA,EAAAA,QAAqB,MA4B7C,OA3BA0wB,EAAAA,EAAAA,qBACE5f,GACA,MACE+H,MAAQ8tD,IACN,MAAMzvD,EAAewvD,EAAgBlmE,QAC/BomE,EAAmBH,EAAejmE,SAASo+B,cACjD,IAAK1nB,EACH,MAAM,IAAIxK,MAAM,4BAElB,IAAKk6D,EACH,MAAM,IAAIl6D,MAAM,+BAElB,GAAIi6D,EACF,OAAOzvD,EAAa2vD,aAGpBnlE,SAASk6B,eACTl6B,SAASk6B,gBAAkBgrC,GAC3BA,EAAiBjrC,SAASj6B,SAASk6B,gBAEnC1kB,EAAaO,UAAU,CAAEqvD,UAAU,GACrC,KAGJ,IAIAjqE,EAAAA,cAACkqE,EAAAA,GAAsB3gE,EACrBvJ,EAAAA,cAACmqE,EAAe,CAACl2D,IAAK41D,IACtB7pE,EAAAA,cAAA,QAAM,+BAA6B,GAAGqiC,QAAM,EAACpuB,IAAK21D,IACjDhqE,EAGP,IACMuqE,EAAkBnqE,EAAAA,YAAiB,SACvC+B,EACAkS,GAEA,MAAMoG,GAAeC,EAAAA,EAAAA,MAErB,OADAuZ,EAAAA,EAAAA,qBAAoB5f,GAAK,IAAMoG,GAAc,CAACA,IACvC,IACT,IAAGH,EAAA1Z,aAAA,6L,kCC3DI,MAAM67C,EACX/xC,GACmC,MAARA,C,yDCuB7B,IAAI+Q,EAAe,UACf+uD,EAAkB,G,cClBf,SAASp4D,EAAoBtS,GAGd,IAHe,OACnC4F,EAAM,cACNke,GACiB9jB,EACjB,OACE8jB,IAAkBle,GACjBA,aAAkBsB,aACjB,IAAItB,EAAO8iB,YAAYpnB,OAAOwF,GAAUA,aAAiBI,aAE/D,CA0DO,SAASqgC,EAAO5mC,GAOqC,IAPjC,cACzByR,EAAgB,EAAC,SACjBqH,EAAQ,YACR+tB,EAAW,OACXC,EAAM,UACNG,EAAS,aACTv1B,EAAeA,MAAM,IACH1R,EAClB,MAAMgqE,GAAc1rD,EAAAA,EAAAA,GAAU,CAAEwoB,SAAQG,cA4CxC,OAAOnuB,EAAW,CAAC,EAAI,CAAE2W,YA1CJvsB,IACnB,GAAqB,IAAjBA,EAAM2V,SAAiBnH,EAAaxO,GACtC,OD1DU,YAAV8X,IACF+uD,EAAkBvlE,SAASg4B,gBAAgB1mB,MAAMm0D,iBACjDzlE,SAASg4B,gBAAgB1mB,MAAMm0D,iBAAmB,QAGpDjvD,EAAQ,WCwDN,MAAM/M,EAAO,CAAEG,EAAGlL,EAAMgnE,MAAOvtC,EAAGz5B,EAAMinE,OACxC,IACIpjC,EADAqjC,GAAc,EAGlB,MAAM1R,EAAex1D,IACnB,MAAQgnE,MAAO97D,EAAG+7D,MAAOxtC,GAAMz5B,EACzB8jC,EAAW,CAAE54B,EAAGA,EAAIH,EAAKG,EAAGuuB,EAAGA,EAAI1uB,EAAK0uB,IAE5Cz7B,KAAKsmD,IAAIxgB,EAAS54B,IAAMqD,GACxBvQ,KAAKsmD,IAAIxgB,EAASrK,IAAMlrB,KACF24D,IACtBA,GAAc,EACdrjC,EAAaF,EAAY,CAAE54B,UAEzBm8D,GACFJ,EAAY1mE,QAAQwjC,OAAO,CACzB74B,OACA6Q,GAAI,CAAE1Q,EAAGH,EAAKG,EAAI44B,EAAS54B,EAAGuuB,EAAG1uB,EAAK0uB,EAAIqK,EAASrK,GACnDqK,WACAD,cAEJ,EAEFviC,SAASC,iBAAiB,YAAai0D,GAEvCl0D,SAASC,iBACP,WACA,KD7EU,aAAVuW,IAIJA,EAAQ,YAIRzW,YAAW,MAGT8lE,EAAAA,EAAAA,IAAmB,KAEH,cAAVrvD,IACsD,SAApDxW,SAASg4B,gBAAgB1mB,MAAMm0D,mBACjCzlE,SAASg4B,gBAAgB1mB,MAAMm0D,iBAC7BF,GAAmB,IAGvBA,EAAkB,GAClB/uD,EAAQ,UACV,GACA,GACD,MCwDOovD,GACFJ,EAAY1mE,QAAQ2jC,YAAY,CAAEF,eAEpCviC,SAAS6e,oBAAoB,YAAaq1C,EAAY,GAExD,CAAEh0D,MAAM,GACT,EAGL,C,kBCnHO,SAAS0V,EAAe9Z,GAC7B,OAAOA,EAAE20C,QAAU30C,EAAE00C,SAAW10C,EAAE40C,SAAW50C,EAAEq/D,QACjD,C,iGCQO,MAAM2K,EAUXvpD,WAAAA,CAAoBwpD,GAAqC,KAArCA,SAAAA,EAAkC,KAT9C5/B,sBAAgB,OAChB6/B,KAMJ,IAAIhpE,IAGNyf,KAAK0pB,iBAAmB,IAAIC,kBAAkB6/B,IAC5CA,EAAU9yD,SAAS+yD,IACjB,MAAMzlE,EAASylE,EAASzlE,OAClBA,aAAkBC,UAGxBwlE,EAASC,aAAahzD,SAASwP,IACzBA,aAAgBjiB,SAClB+b,KAAKupD,KAAK1jE,IAAI7B,IAAS2lE,qBAAqB9e,UAAU3kC,EACxD,IAEFujD,EAASG,WAAWlzD,SAASwP,IACvBA,aAAgBjiB,SAClB+b,KAAKupD,KAAK1jE,IAAI7B,IAAS2lE,qBAAqBlhC,QAAQviB,EACtD,IACA,GACF,GAEN,CAEAuiB,OAAAA,CAAQzkC,EAAiBshC,GACvBtlB,KAAKupD,KAAK1jE,IAAI7B,IAAS2lE,qBAAqB7/B,aAE5C,MAAM6/B,EAAuB,IAAIE,sBAC9B/mE,IACC,MAAMymE,EAAOvpD,KAAKupD,KAAK1jE,IAAI7B,GACrB8lE,GAAgB7jE,EAAAA,EAAAA,IAAQ8jE,IAAWA,EAAMC,MAAMlnE,GAC/CmnE,GAAeC,EAAAA,EAAAA,IAAQH,GAAUA,EAAM/lE,QAAQ8lE,GAE/CK,EAAoBF,EACvB7oE,KAAK2oE,IACHA,EAAMK,gBAAkBL,EAAM/lE,kBAAkBC,QAC7C8lE,EAAM/lE,YACNY,IAEL5B,OAAO+3C,EAAAA,GACJsvB,EAAqBJ,EACxB7oE,KAAK2oE,GACJA,EAAMK,gBAAkBL,EAAM/lE,kBAAkBC,QAC5C8lE,EAAM/lE,OACN,OAELhB,OAAO+3C,EAAAA,GAGJuvB,EACJf,GAAMgB,yBAA2B,GAC7B3vB,EAAqB0vB,EACxBtnE,QAAQe,IAAasmE,EAAmBvqE,SAASiE,KACjDiC,OAAOmkE,GACPnnE,QAAQe,KAILA,aAAmBuB,aACK,IAAxBvB,EAAQugB,aACiB,IAAzBvgB,EAAQ+3B,gBAGd9b,KAAKspD,SACH,CACEgB,+BACA1vB,mBAAoBA,EACpB52C,UAEFgc,MAEEupD,IACFA,EAAKgB,wBAA0B3vB,EACjC,GAEF,IACKtV,EACH7F,KAAMz7B,IAGV,IAAKA,GAAQ1F,UAAY,IAAKoY,SAAS8zD,IACrCb,EAAqBlhC,QAAQ+hC,EAAa,IAE5CxqD,KAAKupD,KAAKnlE,IAAIJ,EAAQ,CACpB2lE,uBACAY,wBAAyB,KAE3BvqD,KAAK0pB,iBAAiBjB,QAAQzkC,EAAQ,CACpC6lC,WAAW,GAEf,CAEAghB,SAAAA,CAAU7mD,GACRgc,KAAKupD,KAAK1jE,IAAI7B,IAAS2lE,qBAAqB7/B,YAC9C,CAEAA,UAAAA,GACE,IAAI9pB,KAAKupD,KAAKzjE,UAAU4Q,SAAQtY,IAAA,IAAC,qBAAEurE,GAAsBvrE,EAAA,OACvDurE,EAAqB7/B,YAAY,IAEnC9pB,KAAKupD,KAAO,IAAIhpE,IAChByf,KAAK0pB,iBAAiBI,YACxB,EC9HK,SAAS+Q,EACd4vB,EAA8C/oE,GAK7C,IAJD,UACEq4C,EAAY,GAAG,WACf2wB,EAAa,YAC0B,IAAAhpE,EAAG,CAAC,EAACA,EAE9C,MAAOk5C,EAAoB+vB,IAAyBppE,EAAAA,EAAAA,UAAoB,IAsBxE,OApBA4C,EAAAA,EAAAA,YAAU,KACR,MAAMymE,EAAmB,IAAIvB,GAAkBwB,IAC7CF,EAAsBE,EAAOjwB,mBAAmB,IAMlD,OAJAgwB,EAAiBniC,QAAQgiC,EAAuBpoE,QAAU,CACxDqoE,aACA3wB,cAEK,KACL6wB,EAAiB9gC,YAAY,CAC9B,GACA,CAMD2gC,EAAuBpoE,UAGlB,CACLu4C,qBAEJ,C,wECzBO,MAAMkwB,EAAmBA,CAM9BjkD,EAIA+5B,EACAmqB,KAEA,MAAMvlE,EAAculE,EAAM3pE,IAAIw/C,GACxBoqB,EAAe9kD,IACnB,MAAM5nB,EAAW4nB,EAAOW,EAAYX,GAAQ,KAChC,MAARA,GAAiB5nB,IAGrBkH,EAAKzE,KAAK6/C,EAAO16B,IACjB5nB,EAASoY,QAAQs0D,GAAY,EAG/B,OADAD,EAAM3pE,IAAIylB,GAAa26C,OAAO9qD,QAAQs0D,GAC/BxlE,CAAI,EAGAylE,EAAyBA,CAMpCpkD,EAIA+5B,EACAmqB,EACAG,KAEA,MAAMC,EAAmB,IAAIluD,IAAIiuD,GAC3B10C,EAAsB,GAe5B,OAdA31B,EACEgmB,GACA,CAACX,EAAMklD,KACL,MAAM9hE,EAAMs3C,EAAO16B,GACbqR,EACJ6zC,GAAa3oE,MAAM4oE,GAAeA,KAClCF,EAAiBjuD,IAAI5T,GAIvB,OAHIiuB,GACFf,EAAaz1B,KAAKuI,GAEbiuB,CAAU,GAEnBwzC,GAEKv0C,CAAY,EAGR31B,EAAWA,CACtBgmB,EACA+4C,EACAmL,KAEA,MAAMO,EAAOplD,IACX,MAAM5nB,EAAWuoB,EAAYX,GACvBpgB,EAASxH,GAAU8C,IAAIkqE,IAAQ,KACrC,OAAO1L,EAAM15C,EAAMpgB,EAAO,EAE5BilE,EAAMr0D,QAAQ40D,EAAI,EAGPC,EAAWA,CACtB1kD,EACA+4C,EACAmL,KAEA,MAAMS,EAAoBA,CAACtlD,EAAMulD,KAC/B,MAAMnrD,EAASs/C,EAAM15C,EAAMulD,GACrBntE,EAAWuoB,EAAYX,GAE7B,OADA5nB,GAAU8C,KAAKsqE,GAAcF,EAAIE,EAAWprD,KACrCA,CAAM,EAEf,OAAOyqD,EAAM3pE,KAAKq+B,GAAS+rC,EAAI/rC,EAAM,OAAM,EAGhCksC,EAAuBA,CAClCC,EACA3J,KAEA,MAAM4J,EAAYA,CAACv+D,EAAMc,KACvB,MAAM09D,EAAKF,EAAGt+D,GACRy+D,EAAKH,EAAGx9D,GACd,OAAO09D,EAAKC,GAAM,EAAID,EAAKC,EAAK,EAAI,CAAC,EAEvC9J,EAAK8I,MAAM58D,KAAK09D,GAChBN,EACEtJ,EAAKp7C,aACJX,IACC,MAAM5nB,EAAW2jE,EAAKp7C,YAAYX,GAC9B5nB,GACFA,EAAS6P,KAAK09D,EAChB,GAEF5J,EAAK8I,MACN,C,iDCvHI,MAAM9wC,EAAoBA,CAC/B+xC,EACAC,KAEA,MAAMnnE,GAAUnE,EAAAA,EAAAA,YAA+BqrE,GAE/C,GAAe,MAAXlnE,EACF,MAAM,IAAIyJ,MAAM09D,GAGlB,OAAOnnE,CAAO,C,iDCLT,SAAS9C,EAAoDimC,GAClE,IAAIt1B,GAAM9Q,EAAAA,EAAAA,WACV+lB,EAAAA,EAAAA,kBAAgB,KACdjV,EAAItQ,QAAU4lC,CAAE,IAIlB,OAAOuB,EAAAA,EAAAA,cAFW,mBAAA32B,EAAAC,UAAAtQ,OAAIuQ,EAAI,IAAAhG,MAAA8F,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAJD,EAAIC,GAAAF,UAAAE,GAAA,OACxBL,EAAItQ,SAASwlB,MAAM,KAAM9U,EAAK,GACA,GAClC,C,kDCCO,SAASi5B,EAAiBtqC,GAUxB,IAVyB,aAChCivD,EAAY,wBACZC,GAA0B,QAQ3B,IAAAlvD,EAAG,CAAC,EAACA,EA2BJ,MAAO,CAAEqqC,oBAAqB,CAAE3e,QA1BInrB,IAClC,GAAIA,EAAM+B,SAAW/B,EAAMigB,cAEzB,OAEF,MAAMgqD,EAAyBjqE,EAAMwY,cAEnCyxD,aAAkCjoE,SAClChC,EAAMigB,eAAesb,SAAS0uC,KAC7Btb,EAIGsb,aAAkC5mE,aACpC4mE,EAAuBxxD,QAIvBi2C,EACFA,KAGEwb,EAAAA,EAAAA,IAAuBlqE,EAAMigB,eAAeo+C,cAC3C5lD,OACL,GAGJ,C,gDCpDO,SAAS2C,EAAa9Y,GAC3B,MAAMoO,GAAM9Q,EAAAA,EAAAA,QAAO0C,GAInB,OAHAqjB,EAAAA,EAAAA,kBAAgB,KACdjV,EAAItQ,QAAUkC,CAAK,IAEdoO,CACT,C,iDCNO,SAAS4hD,EAAehwD,GAC7B,MAAMoO,GAAM9Q,EAAAA,EAAAA,QAAO0C,GAInB,OAHAJ,EAAAA,EAAAA,YAAU,KACRwO,EAAItQ,QAAUkC,CAAK,GAClB,CAACA,IACGoO,EAAItQ,OACb,C,2ECkDGi9D,OAAOC,SA1DH,MAAM6M,EAIXtsD,WAAAA,CAAYha,GAAsB,KAHzB+K,UAAI,OACIzM,SAAG,EAGlB4b,KAAK5b,IAAM,IAAI6Y,IAAInX,GACnBka,KAAKnP,KAAOmP,KAAK5b,IAAIyM,IACvB,CAEAyrB,GAAAA,GAAqC,IAAD,IAAAzpB,EAAAC,UAAAtQ,OAA7B+G,EAAK,IAAAwD,MAAA8F,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAALzJ,EAAKyJ,GAAAF,UAAAE,GACV,OAAOgN,KAAKqsD,sBAAsBrd,IAChCzlD,EAAMmN,SAAS1N,IACbgmD,EAAS1yB,IAAItzB,EAAK,GAClB,GAEN,CAEA3E,SAAwC,IAAD,IAAAioE,EAAAx5D,UAAAtQ,OAA7B+G,EAAK,IAAAwD,MAAAu/D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAALhjE,EAAKgjE,GAAAz5D,UAAAy5D,GACb,OAAOvsD,KAAKqsD,sBAAsBrd,IAChCzlD,EAAMmN,SAAS1N,IACbgmD,EAAS3qD,OAAO2E,EAAK,GACrB,GAEN,CAEAyL,MAAAA,GAAwC,IAAD,IAAA+3D,EAAA15D,UAAAtQ,OAA7B+G,EAAK,IAAAwD,MAAAy/D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAALljE,EAAKkjE,GAAA35D,UAAA25D,GACb,OAAOzsD,KAAKqsD,sBAAsBrd,IAChCzlD,EAAMmN,SAAS1N,IACRgmD,EAAS3qD,OAAO2E,IACnBgmD,EAAS1yB,IAAItzB,EACf,GACA,GAEN,CAEAs1B,KAAAA,GACE,OAAOte,KAAKqsD,sBAAsBrd,IAChCA,EAAS1wB,OAAO,GAEpB,CAEQ+tC,oBAAAA,CACNK,GAEA,MAAM1d,EAAW,IAAI/xC,IAAI+C,KAAK5b,KAE9B,OADAsoE,EAAO1d,GACA,IAAIod,EAAapd,EAC1B,CAGAt4C,OAAAA,GACE,OAAOsJ,KAAK5b,IAAIsS,WAAQ5D,UAC1B,CAEAoK,GAAAA,CAAI3Y,GACF,OAAOyb,KAAK5b,IAAI8Y,IAAI3Y,EACtB,CAEA,CAAAw7D,KACE,OAAO//C,KAAK5b,IAAIk7D,OAAOC,WACzB,CAEAz8D,OAAAA,GACE,OAAOkd,KAAK5b,IAAItB,SAClB,CAEA0C,IAAAA,GACE,OAAOwa,KAAK5b,IAAIoB,MAClB,CAEAM,MAAAA,GACE,OAAOka,KAAK5b,IAAI0B,QAClB,EC/DK,MAAM6mE,EACXvoE,IAAmD,CAEnDk4B,IAAK,mBAAAzpB,EAAAC,UAAAtQ,OAAIsD,EAAM,IAAAiH,MAAA8F,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAANlN,EAAMkN,GAAAF,UAAAE,GAAA,OACb5O,GACGwoE,GAAiB,IAAI3vD,IAAI,IAAImvD,EAAaQ,GAActwC,OAAOx2B,KACjE,EACHzB,OAAQ,mBAAAioE,EAAAx5D,UAAAtQ,OAAIsD,EAAM,IAAAiH,MAAAu/D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANzmE,EAAMymE,GAAAz5D,UAAAy5D,GAAA,OAChBnoE,GACGwoE,GACC,IAAI3vD,IAAI,IAAImvD,EAAaQ,GAAcvoE,UAAUyB,KACpD,EACHw4B,MAAOA,IACLl6B,GAAKwoE,GAAiB,IAAI3vD,IAAI,IAAImvD,EAAaQ,GAActuC,WAC/D7pB,OAAQ,mBAAA+3D,EAAA15D,UAAAtQ,OAAIsD,EAAM,IAAAiH,MAAAy/D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAN3mE,EAAM2mE,GAAA35D,UAAA25D,GAAA,OAChBroE,GACGwoE,GACC,IAAI3vD,IAAI,IAAImvD,EAAaQ,GAAcn4D,UAAU3O,KACpD,IAGL,SAAS+mE,EACPn6B,GAEA,OAAOt8B,EAAAA,EAAAA,UAAQ,IAAMu2D,EAAmBj6B,IAAW,CAACA,GACtD,CAMO,MAAM8yB,EAAqB,SAChC/yB,EACA5vB,EACAiM,QADoB,IAApBjM,IAAAA,EAAuB,IAAI5F,KAG3B,MAAO1Y,EAAOmuC,IAAY7+B,EAAAA,EAAAA,GACxB4+B,EACA5vB,EACAiM,GAIF,MAAO,CAACvqB,EAAOsoE,EAAqBn6B,GACtC,C,kDCrDwB,SAASojB,IAAI,OAAOA,EAAE50D,OAAO4G,OAAO5G,OAAO4G,OAAOytB,OAAO,SAASu3C,GAAG,IAAI,IAAIhX,EAAE,EAAEA,EAAEhjD,UAAUtQ,OAAOszD,IAAI,CAAC,IAAIz2D,EAAEyT,UAAUgjD,GAAG,IAAI,IAAI3Y,KAAK99C,EAAE6B,OAAO6rE,UAAUC,eAAeC,KAAK5tE,EAAE89C,KAAK2vB,EAAE3vB,GAAG99C,EAAE89C,GAAG,CAAC,OAAO2vB,CAAC,EAAEhX,EAAEjuC,MAAM7H,KAAKlN,UAAU,CAAC,MAAMzT,EAAE,CAAC,WAAW,WAAW89C,EAAE,CAAC,kBAAkB,oBAAoB,eAAe,YAAY,WAAW,cAAc,cAAc,UAAU,YAAY,UAAU,UAAU,kBAAkB,cAAc,cAAc,UAAU,aAAa,cAAc,aAAa,iBAAiB,aAAa,cAAc,WAAW,YAAY,YAAY,UAAU,eAAe,cAAc,YAAY,aAAa,YAAY,aAAa,aAAa,WAAW,UAAU,aAAa,SAAS,UAAU,SAAS,WAAW,UAAUr0B,QAAO,CAACgkD,EAAEhX,KAAKgX,EAAEhX,EAAEt1B,eAAes1B,EAAEgX,IAAG,CAACI,IAAI,YAAYC,EAAE,CAACC,IAAI,IAAIC,KAAK,IAAIC,GAAG,IAAIC,GAAG,IAAIC,KAAK,OAAIC,KAAK,UAAKl6C,EAAE,CAAC,QAAQ,UAAUjmB,EAAE,+GAA+G6d,EAAE,WAAWuiD,EAAE,UAAUzgE,EAAE,oCAAoC0gE,EAAE,WAAWC,EAAE,WAAWC,EAAE,kCAAkCC,EAAE,qEAAqEC,EAAE,kCAAkCC,EAAE,mCAAmC9wB,EAAE,eAAexhB,EAAE,SAASuyC,EAAE,wBAAwBC,EAAE,iBAAiB/gE,EAAE,MAAMiB,EAAE,kBAAkB+/D,EAAE,mDAAmDC,EAAE,mDAAmDC,EAAE,sCAAsCC,EAAE,wHAAwHC,EAAE,iDAAiDC,EAAE,uBAAuBC,EAAE,oCAAoCC,EAAE,wEAAwEC,EAAE,WAAWC,EAAE,uCAAuCC,EAAE,qBAAqBC,EAAE,uBAAuBC,EAAE,cAAcC,EAAE,4DAA4DC,EAAE,gDAAgDC,EAAE,+BAA+BC,EAAE,8BAA8BC,EAAE,WAAWC,EAAE,qCAAqCC,EAAE,MAAMC,EAAE,UAAUC,EAAE,iBAAiBC,EAAE,MAAMC,EAAE,aAAaC,EAAE,YAAYC,EAAE,YAAYC,EAAE,oFAAoFC,EAAE,mFAAmFC,EAAE,kDAAkDC,GAAE,kDAAkDC,GAAE,sBAAsBC,GAAE,6EAA6EC,GAAG,OAAOC,GAAG,YAAYC,GAAG,aAAaC,GAAG,SAASC,GAAG,gBAAgBC,GAAG,cAAc3nC,GAAG,YAAY,SAAS4nC,GAAG3D,GAAG,MAAM,SAAS,IAAIA,EAAE0D,GAAG3nC,IAAI,KAAK,CAAC,MAAM6nC,GAAGD,GAAG,GAAGE,GAAGF,GAAG,GAAG,SAASG,GAAG9D,GAAG,OAAO,IAAIhwB,OAAO,KAAK,IAAIgwB,EAAE4D,GAAGC,IAAI,CAAC,MAAMpD,GAAGqD,GAAG,GAAGC,GAAGD,GAAG,GAAG,SAASE,GAAGhE,GAAG,OAAO,IAAIhwB,OAAO,KAAK,IAAIgwB,EAAE4D,GAAGC,IAAI,uBAAuB,IAAI7D,EAAE0D,GAAG3nC,IAAI,qBAAqB,KAAK,CAAC,MAAMkoC,GAAGD,GAAG,GAAGE,GAAGF,GAAG,GAAG,SAASxD,GAAGR,GAAG,MAAMhX,EAAE,IAAIgX,EAAE0D,GAAG3nC,GAAG,OAAO,IAAIiU,OAAO,SAASgZ,EAAE,oCAAoCA,EAAE,OAAOA,EAAE,qBAAqB,CAAC,MAAMmb,GAAG3D,GAAG,GAAG4D,GAAG5D,GAAG,GAAG,SAAS6D,GAAGrE,EAAEhX,GAAG,MAAMz2D,EAAE,IAAIy2D,EAAE3Y,EAAE99C,EAAE4xE,GAAGC,GAAG/D,EAAE9tE,EAAE0xE,GAAGC,GAAGz9C,EAAEl0B,EAAEkuE,GAAGsD,GAAG,MAAM,CAAC,CAAA/D,CAAEA,EAAEhX,EAAEz2D,GAAG,MAAM8tE,EAAEoD,GAAGa,KAAK/xE,GAAG,OAAO8tE,IAAIrX,EAAEqX,IAAIrX,EAAE3qC,IAAI2qC,EAAE4X,GAAGvwB,EAAEi0B,KAAKtE,EAAEK,EAAE,GAAGL,GAAG,IAAI,EAAE7/D,EAAEokE,GAAGC,KAAK,CAAA1D,CAAEd,EAAEhX,EAAE3Y,GAAG,MAAM7vC,EAAEjO,GAAGytE,EAAE,QAAG,EAAO3hD,EAAE2hD,EAAE,GAAGlnE,QAAQ8nE,EAAE,MAAM7tD,MAAMstD,GAAG,IAAIlgE,GAAE,EAAG,MAAM,CAAC8gE,EAAE5iD,EAAE/pB,KAAI,SAAS0rE,EAAEztE,GAAG,MAAM8tE,EAAE55C,EAAE69C,KAAKtE,GAAG,GAAGtqE,OAAO8K,EAAE,IAAIwvC,OAAO,QAAQqwB,EAAE,IAAI,MAAMO,EAAEZ,EAAElnE,QAAQ0H,EAAE,IAAI1H,QAAQ2tB,EAAE,IAAIo6C,EAAEtuE,IAAI8rB,EAAE3oB,OAAO,EAAEorE,GAAG,IAAIF,EAAEr/D,QAAQ,SAASs/D,GAAG1gE,EAAEA,EAAE2gE,EAAE,MAAMC,EAAE1wB,EAAEhyB,EAAE2iD,EAAE3wB,EAAEgwB,EAAE,IAAIY,EAAE5wB,EAAEgwB,GAAE,EAAGS,GAAGzwB,EAAEhyB,GAAE,EAAG4iD,EAAEL,EAAE9nE,QAAQ0qE,GAAG,UAAUnzB,EAAEhyB,GAAE,EAAG4iD,EAAEL,EAAE9nE,QAAQ0qE,GAAG,KAAK,MAAMtC,EAAElY,EAAEiY,EAAE5wB,GAAG,OAAOA,EAAEhyB,EAAE0iD,EAAE1wB,EAAEgwB,EAAEW,EAAEE,CAAC,IAAGA,EAAE3uE,EAAE69C,EAAE5vC,EAAE,EAAE2gE,EAAE,CAACnY,EAAEz2D,EAAE89C,IAAI2vB,EAAEhX,EAAEkY,EAAE,KAAK,KAAK,CAAC1kE,IAAI6zC,EAAE+wB,EAAEjoB,MAAM6P,EAAE5Y,GAAG4Y,EAAEiY,EAAE3sE,KAAI,SAAS00D,EAAEqX,GAAG,OAAOL,EAAE,KAAK,CAACxjE,IAAI6jE,GAAG9tE,EAAEy2D,EAAE3Y,GAAG,KAAI,CAAC,MAAMo0B,GAAG,2DAA2DC,GAAG,4DAA4DC,GAAG,CAACxkE,EAAE6gE,EAAEC,EAAEI,EAAEE,EAAED,EAAEI,EAAEQ,EAAE+B,GAAGE,GAAGD,GAAGE,IAAIQ,GAAG,IAAID,GAAG,yBAAyBnD,EAAEI,GAAG,SAASiD,GAAG7E,GAAG,OAAOA,EAAElnE,QAAQ,8DAAoB,KAAKA,QAAQ,cAAQ,KAAKA,QAAQ,cAAQ,KAAKA,QAAQ,sCAAc,KAAKA,QAAQ,sCAAc,KAAKA,QAAQ,cAAQ,KAAKA,QAAQ,0DAAkB,KAAKA,QAAQ,sCAAc,KAAKA,QAAQ,wBAAU,KAAKA,QAAQ,gBAAgB,IAAIA,QAAQ,MAAM,KAAK46B,aAAa,CAAC,SAASoxC,GAAG9E,GAAG,OAAO8C,EAAExI,KAAK0F,GAAG,QAAQ4C,EAAEtI,KAAK0F,GAAG,SAAS6C,EAAEvI,KAAK0F,GAAG,OAAO,IAAI,CAAC,SAAS+E,GAAG/E,EAAEhX,EAAEz2D,GAAG,MAAM89C,EAAE99C,EAAE8uE,EAAE9uE,EAAE8uE,GAAE,EAAG,MAAMhB,EAAErX,EAAEgX,EAAEgF,OAAOzyE,GAAGA,EAAE8uE,EAAEhxB,EAAE,IAAI5pB,EAAE,CAAC,IAAI,OAAO45C,EAAEz2D,SAAQ,SAASo2D,EAAEhX,GAAG,mBAAmBgX,EAAE9tE,KAAK,IAAI82D,GAAGA,IAAIqX,EAAE3qE,OAAO,GAAG+wB,EAAExyB,KAAK,KAAK,SAAS+rE,EAAE9tE,MAAM,MAAMmuE,EAAErX,EAAE,IAAI,mBAAmBqX,EAAErX,EAAE,GAAG92D,OAAO8tE,EAAEsB,EAAEtB,EAAEsB,EAAExoE,QAAQ6pE,EAAE,KAAKl8C,EAAEA,EAAE/wB,OAAO,GAAGzB,KAAK+rE,GAAG,IAAGv5C,CAAC,CAAC,SAASw+C,GAAGjF,EAAEhX,EAAEz2D,GAAGA,EAAE8rB,GAAE,EAAG,MAAMgyB,EAAE00B,GAAG/E,EAAE,GAAGhX,EAAEz2D,GAAG8tE,EAAEL,EAAE,GAAGlnE,QAAQ4pE,EAAE,IAAIhmD,MAAM,KAAKpoB,IAAIwwE,IAAIr+C,EAAE,SAASu5C,EAAEhX,EAAEz2D,GAAG,OAAOytE,EAAEgF,OAAOtoD,MAAM,MAAMpoB,KAAI,SAAS0rE,GAAG,OAAO+E,GAAG/E,EAAEhX,EAAEz2D,EAAE,GAAE,CAA9E,CAAgFytE,EAAE,GAAGhX,EAAEz2D,GAAG,OAAOA,EAAE8rB,GAAE,EAAG,CAACkjD,EAAElB,EAAEqB,EAAEj7C,EAAEm7C,EAAEvxB,EAAEn+C,KAAK,QAAQ,CAAC,SAASgzE,GAAGlF,EAAEhX,GAAG,OAAO,MAAMgX,EAAEuB,EAAEvY,GAAG,CAAC,EAAE,CAACmc,UAAUnF,EAAEuB,EAAEvY,GAAG,CAAC,SAASoc,GAAGpF,GAAG,OAAO,SAAShX,EAAEz2D,GAAG,OAAOA,EAAE8rB,EAAE2hD,EAAEsE,KAAKtb,GAAG,IAAI,CAAC,CAAC,SAASqc,GAAGrF,GAAG,OAAO,SAAShX,EAAEz2D,GAAG,OAAOA,EAAE8rB,GAAG9rB,EAAEquE,EAAEZ,EAAEsE,KAAKtb,GAAG,IAAI,CAAC,CAAC,SAASsc,GAAGtF,GAAG,OAAO,SAAShX,EAAEz2D,GAAG,OAAOA,EAAE8rB,GAAG9rB,EAAEquE,EAAE,KAAKZ,EAAEsE,KAAKtb,EAAE,CAAC,CAAC,SAASuc,GAAGvF,GAAG,OAAO,SAAShX,GAAG,OAAOgX,EAAEsE,KAAKtb,EAAE,CAAC,CAAC,SAASwc,GAAGxF,EAAEhX,EAAEz2D,GAAG,GAAGy2D,EAAE3qC,GAAG2qC,EAAE4X,EAAE,OAAO,KAAK,GAAGruE,IAAIA,EAAEkzE,SAAS,MAAM,OAAO,KAAK,IAAIp1B,EAAE,GAAG2vB,EAAEtjD,MAAM,MAAM9pB,OAAMotE,IAAI2E,GAAGhvE,MAAKqzD,GAAGA,EAAEsR,KAAK0F,OAAM3vB,GAAG2vB,EAAE,KAAKA,EAAEgF,UAAS,MAAM3E,EAAEhwB,EAAEq1B,UAAU,MAAM,IAAIrF,EAAE,KAAK,CAAChwB,EAAEgwB,EAAE,CAAC,SAASsF,GAAG3F,GAAG,IAAI,GAAG4F,mBAAmB5F,GAAGlnE,QAAQ,kBAAkB,IAAIia,MAAM,8CAA8C,MAAM,CAAC,MAAMitD,GAAG,OAAO,IAAI,CAAC,OAAOA,CAAC,CAAC,SAAS6F,GAAG7F,GAAG,OAAOA,EAAElnE,QAAQyqE,GAAG,KAAK,CAAC,SAASuC,GAAG9F,EAAEhX,EAAEz2D,GAAG,MAAM89C,EAAE99C,EAAE8rB,IAAG,EAAGgiD,EAAE9tE,EAAEquE,IAAG,EAAGruE,EAAE8rB,GAAE,EAAG9rB,EAAEquE,GAAE,EAAG,MAAMn6C,EAAEu5C,EAAEhX,EAAEz2D,GAAG,OAAOA,EAAE8rB,EAAEgyB,EAAE99C,EAAEquE,EAAEP,EAAE55C,CAAC,CAAC,SAASs/C,GAAG/F,EAAEhX,EAAEz2D,GAAG,MAAM89C,EAAE99C,EAAE8rB,IAAG,EAAGgiD,EAAE9tE,EAAEquE,IAAG,EAAGruE,EAAE8rB,GAAE,EAAG9rB,EAAEquE,GAAE,EAAG,MAAMn6C,EAAEu5C,EAAEhX,EAAEz2D,GAAG,OAAOA,EAAE8rB,EAAEgyB,EAAE99C,EAAEquE,EAAEP,EAAE55C,CAAC,CAAC,SAASu/C,GAAGhG,EAAEhX,EAAEz2D,GAAG,OAAOA,EAAE8rB,GAAE,EAAG2hD,EAAEhX,EAAEz2D,EAAE,CAAC,MAAM0zE,GAAG,CAACjG,EAAEhX,EAAEz2D,KAAI,CAAE+uE,EAAEwE,GAAG9c,EAAEgX,EAAE,GAAGztE,KAAK,SAAS2zE,KAAK,MAAM,CAAC,CAAC,CAAC,SAASC,KAAK,OAAO,IAAI,CAAC,SAASC,MAAMpG,GAAG,OAAOA,EAAE9pE,OAAOnD,SAASyO,KAAK,IAAI,CAAC,SAAS6kE,GAAGrG,EAAEhX,EAAEz2D,GAAG,IAAI89C,EAAE2vB,EAAE,MAAMK,EAAErX,EAAEtsC,MAAM,KAAK,KAAK2jD,EAAE3qE,SAAS26C,EAAEA,EAAEgwB,EAAE,SAAI,IAAShwB,IAAIgwB,EAAEiG,QAAQ,OAAOj2B,GAAG99C,CAAC,CAAC,IAAIgyE,GAA06MvE,GAAv6M,SAASuG,GAAGh0E,EAAEquE,EAAE,CAAC,GAAGA,EAAE4F,UAAU5F,EAAE4F,WAAW,CAAC,EAAE5F,EAAE6F,QAAQ7F,EAAE6F,SAAS5B,GAAGjE,EAAE8F,oBAAoB9F,EAAE8F,oBAAoB1d,EAAE,CAAC,EAAEqX,EAAEO,EAAE8F,qBAAqBrG,EAAE,MAAMqC,EAAE9B,EAAE/iD,eAAe,gBAAgB,SAAS8kD,EAAE3C,EAAEztE,KAAK89C,GAAG,MAAMgwB,EAAEgG,GAAGzF,EAAE4F,UAAU,GAAGxG,UAAU,CAAC,GAAG,OAAO0C,EAAE,SAAS1C,EAAEhX,GAAG,MAAMz2D,EAAE8zE,GAAGrd,EAAEgX,GAAG,OAAOztE,EAAE,mBAAmBA,GAAG,iBAAiBA,GAAG,WAAWA,EAAEA,EAAE8zE,GAAGrd,EAAE,GAAGgX,cAAcA,GAAGA,CAAC,CAA1H,CAA4HA,EAAEY,EAAE4F,WAAWxd,EAAE,CAAC,EAAEz2D,EAAE8tE,EAAE,CAAC73D,UAAU49D,GAAG,MAAM7zE,OAAE,EAAOA,EAAEiW,UAAU63D,EAAE73D,iBAAY,OAAY6nC,EAAE,CAAC,SAASuyB,EAAE5Z,GAAG,IAAIz2D,GAAE,EAAGquE,EAAE+F,YAAYp0E,GAAE,EAAGquE,EAAEgG,aAAar0E,GAAE,IAAKgwE,EAAEjI,KAAKtR,IAAI,MAAM3Y,EAAEqzB,GAAGD,EAAGlxE,EAAEy2D,EAAE,GAAGA,EAAE0c,UAAU5sE,QAAQuqE,GAAG,UAAU,CAAChlD,EAAE9rB,KAAK,KAAK,iBAAiB89C,EAAEA,EAAE36C,OAAO,KAAK26C,EAAEA,EAAE36C,OAAO,GAAGsvE,QAAQ30B,EAAE19B,MAAM,GAAG,OAAOiuD,EAAEiG,QAAQ,OAAOx2B,EAAE,MAAMgwB,EAAEO,EAAEiG,UAAUt0E,EAAE,OAAO,OAAO,IAAIk0B,EAAE,GAAG4pB,EAAE36C,OAAO,GAAGkrE,EAAEkG,aAAargD,EAAE4pB,MAAM,CAAC,GAAG,IAAIA,EAAE36C,OAAO,OAAO+wB,EAAE4pB,EAAE,GAAG,iBAAiB5pB,EAAEk8C,EAAE,OAAO,CAACnmE,IAAI,SAASiqB,GAAGA,EAAEA,EAAE,IAAI,CAAC,OAAO,gBAAgB45C,EAAE,CAAC7jE,IAAI,SAASiqB,EAAE,CAAC,SAASo8C,EAAE7Z,GAAG,MAAMz2D,EAAEy2D,EAAEj2C,MAAMvS,GAAG,OAAOjO,EAAEA,EAAEypB,QAAO,SAASgtC,EAAEz2D,EAAE8tE,GAAG,MAAM55C,EAAEl0B,EAAEgP,QAAQ,KAAK,IAAI,IAAIklB,EAAE,CAAC,MAAMjmB,GAAWw/D,EAA2GztE,EAAEsqB,MAAM,EAAE4J,IAA3G,IAAIu5C,EAAEz+D,QAAQ,MAAM,OAAOy+D,EAAEjtD,MAAM4uD,KAAK3B,EAAEA,EAAElnE,QAAQmpE,GAAE,SAASjC,EAAEhX,GAAG,OAAOA,EAAEvoD,aAAa,KAAIu/D,GAAiBgF,OAAO3mD,EAAE,SAAS2hD,GAAG,MAAMhX,EAAEgX,EAAE,GAAG,OAAO,MAAMhX,GAAG,MAAMA,IAAIgX,EAAEtqE,QAAQ,GAAGsqE,EAAEA,EAAEtqE,OAAO,KAAKszD,EAAEgX,EAAEnjD,MAAM,GAAG,GAAGmjD,CAAC,CAAjG,CAAmGztE,EAAEsqB,MAAM4J,EAAE,GAAGu+C,QAAQpE,EAAEvwB,EAAE7vC,IAAIA,EAAEL,EAAE6oD,EAAE4X,GAAG,SAASZ,EAAEhX,GAAG,MAAM,UAAUgX,EAAEhX,EAAEtsC,MAAM,QAAQV,QAAO,SAASgkD,EAAEhX,GAAG,MAAMz2D,EAAEy2D,EAAEnsC,MAAM,EAAEmsC,EAAEznD,QAAQ,MAAM,OAAOy+D,EAAEztE,EAAEuG,QAAQ,aAAYknE,GAAGA,EAAE,GAAGv/D,iBAAgBuoD,EAAEnsC,MAAMtqB,EAAEmD,OAAO,GAAGsvE,OAAOhF,CAAC,GAAE,CAAC,GAAG,SAASA,EAAE2F,GAAG3c,IAAIA,EAAEj2C,MAAM8uD,KAAK7Y,EAAEA,EAAEnsC,MAAM,EAAEmsC,EAAEtzD,OAAO,IAAI,SAASszD,GAAG,UAAUA,GAAGA,EAAE,CAAnR,CAAqRxoD,EAAE6d,GAAG,iBAAiBle,IAAIqhE,EAAElH,KAAKn6D,IAAIyhE,EAAEtH,KAAKn6D,MAAM6oD,EAAE4X,GAAG,eAAegC,EAAEziE,EAAE6kE,QAAQ,CAACxoE,IAAI6jE,IAAI,KAAK,UAAU9tE,IAAIy2D,EAAE3Y,EAAE99C,IAAIA,IAAG,GAAlqB,IAASytE,EAA6pB,OAAOhX,CAAC,GAAE,CAAC,GAAG,IAAI,CAAC,MAAM8Z,EAAE,GAAGS,EAAG,CAAC,EAAEC,EAAG,CAACuD,WAAW,CAAC/G,EAAEsF,GAAGnlE,GAAGA,EAAEokE,GAAGC,KAAK1D,EAAE,CAACd,EAAEhX,EAAEz2D,KAAI,CAAE+uE,EAAEtY,EAAEgX,EAAE,GAAGlnE,QAAQ+nE,EAAE,IAAItuE,KAAK4uE,EAAE,CAACnB,EAAEhX,EAAEz2D,IAAIowE,EAAE,aAAa,CAACnmE,IAAIjK,EAAE6uE,GAAGpY,EAAEgX,EAAEsB,EAAE/uE,KAAKy0E,UAAU,CAAChH,EAAEuF,GAAGzE,GAAG3gE,EAAEokE,GAAGC,KAAK1D,EAAEoF,GAAG/E,EAAE,CAACnB,EAAEhX,EAAEz2D,IAAIowE,EAAE,KAAK,CAACnmE,IAAIjK,EAAE6uE,KAAK6F,cAAc,CAACjH,EAAEsF,GAAGvE,GAAG5gE,EAAEokE,GAAGC,KAAK1D,EAAEoF,GAAG/E,EAAE,CAACnB,EAAEhX,EAAEz2D,IAAIowE,EAAE,KAAK,CAACnmE,IAAIjK,EAAE6uE,KAAK8F,UAAU,CAAClH,EAAEsF,GAAGrE,GAAG9gE,EAAEokE,GAAG4C,IAAIrG,EAAEd,IAAG,CAAEsB,EAAEtB,EAAE,GAAGlnE,QAAQ,UAAU,IAAIA,QAAQ,OAAO,IAAI+oE,OAAE,IAASV,EAAE,CAACnB,EAAEztE,EAAE89C,IAAIsyB,EAAE,MAAM,CAACnmE,IAAI6zC,EAAE+wB,GAAGuB,EAAE,OAAO3Z,EAAE,CAAC,EAAEgX,EAAE8B,EAAE,CAACt5D,UAAUw3D,EAAE6B,EAAE,QAAQ7B,EAAE6B,IAAI,KAAK7B,EAAEsB,KAAK8F,WAAW,CAACpH,EAAEsF,GAAGtE,GAAG7gE,EAAEokE,GAAG4C,IAAIrG,EAAEd,IAAG,CAAE8B,EAAEe,EAAE7C,EAAE,IAAI,IAAIsB,EAAEtB,EAAE,GAAG6B,EAAE7B,EAAE,SAAI,EAAO9tE,KAAK,eAAem1E,WAAW,CAACrH,EAAEqF,GAAGnE,GAAG/gE,EAAEokE,GAAG+C,IAAIxG,EAAEd,IAAG,CAAEsB,EAAEtB,EAAE,KAAKmB,EAAE,CAACnB,EAAEhX,EAAEz2D,IAAIowE,EAAE,OAAO,CAACnmE,IAAIjK,EAAE6uE,GAAGpB,EAAEsB,IAAIiG,SAAS,CAACvH,EAAEsF,GAAGnE,GAAGhhE,EAAEokE,GAAG4C,IAAIrG,EAAEd,IAAI8C,EAAE7uE,KAAK,CAAC8tE,EAAE/B,EAAE,GAAGgC,EAAEhC,EAAE,KAAK,CAAC,GAAGmB,EAAEgF,IAAIqB,kBAAkB,CAACxH,EAAEoF,GAAGhE,GAAGjhE,EAAEokE,GAAGC,KAAK1D,EAAEd,IAAG,CAAEsB,EAAEtB,EAAE,GAAGiC,EAAE,IAAIrB,EAAE6F,QAAQzG,EAAE,QAAQmB,EAAE,CAACnB,EAAEhX,EAAEz2D,IAAIowE,EAAE,IAAI,CAACnmE,IAAIjK,EAAE6uE,EAAEqG,KAAK9B,GAAG3F,EAAEiC,IAAIU,EAAE,MAAM,CAACnmE,IAAIjK,EAAE6uE,GAAGpB,EAAEsB,KAAKoG,QAAQ,CAAC1H,EAAEoF,GAAG9jE,GAAGnB,EAAEokE,GAAGC,KAAK1D,EAAEd,IAAG,CAAEkC,EAAE,MAAMlC,EAAE,GAAGtsC,gBAAgBytC,EAAE,CAACnB,EAAEhX,EAAEz2D,IAAIowE,EAAE,QAAQ,CAACgF,QAAQ3H,EAAEkC,EAAE1lE,IAAIjK,EAAE6uE,EAAEwG,UAAS,EAAG11E,KAAK,cAAc2Q,QAAQ,CAACm9D,EAAEsF,GAAG1E,EAAEiH,mBAAmBvG,EAAED,GAAGlhE,EAAEokE,GAAGC,KAAK1D,EAAE,CAACd,EAAEhX,EAAEz2D,KAAI,CAAE+uE,EAAEwE,GAAG9c,EAAEgX,EAAE,GAAGztE,GAAG4vE,EAAEvB,EAAE6F,QAAQzG,EAAE,IAAIoC,EAAEpC,EAAE,GAAGtqE,SAASyrE,EAAE,CAACnB,EAAEhX,EAAEz2D,IAAIowE,EAAE,IAAI3C,EAAEoC,IAAI,CAAC7tE,GAAGyrE,EAAEmC,EAAE3lE,IAAIjK,EAAE6uE,GAAGpY,EAAEgX,EAAEsB,EAAE/uE,KAAKu1E,cAAc,CAAC9H,EAAEsF,GAAG/D,GAAGphE,EAAEokE,GAAG4C,IAAIrG,EAAE,CAACd,EAAEhX,EAAEz2D,KAAI,CAAE+uE,EAAEwE,GAAG9c,EAAEgX,EAAE,GAAGztE,GAAG6vE,EAAE,MAAMpC,EAAE,GAAG,EAAE,EAAE9tE,KAAK,aAAa61E,YAAY,CAAC/H,EAAEuF,GAAG7D,GAAGvhE,EAAEokE,GAAGC,KAAK1D,EAAE,KAAI,CAAG,GAAEK,EAAEgF,IAAI6B,MAAM,CAAChI,EAAEqF,GAAGX,IAAIvkE,EAAEokE,GAAGC,KAAK1D,EAAEd,IAAG,CAAEqC,EAAErC,EAAE,GAAGiC,EAAE4D,GAAG7F,EAAE,IAAIsC,EAAEtC,EAAE,KAAKmB,EAAE,CAACnB,EAAEhX,EAAEz2D,IAAIowE,EAAE,MAAM,CAACnmE,IAAIjK,EAAE6uE,EAAE6G,IAAIjI,EAAEqC,QAAG,EAAO9mE,MAAMykE,EAAEsC,QAAG,EAAO7hD,IAAIklD,GAAG3F,EAAEiC,MAAM3W,KAAK,CAAC0U,EAAEoF,GAAGX,IAAItkE,EAAEokE,GAAG+C,IAAIxG,EAAE,CAACd,EAAEhX,EAAEz2D,KAAI,CAAE+uE,EAAEyE,GAAG/c,EAAEgX,EAAE,GAAGztE,GAAG0vE,EAAE4D,GAAG7F,EAAE,IAAIsC,EAAEtC,EAAE,KAAKmB,EAAE,CAACnB,EAAEhX,EAAEz2D,IAAIowE,EAAE,IAAI,CAACnmE,IAAIjK,EAAE6uE,EAAEqG,KAAK9B,GAAG3F,EAAEiC,GAAG1mE,MAAMykE,EAAEsC,GAAGtZ,EAAEgX,EAAEsB,EAAE/uE,KAAK21E,4BAA4B,CAAClI,EAAEoF,GAAGpD,GAAG7hE,EAAEokE,GAAG4C,IAAIrG,EAAEd,IAAG,CAAEsB,EAAE,CAAC,CAACA,EAAEtB,EAAE,GAAG9tE,KAAK,SAAS+vE,EAAEjC,EAAE,GAAG9tE,KAAK,UAAUi2E,oBAAoB,CAACnI,EAAE,CAACA,EAAEhX,IAAIA,EAAEuZ,EAAE,KAAK6C,GAAGtD,EAAHsD,CAAMpF,EAAEhX,GAAG7oD,EAAEokE,GAAG4C,IAAIrG,EAAEd,IAAG,CAAEsB,EAAE,CAAC,CAACA,EAAEtB,EAAE,GAAG9tE,KAAK,SAAS+vE,EAAEjC,EAAE,GAAGsC,OAAE,EAAOpwE,KAAK,UAAUk2E,mBAAmB,CAACpI,EAAEoF,GAAGrD,GAAG5hE,EAAEokE,GAAG4C,IAAI,CAAArG,CAAEd,GAAG,IAAIhX,EAAEgX,EAAE,GAAGztE,EAAEytE,EAAE,GAAG,OAAO3hD,EAAEi8C,KAAK/nE,KAAKA,EAAE,UAAUA,GAAG,CAAC+uE,EAAE,CAAC,CAACA,EAAEtY,EAAElwD,QAAQ,UAAU,IAAI5G,KAAK,SAAS+vE,EAAE1vE,EAAEL,KAAK,OAAO,GAAGm2E,YAAYhE,GAAG1B,EAAE,GAAG2F,cAAcjE,GAAG1B,EAAE,GAAG4F,iBAAiB,CAACvI,EAAEsF,GAAGl1B,GAAGjwC,EAAEokE,GAAG+C,IAAIxG,EAAEoF,GAAG/E,EAAE,IAAI,MAAMqH,UAAU,CAACxI,EAAEwF,GAAGrlE,EAAEokE,GAAG+C,IAAIxG,EAAEmF,GAAG9E,EAAE,CAACnB,EAAEhX,EAAEz2D,IAAIowE,EAAE,IAAI,CAACnmE,IAAIjK,EAAE6uE,GAAGpY,EAAEgX,EAAEsB,EAAE/uE,KAAKsT,IAAI,CAACm6D,EAAEoF,GAAGjD,GAAGhiE,EAAEokE,GAAG4C,IAAIrG,EAAEd,IAAIuD,EAAGvD,EAAE,IAAI,CAACiC,EAAEjC,EAAE,GAAGsC,EAAEtC,EAAE,IAAI,CAAC,GAAGmB,EAAEgF,IAAIsC,SAAS,CAACzI,EAAEqF,GAAGjD,GAAGjiE,EAAEokE,GAAG4C,IAAIrG,EAAEd,IAAG,CAAEqC,EAAErC,EAAE,SAAI,EAAOwC,EAAExC,EAAE,KAAKmB,EAAE,CAACnB,EAAEhX,EAAEz2D,IAAIowE,EAAE,MAAM,CAACnmE,IAAIjK,EAAE6uE,EAAE6G,IAAIjI,EAAEqC,EAAE5hD,IAAIklD,GAAGpC,EAAGvD,EAAEwC,GAAGP,GAAG1mE,MAAMgoE,EAAGvD,EAAEwC,GAAGF,KAAKoG,QAAQ,CAAC1I,EAAEoF,GAAG/C,GAAGliE,EAAEokE,GAAG4C,IAAIrG,EAAE,CAACd,EAAEhX,EAAEz2D,KAAI,CAAE+uE,EAAEtY,EAAEgX,EAAE,GAAGztE,GAAGkwE,EAAEzZ,EAAEgX,EAAE,GAAGlnE,QAAQwpE,EAAE,QAAQ/vE,GAAGiwE,EAAExC,EAAE,KAAKmB,EAAE,CAACnB,EAAEhX,EAAEz2D,IAAIgxE,EAAGvD,EAAEwC,GAAGG,EAAE,IAAI,CAACnmE,IAAIjK,EAAE6uE,EAAEqG,KAAK9B,GAAGpC,EAAGvD,EAAEwC,GAAGP,GAAG1mE,MAAMgoE,EAAGvD,EAAEwC,GAAGF,GAAGtZ,EAAEgX,EAAEsB,EAAE/uE,IAAIowE,EAAE,OAAO,CAACnmE,IAAIjK,EAAE6uE,GAAGpY,EAAEgX,EAAEyC,EAAElwE,KAAKo2E,MAAM,CAAC3I,EAAEsF,GAAGpD,GAAG/hE,EAAEokE,GAAGC,KAAK1D,EAAEmE,GAAG9D,EAAE,CAACnB,EAAEhX,EAAEz2D,IAAIowE,EAAE,QAAQ,CAACnmE,IAAIjK,EAAE6uE,GAAGuB,EAAE,QAAQ,KAAKA,EAAE,KAAK,KAAK3C,EAAE4B,EAAEttE,KAAI,SAAS+7C,EAAEgwB,GAAG,OAAOsC,EAAE,KAAK,CAACnmE,IAAI6jE,EAAEt4D,MAAMm9D,GAAGlF,EAAEK,IAAIrX,EAAE3Y,EAAE99C,GAAG,MAAKowE,EAAE,QAAQ,KAAK3C,EAAE0B,EAAEptE,KAAI,SAAS+7C,EAAEgwB,GAAG,OAAOsC,EAAE,KAAK,CAACnmE,IAAI6jE,GAAGhwB,EAAE/7C,KAAI,SAAS+7C,EAAEgwB,GAAG,OAAOsC,EAAE,KAAK,CAACnmE,IAAI6jE,EAAEt4D,MAAMm9D,GAAGlF,EAAEK,IAAIrX,EAAE3Y,EAAE99C,GAAG,IAAG,OAAMq2E,eAAe,CAAC5I,EAAE,SAASA,EAAEhX,GAAG,OAAOA,EAAEqY,GAAGrY,EAAE3qC,GAAE,EAAGokD,EAAE6B,KAAKtE,IAAI,IAAI,EAAE7/D,EAAEokE,GAAGC,KAAK1D,EAAE,WAAW,MAAM,CAAC5uE,KAAK,iBAAiB,EAAEivE,EAAE,IAAI,OAAOryD,KAAK,CAACkxD,EAAEuF,GAAGnC,IAAGjjE,EAAEokE,GAAGsE,IAAI/H,EAAEd,IAAG,CAAEsB,EAAEtB,EAAE,GAAGlnE,QAAQ2oE,GAAE,CAACzB,EAAEhX,IAAI4X,EAAE8F,oBAAoB1d,GAAG4X,EAAE8F,oBAAoB1d,GAAGgX,MAAKmB,EAAEnB,GAAGA,EAAEsB,GAAGwH,WAAW,CAAC9I,EAAEqF,GAAGtC,GAAG5iE,EAAEokE,GAAGwE,IAAIjI,EAAE,CAACd,EAAEhX,EAAEz2D,KAAI,CAAE+uE,EAAEtY,EAAEgX,EAAE,GAAGztE,KAAK4uE,EAAE,CAACnB,EAAEhX,EAAEz2D,IAAIowE,EAAE,SAAS,CAACnmE,IAAIjK,EAAE6uE,GAAGpY,EAAEgX,EAAEsB,EAAE/uE,KAAKy2E,eAAe,CAAChJ,EAAEqF,GAAGrC,GAAG7iE,EAAEokE,GAAG+C,IAAIxG,EAAE,CAACd,EAAEhX,EAAEz2D,KAAI,CAAE+uE,EAAEtY,EAAEgX,EAAE,GAAGztE,KAAK4uE,EAAE,CAACnB,EAAEhX,EAAEz2D,IAAIowE,EAAE,KAAK,CAACnmE,IAAIjK,EAAE6uE,GAAGpY,EAAEgX,EAAEsB,EAAE/uE,KAAK02E,YAAY,CAACjJ,EAAEqF,GAAGlC,IAAGhjE,EAAEokE,GAAGC,KAAK1D,EAAEd,IAAG,CAAEsB,EAAEtB,EAAE,GAAG9tE,KAAK,UAAUg3E,WAAW,CAAClJ,EAAEqF,GAAGpC,GAAG9iE,EAAEokE,GAAG+C,IAAIxG,EAAEmF,GAAG9E,EAAE,CAACnB,EAAEhX,EAAEz2D,IAAIowE,EAAE,OAAO,CAACnmE,IAAIjK,EAAE6uE,GAAGpY,EAAEgX,EAAEsB,EAAE/uE,KAAK42E,oBAAoB,CAACnJ,EAAEqF,GAAGnC,IAAG/iE,EAAEokE,GAAG+C,IAAIxG,EAAEmF,GAAG9E,EAAE,CAACnB,EAAEhX,EAAEz2D,IAAIowE,EAAE,MAAM,CAACnmE,IAAIjK,EAAE6uE,GAAGpY,EAAEgX,EAAEsB,EAAE/uE,OAAM,IAAKquE,EAAEwI,wBAAwB5F,EAAG6F,UAAU,CAACrJ,EAAEuF,GAAG/D,GAAGrhE,EAAEokE,GAAGC,KAAK,CAAA1D,CAAEd,EAAEhX,EAAEz2D,GAAG,MAAM,CAAC89C,GAAG2vB,EAAE,GAAGjtD,MAAMuwD,IAAIjD,EAAE,IAAIrwB,OAAO,IAAIK,IAAI,MAAM7vC,EAAEw/D,EAAE,GAAGlnE,QAAQunE,EAAE,IAAIhiD,GAAGuiD,EAAEpgE,EAAEokE,GAAGjvE,MAAKqqE,GAAGA,EAAE1F,KAAKsG,KAAIoF,GAAGF,IAAI,IAAIlF,EAAE,MAAMzgE,EAAE6/D,EAAE,GAAGtsC,cAAcmtC,GAAG,IAAIp6C,EAAEllB,QAAQpB,GAAG5N,EAAEgwE,EAAEhwE,EAAEgwE,GAAG,MAAMpiE,EAAE,MAAM2gE,EAAED,EAAEb,EAAE,GAAG3hD,EAAE2qC,EAAExoD,EAAEjO,GAAG,OAAOA,EAAEgwE,GAAE,EAAG,CAACT,EAAEe,EAAE7C,EAAE,IAAIsB,EAAER,EAAE4B,EAAE7B,EAAE8B,EAAE9B,EAAE1gE,EAAE6/D,EAAE,GAAG,EAAEmB,EAAE,CAACnB,EAAEztE,EAAE89C,IAAIsyB,EAAE3C,EAAE2C,EAAE3Z,EAAE,CAACxsD,IAAI6zC,EAAE+wB,GAAGpB,EAAE8B,GAAG9B,EAAE0C,EAAE1C,EAAEsB,EAAE/uE,EAAEytE,EAAEsB,EAAEjxB,KAAKmzB,EAAG8F,gBAAgB,CAACtJ,EAAEuF,GAAG3D,GAAGzhE,EAAEokE,GAAGC,KAAK1D,EAAEd,IAAG,CAAE8B,EAAEe,EAAE7C,EAAE,IAAI,IAAI2C,EAAE3C,EAAE,KAAKmB,EAAE,CAACnB,EAAEztE,EAAE89C,IAAIsyB,EAAE3C,EAAE2C,EAAE3Z,EAAE,CAAC,EAAEgX,EAAE8B,EAAE,CAACtlE,IAAI6zC,EAAE+wB,OAAO,MAAMqC,EAAG,SAASzD,GAAG,IAAIhX,EAAE50D,OAAOsE,KAAKsnE,GAAG,SAASztE,EAAE89C,EAAEgwB,GAAG,IAAI55C,EAAE,GAAGjmB,EAAE,GAAG,KAAK6vC,GAAG,CAAC,IAAIhyB,EAAE,EAAE,KAAKA,EAAE2qC,EAAEtzD,QAAQ,CAAC,MAAMkrE,EAAE5X,EAAE3qC,GAAGle,EAAE6/D,EAAEY,GAAGC,EAAE1gE,EAAE6/D,EAAE3vB,EAAEgwB,EAAE7/D,GAAG,GAAGqgE,EAAE,CAAC,MAAMb,EAAEa,EAAE,GAAGxwB,EAAEA,EAAEk5B,UAAUvJ,EAAEtqE,QAAQ,MAAMszD,EAAE7oD,EAAE2gE,EAAED,EAAEtuE,EAAE8tE,GAAG,MAAMrX,EAAE92D,OAAO82D,EAAE92D,KAAK0uE,GAAGn6C,EAAExyB,KAAK+0D,GAAGxoD,EAAEw/D,EAAE,KAAK,CAAC3hD,GAAG,CAAC,CAAC,OAAOoI,CAAC,CAAC,OAAOuiC,EAAE3nD,MAAK,SAAS2nD,EAAEz2D,GAAG,IAAI89C,EAAE2vB,EAAEhX,GAAG7oD,EAAEkgE,EAAEL,EAAEztE,GAAG4N,EAAE,OAAOkwC,IAAIgwB,EAAEhwB,EAAEgwB,EAAErX,EAAEz2D,GAAG,EAAE,CAAC,IAAG,SAASytE,EAAEhX,GAAG,OAAOz2D,EAAE,SAASytE,GAAG,OAAOA,EAAElnE,QAAQ81B,EAAE,MAAM91B,QAAQuH,EAAE,IAAIvH,QAAQ0pE,EAAE,OAAO,CAApE,CAAsExC,GAAGhX,EAAE,CAAC,CAA7a,CAA+awa,GAAIE,IAAgB1D,GAAsDwD,EAAlEznC,GAAsB,SAASitB,EAAEz2D,EAAE89C,GAAG,OAAO2vB,GAAEhX,EAAE92D,MAAMivE,EAAEnY,EAAEz2D,EAAE89C,EAAE,EAAO,SAAS2vB,EAAEhX,EAAEz2D,EAAE,CAAC,GAAG,GAAG0N,MAAM2oB,QAAQogC,GAAG,CAAC,MAAM3Y,EAAE99C,EAAE6uE,EAAEf,EAAE,GAAG,IAAI55C,GAAE,EAAG,IAAI,IAAI4pB,EAAE,EAAEA,EAAE2Y,EAAEtzD,OAAO26C,IAAI,CAAC99C,EAAE6uE,EAAE/wB,EAAE,MAAM7vC,EAAEw/D,EAAEhX,EAAE3Y,GAAG99C,GAAG8rB,EAAE,iBAAiB7d,EAAE6d,GAAGoI,EAAE45C,EAAEA,EAAE3qE,OAAO,IAAI8K,EAAE,OAAOA,GAAG6/D,EAAEpsE,KAAKuM,GAAGimB,EAAEpI,CAAC,CAAC,OAAO9rB,EAAE6uE,EAAE/wB,EAAEgwB,CAAC,CAAC,OAAOtkC,GAAGitB,EAAEgX,EAAEztE,EAAE,GAA3R,IAASytE,GAAyRjkC,GAAG,MAAM4nC,GAAGf,EAAErwE,GAAG,OAAOuwE,EAAEptE,OAAOitE,EAAE,MAAM,KAAKgB,GAAGhB,EAAE,SAAS,CAACnmE,IAAI,UAAUsmE,EAAExuE,KAAI,SAAS0rE,GAAG,OAAO2C,EAAE,MAAM,CAACpuE,GAAGqsE,EAAE6F,QAAQzG,EAAEgC,GAAGxlE,IAAIwjE,EAAEgC,GAAGhC,EAAEgC,EAAE0B,GAAGD,EAAGzD,EAAE+B,EAAE,CAAC1jD,GAAE,KAAM,MAAKslD,EAAE,EAAW3D,GAA2FuE,KAAKA,GAAG,CAAC,IAA/FvE,GAAEmH,IAAI,GAAG,MAAMnH,GAAEA,GAAEwE,KAAK,GAAG,OAAOxE,GAAEA,GAAE+I,IAAI,GAAG,MAAM/I,GAAEA,GAAEsH,IAAI,GAAG,MAAMtH,GAAEA,GAAE6I,IAAI,GAAG,MAAoB,SAAe7f,IAAI,IAAIx3D,SAAS6+C,EAAE7X,QAAQ6nC,GAAGrX,EAAEviC,EAAE,SAASu5C,EAAEhX,GAAG,GAAG,MAAMgX,EAAE,MAAM,CAAC,EAAE,IAAIztE,EAAE89C,EAAEgwB,EAAE,CAAC,EAAE55C,EAAEryB,OAAOsE,KAAKsnE,GAAG,IAAI3vB,EAAE,EAAEA,EAAE5pB,EAAE/wB,OAAO26C,IAAI2Y,EAAEznD,QAAQhP,EAAEk0B,EAAE4pB,KAAK,IAAIgwB,EAAE9tE,GAAGytE,EAAEztE,IAAI,OAAO8tE,CAAC,CAAjI,CAAmIrX,EAAEz2D,GAAG,OAAO,eAAeg0E,GAAGl2B,EAAEgwB,GAAG55C,EAAG,E,4BCwBjwZ,MAAM+iD,GAAiBl4E,IAQvB,IARwB,GAC7Bm4E,GAODn4E,EACC,MAAMo4E,EAAaD,EAAGhuB,QAAQrpD,cAAgBq3E,EAAGr3E,aACjD,IAAKs3E,GAAY3gB,YAaf,MAZAvvD,QAAQ6b,IAAI,gCAAiCo0D,GAYvC,IAAIhoE,MAAM,gCAElB,OACE7P,EAAAA,cAAC+3E,GAAQ,CAACnxC,QAAS,CAAEguC,UAAWoD,GAAAA,KAC7BC,EAAAA,GAAAA,IAAmBH,EAAW3gB,aACtB,EAEbygB,GAAAp3E,aAAA,suC,4FCpCK,SAAS03E,IACd,MAAMC,GAXJC,EAAAA,EAAAA,KAAuBC,WAAW,kCAC/Bz+D,QACH0+D,SAASl4E,MAAMm4E,GAA6B,YAAjBA,EAAQ/7D,QAAqB27D,KAU1D,OAAOzgE,EAAAA,EAAAA,UAAQ,KACb,MAAM8gE,EAAkC,CAAC,EAQzC,OAPAL,GAAMngE,SAASygE,IAEb,MAAMC,EAAgBD,EAAI91E,GAAGwe,MAAM,sBAAsB,GACrDu3D,IACFF,EAAQE,GAAiBD,EAAIhuD,KAC/B,IAEK+tD,CAAO,GACb,CAACL,GACN,CAOO,SAASQ,EAAUj5E,GAAsC,IAArC,SAAEE,GAAgCF,EAC3D,MAAMg6D,EAAOwe,IAAsBt4E,GACnC,OAAI85D,EACK15D,EAAAA,cAACkU,EAAAA,EAAI,CAACiL,GAAIu6C,GAAO95D,GAEnBI,EAAAA,cAAA,YAAOJ,EAChB,CAOO,SAASq4E,EAAmB3sE,GACjC,MAAMstE,EAAmBV,IACnBW,EAAUC,EAAextE,GAC/B,OACEqzC,EAAAA,EAAAA,IAAMk6B,EAAS,IAAKnf,IAClB,MAAMjvC,EAAOmuD,EAAiBlf,EAAKqf,KACnC,OAAItuD,EACM,IAAGivC,EAAKx8C,SAASuN,KAEnB,KAAIivC,EAAKx8C,QAAQ,IACxBi6C,aACFtxD,KACL,CAEA,MAAMizE,EAAkB9rD,GACtB,CAAC,SAAUA,EAAIlC,MAAM,MAAMpoB,KAAKs2E,GAAU,KAAIA,MAAS,MAAMppE,KAAK,MAAM+oE,EAAAn4E,aAAA,yR,yiLC/D1E,MAAMy4E,EAAYhpE,EAAAA,GAAO0b,IAAGvT,WAAA,CAAAC,YAAA,wBAAAC,YAAA,eAAVrI,CAAU,mGAQtBipE,EAAqBjpE,EAAAA,GAAOI,IAAG+H,WAAA,CAAAC,YAAA,iCAAAC,YAAA,eAAVrI,CAAU,oMAOjCgpE,EAIQA,GAIN7oE,EAAkBH,EAAAA,GAAOI,IAAG+H,WAAA,CAAAC,YAAA,8BAAAC,YAAA,eAAVrI,CAAU,uCAElBvQ,IAAA,IAAC,SAAE+U,GAAU/U,EAAA,OAAM+U,OAAWvO,EAAY,OAAO,IAG1D,SAASizE,EAAU94E,GAYtB,IAZuB,SACzBT,EAAQ,SACR6U,EAAQ,SACR2kE,EAAQ,aACRvZ,EAAY,gBACZwZ,GAODh5E,EACC,MAAM4T,GAAM9Q,EAAAA,EAAAA,QAAuB,MASnC,OARAsC,EAAAA,EAAAA,YAAU,KACR,GAAIwO,EAAItQ,QAAS,CACf,MAAMqR,EAAaf,EAAItQ,SAASgS,aAAe1B,EAAItQ,SAASy5B,aACxDpoB,IAAe6qD,GACjBwZ,EAAgBrkE,EAEpB,KAGAhV,EAAAA,cAACoQ,EAAe,CAAC6D,IAAKA,EAAKQ,SAAUA,GAClC7U,GACC6U,GAAYorD,GACZ7/D,EAAAA,cAACk5E,EAAkB,CAAChjE,QAASkjE,GAC3Bp5E,EAAAA,cAACi5E,EAAS,CAACK,QAAQ,aACjBt5E,EAAAA,cAAA,QACEu5E,KAAK,OACLC,OAAO,OACPC,cAAc,QACdC,eAAe,QACfC,YAAa,EACbvK,EAAE,qBACFwK,UAAU,uBAOxB,CAACT,EAAA34E,aAAA,6nB,iFCxCD,SAASklC,EAAMhmC,GAMX,IANY,SACdE,EAAQ,MACRi6E,GAIDn6E,EACC,OACEM,EAAAA,cAAA,OAAK4W,WAAWkjE,EAAAA,EAAAA,GAAKvvB,EAAAA,EAAOwvB,kBAAmB5jE,MAAO,CAAEs0C,QAAS,SAC/DzqD,EAAAA,cAAA,QAAMmW,MAAO,CAAE6jE,KAAM,IAAMp6E,GAC1Bi6E,EAGP,CAEA,SAASI,IAEP,OAAOj6E,EAAAA,cAAA,WAAK,aACd,CAEA,SAASk6E,EAAa75E,GAAgD,IAA/C,MAAEwH,EAAK,SAAEsyE,GAAsB95E,EACpD,OACEL,EAAAA,cAAA,OAAK4W,UAAW2zC,EAAAA,EAAO6vB,eACrBp6E,EAAAA,cAAA,SAAI6H,EAAM2K,SACVxS,EAAAA,cAACq6E,EAAAA,GAA2B,CAACnkE,QAASikE,IAG5C,CAEA,SAASG,IAGP,OACEt6E,EAAAA,cAACu6E,EAAAA,EAAW,CAAC73C,SAAU1iC,EAAAA,cAACi6E,EAAiB,QACtC,IACCj6E,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACw6E,EAAAA,EAAa,CAAC93C,SAAW+3C,GAAWz6E,EAAAA,cAACk6E,EAAkBO,IACtDz6E,EAAAA,cAAC06E,EAAAA,GAAW,OAEd16E,EAAAA,cAAC26E,EAAAA,GAAS,QAKpB,CAEA,SAASC,IACP,OACE56E,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAC0lC,EAAM,KACL1lC,EAAAA,cAAC66E,EAAAA,EAAS,CACRl4E,GAAG,0BACHw0D,YAAY,2CACb,WAKHn3D,EAAAA,cAAA,OAAK4W,UAAW2zC,EAAAA,EAAOuwB,mBACrB96E,EAAAA,cAACs6E,EAAO,OAIhB,CAEA,SAASS,EAAgBt2E,GAUrB,IAVsB,SACxBgQ,EAAQ,aACRorD,EAAY,SACZuZ,EAAQ,gBACRC,GAMD50E,EACC,MAAMu2E,GAAYC,EAAAA,EAAAA,KAClB,OACEj7E,EAAAA,cAACm5E,EAAU,CACT1kE,SAAUA,EACVorD,aAAcA,EACduZ,SAAUA,EACVC,gBAAiBA,GAEjBr5E,EAAAA,cAACk7E,EAAAA,GAEC,CACAtwE,IAAK8D,OAAOssE,GACZpkE,UAAW2zC,EAAAA,EAAO4wB,mBAI1B,CAEA,SAASC,IACP,MAAO3mE,EAAUS,IAAerS,EAAAA,EAAAA,WAAS,IAClCmS,EAAYC,IAAiBpS,EAAAA,EAAAA,WAAS,GAC7C,OACE7C,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAC0lC,EAAM,CACLm0C,MACE75E,EAAAA,cAACq7E,EAAAA,EAAa,CAACroE,MAAO,IAAIsoE,EAAAA,EAAMC,KAC5B9mE,GAAYO,IACZhV,EAAAA,cAAC8J,EAAAA,EAAc,CACbC,QACE/J,EAAAA,cAACgK,EAAAA,EAAa,CACZC,WAAYwK,EAAW,gBAAkB,iBAI7CzU,EAAAA,cAACyJ,EAAAA,GAAU,CACTG,QAASA,IAAMsL,GAAaT,IAAcA,KAE1CzU,EAAAA,cAACkS,EAAAA,GAAY,CACXrI,KACE4K,EAAW,sBAAwB,0BASjDzU,EAAAA,cAAC66E,EAAAA,EAAS,CACRl4E,GAAG,8BACHw0D,YAAY,gDACb,gBAIHn3D,EAAAA,cAAC+6E,EAAgB,CACftmE,SAAUA,EACV2kE,SAAUA,IAAMlkE,GAAY,GAC5B2qD,aAAc7qD,EACdqkE,gBAAiBpkE,IAIzB,CAEe,SAASumE,EAAU72E,GAKV,IALW,SACjC/E,EAAQ,cACR67E,EAAa,IACbxnE,KACGlS,GACG4C,EACN,MAAM+2E,GAAaC,EAAAA,EAAAA,KAEbC,EAAW75E,EAAM85E,YAAYz6E,SAAS,cAAe,EAE3D,OACEpB,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OAAKiU,IAAKA,EAAK2C,UAAW2zC,EAAAA,EAAOuxB,qBAC/B97E,EAAAA,cAAC+7E,EAAAA,IAAYryE,EAAAA,EAAAA,GAAA,CACX7I,KAAMjB,EAASsH,QAAQ,MAAO,IAC9B00E,SAAUA,EACVH,cAAeA,GAAa,CAAM56E,GAAU,GAAEA,MAC9CmS,MAAO0oE,GACH35E,GAEJ/B,EAAAA,cAAC46E,EAAgB,MACjB56E,EAAAA,cAACo7E,EAAgB,QAK3B,CAACI,EAAAh7E,aAAA,qD,+GCtMM,MAAMw7E,EAAuB/rE,EAAAA,GAAOI,GAAI;;;;ECClC4rE,GAAiChsE,EAAAA,EAAAA,IAAO+rE,GAAqB5jE,WAAA,CAAAC,YAAA,iCAAAC,YAAA,eAA5BrI,CAA4B,kDAKhEvQ,IAAA,IAAC,mBAAEqxB,GAAoBrxB,EAAA,OAAMqxB,EAAqB,OAAI7qB,CAAS,I,kICUlE,SAASg2E,GACdn6E,EACAo6E,EACAloE,GAQA,MAAM,uBAAE0L,GAA2B5d,GAE7B,YACJ8b,EAAW,iBACXF,EAAgB,iBAChBiC,EACA9K,eAAgB6pB,EAAyB,iBACzCzd,EAAgB,wBAChBD,IACEvB,EAAAA,GAAAA,GAAyB,CAC3B1C,WAAYm/D,EAAUn/D,WACtBW,iBAAkBw+D,EAAUx+D,iBAC5BiC,iBAAkB,IAAIwT,GAAAA,EACpB+oD,EAAUn/D,WACVm/D,EAAUxxE,aACVsJ,GAEF0L,yBACA1L,SAEI,UAAEid,KAAckrD,IAAiBhrD,EAAAA,GAAAA,GACrC,IACKrvB,EACH6wB,mBAAmB,EACnBhT,oBAEF,IAAKu8D,EAAWx+D,oBAChB1J,GAGF,MAAO,IACFmoE,EACHlrD,WAAWlY,EAAAA,GAAAA,GAAWkY,EAAWyN,GACjCthB,QAASQ,EAAYR,QACrBM,mBACAsD,0BACAC,mBAEJ,CClCO,MAAMm7D,GAAkBr8E,EAAAA,YAAiB,SAAwBN,EAStE8Y,GACC,IAPD,oBACEsY,GAAsB,EAAK,mBAC3BC,GAAqB,EAAK,oBAC1BC,KACGzV,GACqB7b,EAG1B,MAAMqC,EAAkD,IACnDwZ,EACH0V,wBAAyBH,GAErB7c,GAAM0E,EAAAA,EAAAA,GAAaH,GACnB6C,GAAQwL,EAAAA,EAAAA,GAAa9kB,IAErB,UAAEmvB,EAAS,YAAEC,EAAW,iBAAEjQ,EAAgB,wBAAED,GAChDi7D,GAAmB,IAAKn6E,EAAOghB,eAAe,GAAQ1H,EAAOpH,IAG7Dod,kBAAoBzxB,SAAU0xB,KAAeD,KAC3CE,EAAAA,GAAAA,GAAmB,CACrBlW,QACA2V,sBACAQ,WAAalnB,GACXtK,EAAAA,cAAC8c,EAAAA,EAAiC,CAACC,QAASzS,EAAKM,KAC/C5K,EAAAA,cAACyxB,EAAAA,EAAQ,CAAC7mB,IAAKN,EAAKM,IAAKN,KAAMA,OAKrC,OACEtK,EAAAA,cAAC0xB,EAAAA,EAAY9rB,SAAQ,CAACC,MAAOsrB,GAC3BnxB,EAAAA,cAACi8E,EAA8B,CAAClrD,mBAAoBA,GAClD/wB,EAAAA,cAAC4c,EAAAA,EAA6BhX,SAAQ,CAACC,MAAOob,GAC5CjhB,EAAAA,cAAC+0C,EAAAA,EAAqB7zB,GACtBlhB,EAAAA,cAACinB,EAAAA,GAAUvd,EAAAA,EAAAA,GAAA,CACTknB,GAAIe,EAAAA,GACJ1d,IAAKA,EACL8c,mBAAoBA,IAChBhY,EAAAA,EAAAA,GAAehX,EAAO,CAAEyuB,WAAW,IACnCa,EACAH,GAEHI,KAMb,I,4YC9EO,MAAMgrD,GAA0BrsE,EAAAA,GAAOa,KAAIsH,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAXrI,CAAW,yJ,wCCa3C,MAAMssE,GAAcv8E,EAAAA,YAAiB,SAAoBN,EAS9D8Y,GACC,IATD,SACE5Y,EAAQ,uBACR+f,GAAyB,EAAK,UAC9B/I,EAAS,eACT9B,EAAiB,CAAC,EAAC,MACnBqM,KACG5X,GACG7J,EAGR,MAAMuU,GAAM0E,EAAAA,EAAAA,GAAaH,GACnBgkE,GAAmB18D,EAAAA,GAAAA,GAAoBvW,IACrCuL,eAAgB6pB,IAA8B3e,EAAAA,GAAAA,GACpD,CAAEL,uBAAwBA,GAC1B68D,EACAvoE,GAGF,OACEjU,EAAAA,cAACg8E,GACCtyE,EAAAA,EAAAA,GAAA,CACAwS,UAAW,EACXjI,IAAKA,IACD+E,EAAAA,GAAAA,GAAWlE,EAAgB6pB,EAA2B,CAAE/nB,eAE5D5W,EAAAA,cAAC+0C,EAAAA,EAAgB,CAAC/2B,OAAQw+D,EAAiBx+D,OAAQmD,MAAOA,GACvDq7D,EAAiBz+D,YAEnBne,EAGP,IAAG28E,GAAA/7E,aAAA,gxB,wOCfI,MAAMi8E,GAAOz8E,EAAAA,YAClB,CAAAN,EAQE8Y,KACI,IARJ,mBACEuY,GAAqB,EAAK,QAC1B8sC,EAAO,MACP1nD,EAAK,UACLS,KACG7U,GACUrC,EAGf,MAAM2b,GAAQuc,EAAAA,GAAAA,GAAa71B,EAAO87D,GAC5B5pD,GAAM0E,EAAAA,EAAAA,GAAaH,IAEnB,UAAEulD,EAAS,YAAEC,IAAgBS,EAAAA,GAAAA,GACjC,IACK18D,EACHghB,eAAe,GAEjB1H,EACApH,IAEI,iBAAEod,IAAqB6sC,EAAAA,GAAAA,GAAmB,CAAE7iD,UAElD,OACErb,EAAAA,cAACm+D,GAAAA,EAAYv4D,SAAQ,CAACC,MAAOm4D,GAC3Bh+D,EAAAA,cAACo+D,GAAAA,GAAU10D,EAAAA,EAAAA,GAAA,CACTknB,GAAIe,EAAAA,GACJ1d,IAAKA,EACL8c,mBAAoBA,GAChBM,EACA0sC,GACAhlD,EAAAA,EAAAA,GAAehX,EAAO,CAAEyuB,WAAW,IAAO,CAC9Cra,MAAOA,EACPS,UAAWA,KAEV,CAAC8lE,EAAkBpyE,IAClBtK,EAAAA,cAAC29D,GAAAA,EAAQ,CAAC/yD,IAAKN,EAAKM,IAAKN,KAAMA,MAGd,I,6YCrDtB,MAAMqyE,GAAyBj9E,IAIF,IAJG,OACrC+xC,EAAM,eACNmrC,EAAc,MACdr6D,GAC4B7iB,EAC5B,MAAMuU,GAAM9Q,EAAAA,EAAAA,QAAwB,OAC9B,YAAEyV,IAAgB24B,EAAAA,GAAAA,IACtB,CACE3nC,QAASA,IAAMgzE,GAAgBnrC,GAC/BJ,aAAcI,EAAS,SAAW,QAClCA,UAEFx9B,GAEF,OACEjU,EAAAA,cAACiW,GAAAA,GAAqBvM,EAAAA,EAAAA,GAAA,GAChBkP,EAAW,CACf/O,KACE4nC,EACK,yBAAwBlvB,EAAQ,QAAU,SAC1C,wBAAuBA,EAAQ,QAAU,WAEhD,EAEJo6D,GAAAn8E,aAAA,myB,6VC1BF,MAAMq8E,IAA0B5sE,EAAAA,EAAAA,IAAOG,GAAAA,EAAiB;gBACxC1Q,IAAA,IAAC,MAAEsT,GAAOtT,EAAA,OAAKsT,EAAMC,MAAM,iCAAiC;EAGtE6pE,GAAsB7sE,EAAAA,GAAOa,IAAK;;;;;EAO3BisE,IAAW94D,EAAAA,EAAAA,aACtB,CAAA5jB,EAUEmY,KACuB,IAVvB,eACE0L,EAAc,MACd/N,EAAK,UACLS,EAAS,gBACTyN,EAAe,YACfE,EAAW,qBACXC,KACGziB,GACc1B,EAGnB,MAAM4T,GAAM0E,EAAAA,EAAAA,GAAaH,GACnB6C,GAAQ2hE,EAAAA,GAAAA,GAAej7E,IACvB,UACJy1B,EAAS,WACThS,EAAU,aACVwY,EAAY,WACZi/C,EAAU,iBACV33D,IACE43D,EAAAA,GAAAA,GACF,IAAKn7E,EAAOgjB,UAAWV,GAAuC,UAApBA,GAC1ChJ,EACApH,GAKI3C,EAAW2C,EAAItQ,QACjBsQ,EAAItQ,SAASiiB,YAAc,OAC3B1f,EAEJ,OACElG,EAAAA,cAAC6lB,GAAAA,EAAS,CACR9K,MAAOhZ,EAAMgZ,MACbmJ,eAAgBA,EAChBsB,WAAYA,EACZnf,WAAYtE,EAAMsE,WAClBuQ,UAAWA,EACXT,MAAOA,GAGPnW,EAAAA,cAAC8lB,GAAAA,EAAqB,CACpBvB,YAAaA,EACbC,qBAAsBA,EACtBc,iBAAkBA,GAElBtlB,EAAAA,cAACuY,GAAAA,GAAU7O,EAAAA,EAAAA,GAAA,GAAKs0B,EAAY,CAAEvxB,UAAW1K,EAAM0K,UAAWwH,IAAKA,IAC7DjU,EAAAA,cAAC68E,GAAuB,CACtBjsD,GAAG,SACHvM,gBAAiBA,EACjBzN,UAAWyE,EAAMiL,OAAS,WAAa,IAEvCtmB,EAAAA,cAAC88E,GAAwBG,EACtB5hE,EAAM8hE,cAAc17D,UAEvBzhB,EAAAA,cAACqmB,GAAAA,EAAuB,CACtBlN,SAAUpX,EAAMsE,WAChB8L,KAAM,GACNtI,KAAK,6BAKZwR,EAAMiL,QACLtmB,EAAAA,cAACumB,GAAAA,EAAO,CACNlL,MAAOA,EACP4K,WAAYhS,EACZ5H,UAAU,eACVma,iBAAkB,EAClBC,OAAQ,EACRC,aAAc,GAEd1mB,EAAAA,cAAC2mB,GAAAA,GAAgBjd,EAAAA,EAAAA,GAAA,GACX8tB,EAAS,CACbnc,MAAOA,EACPlF,MAAO,CAAE7E,gBAIL,IAGhByrE,GAAAv8E,aAAA,igB,yECxGF,MAAM48E,GAAe5mE,GAAezU,GAGhC/B,EAAAA,cAACA,EAAAA,SAAc,CAAC0iC,SAAS,WACvB1iC,EAAAA,cAACwW,EAAczU,IAgBrB,GAXuB,CACrB/B,MAAK,KACFA,KACAq9E,EACHC,WAAYF,GAAYp9E,EAAAA,MAAW,IAAM,+EACzCu9E,iBAAgB,GAChBhC,eAAc,EACdiC,sBAAqB,GACrBC,aAAcL,GAAYp9E,EAAAA,MAAW,IAAM,oC,gBC7B7C,SAA6B,kBAA7B,GAA2D,iBCyD3D,GA5B6BwW,IAC3B,SAA6BzU,GAC3B,MAAMiR,GAAQiX,EAAAA,EAAAA,MACR3e,EAAUtL,EAAAA,cAACwW,EAAczU,GACzBoU,EAAQ,CACZ,yBAA0B,GAQ5B,OALIpU,EAAM27E,SACRvnE,EAAMlD,MAAQD,EAAMC,MAAM,gBAC1BkD,EAAM,wBAA0BnD,EAAMC,MAAM,gBAC5CkD,EAAM,yBAA2B,QAGjCnW,EAAAA,cAAA,OACEmW,MAAOA,EACPS,WAAWkjE,EAAAA,EAAAA,GAAKvvB,GAAmB,CACjC,CAACA,IAAmBxoD,EAAM47E,aAG3BryE,EAGP,EAKF,EA3CwBkL,GA2C0BonE,GAAAA,EA1ChD,SAAwB77E,GACtB,OAAIA,EAAM87E,KAID79E,EAAAA,cAACw7E,GAAU9xE,EAAAA,EAAAA,GAAA,CAACo0E,MAAOC,IAAoBh8E,IAGzC/B,EAAAA,cAACwW,GAAczU,EACxB,IAVsByU,M,uECLT,SAASwnE,EAAYj8E,GAGlC,MAA8B,iBAAnBA,EAAMnC,SACRI,EAAAA,cAAC24E,EAAAA,GAAU,KAAE52E,EAAMnC,UAG1BI,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACi+E,EAAAA,EAASl8E,GAGhB,CAACi8E,EAAAx9E,aAAA,2a,6DClBD,YACKw3E,EAAAA,EACHkG,WAAYvF,EAAAA,G,qNCEP,MAAMwF,EAAkBz+E,IAAyC,IAAxC,SAAEC,GAAgCD,EAChE,OAAOM,EAAAA,cAAA,aAAOO,EAAAA,EAAAA,GAAiByI,EAAAA,EAAcrJ,GAAU,IAAW,EAClEw+E,EAAA39E,aAAA,gLCCK,MAAM49E,EAAc,CAAC,EACfC,EAAe,cACfC,EAAW,CACtB,cAAiB,yBACjB,GAAM,yBACN,MAAS,cACT,YAAe,YACf,OAAU,wCACV,cAAiB,aACjB,KAAQ,0BACR,UAAa,kDACb,OAAS,EACT,QAAW,oGACX,KAAQ,GACR,QAAW,UACX,YAAe,CAAC,EAChB,QAAW,kBACX,SAAY,CACV,MAAS,cACT,UAAa,mDAEf,KAAQ,CACN,MAAS,cACT,UAAa,oDAGJC,EAAS,CAEtB,EAKaC,EAAM,CAAC,CAClB34E,MAAO,YACPlD,GAAI,YACJ28D,MAAO,GACN,CACDz5D,MAAO,eACPlD,GAAI,eACJ28D,MAAO,GACN,CACDz5D,MAAO,sBACPlD,GAAI,sBACJ28D,MAAO,IAGHmf,EAAc,CAClBD,OAEIE,EAAY,UACH,SAASC,EAAUj/E,GAG9B,IAH+B,WACjCk/E,KACG78E,GACJrC,EACC,OAAOm/E,EAAAA,EAAAA,IAACH,GAASh1E,EAAAA,EAAAA,GAAA,GAAK+0E,EAAiB18E,EAAK,CAAE68E,WAAYA,EAAYE,QAAQ,eAG5ED,EAAAA,EAAAA,IAAA,MACE,GAAM,eACH,gBACLA,EAAAA,EAAAA,IAACjH,EAAAA,EAAc,CAACC,GAAIpkC,EAAAA,EAAaqrC,QAAQ,oBACzCD,EAAAA,EAAAA,IAAA,SAAK,cACLA,EAAAA,EAAAA,IAAA,WACEA,EAAAA,EAAAA,IAAA,MAAIE,WAAW,OAAKF,EAAAA,EAAAA,IAAA,KAAGE,WAAW,KAC9B,KAAQ,6CACL,WACPF,EAAAA,EAAAA,IAAA,MAAIE,WAAW,OAAKF,EAAAA,EAAAA,IAAA,KAAGE,WAAW,KAC9B,KAAQ,kDACL,iBAETF,EAAAA,EAAAA,IAAA,MACE,GAAM,aACH,cACLA,EAAAA,EAAAA,IAAA,MACE,UAAa,uBAEbA,EAAAA,EAAAA,IAAA,MAAIE,WAAW,KACb,UAAa,mBACZF,EAAAA,EAAAA,IAAA,SAAOE,WAAW,KACjB,KAAQ,WACR,SAAW,EACX,UAAY,IACD,IAAK,6BAAiBF,EAAAA,EAAAA,IAAA,KAAGE,WAAW,KAC/C,KAAQ,4DACL,+BAETF,EAAAA,EAAAA,IAAA,MACE,GAAM,gBACH,iBACLA,EAAAA,EAAAA,IAAA,YAAKA,EAAAA,EAAAA,IAAA,QAAME,WAAW,MAClB,UAAa,eACb,WAAc,cACd,MAAQ,EACR,QAAU,GACP,mhBAoBPF,EAAAA,EAAAA,IAAA,MACE,GAAM,uBACH,wBACLA,EAAAA,EAAAA,IAAA,SAAK,QAAMA,EAAAA,EAAAA,IAAA,cAAYE,WAAW,KAAM,iBAA8B,kGACtEF,EAAAA,EAAAA,IAAA,YAAKA,EAAAA,EAAAA,IAAA,QAAME,WAAW,MAClB,UAAa,eACb,WAAc,cACd,MAAQ,EACR,QAAU,GACP,iIAOPF,EAAAA,EAAAA,IAAA,UAAGA,EAAAA,EAAAA,IAAA,cAAYE,WAAW,KAAM,eAA4B,wEAAsEF,EAAAA,EAAAA,IAAA,cAAYE,WAAW,KAAM,sCAAmD,8CAC5KF,EAAAA,EAAAA,IAACV,EAAe,CAACx+E,SAAUmI,EAAAA,EAAeS,oBAAqBu2E,QAAQ,oBAAsB,KAEvI,CAEAH,EAAWK,gBAAiB,C","sources":["webpack://website/../jui/src/ActionSystem/ActionGroup.tsx","webpack://website/../jui/src/ActionSystem/ActionShortcut.tsx","webpack://website/../jui/src/ActionSystem/useShortcut.ts","webpack://website/../jui/src/ActionSystem/ActionsProvider.tsx","webpack://website/../jui/src/ActionSystem/CommonActionIds.ts","webpack://website/../jui/src/ActionSystem/KeymapProvider.tsx","webpack://website/../jui/src/ActionSystem/Shortcut.ts","webpack://website/../jui/src/ActionSystem/components/ActionButton.tsx","webpack://website/../jui/src/ActionSystem/components/ActionGroupMenu.tsx","webpack://website/../jui/src/ActionSystem/components/ActionsMenu.tsx","webpack://website/../jui/src/ActionSystem/components/useCreateDefaultActionGroup.tsx","webpack://website/../jui/src/ActionSystem/defaultKeymap.tsx","webpack://website/../jui/src/ActionSystem/shortcutToString.ts","webpack://website/../jui/src/ActionSystem/useActionGroup.tsx","webpack://website/../jui/src/AlertDialog/AlertDialog.tsx","webpack://website/../jui/src/AlertDialog/useAlertDialog.tsx","webpack://website/../jui/src/Balloon/Balloon.styled.tsx","webpack://website/../jui/src/Balloon/Balloon.tsx","webpack://website/../jui/src/Balloon/BalloonManager.tsx","webpack://website/../jui/src/Balloon/StyledBalloonsStack.tsx","webpack://website/../jui/src/Button/BareButton.tsx","webpack://website/../jui/src/Button/StyledButton.tsx","webpack://website/../jui/src/Button/Button.tsx","webpack://website/../jui/src/ButtonGroup/ButtonGroup.tsx","webpack://website/../jui/src/Checkbox/Checkbox.tsx","webpack://website/../jui/src/Checkbox/CheckboxIcon.tsx","webpack://website/../jui/src/CollectionSpeedSearch/CollectionSpeedSearchContext.tsx","webpack://website/../jui/src/CollectionSpeedSearch/HighlightedTextValue.tsx","webpack://website/../jui/src/CollectionSpeedSearch/useCollectionSpeedSearchResult.ts","webpack://website/../jui/src/CollectionSpeedSearch/createSpeedSearchSelectionManager.ts","webpack://website/../jui/src/CollectionSpeedSearch/useCollectionSpeedSearch.ts","webpack://website/../jui/src/CollectionSpeedSearch/createSpeedSearchKeyboardDelegate.ts","webpack://website/../jui/src/Collections/Divider.ts","webpack://website/../jui/src/Collections/Item.ts","webpack://website/../jui/src/Collections/ItemLayout.tsx","webpack://website/../jui/src/Collections/ItemStateContext.tsx","webpack://website/../jui/src/Collections/useCollectionAutoScroll.ts","webpack://website/../jui/src/Collections/useCollectionFocusProxy.ts","webpack://website/../jui/src/Dropdown/ComboBox.tsx","webpack://website/../jui/src/Dropdown/ListBox.tsx","webpack://website/../jui/src/Dropdown/StatelessListBox.tsx","webpack://website/../jui/src/Dropdown/StyledContainer.tsx","webpack://website/../jui/src/Dropdown/StyledDropdownArrowIcon.tsx","webpack://website/../jui/src/Field/ContextHelp.tsx","webpack://website/../jui/src/Field/Label.tsx","webpack://website/../jui/src/Icon/AutoHoverPlatformIcon.tsx","webpack://website/../jui/src/Icon/LafIcon.tsx","webpack://website/../jui/src/Icon/PlatformIcon.tsx","webpack://website/../jui/src/Icon/StyledIconWrapper.tsx","webpack://website/../jui/src/Icon/useSvgIcon.tsx","webpack://website/../jui/src/IconButton/IconButton.tsx","webpack://website/../jui/src/IconButtonWithMenu/IconButtonWithMenu.tsx","webpack://website/../jui/src/Img.tsx","webpack://website/../jui/src/InputField/Input.tsx","webpack://website/../jui/src/InputField/InputField.tsx","webpack://website/../jui/src/Link/StyledLink.tsx","webpack://website/../jui/src/Link/Link.tsx","webpack://website/../jui/src/List/List.tsx","webpack://website/../jui/src/List/ListContext.tsx","webpack://website/../jui/src/List/ListDivider.tsx","webpack://website/../jui/src/List/ListItem.tsx","webpack://website/../jui/src/List/StyledList.tsx","webpack://website/../jui/src/List/StyledListItem.tsx","webpack://website/../jui/src/List/useList.ts","webpack://website/../jui/src/List/useSelectableList.ts","webpack://website/../jui/src/List/useListState.ts","webpack://website/../jui/src/Collections/useCollectionRef.ts","webpack://website/../jui/src/List/StyledListSectionHeader.tsx","webpack://website/../jui/src/List/renderWrapper.tsx","webpack://website/../jui/src/List/useListVirtualizer.tsx","webpack://website/../jui/src/Menu/ContextMenuContainer.tsx","webpack://website/../jui/src/Menu/useContextMenu.tsx","webpack://website/../jui/src/Collections/patchCollectionProps.tsx","webpack://website/../jui/src/Menu/Menu.tsx","webpack://website/../jui/src/Menu/MenuItem.tsx","webpack://website/../jui/src/Menu/MenuItemLayout.tsx","webpack://website/../jui/src/Menu/MenuOverlay.tsx","webpack://website/../jui/src/Menu/useOverlayPositionFromOrigin.tsx","webpack://website/../jui/src/Menu/MenuOverlayFromOrigin.tsx","webpack://website/../jui/src/Menu/MenuTrigger.tsx","webpack://website/../jui/src/Menu/SpeedSearchMenu.tsx","webpack://website/../jui/src/Menu/StyledMenu.tsx","webpack://website/../jui/src/Menu/StyledMenuItem.tsx","webpack://website/../jui/src/Menu/Submenu.tsx","webpack://website/../jui/src/Menu/_useSubmenu.ts","webpack://website/../jui/src/Menu/_useSubmenuState.tsx","webpack://website/../jui/src/Menu/MenuSection.tsx","webpack://website/../jui/src/Menu/renderMenuNodes.tsx","webpack://website/../jui/src/Mnemonic/MnemonicTrigger.tsx","webpack://website/../jui/src/Overlay/UNSAFE_React17SuspenseFix.tsx","webpack://website/../jui/src/ModalWindow/ModalWindow.tsx","webpack://website/../jui/src/ModalWindow/WindowContext.ts","webpack://website/../jui/src/ModalWindow/WindowFooter.tsx","webpack://website/../jui/src/ModalWindow/WindowHeader.tsx","webpack://website/../jui/src/ModalWindow/WindowLayout.tsx","webpack://website/../jui/src/ModalWindow/WindowManager.tsx","webpack://website/../jui/src/Overlay/Overlay.tsx","webpack://website/../jui/src/Overlay/OverlayInteractionHandler.tsx","webpack://website/../jui/src/Overlay/OverlayMoveHandle.tsx","webpack://website/../jui/src/Overlay/OverlayResizeHandles.tsx","webpack://website/../jui/src/Overlay/Popover.tsx","webpack://website/../jui/src/Overlay/bounds-helpers.tsx","webpack://website/../jui/src/utils/useDebounce.ts","webpack://website/../jui/src/Overlay/useContentSize.tsx","webpack://website/../jui/src/Overlay/useResizableMovableOverlay.tsx","webpack://website/../jui/src/Popup/Popup.tsx","webpack://website/../jui/src/Popup/_useDialog.ts","webpack://website/../jui/src/utils/mergeNonNullProps.tsx","webpack://website/../jui/src/Popup/PopupContext.tsx","webpack://website/../jui/src/Popup/PopupHeader.tsx","webpack://website/../jui/src/Popup/PopupLayout.tsx","webpack://website/../jui/src/Popup/PopupManager.tsx","webpack://website/../jui/src/Popup/PopupTrigger.tsx","webpack://website/../jui/src/Popup/StyledPopupContainer.tsx","webpack://website/../jui/src/Popup/StyledPopupHint.tsx","webpack://website/../jui/src/ProgressBar/ProgressBar.tsx","webpack://website/../jui/src/ProgressBar/ProgressBarStopButton.tsx","webpack://website/../jui/src/ResizableView.tsx","webpack://website/../jui/src/Resizer/BottomResizer.tsx","webpack://website/../jui/src/Resizer/HorizontalResizer.tsx","webpack://website/../jui/src/Resizer/LeftResizer.tsx","webpack://website/../jui/src/Resizer/RightResizer.tsx","webpack://website/../jui/src/Resizer/TopResizer.tsx","webpack://website/../jui/src/Resizer/VerticalResizer.tsx","webpack://website/../jui/src/Resizer/useResizer.ts","webpack://website/../jui/src/SearchInput/SearchInput.tsx","webpack://website/../jui/src/SpeedSearch/SpeedSearchInput.tsx","webpack://website/../jui/src/SpeedSearch/SpeedSearchPopup.tsx","webpack://website/../jui/src/SpeedSearch/useGhostInput.tsx","webpack://website/../jui/src/SpeedSearch/useSpeedSearch.tsx","webpack://website/../jui/src/StatusBar/StatusBar.tsx","webpack://website/../jui/src/StatusBar/StatusBarWidget.tsx","webpack://website/../jui/src/StyledSeparator.tsx","webpack://website/../jui/src/Tabs/DebuggerTabs/DebuggerTabContent.tsx","webpack://website/../jui/src/Tabs/DebuggerTabs/StyledDebuggerTab.ts","webpack://website/../jui/src/Tabs/DebuggerTabs/DebuggerTabs.tsx","webpack://website/../jui/src/Tabs/EditorTabs/EditorTabContent.tsx","webpack://website/../jui/src/Tabs/EditorTabs/StyledEditorTab.ts","webpack://website/../jui/src/Tabs/EditorTabs/StyledEditorTabs.ts","webpack://website/../jui/src/Tabs/EditorTabs/EditorTabs.tsx","webpack://website/../jui/src/Tabs/StyledDefaultTab.ts","webpack://website/../jui/src/Tabs/StyledDefaultTabs.ts","webpack://website/../jui/src/Tabs/TabCloseButton.tsx","webpack://website/../jui/src/Tabs/TabContentLayout.tsx","webpack://website/../jui/src/Tabs/TabItem.tsx","webpack://website/../jui/src/Tabs/TabTheme.ts","webpack://website/../jui/src/Tabs/StyledHorizontalOverflowShadows.tsx","webpack://website/../jui/src/Tabs/Tab.tsx","webpack://website/../jui/src/Tabs/Tabs.tsx","webpack://website/../jui/src/Tabs/useHasOverflow.tsx","webpack://website/../jui/src/Tabs/TabsOverflowMenu.tsx","webpack://website/../jui/src/Tabs/ToolWindowTabs/ToolWindowTabContent.tsx","webpack://website/../jui/src/Tabs/ToolWindowTabs/StyledToolWindowTab.ts","webpack://website/../jui/src/Tabs/ToolWindowTabs/StyledToolWindowTabs.ts","webpack://website/../jui/src/Tabs/ToolWindowTabs/ToolWindowTabs.tsx","webpack://website/../jui/src/TextRange.ts","webpack://website/../jui/src/TextWithHighlights/TextWithHighlights.tsx","webpack://website/../jui/src/Theme/parseColorString.ts","webpack://website/../jui/src/Theme/Color.ts","webpack://website/../jui/src/ThreeViewSplitter/ThreeViewSplitter.tsx","webpack://website/../jui/src/ToolWindows/FloatView.tsx","webpack://website/../jui/src/ToolWindows/FloatToolWindows.tsx","webpack://website/../jui/src/ToolWindows/MovableToolWindowStripeProvider.tsx","webpack://website/../jui/src/ToolWindows/StyledToolWindowOuterLayout.tsx","webpack://website/../jui/src/ToolWindows/ToolWindowsState/ToolWindowsLayoutState.ts","webpack://website/../jui/src/ToolWindows/createGetDropPosition.tsx","webpack://website/../jui/src/ToolWindows/StyledToolWindowStripeButton.tsx","webpack://website/../jui/src/ToolWindows/StyledToolWindowStripe.tsx","webpack://website/../jui/src/ToolWindows/useElementMove.tsx","webpack://website/../jui/src/ToolWindows/findEffectiveBackgroundColor.tsx","webpack://website/../jui/src/ToolWindows/ToolWindowStripe.tsx","webpack://website/../jui/src/ToolWindows/UndockSide.tsx","webpack://website/../jui/src/ToolWindows/ToolWindows.tsx","webpack://website/../jui/src/ToolWindows/useOnFocusLost.tsx","webpack://website/../jui/src/ToolWindows/ToolWindowsState/ToolWindowStateProvider.tsx","webpack://website/../jui/src/ToolWindows/ToolWindowsState/ToolWindowsState.ts","webpack://website/../jui/src/ToolWindows/utils.ts","webpack://website/../jui/src/ToolWindowsImpl/useToolWindow.tsx","webpack://website/../jui/src/ToolWindowsImpl/ToolWindowSettingsIconMenu.tsx","webpack://website/../jui/src/ToolWindowsImpl/DefaultToolWindowHeader.tsx","webpack://website/../jui/src/ToolWindowsImpl/DefaultToolWindow.tsx","webpack://website/../jui/src/ToolWindowsImpl/DefaultToolWindowToolbarButton.tsx","webpack://website/../jui/src/ToolWindowsImpl/DefaultToolWindows.tsx","webpack://website/../jui/src/ToolWindowsImpl/MultiViewToolWindow.tsx","webpack://website/../jui/src/ToolWindowsImpl/ToolWindowActionIds.ts","webpack://website/../jui/src/ToolWindowsImpl/useToolWindowActions.tsx","webpack://website/../jui/src/ToolWindowsImpl/useToolWindowsActions.tsx","webpack://website/../jui/src/Toolbar/Toolbar.tsx","webpack://website/../jui/src/Tooltip/ActionHelpTooltip.tsx","webpack://website/../jui/src/Tooltip/ActionTooltip.tsx","webpack://website/../jui/src/Tooltip/HelpTooltip.tsx","webpack://website/../jui/src/Tooltip/PositionedTooltipTrigger.tsx","webpack://website/../jui/src/Tooltip/Tooltip.tsx","webpack://website/../jui/src/Tooltip/TooltipContext.tsx","webpack://website/../jui/src/Tooltip/TooltipPointer.tsx","webpack://website/../jui/src/utils/useMouseEventOverlayPosition.tsx","webpack://website/../jui/src/Tooltip/TooltipTrigger.tsx","webpack://website/../jui/src/Tooltip/TooltipTriggerAndOverlay.tsx","webpack://website/../jui/src/Tooltip/ValidationTooltip.tsx","webpack://website/../jui/src/Tooltip/tooltip-styles.ts","webpack://website/../jui/src/Tree/SpeedSearchTree/SpeedSearchTreeNode.tsx","webpack://website/../jui/src/Tree/SpeedSearchTree/SpeedSearchTree.tsx","webpack://website/../jui/src/Tree/SpeedSearchTree/useSpeedSearchTree.ts","webpack://website/../jui/src/Tree/StyledTree.tsx","webpack://website/../jui/src/Tree/TreeContext.tsx","webpack://website/../jui/src/Tree/TreeKeyboardDelegate.tsx","webpack://website/../jui/src/Tree/TreeNodeIcon.tsx","webpack://website/../jui/src/Tree/useTreeNodeToggleButton.tsx","webpack://website/../jui/src/Tree/StyledTreeNode.tsx","webpack://website/../jui/src/Tree/TreeNode.tsx","webpack://website/../jui/src/Tree/useTreeNode.tsx","webpack://website/../jui/src/Tree/useSelectableTree.tsx","webpack://website/../jui/src/Collections/useCollectionCacheInvalidation.ts","webpack://website/../jui/src/Tree/__copied__TreeCollection.ts","webpack://website/../jui/src/Tree/getSingleChildrenKeys.ts","webpack://website/../jui/src/Tree/TreeSelectionManager.ts","webpack://website/../jui/src/Tree/useTreeState.ts","webpack://website/../jui/src/Tree/useTreeRef.tsx","webpack://website/../jui/src/Tree/useTreeVirtualizer.tsx","webpack://website/../jui/src/TreeActions/useTreeActions.tsx","webpack://website/../jui/src/TreeCheckboxes/NestedSelection.ts","webpack://website/../jui/src/TreeCheckboxes/SpeedSearchTreeWithCheckboxes.tsx","webpack://website/../jui/src/TreeCheckboxes/TreeNodeCheckbox.tsx","webpack://website/../jui/src/TreeCheckboxes/useNestedSelectionState.ts","webpack://website/../jui/src/VariableWidthListLayout.tsx","webpack://website/../jui/src/utils/string-utils.ts","webpack://website/../jui/src/minusculeMatch.ts","webpack://website/../jui/src/selection/useSelectableCollection.ts","webpack://website/../jui/src/selection/useSelectableItem.tsx","webpack://website/../jui/src/style-constants.ts","webpack://website/../jui/src/styled.ts","webpack://website/../jui/src/utils/FocusScope.tsx","webpack://website/../jui/src/utils/array-utils.ts","webpack://website/../jui/src/utils/interaction-utils/textSelection.ts","webpack://website/../jui/src/utils/interaction-utils/useMove.tsx","webpack://website/../jui/src/utils/keyboard-utils.ts","webpack://website/../jui/src/utils/overflow-utils/OverflowObserver.ts","webpack://website/../jui/src/utils/overflow-utils/useOverflowObserver.tsx","webpack://website/../jui/src/utils/tree-utils.ts","webpack://website/../jui/src/utils/useContextOrThrow.tsx","webpack://website/../jui/src/utils/useEventCallback.ts","webpack://website/../jui/src/utils/useFocusForwarder.ts","webpack://website/../jui/src/utils/useLatest.ts","webpack://website/../jui/src/utils/usePrevious.ts","webpack://website/../jui/src/utils/immutableSet.ts","webpack://website/../jui/src/utils/useSet.ts","webpack://website/../../node_modules/markdown-to-jsx/dist/index.modern.js","webpack://website/./src/components/ApiDescription.tsx","webpack://website/./src/components/component-linking.tsx","webpack://website/./src/theme/CodeBlock/Expandable.tsx","webpack://website/./src/theme/CodeBlock/Playground.tsx","webpack://website/../jui/src/SpeedSearch/SpeedSearchContainer.tsx","webpack://website/../jui/src/CollectionSpeedSearch/CollectionSpeedSearchContainer.tsx","webpack://website/../jui/src/List/SpeedSearchList/useSpeedSearchList.ts","webpack://website/../jui/src/List/SpeedSearchList/SpeedSearchList.tsx","webpack://website/../jui/src/Icon/StyledIconLiveIndicator.tsx","webpack://website/../jui/src/SpeedSearch/SpeedSearch.tsx","webpack://website/../jui/src/Tree/Tree.tsx","webpack://website/../jui/src/ProgressBar/ProgressBarPauseButton.tsx","webpack://website/../jui/src/Dropdown/Dropdown.tsx","webpack://website/./src/theme/ReactLiveScope/index.js","webpack://website/./src/theme/Playground/style-overrides.module.css","webpack://website/./src/theme/CodeBlock/index.js","webpack://website/./src/theme/MDXComponents/Code.tsx","webpack://website/./src/theme/MDXComponents/index.ts","webpack://website/./src/components/DefaultShortcut.tsx","webpack://website/./docs/components/SearchInput.mdx"],"sourcesContent":["import {\n  Action,\n  ActionDefinition,\n} from \"@intellij-platform/core/ActionSystem/Action\";\nimport { DividerItem } from \"@intellij-platform/core/Collections\";\n\nexport type ActionInResolvedGroup = Action & { parent: ResolvedActionGroup };\n\n/**\n * Different ways to show a group of actions in a menu.\n * - `submenu`: renders children as submenu (corresponding, in the reference impl, to `isPopup` property of ActionGroup\n *   being set to `true` and 'SUPPRESS_SUBMENU' clientProperty not being set)\n * - `none`: renders the action group as a simple menu item, not rendering its children at all.\n *   The action group will be performed, which typically opens a popup (see {@link useCreateDefaultActionGroup}),\n *   showing the children.\n *   (corresponding, in the reference impl, to `isPopup` property and 'SUPPRESS_SUBMENU' clientProperty being set\n *   to true on the ActionGroup)\n * - `section`: renders children in a section with divider, but without section title\n * - `titledSection`: renders children in a section with divider and title.\n */\ntype ActionGroupMenuPresentation =\n  | \"section\"\n  | \"titledSection\"\n  | \"none\"\n  | \"submenu\";\n\nexport interface MutableActionGroup extends Action {\n  children: Array<Action | DividerItem>;\n  /**\n   * Whether the action group is searchable. See {@link getAvailableActionsFor}.\n   */\n  isSearchable?: boolean;\n  /**\n   * How the action group should be rendered, in menus.\n   */\n  menuPresentation?: ActionGroupMenuPresentation;\n}\nexport type ActionGroup = Readonly<MutableActionGroup>;\n\nexport interface ResolvedActionGroup extends ActionGroup {\n  parent: ResolvedActionGroup | null;\n  children: ActionInResolvedGroup[];\n}\nexport interface ActionGroupDefinition extends ActionDefinition {\n  children: Array<ActionDefinition | \"divider\">;\n  /**\n   * Defines how the action group should be represented in menus.\n   * @default 'submenu'\n   * @see ActionGroupMenuPresentation\n   */\n  menuPresentation?: ActionGroupMenuPresentation;\n}\n\nexport function isInResolvedActionGroup(\n  action: Action\n): action is ActionInResolvedGroup {\n  return \"parent\" in action;\n}\nexport function isActionGroup(action: Action): action is ActionGroup {\n  return \"children\" in action; // probably better to use a discriminator field like `type`\n}\n\nexport function isResolvedActionGroup<T extends Action>(\n  action: Action\n): action is ResolvedActionGroup {\n  return \"children\" in action && \"parent\" in action; // probably better to use a discriminator field like `type`\n}\n\nexport function isActionGroupDefinition(\n  action: ActionDefinition\n): action is ActionGroupDefinition {\n  return \"children\" in action; // probably better to use a discriminator field like `type`\n}\n","import React from \"react\";\nimport { useKeymap } from \"./KeymapProvider\";\nimport { shortcutToString } from \"./shortcutToString\";\n\n/**\n * Renders the first keyboard shortcut for the action specified by {@param actionId}, based on the keymap context.\n * if {@param children} is provided, treats it as a render function that receives the shortcut string.\n */\nexport const ActionShortcut = ({\n  actionId,\n  children,\n}: {\n  actionId: string;\n  children?: (shortcut: string) => React.ReactNode;\n}) => {\n  const getShortcut = useGetActionShortcut();\n  const shortcutString = getShortcut(actionId);\n  return (\n    <>\n      {shortcutString && (children ? children(shortcutString) : shortcutString)}\n    </>\n  );\n};\n\n/**\n * Returns a function that gets first keyboard shortcut for the action specified by `actionId`, based on the\n * keymap context.\n */\nexport const useGetActionShortcut = (): ((actionId: string) => string) => {\n  const keymap = useKeymap();\n  return (actionId: string) => {\n    const keyboardShortcut = keymap?.[actionId]?.find(\n      ({ type }) => type === \"keyboard\"\n    );\n    return keyboardShortcut ? shortcutToString(keyboardShortcut) : \"\";\n  };\n};\n","import React, { KeyboardEventHandler, useRef } from \"react\";\nimport { useEventCallback } from \"@intellij-platform/core/utils/useEventCallback\";\nimport {\n  isKeyboardShortcut,\n  KeyboardShortcut,\n  KeyStroke,\n  Shortcut,\n  supportedModifiers,\n} from \"./Shortcut\";\n\nexport function useShortcuts(\n  shortcuts: { [actionId: string]: ReadonlyArray<Shortcut> },\n  onAction: (\n    actionId: string,\n    args: {\n      event: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>;\n    }\n  ) => void | boolean,\n  {\n    useCapture = false,\n  }: {\n    /**\n     * Experimental option to determine if event handling should be done on capture phase. Useful for cases where\n     * a descendant element handles events in capture phase, and that conflicts with an action.\n     */\n    useCapture?: boolean;\n  } = {}\n) {\n  const firstKeyActivatedShortcutsRef = useRef<\n    Array<{ actionId: string; shortcut: KeyboardShortcut }>\n  >([]);\n  const secondStrokeResetTimerIdRef = useRef<number | null>(null);\n  const onKeyDown: KeyboardEventHandler<HTMLElement> = useEventCallback((e) => {\n    // TODO: repeated key downs can trigger an action repeatedly, in the original impl. Example: expand/shrink selection\n    if (isModifierOnly(e.nativeEvent) || e.repeat) {\n      return;\n    }\n    // firstKeyActivatedShortcutsRef will be re-adjusted in any case. Cleaning whatever scheduled reset\n    if (secondStrokeResetTimerIdRef.current !== null) {\n      window.clearTimeout(secondStrokeResetTimerIdRef.current);\n    }\n\n    function triggerAction(actionId: string) {\n      const result = onAction(actionId, { event: e });\n      if (result !== false) {\n        // TODO: make sure about how propagation should be stopped and/or controlled\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    }\n    // If there are keyboard shortcuts that are half way handled (first keystroke triggered already, and we are within\n    // the valid wait for the second keystroke), they should be prioritized over first keystroke matching.\n    if (firstKeyActivatedShortcutsRef.current.length > 0) {\n      firstKeyActivatedShortcutsRef.current.some(({ shortcut, actionId }) => {\n        if (isKeyMatch(shortcut.secondKeyStroke, e, true)) {\n          triggerAction(actionId);\n          return true;\n        }\n      });\n      firstKeyActivatedShortcutsRef.current = [];\n    } else {\n      const firstKeyMatches = Object.entries(shortcuts)\n        .flatMap(([actionId, shortcuts]) =>\n          shortcuts.map((shortcut) => ({ actionId, shortcut }))\n        )\n        .filter(\n          (\n            input\n          ): input is {\n            actionId: string;\n            shortcut: KeyboardShortcut;\n          } => isKeyboardShortcut(input.shortcut)\n        )\n        .filter(({ shortcut }) => isKeyMatch(shortcut.firstKeyStroke, e));\n\n      firstKeyActivatedShortcutsRef.current = firstKeyMatches.filter(\n        ({ shortcut, actionId }) => shortcut.secondKeyStroke\n      );\n\n      if (firstKeyActivatedShortcutsRef.current.length > 0) {\n        secondStrokeResetTimerIdRef.current = window.setTimeout(() => {\n          firstKeyActivatedShortcutsRef.current = [];\n        }, 2000);\n        document.addEventListener(\n          \"keydown\",\n          () => {\n            document.addEventListener(\n              \"keyup\",\n              () => {\n                firstKeyActivatedShortcutsRef.current = [];\n              },\n              { once: true }\n            );\n          },\n          //  by passing capture: true, we skip the current keydown event, since it's already passed capture phase\n          { once: true, capture: true }\n        );\n      } else if (firstKeyMatches.length > 0) {\n        triggerAction(firstKeyMatches[0].actionId);\n      }\n    }\n  });\n  const shortcutHandlerProps = {\n    /**\n     * by setting onKeyDownCapture is set instead of onKeyDown, we can prioritize action event handler over\n     * component-specific handlers. That might be useful for some components that aggressively stop propagation of\n     * events they handle, if the action is considered of higher priority compared to the conflicting component-internal\n     * functionality. So maybe an option would be in order to define whether the shortcut's event handling should be done\n     * in capture or bubbling phase.\n     * Another thing to get clarified as action system is more used, is to decide if action handler should stop\n     * propagation or not. Or should it be an option?\n     * UPDATE: Added an option to determine whether event handling should be done in capture phase. The use case is\n     * \"Find in files\" action with Cmd+Shift+O shortcut, which overlaps with some action in Monaco editor (only in .ts\n     * files). Monaco uses capture phase, and stops propagation, so unless we use capture phase, useShortcut's event\n     * handler is never called.\n     * An apposite use case is in SpeedSearchTree in tool windows, where we want Escape to be handled by speed search,\n     * and propagation stopped, if speed search is currently active. The second Escape keystroke should move focus to\n     * the editor. That wouldn't work if we unconditionally handle events in capture phase.\n     */\n    [useCapture ? \"onKeyDownCapture\" : \"onKeyDown\"]: onKeyDown,\n  };\n  return { shortcutHandlerProps };\n}\n\nconst isKeyMatch = (\n  keyStroke: KeyStroke | undefined,\n  e: React.KeyboardEvent,\n  loose?: boolean\n) =>\n  e.code === keyStroke?.code &&\n  (loose ? keyStroke.modifiers || [] : supportedModifiers).every(\n    (modifier) =>\n      e.getModifierState(modifier) ===\n      Boolean(keyStroke.modifiers?.includes(modifier))\n  );\n\nfunction isModifierOnly(event: KeyboardEvent) {\n  return event.location === 1 || event.location === 2;\n}\n","import { sortBy } from \"ramda\";\nimport React, { HTMLAttributes, useContext, useEffect, useState } from \"react\";\nimport { useEventCallback } from \"@intellij-platform/core/utils/useEventCallback\";\nimport { dfsVisit } from \"@intellij-platform/core/utils/tree-utils\";\n\nimport { Keymap, useKeymap } from \"./KeymapProvider\";\nimport { shortcutToString } from \"./shortcutToString\";\nimport { useShortcuts } from \"./useShortcut\";\nimport {\n  ActionGroup,\n  ActionInResolvedGroup,\n  isActionGroup,\n  isActionGroupDefinition,\n  MutableActionGroup,\n} from \"./ActionGroup\";\nimport {\n  Action,\n  ActionContext,\n  ActionDefinition,\n  MutableAction,\n} from \"./Action\";\nimport { DividerItem } from \"@intellij-platform/core/Collections\";\n\n/**\n * Represents the properties required for the ActionsProvider component.\n */\nexport interface ActionsProviderProps {\n  /**\n   * A collection of action definitions.\n   */\n  actions: ActionDefinition[];\n  children: (args: {\n    shortcutHandlerProps: HTMLAttributes<HTMLElement>;\n  }) => React.ReactElement;\n\n  /**\n   * Experimental option to determine if event handling should be done on capture phase. Useful for cases where\n   * a descendant element handles events in capture phase, and that conflicts with an action.\n   */\n  useCapture?: boolean;\n}\n\nconst ActionsContext = React.createContext<Action[]>([]);\n\nfunction generateId() {\n  return `jui-${Math.floor(Math.random() * 10000000)}`;\n}\n\nconst ACTION_PROVIDER_ID_ATTRIBUTE = \"data-action-provider\";\nconst ACTION_PROVIDER_ID_DATA_PREFIX = \"action_provider_id_\";\nconst actionProvidersMap = new Map<string, Action[]>();\n\n/**\n * Provides a set of actions for the wrapped UI. Uses the currently provided keymap to find the shortcuts\n * for each action, and passes the necessary event handlers for the shortcuts, to the `children` render function.\n *\n * @param {Array<Action>} props.actions - The actions to be provided.\n * @param {boolean} [props.useCapture] - Specifies whether to use capture phase for event handling.\n * @param {Function} props.children - Render function that accepts shortcutHandlerProps as argument.\n */\nexport function ActionsProvider(props: ActionsProviderProps): JSX.Element {\n  const parentContext = useContext(ActionsContext);\n  const keymap = useKeymap();\n  const actions: Action[] = [];\n  dfsVisit(\n    (action: Action | DividerItem | null) =>\n      action && !(action instanceof DividerItem) && isActionGroup(action)\n        ? action.children\n        : null,\n    (action) => {\n      if (action && !(action instanceof DividerItem)) {\n        actions.push(action);\n      }\n    },\n    recursivelyCreateActions(keymap, props.actions)\n  );\n\n  const shortcuts = Object.fromEntries(\n    actions.map((action) => [action.id, action.shortcuts || []])\n  );\n  const [actionProviderId] = useState(generateId);\n\n  const { shortcutHandlerProps } = useShortcuts(\n    shortcuts,\n    (actionId, { event }) => {\n      actions\n        .find((action) => action.id === actionId)\n        ?.perform({\n          event,\n          // it's important to use target and not currentTarget\n          element: event.target instanceof Element ? event.target : null,\n        });\n    },\n    { useCapture: props.useCapture }\n  );\n\n  const allActions = [...parentContext, ...actions]; // Maybe warn overrides?\n\n  // @ts-expect-error: not sure why data-* attribute is not accepted.\n  shortcutHandlerProps[ACTION_PROVIDER_ID_ATTRIBUTE] = actionProviderId;\n  // @ts-expect-error: not sure why data-* attribute is not accepted.\n  shortcutHandlerProps[\n    `data-${ACTION_PROVIDER_ID_DATA_PREFIX}${actionProviderId}`\n  ] = \"\";\n\n  useEffect(() => {\n    actionProvidersMap.set(actionProviderId, allActions);\n  });\n  useEffect(() => {\n    return () => {\n      actionProvidersMap.delete(actionProviderId);\n    };\n  }, []);\n  return (\n    <ActionsContext.Provider value={allActions}>\n      {props.children({ shortcutHandlerProps })}\n    </ActionsContext.Provider>\n  );\n}\n\nfunction isMutableActionGroup(\n  action: MutableAction\n): action is MutableActionGroup {\n  return \"children\" in action; // probably better to use a discriminator field like `type`\n}\n\nfunction recursivelyCreateActions(\n  keymap: Keymap | null,\n  actionDefinitions: Array<ActionDefinition | DividerItem>,\n  parent: ActionGroup\n): Array<ActionInResolvedGroup | DividerItem>;\nfunction recursivelyCreateActions(\n  keymap: Keymap | null,\n  actionDefinitions: Array<ActionDefinition | DividerItem>\n): Array<Action | ActionGroup | DividerItem>;\nfunction recursivelyCreateActions(\n  keymap: Keymap | null,\n  actionDefinitions: Array<ActionDefinition | DividerItem>,\n  parent?: ActionGroup\n): Array<Action | ActionInResolvedGroup | ActionGroup | DividerItem> {\n  return actionDefinitions.map(\n    (\n      actionDefinition: ActionDefinition | DividerItem\n    ): Action | DividerItem => {\n      if (actionDefinition instanceof DividerItem) {\n        return actionDefinition;\n      }\n      const shortcuts =\n        keymap?.[actionDefinition.id] ??\n        (actionDefinition.useShortcutsOf\n          ? keymap?.[actionDefinition.useShortcutsOf]\n          : undefined);\n      const firstShortcut = shortcuts?.[0];\n      const action: MutableAction | ActionInResolvedGroup = {\n        ...actionDefinition,\n        ...(isActionGroupDefinition(actionDefinition)\n          ? { parent: parent ?? null }\n          : {}),\n        shortcuts,\n        shortcut: firstShortcut ? shortcutToString(firstShortcut) : undefined, // Maybe it should be all shortcuts?\n        perform: (context) => {\n          if (!action.isDisabled) {\n            actionDefinition.actionPerformed(\n              context || { event: null, element: null }\n            );\n          }\n        },\n      };\n      if (\n        isMutableActionGroup(action) &&\n        isActionGroupDefinition(actionDefinition)\n      ) {\n        action.children = recursivelyCreateActions(\n          keymap,\n          actionDefinition.children.map((child) =>\n            child === \"divider\" ? new DividerItem() : child\n          ),\n          action\n        );\n      }\n      return action;\n    }\n  );\n}\n\n/**\n * Experimental function to get list of all actions available from a given html elements. Useful for implementing\n * action search UI.\n * @experimental\n */\nexport function getAvailableActionsFor(element: Element): Action[] {\n  const closestActionProvider = element.closest(\n    `[${ACTION_PROVIDER_ID_ATTRIBUTE}]`\n  );\n  if (closestActionProvider instanceof HTMLElement) {\n    /**\n     * NOTE: initially, only one data attribute was used to hold the action provider id. Although simpler, that approach\n     * is subject to bug in some edge cases, where multiple nested action providers are rendered, but `actionProviderProps`\n     * is merged on a single dom element. In such cases, it's important that the props from the innermost action provider\n     * is merged last, overwriting other values for data-action-provider-id.\n     * Because that's error-prone, we keep unique data attributes (`data-action_provider_id_...`} for each action\n     * provider id, and to simplify querying part, we also add a constant data attribute (data-action-provider).\n     * This way we can read all action providers applied on the same dom element. Since action providers inherit actions\n     * from parent action providers, we can reliably pick the actions from the one with the highest number of actions.\n     */\n    const actionSets = Object.keys(closestActionProvider.dataset)\n      .filter((dataKey) => dataKey.startsWith(ACTION_PROVIDER_ID_DATA_PREFIX))\n      .map((dataKey) => {\n        const id = dataKey?.replace(ACTION_PROVIDER_ID_DATA_PREFIX, \"\");\n        const actions = id && actionProvidersMap.get(id);\n        // noinspection PointlessBooleanExpressionJS\n        return actions\n          ? Object.values(actions).filter(\n              ({ isSearchable }) => isSearchable !== false\n            )\n          : [];\n      })\n      .concat();\n    return sortBy((actionSet) => -actionSet.length, actionSets)[0] || [];\n  }\n  return [];\n}\n\nexport function useActions(): Action[] {\n  return useContext(ActionsContext);\n}\n\nexport const useAction = (actionId: string): Action | null => {\n  return useActions().find(({ id }) => id === actionId) ?? null;\n};\n\nexport const usePerformAction = (): ((\n  actionId: string,\n  context?: ActionContext\n) => void) => {\n  const actions = useActions();\n  return useEventCallback((actionId: string, context?: ActionContext) => {\n    const action = actions.find(({ id }) => id === actionId);\n    if (action) {\n      action.perform(context);\n    } else {\n      console.error(\n        `An attempt to perform action with id ${actionId} failed because action was not found`\n      );\n    }\n  });\n};\n","export const CommonActionId = {\n  EXPAND_ALL: \"ExpandAll\",\n  COLLAPSE_ALL: \"CollapseAll\",\n  EXPAND_SELECTION: \"EditorSelectWord\",\n  SHRINK_SELECTION: \"EditorUnSelectWord\",\n  GO_TO_ACTION: \"GotoAction\",\n  GO_TO_FILE: \"GotoFile\",\n  SHOW_INTENTION_ACTIONS: \"ShowIntentionActions\",\n  EDIT_SOURCE: \"Documentation.EditSource\",\n  SHOW_SEARCH_HISTORY: \"ShowSearchHistory\",\n  COPY_REFERENCE: \"CopyReference\",\n  REFRESH: \"Refresh\",\n  COPY: \"$Copy\",\n  CUT: \"$Cut\",\n  PASTE: \"$Paste\",\n  DELETE: \"$Delete\",\n  CODE_COMPLETION: \"CodeCompletion\",\n};\n","import React, { useContext } from \"react\";\nimport { Shortcut } from \"./Shortcut\";\nimport { defaultKeymap } from \"./defaultKeymap\";\n\nexport interface Keymap {\n  [actionId: string]: ReadonlyArray<Shortcut>;\n}\n\nexport const KeymapContext = React.createContext<Keymap | null>(defaultKeymap);\n\nexport const KeymapProvider: React.FC<{\n  keymap: Keymap;\n  children?: React.ReactNode;\n}> = ({ keymap: keymapProp, children }) => {\n  const parentKeyMap = useContext(KeymapContext);\n  const keymap = Object.assign(Object.create(parentKeyMap), keymapProp);\n  return (\n    <KeymapContext.Provider value={keymap}>{children}</KeymapContext.Provider>\n  );\n};\n\nexport const useKeymap = () => useContext(KeymapContext);\n","type ShortcutType = \"mouse\" | \"keyboard\";\nexport type KeyStrokeModifier = \"Alt\" | \"Shift\" | \"Meta\" | \"Control\";\n\nexport interface KeyStroke {\n  /**\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key}\n   */\n  code: string;\n  modifiers?: Array<KeyStrokeModifier>;\n}\n\ninterface ShortcutBase {\n  type: ShortcutType;\n}\n\ninterface MouseShortcut extends ShortcutBase {\n  type: \"mouse\";\n}\n\nexport interface KeyboardShortcut extends ShortcutBase {\n  type: \"keyboard\";\n  firstKeyStroke: KeyStroke;\n  secondKeyStroke?: KeyStroke;\n}\n\nexport type Shortcut = MouseShortcut | KeyboardShortcut;\n\nexport const isKeyboardShortcut = (\n  shortcut: Shortcut\n): shortcut is KeyboardShortcut => shortcut.type === \"keyboard\";\n\nexport const supportedModifiers: KeyStrokeModifier[] = [\n  \"Alt\",\n  \"Meta\",\n  \"Shift\",\n  \"Control\",\n];\n","import React from \"react\";\nimport { useAction } from \"@intellij-platform/core/ActionSystem/ActionsProvider\";\nimport {\n  IconButton,\n  IconButtonProps,\n} from \"@intellij-platform/core/IconButton\";\nimport { ActionTooltip, TooltipTrigger } from \"@intellij-platform/core/Tooltip\";\n\nexport const ActionButton = ({\n  actionId,\n  children,\n  ...otherProps\n}: {\n  actionId: string;\n  /**\n   * Content to show instead of `action.icon`.\n   */\n  children?: React.ReactNode;\n} & IconButtonProps): JSX.Element => {\n  const action = useAction(actionId);\n  if (!action) {\n    return <></>;\n  }\n  const actionButton = (\n    <IconButton\n      isDisabled={action.isDisabled}\n      aria-label={action.title}\n      {...otherProps}\n      onPress={(e) => {\n        action?.perform();\n        otherProps.onPress?.(e);\n      }}\n    >\n      {children || action.icon}\n    </IconButton>\n  );\n  if (action.title) {\n    return (\n      <TooltipTrigger\n        tooltip={\n          <ActionTooltip actionName={action.title} shortcut={action.shortcut} />\n        }\n      >\n        {actionButton}\n      </TooltipTrigger>\n    );\n  }\n  return actionButton;\n};\n","import React from \"react\";\nimport { type ActionGroup } from \"@intellij-platform/core/ActionSystem/ActionGroup\";\nimport { type ActionMenuProps, ActionsMenu } from \"./ActionsMenu\";\n\nexport type ActionGroupMenuProps = Omit<ActionMenuProps, \"actions\"> & {\n  actionGroup: ActionGroup;\n};\n/**\n * Renders children of an action group as a menu.\n */\nexport const ActionGroupMenu = ({\n  actionGroup,\n  ...props\n}: ActionGroupMenuProps) => {\n  return (\n    <ActionsMenu\n      aria-label={actionGroup.title}\n      actions={actionGroup.children}\n      {...props}\n    />\n  );\n};\n","import React from \"react\";\nimport { flatten } from \"ramda\";\nimport { Menu, MenuItemLayout, MenuProps } from \"@intellij-platform/core/Menu\";\nimport { Divider, Item, Section } from \"@intellij-platform/core/Collections\";\nimport { DividerItem } from \"@intellij-platform/core/Collections/Divider\"; // Importing from /Collections breaks the build for some reason\nimport { type ActionGroup } from \"@intellij-platform/core/ActionSystem/ActionGroup\";\nimport {\n  type Action,\n  ActionContext,\n} from \"@intellij-platform/core/ActionSystem/Action\";\n\ntype ActionGroupAsMenuItem = Pick<\n  ActionGroup,\n  \"id\" | \"icon\" | \"title\" | \"isDisabled\" | \"children\" | \"menuPresentation\"\n>;\nexport type ActionItem = ActionGroupAsMenuItem | Action | DividerItem;\n\nfunction isAction(item: ActionItem): item is Action {\n  return \"perform\" in item;\n}\n\ntype ControlledMenuProps = Pick<\n  MenuProps<ActionItem>,\n  \"onAction\" | \"disabledKeys\" | \"items\" | \"children\"\n>;\ntype RenderMenu = (props: ControlledMenuProps) => React.ReactNode;\nexport type ActionMenuProps = {\n  actions: Array<ActionItem>;\n\n  /**\n   * Context with which actions should be performed.\n   * Usually the context by which the ActionsMenu itself is opened.\n   * Pass a function for lazy evaluation when the action is selected from the menu.\n   */\n  actionContext?: ActionContext | (() => ActionContext);\n  /**\n   * Allows for rendering a custom menu component, e.g. {@link SpeedSearchMenu}.\n   * If not provided, {@link Menu} is rendered, receiving additional props that\n   * are passed to `ActionsMenu`.\n   * If it is provided, additional {@link Menu} props are not allowed, and they\n   * can be passed directly to the returned menu element.\n   */\n  children?: RenderMenu;\n} & (\n  | {\n      children: RenderMenu;\n    }\n  | (Omit<MenuProps<ActionItem>, keyof ControlledMenuProps> & {\n      children?: never;\n    })\n);\n/**\n * Given a nested list of resolved actions, renders a menu corresponding to them.\n */\nexport function ActionsMenu({\n  actions,\n  actionContext,\n  children = (actionMenuProps) => <Menu {...actionMenuProps} />,\n  ...otherProps\n}: ActionMenuProps) {\n  const allActions = getAllActions(actions);\n  const disabledKeys = allActions\n    .filter(({ isDisabled }) => isDisabled)\n    .map(({ id }) => id);\n\n  return (\n    <>\n      {children({\n        ...otherProps,\n        onAction: (key) => {\n          const action = allActions.find(({ id }) => id === key);\n          if (action && isAction(action)) {\n            action.perform(\n              typeof actionContext === \"function\"\n                ? actionContext?.()\n                : actionContext\n            );\n          }\n        },\n        disabledKeys,\n        // FIXME: keep isSelected on actions (toggle action) and control selectedKeys too?\n        items: actions,\n        children: (action) => {\n          if (action instanceof DividerItem) {\n            return <Divider />;\n          }\n          return renderActionAsMenuItem(action);\n        },\n      })}\n    </>\n  );\n}\n\ntype ActionAsMenuItem = Omit<Action, \"perform\" | \"shortcuts\">;\n\nexport function renderActionAsMenuItem(\n  action: ActionAsMenuItem | ActionGroupAsMenuItem | DividerItem\n) {\n  const isGroup = \"children\" in action;\n  if (\n    isGroup &&\n    (action.menuPresentation === \"section\" ||\n      action.menuPresentation === \"titledSection\")\n  ) {\n    return (\n      <Section\n        key={action.id}\n        // @ts-expect-error: hasDivider is not yet made a public API.\n        hasDivider\n        aria-label={\n          action.menuPresentation === \"section\" ? action.title : undefined\n        }\n        title={\n          action.menuPresentation === \"titledSection\" ? action.title : undefined\n        }\n        items={action.children}\n      >\n        {renderActionAsMenuItem}\n      </Section>\n    );\n  }\n  if (action instanceof DividerItem) {\n    return <Divider />;\n  }\n  return (\n    <Item\n      key={action.id}\n      textValue={action.title}\n      aria-label={action.title}\n      childItems={\n        isGroup && action.menuPresentation === \"submenu\"\n          ? action.children\n          : undefined\n      }\n    >\n      <MenuItemLayout\n        content={action.title}\n        icon={action.icon}\n        shortcut={\"shortcut\" in action ? action.shortcut : undefined}\n      />\n    </Item>\n  );\n}\n\nfunction getAllActions(items: ActionItem[]): Action[] {\n  return flatten(\n    items.map((item) =>\n      [item].concat(\"children\" in item ? getAllActions(item.children) : [])\n    )\n  ).filter(isAction);\n}\n","import { flatten } from \"ramda\";\nimport React from \"react\";\nimport { Popup, usePopupManager } from \"@intellij-platform/core/Popup\";\nimport { SpeedSearchMenu } from \"@intellij-platform/core/Menu\";\nimport { MENU_POSITION_TARGET_DATA_ATTRIBUTE } from \"@intellij-platform/core/Menu/ContextMenuContainer\";\nimport { useEventCallback } from \"@intellij-platform/core/utils/useEventCallback\";\nimport {\n  ActionContext,\n  ActionDefinition,\n  type ActionGroupDefinition,\n  isActionGroupDefinition,\n  useGetActionShortcut,\n} from \"@intellij-platform/core/ActionSystem\";\n\nimport { renderActionAsMenuItem } from \"./ActionsMenu\";\nimport { DividerItem } from \"@intellij-platform/core/Collections\";\n\nexport const useCreateDefaultActionGroup = () => {\n  const { show } = usePopupManager();\n  const getActionShortcut = useGetActionShortcut();\n  const openActionsInPopup = useEventCallback(\n    (\n      { children, title }: Pick<ActionGroupDefinition, \"children\" | \"title\">,\n      context: ActionContext\n    ) => {\n      show(({ close }) => (\n        <Popup\n          // Maybe an option to conditionally use context-based positioning?\n          positioning={\n            context.element instanceof HTMLElement\n              ? {\n                  targetRef: {\n                    current:\n                      context.element.querySelector(\n                        `[${MENU_POSITION_TARGET_DATA_ATTRIBUTE}]`\n                      ) ?? context.element,\n                  },\n                  placement: \"bottom\",\n                }\n              : undefined\n          }\n        >\n          <Popup.Layout\n            content={\n              /**\n               * NOTE: It would be much nicer to use {@link ActionGroupMenu} component here. But the action group is not\n               * yet provided when the group definition is being created. It seems like a sign of bad design that needs\n               * to get addressed.\n               */\n              <SpeedSearchMenu\n                aria-label={title}\n                items={children.map((item) =>\n                  item === \"divider\" ? new DividerItem() : item\n                )}\n                onAction={(key) => {\n                  // The need for calculating `allActions` is a consequence of the issue explained in the note above.\n                  const allActions = flatten(\n                    children.map((item) =>\n                      item !== \"divider\" && isActionGroupDefinition(item)\n                        ? item.children\n                        : item\n                    )\n                  );\n                  const action = allActions.find(\n                    (action): action is ActionDefinition =>\n                      typeof action === \"object\" && action.id === key\n                  );\n                  if (action && !action.isDisabled) {\n                    action.actionPerformed(context);\n                  }\n                }}\n                onClose={close}\n                autoFocus=\"first\"\n              >\n                {(item) =>\n                  renderActionAsMenuItem(\n                    item instanceof DividerItem\n                      ? item\n                      : {\n                          ...item,\n                          // a consequence of the issue explained in the note above.\n                          shortcut: getActionShortcut(item.id),\n                        }\n                  )\n                }\n              </SpeedSearchMenu>\n            }\n            header={title}\n          />\n        </Popup>\n      ));\n    }\n  );\n\n  return (\n    groupDefinition: Omit<ActionGroupDefinition, \"actionPerformed\">\n  ): ActionGroupDefinition => {\n    return {\n      menuPresentation: \"submenu\",\n      ...groupDefinition,\n      actionPerformed: (context) =>\n        openActionsInPopup(groupDefinition, context),\n    };\n  };\n};\n","import {\n  FOCUS_EDITOR_ACTION_ID,\n  HIDE_ACTIVE_WINDOW_ACTION_ID,\n  HIDE_ALL_WINDOWS_ACTION_ID,\n  JUMP_TO_LAST_WINDOW_ACTION_ID,\n  MAXIMIZE_TOOL_WINDOW_ACTION_ID,\n  RESIZE_TOOL_WINDOW_BOTTOM_ACTION_ID,\n  RESIZE_TOOL_WINDOW_LEFT_ACTION_ID,\n  RESIZE_TOOL_WINDOW_RIGHT_ACTION_ID,\n  RESIZE_TOOL_WINDOW_TOP_ACTION_ID,\n  // For some reason importing from shorter paths doesn't work as expected in cypress ¯\\_(ツ)_/¯\n  // Weirdly, `import *` works in that case.\n} from \"@intellij-platform/core/ToolWindowsImpl/ToolWindowActionIds\";\n\nimport { Keymap } from \"./KeymapProvider\";\nimport { CommonActionId } from \"./CommonActionIds\";\n\n// TODO: OS specific defaults\n// TODO: extract and export action ids\n// NOTE: defaultKeymap doesn't belong to ActionSystem semantically. Would be something to be moved to a separate module\n/**\n * Default Intellij Idea keymapping for common action ids, including tool window actions.\n * @see CommonActionId\n */\nexport const defaultKeymap: Keymap = {\n  [RESIZE_TOOL_WINDOW_RIGHT_ACTION_ID]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"ArrowRight\",\n        modifiers: [\"Control\", \"Alt\"],\n      },\n    },\n  ],\n  [RESIZE_TOOL_WINDOW_LEFT_ACTION_ID]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"ArrowLeft\",\n        modifiers: [\"Control\", \"Alt\"],\n      },\n    },\n  ],\n  [RESIZE_TOOL_WINDOW_TOP_ACTION_ID]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"ArrowUp\",\n        modifiers: [\"Control\", \"Alt\"],\n      },\n    },\n  ],\n  [RESIZE_TOOL_WINDOW_BOTTOM_ACTION_ID]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"ArrowDown\",\n        modifiers: [\"Control\", \"Alt\"],\n      },\n    },\n  ],\n  [MAXIMIZE_TOOL_WINDOW_ACTION_ID]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"Quote\",\n        modifiers: [\"Shift\", \"Meta\"],\n      },\n    },\n  ],\n  [FOCUS_EDITOR_ACTION_ID]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"Escape\",\n      },\n    },\n  ],\n  [HIDE_ACTIVE_WINDOW_ACTION_ID]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"Escape\",\n        modifiers: [\"Shift\"],\n      },\n    },\n  ],\n  [HIDE_ALL_WINDOWS_ACTION_ID]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"F12\",\n        modifiers: [\"Shift\", \"Meta\"],\n      },\n    },\n  ],\n  [JUMP_TO_LAST_WINDOW_ACTION_ID]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"F12\",\n      },\n    },\n  ],\n  [CommonActionId.EXPAND_SELECTION]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"KeyW\",\n      },\n    },\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Alt\"],\n        code: \"ArrowUp\",\n      },\n    },\n  ],\n  [CommonActionId.SHRINK_SELECTION]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\", \"Shift\"],\n        code: \"KeyW\",\n      },\n    },\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Alt\"],\n        code: \"ArrowDown\",\n      },\n    },\n  ],\n  [CommonActionId.EXPAND_ALL]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"Equal\",\n      },\n    },\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"NumpadAdd\",\n      },\n    },\n  ],\n  [CommonActionId.COLLAPSE_ALL]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"Minus\",\n      },\n    },\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"NumpadSubtract\",\n      },\n    },\n  ],\n  [CommonActionId.GO_TO_ACTION]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\", \"Shift\"],\n        code: \"KeyA\",\n      },\n    },\n  ],\n  [CommonActionId.SHOW_INTENTION_ACTIONS]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Alt\"],\n        code: \"Enter\",\n      },\n    },\n  ],\n  [CommonActionId.GO_TO_FILE]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\", \"Shift\"],\n        code: \"KeyO\",\n      },\n    },\n  ],\n  [CommonActionId.EDIT_SOURCE]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"ArrowDown\",\n      },\n    },\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"F4\",\n      },\n    },\n  ],\n  [CommonActionId.SHOW_SEARCH_HISTORY]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Alt\"],\n        code: \"ArrowDown\",\n      },\n    },\n  ],\n  [CommonActionId.COPY_REFERENCE]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\", \"Shift\", \"Alt\"],\n        code: \"KeyC\",\n      },\n    },\n  ],\n  [CommonActionId.REFRESH]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"KeyR\",\n      },\n    },\n  ],\n  [CommonActionId.DELETE]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        code: \"Backspace\",\n      },\n    },\n  ],\n  [CommonActionId.COPY]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"KeyC\",\n      },\n    },\n  ],\n  [CommonActionId.CUT]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"KeyX\",\n      },\n    },\n  ],\n  [CommonActionId.PASTE]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Meta\"],\n        code: \"KeyV\",\n      },\n    },\n  ],\n  [CommonActionId.CODE_COMPLETION]: [\n    {\n      type: \"keyboard\",\n      firstKeyStroke: {\n        modifiers: [\"Control\"],\n        code: \"Space\",\n      },\n    },\n  ],\n};\n","import { fromPairs } from \"ramda\";\nimport { isMac } from \"@react-aria/utils\";\nimport {\n  isKeyboardShortcut,\n  KeyStroke,\n  KeyStrokeModifier,\n  Shortcut,\n} from \"./Shortcut\";\nimport {\n  KeyboardEventKey,\n  LinuxDeadKeys,\n  NumericKeypadKeys,\n  UpperAlpha,\n} from \"./KeyboardEventKey\";\n\nconst defaultKeyToStr: {\n  [key in Exclude<\n    KeyStrokeModifier | KeyboardEventKey,\n    LinuxDeadKeys | UpperAlpha | NumericKeypadKeys\n  >]: string;\n} = {\n  Control: \"Ctrl\",\n  \" \": \"Space\",\n  ArrowDown: \"↓\",\n  ArrowUp: \"↑\",\n  ArrowLeft: \"←\",\n  ArrowRight: \"→\",\n  Enter: \"⏎\",\n  Quote: \"'\",\n  Minus: \"-\",\n  Subtract: \"-\",\n  NumpadAdd: \"+\",\n  Multiply: \"*\",\n  NumpadMultiply: \"*\",\n  Equal: \"+\",\n  Backspace: \"⌫\",\n  // lowercase to uppercase map\n  ...fromPairs(\n    Array.from(Array(26))\n      .map((e, i) => i + \"a\".charCodeAt(0))\n      .map((x) => String.fromCharCode(x))\n      .map((a) => [a, a.toUpperCase()])\n  ),\n};\nconst KeystrokeToString: {\n  separator: string;\n  codeToStr: Record<KeyStrokeModifier | KeyboardEventKey, string>;\n} = isMac()\n  ? {\n      separator: \"\",\n      codeToStr: {\n        ...defaultKeyToStr,\n        Alt: \"⌥\",\n        Shift: \"⇧\",\n        Meta: \"⌘\",\n        Control: \"^\",\n        Escape: \"⎋\",\n      },\n    }\n  : {\n      separator: \"+\",\n      codeToStr: defaultKeyToStr,\n    };\n\nconst modifiersOrder: KeyStrokeModifier[] = [\"Control\", \"Alt\", \"Shift\", \"Meta\"];\nexport const keystrokeToString = (keystroke: KeyStroke) => {\n  return [\n    ...(keystroke.modifiers || []).sort(\n      (a, b) => modifiersOrder.indexOf(a) - modifiersOrder.indexOf(b)\n    ),\n    keystroke.code,\n  ]\n    .map((code) => KeystrokeToString.codeToStr[code] || code)\n    .map((code) => code.replace(/^(Key|Digit|Numpad)(.)$/, \"$2\"))\n    .join(KeystrokeToString.separator);\n};\nexport const shortcutToString = (shortcut: Shortcut) => {\n  if (isKeyboardShortcut(shortcut)) {\n    return [shortcut.firstKeyStroke, shortcut.secondKeyStroke]\n      .filter((i): i is KeyStroke => i != undefined)\n      .map(keystrokeToString)\n      .join(\", \");\n  }\n  throw new Error(\"Not implemented yet\");\n};\n","import { useAction } from \"./ActionsProvider\";\nimport { isResolvedActionGroup, ResolvedActionGroup } from \"./ActionGroup\";\n\nexport const useActionGroup = (\n  actionGroupId: string\n): ResolvedActionGroup | null => {\n  const action = useAction(actionGroupId);\n  if (action) {\n    if (isResolvedActionGroup(action)) {\n      return action;\n    }\n    throw new Error(`Action with id ${actionGroupId} is not a group`);\n  }\n  return null;\n};\n","import React from \"react\";\nimport {\n  ModalWindow,\n  ModalWindowProps,\n} from \"@intellij-platform/core/ModalWindow\";\nimport { OverlayMoveHandle } from \"@intellij-platform/core/Overlay\";\nimport { styled } from \"../styled\";\nimport { StyledWindowContainer } from \"@intellij-platform/core/ModalWindow/ModalWindow\";\nimport { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport { ButtonGroup } from \"@intellij-platform/core/ButtonGroup\";\nimport { isEventOnEmptySpaces } from \"@intellij-platform/core/utils/interaction-utils/useMove\";\n\nexport interface AlertDialogProps\n  extends Pick<ModalWindowProps, \"minWidth\" | \"id\" | \"onClose\"> {\n  /**\n   * Content slot for the heading, aka. title of the dialog. Typically plain text.\n   */\n  heading?: React.ReactNode;\n  /**\n   * Content slot for the body, aka. message of the dialog. Typically plain text.\n   */\n  body?: React.ReactNode;\n  /**\n   * Content slot for the checkbox (\"Do not ask again\").\n   * @example\n   * ```jsx\n   * <AlertDialog checkbox={<Checkbox>Do not ask again</Checkbox>} />\n   * ```\n   * @see Checkbox\n   */\n  checkbox?: React.ReactNode;\n\n  /**\n   * Type of the alert dialog. The icon is set based on type.\n   */\n  type?: \"error\" | \"warning\" | \"information\" | \"question\";\n\n  /**\n   * Content slot for buttons.\n   * @example\n   * ```jsx\n   * <AlertDialog\n   *   buttons={\n   *     <>\n   *       <Button>Cancel</Button>\n   *       <Button variant=\"default\">Ok</Button>\n   *     </>\n   *   }\n   * />\n   * ```\n   * @see Button\n   */\n  buttons?: React.ReactNode;\n\n  /**\n   * Content slot for help icon button in the footer.\n   * @example\n   * ```jsx\n   * <AlertDialog\n   *   helpButton={\n   *     <TooltipTrigger tooltip={<HelpTooltip helpText=\"Show Help Contents\" />}>\n   *       <Button variant=\"icon\">\n   *         <PlatformIcon icon=\"actions/help\"></PlatformIcon>\n   *       </Button>\n   *     </TooltipTrigger>\n   *   }\n   * />\n   * ```\n   * @see Button\n   */\n  helpButton?: React.ReactNode;\n}\n\nconst StyledModalWindow = styled(ModalWindow)`\n  ${StyledWindowContainer} {\n    border-radius: 0;\n    outline: 0.5px solid rgba(0, 0, 0, 0.85); // FIXME\n  }\n`;\n\nconst StyledContainer = styled.div`\n  padding: 1.25rem;\n  display: grid;\n  grid-template-columns: auto 1fr;\n  grid-template-rows: auto auto;\n  align-items: center;\n  gap: 0.875rem;\n`;\n\nconst StyledHeading = styled.h2`\n  margin: 0;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  font-weight: bold;\n`;\n\nconst StyledBody = styled.div`\n  line-height: 1.2;\n`;\n\nconst StyledContent = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  cursor: default;\n`;\n\nconst StyledCheckbox = styled.div`\n  padding: 0.375rem 0;\n  // to align the checkbox with the content, since the box has a padding. Maybe Checkbox should not have any padding.\n  margin-left: -0.25rem;\n`;\n\nconst StyledButtons = styled(ButtonGroup)`\n  display: flex;\n  justify-self: end;\n  gap: 1rem;\n`;\n\nconst StyledIcon = styled.span`\n  align-self: start;\n`;\n\nconst StyledHelpIcon = styled.div`\n  justify-self: center;\n`;\n\n/**\n * A modal dialog implementing [Alert](https://jetbrains.github.io/ui/controls/alert), which is the\n * [notification](https://jetbrains.github.io/ui/controls/notifications/) pattern for use cases where\n * immediate user action is required.\n * Since the use cases are quite specific, and the component is expected to be used with pretty specific\n * content items, the layout is not implemented as a separate component, the way it is in components like\n * {@link ModalWindow} or {@link Menu}\n *\n *\n */\nexport const AlertDialog = ({\n  type = \"question\",\n  heading,\n  body,\n  checkbox,\n  helpButton,\n  buttons,\n  minWidth = 370,\n  ...otherProps\n}: AlertDialogProps): JSX.Element => {\n  return (\n    <StyledModalWindow\n      role=\"alertdialog\"\n      interactions=\"move\"\n      minWidth={minWidth}\n      defaultBounds={{\n        top: window.innerHeight / 4,\n      }}\n      // Reacting to content size, to make sure the content will be visible, considering the window is not resizable.\n      observeContentResize\n      {...otherProps}\n    >\n      <OverlayMoveHandle dragThreshold={6} canMoveStart={isEventOnEmptySpaces}>\n        {({ moveHandleProps }) => (\n          <StyledContainer {...moveHandleProps}>\n            <StyledIcon>\n              {/* Icon name is theme-able in the reference impl via OptionPane[`${icon}Icon`] */}\n              <PlatformIcon size={32} icon={`general/${type}Dialog`} />\n            </StyledIcon>\n            <StyledContent>\n              <StyledHeading>{heading}</StyledHeading>\n              <StyledBody>{body}</StyledBody>\n              {checkbox && <StyledCheckbox>{checkbox}</StyledCheckbox>}\n            </StyledContent>\n            <StyledHelpIcon>{helpButton}</StyledHelpIcon>\n            <StyledButtons>{buttons}</StyledButtons>\n          </StyledContainer>\n        )}\n      </OverlayMoveHandle>\n    </StyledModalWindow>\n  );\n};\n","import React, { ReactNode } from \"react\";\nimport { useWindowManager } from \"@intellij-platform/core/ModalWindow\";\nimport { Button } from \"@intellij-platform/core/Button\";\n\nimport { AlertDialog } from \"./AlertDialog\";\n\nexport interface AlertDialogApi {\n  confirm(options: {\n    title: ReactNode;\n    message: ReactNode;\n    okText?: string;\n    cancelText?: string;\n  }): Promise<boolean>;\n}\n\n/**\n * Similar to com.intellij.openapi.ui.Messages class in the reference impl, provides helper functions\n * to show different types of Alert dialog. The helper functions return a Promise of the selected option,\n * which makes it easy to use it imperatively, in a flow of statements, regardless of how the UI of the\n * alert dialog is handled.\n * {@link useAlertDialog} depends on {@link WindowManager}, to imperatively open modal windows.\n * @experimental\n */\nexport function useAlertDialog(): AlertDialogApi {\n  const { open } = useWindowManager();\n  return {\n    confirm: ({ title, message, okText = \"Ok\", cancelText = \"Cancel\" }) =>\n      new Promise((resolve) => {\n        open(({ close }) => (\n          <AlertDialog\n            type=\"question\"\n            body={message}\n            heading={title}\n            buttons={\n              <>\n                <Button onPress={close}>{cancelText}</Button>\n                <Button\n                  variant=\"default\"\n                  onPress={() => {\n                    resolve(true);\n                    close();\n                  }}\n                >\n                  {okText}\n                </Button>\n              </>\n            }\n            onClose={() => resolve(false)}\n          />\n        ));\n      }),\n  };\n}\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { Theme, UnknownThemeProp } from \"@intellij-platform/core/Theme\";\n\nconst CORNER_RADIUS = 12; // it used to be 8. After introduction of Notifications tool window, it's 12\n\nconst bgColor = ({ theme }: { theme: Theme }) =>\n  theme.color(\n    \"Notification.background\",\n    !theme.dark ? \"rgb(242,242,242)\" : \"#4E5052\"\n  );\n\nexport const StyledHeaderActions = styled.div`\n  position: absolute;\n  right: 0;\n  top: 0;\n  background: inherit;\n  padding: 0.375rem 0.5rem 0;\n  &::before {\n    content: \"\";\n    position: absolute;\n    right: 100%;\n    background: linear-gradient(90deg, transparent, ${bgColor});\n    width: 20px;\n    height: 100%;\n    z-index: 1;\n    top: 0;\n  }\n`;\n\nexport const StyledBalloonContainer = styled.div`\n  line-height: 1.2;\n  box-sizing: border-box;\n  overflow: hidden; // header actions overflows a little at the top right rounded corner\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2); // shadow doesn't seem to be themed\n  padding: 0.5rem 0;\n  border: 1px solid\n    ${({ theme }) =>\n      theme.color(\n        \"Notification.borderColor\",\n        !theme.dark ? \"#B2B2B2CD\" : \"#565A5CCD\"\n      )};\n  border-radius: ${({ theme }) =>\n    `${\n      (theme.value<number>(\n        \"Notification.arc\" as UnknownThemeProp<\"Notification.arc\">\n      ) ?? CORNER_RADIUS) / 2\n    }px`};\n  //display: inline-flex;\n  width: 23.3125rem;\n  position: relative;\n  background-color: ${bgColor};\n  color: ${({ theme }) =>\n    theme.color(\n      \"Notification.foreground\",\n      !theme.dark ? \"#000\" : \"rgb(191,191,191)\"\n    )};\n\n  ${StyledHeaderActions} {\n    display: none;\n  }\n  &:hover ${StyledHeaderActions} {\n    display: initial;\n  }\n`;\n\nexport const StyledIconContainer = styled.span`\n  position: absolute;\n  left: 0.75rem;\n  top: 0.5rem;\n`;\n\nexport const StyledBalloonHeader = styled.div`\n  line-height: 1rem;\n  font-weight: bold;\n  margin: 0 2.125rem 0.25rem;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis; // this is not the case in original impl, but it's a clear improvement\n`;\n\nexport const StyledBalloonBody = styled.div<{\n  lineClamp: number | false;\n}>`\n  margin: 0 2.125rem 0 2.125rem;\n  line-height: 1rem;\n  display: inline;\n  -webkit-line-clamp: ${({ lineClamp }) => lineClamp};\n  word-break: ${({ lineClamp }) => lineClamp === 1 && \"break-all\"};\n  text-overflow: ellipsis;\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  word-wrap: break-word;\n`;\n\nexport const StyledBalloonFooter = styled.div`\n  margin: 0.375rem 1.875rem 0 2.125rem;\n  display: inline-flex;\n  white-space: nowrap;\n  overflow: hidden;\n  gap: 1rem;\n\n  // could be -webkit-fill-available too, if it has good support. Probably it doesn't tho\n  max-width: calc(100% - 3.5rem);\n`;\n\nexport const StyledToggleIconContainer = styled.span`\n  display: inline-flex;\n  position: absolute;\n  right: 0.5rem;\n  bottom: 0;\n  background-color: ${bgColor};\n  padding-left: 0.5rem;\n`;\n\nexport const StyledToggleExpandButtonContainer = styled.span`\n  display: block;\n  position: relative; // for icon absolute positioning\n  cursor: pointer;\n  flex: 1;\n`;\n\nexport const StyledToggleExpandButtonFooterContainer = styled(\n  StyledToggleExpandButtonContainer\n)`\n  min-height: 1.5rem;\n  margin: -0.5rem 0;\n  position: relative;\n  z-index: 1;\n  ${StyledToggleIconContainer} {\n    bottom: 0.5rem;\n  }\n  ${StyledBalloonFooter} {\n    margin-top: 0.875rem;\n    margin-bottom: 0.5rem;\n  }\n  ${StyledBalloonFooter}:hover + * .icon[data-hover] {\n    display: none;\n  }\n  ${StyledBalloonFooter}:hover + * .icon {\n    display: unset;\n  }\n`;\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { IconProps } from \"@intellij-platform/core/Icon/IconProps\";\nimport {\n  AutoHoverPlatformIcon,\n  PlatformIcon,\n} from \"@intellij-platform/core/Icon\";\nimport { ControlledStateProps } from \"@intellij-platform/core/type-utils\";\nimport { useControlledState } from \"@react-stately/utils\";\nimport {\n  StyledBalloonBody,\n  StyledBalloonContainer,\n  StyledBalloonFooter,\n  StyledBalloonHeader,\n  StyledHeaderActions,\n  StyledIconContainer,\n  StyledToggleExpandButtonContainer,\n  StyledToggleExpandButtonFooterContainer,\n  StyledToggleIconContainer,\n} from \"@intellij-platform/core/Balloon/Balloon.styled\";\nimport { DOMProps } from \"@react-types/shared\";\nimport { Link } from \"@intellij-platform/core/Link\";\n\nexport type BalloonProps = ControlledStateProps<{ expanded: boolean }> &\n  DOMProps & {\n    /**\n     * Icon rendered in the top left\n     */\n    icon?: \"Info\" | \"Warning\" | \"Error\" | React.ReactElement<IconProps>;\n    /**\n     * Rendered beside close button. Can be used for rendering a \"notification settings\" icon button.\n     */\n    headerActions?: React.ReactNode;\n    /**\n     * Called when the close button is clicked. If not passed, close button will not be rendered.\n     */\n    onClose?: () => void;\n    /**\n     * Actions rendered in the footer.\n     */\n    actions?: React.ReactNode;\n  } & (\n    | {\n        title?: React.ReactNode;\n        body: React.ReactNode;\n      }\n    | {\n        title: React.ReactNode;\n        body?: React.ReactNode;\n      }\n  );\n\ntype BalloonContextObj = {\n  onClose?: () => void;\n};\nconst BalloonContext = React.createContext<BalloonContextObj | null>(null);\n\n/**\n * A tiny wrapper around {@link Link} component, to be used for actions in Balloon.\n * It closes the balloon when pressed.\n */\nexport const BalloonActionLink: typeof Link = React.forwardRef(\n  ({ onPress, ...props }, ref) => {\n    const context = useContext(BalloonContext);\n    if (context === null) {\n      throw new Error(\n        \"BalloonActionLink should only be rendered inside Balloon notifications\"\n      );\n    }\n    return (\n      <Link\n        ref={ref}\n        {...props}\n        onPress={(...args) => {\n          context?.onClose?.();\n          return onPress?.(...args);\n        }}\n      />\n    );\n  }\n);\n/**\n * [Balloon notification](https://jetbrains.github.io/ui/controls/balloon/) UI.\n *\n * Notes and TODO:\n * - Add support for \"error\" variant: https://github.com/JetBrains/intellij-community/blob/48c024fcd38bd8d1eccdada05489a8952a494270/platform/platform-impl/src/com/intellij/diagnostic/IdeMessagePanel.java#L215\n * - Add support for timeout. Although if the auto close behaviour is only timeout-based, maybe there is not much value in adding a prop for it and calling onClose on timeout.\n * - BalloonActions component to be used for rendering a bunch of links in the actions. It should encapsulate the\n *   behaviour of moving actions into a menu when there is not enough room.\n */\nexport const Balloon = ({\n  icon: iconProp = \"Info\",\n  expanded: expandedProp,\n  defaultExpanded = false,\n  onExpandedChange,\n  title,\n  headerActions,\n  onClose,\n  body,\n  actions,\n  ...containerProps\n}: BalloonProps): React.ReactElement => {\n  const bodyRef = useRef<HTMLDivElement>(null);\n  const [expandable, setExpandable] = useState(false);\n  const [expanded, setExpanded] = useControlledState(\n    expandedProp!,\n    defaultExpanded,\n    onExpandedChange!\n  );\n  const maxLinesWhenNotExpanded = 1 + (title ? 0 : 1) + (actions ? 0 : 1);\n\n  useEffect(() => {\n    const bodyElem = bodyRef.current;\n    if (bodyElem) {\n      setExpandable(\n        expanded\n          ? getNumLines(bodyElem) > maxLinesWhenNotExpanded\n          : bodyElem.scrollHeight > bodyElem.clientHeight\n      );\n    } else {\n      setExpandable(false);\n    }\n  }, [expanded]);\n  const validIconTypes = [\"Error\", \"Warning\", \"Info\"] as const;\n  const icon =\n    typeof iconProp === \"string\" ? (\n      <PlatformIcon\n        icon={`general/notification${validIconTypes.find(\n          (iconType, index, arr) =>\n            iconType === iconProp || index === arr.length - 1\n        )}.svg`}\n      />\n    ) : (\n      iconProp\n    );\n  // @ts-expect-error support for callback updater is removed from useControlledState. https://github.com/adobe/react-spectrum/issues/2320\n  const toggle = () => setExpanded((expanded) => !expanded);\n\n  const effectiveExpanded = expanded && Boolean(body);\n\n  return (\n    <BalloonContext.Provider value={{ onClose }}>\n      <StyledBalloonContainer data-testid=\"balloon\" {...containerProps}>\n        <StyledIconContainer>{icon}</StyledIconContainer>\n        {title && <StyledBalloonHeader>{title}</StyledBalloonHeader>}\n        <StyledHeaderActions>\n          {headerActions}\n          {onClose && (\n            <AutoHoverPlatformIcon\n              icon=\"ide/notification/close.svg\"\n              onClick={onClose}\n              role=\"button\"\n              data-testid=\"close-btn\"\n              style={{ marginLeft: \"0.75rem\" }}\n            />\n          )}\n        </StyledHeaderActions>\n        {body && (\n          <ToggleWrapper\n            expanded={effectiveExpanded}\n            enabled={expandable && !effectiveExpanded}\n            onToggle={toggle}\n          >\n            <StyledBalloonBody\n              lineClamp={!effectiveExpanded && maxLinesWhenNotExpanded}\n              ref={bodyRef}\n            >\n              {body}\n            </StyledBalloonBody>\n          </ToggleWrapper>\n        )}\n        <ToggleWrapper\n          expanded={effectiveExpanded}\n          enabled={expandable && effectiveExpanded}\n          onToggle={toggle}\n          Component={StyledToggleExpandButtonFooterContainer}\n        >\n          {actions && (\n            <StyledBalloonFooter onClick={(e) => e.stopPropagation()}>\n              {actions}\n            </StyledBalloonFooter>\n          )}\n        </ToggleWrapper>\n      </StyledBalloonContainer>\n    </BalloonContext.Provider>\n  );\n};\n\n/**\n * If enabled wraps its children in a clickable area (with the expand/collapse arrow),f for toggling expanded state.\n */\nconst ToggleWrapper: React.FC<{\n  children?: React.ReactNode;\n  enabled: boolean;\n  expanded: boolean;\n  Component?: typeof StyledToggleExpandButtonContainer;\n  onToggle: () => void;\n}> = ({\n  children,\n  onToggle,\n  expanded,\n  enabled,\n  Component = StyledToggleExpandButtonContainer,\n}) => {\n  const iconName = expanded ? \"collapse\" : \"expand\";\n  const toggleIcon = (\n    <StyledToggleIconContainer>\n      <AutoHoverPlatformIcon\n        hoverContainerSelector={`${Component}`}\n        icon={`ide/notification/${iconName}.svg`}\n        className=\"icon\"\n      />\n    </StyledToggleIconContainer>\n  );\n\n  return enabled ? (\n    <Component\n      onClick={onToggle}\n      role=\"button\"\n      data-testid={`${expanded ? \"collapse\" : \"expand\"}-btn`}\n    >\n      {children}\n      {toggleIcon}\n    </Component>\n  ) : (\n    <>{children}</>\n  );\n};\n\n/**\n * Based on the computed line-height and clientHeight of the element, returns the number of lines of the content.\n */\nfunction getNumLines(bodyElem: Element) {\n  return (\n    bodyElem.clientHeight / parseFloat(getComputedStyle(bodyElem).lineHeight)\n  );\n}\n","import React, {\n  ReactElement,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Balloon, BalloonProps } from \"./Balloon\";\nimport { StyledBalloonsStack } from \"./StyledBalloonsStack\";\n\ntype ShowProps = Pick<\n  BalloonProps,\n  \"title\" | \"icon\" | \"body\" | \"actions\" | \"headerActions\"\n>;\n\nexport interface BalloonManagerAPI {\n  /**\n   * Shows a Balloon notification on the bottom left of the screen.\n   * @param props: Props to pass to the Balloon component\n   * @param [autoHideTimeout=10_000] timeout in ms for hiding the balloon notification.\n   * @returns hide function, in case the notification can expire for some reason.\n   */\n  show(props: ShowProps, autoHideTimeout?: number): () => void;\n  showSticky(props: ShowProps): () => void;\n}\n\nconst NotImplementedFn = () => {\n  throw new Error(\"You must render a BalloonManager...\");\n};\n\nconst BalloonsContext = React.createContext<BalloonManagerAPI>({\n  show: NotImplementedFn,\n  showSticky: NotImplementedFn,\n});\n\nexport const useBalloonManager = (): BalloonManagerAPI =>\n  useContext(BalloonsContext);\n\ntype BalloonElement = ReactElement<BalloonProps, typeof Balloon>;\n\nexport interface BalloonManagerProps {\n  disablePortal?: boolean;\n  BalloonsContainer?: React.ElementType;\n  children?: React.ReactNode;\n}\n\n/**\n * Enables imperative API (via {@link useBalloonManager}) for showing Balloon notifications on the bottom right of the screen.\n * It renders notifications in a portal appended to `body`, unless `disablePortal` is `true`.\n *\n * @param disablePortal: if `true`, the container for notifications will not be rendered in a portal\n * @param BalloonsContainer: container component for the notifications. It's {@link StyledBalloonsStack} by default.\n *\n * TODO: fade in/out transition. Notes:\n *  - Doesn't seem fade-in is needed. Tho it's much easier than fade-out, as it can be achieved with a css animation.\n *  - Fade out should happen only when the balloon is being hidden by timeout.\n * TODO: Support for maximum number of notifications and showing \"x more notification(s)\" button if the limit exceeds\n */\n\nexport const BalloonManager: React.FC<BalloonManagerProps> = ({\n  children,\n  disablePortal,\n  BalloonsContainer = StyledBalloonsStack,\n}) => {\n  const [balloons, setBalloons] = useState<Array<BalloonElement>>([]);\n  const timeoutIdsRef = useRef<number[]>([]);\n  const lastIdRef = useRef<number>(0);\n\n  const api = useMemo<BalloonManagerAPI>(() => {\n    const show: BalloonManagerAPI[\"show\"] = (props, timeout = 10_000) => {\n      lastIdRef.current++;\n      const onClose = () => {\n        setBalloons((balloons) =>\n          balloons.filter((aBalloon) => aBalloon !== balloon)\n        );\n      };\n      const balloon = (\n        <Balloon\n          key={lastIdRef.current}\n          {...props}\n          title={props.title} // TS acts unreasonable without this\n          onClose={onClose}\n        />\n      );\n      setBalloons((balloons) => {\n        if (timeout > 0) {\n          const timeoutId = window.setTimeout(() => {\n            onClose();\n            timeoutIdsRef.current = timeoutIdsRef.current.filter(\n              (aTimeoutId) => aTimeoutId !== timeoutId\n            );\n          }, timeout);\n          timeoutIdsRef.current = [...timeoutIdsRef.current, timeoutId];\n        }\n        return balloons.concat(balloon);\n      });\n      return onClose;\n    };\n    return {\n      show,\n      showSticky: (props) => show(props, 0),\n    };\n  }, []);\n\n  // clear timeouts when unmounted\n  useEffect(() => {\n    return () => {\n      timeoutIdsRef.current.forEach((id) => {\n        window.clearTimeout(id);\n      });\n    };\n  }, []);\n\n  const notificationsStack = (\n    <BalloonsContainer\n      style={{ position: disablePortal ? \"absolute\" : undefined }}\n    >\n      {balloons}\n    </BalloonsContainer>\n  );\n\n  return (\n    <BalloonsContext.Provider value={api}>\n      {children}\n      {disablePortal\n        ? notificationsStack\n        : ReactDOM.createPortal(notificationsStack, document.body)}\n    </BalloonsContext.Provider>\n  );\n};\n","import styled from \"styled-components\";\nimport { StyledBalloonContainer } from \"@intellij-platform/core/Balloon/Balloon.styled\";\n\n/**\n * Container component for stacking a number of Balloons in an overlay placed on the bottom right of where it's rendered.\n */\nexport const StyledBalloonsStack = styled.div`\n  position: fixed;\n  z-index: 1;\n  bottom: 42px;\n  right: 26px;\n  ${StyledBalloonContainer} {\n    margin-bottom: 12px;\n  }\n`;\n","import React, { ForwardedRef, JSXElementConstructor } from \"react\";\nimport { useButton } from \"@react-aria/button\";\nimport { filterDOMProps, mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport {\n  AriaBaseButtonProps,\n  AriaButtonProps,\n  ButtonProps,\n} from \"@react-types/button\";\n\nexport interface BareButtonProps extends AriaBaseButtonProps, ButtonProps {\n  children: React.ReactElement;\n  elementType?: AriaButtonProps[\"elementType\"];\n\n  // NOTE: there is a chance of unchecked breaking change here, since this is not explicitly mentioned as public API\n  // of useButton, but it is passed to the underlying usePress.\n  preventFocusOnPress?: boolean; // Should this be become true by default?\n}\n\n/**\n * A component to make arbitrary content an accessible button which is also able to be a tooltip trigger.\n */\nexport const BareButton = React.forwardRef(function BareButton(\n  { elementType: elementTypeProp, ...props }: BareButtonProps,\n  forwardedRef: ForwardedRef<HTMLElement>\n) {\n  const elementType =\n    elementTypeProp ||\n    (React.isValidElement(props.children) &&\n    typeof props.children.type === \"string\"\n      ? (props.children.type as unknown as JSXElementConstructor<unknown>)\n      : undefined) ||\n    \"button\";\n  const ref = useObjectRef(forwardedRef);\n  const { buttonProps } = useButton(\n    {\n      elementType,\n      ...props,\n    },\n    ref\n  );\n  const domProps = filterDOMProps(props);\n  const { autoFocus } = props;\n\n  return React.cloneElement(\n    props.children,\n    mergeProps(domProps, buttonProps, { autoFocus, ref })\n  );\n});\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\n\nexport const StyledButton = styled.button<{ disabled?: boolean }>`\n  box-sizing: border-box;\n  min-width: 4.5rem; // https://jetbrains.github.io/ui/controls/button/#28\n  padding: 0 0.875rem; // https://jetbrains.github.io/ui/controls/button/#28\n  height: 1.5rem;\n  font-family: inherit;\n  background-color: ${({ theme, disabled }) =>\n    disabled ? \"transparent\" : theme.color(\"Button.startBackground\")};\n  color: ${({ theme, disabled }) =>\n    disabled\n      ? theme.color(\"Button.disabledText\")\n      : theme.color(\n          \"Button.foreground\" as UnknownThemeProp<\"Button.foreground\">\n        )};\n  border: 1px solid\n    ${({ theme, disabled }) =>\n      disabled\n        ? theme.color(\"Button.disabledBorderColor\")\n        : theme.color(\"Button.startBorderColor\")};\n  border-radius: ${({ theme }) =>\n    (theme.value<number>(\"Button.arc\") ?? 6) / 2}px;\n  box-shadow: ${({ theme }) =>\n    theme.value(\"Button.paintShadow\")\n      ? `0 0 0 ${theme.value(\"Button.shadowWidth\") ?? 2}px ${\n          theme.color(\"Button.shadowColor\") ?? // Button.darcula.shadowColor default is skipped.\n          (theme.dark ? \"#36363680\" : \"#a6a6a633\")\n        }`\n      : \"\"};\n  white-space: nowrap; // https://jetbrains.github.io/ui/controls/button/#29\n\n  flex-shrink: 0; // button should not shrink when rendered in a flex container\n\n  &:focus,\n  &.focus /* for testing purposes*/ {\n    border-color: ${({ theme }) =>\n      theme.color(\"Button.focusedBorderColor\", \"#87afda\")};\n    outline: none;\n    box-shadow: ${({ theme }) =>\n      `0 0 0 2px ${\n        // NOTE: by not using the second argument for default value, we prioritize *.focusColor over the rest.\n        theme.color(\"Component.focusColor\") ??\n        theme.color(\n          \"Focus.borderColor\" as UnknownThemeProp<\"Focus.borderColor\">,\n          \"#8ab2eb\"\n        )\n      }`};\n  }\n`;\nexport const StyledDefaultButton = styled(StyledButton)`\n  background-color: ${({ theme, disabled }) =>\n    !disabled && theme.color(\"Button.default.startBackground\", \"#384f6b\")};\n  color: ${({ theme, disabled }) =>\n    !disabled && theme.color(\"Button.default.foreground\")};\n  border-color: ${({ theme, disabled }) =>\n    !disabled && theme.color(\"Button.default.startBorderColor\", \"#BFBFBF\")};\n  &:focus,\n  &.focus /* for testing purposes*/ {\n    border-color: ${({ theme }) =>\n      theme.color(\"Button.default.focusedBorderColor\", \"#87afda\")};\n  }\n`;\n\nexport const StyledIconButton = styled(StyledButton)`\n  border-radius: 1000px;\n  padding: 0;\n  line-height: 0;\n  min-width: 0;\n  height: 1.5rem;\n  width: 1.5rem;\n`;\n","import React, {\n  ButtonHTMLAttributes,\n  CSSProperties,\n  ForwardedRef,\n} from \"react\";\nimport { useButton } from \"@react-aria/button\";\nimport { AriaButtonProps } from \"@react-types/button\";\nimport { filterDOMProps, mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport {\n  StyledButton,\n  StyledDefaultButton,\n  StyledIconButton,\n} from \"@intellij-platform/core/Button/StyledButton\";\nimport { MnemonicTrigger } from \"@intellij-platform/core/Mnemonic\";\nimport { PressEvent } from \"@react-types/shared/src/events\";\n\ntype ButtonVariant = \"default\" | \"icon\";\nexport interface ButtonProps extends AriaButtonProps {\n  variant?: ButtonVariant; // can allow for custom (styled) component too if needed.\n  // NOTE: there is a chance of unchecked breaking change here, since this is not explicitly mentioned as public API\n  // of useButton, but it is passed to the underlying usePress.\n  // Should this be become true by default? Maybe an context-based API to set defaults like this for a section?\n  preventFocusOnPress?: boolean;\n\n  form?: ButtonHTMLAttributes<HTMLButtonElement>[\"form\"];\n  style?: CSSProperties;\n  /**\n   * A character to be used as {@link https://jetbrains.design/intellij/principles/mnemonics/ mnemonic} for the button\n   * It will be shown as underlined in button text, when mnemonic is activated (by pressing Alt)\n   * Note: if you use mnemonic, and the direct child of the button is not a string, you should use `MnemonicText`\n   * to render the button text, to have the underlining behavior.\n   */\n  mnemonic?: string;\n  className?: string;\n\n  /**\n   * Called when the button is pressed, or triggered via mnemonic. If mnemonic is used, there won't be any event\n   * passed to onPress callback.\n   */\n  onPress?: (e?: PressEvent) => void;\n}\n\nconst variants: { [key in ButtonVariant]: typeof StyledButton } = {\n  default: StyledDefaultButton,\n  icon: StyledIconButton,\n};\n\n/**\n * https://jetbrains.github.io/ui/controls/button/\n *\n * TODO:\n * - Support for \"default\" button behaviour. it's kind of similar to a <button type=\"submit\" /> in html, but textarea\n * behaviour is different from what is explained here: https://jetbrains.github.io/ui/controls/button/#16\n * Cmd+Enter should always trigger onPress. Plus, maybe it should work independent of \"form\" being used? or maybe it's\n * not a big deal to expect an ancestor \"form\" element, when variant is \"default\"?\n * - \"Default\" style differences in Windows.\n * - Gradient colors (low hanging fruit, but negligible added value).\n *\n * Known issues:\n * - In the original impl, default button looks the same as normal button, when focus is not within the same area that\n * the button is. For example in the commit tool window, \"Commit\" button which is default, is not blue, unless the\n * \"Commit\" tool window is focused. This particular case can easily be achieved by conditionally setting variant to,\n * \"default\" based on tool window focus state, which is accessible via useDefaultToolWindowContext(), if\n * DefaultToolWindow is used. But we need to see if the same requirement exists in various places.\n * NOTE: this item is related to the first item in the to-do list above. There can be a container kind of component,\n * which enables \"default\" behaviour and look. Maybe it can be FocusScope or at least related to FocusScope.\n * - In the original impl, there is no visual clue for pressed state, which is poor accessibility. For now, the same\n * behaviour is followed here too. But we may reconsider deviating from the original impl for an improvement here.\n *\n */\nexport const Button: React.FC<ButtonProps> = React.forwardRef(function Button(\n  { variant, style, className, mnemonic, ...props }: ButtonProps,\n  forwardedRef: ForwardedRef<HTMLButtonElement>\n) {\n  const ref = useObjectRef(forwardedRef);\n  const { buttonProps } = useButton(props, ref);\n  const domProps = filterDOMProps(props);\n  const { autoFocus, form } = props;\n\n  const Component = (variant && variants[variant]) || StyledButton;\n  return (\n    <Component\n      {...mergeProps(domProps, buttonProps, { autoFocus, form })}\n      style={style}\n      className={className}\n      ref={ref}\n    >\n      {mnemonic ? (\n        <MnemonicTrigger\n          mnemonic={mnemonic}\n          isDisabled={props.isDisabled}\n          onTriggered={props.onPress}\n        >\n          {props.children}\n        </MnemonicTrigger>\n      ) : (\n        props.children\n      )}\n    </Component>\n  );\n});\n","import React, { CSSProperties, ReactNode } from \"react\";\nimport { DOMAttributes, FocusableElement } from \"@react-types/shared\";\nimport { FocusScope, useFocusManager } from \"@react-aria/focus\";\nimport { useKeyboard } from \"@react-aria/interactions\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { hasAnyModifier } from \"@intellij-platform/core/utils/keyboard-utils\";\nimport { styled } from \"@intellij-platform/core/styled\";\n\nexport interface ButtonGroupProps {\n  children: ReactNode;\n  className?: string;\n  style?: CSSProperties;\n}\n\nconst StyledButtonGroup = styled.div`\n  display: inline-flex;\n  align-items: center;\n  gap: 0.75rem;\n`;\n\n/**\n * `ButtonGroup` should be used as a wrapper around related {@link Button Buttons}, in places such as the\n * footer of a dialog. It does two things:\n * - allows for moving the focus between the buttons with left/right arrow keys.\n * - applies the right spacing between the buttons\n *\n * @see Button\n */\nexport function ButtonGroup(props: ButtonGroupProps) {\n  return (\n    <FocusScope>\n      <HorizontalArrowKeyNavigation>\n        {(arrowKeyNavigationProps) => (\n          <StyledButtonGroup {...mergeProps(props, arrowKeyNavigationProps)} />\n        )}\n      </HorizontalArrowKeyNavigation>\n    </FocusScope>\n  );\n}\n\nfunction HorizontalArrowKeyNavigation({\n  children,\n}: {\n  children: (props: DOMAttributes<FocusableElement>) => ReactNode;\n}) {\n  const focusManager = useFocusManager();\n  const { keyboardProps } = useKeyboard({\n    onKeyDown: (e) => {\n      if (!hasAnyModifier(e)) {\n        if (e.key === \"ArrowLeft\") {\n          return focusManager?.focusPrevious({ wrap: true });\n        } else if (e.key === \"ArrowRight\") {\n          return focusManager?.focusNext({ wrap: true });\n        }\n      }\n      e.continuePropagation();\n    },\n  });\n\n  return <>{children(keyboardProps)}</>;\n}\n","import React, { HTMLProps, ReactNode } from \"react\";\nimport { useToggleState } from \"@react-stately/toggle\";\nimport { useCheckbox } from \"@react-aria/checkbox\";\nimport {\n  AriaLabelingProps,\n  FocusableDOMProps,\n  FocusableProps,\n  InputBase,\n} from \"@react-types/shared\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { styled } from \"@intellij-platform/core/styled\";\n\nimport { CheckboxIcon } from \"./CheckboxIcon\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { MnemonicTrigger } from \"@intellij-platform/core/Mnemonic\";\n\nexport interface CheckboxProps\n  extends InputBase,\n    FocusableDOMProps,\n    AriaLabelingProps,\n    FocusableProps {\n  /**\n   * If set to true, the checkbox won't be focusable.\n   * Common use cases:\n   * - When checkbox is rendered in a focusable container, like a list item where the focus should not be taken away\n   *   from that container.\n   * - \"Amend\" checkbox in \"Commit\" tool window. The focus is kept in the commit message or changes tree, perhaps, for\n   *   a questionably better UX.\n   * Note: Passing {@link excludeFromTabOrder} will still let the checkbox be focusable, while `preventFocus`, doesn't\n   * let the component get focused at all.\n   * TODO(potential): it might be nicer to have a `preventFocusOnPress` prop consistent with IconButton, instead.\n   *  In that case preventing focus completely would be achieved with `preventFocusOnPres` and `excludeFromTabOrder`.\n   */\n  preventFocus?: boolean;\n\n  /**\n   * By default, focus ring is always shown when the checkbox is focused, independent of the interaction method.\n   * if set to false, the focus will be only visible if the interaction is done via keyboard or screen readers.\n   * Similar to how [:focus-visible](https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible) works.\n   */\n  disableFocusAlwaysVisible?: boolean;\n\n  /**\n   * Indeterminism is presentational only.\n   * The indeterminate visual representation remains regardless of user interaction.\n   */\n  isIndeterminate?: boolean;\n\n  /**\n   * The label for the element.\n   */\n  children?: ReactNode;\n\n  /**\n   * Whether the element should be selected (uncontrolled).\n   */\n  defaultSelected?: boolean;\n  /**\n   * Whether the element should be selected (controlled).\n   */\n  isSelected?: boolean;\n  /**\n   * Handler that is called when the element's selection state changes.\n   */\n  onChange?: (isSelected: boolean) => void;\n  /**\n   * The value of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefvalue).\n   */\n  value?: string;\n  /**\n   * The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).\n   */\n  name?: string;\n\n  className?: string; // to support styled-components\n\n  /**\n   * A character to be used as {@link https://jetbrains.design/intellij/principles/mnemonics/ mnemonic} for the button\n   * It will be shown as underlined in button text, when mnemonic is activated (by pressing Alt)\n   * Note: if you use mnemonic, and the direct child of the button is not a string, you should use `Mnemonic.Text`\n   * to render the button text, to have the underlining behavior.\n   */\n  mnemonic?: string;\n}\n\nconst StyledWrapperLabel = styled.label`\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n`;\n\nconst StyledCheckboxLabelText = styled.span<{\n  isDisabled: boolean | undefined;\n}>`\n  margin-left: 0.25rem;\n  color: ${({ theme, isDisabled }) =>\n    isDisabled\n      ? theme.color(\n          \"CheckBox.disabledText\" as UnknownThemeProp<\"CheckBox.disabledText\">,\n          \"#808080\" /* this default value was a bit tricky. Still not clear from where it comes in darcular \n          theme when there is no clue of Checkbox.disabledText or *.disabledText. Note that using \n          CheckBox.disabledForeground is not a good option, because it's something other than #808080 for darcula */\n        )\n      : theme.color(\"*.foreground\")};\n`;\n\nconst StyledInput = styled.input`\n  opacity: 0.0001;\n  position: absolute;\n  z-index: 1;\n  inset: 0;\n  cursor: default;\n  &:disabled {\n    cursor: default;\n  }\n`;\n\n/**\n * Checkbox component to be used with or without a label.\n *\n * While the checkbox without the label + preventFocus makes it usable in tree/list, it might be more optimized to\n * use a more lightweight component like ListItemCheckbox, which uses CheckboxIcon with a simple press handle. Without\n * any input, state, etc.\n */\nexport const Checkbox = ({\n  preventFocus,\n  className,\n  disableFocusAlwaysVisible,\n  mnemonic,\n  ...props\n}: CheckboxProps) => {\n  const state = useToggleState(props);\n  const ref = React.useRef<HTMLInputElement>(null);\n  const { inputProps } = useCheckbox(props, state, ref);\n\n  const { isFocusVisible, isFocused, focusProps } = useFocusRing({\n    autoFocus: props.autoFocus,\n  });\n\n  const focusDisabledProps: Pick<\n    HTMLProps<HTMLInputElement>,\n    \"onFocusCapture\" | \"tabIndex\"\n  > = preventFocus\n    ? {\n        onFocusCapture: (event) => {\n          event.stopPropagation();\n          event.preventDefault();\n          if (event.relatedTarget instanceof HTMLElement) {\n            event.relatedTarget.focus();\n          } else {\n            event.target.blur();\n          }\n        },\n        tabIndex: -1,\n      }\n    : {};\n\n  return (\n    <StyledWrapperLabel className={className}>\n      <StyledInput\n        {...mergeProps(inputProps, focusProps, focusDisabledProps)}\n        ref={ref}\n      />\n      <CheckboxIcon\n        isIndeterminate={props.isIndeterminate}\n        isFocused={disableFocusAlwaysVisible ? isFocusVisible : isFocused}\n        isSelected={props.isIndeterminate || state.isSelected}\n        isDisabled={props.isDisabled}\n        aria-hidden=\"true\"\n        style={{\n          pointerEvents: \"none\",\n        }}\n      />\n      {props.children && (\n        <StyledCheckboxLabelText isDisabled={props.isDisabled}>\n          {mnemonic ? (\n            <MnemonicTrigger\n              mnemonic={mnemonic}\n              isDisabled={props.isDisabled}\n              onTriggered={state.toggle}\n            >\n              {props.children}\n            </MnemonicTrigger>\n          ) : (\n            props.children\n          )}\n        </StyledCheckboxLabelText>\n      )}\n    </StyledWrapperLabel>\n  );\n};\n","import React, { ComponentProps } from \"react\";\nimport { LafIcon } from \"@intellij-platform/core/Icon\";\n\n/**\n * Renders checkbox UI in different states (focused, selected, indeterminate, etc.), without having anything to do\n * with the interactions\n */\nexport const CheckboxIcon = ({\n  isDisabled,\n  isFocused,\n  isIndeterminate,\n  isSelected,\n  ...otherProps\n}: Omit<ComponentProps<typeof LafIcon>, \"size\" | \"icon\"> & {\n  isIndeterminate: boolean | undefined;\n  isFocused: boolean;\n  isDisabled: boolean | undefined;\n  isSelected: boolean;\n}) => {\n  return (\n    <LafIcon\n      {...otherProps}\n      size={20}\n      icon={{\n        name: isIndeterminate ? \"checkBoxIndeterminate\" : \"checkBox\",\n        modifiers: {\n          Disabled: isDisabled,\n          Selected: isSelected || isIndeterminate,\n          Focused: isFocused,\n        },\n      }}\n    />\n  );\n};\n","import React from \"react\";\nimport { Collection, Node } from \"@react-types/shared\";\nimport { CollectionSpeedSearchMatches } from \"./useCollectionSpeedSearchResult\";\n\nexport type CollectionSpeedSearchContextValue = {\n  matches: CollectionSpeedSearchMatches;\n  collection: Collection<Node<unknown>>;\n};\n\nexport const CollectionSpeedSearchContext =\n  React.createContext<CollectionSpeedSearchContextValue | null>(null);\n","import React, { Key, useContext } from \"react\";\nimport { TextWithHighlights } from \"@intellij-platform/core/TextWithHighlights/TextWithHighlights\";\nimport { TextRange } from \"@intellij-platform/core/TextRange\";\nimport { CollectionSpeedSearchContext } from \"@intellij-platform/core/CollectionSpeedSearch/CollectionSpeedSearchContext\";\n\ntype CollectionSpeedSearchItemContextValue = {\n  text: string;\n  highlightedRanges: null | TextRange[];\n};\n\nconst CollectionSpeedSearchItemContext =\n  React.createContext<null | CollectionSpeedSearchItemContextValue>(null);\n\nexport const SpeedSearchItemHighlightsProvider: React.FC<{\n  children?: React.ReactNode;\n  itemKey: Key;\n}> = ({ children, itemKey }) => {\n  const context = useContext(CollectionSpeedSearchContext);\n  if (!context) {\n    throw new Error(\n      `SpeedSearchItemProvider is only meant to be rendered by collection components with speed search. \n      CollectionSpeedSearchContext is expected to be rendered as a wrapper around all items.`\n    );\n  }\n  const item = context.collection.getItem(itemKey);\n  const text = item?.textValue ?? \"\";\n  if (!text && item?.props.textValue === undefined) {\n    console.warn(\n      \"no textValue specified on Item. When using SpeedSearch, you need to specify textValue for item, which will be the basis for search\"\n    );\n  }\n  return (\n    <CollectionSpeedSearchItemContext.Provider\n      value={{\n        highlightedRanges: context.matches.get(itemKey) || null,\n        text: text,\n      }}\n    >\n      {children}\n    </CollectionSpeedSearchItemContext.Provider>\n  );\n};\n\n/**\n * Used inside Item content, to render the textValue of the Item, potentially with highlighted ranges if it's a match\n * in current search.\n */\nexport const HighlightedTextValue = function ({\n  Component = \"span\",\n}: {\n  /**\n   * When rendering in a flex parent (which is the case for tree or list), rendering a container is necessary to have\n   * the right spacing around highlights, when the highlighter span is immediately followed or proceeded by a white\n   * space. By default, a \"span\" is rendered.\n   */\n  Component?: React.ElementType;\n}) {\n  const speedSearchContext = React.useContext(CollectionSpeedSearchItemContext);\n  if (!speedSearchContext) {\n    throw new Error(\n      \"HighlightedTextValue should be rendered only in items of a speed search enabled collection component\"\n    );\n  }\n  const { highlightedRanges, text } = speedSearchContext;\n  return (\n    <Component>\n      {highlightedRanges ? (\n        <TextWithHighlights highlights={highlightedRanges}>\n          {text}\n        </TextWithHighlights>\n      ) : (\n        text\n      )}\n    </Component>\n  );\n};\n","import { Key, useEffect, useMemo } from \"react\";\nimport { minusculeMatch } from \"../minusculeMatch\";\nimport { SpeedSearchState } from \"../SpeedSearch/useSpeedSearch\";\nimport { Collection, Node } from \"@react-types/shared\";\nimport { SelectionManager } from \"@react-stately/selection\";\nimport { createSpeedSearchSelectionManager } from \"./createSpeedSearchSelectionManager\";\nimport { TextRange } from \"@intellij-platform/core/TextRange\";\nimport { useLatest } from \"@intellij-platform/core/utils/useLatest\";\n\nexport type CollectionSpeedSearchMatches = Map<Key, TextRange[]>;\n\nexport function useCollectionSpeedSearchResult<T>({\n  collection,\n  selectionManager: inputSelectionManager,\n  speedSearch,\n  focusBestMatch = false,\n}: {\n  collection: Collection<Node<T>>;\n  selectionManager: SelectionManager;\n  speedSearch: SpeedSearchState;\n  /**\n   * If true, focusing the best match (the longest \"start-with\" match) will be preferred.\n   * By default, the focus is moved to the first match that comes after the currently focused item, if currently\n   * focused item itself is not a match.\n   * A typical use case would be collections that filter out non-match items.\n   * @default false\n   */\n  focusBestMatch?: boolean;\n}) {\n  const { searchTerm, active } = speedSearch;\n\n  /**\n   * Note: when a component is implemented using react-aria's useCollection, any re-render of that component causes\n   * a new collection. That's because prop.children is normally an inline function, and therefore the collection is\n   * re-created: https://github.com/adobe/react-spectrum/blob/4a1cff846018e449487ccf54d7474bdfa4d4f57c/packages/@react-stately/collections/src/useCollection.ts#L29\n   * This means we will unnecessarily perform the search in such cases. it might be a non-issue, but if it turned out\n   * to be an issue, a sub-optimum improvement would be to use `collection.size` as a dependency instead of `collection`,\n   * assuming that searchable text in collections won't change, and assuming that the important changes (search-wise)\n   * will usually involve a size change in the collection.\n   */\n  const { matches } = useMemo(() => {\n    const matches: CollectionSpeedSearchMatches = new Map(); // maybe make it nullable makes more sense\n    if (speedSearch.active) {\n      // it's important not to iterate on items, since they can be nested.\n      [...collection.getKeys()]\n        .map((key) => collection.getItem(key)!)\n        .filter(({ type }) => type === \"item\")\n        .forEach((item) => {\n          const matchedRanges = minusculeMatch(item.textValue, searchTerm);\n          if (matchedRanges) {\n            matches.set(item.key, matchedRanges);\n          }\n        });\n    }\n\n    return {\n      matches,\n    };\n  }, [searchTerm, collection, active]);\n\n  const selectionManager = createSpeedSearchSelectionManager(\n    inputSelectionManager,\n    active ? matches : null\n  );\n  const latestValues = useLatest({\n    matches,\n    selectionManager,\n    collection,\n    focusBestMatch,\n  });\n\n  // On every query change, if the current selection doesn't include any of the matched items, move selection to the\n  // first matched item.\n  useEffect(() => {\n    const { selectionManager, matches, collection } = latestValues.current;\n    const matchedKeys = [...matches.keys()];\n    const noneOfTheMatchesAreSelected = !matchedKeys.some((matchedKey) =>\n      selectionManager.isSelected(matchedKey)\n    );\n    let keyToFocus: Key | undefined;\n    if (latestValues.current.focusBestMatch) {\n      keyToFocus = getLongestCommonPrefixMatch(matches);\n    }\n    if (!keyToFocus && matchedKeys.length > 0 && noneOfTheMatchesAreSelected) {\n      keyToFocus = getMatchToSelect({\n        collection,\n        selectionManager,\n        matchedKeys,\n      });\n    }\n    if (keyToFocus) {\n      selectionManager.setFocusedKey(keyToFocus);\n      selectionManager.replaceSelection(keyToFocus);\n    }\n  }, [\n    searchTerm,\n    latestValues /*it's a ref object, so no harm in listing it here to comply with rules of hooks*/,\n  ]);\n  return {\n    matches,\n    selectionManager,\n  };\n}\n\n/**\n * given a non-empty array of matched keys, returns the one that should be selected\n */\nfunction getMatchToSelect({\n  collection,\n  selectionManager,\n  matchedKeys,\n}: {\n  collection: Collection<Node<unknown>>;\n  selectionManager: SelectionManager;\n  matchedKeys: Key[];\n}): Key {\n  let passedFirstSelection = false;\n  for (const key of collection.getKeys()) {\n    if (key === selectionManager.firstSelectedKey) {\n      passedFirstSelection = true;\n    }\n    if (passedFirstSelection && matchedKeys.includes(key)) {\n      return key;\n    }\n  }\n  return matchedKeys[0];\n}\n\n/**\n * Returns the longest match from the beginning, if exists.\n */\nfunction getLongestCommonPrefixMatch(matches: CollectionSpeedSearchMatches) {\n  return [...matches.entries()]\n    .filter(([, [firstRange]]) => firstRange?.from === 0)\n    .sort(\n      ([, [rangeA]], [, [rangeB]]) =>\n        rangeB.to - rangeB.from - rangeA.to - rangeA.from\n    )?.[0]?.[0];\n}\n","import { SelectionManager } from \"@react-stately/selection\";\nimport { Key } from \"react\";\n\nexport function createSpeedSearchSelectionManager(\n  wrappedSelectionManager: SelectionManager,\n  matches: Map<Key, unknown /* We don't care what a match is here */> | null\n): SelectionManager {\n  return Object.create(wrappedSelectionManager, {\n    selectAll: {\n      value: () => {\n        if (matches) {\n          // @ts-expect-error: state is private and there is no API on SelectionManager for bulk\n          // setting selected keys (which would ideally check for not selecting disabled keys internally).\n          const state = wrappedSelectionManager.state;\n          state.setSelectedKeys(\n            new Set(\n              [...matches.keys()].filter((key) => !state.disabledKeys.has(key))\n            )\n          );\n        } else {\n          wrappedSelectionManager.selectAll();\n        }\n      },\n    },\n  });\n}\n","import { HTMLAttributes, RefObject, useMemo } from \"react\";\nimport { Collection, KeyboardDelegate, Node } from \"@react-types/shared\";\nimport { SelectionManager } from \"@react-stately/selection\";\nimport {\n  SpeedSearchPopupProps,\n  SpeedSearchProps,\n} from \"@intellij-platform/core/SpeedSearch\";\nimport {\n  SpeedSearchState,\n  SpeedSearchStateProps,\n  useSpeedSearch,\n  useSpeedSearchState,\n} from \"../SpeedSearch/useSpeedSearch\";\nimport { CollectionSpeedSearchContextValue } from \"./CollectionSpeedSearchContext\";\nimport {\n  CollectionSpeedSearchMatches,\n  useCollectionSpeedSearchResult,\n} from \"./useCollectionSpeedSearchResult\";\nimport { createSpeedSearchKeyboardDelegate } from \"./createSpeedSearchKeyboardDelegate\";\n\nexport interface CollectionSpeedSearch {\n  containerProps: HTMLAttributes<HTMLElement>;\n  selectionManager: SelectionManager;\n  keyboardDelegate: KeyboardDelegate;\n  speedSearch: SpeedSearchState & { matches: CollectionSpeedSearchMatches };\n  searchPopupProps: SpeedSearchPopupProps;\n  speedSearchContextValue: CollectionSpeedSearchContextValue;\n}\n\n/**\n * Given a `collection`, a `selectionManager` and a `keyboardDelegate`, it returns:\n * - `speedSearch`: search term, if speed search is active or not, and the matched keys\n * - `matches`: A Set of matched keys, or `null` if speed search is not active\n * - `containerProps`: The props you need to pass to the collection container element to enable\n * speedSearch on it.\n * - `selectionManager`: a selection manager in which select all is overridden to only select\n * matched items if speed search is active.\n * - `keyboardDelegate`: a keyboard delegate in which limits navigation to matched items, when\n * speed search is active.\n *\n * Speed search options, including the ones for optionally controlling the state of the speed search\n * are also accepted in inputs.\n */\nexport function useCollectionSpeedSearch<T>({\n  collection,\n  selectionManager,\n  keepSearchActiveOnBlur,\n  keyboardDelegate,\n  focusBestMatch,\n  ref,\n  ...speedSearchStateProps\n}: {\n  collection: Collection<Node<T>>;\n  selectionManager: SelectionManager;\n  keyboardDelegate: KeyboardDelegate;\n  ref: RefObject<HTMLElement>;\n  focusBestMatch?: boolean;\n} & SpeedSearchStateProps &\n  Pick<SpeedSearchProps, \"keepSearchActiveOnBlur\">): CollectionSpeedSearch {\n  const speedSearch = useSpeedSearchState(speedSearchStateProps);\n\n  const { matches, selectionManager: speedSearchSelectionManager } =\n    useCollectionSpeedSearchResult({\n      collection,\n      selectionManager,\n      speedSearch,\n      focusBestMatch,\n    });\n  const { containerProps } = useSpeedSearch(\n    { keepSearchActiveOnBlur },\n    speedSearch,\n    ref\n  );\n  const speedSearchKeyboardDelegate = useMemo(\n    () =>\n      createSpeedSearchKeyboardDelegate(\n        keyboardDelegate,\n        speedSearch.active ? matches : null\n      ),\n    [speedSearch.active, keyboardDelegate, matches]\n  );\n\n  // Doesn't seem necessary to wrap with useMemo, but can be rethink-ed\n  const speedSearchContextValue = { matches, collection };\n\n  return {\n    containerProps,\n    selectionManager: speedSearchSelectionManager,\n    keyboardDelegate: speedSearchKeyboardDelegate,\n    speedSearch: {\n      ...speedSearch,\n      matches,\n    },\n    searchPopupProps: {\n      active: speedSearch.active,\n      match: matches.size > 0,\n      children: speedSearch.searchTerm,\n    },\n    speedSearchContextValue,\n  };\n}\n","import React, { Key } from \"react\";\nimport { KeyboardDelegate } from \"@react-types/shared\";\n\n/**\n * Creates a new KeyboardDelegate in which keyKeyBelow and getKeyAbove are overridden in a way that\n * navigation is limited to matched items.\n * Note: select all action is not handled in KeyboardDelegate.\n * Note: when virtualization is added, this probably need to change, like how it's handled\n * in `useListBoxLayout` in react spectrum.\n */\nexport function createSpeedSearchKeyboardDelegate(\n  wrappedKeyboardDelegate: KeyboardDelegate,\n  matches: Map<Key, unknown /*We don't care what a match is, here*/> | null\n): KeyboardDelegate {\n  // TODO: page up and down deactivate speed search. If we want that, we can pass the speedSearch\n  //  object too. but doesn't seem like the best way to do it, even it the same behavior is expected\n  const findFirstMatch = <T extends React.Key | undefined, K>(\n    fromKey: React.Key | undefined | null,\n    direction: \"up\" | \"down\"\n  ) => {\n    let currentKey: React.Key | undefined | null = fromKey;\n    while (currentKey != null) {\n      if (!matches || matches.has(currentKey)) {\n        return currentKey;\n      }\n      currentKey =\n        direction === \"up\"\n          ? wrappedKeyboardDelegate.getKeyAbove?.(currentKey)\n          : wrappedKeyboardDelegate.getKeyBelow?.(currentKey);\n    }\n    return currentKey ?? undefined;\n  };\n  return Object.create(wrappedKeyboardDelegate, {\n    getKeyBelow: {\n      value: (key) =>\n        findFirstMatch(wrappedKeyboardDelegate.getKeyBelow?.(key), \"down\"),\n    },\n    getKeyAbove: {\n      value: (key) =>\n        findFirstMatch(wrappedKeyboardDelegate.getKeyAbove?.(key), \"up\"),\n    },\n    getFirstKey: {\n      value: (key?: React.Key, global?: boolean): React.Key | null => {\n        const firstKey = findFirstMatch(\n          wrappedKeyboardDelegate.getFirstKey?.(key, global),\n          \"down\"\n        );\n        return firstKey == null ? matches?.values().next().value : firstKey;\n      },\n    },\n    getLastKey: {\n      value: (key?: React.Key, global?: boolean): React.Key | null => {\n        const lastKey = findFirstMatch(\n          wrappedKeyboardDelegate.getLastKey?.(key, global),\n          \"down\"\n        );\n        return lastKey == null\n          ? [...(matches?.keys() || [])].pop() ?? null\n          : lastKey;\n      },\n    },\n  } as { [key in keyof KeyboardDelegate]: { value: KeyboardDelegate[key] } });\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport { ReactElement } from \"react\";\nimport { ItemProps } from \"@react-types/shared\";\nimport { PartialNode } from \"@react-stately/collections\";\n\ninterface DividerProps {}\n\n/**\n * To be used in dynamic collections, just to provide a key and make it easy to check in the render\n * function to figure out what to render (an Item or a Divider)\n */\nexport class DividerItem {\n  private static seq = 0;\n  key = \"divider_\" + DividerItem.seq++;\n  get id() {\n    return this.key;\n  }\n}\n\nfunction Divider({}: DividerProps): ReactElement {\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null as any;\n}\n// We don't want getCollectionNode to show up in the type definition\nlet _Divider = Divider as (props: DividerProps) => JSX.Element;\nexport { _Divider as Divider };\n\nDivider.getCollectionNode = function* getCollectionNode<T>(\n  props: ItemProps<T>\n): Generator<PartialNode<T>> {\n  let rendered = null;\n\n  yield {\n    type: \"divider\",\n    element: null as any, // to prevent check on key, which is not necessary for divider\n    props: props,\n    rendered,\n    hasChildNodes: false,\n  };\n};\n","import React, { ReactElement } from \"react\";\nimport { ItemProps } from \"@react-types/shared\";\nimport { Item as StatelyItem, PartialNode } from \"@react-stately/collections\";\n\n// noinspection JSUnusedLocalSymbols\n/**\n * Item for collection components, which by default disables caching, unless `invalidated` prop is set to false on the\n * context passed to useCollection. Control over cache invalidation policy can be enabled by using\n * `useCollectionCacheInvalidation` for creating such context object.\n */\nfunction Item<T>(props: ItemProps<T>): ReactElement {\n  return null as any as React.ReactElement;\n}\n\nexport type CacheInvalidationContext = { invalidated?: boolean };\n\n// We don't want getCollectionNode to show up in the type definition\nlet _Item = Item as <T>(props: ItemProps<T>) => JSX.Element;\nexport { _Item as Item };\n\n/**\n * @private @preapproved\n */\nItem.getCollectionNode = function* getCollectionNode<T>(\n  props: ItemProps<T>,\n  context: CacheInvalidationContext\n): Generator<PartialNode<T>> {\n  const itemGenerator: Generator<PartialNode<T>> = (\n    StatelyItem as any\n  ).getCollectionNode(props, context);\n  const result = itemGenerator.next().value;\n  const originalShouldInvalidate = result.shouldInvalidate;\n  result.shouldInvalidate = (context: CacheInvalidationContext) =>\n    originalShouldInvalidate?.(context) || context.invalidated;\n  yield result;\n};\n","import React from \"react\";\nimport { styled } from \"../styled\";\nimport { DOMAttributes } from \"@react-types/shared\";\nimport { MENU_POSITION_TARGET_DATA_ATTRIBUTE } from \"@intellij-platform/core/Menu/ContextMenuContainer\";\n\nconst GAP = \"0.1875rem\";\nconst StyledItemLayout = styled.div`\n  display: flex;\n  align-items: center;\n  padding-right: 0.25rem;\n  gap: ${GAP};\n`;\n\nconst StyledHint = styled.span<{ small?: boolean }>`\n  display: inline-flex;\n  color: ${({ theme }) =>\n    theme.currentForegroundAware(theme.commonColors.inactiveTextColor)};\n  padding-left: 0.1rem;\n  font-size: ${({ small }) => small && \"0.9em\"};\n`;\n\nconst StyledGroup = styled.span.attrs({\n  role: \"presentation\" as string,\n})`\n  display: inline-flex;\n  display: flex;\n  align-items: center;\n  gap: ${GAP};\n`;\n/**\n * Generic layout component capturing common use cases of tree or list items.\n * It handles the spacing between parts, and provides styled components for parts that need specific styling.\n * For more flexibility over the order of various pieces of content in list/tree items, there is no specific props\n * for parts. Different parts should just be rendered in children.\n *\n * @example\n * ```tsx\n * <ItemLayout>\n *   <PlatformIcon icon=\"nodes/folder\" />\n *   <HighlightedTextValue />\n *   <ItemLayout.Hint>~/workspace/jui</ItemLayout.Hint>\n * </ItemLayout>\n * ```\n * @beta\n */\nexport const ItemLayout = (\n  props: { children: React.ReactNode } & DOMAttributes\n) => {\n  return (\n    <StyledItemLayout\n      {...{ [MENU_POSITION_TARGET_DATA_ATTRIBUTE]: true }}\n      {...props}\n    />\n  );\n};\n\n/**\n * A more subtle text usually rendered next to the main text in the item.\n * @example: project path in project root node, in project view\n * @example: \"library root\" rendered next to \"node_modules\" folders in project view.\n */\nItemLayout.Hint = StyledHint;\n\n/**\n * Useful when a number of items need to be grouped by a wrapper, e.g. to have a tooltip.\n * @example: project path in project root node, in project view\n * @example: \"library root\" rendered next to \"node_modules\" folders in project view.\n */\nItemLayout.Group = StyledGroup;\n","import React from \"react\";\nimport { Node } from \"@react-types/shared\";\n\n/**\n * Generic state of items in collections, provided via a context.\n * To be used in Menu, Tree, or anything that deals with a collection of items for which the common states like\n * **disabled** or **selected** is applicable.\n */\nexport interface ItemStateContextType {\n  node: Node<unknown>;\n  isSelected: boolean;\n  isContainerFocused: boolean;\n  isDisabled: boolean;\n}\n\nexport const ItemStateContext =\n  React.createContext<ItemStateContextType | null>(null);\n","import { RefObject, useEffect } from \"react\";\nimport { SelectionManager } from \"@react-stately/selection\";\nimport { scrollIntoView } from \"@react-aria/utils\";\n\ntype CollectionAutoScrollProps = {\n  isVirtualized?: boolean;\n  selectionManager: SelectionManager;\n};\n\nexport function useCollectionAutoScroll(\n  { isVirtualized, selectionManager }: CollectionAutoScrollProps,\n  ref: RefObject<HTMLElement>\n) {\n  // If not virtualized, scroll the focused element into view when the focusedKey changes.\n  // When virtualized, Virtualizer handles this internally.\n  useEffect(() => {\n    if (!isVirtualized && selectionManager.focusedKey && ref?.current) {\n      let element = ref.current.querySelector(\n        `[data-key=\"${selectionManager.focusedKey}\"]`\n      ) as HTMLElement;\n      if (element) {\n        scrollIntoView(ref.current, element);\n      }\n    }\n  }, [isVirtualized, ref, selectionManager.focusedKey]);\n}\n","import { Key, RefObject, useEffect } from \"react\";\nimport { SelectionManager } from \"@react-stately/selection\";\nimport { Collection, Node } from \"@react-types/shared\";\n\n/**\n * interface to be extended by the props of collection components that support focus proxy.\n */\nexport interface CollectionFocusProxyProps {\n  /**\n   * ref to an element (typically HTMLInputElement) that should act as a focus\n   * proxy that handles ArrowUp, ArrowDown, and Enter keys to allow for\n   * navigating the collection and selecting items.\n   * Useful for implementing\n   * autocompletion or search input connected to a collection element.\n   */\n  focusProxyRef?: RefObject<HTMLElement>;\n}\n\n/**\n * A solution for connecting a collection to a search input so that the collection can still be navigated by keyboard\n * while the input is focused. It works by replaying certain keyboard events on the collection container and focused\n * item. An alternative approach (which is used in react-aria's useCombobox) is to use useSelectableCollection\n * separately for the input, but the biggest issue with that approach is that it's limiting in the following ways:\n * - Rendering input should be a part of the same component that renders the collection. Having specific components\n *   for use cases that require a search input is not flexible enough. For example, one may want to use SpeedSearchList\n *   or List connected to an input. Also, the input and the collection may need to be in different layouts in different\n *   use cases. Decoupling the rendering of the input and collection is a more flexible solution.\n * - The same options used for collection should be passed to the input field for behavior consistency, and that is\n *   prone to error.\n *   Some of these options, like `keyboardDelegate` can even have a default value in hooks like\n *   `useSelectableList`.\n *   It means making sure the same value is passed to the useSelectableCollection for input\n *   would require not using the default value, since the same value can't be accessed.\n *\n * With this event-forwarding approach, it's an arrow up or down event would behave exactly like it was triggered on\n * the collection itself, leaving no room for behavior discrepancies. But it has a few drawbacks:\n * - Although small, there is still some coupling between this code and implementation of the collection component.\n *   More specifically, this implementation assumes the following things:\n *   - \"Enter\" keys (selection or action) are handled on items, but arrow keys are handled on the collection element.\n *   - \"[data-key] attribute is set on items. That is used to find the element for the focused item (which, of course,\n *     is not actually focused while the input is).\n *\n * Note: there has been some addition to react-aria useSelectableCollection and useSelectableItem hooks\n * based on CustomEvent and a similar event reply mechanism in useAutocomplete.\n * It may be possible to replace this hook with built-in functionality in react-aria at some point.\n * But at the moment, it seems like that implementation is too coupled with the autocompletion use case, while\n * what is supported here is more generic and allows for the connected search input use case too.\n */\n\nexport const useCollectionFocusProxy = <T>({\n  state,\n  focusProxyRef,\n  collectionRef,\n  onAction,\n}: {\n  focusProxyRef: RefObject<HTMLElement> | undefined;\n  collectionRef: RefObject<HTMLElement>;\n  state: {\n    /** A collection of items in the list. */\n    collection: Collection<Node<T>>;\n    /** A selection manager to read and update multiple selection state. */\n    selectionManager: SelectionManager;\n  };\n  onAction: ((key: Key) => void) | undefined;\n}) => {\n  // TODO: focus/blur events should probably be handled as well, to keep the\n  //  isFocused state of the collection in sync.\n  useEffect(\n    () => {\n      const proxy = focusProxyRef?.current;\n      if (proxy) {\n        const onKeyDown = (event: KeyboardEvent) => {\n          if (event.key === \"ArrowUp\" || event.key === \"ArrowDown\") {\n            event.preventDefault();\n            event.stopPropagation();\n\n            collectionRef.current?.dispatchEvent(\n              new KeyboardEvent(event.type, event)\n            );\n          } else if (\n            event.key === \"Enter\" &&\n            state.selectionManager?.focusedKey != null\n          ) {\n            event.preventDefault(); // in forms, pressing Enter on input submits the form\n            (event.currentTarget as HTMLElement)?.addEventListener(\n              \"keyup\",\n              (event: KeyboardEvent) => {\n                console.log(\n                  \"Keyup\",\n                  event.key,\n                  state.selectionManager.focusedKey,\n                  \"onAction\",\n                  onAction\n                );\n                if (\n                  event.key === \"Enter\" &&\n                  state.selectionManager.focusedKey != null\n                ) {\n                  onAction?.(state.selectionManager.focusedKey);\n                }\n              },\n              { once: true, capture: true }\n            );\n          }\n        };\n        proxy.addEventListener(\"keydown\", onKeyDown);\n        return () => {\n          proxy.removeEventListener(\"keydown\", onKeyDown);\n        };\n      }\n    } /* with no dependency here, event listeners are reattached on each render, but that's the case when unmemoized\n    event handlers are passed to elements too (e.g., when using any react-aria hook) */\n  );\n};\n","import React, {\n  CSSProperties,\n  ForwardedRef,\n  forwardRef,\n  HTMLProps,\n  Ref,\n  useRef,\n} from \"react\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport { AriaComboBoxProps, useComboBox } from \"@react-aria/combobox\";\nimport { useComboBoxState } from \"@react-stately/combobox\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { ControlledStateProps } from \"@intellij-platform/core/type-utils\";\nimport { BareButton } from \"@intellij-platform/core/Button\";\nimport { Popover } from \"@intellij-platform/core/Overlay\";\nimport { StatelessListBox } from \"./StatelessListBox\";\nimport { StyledContainer } from \"./StyledContainer\";\nimport { LabelPlacement, WithLabel } from \"../Field/Label\";\nimport { StyledDropdownArrowIcon } from \"./StyledDropdownArrowIcon\";\nimport {\n  PositionedTooltipTrigger,\n  ValidationTooltip,\n} from \"@intellij-platform/core/Tooltip\";\nimport {\n  ContextHelpProps,\n  WithInlineContextHelp,\n} from \"@intellij-platform/core/Field/ContextHelp\";\n\ntype AriaProps<T> = {\n  [K in keyof T as K extends `aria-${string}` ? K : never]: T[K];\n};\n\nexport interface ComboBoxProps<T extends object>\n  extends Pick<\n      AriaComboBoxProps<T>,\n      | \"disabledKeys\"\n      | \"defaultSelectedKey\"\n      | \"selectedKey\"\n      | \"isDisabled\"\n      | \"children\"\n      | \"items\"\n      | \"label\"\n      | \"autoFocus\"\n      | \"menuTrigger\"\n      | \"placeholder\"\n      | \"onFocus\"\n      | \"onBlur\"\n      | \"onKeyDown\"\n      | \"onKeyUp\"\n      | \"onOpenChange\"\n      | \"onFocusChange\"\n      | \"onSelectionChange\"\n    >,\n    AriaProps<AriaComboBoxProps<T>>,\n    ControlledStateProps<{\n      value: string;\n    }>,\n    ContextHelpProps {\n  labelPlacement?: LabelPlacement;\n  className?: string;\n  style?: CSSProperties;\n\n  validationState?: \"valid\" | \"error\" | \"warning\";\n\n  /**\n   * Validation message shown as a {@link ValidationTooltip} above the component.\n   * {@link ValidationTooltipProps#type} is defined based on `validationState`.\n   */\n  validationMessage?: React.ReactNode;\n\n  /**\n   * props to apply on input, excluding value that's controlled by the component\n   */\n  inputProps?: Omit<\n    HTMLProps<HTMLInputElement>,\n    \"value\" | \"defaultValue\" | \"as\"\n  >;\n  inputRef?: Ref<HTMLInputElement>;\n}\n\nconst StyledComboBoxContainer = styled(StyledContainer)`\n  padding: 0;\n  color: ${({ theme, disabled }) =>\n    disabled\n      ? theme.color(\n          \"TextField.disabledForeground\" as UnknownThemeProp<\"TextField.disabledForeground\">\n        )\n      : theme.color(\n          \"TextField.foreground\" as UnknownThemeProp<\"TextField.foreground\">\n        )};\n`;\nconst StyledComboBoxInput = styled.input`\n  flex: 1;\n  background: none;\n  border: none;\n  outline: none;\n  color: inherit;\n  padding: ${({ theme }) =>\n    theme.inset(\"ComboBox.padding\") ?? \"1px 6px 1px 6px\"};\n  height: 100%;\n`;\n\nconst StyledDropdownButton = styled.button`\n  // Resetting default styles\n  appearance: none;\n  border: none;\n  background: ${({ theme }) => theme.color(\"ComboBox.ArrowButton.background\")};\n  outline: none;\n  font: inherit;\n  padding: 0;\n\n  // Custom styles\n  border-left: 1px solid ${({ theme }) => theme.commonColors.border()};\n  height: 100%;\n  aspect-ratio: 1;\n  /**\n   * In the reference impl, the clickable area exceeds the left border by a\n   * few pixels. The following trick implements that\n   */\n  position: relative;\n  ::before {\n    content: \"\";\n    position: absolute;\n    left: -4px;\n    top: 0;\n    bottom: 0;\n    width: 4px;\n  }\n`;\n\n/**\n * [Combobox](https://plugins.jetbrains.com/docs/intellij/combo-box.html) implementation.\n * Known differences with the reference impl:\n * - selected key doesn't focus when opened the dropdown manually.\n *   Opening the dropdown by pressing ArrowDown does focus the previously selected item.\n */\nexport const ComboBox = forwardRef(\n  <T extends object>(\n    {\n      labelPlacement,\n      style,\n      className,\n      value,\n      defaultValue,\n      onValueChange,\n      validationState,\n      validationMessage,\n      contextHelp,\n      contextHelpPlacement,\n      inputProps,\n      inputRef: inputRefProp,\n      ...props\n    }: ComboBoxProps<T>,\n    forwardedRef: ForwardedRef<HTMLDivElement>\n  ): React.JSX.Element => {\n    const ref = useObjectRef(forwardedRef);\n    const buttonRef = useRef<HTMLButtonElement>(null);\n    const inputRef = useObjectRef(inputRefProp);\n    const dropdownContainerRef = useRef<HTMLDivElement>(null);\n    const popoverRef = useRef<HTMLDivElement>(null);\n    const listBoxRef = useRef<HTMLDivElement>(null);\n    const isInvalid = Boolean(validationState) && validationState !== \"valid\";\n\n    const state = useComboBoxState({\n      // defaultFilter not provided based on how ComboBoxes don't filter based on input in Intellij Platform\n      // filtering can still be implemented by controlling `value` and `items`.\n      menuTrigger: \"manual\", // overridable via props\n      allowsCustomValue: true,\n      inputValue: value,\n      defaultInputValue: defaultValue,\n      onInputChange: onValueChange,\n      isInvalid,\n      ...props,\n    });\n    const {\n      descriptionProps,\n      errorMessageProps,\n      labelProps,\n      inputProps: comboboxInputProps,\n      listBoxProps,\n      buttonProps,\n    } = useComboBox(\n      {\n        ...props,\n        allowsCustomValue: true,\n        buttonRef,\n        inputRef,\n        popoverRef,\n        listBoxRef,\n      },\n      state\n    );\n\n    // minWidth is not kept in the state, assuming it's unnecessary, considering the width is expected to be\n    // stable when the popover opens.\n    const minWidth = dropdownContainerRef.current\n      ? dropdownContainerRef.current?.offsetWidth + 2 /* for box shadow*/\n      : undefined;\n    return (\n      <>\n        <WithLabel\n          ref={ref}\n          isDisabled={props.isDisabled}\n          label={props.label}\n          labelPlacement={labelPlacement}\n          labelProps={labelProps}\n          className={className}\n          style={style}\n        >\n          {/* probably no need for HiddenSelect as autofilling doesn't seem relevant for applications using this library */}\n          <WithInlineContextHelp\n            contextHelp={contextHelp}\n            contextHelpPlacement={contextHelpPlacement}\n            descriptionProps={descriptionProps}\n          >\n            <StyledComboBoxContainer\n              ref={dropdownContainerRef}\n              validationState={validationState}\n              disabled={props.isDisabled}\n              className={state.isFocused ? \"is-focus\" : \"\"}\n            >\n              {/* FIXME: tooltip comes and goes on mouse enter/leave, which is especially weird when trying to open options */}\n              <PositionedTooltipTrigger\n                placement=\"top\"\n                showOnFocus\n                isDisabled={!validationMessage}\n                triggerRef={inputRef}\n                tooltip={\n                  <ValidationTooltip\n                    type={\n                      validationState !== \"valid\" ? validationState : undefined\n                    }\n                  >\n                    <div {...errorMessageProps}>{validationMessage}</div>\n                  </ValidationTooltip>\n                }\n                delay={0}\n              >\n                {(tooltipTriggerProps) => (\n                  <StyledComboBoxInput\n                    {...mergeProps(\n                      comboboxInputProps,\n                      inputProps,\n                      tooltipTriggerProps\n                    )}\n                  />\n                )}\n              </PositionedTooltipTrigger>\n\n              <BareButton {...buttonProps} ref={buttonRef}>\n                <StyledDropdownButton>\n                  <StyledDropdownArrowIcon\n                    disabled={props.isDisabled}\n                    size={20}\n                    icon=\"general/arrowDown.svg\"\n                  />\n                </StyledDropdownButton>\n              </BareButton>\n            </StyledComboBoxContainer>\n          </WithInlineContextHelp>\n        </WithLabel>\n        {state.isOpen && (\n          <Popover\n            ref={popoverRef}\n            state={state}\n            triggerRef={dropdownContainerRef}\n            placement=\"bottom start\"\n            containerPadding={0}\n            offset={2}\n            crossOffset={-1}\n          >\n            <StatelessListBox\n              {...listBoxProps}\n              ref={listBoxRef}\n              state={state}\n              style={{ minWidth }}\n            />\n          </Popover>\n        )}\n      </>\n    );\n  }\n);\n","import React, { ForwardedRef } from \"react\";\nimport { AriaListBoxOptions, AriaListBoxProps } from \"@react-aria/listbox\";\nimport { useListState } from \"@react-stately/list\";\nimport { StatelessListBox } from \"@intellij-platform/core/Dropdown/StatelessListBox\";\nimport { CollectionFocusProxyProps } from \"@intellij-platform/core/Collections\";\n\nexport interface ListBoxProps<T extends object>\n  extends AriaListBoxProps<T>,\n    CollectionFocusProxyProps,\n    Pick<\n      AriaListBoxOptions<T>,\n      \"shouldFocusOnHover\" | \"shouldUseVirtualFocus\"\n    > {\n  minWidth?: number;\n}\n\nexport const ListBox = React.forwardRef(function ListBox<T extends object>(\n  { minWidth, ...props }: ListBoxProps<T>,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n) {\n  const state = useListState({\n    selectionBehavior: \"toggle\",\n    selectionMode: \"single\",\n    ...props,\n  });\n\n  return <StatelessListBox state={state} ref={forwardedRef} {...props} />;\n});\n","import React, { CSSProperties, ForwardedRef } from \"react\";\nimport {\n  AriaListBoxOptions,\n  useListBox,\n  useListBoxSection,\n  useOption,\n} from \"@react-aria/listbox\";\nimport { useObjectRef } from \"@react-aria/utils\";\nimport { ListState } from \"@react-stately/list\";\nimport { Node } from \"@react-types/shared\";\n\nimport {\n  CollectionFocusProxyProps,\n  ItemStateContext,\n  useCollectionFocusProxy,\n} from \"@intellij-platform/core/Collections\";\nimport { StyledListItem } from \"@intellij-platform/core/List/StyledListItem\";\nimport { StyledList } from \"@intellij-platform/core/List/StyledList\";\nimport { StyledVerticalSeparator } from \"@intellij-platform/core/StyledSeparator\";\nimport { styled } from \"@intellij-platform/core/styled\";\n\ninterface StatelessListBoxProps<T extends object>\n  extends AriaListBoxOptions<T>,\n    CollectionFocusProxyProps {\n  state: ListState<T>;\n  style?: CSSProperties;\n  className?: string;\n}\n\nexport const StatelessListBox = React.forwardRef(function StatelessListBox<\n  T extends object\n>(\n  {\n    state,\n    style,\n    className,\n    focusProxyRef,\n    ...props\n  }: StatelessListBoxProps<T>,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n) {\n  const ref = useObjectRef(forwardedRef);\n  const { listBoxProps, labelProps } = useListBox(props, state, ref);\n\n  useCollectionFocusProxy({\n    state,\n    collectionRef: ref,\n    focusProxyRef,\n    onAction: props.onAction,\n  });\n\n  return (\n    <>\n      <div {...labelProps}>{props.label}</div>\n      <StyledList\n        {...listBoxProps}\n        ref={ref}\n        style={style}\n        className={className}\n      >\n        {[...state.collection].map((item) =>\n          item.type === \"section\" ? (\n            <ListBoxSection key={item.key} section={item} state={state} />\n          ) : (\n            <Option key={item.key} item={item} state={state} />\n          )\n        )}\n      </StyledList>\n    </>\n  );\n});\nfunction Option<T extends object>({\n  item,\n  state,\n}: {\n  item: Node<T>;\n  state: ListState<T>;\n}) {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const { optionProps } = useOption({ key: item.key }, state, ref);\n\n  const isDisabled = state.disabledKeys.has(item.key);\n  const isSelected = state.selectionManager.focusedKey === item.key;\n  return (\n    <ItemStateContext.Provider\n      value={{\n        isDisabled,\n        isContainerFocused: state.selectionManager.isFocused,\n        isSelected,\n        node: item,\n      }}\n    >\n      <StyledListItem\n        {...optionProps}\n        ref={ref}\n        disabled={isDisabled}\n        selected={isSelected}\n        containerFocused\n      >\n        {item.rendered}\n      </StyledListItem>\n    </ItemStateContext.Provider>\n  );\n}\n\nconst StyledSectionHeading = styled.div`\n  font-size: 0.6875rem;\n  padding: 0 0.5rem;\n  color: ${({ theme }) => theme.commonColors.inactiveTextColor}; // not verified\n`;\n\nconst StyledSection = styled.div`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n`;\n\nfunction ListBoxSection<T extends object>({\n  section,\n  state,\n}: {\n  section: Node<T>;\n  state: ListState<T>;\n}) {\n  let { itemProps, headingProps, groupProps } = useListBoxSection({\n    heading: section.rendered,\n    \"aria-label\": section[\"aria-label\"],\n  });\n\n  // If the section is not the first, add a separator element to provide visual separation.\n  // The heading is rendered inside an <li> element, which contains\n  // a <ul> with the child items.\n  return (\n    <>\n      {section.key !== state.collection.getFirstKey() && (\n        <StyledVerticalSeparator role=\"presentation\" />\n      )}\n      <li {...itemProps}>\n        {section.rendered && (\n          <StyledSectionHeading {...headingProps}>\n            {section.rendered}\n          </StyledSectionHeading>\n        )}\n        <StyledSection {...groupProps}>\n          {[\n            ...(state.collection.getChildren?.(section.key) ??\n              section.childNodes),\n          ].map((node) => (\n            <Option key={node.key} item={node} state={state} />\n          ))}\n        </StyledSection>\n      </li>\n    </>\n  );\n}\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\n\nexport const StyledContainer = styled.div<{\n  disabled?: boolean;\n  validationState?: \"valid\" | \"error\" | \"warning\";\n}>`\n  box-sizing: border-box;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  height: 1.5rem;\n  background: ${({ theme, disabled }) =>\n    disabled\n      ? theme.color(\"ComboBox.disabledBackground\")\n      : theme.color(\"ComboBox.background\")};\n  color: ${({ theme, disabled }) =>\n    disabled\n      ? theme.color(\"ComboBox.disabledForeground\")\n      : theme.color(\n          \"ComboBox.foreground\" as UnknownThemeProp<\"ComboBox.foreground\">\n        )};\n  border: 1px solid\n    ${({ theme, disabled, validationState }) =>\n      theme.commonColors.border({\n        disabled,\n        validationState,\n      })};\n  // The focus style is applied unconditionally in the reference impl, so no use of focus-visible or js-based focus visible detection\n\n  box-shadow: 0 0 0 0.125rem\n    ${({ theme, validationState }) =>\n      theme.commonColors.focusRing({\n        validationState,\n        focused: false,\n      })};\n  &:focus,\n  &.is-focus {\n    border-color: ${({ theme, validationState }) =>\n      theme.commonColors.border({\n        focused: true,\n        validationState,\n      })};\n    outline: none;\n    box-shadow: 0 0 0 0.125rem\n      ${({ theme, validationState }) =>\n        theme.commonColors.focusRing({\n          validationState,\n          focused: true,\n        })};\n  }\n\n  border-radius: ${({ theme }) => theme.borderRadius.default}px;\n`;\n","import { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport { styled } from \"@intellij-platform/core/styled\";\n\nexport const StyledDropdownArrowIcon = styled(PlatformIcon).attrs<{\n  disabled?: boolean;\n}>({\n  \"aria-hidden\": \"true\",\n})`\n  // NOTE: \"ArrowButton.nonEditableBackground\" theme key is used in the reference impl, but it doesn't seem necessary to allow\n  // for a separate arrow background in Dropdown (aka non-editable combobox), since the arrow is not really a\n  // separate button, but a visual indicator for the whole trigger. Also there is no mention of it in designs\n  // There is also separate theme properties for color and disabled color, but inheriting it (via currentColor)\n  // makes more sense\n\n  * {\n    fill: ${({ theme, disabled }) =>\n      disabled\n        ? theme.color(\"ComboBox.ArrowButton.disabledIconColor\")\n        : theme.color(\"ComboBox.ArrowButton.iconColor\")};\n  }\n`;\n","import { css, styled } from \"@intellij-platform/core/styled\";\nimport React from \"react\";\nimport { DOMAttributes, DOMProps } from \"@react-types/shared\";\n\n/**\n * Interface to inherit in props of components that support rendering context help.\n */\nexport interface ContextHelpProps {\n  /**\n   * Context help, shown below the input.\n   * A typical use case is\n   * [to provide example values](https://jetbrains.github.io/ui/principles/context_help/#07).\n   */\n  contextHelp?: React.ReactNode; // TODO: implement\n  /**\n   * Placement of the contextHelp text with respect to the control.\n   * See more: https://plugins.jetbrains.com/docs/intellij/inline-help-text.html#placement\n   */\n  contextHelpPlacement?: \"below\" | \"after\";\n}\n\nconst StyledContextHelp = styled.div`\n  color: ${({ theme }) => theme.commonColors.contextHelpForeground};\n`;\n\nconst StyledContextHelpWrapper = styled.div<{\n  placement: ContextHelpProps[\"contextHelpPlacement\"];\n}>`\n  font-size: 0.75rem; // 12px, in new UI. It's 11px in the old UI.\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  gap: 0.25rem; /* Not checked with the reference impl */\n  ${({ placement }) =>\n    placement === \"after\" &&\n    css`\n      flex-direction: row;\n      align-items: center;\n      gap: 1rem; /* Not checked with the reference impl */\n    `}\n  flex-grow: 1; /* Needed for when the control is inside a flex layout */\n`;\n\n/**\n * Implements [inline context help](https://plugins.jetbrains.com/docs/intellij/inline-help-text.html),\n * for its children.\n */\nexport const WithInlineContextHelp = ({\n  children,\n  descriptionProps,\n  contextHelpPlacement,\n  contextHelp,\n}: {\n  children: React.ReactNode;\n  /**\n   * Props to apply on the context help wrapper, to make the connected control\n   * described by the context help.\n   */\n  descriptionProps: DOMAttributes;\n} & ContextHelpProps) => {\n  return (\n    <StyledContextHelpWrapper placement={contextHelpPlacement}>\n      {children}\n      {contextHelp && (\n        <StyledContextHelp {...descriptionProps}>\n          {contextHelp}\n        </StyledContextHelp>\n      )}\n    </StyledContextHelpWrapper>\n  );\n};\n","import { styled } from \"@intellij-platform/core/styled\";\nimport React, {\n  ForwardedRef,\n  forwardRef,\n  RefObject,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n} from \"react\";\nimport { DOMAttributes } from \"@react-types/shared\";\n\nexport type LabelPlacement = \"above\" | \"before\";\n\nconst StyledLabelContainer = styled.div<{\n  labelPlacement?: LabelPlacement;\n}>`\n  display: inline-flex;\n  flex-direction: ${({ labelPlacement }) =>\n    labelPlacement === \"above\" ? \"column\" : \"row\"};\n  align-items: start;\n  gap: 0.375rem;\n`;\n\nconst StyledLabel = styled.label<{ isDisabled?: boolean }>`\n  color: ${({ theme, isDisabled: disabled }) =>\n    theme.commonColors.label({ disabled })};\n  margin-top: 0.25rem;\n  line-height: 1.2;\n`;\n\n/**\n * Implements [label](https://jetbrains.github.io/ui/controls/input_field/#label),\n * for elements like Input, Dropdown, etc.\n */\nexport const WithLabel = forwardRef(function WithLabel(\n  {\n    label,\n    labelPlacement,\n    labelProps,\n    children,\n    isDisabled,\n    ...props\n  }: {\n    isDisabled: boolean | undefined;\n    label: React.ReactNode;\n    labelPlacement: LabelPlacement | undefined /* intentionally not optional */;\n    labelProps?: DOMAttributes;\n  } & DOMAttributes,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n) {\n  const labelRef = React.useRef<HTMLLabelElement>(null);\n  useAlignedLabels({ ref: labelRef, enabled: labelPlacement !== \"above\" });\n  return (\n    <StyledLabelContainer\n      {...props}\n      labelPlacement={labelPlacement}\n      ref={forwardedRef}\n    >\n      {label && (\n        <StyledLabel {...labelProps} isDisabled={isDisabled} ref={labelRef}>\n          {label}\n        </StyledLabel>\n      )}\n      {children}\n    </StyledLabelContainer>\n  );\n});\n\nfunction useAlignedLabels({\n  ref,\n  enabled,\n}: {\n  ref: RefObject<HTMLElement>;\n  enabled?: boolean;\n}) {\n  const { applyLabelWidth, commonWidth } = useContext(LabelAlignmentContext);\n  useLayoutEffect(() => {\n    const apply = (): boolean => {\n      const width = ref.current?.offsetWidth;\n      if (width) {\n        applyLabelWidth(width);\n        return true;\n      }\n      return false;\n    };\n    // In some situations, the width is zero in the first render.\n    if (!apply()) {\n      setTimeout(apply, 0);\n    }\n  });\n\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.style.width =\n        commonWidth && enabled ? `${commonWidth}px` : \"\";\n    }\n  }, [commonWidth, enabled]);\n}\n\nconst LabelAlignmentContext = React.createContext<{\n  commonWidth: number | null;\n  applyLabelWidth: (width: number) => void;\n}>({ commonWidth: null, applyLabelWidth: () => {} });\n\n/**\n * Provides a context for\n * [labeled input controls](https://jetbrains.github.io/ui/principles/layout/#labeled-input-controls)\n * with side-positioned labels to have their input boxes aligned.\n * It doesn't render anything in DOM and only provides a context used\n * by labeled controls to set a common width on labels so that the input boxes\n * align.\n * Labeled input controls are:\n * - {@link InputField}\n * - {@link ComboBox}\n * - {@link Dropdown}\n */\nexport function LabeledControlsAlignmentProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const [commonWidth, setCommonWidth] = React.useState<null | number>(null);\n\n  const applyLabelWidth = (width: number) => {\n    setCommonWidth((currentWidth) =>\n      width > (currentWidth ?? 0)\n        ? width + 1 /* without 1px it wraps in some cases ¯\\_(ツ)_/¯ */\n        : currentWidth\n    );\n  };\n  return (\n    <LabelAlignmentContext.Provider value={{ commonWidth, applyLabelWidth }}>\n      {children}\n    </LabelAlignmentContext.Provider>\n  );\n}\n","import { styled } from \"@intellij-platform/core/styled\";\nimport React, { ForwardedRef } from \"react\";\nimport { amendName, PlatformIcon, PlatformIconProps } from \"./PlatformIcon\";\n\nexport const StyledHoverContainer = styled.span<{\n  hoverContainerSelector?: string;\n}>`\n  ${({ hoverContainerSelector }) =>\n    hoverContainerSelector\n      ? `${hoverContainerSelector} &`\n      : \"\"} .icon[data-hover] {\n    display: none;\n  }\n\n  ${({ hoverContainerSelector }) =>\n    hoverContainerSelector ? `${hoverContainerSelector}:hover &` : \"&:hover\"} {\n    .icon {\n      display: none;\n    }\n\n    .icon[data-hover] {\n      display: inline-flex;\n    }\n  }\n`;\n\nconst StyledIconHoverContainer = styled(StyledHoverContainer)`\n  display: inline-flex;\n`;\n\n/**\n * A common use case for PlatformIcons is to have a default icon and a hover icon.\n * This component captures that simple use case, by rendering both icons, and hiding one based on a hover selector.\n *\n * ### Parent hover container\n *\n * If the hover-able element is a parent of the icon, and not the icon itself (i.e., the icon should change if the\n * that parent is hovered), you can use `StyledHoverContainer` to define that parent element:\n *\n * ```tsx\n * const SomeParent = styled(StyledHoverContainer)`...`;\n * <SomeParent><AutoHoverPlatformIcon icon=\"...\" /></SomeParent>\n * ```\n *\n * If the hover-able element is a parent of the icon, with a known selector, you can pass `hoverContainerSelector`,\n * instead of using `StyledHoverContainer`:\n *\n * ```tsx\n * <AutoHoverPlatformIcon icon=\"...\" hoverContainerSelector=\"[role=menuitem]\" />\n * ```\n *\n * If the hover container is a styled component, you can have it converted to selector like this:\n *\n * ```tsx\n * <AutoHoverPlatformIcon icon=\"...\" hoverContainerSelector={`${MyStyledHoverContainer}`} />\n * ```\n *\n * In all examples above, the hover icon is shown when the parent is hovered, instead of the icon itself.\n *\n */\nexport const AutoHoverPlatformIcon = React.forwardRef(\n  function AutoHoverPlatformIcon(\n    {\n      hoverIcon,\n      hoverContainerSelector,\n      ...props\n    }: PlatformIconProps & {\n      /**\n       * The icon to be used when hovered. If not provided, it will be the \"somethingHovered\" where \"something\" is the `icon`\n       */\n      hoverIcon?: string;\n      hoverContainerSelector?: string;\n    },\n    ref: ForwardedRef<HTMLSpanElement>\n  ) {\n    const className = `icon ${props.className || \"\"}`;\n    return (\n      <StyledIconHoverContainer\n        ref={ref}\n        hoverContainerSelector={hoverContainerSelector}\n      >\n        <PlatformIcon {...props} className={className} />\n        <PlatformIcon\n          {...props}\n          className={className}\n          icon={hoverIcon ?? amendName(props.icon, \"Hover\")}\n          data-hover\n        />\n      </StyledIconHoverContainer>\n    );\n  }\n);\n","import React, { ForwardedRef } from \"react\";\nimport { useTheme } from \"styled-components\";\nimport { Theme } from \"../Theme/Theme\";\nimport { IconProps } from \"./IconProps\";\nimport { StyledIconWrapper } from \"./StyledIconWrapper\";\nimport { useSvgIcon } from \"./useSvgIcon\";\nimport { useObjectRef } from \"@react-aria/utils\";\n\ninterface IconModifiers {\n  Selected?: boolean;\n  Focused?: boolean;\n  Disabled?: boolean;\n  Editable?: boolean;\n  Pressed?: boolean;\n}\n\nexport interface ThemeIconProps extends IconProps {\n  /**\n   * Icon which will be resolved against the default icon location based on theme type\n   */\n  icon: string | { name: string; modifiers: IconModifiers };\n\n  /**\n   * A theme key that can optionally override the icon.\n   */\n  themePath?: string;\n}\n\nconst ICONS_DIR_PREFIX = \"com/intellij/ide/ui/laf/icons/\";\n\n// Similar to LafIconLookup\nfunction findIconPath(\n  theme: Theme,\n  name: string,\n  modifiers: IconModifiers = {}\n) {\n  const basePath = `${ICONS_DIR_PREFIX}${\n    theme.isUnderDarcula() ? \"darcula/\" : \"intellij/\"\n  }`;\n  const suffix = (\n    [\"Editable\", \"Selected\", \"Pressed\", \"Focused\", \"Disabled\"] as Array<\n      keyof typeof modifiers\n    >\n  )\n    .filter((modifier) =>\n      // Focused or Pressed can't coexist with Disabled\n      modifiers.Disabled ? ![\"Focused\", \"Pressed\"].includes(modifier) : true\n    )\n    .reduce(\n      (soFar, modifier) => soFar + (modifiers[modifier] ? modifier : \"\"),\n      \"\"\n    );\n  return `${basePath}${name}${suffix}.svg`;\n}\n\nfunction useIconPath(\n  iconDescriptor: string | { name: string; modifiers?: IconModifiers },\n  themePath?: string\n) {\n  const theme = useTheme() as Theme; // TODO: investigate why useTheme is typed like this\n  const resolvedValue = themePath && theme.value(themePath);\n  if (resolvedValue) {\n    return resolvedValue;\n  }\n  const { modifiers = {}, name } =\n    typeof iconDescriptor === \"string\"\n      ? { name: iconDescriptor }\n      : iconDescriptor;\n  return findIconPath(theme, name, modifiers);\n}\n\nexport const LafIcon = React.forwardRef(\n  (\n    { themePath, icon, size, ...props }: ThemeIconProps,\n    forwardedRef: ForwardedRef<HTMLElement>\n  ) => {\n    const resolvedIconPath = useIconPath(icon, themePath);\n\n    const ref = useObjectRef(forwardedRef);\n    useSvgIcon({ path: `platform/platform-impl/src/${resolvedIconPath}` }, ref);\n    return <StyledIconWrapper {...props} ref={ref} size={size} />;\n  }\n);\n","import React, { ForwardedRef } from \"react\";\nimport { useTheme } from \"@intellij-platform/core/styled\";\nimport { IconProps } from \"./IconProps\";\nimport { StyledIconWrapper } from \"./StyledIconWrapper\";\nimport { useSvgIcon } from \"./useSvgIcon\";\nimport { useObjectRef } from \"@react-aria/utils\";\n\nexport interface PlatformIconProps extends IconProps {\n  /**\n   * Icon path in intellij platform repo.\n   * If starts with \"/\", the path will be from the repo root. Otherwise, it's relative to \"platform/icons/src\".\n   * \".svg\" extension is optional.\n   */\n  icon: string;\n  /**\n   * Similar to icon, but for dark themes.\n   */\n  darkIcon?: string;\n}\n\nexport const amendName = (iconNameOrPath: string, amendment: string) => {\n  const [name, ext] = iconNameOrPath.split(\".\");\n  return `${name}${amendment}${ext ? `.${ext}` : \"\"}`;\n};\n\nexport const getDarkPath = (path: string, darkPath?: string) => {\n  const [name, ext] = path.split(\".\");\n  return darkPath || `${name}_dark${ext ? `.${ext}` : \"\"}`;\n};\n\nconst getPlatformIconPath = (relativePath: string) =>\n  relativePath.startsWith(\"/\")\n    ? relativePath.slice(1)\n    : `platform/icons/src/${relativePath}`;\n\n/**\n * Renders an icon from the predefined list of platform icons.\n * icon name must follow the directory structure in platform icons.\n * @example <PlatformIcon icon=\"general/hideToolWindow\" />\n * @example <PlatformIcon icon=\"toolbar/pin\" />\n * @example <PlatformIcon icon=\"toolbar/pin.svg\" />\n * @example <PlatformIcon icon=\"/platform/dvcs-impl/resources/icons/currentBranchLabel.svg\" />\n */\nexport const PlatformIcon = React.forwardRef(\n  (\n    { icon, darkIcon, ...props }: PlatformIconProps,\n    forwardedRef: ForwardedRef<HTMLElement>\n  ) => {\n    const ref = useObjectRef(forwardedRef);\n    const theme = useTheme();\n    const iconName = theme.dark ? getDarkPath(icon, darkIcon) : icon;\n    useSvgIcon(\n      {\n        path: getPlatformIconPath(iconName),\n        fallbackPath: getPlatformIconPath(icon),\n      },\n      ref\n    );\n\n    return <StyledIconWrapper {...props} ref={ref} />;\n  }\n);\n","import { styled } from \"../styled\";\nimport { IconSize } from \"@intellij-platform/core/Icon/IconProps\";\n\nconst DEFAULT_ICON_SIZE: IconSize = 16;\n\nexport const StyledIconWrapper = styled.span<{\n  size?: IconSize;\n  useCurrentColor?: boolean;\n  role?: string;\n}>`\n  box-sizing: border-box;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 0;\n  width: ${({ size = DEFAULT_ICON_SIZE }) => `${size}px`};\n  height: ${({ size = DEFAULT_ICON_SIZE }) => `${size}px`};\n  position: relative; // to allow absolute positioned indicators and overlays on icon\n  cursor: ${({ role }) => (role === \"button\" ? \"pointer\" : undefined)};\n`;\n","import { RefObject, useContext, useEffect } from \"react\";\nimport { useTheme } from \"@intellij-platform/core/styled\";\nimport { ItemStateContext } from \"@intellij-platform/core/Collections\";\n\nexport function useSvgIcon(\n  { path, fallbackPath }: { path: string; fallbackPath?: string },\n  /**\n   * ref to the icon wrapper element in which the svg should be injected.\n   * This hook used to return svg string, and that svg was set as dangerouslySetInnerHTML. But now it injects the svg.\n   * by direct DOM manipulation. That's to eliminate the need for using dangerouslySetInnerHTML, so that we can allow\n   * arbitrary children (like LiveIndicator) as overlays on top of icons.\n   */\n  ref: RefObject<HTMLElement>\n) {\n  const theme = useTheme();\n  const itemState = useContext(ItemStateContext);\n  const selected = itemState?.isSelected || itemState?.isContainerFocused;\n  useEffect(() => {\n    let canceled = false;\n    const fetchIcon = async () => {\n      if (!path) {\n        console.error(\"icon path is empty\");\n        return;\n      }\n      if (ref.current) {\n        // For querying for icons that are not loaded yet. Especially useful for visual testing\n        ref.current.ariaBusy = \"true\";\n      }\n      const svg = await theme\n        .getSvgIcon(path, selected)\n        .catch((e) => {\n          if (fallbackPath) {\n            return theme.getSvgIcon(fallbackPath, selected);\n          }\n          throw e;\n        })\n        .finally(() => {\n          if (ref?.current && !canceled) {\n            ref.current.ariaBusy = \"false\";\n          }\n        });\n      if (svg) {\n        const element = ref?.current;\n        if (!canceled && element) {\n          element.querySelector(\"svg\")?.remove();\n          const svgElement = document.createElement(\"svg\");\n          element.appendChild(svgElement);\n          svgElement.outerHTML = makeIdsUnique(svg); // UNSAFE! Would require sanitization, or icon sources must be trusted.\n        }\n      } else {\n        console.error(\"Could not resolve icon:\", path);\n      }\n    };\n    fetchIcon().catch(console.error);\n    return () => {\n      canceled = true;\n    };\n  }, [path, selected]);\n}\n\n/**\n * If multiple instance of the same icon is rendered at the same time, and the SVG includes\n * url(#...) references to locally defined ids, in some cases the icon is not rendered properly.\n * because of ids colliding. We make sure the ids are unique in each rendered icon.\n */\nfunction makeIdsUnique(svg: string): string {\n  const randomPostfix = (Math.random() * 1000).toFixed(0);\n  const idMatches = svg.matchAll(/id=\"(.*?)\"/g);\n  return [...idMatches].reduce((modifiedSvg, [_, id]) => {\n    const newId = `${id}-${randomPostfix}`;\n    return replaceAll(\n      `id=\"${id}\"`,\n      `id=\"${newId}\"`,\n      replaceAll(`url(#${id})`, `url(#${newId})`, modifiedSvg)\n    );\n  }, svg);\n}\n\nfunction replaceAll(theOld: string, theNew: string, str: string): string {\n  const replaced = str.replace(theOld, theNew);\n  const replacedAgain = replaced.replace(theOld, theNew);\n  if (replaced === replacedAgain) {\n    return replaced;\n  }\n  return replaceAll(theOld, theNew, replacedAgain);\n}\n","import { PressProps, usePress } from \"@react-aria/interactions\";\nimport React, { ForwardedRef, HTMLProps } from \"react\";\nimport { styled } from \"../styled\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport { useFocusable } from \"@react-aria/focus\";\n\nexport interface IconButtonProps\n  extends PressProps,\n    // Maybe we should allow any arbitrary HTMLProps<HTMLButtonElement> props, instead of whitelisting?\n    Pick<\n      HTMLProps<HTMLButtonElement>,\n      \"onFocus\" | \"onBlur\" | \"style\" | \"className\"\n    > {\n  children?: React.ReactNode;\n  /**\n   * The minimum width/height of the button.\n   */\n  minSize?: number;\n  /**\n   * Whether the button should be focusable by pressing tab. The default is true for icon buttons (aka. action buttons),\n   * which means they are not included in the tab order.\n   */\n  excludeFromTabOrder?: boolean;\n}\n\nexport const DEFAULT_MINIMUM_BUTTON_SIZE = 22;\nexport const NAVBAR_MINIMUM_BUTTON_SIZE = 20;\n\nexport const StyledIconButton = styled.button<{ minSize: number }>`\n  position: relative; // to allow absolutely positioned overlays like an dropdown icon at the bottom right corner\n  background: none;\n  color: inherit;\n  border: 1px solid transparent;\n  border-radius: 3px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  min-height: ${({ minSize }) => `${minSize}px`};\n  min-width: ${({ minSize }) => `${minSize}px`};\n  padding: 0;\n  margin: 0;\n  &:disabled {\n    opacity: 0.25; // not quite accurate implementation. There might be better ways to style disabled state.\n  }\n  &:hover:not(:disabled) {\n    background: ${({ theme }) =>\n      theme.color(\"ActionButton.hoverBackground\", \"#DFDFDF\")};\n    border-color: ${({ theme }) =>\n      theme.color(\"ActionButton.hoverBorderColor\", \"#DFDFDF\")};\n  }\n  &:focus-visible:not(:disabled) {\n    outline: none;\n    background: ${({ theme }) =>\n      theme.color(\"ActionButton.pressedBackground\", \"#CFCFCF\")};\n    border-color: ${({ theme }) =>\n      theme.color(\n        \"ActionButton.focusedBorderColor\",\n        theme.dark ? \"#5eacd0\" : \"#62b8de\"\n      )};\n  }\n  &:active:not(:disabled),\n  &.active:not(:disabled) {\n    background: ${({ theme }) =>\n      theme.color(\"ActionButton.pressedBackground\", \"#CFCFCF\")};\n    border-color: ${({ theme }) =>\n      theme.color(\"ActionButton.pressedBorderColor\", \"#CFCFCF\")};\n  }\n`;\n\n/**\n * Icon button, aka Action Button, in the reference implementation.\n * @see https://jetbrains.github.io/ui/controls/icon_button/\n */\nexport const IconButton = React.forwardRef(function IconButton(\n  {\n    minSize = DEFAULT_MINIMUM_BUTTON_SIZE,\n    preventFocusOnPress = true,\n    excludeFromTabOrder = true,\n    isPressed: isPressedInput,\n    isDisabled,\n    onPress,\n    onPressChange,\n    onPressEnd,\n    onPressStart,\n    onPressUp,\n    shouldCancelOnPointerExit,\n    ...otherProps\n  }: IconButtonProps,\n  forwardedRef: ForwardedRef<HTMLButtonElement>\n) {\n  // FIXME: use useButton\n\n  const ref = useObjectRef(forwardedRef);\n  const { focusableProps } = useFocusable({ isDisabled }, ref);\n  const { pressProps, isPressed } = usePress({\n    ref,\n    isPressed: isPressedInput,\n    isDisabled,\n    onPress,\n    onPressChange,\n    onPressEnd,\n    onPressStart,\n    onPressUp,\n    shouldCancelOnPointerExit,\n    preventFocusOnPress,\n  });\n\n  return (\n    <StyledIconButton\n      className={isPressed ? \"active\" : \"\"}\n      disabled={isDisabled}\n      {...mergeProps(pressProps, otherProps, focusableProps)}\n      minSize={minSize}\n      tabIndex={excludeFromTabOrder && !isDisabled ? -1 : undefined}\n      ref={ref}\n    />\n  );\n});\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  IconButton,\n  IconButtonProps,\n} from \"@intellij-platform/core/IconButton\";\nimport { MenuTrigger, MenuTriggerProps } from \"@intellij-platform/core/Menu\";\nimport { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport { mergeProps } from \"@react-aria/utils\";\n\nconst ArrowIcon = styled(PlatformIcon)`\n  position: absolute;\n  right: 1px;\n  bottom: 1px;\n`;\n\ntype IconButtonWithMenuProps = IconButtonProps &\n  Pick<MenuTriggerProps, \"renderMenu\"> & {\n    /**\n     * whether the default arrow should be removed or not. false by default.\n     */\n    noArrow?: boolean;\n  };\n/**\n * Renders an IconButton which opens a menu. by default a down arrow icon is shown as an overlay on the rendered\n * icon, but it can be disabled by passing `noArrow`. It also restores the focus to the previously focused element,\n * when the menu is closed.\n * @param renderMenu: render prop for rendering the menu\n * @param children: the content of the icon button\n * @param noArrow: whether the default arrow should be removed or not. false by default.\n * @param buttonProps: the rest of the props that will be passed down to IconButton\n *\n * TODO: Add story and write test for focus restoration, noArrow, and basic functionality.\n */\nexport const IconButtonWithMenu = ({\n  renderMenu,\n  children,\n  noArrow = false,\n  ...buttonProps\n}: IconButtonWithMenuProps) => {\n  const previouslyFocusedElementRef = useRef<HTMLElement>();\n  return (\n    <MenuTrigger\n      renderMenu={renderMenu}\n      onOpenChange={(open) => {\n        if (!open && previouslyFocusedElementRef.current) {\n          previouslyFocusedElementRef.current.focus();\n        }\n      }}\n    >\n      {(props, ref) => (\n        <IconButton\n          {...mergeProps(buttonProps, props, {\n            onFocus: (e: FocusEvent) => {\n              if (e.relatedTarget && e.relatedTarget instanceof HTMLElement) {\n                previouslyFocusedElementRef.current = e.relatedTarget;\n              }\n            },\n          })}\n          ref={ref}\n        >\n          {children}\n          {!noArrow && <ArrowIcon icon=\"general/dropdown.svg\" />}\n        </IconButton>\n      )}\n    </MenuTrigger>\n  );\n};\n","import React, { ComponentProps, HTMLAttributes, HTMLProps } from \"react\";\nimport { useTheme } from \"styled-components\";\nimport { Theme } from \"./Theme/Theme\";\n\ninterface Props extends React.ImgHTMLAttributes<HTMLImageElement> {\n  /**\n   * src for when a dark theme is active. if `darkSrc` doesn't have a non-empty string value, src will be used both\n   * for dark and light themes.\n   */\n  darkSrc?: string;\n}\n/**\n * Same as default `img`, but theme aware. Meaning that you can specify different sources for normal and dark mode.\n */\nexport const Img: React.FC<Props> = ({ darkSrc, ...props }) => {\n  const theme = useTheme() as Theme;\n  if (theme.dark) {\n    return <img {...props} src={darkSrc || props.src} />;\n  }\n  return <img {...props} />;\n};\n","import React, {\n  ForwardedRef,\n  InputHTMLAttributes,\n  useEffect,\n  useState,\n} from \"react\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport { FocusableOptions, useFocusable } from \"@react-aria/focus\";\nimport { useFocusWithin } from \"@react-aria/interactions\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { styled, css } from \"@intellij-platform/core/styled\";\n\nconst StyledInputBox = styled.div<{\n  disabled?: boolean;\n  focused?: boolean;\n  validationState: InputProps[\"validationState\"];\n  appearance: InputProps[\"appearance\"];\n}>`\n  box-sizing: border-box;\n  display: inline-flex;\n  min-width: 4rem; // https://jetbrains.github.io/ui/controls/input_field/#28\n  background: ${({ theme, disabled }) =>\n    disabled\n      ? theme.color(\"TextField.disabledBackground\")\n      : theme.color(\"TextField.background\")};\n  border: 1px solid\n    ${({ theme, focused, disabled, validationState }) =>\n      theme.commonColors.border({\n        focused,\n        disabled,\n        validationState,\n      })};\n  box-shadow: 0 0 0 0.125rem\n    ${({ theme, focused = false, validationState, disabled }) =>\n      disabled\n        ? \"transparent\"\n        : theme.commonColors.focusRing({\n            validationState,\n            focused: focused,\n          })};\n  border-radius: 1px;\n  cursor: text; // the whole box moves focus to the input\n  overflow: hidden;\n  ${({ appearance, validationState, disabled }) =>\n    appearance === \"embedded\" &&\n    css`\n      border-color: ${validationState !== \"error\" && \"transparent\"};\n      box-shadow: ${validationState !== \"error\" && \"none\"};\n      background: ${!disabled && \"transparent\"};\n    `};\n`;\n\nconst StyledInput = styled.input<{ disabled?: boolean }>`\n  all: unset;\n  padding: 0.1875rem 0.375rem;\n  flex: 1; // fill in the available space within the input box\n  min-width: 0;\n  line-height: 1rem;\n  color: ${({ theme }) =>\n    theme.color(\n      \"TextField.foreground\" as UnknownThemeProp<\"TextField.foreground\">\n    )};\n  color: ${({ theme, disabled }) =>\n    disabled &&\n    theme.color(\n      \"TextField.inactiveForeground\" as UnknownThemeProp<\"TextField.inactiveForeground\">\n    )};\n\n  caret-color: ${({ theme }) =>\n    theme.color(\n      \"TextField.caretForeground\" as UnknownThemeProp<\"TextField.caretForeground\">\n    )};\n  &::selection {\n    background: ${({ theme }) =>\n      theme.color(\n        \"*.selectionBackground\"\n      )}; // Not checked with the reference impl\n    color: ${({ theme }) =>\n      theme.color(\n        \"*.selectionForeground\"\n      )}; // Not checked with the reference impl\n  }\n  &::placeholder {\n    color: ${({ theme }) => theme.commonColors.inactiveTextColor};\n  }\n`;\n\nconst StyledAddons = styled.div`\n  display: inline-flex;\n  align-items: center;\n  gap: 0.25rem; /* TODO: check */\n  padding: 1px 0;\n`;\nconst StyledRightAddons = styled(StyledAddons)`\n  margin-right: 0.125rem; /* TODO: check */\n`;\n\nconst StyledLeftAddons = styled(StyledAddons)`\n  margin-left: 0.375rem; /* TODO: check */\n`;\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  validationState?: \"valid\" | \"error\" | \"warning\";\n  /**\n   * Whether to auto select the value initially\n   */\n  autoSelect?: boolean;\n\n  /**\n   * Rendered inside the input box and after the input element.\n   * Used to render [Built-in buttons](https://jetbrains.github.io/ui/controls/built_in_button/).\n   */\n  addonAfter?: React.ReactNode;\n  /**\n   * Rendered inside the input box and before the input element.\n   */\n  addonBefore?: React.ReactNode;\n\n  /**\n   * Ref to the underlying input element\n   */\n  inputRef?: React.Ref<HTMLInputElement>;\n\n  /**\n   * Appearance of the input.\n   * - \"ghost\": Without the border and shadow in valid state.\n   * - \"boxed\" With the border and shadow.\n   * @default \"box\"\n   */\n  appearance?: \"embedded\" | \"box\";\n}\n\n/**\n * Bare input, themed, and with a few extra features:\n * - Support for \"error\" and \"warning\" state ({@param validationState}\n * - Support for autoSelect.\n * - Disables spell check by default. It can be overwritten.\n * Use {@link InputField} for more features like an associated label, error message and context help.\n */\nexport const Input = React.forwardRef(function Input(\n  {\n    validationState,\n    autoSelect,\n    addonBefore,\n    addonAfter,\n    style,\n    className,\n    inputRef: inputRefProp,\n    onFocus,\n    onBlur,\n    autoFocus,\n    appearance,\n    ...props\n  }: InputProps,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n) {\n  const ref = useObjectRef(forwardedRef);\n  const inputRef = useObjectRef(inputRefProp);\n  const { focusableProps } = useFocusable(\n    {\n      isDisabled: props.disabled,\n      autoFocus,\n      onFocus,\n      onBlur,\n    } as FocusableOptions,\n    inputRef\n  );\n  const [isFocused, setIsFocused] = useState(false);\n  const { focusWithinProps } = useFocusWithin({\n    onFocusWithinChange: setIsFocused,\n  });\n\n  useEffect(() => {\n    if (autoSelect) {\n      inputRef.current?.select();\n    }\n  }, [autoSelect]);\n\n  return (\n    <StyledInputBox\n      ref={ref}\n      spellCheck={false}\n      appearance={appearance}\n      {...mergeProps(focusWithinProps, {\n        className,\n        style,\n        onMouseDown: (event: MouseEvent) => {\n          if (event.target !== inputRef.current) {\n            event.preventDefault();\n            inputRef.current?.focus();\n          }\n        },\n      })}\n      focused={isFocused}\n      validationState={validationState}\n      disabled={props.disabled}\n    >\n      {addonBefore && <StyledLeftAddons>{addonBefore}</StyledLeftAddons>}\n      <StyledInput ref={inputRef} {...mergeProps(props, focusableProps)} />\n      {addonAfter && <StyledRightAddons>{addonAfter}</StyledRightAddons>}\n    </StyledInputBox>\n  );\n});\n","import React, {\n  ChangeEvent,\n  CSSProperties,\n  ForwardedRef,\n  HTMLProps,\n} from \"react\";\nimport { AriaFieldProps, useField } from \"@react-aria/label\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport { FocusableProps } from \"@react-types/shared\";\nimport {\n  PositionedTooltipTrigger,\n  ValidationTooltip,\n} from \"@intellij-platform/core/Tooltip\";\nimport { Input, InputProps } from \"@intellij-platform/core/InputField/Input\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport {\n  ContextHelpProps,\n  WithInlineContextHelp,\n} from \"@intellij-platform/core/Field/ContextHelp\";\nimport { LabelPlacement, WithLabel } from \"@intellij-platform/core/Field/Label\";\n\nexport interface InputFieldProps\n  extends Omit<\n      AriaFieldProps,\n      \"labelElementType\" | \"validationState\" | \"errorMessage\" | \"isInvalid\"\n    >,\n    FocusableProps,\n    Pick<\n      InputProps,\n      \"addonBefore\" | \"addonAfter\" | \"inputRef\" | \"validationState\"\n    >,\n    ContextHelpProps {\n  /**\n   * className applied on the field's wrapper div.\n   */\n  className?: string;\n  /**\n   * style applied on the field's wrapper div.\n   */\n  style?: CSSProperties;\n  /**\n   * Label to be associated with the input.\n   */\n  label?: React.ReactNode;\n  /**\n   * Placement of the label with respect to the input box.\n   */\n  labelPlacement?: LabelPlacement;\n\n  /**\n   * Whether the input is disabled. Use this prop\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Convenient prop to be used instead of inputProps.placeholder\n   **/\n  placeholder?: string;\n  /**\n   * Convenient prop to be used instead of inputProps.value\n   **/\n  value?: HTMLProps<HTMLInputElement>[\"value\"];\n  /**\n   * Convenient prop to be used instead of inputProps.defaultValue\n   **/\n  defaultValue?: HTMLProps<HTMLInputElement>[\"defaultValue\"];\n  /**\n   * Convenient prop to be used instead of inputProps.onChange. It also calls the passed callback with the\n   * change value instead of input.\n   **/\n  onChange?: (newValue: string) => void;\n  /**\n   * Props to be passed to the underlying input element.\n   **/\n  inputProps?: Omit<\n    HTMLProps<HTMLInputElement>,\n    \"as\" | \"ref\" | \"disabled\" //isDisabled should be used\n  >;\n  /**\n   * Whether to auto select the value initially\n   */\n  autoSelect?: boolean;\n\n  /**\n   * Validation message shown as a {@link ValidationTooltip} above the field.\n   * {@link ValidationTooltipProps#type} is defined based on `validationState`.\n   */\n  validationMessage?: React.ReactNode;\n}\n\nconst StyledInput = styled(Input)`\n  width: 100%;\n`;\n\n/**\n * An input box with an associated label, error message, and context help.\n */\nexport const InputField = React.forwardRef(function InputField(\n  {\n    validationState,\n    validationMessage,\n    className,\n    style,\n    labelPlacement = \"before\",\n    contextHelp,\n    contextHelpPlacement,\n    inputProps = {},\n    addonBefore,\n    addonAfter,\n    inputRef,\n    ...props\n  }: InputFieldProps,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n): JSX.Element {\n  const ref = useObjectRef(forwardedRef);\n  const { fieldProps, errorMessageProps, labelProps, descriptionProps } =\n    useField({\n      ...props,\n      errorMessage: validationMessage,\n      validationState:\n        validationState === \"error\" || validationState === \"warning\"\n          ? \"invalid\"\n          : \"valid\",\n    });\n\n  return (\n    <WithLabel\n      ref={ref}\n      label={props.label}\n      labelPlacement={labelPlacement}\n      isDisabled={props.isDisabled}\n      labelProps={labelProps}\n      className={className}\n      style={style}\n    >\n      <WithInlineContextHelp\n        contextHelp={contextHelp}\n        contextHelpPlacement={contextHelpPlacement}\n        descriptionProps={descriptionProps}\n      >\n        <PositionedTooltipTrigger\n          placement=\"top start\"\n          crossOffset={36}\n          showOnFocus\n          isDisabled={!validationMessage}\n          tooltip={\n            <ValidationTooltip\n              type={validationState !== \"valid\" ? validationState : undefined}\n            >\n              <div {...errorMessageProps}>{validationMessage}</div>\n            </ValidationTooltip>\n          }\n          delay={0}\n        >\n          <StyledInput\n            inputRef={inputRef}\n            placeholder={props.placeholder}\n            disabled={props.isDisabled}\n            validationState={validationState}\n            autoSelect={props.autoSelect}\n            autoFocus={props.autoFocus}\n            addonAfter={addonAfter}\n            addonBefore={addonBefore}\n            {...mergeProps(fieldProps, inputProps, {\n              value: props.value,\n              defaultValue: props.defaultValue,\n              onChange: (e: ChangeEvent<HTMLInputElement>) =>\n                props.onChange?.(e.target.value),\n            })}\n          />\n        </PositionedTooltipTrigger>\n      </WithInlineContextHelp>\n    </WithLabel>\n  );\n});\n","import { Theme, UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { styled } from \"@intellij-platform/core/styled\";\n\nconst getDefaultLinkColor = ({ theme }: { theme: Theme }) =>\n  theme.commonColors.linkForegroundEnabled;\n\nexport const StyledLink = styled.a`\n  cursor: pointer;\n  text-decoration: none;\n  outline: none;\n  // &:focus-visible didn't work as expected, so FocusRing is used\n  &.focus-visible {\n    outline: 1px solid\n      ${({ theme }) =>\n        theme.color(\n          \"Link.focusedBorderColor\" as UnknownThemeProp<\"Link.focusedBorderColor\">,\n          theme.commonColors.focusBorderColor\n        )};\n    border-radius: 2px; // Registry.intValue(\"ide.link.button.focus.round.arc\", 4)\n  }\n  color: ${getDefaultLinkColor};\n\n  &:hover,\n  &.hover /* for testing purposes*/ {\n    text-decoration: underline;\n    color: ${({ theme }) =>\n      theme.color(\n        \"Link.hoverForeground\",\n        theme.color(\n          \"link.hover.foreground\" as UnknownThemeProp<\"link.hover.foreground\">,\n          \"\" /*FIXME: check*/\n        )\n      )};\n  }\n  &:active,\n  &.active {\n    color: ${({ theme }) =>\n      theme.color(\n        \"Link.pressedForeground\",\n        theme.color(\n          \"link.pressed.foreground\" as UnknownThemeProp<\"link.pressed.foreground\">,\n          !theme.dark ? \"#F00000\" : \"#BA6F25\"\n        )\n      )};\n  }\n  &:disabled,\n  &.disabled {\n    cursor: default;\n    text-decoration: none;\n    color: ${({ theme }) =>\n      theme.color(\n        \"Link.disabledForeground\" as UnknownThemeProp<\"Link.disabledForeground\">,\n        theme.color(\n          \"Label.disabledForeground\",\n          theme.color(\"Label.disabledText\", \"#999\")\n        )\n      )};\n  }\n  // We may need to refine this to allow passing visited as a prop for links that don't have href, and not apply the\n  // styles in that case, since it seems no href is considered visited by default. Although, in all main themes\n  // Link.visitedForeground is set to the default link color.\n  &:visited,\n  &.visited {\n    color: ${({ theme }) =>\n      theme.color(\n        \"Link.visitedForeground\",\n        theme.color(\n          \"link.visited.foreground\" as UnknownThemeProp<\"link.visited.foreground\">,\n          !theme.dark ? \"#800080\" : \"#9776A9\"\n        )\n      )};\n  }\n`;\n","import React, { ForwardedRef } from \"react\";\nimport { AriaLinkProps } from \"@react-types/link\";\nimport { FocusRing, useFocusable } from \"@react-aria/focus\";\nimport { StyledLink } from \"@intellij-platform/core/Link/StyledLink\";\nimport { usePress } from \"@react-aria/interactions\";\nimport { filterDOMProps, mergeProps, useObjectRef } from \"@react-aria/utils\";\n\nexport type LinkProps = AriaLinkProps & {\n  isDisabled?: boolean;\n  className?: string;\n  children: React.ReactNode;\n  preventFocusOnPress?: boolean; // Should this be become true by default?\n  excludeFromTabOrder?: boolean;\n};\n\n/**\n * A focusable span in style of [Link](https://jetbrains.github.io/ui/controls/link/) and with accessibility role of link.\n *\n * TODO and known issues:\n * - in the reference impl, Space presses the link, Enter doesn't. It's vice versa here, because of how usePress is implemented.\n * - Support for External links\n * - Support for Anchor elements?\n *\n * Unknowns:\n * - What are ActionLink and DefaultLinkButtonUI?\n * - What is HyperLinkLabel compared to LabelLink (which was looked into in implementation of this component)?\n */\nexport const Link = React.forwardRef(\n  (\n    props: LinkProps,\n    forwardedRef: ForwardedRef<HTMLAnchorElement>\n  ): React.ReactElement => {\n    const ref = useObjectRef(forwardedRef);\n\n    const { focusableProps } = useFocusable(props, ref);\n    const { pressProps, isPressed } = usePress({ ...props, ref });\n    const domProps = filterDOMProps(props, { labelable: true });\n    const interactionHandlers = mergeProps(focusableProps, pressProps);\n\n    return (\n      <FocusRing focusRingClass=\"focus-visible\">\n        <StyledLink\n          {...mergeProps(focusableProps, interactionHandlers, domProps)}\n          as=\"span\"\n          role=\"link\"\n          ref={ref}\n          // maybe use clsx\n          className={`${props.isDisabled ? \"disabled\" : \"\"} ${\n            isPressed ? \"active\" : \"\"\n          } ${props.className || \"\"}`}\n          aria-disabled={props.isDisabled || undefined}\n          tabIndex={\n            !props.isDisabled ? (props.excludeFromTabOrder ? -1 : 0) : undefined\n          }\n        >\n          {props.children}\n        </StyledLink>\n      </FocusRing>\n    );\n  }\n);\n","import { AriaListBoxProps } from \"@react-types/listbox\";\nimport { AsyncLoadable, Node } from \"@react-types/shared\";\nimport React, { ForwardedRef, Key } from \"react\";\nimport { useList } from \"./useList\";\nimport { ListItem } from \"./ListItem\";\nimport { StyledList } from \"./StyledList\";\nimport { useListState } from \"./useListState\";\nimport { filterDOMProps, useObjectRef } from \"@react-aria/utils\";\n\nimport { CollectionRefProps } from \"@intellij-platform/core/Collections/useCollectionRef\";\nimport { Virtualizer } from \"@react-aria/virtualizer\";\nimport { useListVirtualizer } from \"@intellij-platform/core/List/useListVirtualizer\";\nimport { ListContext } from \"@intellij-platform/core/List/ListContext\";\nimport { CollectionFocusProxyProps } from \"@intellij-platform/core/Collections\";\n\nexport type ListProps<T extends object> = Omit<\n  Omit<AriaListBoxProps<T>, \"disallowEmptySelection\">,\n  keyof AsyncLoadable\n> &\n  CollectionRefProps &\n  CollectionFocusProxyProps & {\n    /**\n     * fills the available horizontal or vertical space, when rendered in a flex container.\n     */\n    fillAvailableSpace?: boolean;\n    /**\n     * When true, shows the list in focused style, even when it's not focused. A common use case is when the list\n     * is virtually focused. i.e. the focus is physically on some other element (like a search input) which handles\n     * keyboard events as if the list was focused.\n     * Another (maybe questionable) use case is master detail views, where the master view is shown as focused, even\n     * when the details view has physical focus.\n     */\n    showAsFocused?: boolean;\n    allowEmptySelection?: boolean;\n    /**\n     * Called when the action for the item should be triggered, which can be by double click or pressing Enter.\n     * Enter not implemented yet :D\n     */\n    onAction?: (key: Key) => void;\n\n    /**\n     * Useful when list items have a custom height, to hint layout calculation logic about the item height which\n     * increases rendering efficiency and also prevents flash of items with wrong height.\n     */\n    estimatedItemHeight?: number;\n\n    className?: string;\n  };\n\n/**\n * List view\n */\nexport const List = React.forwardRef(function List<T extends object>(\n  {\n    allowEmptySelection = false,\n    fillAvailableSpace = false,\n    estimatedItemHeight,\n    className,\n    ...inputProps\n  }: ListProps<T>,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n) {\n  const props: AriaListBoxProps<T> & CollectionRefProps = {\n    ...inputProps,\n    disallowEmptySelection: !allowEmptySelection,\n  };\n  const ref = useObjectRef(forwardedRef);\n  const state = useListState(props);\n  const { listProps, listContext } = useList(\n    {\n      ...props,\n      isVirtualized: true,\n    },\n    state,\n    ref\n  );\n\n  const {\n    virtualizerProps: { children: renderNode, ...virtualizerProps },\n  } = useListVirtualizer({\n    state,\n    estimatedItemHeight,\n    renderItem: (item) => <ListItem key={item.key} item={item} />,\n  });\n\n  return (\n    <ListContext.Provider value={listContext}>\n      <StyledList\n        as={Virtualizer<Node<any>, any>}\n        {...virtualizerProps}\n        {...listProps}\n        {...filterDOMProps(props, { labelable: true })}\n        fillAvailableSpace={fillAvailableSpace}\n        className={className}\n        ref={ref}\n      >\n        {renderNode}\n      </StyledList>\n    </ListContext.Provider>\n  );\n});\n","import React, { Key } from \"react\";\nimport { ListState } from \"@react-stately/list\";\n\nexport type ListContextType<T> = {\n  state: ListState<T>;\n  focused: boolean;\n  onAction: ((key: Key) => void) | undefined;\n};\n\nexport const ListContext = React.createContext<ListContextType<any> | null>(\n  null\n);\n","import React from \"react\";\nimport { StyledVerticalSeparator } from \"../StyledSeparator\";\nimport { useSeparator } from \"@react-aria/separator\";\n\nexport const ListDivider: React.FC = () => {\n  return (\n    <StyledVerticalSeparator\n      as={\"li\"}\n      {...useSeparator({ elementType: \"li\", orientation: \"vertical\" })\n        .separatorProps}\n    />\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Node } from \"@react-types/shared\";\nimport { usePress } from \"@react-aria/interactions\";\nimport { useSelectableItem } from \"@intellij-platform/core/selection\";\nimport { ItemStateContext } from \"@intellij-platform/core/Collections\";\nimport { StyledListItem } from \"./StyledListItem\";\nimport { ListContext } from \"@intellij-platform/core/List/ListContext\";\n\nexport interface ListItemProps<T> {\n  item: Node<T>;\n  children?: React.ReactNode;\n}\n\nexport function ListItem<T>({ item, children }: ListItemProps<T>) {\n  const { state, focused: listFocused, onAction } = useContext(ListContext)!;\n  const ref = React.useRef(null);\n  const isDisabled = state.disabledKeys.has(item.key);\n  const isSelected = state.selectionManager.isSelected(item.key);\n\n  const { itemProps } = useSelectableItem({\n    key: item.key,\n    ref,\n    onAction: () => onAction?.(item.key),\n    selectionManager: state.selectionManager,\n  });\n\n  return (\n    <StyledListItem\n      containerFocused={listFocused}\n      selected={isSelected}\n      disabled={isDisabled}\n      aria-disabled={isDisabled}\n      aria-selected={isSelected}\n      aria-label={item[\"aria-label\"]}\n      {...itemProps}\n      ref={ref}\n    >\n      <ItemStateContext.Provider\n        value={{\n          isDisabled,\n          isSelected,\n          isContainerFocused: listFocused,\n          node: item,\n        }}\n      >\n        {children || item.rendered}\n      </ItemStateContext.Provider>\n    </StyledListItem>\n  );\n}\n","import { css } from \"styled-components\";\nimport { styled } from \"../styled\";\n\ntype StyledListProps = {\n  fillAvailableSpace?: boolean;\n};\nexport const StyledList = styled.div\n  .attrs<StyledListProps>((props) => ({ role: props.role || \"list\" }))\n  .withConfig<StyledListProps>({\n    shouldForwardProp: (prop) => prop !== \"fillAvailableSpace\",\n  })<StyledListProps>`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  max-height: 100%;\n  overflow: auto;\n  color: ${({ theme }) => theme.color(\"*.textForeground\")};\n  outline: none;\n  ${({ fillAvailableSpace }) =>\n    fillAvailableSpace &&\n    css`\n      flex: 1;\n      height: fill-available; // will be converted to --webkit-fill-available and --moz-available, but doesn't work in FF\n    `}\n  background: ${({ theme }) => theme.color(\"List.background\")};\n`;\n","import { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { styled } from \"../styled\";\n\nexport type StyledListItemProps = {\n  containerFocused: boolean;\n  selected: boolean;\n  disabled: boolean;\n};\n\nexport const StyledListItem = styled.div.attrs<StyledListItemProps>(\n  (props) => ({\n    role: props.role || \"listitem\",\n  })\n)<StyledListItemProps>`\n  ${({ containerFocused, selected, disabled, theme }) => {\n    let backgroundColor;\n    let color = disabled\n      ? theme.color(\"*.disabledForeground\")\n      : theme.color(\n          \"List.foreground\" as UnknownThemeProp<\"List.foreground\">,\n          theme.commonColors.labelForeground\n        );\n    if (selected) {\n      if (containerFocused) {\n        color = theme.asCurrentForeground(\n          theme.color(\n            \"List.selectionForeground\" as UnknownThemeProp<\"List.selectionForeground\">\n          ) || theme.commonColors.labelSelectedForeground\n        ) /* Prioritizing \"*.selectionForeground\" over labelSelectedForeground*/;\n        backgroundColor = theme.color(\n          \"List.selectionBackground\" as UnknownThemeProp<\"List.selectionBackground\">\n        );\n      } else {\n        color = theme.color(\n          \"List.selectionInactiveForeground\" as UnknownThemeProp<\"List.selectionInactiveForeground\">,\n          color\n        );\n        backgroundColor = theme.color(\n          \"List.selectionBackgroundInactive\" as UnknownThemeProp<\"List.selectionBackgroundInactive\">\n        );\n      }\n    }\n    return {\n      backgroundColor: theme.asCurrentBackground(backgroundColor),\n      color,\n    };\n  }};\n  position: relative;\n  display: flex;\n  white-space: nowrap;\n  padding: 0 0.5rem; // themed?\n  line-height: 1.25rem;\n  outline: none;\n  cursor: default;\n  min-width: min-content; // Needed for content sizing for when list/tree is used inside popup or modal window\n`;\n","import { AriaSelectableListOptions } from \"@react-aria/selection\";\nimport { ListState } from \"@react-stately/list\";\nimport React, { Key, useEffect, useMemo, useState } from \"react\";\nimport { useSelectableList } from \"./useSelectableList\";\nimport { useFocusWithin } from \"@react-aria/interactions\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { CollectionRefProps } from \"@intellij-platform/core/Collections/useCollectionRef\";\nimport { useEventCallback } from \"@intellij-platform/core/utils/useEventCallback\";\nimport { ListContextType } from \"@intellij-platform/core/List/ListContext\";\nimport {\n  CollectionFocusProxyProps,\n  useCollectionFocusProxy,\n} from \"@intellij-platform/core/Collections\";\n\nexport interface ListProps\n  extends Omit<\n      AriaSelectableListOptions,\n      | \"disallowEmptySelection\"\n      | \"selectOnFocus\"\n      | \"selectionManager\" // Grouped as state, the second argument, like in useListBox\n      | \"collection\" // Grouped as state, the second argument, like in useListBox\n      | \"disabledKeys\" // Grouped as state, the second argument, like in useListBox\n      | \"ref\" // Third argument\n    >,\n    CollectionFocusProxyProps,\n    CollectionRefProps {\n  allowEmptySelection?: boolean;\n  /**\n   * Called when the action for the item should be triggered, which can be by double click or pressing Enter.\n   * Enter not implemented yet :D\n   */\n  onAction?: (key: Key) => void;\n  showAsFocused?: boolean;\n  id?: string;\n}\n// import { useSelectableList } from \"@react-aria/selection\";\n\nexport function useList<T>(\n  { onAction, showAsFocused, focusProxyRef, ...props }: ListProps,\n  state: ListState<T>,\n  ref: React.RefObject<HTMLElement>\n) {\n  const {\n    listProps: { onMouseDown, ...listProps },\n  } = useSelectableList({\n    ...props,\n    ref,\n    selectionManager: state.selectionManager,\n    disallowEmptySelection: !props.allowEmptySelection,\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    // if selectOnFocus is going to be an option (which is not in intellij UI), we should also conditionally show outline on items\n    selectOnFocus: true,\n  });\n\n  useCollectionFocusProxy({\n    focusProxyRef,\n    onAction,\n    state,\n    collectionRef: ref,\n  });\n\n  const [focused, setFocused] = useState(false);\n\n  const { focusWithinProps } = useFocusWithin({\n    onFocusWithinChange: setFocused,\n  });\n\n  // auto select the first item, if selection is empty and allowEmptySelection is false.\n  useEffect(() => {\n    const firstKey = state.collection.getFirstKey();\n    if (\n      !props.allowEmptySelection &&\n      state.selectionManager.isEmpty &&\n      firstKey\n    ) {\n      state.selectionManager.setFocusedKey(firstKey);\n      state.selectionManager.select(firstKey);\n    }\n  }, [!props.allowEmptySelection]);\n\n  const onActionCallback = useEventCallback(onAction ?? (() => {}));\n  const listContext: ListContextType<T> = useMemo(\n    () => ({\n      state,\n      focused: Boolean(focused || showAsFocused),\n      onAction: onActionCallback,\n    }),\n    [state, focused, showAsFocused]\n  );\n\n  return {\n    listProps: mergeProps(listProps, focusWithinProps),\n    listContext,\n    focused,\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n  Collection,\n  FocusStrategy,\n  KeyboardDelegate,\n  Node,\n} from \"@react-types/shared\";\nimport { HTMLAttributes, Key, RefObject, useMemo } from \"react\";\nimport { ListKeyboardDelegate } from \"@react-aria/selection\";\nimport {\n  MultipleSelectionManager,\n  SelectionManager,\n} from \"@react-stately/selection\";\nimport { useCollator } from \"@react-aria/i18n\";\nimport { useSelectableCollection } from \"@intellij-platform/core/selection\";\nimport { useCollectionAutoScroll } from \"@intellij-platform/core/Collections/useCollectionAutoScroll\";\n\ninterface SelectableListOptions {\n  /**\n   * An interface for reading and updating multiple selection state.\n   */\n  selectionManager: MultipleSelectionManager;\n  /**\n   * State of the collection.\n   */\n  collection: Collection<Node<unknown>>;\n  /**\n   * The item keys that are disabled. These items cannot be selected, focused, or otherwise\n   * interacted with.\n   */\n  disabledKeys: Set<Key>;\n  /**\n   * A ref to the item.\n   */\n  ref: RefObject<HTMLElement>;\n  /**\n   * A delegate that returns collection item keys with respect to visual layout.\n   */\n  keyboardDelegate?: KeyboardDelegate;\n  /**\n   * Whether the collection or one of its items should be automatically focused upon render.\n   * @default false\n   */\n  autoFocus?: boolean | FocusStrategy;\n  /**\n   * Whether focus should wrap around when the end/start is reached.\n   * @default false\n   */\n  shouldFocusWrap?: boolean;\n  /**\n   * Whether the option is contained in a virtual scroller.\n   */\n  isVirtualized?: boolean;\n  /**\n   * Whether the collection allows empty selection.\n   * @default false\n   */\n  disallowEmptySelection?: boolean;\n  /**\n   * Whether selection should occur automatically on focus.\n   * @default false\n   */\n  selectOnFocus?: boolean;\n  /**\n   * Whether typeahead is disabled.\n   * @default false\n   */\n  disallowTypeAhead?: boolean;\n  /**\n   * Whether the collection items should use virtual focus instead of being focused directly.\n   */\n  shouldUseVirtualFocus?: boolean;\n  /**\n   * Whether navigation through tab key is enabled.\n   */\n  allowsTabNavigation?: boolean;\n}\n\ninterface SelectableListAria {\n  /**\n   * Props for the option element.\n   */\n  listProps: HTMLAttributes<HTMLElement>;\n}\n\n/**\n * Handles interactions with a selectable list.\n */\nexport function useSelectableList(\n  props: SelectableListOptions\n): SelectableListAria {\n  let {\n    selectionManager,\n    collection,\n    disabledKeys,\n    ref,\n    keyboardDelegate,\n    autoFocus,\n    shouldFocusWrap,\n    isVirtualized,\n    disallowEmptySelection,\n    selectOnFocus = false,\n    disallowTypeAhead,\n    shouldUseVirtualFocus,\n    allowsTabNavigation,\n  } = props;\n\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = useCollator({ usage: \"search\", sensitivity: \"base\" });\n  let delegate = useMemo(\n    () =>\n      keyboardDelegate ||\n      new ListKeyboardDelegate(collection, disabledKeys, ref, collator),\n    [keyboardDelegate, collection, disabledKeys, ref, collator]\n  );\n  useCollectionAutoScroll(\n    { isVirtualized, selectionManager: selectionManager as SelectionManager },\n    ref\n  );\n\n  let { collectionProps } = useSelectableCollection({\n    ref,\n    selectionManager,\n    keyboardDelegate: delegate,\n    autoFocus,\n    shouldFocusWrap,\n    disallowEmptySelection,\n    selectOnFocus,\n    disallowTypeAhead,\n    shouldUseVirtualFocus,\n    allowsTabNavigation,\n  });\n\n  return {\n    listProps: collectionProps,\n  };\n}\n","import {\n  ListProps,\n  ListState,\n  useListState as originalUseListState,\n} from \"@react-stately/list\";\nimport {\n  CollectionRefProps,\n  useCollectionRef,\n} from \"@intellij-platform/core/Collections/useCollectionRef\";\n\nexport function useListState<T extends object>(\n  props: ListProps<T> & CollectionRefProps\n): ListState<T> {\n  const state = originalUseListState({\n    ...props,\n    selectionBehavior: \"replace\",\n  });\n  useCollectionRef(props, state);\n  return state;\n}\n","import { SelectionManager } from \"@react-stately/selection\";\nimport { RefObject, useImperativeHandle } from \"react\";\n\nexport type CollectionRefProps = {\n  /**\n   * Gives imperative access to selection manager.\n   */\n  selectionManagerRef?: RefObject<SelectionManager>;\n};\n\n/**\n * Common imperative API for collections. Used in Lists at the moment. Tree components implement a different imperative\n * API that can be refactored later for more consistency.\n */\nexport function useCollectionRef(\n  { selectionManagerRef }: CollectionRefProps,\n  state: { selectionManager: SelectionManager }\n) {\n  useImperativeHandle(selectionManagerRef, () => state.selectionManager);\n}\n","import { styled } from \"../styled\";\n\nexport const StyledListSectionHeader = styled.div(({ theme }) => ({\n  paddingLeft: 8,\n  fontWeight: \"bold\",\n  lineHeight: \"20px\",\n  outline: \"none\",\n  cursor: \"default\",\n  color: theme.color(\"*.textForeground\", theme.color(\"*.foreground\")),\n}));\n","import { ReusableView } from \"@react-stately/virtualizer\";\nimport { Node } from \"@react-types/shared\";\nimport React, { ReactNode, useRef } from \"react\";\nimport {\n  layoutInfoToStyle,\n  useVirtualizerItem,\n  VirtualizerItem,\n  VirtualizerProps,\n} from \"@react-aria/virtualizer\";\nimport { StyledListSectionHeader } from \"@intellij-platform/core/List/StyledListSectionHeader\";\n\ninterface SectionProps<T> {\n  reusableView: ReusableView<Node<T>, unknown>;\n  header: ReusableView<Node<T>, unknown>;\n  children?: ReactNode;\n}\n\nfunction ListSection<T extends object>({\n  reusableView,\n  header,\n  children,\n}: SectionProps<T>) {\n  const headerRef = useRef<HTMLDivElement>(null);\n  useVirtualizerItem({\n    reusableView: header,\n    ref: headerRef,\n  });\n  return (\n    <>\n      <StyledListSectionHeader\n        role=\"presentation\"\n        ref={headerRef}\n        style={layoutInfoToStyle(header.layoutInfo!, \"ltr\")}\n      >\n        {reusableView.content.rendered}\n      </StyledListSectionHeader>\n      <div\n        key={reusableView.key}\n        style={layoutInfoToStyle(reusableView.layoutInfo!, \"ltr\")}\n      >\n        {children}\n      </div>\n    </>\n  );\n}\n\nexport const renderWrapper: VirtualizerProps<\n  Node<any>,\n  unknown\n>[\"renderWrapper\"] = (parent, reusableView, children, renderChildren) => {\n  if (reusableView.viewType === \"section\") {\n    return (\n      <ListSection\n        key={reusableView.key}\n        reusableView={reusableView}\n        header={children.find((c) => c.viewType === \"header\")!}\n      >\n        {renderChildren(children.filter((c) => c.viewType === \"item\"))}\n      </ListSection>\n    );\n  }\n  return (\n    <VirtualizerItem\n      key={reusableView.key}\n      reusableView={reusableView}\n      parent={parent ?? undefined}\n    />\n  );\n};\n","import React, { HTMLAttributes, useMemo } from \"react\";\nimport { VirtualizerProps } from \"@react-aria/virtualizer\";\nimport { VariableWidthListLayout } from \"@intellij-platform/core/VariableWidthListLayout\";\nimport { ListState } from \"@react-stately/list\";\nimport { Node } from \"@react-types/shared\";\nimport { renderWrapper } from \"./renderWrapper\";\nimport { ListDivider } from \"@intellij-platform/core/List/ListDivider\";\n\ninterface ItemNode<T> extends Node<T> {\n  type: \"item\";\n}\nexport const useListVirtualizer = <T extends object>({\n  renderItem,\n  estimatedItemHeight = 20,\n  state,\n}: {\n  renderItem: (item: ItemNode<T>) => React.ReactNode;\n  estimatedItemHeight?: number;\n  state: ListState<T>;\n}): {\n  virtualizerProps: Omit<\n    VirtualizerProps<Node<T>, unknown>,\n    keyof HTMLAttributes<HTMLElement>\n  > & { children: (type: string, content: Node<T>) => React.ReactNode };\n} => {\n  const layout = useMemo(\n    () =>\n      new VariableWidthListLayout<T>({\n        /**\n         * there is currently no documentation available for these fields, but setting `rowHeight` enforces it, which\n         * wouldn't be good for custom tree UI with a different row height.\n         * wrong estimatedRowHeight seems to only affect small scrollbar position inaccuracy, which is a minor issue\n         * and not even noticeable in most cases. Also, it seems it slightly improves the performance if it exactly\n         * matches the real row height. But not even sure.\n         */\n        estimatedRowHeight: estimatedItemHeight,\n        estimatedHeadingHeight: 20,\n        dividerHeight: 2,\n      }),\n    []\n  );\n  layout.collection = state.collection;\n  layout.disabledKeys = state.disabledKeys;\n\n  return {\n    virtualizerProps: {\n      focusedKey: state.selectionManager.focusedKey,\n      collection: state.collection,\n      layout,\n      // Not clear how this sizeToFit is supposed to work, due to lack of documentation, but don't be tempted to\n      // think it solves the problem VariableWidthListLayout is trying to solve, because it doesn't :D\n      // Also, note that setting this to \"width\" prevents re-layout when container width is increased, which\n      // causes issues.\n      sizeToFit: \"height\",\n      scrollToItem: (key) => {\n        return layout.virtualizer.scrollToItem(key, {\n          shouldScrollX: false,\n          duration: 0,\n        });\n      },\n      children: (type, item) => {\n        if (type === \"item\") {\n          return renderItem(item as ItemNode<T>);\n        }\n        if (type === \"divider\") {\n          return <ListDivider key={item.key} />;\n        }\n      },\n      renderWrapper,\n\n      scrollDirection: \"both\",\n    },\n  };\n};\n","import React, { ForwardedRef, HTMLAttributes, HTMLProps } from \"react\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useMenuTriggerState } from \"@react-stately/menu\";\nimport { OverlayTriggerProps } from \"@react-types/overlays\";\n\nimport { useContextMenu, UseContextMenuProps } from \"./useContextMenu\";\nimport { MenuOverlayFromOrigin } from \"@intellij-platform/core/Menu/MenuOverlayFromOrigin\";\n\ninterface ContextMenuContainerProps\n  extends Omit<HTMLProps<HTMLDivElement>, \"children\">,\n    UseContextMenuProps {\n  /**\n   * Will be called to return the Menu when context menu is triggered. Use {@link Menu} component to render a menu.\n   */\n  renderMenu: () => React.ReactNode;\n  /**\n   * If children is a function, context menu props is passed to it, to be passed to the underlying element.\n   * Otherwise, a div container will be rendered.\n   */\n  children:\n    | React.ReactNode\n    | ((props: HTMLAttributes<HTMLElement>) => React.ReactNode);\n}\n\n/**\n * A generic container for context menu. It's the same as a normal div, only with an additional `renderMenu` prop,\n * to be used to render context menu, when it's triggered.\n * Closes the menu when a menu action is triggered.\n */\nexport const ContextMenuContainer = React.forwardRef(\n  (\n    {\n      children,\n      renderMenu,\n      onOpen,\n      isDisabled,\n      ...props\n    }: ContextMenuContainerProps,\n    ref: ForwardedRef<HTMLDivElement>\n  ) => {\n    const state = useMenuTriggerState({} as OverlayTriggerProps);\n\n    const { positionOrigin, containerProps, overlayRef } = useContextMenu(\n      { onOpen, isDisabled },\n      state\n    );\n    const allProps = mergeProps(props, containerProps);\n    return (\n      <>\n        {typeof children === \"function\" ? (\n          children(allProps)\n        ) : (\n          <div {...allProps} ref={ref}>\n            {children}\n          </div>\n        )}\n        {state.isOpen && (\n          <MenuOverlayFromOrigin\n            onClose={state.close}\n            ref={overlayRef}\n            origin={positionOrigin}\n            /**\n             * Context menus don't autofocus the first item in the reference impl.\n             * Note that this just defines the default value, and can always be controlled per case on the rendered Menu\n             */\n            defaultAutoFocus={true}\n          >\n            {renderMenu()}\n          </MenuOverlayFromOrigin>\n        )}\n      </>\n    );\n  }\n);\n\n/**\n * Data attribute name to be used to mark an element as the reference for positioning a contextual menu.\n */\nexport const MENU_POSITION_TARGET_DATA_ATTRIBUTE =\n  \"data-context-menu-position-target\";\n","import React, { useRef, useState } from \"react\";\nimport { MenuTriggerState } from \"@react-stately/menu\";\n\nexport type UseContextMenuProps = {\n  /**\n   * Whether opening contextmenu is disabled.\n   */\n  isDisabled?: boolean;\n  /**\n   * Called when contextmenu is opened.\n   * @param args\n   */\n  onOpen?: (args: {\n    /**\n     * The target element on which contextmenu event was triggered.\n     */\n    target: Element;\n  }) => void;\n};\n/**\n * Functionality and accessibility of context menu.\n */\nexport const useContextMenu = (\n  { isDisabled = false, onOpen }: UseContextMenuProps,\n  state: MenuTriggerState\n) => {\n  const [positionOrigin, setPositionOrigin] = useState<React.MouseEvent>();\n  /**\n   * NOTE: not using useMenuTrigger because:\n   * - There is no option to have a trigger like this: \"right click + long press only by touch\" which seems to be the\n   *   reasonable trigger for context menu. If we want to use it just for long press, we could disable it if it's not\n   *   a touch device, but that would be suboptimal, since both touch and mouse can be available, and it should depend\n   *   not on availability of touch, but on the triggered event type. Plus, isDisabled is broken in v<3.5.0\n   * - It's not quite clear at the moment, if the aria attributes that useMenuTrigger sets would be applicable to\n   *   this context menu component too. The trigger is not the container. For example, if there is a list rendered\n   *   inside, the selected item would be the trigger. Maybe even this component, as a container for context menu\n   *   is not the best way to allow for context menu, when it comes to a11y concerns. For now, we skip a11y props of the\n   *   trigger. A11y props of the menu itself (e.g. aria-label) would also be up to the usage of this component.\n   *\n   *   TODO: add support for long touch\n   */\n  const onContextMenu = (e: React.MouseEvent<HTMLElement>) => {\n    if (!(e.target instanceof Element)) {\n      return;\n    }\n    setPositionOrigin(e);\n    onOpen?.({ target: e.target });\n    e.preventDefault();\n    // NOTE: we can't use offsetX/offsetY, because it would depend on the exact target that was clicked.\n    if (state.isOpen) {\n      /**\n       * If the context menu is already open, closing and reopening makes sure the menu properly gains the focus.\n       * Otherwise, the focus may go back to the background.\n       * It also better matches the reference impl.\n       */\n      state.close();\n      setTimeout(() => {\n        state.open(null);\n      });\n    } else {\n      state.open(null);\n    }\n  };\n\n  const overlayRef = useRef(null);\n\n  const containerProps: React.HTMLAttributes<HTMLElement> = isDisabled\n    ? {}\n    : {\n        onContextMenu,\n      };\n  return {\n    /**\n     * props to be applied on the container element which is supposed to have the context menu\n     */\n    containerProps,\n    /**\n     * The ref to be applied on the menu overlay wrapper. It's usually an input instead of an output in similar\n     * react-aria hooks, but it seemed unnecessary here.\n     */\n    overlayRef,\n\n    positionOrigin,\n  };\n};\n","import { Item, PartialNode, Section } from \"@react-stately/collections\";\nimport { Item as Item2 } from \"./Item\";\nimport {\n  CollectionBase,\n  CollectionElement,\n  ItemProps,\n  SectionProps,\n} from \"@react-types/shared\";\nimport React from \"react\";\n\nfunction* patchCollectionItem<T>(nodes: Generator<PartialNode<T>>) {\n  for (const partialNode of nodes)\n    yield {\n      ...partialNode,\n      *childNodes() {\n        const result2 = partialNode.childNodes?.();\n        if (result2) {\n          for (const partialChildNode of result2) {\n            const { type, ...partialChildNodeWithoutType } = partialChildNode;\n            yield partialChildNodeWithoutType;\n          }\n        }\n      },\n    };\n}\n\nconst PatchedItem = Item.bind(null);\n\n// @ts-expect-error: getCollectionNode is not public\nPatchedItem.getCollectionNode = function getCollectionNode<T>(\n  props: ItemProps<T>,\n  context: any\n): Generator<PartialNode<T>> {\n  // @ts-expect-error getCollectionNode is not public API\n  return patchCollectionItem(Item.getCollectionNode(props, context));\n};\n\nconst PatchedSection = Section.bind(null);\n\n// @ts-expect-error: getCollectionNode is not public\nPatchedSection.getCollectionNode = function getCollectionNode<T>(\n  props: SectionProps<T>,\n  context: any\n): Generator<PartialNode<T>> {\n  // @ts-expect-error getCollectionNode is not public API\n  return patchCollectionItem(Section.getCollectionNode(props, context));\n};\nfunction convertCollectionElement<T>(\n  result: CollectionElement<T> | React.ReactNode\n): CollectionElement<T> {\n  if (\n    React.isValidElement(result) &&\n    (result.type === Item || result.type === Item2)\n  ) {\n    return React.createElement(\n      PatchedItem,\n      {\n        key: result.key != null ? result.key : undefined,\n        ...(result.props as ItemProps<T>),\n      },\n      convertChildren(result.props.children)\n    ) as CollectionElement<T>;\n  }\n  if (React.isValidElement(result) && result.type === Section) {\n    return React.createElement(\n      PatchedSection,\n      {\n        key: result.key != null ? result.key : undefined,\n        ...(result.props as SectionProps<T>),\n      } as any,\n      convertChildren((result.props as any).children)\n    ) as CollectionElement<T>;\n  }\n  return result as CollectionElement<T>;\n}\n\nfunction convertChildren<T>(children: React.ReactNode): React.ReactNode {\n  return Array.isArray(children)\n    ? // NOTE: We intentionally avoid using React.Children.map as it messes with keys.\n      children.map(convertChildren)\n    : convertCollectionElement(children);\n}\n\n/**\n * CollectionBuilder expects child type to be the same as parent type, which is weird in the first place:\n * https://github.com/adobe/react-spectrum/blob/cae83ff95f2f709b761c70d47ace96d6346ed873/packages/%40react-stately/collections/src/CollectionBuilder.ts#L148\n * On the other hand, the default Item components sets the `type` to item, for all child PartialNode objects:\n * https://github.com/adobe/react-spectrum/blob/c49d9819adc2cb63377f39557352440c72072caf/packages/%40react-stately/collections/src/Item.ts#L40-L54\n * Which is also a little unexpected, as in many nested collections, an item can have all types of children.\n * This function patches that, replacing Item elements with PatchedItem element which doesn't set type on children\n * PartialNodes.\n */\nexport function patchCollectionProps<T>({\n  children,\n  ...props\n}: Partial<CollectionBase<T>>): CollectionBase<T> {\n  return {\n    ...props,\n    children:\n      typeof children === \"function\"\n        ? (node: T) => convertChildren(children(node)) as CollectionElement<T>\n        : (convertChildren(children) as CollectionElement<T>),\n  };\n}\n","import React, { CSSProperties, Key, RefObject, useContext } from \"react\";\nimport { AriaMenuOptions, useMenu as useMenuAria } from \"@react-aria/menu\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { AriaMenuProps } from \"@react-types/menu\";\nimport { Node } from \"@react-types/shared\";\nimport { patchCollectionProps } from \"@intellij-platform/core/Collections/patchCollectionProps\";\nimport { TreeProps, useTreeState } from \"../Tree/useTreeState\"; // shared dependency between tree and menu, that could be lifted up import {Submenu} from '@intellij-platform/core/Menu/Submenu'\nimport { renderMenuNodes } from \"./renderMenuNodes\";\nimport { StyledMenu } from \"./StyledMenu\";\nimport { SubmenuProps } from \"./Submenu\"; // internal export\n\nexport interface MenuProps<T>\n  extends Omit<\n    AriaMenuProps<T>,\n    // selection is not properly supported for nested menus. Plus, it's not even that meaningful for a nested menu\n    // at least the way it's implemented now.\n    | \"onSelectionChange\"\n    | \"defaultSelectedKeys\"\n    | \"selectionMode\"\n    | \"disallowEmptySelection\"\n  > {\n  /**\n   * Indicates currently expanded menu item (controlled).\n   */\n  expandedKey?: Key; // FIXME: should be keys\n  /**\n   * Called when expanded menu item is changed by user interaction, which can be either hovering over the menu item\n   */\n  onExpandedKeyChange?: (expandedKey: Key) => void; // FIXME: should be keys\n  defaultExpandedKey?: Key; // FIXME: should be keys\n  /**\n   * @deprecated\n   */\n  expandOn?: \"hover\" | \"press\"; // hover delay doesn't seem to be needed as an option\n\n  /**\n   * Defines the press behaviour (either by mouse or by pressing Enter when focused) on menu items with submenu.\n   * By default (undefined), pressing or hovering over a menu item with submenu, opens the submenu.\n   * When set to \"toggle\", pressing a menu item with submenu will toggle the submenu. Hovering over such items will\n   * no longer open the submenu.\n   * When set to \"action\", pressing a menu item with submenu will call onAction for that item, and closes the menu.\n   * Hovering over such items will no longer open the submenu.\n   *\n   * In all cases, pressing the right arrow will always open the submenu.\n   */\n  submenuBehavior?: \"default\" | \"toggleOnPress\" | \"actionOnPress\";\n\n  /**\n   * fills the available horizontal or vertical space, when rendered in a flex container.\n   */\n  fillAvailableSpace?: boolean;\n\n  /**\n   * Minimum width of the menu\n   * @default: 120px\n   */\n  minWidth?: CSSProperties[\"minWidth\"];\n}\n\n/**\n * Can be provided by the overlay where the menu is rendered in. If provided, menu will call the provided close function\n * on actions. Note that there is no `closeOnSelect` option as of now, on this context, since no use case seems to exist\n * for keeping the menu overlay open after a menu item is selected.\n * **Update**: there are use cases where the menu is not closed after an item is clicked. Most of the toggle-able\n * actions (the ones with a checkmark) seem to be like this.\n * TODO: Make \"close on selection\" more flexible. Some ideas:\n *  - instead of calling close, pass it to `onAction` handler. Then on each action, one would need to call close if\n *    needed.\n *  - Offer a `MenuItem` component to be used instead of generic `Item`, where it accepts `closeOnSelect` boolean, which\n *    is true by default.\n *  - pass a `keepOpen` function to `onAction`.\n *  - Allow signaling whether the menu should kept open, via the returned value of onAction. e.g. return false means keep open.\n *  Last two suggestions are based on the assumption that most of the menu items are not selectable.\n *  Note that MenuOverlayContext could be used directly in action handlers too, but baking it into the menu makes it\n *  much more convenient, which seems more important than breaking the nice separation between Menu and MenuTrigger.\n */\nexport const MenuOverlayContext = React.createContext<{\n  close: () => void;\n  defaultAutoFocus: MenuProps<unknown>[\"autoFocus\"];\n}>({\n  close: () => {},\n  defaultAutoFocus: undefined,\n});\nexport const MenuContext = React.createContext<\n  Pick<\n    MenuProps<unknown>,\n    \"onClose\" | \"onAction\" | \"submenuBehavior\" | \"autoFocus\"\n  > & {\n    itemWrapper?: (\n      renderedItem: React.ReactNode,\n      item: Node<unknown>\n    ) => React.ReactNode;\n    renderSubmenu?: (props: SubmenuProps<unknown>) => React.ReactNode;\n  }\n>({});\n\nexport function useMenu<T>(\n  {\n    onAction: onActionProp,\n    submenuBehavior = \"default\",\n    ...props\n  }: MenuProps<T> & AriaMenuOptions<T>,\n  state: TreeState<T>,\n  ref: RefObject<HTMLElement>\n) {\n  const { close, defaultAutoFocus } = useContext(MenuOverlayContext);\n  const autoFocus = props.autoFocus ?? defaultAutoFocus;\n  const onClose = () => {\n    props.onClose?.();\n    close();\n  };\n  const onAction = (key: Key) => {\n    if (\n      // The following check should have been in useMenu, but it's not currently. Probably because they haven't yet\n      // covered nested menus.\n      !state.collection.getItem(key)?.hasChildNodes\n    ) {\n      return onActionProp?.(key);\n    } else if (submenuBehavior === \"actionOnPress\") {\n      onClose();\n      return onActionProp?.(key);\n    }\n  };\n  const menuContextValue: React.ContextType<typeof MenuContext> = {\n    submenuBehavior,\n    autoFocus,\n    onAction,\n    onClose,\n  };\n  const { menuProps } = useMenuAria(\n    { ...props, onAction, onClose, autoFocus },\n    state,\n    ref\n  );\n\n  return {\n    menuProps,\n    menuContextValue,\n  };\n}\n\nexport function useMenuState<T extends object>(\n  props: TreeProps<T> &\n    Pick<\n      MenuProps<T>,\n      \"expandedKey\" | \"defaultExpandedKey\" | \"onExpandedKeyChange\"\n    >\n) {\n  props = patchCollectionProps(props);\n  return useTreeState({\n    ...props,\n    childExpansionBehaviour: \"single\",\n    expandedKeys: props.expandedKey ? [props.expandedKey] : undefined,\n    onExpandedChange: ([firstKey]) => props?.onExpandedKeyChange?.(firstKey),\n    defaultExpandedKeys: props.defaultExpandedKey\n      ? [props.defaultExpandedKey]\n      : undefined,\n  });\n}\n\n/**\n * UI for menus which are normally shown in a popover. Being rendered as an overlay is not handled here.\n * Also, there is no coupling with any higher level entity like \"Action\", since this is just for the UI layer.\n * Something like ActionMenu which creates a menu out of a list of actions can be implemented on top of this.\n *\n * @example\n *  <Menu>\n *    <Item>Item one</Item>\n *    <Item>\n *      <MenuItemLayout\n *        icon={<PlatformIcon icon={\"actions/copy\"} />}\n *        content=\"Copy\"\n *        shortcut={\"⌘C\"} />\n *    </Item>\n *  </Menu>\n *\n *  Current issues and limitations:\n *  - Divider in sub-menu's is not supported. because of a constraint in @react-stately/collections, which results in\n *    this error: Unsupported type <Divider> in <Item>. Only <Item> is supported. Maybe supporting section would\n *    be a workaround for it.\n *  - when a parent menu item which has an open submenu is hovered, it gets focus.\n */\nexport function Menu<T extends object>({ minWidth, ...props }: MenuProps<T>) {\n  const ref = React.useRef<HTMLUListElement>(null);\n  const state = useMenuState(props);\n  const { menuContextValue, menuProps } = useMenu(props, state, ref);\n\n  return (\n    /**\n     * MenuContext is used to pass onAction and onClose to be passed to useMenu in submenus.\n     * That's needed because in useMenuItem onAction and onClose are read off a WeakMap which has the menu state\n     * (TreeState) as key. So we have to pass onAction and onClose everytime we call useMenu in submenus, to let the\n     * menu items in that submenu access the right value of onAction and onClose. To avoid drilling these props down,\n     * we keep it in a context.\n     */\n    <MenuContext.Provider value={menuContextValue}>\n      <StyledMenu\n        {...menuProps}\n        ref={ref}\n        style={{ minWidth }}\n        fillAvailableSpace={props.fillAvailableSpace}\n      >\n        {renderMenuNodes(state, [...state.collection])}\n      </StyledMenu>\n    </MenuContext.Provider>\n  );\n}\n","import React, { HTMLAttributes, ReactNode, RefObject, useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { isFocusVisible, useHover, usePress } from \"@react-aria/interactions\";\nimport {\n  AriaMenuItemProps,\n  MenuItemAria,\n  useMenuItem as useMenuItemAria,\n} from \"@react-aria/menu\";\nimport { useOverlayPosition } from \"@react-aria/overlays\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { FocusableElement, Node } from \"@react-types/shared\";\nimport { ItemStateContext } from \"@intellij-platform/core/Collections/ItemStateContext\";\nimport { Overlay } from \"@intellij-platform/core/Overlay\";\n\nimport { LafIcon, PlatformIcon } from \"../Icon\";\nimport { styled } from \"../styled\";\nimport { MenuContext, MenuProps } from \"./Menu\";\nimport { MENU_BORDER_WIDTH, MENU_VERTICAL_PADDING } from \"./StyledMenu\";\nimport {\n  StyledMenuItem,\n  StyledMenuItemIcon,\n  StyledNestedArrow,\n} from \"./StyledMenuItem\";\nimport { Submenu, SubmenuProps } from \"@intellij-platform/core/Menu/Submenu\";\n\nexport interface MenuItemProps<T> {\n  item: Node<T>;\n  state: TreeState<T>;\n  onSubmenuClose?: () => void;\n}\n\nconst StyledMenuItemText = styled.span`\n  flex: 1;\n`;\n\nconst StyledMenuItemPlatformIcon = styled(PlatformIcon)`\n  svg path {\n    stroke: currentColor;\n  }\n`;\n\nconst StyledMenuItemLafIcon = styled(LafIcon)`\n  svg path {\n    stroke: currentColor;\n  }\n`;\n\nfunction useMenuItem<T extends unknown>(\n  {\n    submenuBehavior,\n    ...props\n  }: AriaMenuItemProps & { submenuBehavior: MenuProps<T>[\"submenuBehavior\"] },\n  state: TreeState<T>,\n  ref: RefObject<FocusableElement>\n): MenuItemAria {\n  const item = state.collection.getItem(props.key!)!;\n  const isDisabled = state.disabledKeys.has(item.key);\n  const isExpanded = state.expandedKeys.has(item.key);\n  const hasSubmenu = item.hasChildNodes;\n  const { menuItemProps: ariaMenuItemProps, ...result } = useMenuItemAria(\n    {\n      key: item.key,\n      // hack to prevent react-aria to call onClose when nested items are selected, which is incorrect, and because\n      // react-aria doesn't officially support nested menus at the moment\n      onClose: hasSubmenu ? () => {} : undefined,\n    },\n    state,\n    ref\n  );\n\n  // useMenuItem in react aria utilizes useHover to focus item on hover. The logic there conflicts with nested menus\n  // requirements (at least based on how nested menu is implemented here currently). Also, submenuBehavior requires\n  // some more customization. So we delete the handlers set by useHover in useMenuItem, and add a custom useHover.\n  delete ariaMenuItemProps.onMouseEnter;\n  delete ariaMenuItemProps.onPointerEnter;\n\n  if (submenuBehavior === \"default\" && isExpanded) {\n    // When menu item has its submenu opened, clicking it should not move focus or do anything.\n    delete ariaMenuItemProps.onPointerDown;\n  }\n\n  const { hoverProps } = useHover({\n    isDisabled: isDisabled,\n    onHoverStart: () => {\n      const isAnySubmenuOpen = [...state.expandedKeys].some(\n        (expandedKey) =>\n          state.collection.getItem(expandedKey)?.parentKey === item.parentKey\n      );\n\n      if (submenuBehavior === \"default\" && !isExpanded) {\n        state.toggleKey(item.key);\n      }\n\n      if (!isFocusVisible()) {\n        const shouldFocus =\n          submenuBehavior === \"default\" ? !isExpanded : !isAnySubmenuOpen;\n        if (shouldFocus) {\n          state.selectionManager.setFocused(true);\n        }\n        state.selectionManager.setFocusedKey(item.key);\n      }\n    },\n  });\n\n  const keyboardProps = {\n    onKeyDown: (e: React.KeyboardEvent) => {\n      if (\n        ((e.key === \"Enter\" || e.key === \" \") &&\n          submenuBehavior !== \"actionOnPress\") ||\n        \"ArrowRight\" === e.key\n      ) {\n        state.toggleKey(item.key);\n        e.stopPropagation();\n        return;\n      }\n    },\n  };\n\n  const { pressProps: togglePressProps } = usePress({\n    isDisabled: isDisabled,\n    onPressUp: () => {\n      state.toggleKey(item.key);\n      if (isExpanded) {\n        // submenu was expanded and is closed now. moving focus back to the parent item\n        state.selectionManager.setFocusedKey(item.key);\n      }\n    },\n  });\n\n  return {\n    ...result,\n    menuItemProps: mergeProps(\n      hasSubmenu\n        ? {\n            \"aria-expanded\": isExpanded,\n            \"aria-haspopup\": \"menu\",\n          }\n        : {},\n      ariaMenuItemProps,\n      hoverProps,\n      keyboardProps,\n      submenuBehavior === \"toggleOnPress\" ? togglePressProps : {}\n    ),\n  };\n}\n\nconst MenuItemContext = React.createContext<{\n  labelProps: HTMLAttributes<HTMLElement>;\n  descriptionProps: HTMLAttributes<HTMLElement>;\n  keyboardShortcutProps: HTMLAttributes<HTMLElement>;\n}>({ descriptionProps: {}, labelProps: {}, keyboardShortcutProps: {} });\n\nexport const useMenuItemLayout = () => {\n  return useContext(MenuItemContext);\n};\n\nexport function MenuItem<T>({ item, state }: MenuItemProps<T>) {\n  // Get props for the menu item element\n  const ref = React.useRef<HTMLLIElement>(null);\n  const nestedMenuRef = React.useRef<HTMLDivElement>(null);\n  const isDisabled = state.disabledKeys.has(item.key);\n  const isExpanded = state.expandedKeys.has(item.key);\n  const isSelected = state.selectionManager.selectedKeys.has(item.key);\n  const isFocused = state.selectionManager.focusedKey === item.key;\n  const {\n    onClose,\n    submenuBehavior,\n    renderSubmenu = (props: SubmenuProps<T>) => <Submenu {...props} />,\n    itemWrapper = (i: React.ReactNode) => i,\n  } = useContext(MenuContext);\n\n  const { menuItemProps, labelProps, descriptionProps, keyboardShortcutProps } =\n    useMenuItem(\n      {\n        submenuBehavior,\n        key: item.key,\n      },\n      state,\n      ref\n    );\n\n  const { pressProps: togglePressProps } = usePress({\n    isDisabled: isDisabled,\n    onPressUp: () => {\n      state.toggleKey(item.key);\n      if (isExpanded) {\n        // submenu was expanded and is closed now. moving focus back to the parent item\n        state.selectionManager.setFocusedKey(item.key);\n      }\n    },\n  });\n\n  let { overlayProps: positionProps } = useOverlayPosition({\n    targetRef: ref,\n    overlayRef: nestedMenuRef,\n    placement: \"right top\",\n    shouldFlip: true,\n    onClose,\n    offset: 0,\n    crossOffset: -(MENU_VERTICAL_PADDING + MENU_BORDER_WIDTH),\n    isOpen: isExpanded,\n  });\n\n  const arrowProps: HTMLAttributes<HTMLElement> =\n    submenuBehavior !== \"default\"\n      ? {\n          role: \"button\",\n          \"aria-label\": \"Open\",\n          ...mergeProps(togglePressProps, {\n            // to prevent pointer up event handler on the item, which would trigger action.\n            onPointerUp: (e: React.PointerEvent) => e.stopPropagation(),\n          }),\n        }\n      : {};\n  return (\n    <>\n      <StyledMenuItem\n        {...menuItemProps}\n        isDisabled={isDisabled}\n        isActive={isFocused}\n        ref={ref}\n      >\n        {isSelected && (\n          <StyledMenuItemIcon>\n            <StyledMenuItemLafIcon\n              icon={{\n                name: \"checkmark\",\n                modifiers: { Selected: isFocused },\n              }}\n            />\n          </StyledMenuItemIcon>\n        )}\n        <ItemStateContext.Provider\n          value={{\n            isDisabled,\n            isContainerFocused: state.selectionManager.isFocused,\n            isSelected,\n            node: item,\n          }}\n        >\n          <MenuItemContext.Provider\n            value={{ labelProps, descriptionProps, keyboardShortcutProps }}\n          >\n            {itemWrapper(\n              typeof item.rendered === \"string\" ? (\n                <StyledMenuItemText {...labelProps}>\n                  {item.rendered}\n                </StyledMenuItemText>\n              ) : (\n                item.rendered\n              ),\n              item\n            )}\n          </MenuItemContext.Provider>\n        </ItemStateContext.Provider>\n        {item.hasChildNodes && (\n          <StyledNestedArrow {...arrowProps}>\n            <StyledMenuItemPlatformIcon icon=\"icons/ide/menuArrow\" />\n          </StyledNestedArrow>\n        )}\n      </StyledMenuItem>\n      {isExpanded && (\n        /**\n         * A note about using Overlay:\n         * If sub-menu is not rendered in a portal, useOverlayPosition doesn't work properly and the submenu may\n         * be rendered offscreen. Worse, it may introduce scroll in body (or some scrollable ancestor), which will\n         * trigger a scroll event which closes the menu if the menu is rendered in an overlay (like in MenuTrigger),\n         * which is almost always the case.\n         *\n         */\n        <Overlay\n          OverlayComponent={\n            /**\n             *  The FocusScope included in the default Overlay, messes with a particular expected behavior. So we use\n             *  SimpleOverlay, which just renders its children as a portal. There may be a better solution for that\n             *  problem, which would eliminate the need for the funky `OverlayComponent` prop on our `Overlay`\n             *  component. Something to look into in the future.\n             */\n            SimpleOverlay\n          }\n        >\n          <div ref={nestedMenuRef} {...positionProps}>\n            {renderSubmenu({ parentState: state, rootKey: item.key })}\n          </div>\n        </Overlay>\n      )}\n    </>\n  );\n}\n\n/**\n * A replacement for react-aria Overlay, which doesn't render FocusScope\n */\nfunction SimpleOverlay({\n  children,\n  portalContainer = document.body,\n}: {\n  children: ReactNode;\n  portalContainer?: Element | undefined;\n}) {\n  return ReactDOM.createPortal(children, portalContainer);\n}\n","import React from \"react\";\nimport { ItemStateContext } from \"@intellij-platform/core/Collections/ItemStateContext\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { useContextOrThrow } from \"@intellij-platform/core/utils/useContextOrThrow\";\n\nimport { useMenuItemLayout } from \"./MenuItem\";\nimport { StyledMenuItemIcon } from \"./StyledMenuItem\";\n\ninterface MenuItemLayoutProps {\n  icon?: React.ReactNode;\n  content: React.ReactNode;\n  shortcut?: React.ReactNode;\n}\n\nconst StyledMenuItemLayout = styled.div`\n  display: flex;\n  align-items: center;\n  flex: 1; // to make sure it takes as much space as available in the menu item row, so that the suffix (shortcut) is pushed to the right\n`;\nconst Content = styled.span`\n  flex: 1;\n`;\n\nconst Shortcut = styled.kbd`\n  font-family: system-ui, sans-serif;\n  margin-left: 30px;\n  margin-right: -0.625rem;\n  color: ${({ theme }) =>\n    theme.currentForegroundAware(\n      theme.color(\"MenuItem.acceleratorForeground\")\n    )};\n`;\n\nexport const MenuItemLayout = ({\n  content,\n  shortcut,\n  icon,\n}: MenuItemLayoutProps) => {\n  const { isSelected } = useContextOrThrow(\n    ItemStateContext,\n    \"MenuItemLayout is meant to be rendered in Item component in Menus\"\n  );\n  const { labelProps, keyboardShortcutProps } = useMenuItemLayout();\n  const allowedIcon = !isSelected && icon;\n  return (\n    <StyledMenuItemLayout>\n      {allowedIcon && <StyledMenuItemIcon>{allowedIcon}</StyledMenuItemIcon>}\n      <Content {...labelProps}>{content}</Content>\n      {shortcut && <Shortcut {...keyboardShortcutProps}>{shortcut}</Shortcut>}\n    </StyledMenuItemLayout>\n  );\n};\n","import React, { HTMLProps, useEffect } from \"react\";\nimport { FocusScope } from \"@intellij-platform/core/utils/FocusScope\";\nimport {\n  MenuOverlayContext,\n  MenuProps,\n} from \"@intellij-platform/core/Menu/Menu\";\nimport { areInNestedOverlays, Overlay } from \"@intellij-platform/core/Overlay\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport { useOverlay, usePreventScroll } from \"@react-aria/overlays\";\n\nexport interface MenuOverlayProps {\n  children: React.ReactNode;\n  restoreFocus?: boolean;\n  overlayProps: HTMLProps<HTMLDivElement>;\n  overlayRef?: React.Ref<HTMLDivElement>;\n  /**\n   * Sets the default value of {@link Menu}'s {@link MenuProps#autoFocus} prop.\n   */\n  defaultAutoFocus?: MenuProps<unknown>[\"autoFocus\"];\n  onClose: () => void;\n}\n\n/**\n * Overlay container for Menu.\n * Positioning is not implemented at this layer.\n * {@link MenuOverlayProps#overlayProps} should be used for positioning.\n */\nexport function MenuOverlay({\n  children,\n  restoreFocus,\n  overlayProps: otherOverlayProps,\n  overlayRef: inputOverlayRef,\n  defaultAutoFocus,\n  onClose,\n}: MenuOverlayProps) {\n  const overlayRef = useObjectRef(inputOverlayRef);\n  const { overlayProps } = useOverlay(\n    {\n      onClose,\n      shouldCloseOnBlur: false,\n      isOpen: true,\n      isKeyboardDismissDisabled: false,\n      isDismissable: true,\n      shouldCloseOnInteractOutside: (element) => {\n        // FIXME: this is kind of hacky and should be removed when nested menu is properly supported\n        return !areInNestedOverlays(overlayRef.current, element);\n      },\n    },\n    overlayRef\n  );\n\n  usePreventScroll();\n\n  /**\n   * right clicks outside are not currently captured as \"outside interaction\" by react-aria's useOverlay hook.\n   * so we set up a global listener to close the context menu when contextmenu event is triggered outside the\n   * context menu container.\n   * NOTE: event handler is set up for the `capture` phase, to have it run before the handler for context menu\n   * when the menu is used as a context menu\n   */\n  useEffect(() => {\n    const onOutsideContextMenu = () => {\n      onClose();\n    };\n    document.addEventListener(\"contextmenu\", onOutsideContextMenu, {\n      capture: true,\n    });\n    return () =>\n      document.removeEventListener(\"contextmenu\", onOutsideContextMenu);\n  }, []);\n\n  return (\n    <Overlay>\n      <FocusScope restoreFocus={restoreFocus} autoFocus>\n        <MenuOverlayContext.Provider\n          value={{\n            close: onClose,\n            defaultAutoFocus,\n          }}\n        >\n          <div\n            {...mergeProps(overlayProps, otherOverlayProps)}\n            ref={overlayRef}\n          >\n            {children}\n          </div>\n        </MenuOverlayContext.Provider>\n      </FocusScope>\n    </Overlay>\n  );\n}\n","import React, { RefObject, useLayoutEffect, useState } from \"react\";\n\n/**\n * Similar to {@link import('@react-aria/overlays').useOverlayPosition useOverlayPosition},\n * but for positioning an overlay relative to a point, typically coordinates of a mouse event.\n * It's less advanced than useOverlayPosition, not taking into account many edge cases that\n * `useOverlayPosition` does.\n * Most importantly:\n * - Window resize is not taken into account\n * - Overlay resize is not taken into account.\n *   Positioning only happens when the origin changes.\n * - There are no options for positioning options like placement, offset or crossOffset\n *\n * @see https://github.com/adobe/react-spectrum/discussions/7267\n */\nexport function useOverlayPositionFromOrigin({\n  overlayRef,\n  origin,\n  containerPadding,\n}: {\n  overlayRef: RefObject<HTMLElement>;\n  containerPadding?: number | { x: number; y: number };\n  origin: Pick<React.MouseEvent, \"clientX\" | \"clientY\"> | undefined;\n}) {\n  const [position, setPosition] = useState<{ left?: number; top?: number }>({});\n\n  useLayoutEffect(() => {\n    const overlayElement = overlayRef.current;\n    setPosition(\n      origin && overlayElement\n        ? calculatePosition({\n            clientX:\n              origin.clientX +\n              1.5 /* a tiny offset is added to avoid menu items getting hovered upon open. 1px doesn't consistently work. */,\n            clientY: origin.clientY,\n            containerPadding,\n            overlayWidth: overlayElement.offsetWidth,\n            overlayHeight: overlayElement.offsetHeight,\n          })\n        : {}\n    );\n  }, [origin?.clientX, origin?.clientY]);\n  return {\n    positionProps: {\n      style: { position: \"fixed\", zIndex: 100000, ...position } as const,\n    },\n  };\n}\n\nfunction calculatePosition({\n  clientX,\n  clientY,\n  overlayWidth,\n  overlayHeight,\n  containerPadding = 0,\n}: {\n  clientX: number;\n  clientY: number;\n  overlayWidth: number;\n  overlayHeight: number;\n  containerPadding?: number | { x: number; y: number };\n}) {\n  const totalWidth =\n    document.documentElement.clientWidth -\n    (typeof containerPadding === \"object\"\n      ? containerPadding.x\n      : containerPadding);\n  const totalHeight =\n    document.documentElement.clientHeight -\n    (typeof containerPadding === \"object\"\n      ? containerPadding.y\n      : containerPadding);\n\n  let top = clientY;\n  let left = clientX;\n\n  if (left + overlayWidth > totalWidth) {\n    left = totalWidth - overlayWidth;\n  }\n\n  if (top + overlayHeight > totalHeight) {\n    top = totalHeight - overlayHeight;\n  }\n\n  top = Math.max(0, top);\n  left = Math.max(0, left);\n\n  return { top, left };\n}\n","import React, { ForwardedRef, useEffect, useMemo } from \"react\";\nimport {\n  MenuOverlay,\n  MenuOverlayProps,\n} from \"@intellij-platform/core/Menu/MenuOverlay\";\nimport { useOverlayPositionFromOrigin } from \"@intellij-platform/core/Menu/useOverlayPositionFromOrigin\";\nimport { getScrollParent, isScrollable, useObjectRef } from \"@react-aria/utils\";\nimport { createGlobalStyle } from \"styled-components\";\n\ninterface MenuOverlayFromOriginProps\n  extends Pick<MenuOverlayProps, \"onClose\" | \"defaultAutoFocus\"> {\n  /**\n   * Origin point within the viewport, based on which the menu overlay should be positioned.\n   * Any pointer/mouse event, or a plain object with clientX and clientY can be passed.\n   */\n  origin:\n    | {\n        /**\n         * Horizontal coordinate of the origin point within the viewport.\n         * See {@link MouseEvent.clientX}\n         */\n        clientX: number;\n        /**\n         * Vertical coordinate of the origin point within the viewport.\n         * See {@link MouseEvent.clientX}\n         */\n        clientY: number;\n\n        /**\n         * Origin's target element.\n         * Used to find the scrollable parent and disable scrolling while\n         * the overlay is rendered.\n         */\n        target?: EventTarget | HTMLElement | null;\n      }\n    | undefined;\n  children: React.ReactNode;\n}\n\nconst DisableScrollStyles = createGlobalStyle`\n  .disable-scroll {\n      overflow: hidden !important;\n  }\n`;\n\n/**\n * Menu overlay position based on an origin point on the screen.\n * Useful when the menu is opened by a pointer event.\n */\nexport const MenuOverlayFromOrigin = React.forwardRef(\n  function MenuOverlayFromOrigin(\n    { children, origin, ...otherProps }: MenuOverlayFromOriginProps,\n    forwardedRef: ForwardedRef<HTMLDivElement>\n  ) {\n    const overlayRef = useObjectRef(forwardedRef);\n    const { positionProps } = useOverlayPositionFromOrigin({\n      overlayRef,\n      origin,\n      containerPadding: { x: 0, y: 4 },\n    });\n\n    const scrollParent: null | Element = useMemo(() => {\n      if (!(origin?.target instanceof HTMLElement)) {\n        return null;\n      }\n      return isScrollable(origin.target)\n        ? origin.target\n        : getScrollParent(origin.target);\n    }, [origin?.target]);\n\n    useEffect(() => {\n      // Known issue: closing contextmenu causes a jump in scroll (see project view in example app)\n      // It's an issue that existed before the change to disable scroll when the contextmenu is open,\n      // so it should not have anythign to do with changing overflow hidden when the menu is open.\n      scrollParent?.classList?.add(\"disable-scroll\");\n      return () => {\n        scrollParent?.classList?.remove(\"disable-scroll\");\n      };\n    }, []);\n\n    return (\n      <>\n        <DisableScrollStyles />\n        {Boolean(origin) && (\n          <MenuOverlay\n            overlayProps={positionProps}\n            overlayRef={overlayRef}\n            restoreFocus\n            {...otherProps}\n          >\n            {children}\n          </MenuOverlay>\n        )}\n      </>\n    );\n  }\n);\n","import React, { HTMLAttributes, RefObject } from \"react\";\nimport { useButton } from \"@react-aria/button\";\nimport { AriaMenuOptions, useMenuTrigger } from \"@react-aria/menu\";\nimport { useOverlayPosition } from \"@react-aria/overlays\";\nimport { useMenuTriggerState } from \"@react-stately/menu\";\nimport { MenuTriggerProps as AriaMenuTriggerProps } from \"@react-types/menu\";\n\nimport { MenuOverlay } from \"./MenuOverlay\";\nimport { AriaButtonProps } from \"@react-types/button\";\nimport { Alignment } from \"@react-types/shared\";\n\nexport interface MenuTriggerProps\n  extends Omit<AriaMenuTriggerProps, \"closeOnSelect\"> {\n  restoreFocus?: boolean;\n  // TODO: replace render function children with normal children, and utilize PressResponder. Add a story for the\n  //  edge case of custom trigger, using PressResponder\n  children: (\n    props: HTMLAttributes<HTMLButtonElement>,\n    ref: RefObject<any> // Using a generic didn't seem to work for some reason\n  ) => React.ReactNode;\n  // NOTE: there is a chance of unchecked breaking change here, since this is not explicitly mentioned as public API\n  // of useButton, but it is passed to the underlying usePress.\n  preventFocusOnPress?: boolean;\n  /**\n   * By default, the menu is positioned relative to the trigger. `positioningTargetRef` can be used to have the menu\n   * positioned to another element. An example use case is when the menu trigger is a button inside some list item or\n   * text box, but the menu semantically belongs to the container list item or text box.\n   */\n  positioningTargetRef?: React.RefObject<HTMLElement>;\n  renderMenu: (props: {\n    // AriaMenuOptions contains more properties than needed\n    menuProps: Pick<\n      AriaMenuOptions<unknown>,\n      \"id\" | \"aria-labelledby\" | \"autoFocus\" | \"onClose\"\n    >;\n  }) => React.ReactNode;\n\n  /**\n   * Alignment of the menu relative to the trigger.\n   * @default 'start'\n   */\n  align?: Alignment;\n  /**\n   * Where the Menu opens relative to its trigger.\n   * @default 'bottom'\n   */\n  direction?: \"bottom\" | \"top\" | \"left\" | \"right\" | \"start\" | \"end\";\n  /**\n   * Whether the menu should automatically flip direction when space is limited.\n   * @default true\n   */\n  shouldFlip?: boolean;\n}\n\n// FIXME: Escape doesn't close the menu\n// FIXME: Focus is not restored if nested menu are opened. It may be solved by using useOverlay and closing submenu in click outside.\n// FIXME: use PressResponder and replace render prop children with a normal react dom children. Issues with current impl:\n//  disabled trigger doesn't work as expected. props passed to children fn is html props, which is limiting for button\n//  components that don't accept arbitrary dom props.\n/**\n * Makes its children a trigger for a menu, rendered via {@link MenuTriggerProps#renderMenu} prop.\n * Closes the menu when a menu action is triggered.\n */\nexport const MenuTrigger: React.FC<MenuTriggerProps> = ({\n  children,\n  renderMenu,\n  direction = \"bottom\",\n  align = \"start\",\n  shouldFlip = true,\n  restoreFocus = true,\n  preventFocusOnPress = true,\n  positioningTargetRef,\n  ...otherProps\n}) => {\n  const state = useMenuTriggerState(otherProps);\n  const triggerRef = React.useRef(null);\n  const overlayRef = React.useRef(null);\n  // FIXME: Menu props is not used, but it's just about labelBy and id. Only needed for accessibility, but it would\n  //  require a `renderMenu` prop, instead of `menu`.\n  const { menuTriggerProps: triggerProps, menuProps } = useMenuTrigger(\n    { type: \"menu\" },\n    state,\n    triggerRef\n  );\n  const ariaButtonProps: AriaButtonProps<\"button\"> = {\n    ...triggerProps,\n    // @ts-expect-error: preventFocusOnPress is not defined in public API of useButton\n    preventFocusOnPress,\n  };\n  const { buttonProps } = useButton(ariaButtonProps, triggerRef);\n\n  const { overlayProps: positionProps } = useOverlayPosition({\n    targetRef: positioningTargetRef ?? triggerRef,\n    overlayRef,\n    placement: getPlacement(direction, align),\n    shouldFlip,\n    offset: 0,\n    containerPadding: 0,\n    onClose: () => state.close(),\n    isOpen: state.isOpen,\n  });\n\n  return (\n    <>\n      {children(buttonProps, triggerRef)}\n      {state.isOpen && (\n        <MenuOverlay\n          overlayProps={positionProps}\n          overlayRef={overlayRef}\n          onClose={state.close}\n          restoreFocus={restoreFocus}\n        >\n          {renderMenu({ menuProps })}\n        </MenuOverlay>\n      )}\n    </>\n  );\n};\n\nfunction getPlacement(\n  direction: Required<MenuTriggerProps>[\"direction\"],\n  align: Required<MenuTriggerProps>[\"align\"]\n) {\n  switch (direction) {\n    case \"left\":\n    case \"right\":\n    case \"start\":\n    case \"end\":\n      return `${direction} ${align === \"end\" ? \"bottom\" : \"top\"}` as const;\n    case \"bottom\":\n    case \"top\":\n    default:\n      return `${direction} ${align}` as const;\n  }\n}\n","import React, {\n  HTMLAttributes,\n  RefObject,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { Node } from \"@react-types/shared\";\nimport {\n  mergeProps,\n  useLayoutEffect,\n  useResizeObserver,\n} from \"@react-aria/utils\";\nimport { focusSafely } from \"@react-aria/focus\";\nimport { ListCollection } from \"@react-stately/list\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { useEventCallback } from \"@intellij-platform/core/utils/useEventCallback\";\nimport {\n  useCollectionSpeedSearch,\n  CollectionSpeedSearchMatches,\n} from \"@intellij-platform/core/CollectionSpeedSearch\";\nimport {\n  SpeedSearchInput,\n  SpeedSearchPopupProps,\n  SpeedSearchState,\n} from \"@intellij-platform/core/SpeedSearch\";\n\nimport { StyledMenu } from \"./StyledMenu\";\nimport { MenuContext, MenuProps, useMenu, useMenuState } from \"./Menu\";\nimport { renderMenuNodes } from \"./renderMenuNodes\";\nimport { SubmenuProps, useSubmenu } from \"./Submenu\";\nimport { useSubmenuState } from \"./_useSubmenuState\";\nimport { MenuKeyboardDelegate } from \"./_useSubmenu\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { StyledVerticalSeparator } from \"@intellij-platform/core/StyledSeparator\";\n\nexport interface SpeedSearchMenuProps<T>\n  extends Omit<MenuProps<T>, \"submenuBehavior\"> {\n  submenuBehavior?: Exclude<MenuProps<T>[\"submenuBehavior\"], \"default\">;\n  /**\n   * Text to show when the filtering is active but no match is found for the current query.\n   * @default \"Nothing to show\"\n   */\n  emptyText?: React.ReactNode;\n}\n\nconst StyledItemsContainer = styled.ul`\n  all: unset;\n  flex: 1;\n  overflow: auto;\n`;\n\nconst StyledSearchFieldWrapper = styled.div`\n  flex-shrink: 0;\n  padding: 0 0.2rem 0.3rem;\n`;\n\nconst StyledSpeedSearchMenu = styled(StyledMenu)`\n  --jui-menu-item-padding: 1.25rem;\n  ${StyledVerticalSeparator} {\n    margin: 0 3px; // FIXME: probably use theme\n  }\n`;\n\nconst StyledPlaceholder = styled.div`\n  color: ${({ theme }) =>\n    // Ref: StatusText => DEFAULT_ATTRIBUTES => SimpleTextAttributes.GRAYED_ATTRIBUTES\n    theme.color(\n      \"Component.infoForeground\",\n      theme.dark ? \"#787878\" : \"#999999\"\n    )};\n\n  // center positioning. Intentionally different from reference impl.\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n\n  white-space: nowrap;\n`;\n\nfunction useSpeedSearchMenu<T>(\n  state: TreeState<T>,\n  rootKey: React.Key | null,\n  ref: React.RefObject<HTMLUListElement>,\n  containerRef: React.RefObject<HTMLDivElement>\n) {\n  const {\n    speedSearch,\n    selectionManager,\n    keyboardDelegate,\n    containerProps: speedSearchContainerProps,\n    searchPopupProps,\n  } = useCollectionSpeedSearch({\n    collection: useMemo(\n      () =>\n        new ListCollection(\n          rootKey\n            ? state.collection.getItem(rootKey)?.childNodes ?? []\n            : state.collection\n        ),\n      [rootKey, state.collection]\n    ),\n    selectionManager: state.selectionManager,\n    keyboardDelegate: new MenuKeyboardDelegate(\n      rootKey,\n      state.collection,\n      state.disabledKeys,\n      ref\n    ),\n    keepSearchActiveOnBlur: true,\n    focusBestMatch: true,\n    ref,\n  });\n\n  // When a menu item which was focused is filtered out, the focus goes to body.\n  // We manually move focus back to the container.\n  useEffect(() => {\n    const element = ref.current;\n    if (\n      element &&\n      state.selectionManager.isFocused &&\n      !element?.contains(document.activeElement)\n    ) {\n      focusSafely(element);\n    }\n  });\n\n  const lastSize = useRef<{ width: number; height: number } | null>(null);\n  const [size, setSize] = useState<{ width: number; height: number } | null>(\n    null\n  );\n  const measureSize = () => {\n    const { offsetWidth = 0, offsetHeight = 0 } = containerRef.current || {};\n    if (offsetWidth > 0 && offsetHeight > 0) {\n      lastSize.current = {\n        width: offsetWidth,\n        height: offsetHeight,\n      };\n    }\n  };\n  const isSearchActive =\n    speedSearch.active && speedSearch.searchTerm.length > 0;\n  useResizeObserver({\n    ref: containerRef,\n    onResize: useEventCallback(() => {\n      if (!isSearchActive) {\n        measureSize();\n      }\n    }),\n  });\n  useLayoutEffect(() => {\n    if (isSearchActive) {\n      if (lastSize.current) {\n        setSize(lastSize.current);\n      }\n    } else {\n      if (!lastSize.current) {\n        measureSize();\n      }\n      setSize(null);\n    }\n  }, [isSearchActive]);\n\n  const sizeStyleProps: HTMLAttributes<HTMLElement> = size\n    ? {\n        style: {\n          ...size,\n          minHeight: size.height,\n          maxHeight: size.height,\n        },\n      }\n    : {};\n  return {\n    speedSearch,\n    keyboardDelegate,\n    selectionManager,\n    speedSearchContainerProps: mergeProps<HTMLAttributes<HTMLElement>[]>(\n      speedSearchContainerProps,\n      sizeStyleProps,\n      {\n        onMouseDown: (e: React.MouseEvent) => {\n          // Until SearchInput and connecting that to a selectable list is implemented, we should prevent menu from\n          // losing focus when the fake search input is clicked\n          e.preventDefault();\n        },\n      }\n    ),\n    searchPopupProps,\n  };\n}\n\n/**\n * Drop-in replacement for Menu, which implements SpeedSearch.\n *\n *\n */\nexport const SpeedSearchMenu = <T extends object>({\n  submenuBehavior = \"toggleOnPress\",\n  autoFocus = \"first\",\n  emptyText = \"Nothing to show\",\n  minWidth,\n  ...props\n}: SpeedSearchMenuProps<T>) => {\n  const onAction = (key: React.Key) => {\n    props.onAction?.(key);\n    speedSearch.clear();\n  };\n  const ref = React.useRef<HTMLUListElement>(null);\n  const containerRef = React.useRef<HTMLDivElement>(null);\n  const state = useMenuState({ ...props });\n  const {\n    speedSearch,\n    speedSearchContainerProps,\n    searchPopupProps,\n    keyboardDelegate,\n  } = useSpeedSearchMenu(state, null, ref, containerRef);\n  const { menuContextValue, menuProps } = useMenu(\n    {\n      ...props,\n      autoFocus,\n      onAction,\n      keyboardDelegate,\n      submenuBehavior,\n    },\n    state,\n    ref\n  );\n\n  return (\n    <MenuContext.Provider\n      value={{\n        ...menuContextValue,\n        renderSubmenu: (props) => (\n          <SpeedSearchSubmenu emptyText={emptyText} {...props} />\n        ),\n      }}\n    >\n      <StyledSpeedSearchMenu\n        as=\"div\"\n        ref={containerRef}\n        style={{ minWidth }}\n        {...speedSearchContainerProps}\n        fillAvailableSpace={props.fillAvailableSpace}\n      >\n        <SpeedSearchMenuContent\n          items={[...state.collection]}\n          emptyText={emptyText}\n          speedSearch={speedSearch}\n          searchPopupProps={searchPopupProps}\n          state={state}\n          menuProps={menuProps}\n          menuRef={ref}\n        />\n      </StyledSpeedSearchMenu>\n    </MenuContext.Provider>\n  );\n};\n\nfunction SpeedSearchMenuContent<T>({\n  items,\n  state,\n  speedSearch,\n  searchPopupProps,\n  menuProps,\n  menuRef,\n  emptyText,\n}: {\n  state: TreeState<T>;\n  items: Node<T>[];\n  speedSearch: SpeedSearchState & { matches: CollectionSpeedSearchMatches };\n  searchPopupProps: SpeedSearchPopupProps;\n  menuProps: HTMLAttributes<HTMLElement>;\n  menuRef: RefObject<HTMLUListElement>;\n  emptyText: React.ReactNode;\n}) {\n  const filter = speedSearch.active\n    ? ({ key, type }: Node<T>) =>\n        type !== \"item\" || speedSearch.matches.has(key)\n    : undefined;\n  return (\n    <>\n      {searchPopupProps.children && (\n        <StyledSearchFieldWrapper\n          onClick={(e) => {\n            e.preventDefault();\n          }}\n        >\n          <SpeedSearchInput {...searchPopupProps} clear={speedSearch.clear} />\n        </StyledSearchFieldWrapper>\n      )}\n      <StyledItemsContainer {...menuProps} ref={menuRef}>\n        {renderMenuNodes(state, items, filter)}\n        {speedSearch.active && speedSearch.matches.size === 0 && (\n          <StyledPlaceholder>{emptyText}</StyledPlaceholder>\n        )}\n      </StyledItemsContainer>\n    </>\n  );\n}\n\nfunction SpeedSearchSubmenu<T>({\n  parentState,\n  rootKey,\n  emptyText,\n}: SubmenuProps<T> & { emptyText: React.ReactNode }) {\n  const ref = useRef<HTMLUListElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const state = useSubmenuState(parentState);\n  const rootItem = state.collection.getItem(rootKey);\n\n  const {\n    speedSearch,\n    speedSearchContainerProps,\n    searchPopupProps,\n    keyboardDelegate,\n  } = useSpeedSearchMenu(state, rootKey, ref, containerRef);\n  const { submenuProps } = useSubmenu(\n    { rootKey, parentState, keyboardDelegate },\n    state,\n    ref\n  );\n\n  return (\n    <StyledSpeedSearchMenu\n      {...speedSearchContainerProps}\n      as=\"div\"\n      ref={containerRef}\n    >\n      <SpeedSearchMenuContent\n        items={[...(rootItem?.childNodes || [])]}\n        speedSearch={speedSearch}\n        searchPopupProps={searchPopupProps}\n        state={state}\n        menuProps={submenuProps}\n        menuRef={ref}\n        emptyText={emptyText}\n      />\n    </StyledSpeedSearchMenu>\n  );\n}\n","import { css } from \"styled-components\";\n\nimport { WINDOW_SHADOW } from \"../style-constants\";\nimport { styled } from \"../styled\";\nimport { StyledVerticalSeparator } from \"../StyledSeparator\";\nimport { UnknownThemeProp } from \"../Theme/Theme\";\n\nimport { StyledMenuItem, StyledMenuItemIcon } from \"./StyledMenuItem\";\n\nexport const MENU_VERTICAL_PADDING = 5;\nexport const MENU_BORDER_WIDTH = 1;\n\n// noinspection CssInvalidPropertyValue\nexport const StyledMenu = styled.ul<{ fillAvailableSpace?: boolean }>`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  font-size: 0.8rem;\n  margin: 0;\n  padding: ${MENU_VERTICAL_PADDING}px 0;\n  outline: none;\n  list-style: none;\n  width: fit-content;\n  min-width: 120px;\n  overflow: auto;\n  // Border doesn't seem to be painted in the original impl. IdeaPopupMenuUI.isUnderPopup(c) seemed to return false\n  // in all cases. More info: https://github.com/JetBrains/intellij-community/blob/c5ece483811a3ab546fc3880225efb02cc8b94dd/platform/platform-impl/src/com/intellij/ide/ui/laf/darcula/ui/DarculaPopupMenuBorder.java#L24\n  /*  border: ${MENU_BORDER_WIDTH}px solid\n    ${({ theme }) =>\n    theme.color(\"Menu.borderColor\", !theme.dark ? \"#CDCDCD\" : \"#515151\")};*/\n  ${WINDOW_SHADOW};\n  background: ${({ theme }) =>\n    theme.color(\n      \"PopupMenu.background\" as UnknownThemeProp<\"PopupMenu.background\">\n    )};\n  color: ${({ theme }) =>\n    theme.color(\n      \"PopupMenu.foreground\" as UnknownThemeProp<\"PopupMenu.foreground\">\n    )};\n\n  ${StyledVerticalSeparator}:first-child,\n  ${StyledVerticalSeparator}:last-child, \n  ${StyledVerticalSeparator} + ${StyledVerticalSeparator} {\n    display: none;\n  }\n  ${StyledVerticalSeparator} {\n    background-color: ${({ theme }) => theme.color(\"Menu.separatorColor\")};\n    height: ${({ theme }) =>\n      `${theme.value(\"PopupMenuSeparator.height\") ?? 3}px`};\n    padding: ${({ theme }) =>\n      `${theme.value(\"PopupMenuSeparator.stripeIndent\") ?? 1}px 0`};\n    margin: ${({ theme }) =>\n      `0 ${theme.value(\"PopupMenuSeparator.withToEdge\") ?? 1}px`};\n  }\n  ${({ fillAvailableSpace }) =>\n    fillAvailableSpace &&\n    css`\n      flex: 1;\n      width: fill-available; // will be converted to --webkit-fill-available and --moz-available, but doesn't work in FF\n      height: fill-available;\n    `}\n\n  --jui-menu-item-padding: 1rem;\n  --jui-menu-item-icon-width: 1rem;\n  --jui-menu-item-icon-spacing: 0.3125rem;\n\n  ${StyledMenuItem} {\n    // NOTE: The left margin seems not to be consistent in all menus.\n    padding-left: var(--jui-menu-item-padding);\n  }\n  &:has(${StyledMenuItemIcon}) {\n    // Adjusting item padding for menus with icon to be slightly smaller. Based on observations on the reference impl.\n    // Could be handled by a negative margin on icons as well.\n    --jui-menu-item-padding: 0.75rem;\n\n    // CSS-only solution to conditionally add left margin to menu items without icon, if there is at least one menu item\n    // with icon, in the current menu. To have text in all menu items aligned. The extra margin is avoided if there is no\n    // menu item with icon. It relies on :has() css pseudo-class which is not supported in FF at the moment.\n    ${StyledMenuItem}:not(:has(${StyledMenuItemIcon})) {\n      padding-left: calc(\n        var(--jui-menu-item-padding) + var(--jui-menu-item-icon-width) +\n          var(--jui-menu-item-icon-spacing)\n      );\n    }\n  }\n  ${StyledMenuItemIcon} {\n    width: var(--jui-menu-item-icon-width);\n    margin-right: var(--jui-menu-item-icon-spacing);\n  }\n`;\n","import { css, styled } from \"@intellij-platform/core/styled\";\n\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nexport const StyledMenuItemIcon = styled.span`\n  display: inline-flex; // prevents unwanted increased height\n`;\n\nexport const StyledNestedArrow = styled.span`\n  display: inline-flex; // to make it not take more height than the icon\n  margin-right: -0.75rem;\n  margin-left: 0.75rem;\n`;\n\nconst highlightedStyle = css`\n  color: ${({ theme }) =>\n    theme.asCurrentForeground(\n      theme.color(\n        \"MenuItem.selectionForeground\" as UnknownThemeProp<\"MenuItem.selectionForeground\">\n      )\n    )};\n  background: ${({ theme }) =>\n    theme.color(\n      \"MenuItem.selectionBackground\" as UnknownThemeProp<\"MenuItem.selectionBackground\">\n    )};\n`;\nconst defaultStyle = css`\n  color: ${({ theme }) =>\n    theme.color(\n      \"MenuItem.foreground\" as UnknownThemeProp<\"MenuItem.foreground\">\n    )};\n  background: unset;\n`;\nconst disabledStyle = css`\n  color: ${({ theme }) =>\n    theme.color(\"MenuItem.disabledForeground\") + \"!important\"};\n  background: unset !important;\n`;\nexport const StyledMenuItem = styled.li<{\n  isDisabled: boolean;\n  isActive: boolean;\n}>`\n  position: relative; // for being able to position arrow icon absolutely\n  outline: none;\n  cursor: default;\n  white-space: nowrap;\n\n  // bg/fg style for different states. Order is based on how they should override each other\n  ${defaultStyle};\n  ${({ isActive }) => isActive && highlightedStyle};\n  ${({ isDisabled }) => isDisabled && disabledStyle};\n\n  padding-right: 1.25rem;\n  line-height: 1.3125rem; // to make the item have the right height\n  display: flex;\n  align-items: center;\n`;\n","import React, { useContext, useEffect, useRef } from \"react\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { AriaMenuOptions, useMenu } from \"@react-aria/menu\";\nimport { mergeProps } from \"@react-aria/utils\";\n\nimport {\n  MenuKeyboardDelegate,\n  useSubmenu as useSubmenuAria,\n} from \"./_useSubmenu\";\nimport { useSubmenuState } from \"./_useSubmenuState\";\nimport { MenuContext } from \"./Menu\";\nimport { StyledMenu } from \"./StyledMenu\";\nimport { renderMenuNodes } from \"./renderMenuNodes\";\n\nexport function useSubmenu<T>(\n  {\n    rootKey,\n    parentState,\n    keyboardDelegate,\n  }: { rootKey: React.Key; parentState: TreeState<T> } & Pick<\n    AriaMenuOptions<T>,\n    \"keyboardDelegate\"\n  >,\n  state: TreeState<T>,\n  ref: React.RefObject<HTMLElement>\n) {\n  const rootItem = state.collection.getItem(rootKey);\n  const {\n    submenuBehavior,\n    autoFocus = true,\n    onClose,\n    onAction,\n  } = useContext(MenuContext);\n  let { menuProps } = useMenu(\n    {\n      \"aria-label\": rootItem?.[\"aria-label\"] || rootItem?.textValue,\n      onAction,\n      onClose,\n      selectedKeys: state.selectionManager.selectedKeys,\n      keyboardDelegate:\n        keyboardDelegate ||\n        new MenuKeyboardDelegate(\n          rootKey,\n          state.collection,\n          state.disabledKeys,\n          ref\n        ),\n      autoFocus,\n    },\n    state,\n    ref\n  );\n  const { submenuProps } = useSubmenuAria({ rootKey }, parentState, ref);\n\n  const submenuBehaviorProps = {\n    onKeyDown: (e: React.KeyboardEvent) => {\n      if (e.key === \"Escape\") {\n        // Close the menu and submenu root node.\n        state.toggleKey(rootKey);\n        state.selectionManager.setFocusedKey(rootKey);\n        parentState.selectionManager.setFocused(true);\n        if (submenuBehavior !== \"default\") {\n          e.stopPropagation();\n        }\n        return;\n      }\n    },\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      // we need this hack until the nested menu is properly supported. That's because when the element is hovered\n      // it sets the focus key, which will move focus to that item.\n      // noinspection PointlessBooleanExpressionJS seems to be false positive. autoFocus can be \"first\" or \"last\"\n      if (autoFocus === true) {\n        ref.current?.focus();\n      }\n    });\n  }, []);\n\n  return {\n    submenuProps: mergeProps(menuProps, submenuProps, submenuBehaviorProps),\n  };\n}\n\nexport interface SubmenuProps<T> {\n  parentState: TreeState<T>;\n  rootKey: React.Key;\n}\n\nexport function Submenu<T>({ parentState, rootKey }: SubmenuProps<T>) {\n  const ref = useRef<HTMLUListElement>(null);\n  const state = useSubmenuState(parentState);\n  const rootItem = state.collection.getItem(rootKey);\n\n  const { submenuProps } = useSubmenu({ rootKey, parentState }, state, ref);\n\n  return (\n    <StyledMenu {...submenuProps} ref={ref}>\n      {renderMenuNodes(state, [...(rootItem?.childNodes || [])])}\n    </StyledMenu>\n  );\n}\n","import { Collection, Node } from \"@react-types/shared\";\nimport { TreeState } from \"@react-stately/tree\";\nimport React, { Key, RefObject } from \"react\";\nimport { useKeyboard } from \"@react-aria/interactions\";\nimport { ListKeyboardDelegate } from \"@react-aria/selection\";\n\nexport class MenuKeyboardDelegate<T> extends ListKeyboardDelegate<T> {\n  private keys: React.Key[];\n  constructor(\n    rootKey: Key | null,\n    private collection: Collection<Node<T>>,\n    disabledKeys: Set<React.Key>,\n    ref: React.RefObject<HTMLElement>,\n    collator?: Intl.Collator\n  ) {\n    super(collection, disabledKeys, ref, collator);\n    this.keys = [...collection.getKeys()]\n      .map((key) => collection.getItem(key))\n      .flatMap((item) => {\n        if (item && item.parentKey == rootKey) {\n          if (item.type === \"item\") {\n            return [item.key];\n          } else if (item.type === \"section\") {\n            return [...item.childNodes].map(({ key }) => key);\n          }\n        }\n        return [];\n      });\n  }\n\n  getFirstKey(): React.Key {\n    return this.keys[0];\n  }\n  getLastKey(): React.Key {\n    return this.keys.slice(-1)[0];\n  }\n\n  getKeyBelow(key: React.Key): React.Key {\n    const keyBelow = super.getKeyBelow(key);\n    // @ts-expect-error: getKeyBelow should be allowed to return null, but typing is currently inaccurate in react-aria\n    return this.keys.includes(keyBelow) ? keyBelow : null;\n  }\n  getKeyAbove(key: React.Key): React.Key {\n    const keyAbove = super.getKeyAbove(key);\n    // @ts-expect-error: getKeyBelow should be allowed to return null, but typing is currently inaccurate in react-aria\n    return this.keys.includes(keyAbove) ? keyAbove : null;\n  }\n}\n\n/**\n * Behavior accessibility of submenus:\n * - Closing submenu on ArrowLeft key press.\n *   Note that it can't be implemented in useMenuItem, because the focus might be on no the submenu itself and not any\n *   of its items\n * @param rootKey: Key of the root node, the submenu is created from its children\n * @param state\n * @param ref\n */\nexport function useSubmenu<T>(\n  { rootKey }: { rootKey: Key },\n  state: TreeState<T>,\n  ref: RefObject<HTMLElement>\n) {\n  const { keyboardProps: submenuProps } = useKeyboard({\n    onKeyDown: (e) => {\n      // Keyboard events bubble through portals. Don't handle keyboard events\n      // for elements outside the collection (e.g. menus).\n      if (!ref.current?.contains(e.target as Element)) {\n        e.continuePropagation();\n        return;\n      }\n      const root = state.collection.getItem(rootKey);\n      if (e.key === \"ArrowLeft\" && root && state.expandedKeys.has(root.key)) {\n        state.toggleKey(root.key);\n        state.selectionManager.setFocused(true);\n        return;\n      }\n      e.continuePropagation();\n    },\n  });\n\n  return {\n    submenuProps,\n  };\n}\n","import { TreeState } from \"@react-stately/tree\";\nimport { Key, useRef, useState } from \"react\";\nimport {\n  MultipleSelectionState,\n  SelectionManager,\n} from \"@react-stately/selection\";\n\n/**\n * Creates a TreeState corresponding to the submenu, from the state of a parent (sub)menu.\n * The collection and everything is the same, and the only difference from the parent state is selection manager\n * having a separate focused state to keep the focused state of each menu container separately, as the submenus\n * are usually rendered in separate overlays.\n */\nexport function useSubmenuState<T>(parentState: TreeState<T>) {\n  // We want synchronous updates to `isFocused` and `focusedKey` after their setters are called.\n  // But we also need to trigger a re-render. So, we have both a ref (sync) and state (async).\n  const [, setFocused] = useState(false);\n  const [, setFocusedKey] = useState<Key | null>(null);\n  const isFocusedRef = useRef(false);\n  const focusedKeyRef = useRef<Key | null>(null);\n\n  const state: MultipleSelectionState = {\n    // @ts-expect-error state is private\n    ...parentState.selectionManager.state,\n    setFocused: (isFocused: boolean) => {\n      isFocusedRef.current = isFocused;\n      setFocused(isFocused);\n    },\n    setFocusedKey(key: Key) {\n      focusedKeyRef.current = key;\n      setFocusedKey(key);\n    },\n  };\n  Object.defineProperties(state, {\n    isFocused: {\n      get() {\n        return isFocusedRef.current;\n      },\n    },\n    focusedKey: {\n      get() {\n        return focusedKeyRef.current!;\n      },\n    },\n  });\n\n  return {\n    ...parentState,\n    selectionManager: new SelectionManager(parentState.collection, state),\n  };\n}\n","import React from \"react\";\nimport { useMenuSection } from \"@react-aria/menu\";\nimport { Node } from \"@react-types/shared\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { styled } from \"@intellij-platform/core/styled\";\n\nimport { renderMenuNodes } from \"./renderMenuNodes\";\n\nexport interface MenuSectionProps<T> {\n  item: Node<T>;\n  state: TreeState<T>;\n  filter?: (node: Node<T>) => boolean;\n}\n\nconst StyledMenuHeading = styled.div`\n  cursor: default;\n  padding: 2px 0 2px 12px;\n  font-weight: bold;\n  font-size: 0.8125rem;\n  color: ${({ theme }) =>\n    theme.color(\n      \"MenuItem.disabledForeground\"\n    )}; // TODO: make sure about it. It's probably not correct color\n`;\n\nconst StyledMenuSectionItemsContainer = styled.ul`\n  padding: 0;\n  margin: 0;\n`;\n\nexport const MenuSection = <T extends unknown>({\n  item,\n  state,\n  filter = () => true,\n}: MenuSectionProps<T>): React.ReactElement => {\n  let { itemProps, headingProps, groupProps } = useMenuSection({\n    heading: item.rendered,\n    \"aria-label\": item[\"aria-label\"],\n  });\n\n  const nodes = [...item.childNodes].filter(filter);\n  if (nodes.filter(({ type }) => type === \"item\").length === 0) {\n    return <></>;\n  }\n  return (\n    <>\n      <li {...itemProps}>\n        {item.rendered && (\n          <StyledMenuHeading {...headingProps}>\n            {item.rendered}\n          </StyledMenuHeading>\n        )}\n        <StyledMenuSectionItemsContainer {...groupProps}>\n          {renderMenuNodes(state, nodes)}\n        </StyledMenuSectionItemsContainer>\n      </li>\n    </>\n  );\n};\n","import React from \"react\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { Node } from \"@react-types/shared\";\nimport { ListDivider } from \"@intellij-platform/core/List/ListDivider\"; // private import\n\nimport { MenuItem } from \"./MenuItem\";\nimport { MenuSection } from \"./MenuSection\";\n\nexport function renderMenuNodes<T>(\n  state: TreeState<T>,\n  nodes: Node<T>[],\n  filter: (node: Node<T>) => boolean = () => true\n) {\n  return nodes.filter(filter).map((node) => {\n    switch (node.type) {\n      case \"item\":\n        return <MenuItem key={node.key} item={node} state={state} />;\n      case \"section\":\n        return (\n          <>\n            {node.props.hasDivider && (\n              <ListDivider key={node.key + \"-divider1\"} />\n            )}\n            <MenuSection\n              key={node.key}\n              item={node}\n              state={state}\n              filter={filter}\n            />\n            {node.props.hasDivider && (\n              <ListDivider key={node.key + \"-divider2\"} />\n            )}\n          </>\n        );\n      case \"divider\":\n        return <ListDivider key={node.key} />;\n    }\n  });\n}\n","import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { useEventCallback } from \"@intellij-platform/core/utils/useEventCallback\";\n\nexport interface MnemonicProps {\n  children: React.ReactNode;\n  /**\n   * Character to be used as {@link https://jetbrains.design/intellij/principles/mnemonics/ mnemonic}.\n   */\n  mnemonic: string;\n  /**\n   * Called when mnemonic key is pressed with the activator key\n   */\n  onTriggered?: () => void;\n\n  /**\n   * Whether the mnemonic is disabled. Useful when setting mnemonic on disable-able components, to just pass\n   * isDisabled prop down to MnemonicTrigger\n   */\n  isDisabled?: boolean;\n}\n\nconst MnemonicContext = createContext<{\n  character: string | null;\n  rendered: () => void;\n  /**\n   * Called when mnemonic is found in the text of the trigger component and rendered underlined, so the user\n   * can have a chance to know how to trigger the component's action via mnemonic.\n   */\n  active: boolean;\n}>({ character: null, active: false, rendered: () => {} });\n\nexport const MnemonicTrigger = ({\n  children,\n  mnemonic,\n  isDisabled,\n  onTriggered: onTriggeredProp = () => {},\n}: MnemonicProps): JSX.Element => {\n  const ref = useRef<HTMLElement>(null);\n  const onTriggered = useEventCallback(onTriggeredProp);\n  const [active, setActive] = useState(false);\n  const keydownListener = useEventCallback((e: KeyboardEvent) => {\n    if (isDisabled) {\n      return;\n    }\n    if (active && !e.repeat) {\n      const character = e.code.match(/Key([A-Z])/)?.[1];\n      if (character && character.toLowerCase() === mnemonic.toLowerCase()) {\n        onTriggered();\n      }\n    }\n    if (e.key === \"Alt\" && ref.current && isAccessible(ref.current)) {\n      setActive(true);\n    }\n  });\n\n  useEffect(() => {\n    // calling addEventListener with already registered listener is no-op.\n    document.addEventListener(\"keydown\", keydownListener);\n    document.addEventListener(\"keyup\", keyupListener);\n    window.addEventListener(\"blur\", onBlur);\n    function onBlur() {\n      setActive(false);\n    }\n    function keyupListener(e: KeyboardEvent) {\n      if (e.key === \"Alt\") {\n        setActive(false);\n      }\n    }\n    return () => {\n      document.removeEventListener(\"keydown\", keydownListener);\n      document.removeEventListener(\"keyup\", keyupListener);\n      window.removeEventListener(\"blur\", onBlur);\n    };\n  }, []);\n\n  const renderedMnemonicRef = useRef<string>(\"\");\n  useEffect(() => {\n    const timerId = setTimeout(() => {\n      if (renderedMnemonicRef.current !== mnemonic) {\n        console.warn(\n          `Mnemonic ${mnemonic} was set but not rendered to the user. \nMake sure the specified character is rendered directly in MnemonicTrigger, or wrapped by MnemonicText inside MnemonicTrigger children. \nElement:`,\n          ref.current?.parentElement\n        );\n      }\n    });\n    return () => {\n      clearTimeout(timerId);\n    };\n  }, [mnemonic]);\n  return (\n    <MnemonicContext.Provider\n      value={{\n        character: mnemonic,\n        active,\n        rendered: () => {\n          renderedMnemonicRef.current = mnemonic;\n        },\n      }}\n    >\n      <span hidden ref={ref} />\n      {typeof children === \"string\" ? (\n        <MnemonicText>{children}</MnemonicText>\n      ) : (\n        children\n      )}\n    </MnemonicContext.Provider>\n  );\n};\n\n/**\n * Checks if a\n * See more in ./design-decisions.md\n */\nfunction isAccessible(element: Element): boolean {\n  return (\n    !element.closest(\"[aria-hidden]\") &&\n    element.parentElement !== null &&\n    isVisible(element.parentElement)\n  );\n}\nfunction isVisible(e: HTMLElement) {\n  return !!(e.offsetWidth || e.offsetHeight || e.getClientRects().length);\n}\n/**\n * Used inside MnemonicTrigger children, when the direct child can't be a string.\n * @example\n * ```tsx\n * <MnemonicTrigger mnemonic=\"D\">\n *    <>\n *      <MnemonicText>Disconnect</MnemonicText>\n *    </>\n * </MnemonicTrigger>\n * ```\n */\nexport function MnemonicText({ children }: { children: string }) {\n  const { character, active, rendered } = useContext(MnemonicContext);\n  if (character) {\n    const index = children.toLowerCase().indexOf(character.toLowerCase());\n    const found = index > -1;\n    if (found) {\n      rendered();\n    }\n    if (found && active) {\n      return (\n        <>\n          {children.slice(0, index)}\n          <u>{children.slice(index, index + 1)}</u>\n          {children.slice(index + 1)}\n        </>\n      );\n    }\n  }\n  return <>{children}</>;\n}\n","import { useEventCallback } from \"@intellij-platform/core/utils/useEventCallback\";\nimport React, { useEffect } from \"react\";\n\n/**\n * A workaround for an issue in measuring overlay size, caused by a limitation/bug in how React 17 runs effects when\n * children suspend rendering: https://github.com/facebook/react/issues/21510\n *\n * Here is a simplified demonstration of the issue:\n * Expected behavior (React 18): https://codesandbox.io/s/parent-effects-suspense-v18-38m8p7?file=/src/App.tsx\n * Broken behavior (React 17): https://codesandbox.io/s/parent-effects-suspense-v17-h39g4g\n *\n * The overlay content size measuring runs in an effect, and that effect won't run when the content is rendered after\n * suspense.\n */\nexport function UNSAFE_React17SuspenseFix({\n  measureContentSize,\n  children,\n}: {\n  measureContentSize: () => void;\n  children: React.ReactNode;\n}) {\n  if (React.version.startsWith(\"17\")) {\n    return (\n      <React.Suspense\n        fallback={\n          <NullSuspenseFallback afterUnsuspended={measureContentSize} />\n        }\n      >\n        {children}\n      </React.Suspense>\n    );\n  }\n  return <>{children}</>;\n}\n\nfunction NullSuspenseFallback({\n  afterSuspended: afterSuspendedProp = () => {},\n  afterUnsuspended: afterUnsuspendedProp = () => {},\n}: {\n  afterUnsuspended?: () => void;\n  afterSuspended?: () => void;\n}) {\n  const afterSuspended = useEventCallback(afterSuspendedProp);\n  const afterUnsuspended = useEventCallback(afterUnsuspendedProp);\n  useEffect(() => {\n    afterSuspended?.();\n    return () => {\n      afterUnsuspended?.();\n    };\n  }, []);\n  return null;\n}\n","import React, { FocusEventHandler, useContext, useRef } from \"react\";\nimport { useOverlayTriggerState } from \"@react-stately/overlays\";\nimport { useModalOverlay, usePreventScroll } from \"@react-aria/overlays\";\nimport { focusSafely, FocusScope } from \"@react-aria/focus\";\nimport { useDialog } from \"@react-aria/dialog\";\nimport { AriaDialogProps } from \"@react-types/dialog\"; // temporary phantom dependency\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { WINDOW_SHADOW } from \"@intellij-platform/core/style-constants\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport {\n  OverlayInteractionHandler,\n  OverlayResizeHandles,\n  ResizableMovableOverlayOptions,\n  useResizableMovableOverlay,\n} from \"@intellij-platform/core/Overlay\";\nimport { WindowContext } from \"@intellij-platform/core/ModalWindow/WindowContext\";\nimport { UNSAFE_React17SuspenseFix } from \"@intellij-platform/core/Overlay/UNSAFE_React17SuspenseFix\";\n\nexport interface ModalWindowProps\n  extends AriaDialogProps,\n    ResizableMovableOverlayOptions {\n  children: React.ReactNode;\n  className?: string;\n  onClose?: () => void;\n}\n\nconst StyledWindowUnderlay = styled.div`\n  position: fixed;\n  z-index: 1000; // FIXME: z-index should not be hard-coded like this\n  inset: 0;\n`;\n\nexport const StyledWindowContainer = styled.div`\n  position: fixed;\n  // not checked if there should be a better substitute for * in the following colors. Maybe \"Component\"?\n  background-color: ${({ theme }) => theme.color(\"*.background\")};\n  color: ${({ theme }) => theme.color(\"*.foreground\")};\n  border-radius: 8px;\n  ${WINDOW_SHADOW}; // FIXME: OS-dependant style?\n  outline: 1px solid #555; // FIXME\n`;\n\n/**\n * only needed for setting overflow to hidden to make sure nothing will overflow a window under any circumstances.\n * The reason we can't set that overflow: \"hidden\" on the StyledWindowContainer itself is that we want resize handles\n * to overflow without bing clipped.\n */\nconst StyledWindowInnerContainer = styled.div`\n  height: inherit;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const DEFAULT_WINDOW_MIN_WIDTH = 50;\nexport const DEFAULT_WINDOW_MIN_HEIGHT = 24;\n\nexport const WindowControllerContext = React.createContext<\n  Partial<Pick<ModalWindowProps, \"onClose\">>\n>({});\n\n/**\n * A movable/resizable modal window. The window header which holds the title, can be used to drag the window around.\n * In the reference impl, modal windows are os-native, and contain os-level buttons for minimize/close/maximise, which\n * are not relevant here since they wouldn't be os-native windows. A close button is still relevant (and kind of\n * necessary) and will be added in next iterations.\n *\n * The content container doesn't come with any padding. Other related components should be used for common layouts in\n * modal windows.\n * Example use cases: Window for git operations such as push, update, revert, new branch, etc.\n *\n * ![img.png](https://user-images.githubusercontent.com/3150694/181095858-968c5c66-2ae7-4e40-84e3-e6df43cd4aa4.png)\n *\n * NOTE: The part regarding rendering OverlayInteractionHandler, and rendering as a dialog with a focus scope, in an\n * overlay container could be extracted into a component which is then used to create custom resizable/movable overlay\n * dialogs, like \"Branches\", or \"Search Everywhere\".\n *\n * TODO: show close button (maybe os-aware styles?)\n *\n */\nexport const ModalWindow = ({\n  interactions = \"all\",\n  minWidth = DEFAULT_WINDOW_MIN_WIDTH,\n  minHeight = DEFAULT_WINDOW_MIN_HEIGHT,\n  className,\n  ...props\n}: ModalWindowProps): React.ReactElement => {\n  const { children } = props;\n  const propsContext = useContext(WindowControllerContext);\n  const onClose = () => {\n    propsContext.onClose?.();\n    props.onClose?.();\n  };\n\n  const ref = React.useRef<HTMLDivElement>(null);\n  const { modalProps, underlayProps } = useModalOverlay(\n    {\n      isDismissable: false,\n      isKeyboardDismissDisabled: false,\n    },\n    // useModalOverlay doesn't really need the full `OverlayTriggerState` interface.\n    // It only requires `isOpen` and `close`.\n    // However, it's currently typed like this, so useOverlayTriggerState is used,\n    // just to comply with the required type, and in the unlikely case where a future minor version starts to use\n    // other properties from `OverlayTriggerState`\n    useOverlayTriggerState({\n      isOpen: true,\n      onOpenChange: (isOpen) => {\n        if (!isOpen) {\n          onClose();\n        }\n      },\n    }),\n    ref\n  );\n  usePreventScroll();\n\n  const { dialogProps, titleProps } = useDialog(props, ref);\n\n  const {\n    bounds: style,\n    overlayInteractionHandlerProps,\n    UNSAFE_measureContentSize,\n  } = useResizableMovableOverlay(ref, { ...props, minHeight, minWidth });\n\n  const { focusContainmentFixProps } = useFocusContainmentFix();\n\n  return (\n    <StyledWindowUnderlay {...underlayProps} className={className}>\n      <OverlayInteractionHandler {...overlayInteractionHandlerProps}>\n        <FocusScope contain restoreFocus autoFocus>\n          <StyledWindowContainer\n            {...mergeProps(dialogProps, modalProps, focusContainmentFixProps, {\n              style,\n            })}\n            ref={ref}\n          >\n            <StyledWindowInnerContainer>\n              <WindowContext.Provider\n                value={{\n                  isActive: true, // because it's modal. WindowContext would be used for non-modal windows too, in future\n                  titleProps,\n                  movable: interactions !== \"none\",\n                }}\n              >\n                <UNSAFE_React17SuspenseFix\n                  measureContentSize={UNSAFE_measureContentSize}\n                >\n                  {children}\n                </UNSAFE_React17SuspenseFix>\n              </WindowContext.Provider>\n            </StyledWindowInnerContainer>\n            {interactions === \"all\" && <OverlayResizeHandles />}\n          </StyledWindowContainer>\n        </FocusScope>\n      </OverlayInteractionHandler>\n    </StyledWindowUnderlay>\n  );\n};\n\n/**\n * The way FocusScope is implemented at the moment, it's possible for another focus scope to steal the focus,\n * right after the modal window is opened. The issue is not tracked down to the root cause. But with this hook,\n * we make sure there is no way for focus to go out of the modal window, when it's mounted.\n */\nfunction useFocusContainmentFix<T extends HTMLElement>() {\n  const lastFocusedElementRef = useRef<HTMLElement | null>(null);\n  const onFocus: FocusEventHandler<T> = (e) => {\n    lastFocusedElementRef.current = e.target;\n  };\n  const onBlur: FocusEventHandler = (e) => {\n    const probablyFocusedElement = e.relatedTarget;\n    if (\n      !probablyFocusedElement ||\n      (probablyFocusedElement instanceof Element &&\n        !e.currentTarget.contains(probablyFocusedElement) &&\n        // The following condition is added to exclude cases where the focus\n        // is going to an overlay that is opened from within the modal window.\n        // The condition is suboptimal as there is no check on whether the\n        // overlay is a logical child of the modal or not.\n        // However, it seems justified since the entire hook is a temporary hack,\n        // and also it doesn't seem likely for an overlay outside the modal\n        // to grab the focus.\n        !probablyFocusedElement.closest(\"[data-overlay-root]\"))\n    ) {\n      const elementToFocus = lastFocusedElementRef.current;\n      if (elementToFocus) {\n        focusSafely(elementToFocus);\n      }\n    }\n  };\n  return {\n    focusContainmentFixProps: {\n      onFocus,\n      onBlur,\n    },\n  };\n}\n","import React from \"react\";\nimport { DOMAttributes } from \"@react-types/shared\";\n\nexport const WindowContext = React.createContext<{\n  isActive: boolean;\n  movable: boolean;\n  titleProps: DOMAttributes;\n}>({ isActive: false, movable: true, titleProps: {} });\n","import { styled } from \"@intellij-platform/core/styled\";\nimport React from \"react\";\nimport { ButtonGroup } from \"@intellij-platform/core/ButtonGroup\";\n\nconst StyledFooter = styled.div<{ hasBorder?: boolean }>`\n  padding: 0.625rem 0.875rem;\n  display: flex;\n  gap: 0.5rem;\n  justify-content: space-between;\n  align-items: center;\n  border-top: 1px solid transparent;\n  border-color: ${({ hasBorder, theme }) =>\n    hasBorder && theme.commonColors.contrastBorder};\n`;\nconst StyledFooterSide = styled.div`\n  display: flex;\n  gap: 0.75rem;\n`;\n\n/**\n * Implements the common layout for window footer, to be used in {@link ModalWindowProps#footer}.\n * Footer has a left and a right side. There is a standard gap between the children of each side.\n */\nexport function WindowFooter({\n  left,\n  right,\n  hasBorder,\n}: {\n  /**\n   * The content to go to the left side the footer. A help icon button is very common on the left side.\n   */\n  left?: React.ReactNode;\n  /**\n   * The content to go to the right side the footer.\n   * {@link Button}s are usually used inside the right content.\n   * A {@link ButtonGroup} is rendered around the content to allow for keyboard navigation with arrow keys.\n   */\n  right?: React.ReactNode;\n  /**\n   * Whether to show top border for footer or not\n   */\n  hasBorder?: boolean;\n}) {\n  return (\n    <StyledFooter hasBorder={hasBorder}>\n      <StyledFooterSide>{left}</StyledFooterSide>\n      <StyledFooterSide>\n        <ButtonGroup>{right}</ButtonGroup>\n      </StyledFooterSide>\n    </StyledFooter>\n  );\n}\n","import React, { HTMLAttributes, useContext } from \"react\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { OverlayMoveHandle } from \"@intellij-platform/core/Overlay\";\n\nimport { WindowContext } from \"./WindowContext\";\nimport { mergeProps } from \"@react-aria/utils\";\n\nconst StyledWindowTitle = styled.h1`\n  margin: 0;\n  text-align: center;\n  font-size: 13px; // not rem! intentional\n  line-height: 24px; // Double check\n  cursor: default;\n  user-select: none;\n  padding: 0 8px;\n`;\n\n/**\n * Implements appearance of Window header, and also acts as a handle for moving the window.\n * Expected to be used with {@link WindowLayout}:\n *\n * @example\n * ```tsx\n * <ModalWindow>\n *    <WindowLayout header={<WindowHeader>header</WindowHeader>} />\n * </ModalWindow>\n * ```\n */\nexport const WindowHeader = ({ children }: { children?: React.ReactNode }) => {\n  const { movable, titleProps } = useContext(WindowContext);\n  const renderTitle = (otherProps: HTMLAttributes<HTMLElement> = {}) => (\n    <StyledWindowTitle {...mergeProps(titleProps, otherProps)}>\n      {children || <>&nbsp;</>}\n    </StyledWindowTitle>\n  );\n  return movable ? (\n    <OverlayMoveHandle>\n      {({ moveHandleProps }) => renderTitle(moveHandleProps)}\n    </OverlayMoveHandle>\n  ) : (\n    renderTitle()\n  );\n};\n","import { styled } from \"@intellij-platform/core/styled\";\nimport React from \"react\";\nimport { WindowHeader } from \"./WindowHeader\";\nimport { WindowFooter } from \"@intellij-platform/core/ModalWindow/WindowFooter\";\n\nconst StyledWindowFooter = styled.div`\n  min-height: min-content;\n`;\n\nconst StyledWindowContentWrapper = styled.div`\n  overflow: auto;\n  flex: 1;\n`;\n\n/**\n * Window content layout, supporting fixed `header` and `footer` sections, and a scrollable `content` area.\n */\nexport function WindowLayout({\n  header,\n  footer,\n  content,\n}: {\n  /**\n   * Fixed position header of the window at the top. Use {@link WindowLayout.Header} for the default window header,\n   * which also acts as a move handle for the window. If a string is passed, it will be wrapped by\n   * {@link WindowLayout.Header} automatically.\n   */\n  header: React.ReactNode;\n  /**\n   * Scrollable content of the window.\n   */\n  content: React.ReactNode;\n  /**\n   * An area at the bottom of the window which is not scrolled as opposed to `content`. Use {@link WindowLayout.Footer}\n   * for rendering the common layout of a window footer.\n   */\n  footer?: React.ReactNode;\n}) {\n  return (\n    <>\n      {header &&\n        (typeof header === \"string\" ? (\n          <WindowHeader>{header}</WindowHeader>\n        ) : (\n          header\n        ))}\n      <StyledWindowContentWrapper>{content}</StyledWindowContentWrapper>\n      {footer && <StyledWindowFooter>{footer}</StyledWindowFooter>}\n    </>\n  );\n}\n\n// Just for improved discoverability. Might as well export WindowFooter and WindowHeader instead.\nWindowLayout.Footer = WindowFooter;\nWindowLayout.Header = WindowHeader;\n","import React, {\n  ReactElement,\n  ReactNode,\n  useContext,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport {\n  ModalWindow,\n  ModalWindowProps,\n  WindowControllerContext,\n} from \"./ModalWindow\";\n\nexport interface WindowManagerAPI {\n  /**\n   * Shows a modal window within the stack of windows managed by {@link WindowManager}.\n   * The opened windows will be closed when `onClose` interactions happen.\n   * Returns a Promise which is resolved when the modal window is closed.\n   *\n   * Modal window element, or a function that returns the modal window element can\n   * be passed.\n   * If a function is passed, it will receive a close function in its object argument,\n   * which can be used to resolve the returned promise with.\n   *\n   * @example\n   *\n   * ```\n   * const windowManager = useWindowManager();\n   *\n   * const showWindow = () => {\n   *   windowManager\n   *     .open<boolean>(({ close }) => (\n   *       <ModalWindow>\n   *         <WindowLayout\n   *           header=\"...\"\n   *           content={<>...</>}\n   *           footer={\n   *             <WindowLayout.Footer\n   *               right={\n   *                 <>\n   *                   <Button onPress={close}>Cancel</Button>\n   *                   <Button onPress={() => close(true)}>Ok</Button>\n   *                 </>\n   *               }\n   *             />\n   *           }\n   *         />\n   *       </ModalWindow>\n   *     ))\n   *     .then((confirmed) => alert(`confirmed: ${confirmed ?? false}`));\n   * };\n   * ```\n   */\n  open<T>(\n    props:\n      | React.ReactElement<ModalWindowProps, typeof ModalWindow>\n      | ((args: {\n          close: (result?: T) => void;\n        }) => React.ReactElement<ModalWindowProps, typeof ModalWindow>)\n  ): Promise<T | undefined>;\n}\n\nconst NotImplementedFn = () => {\n  throw new Error(\n    \"WindowManager not found. Wrap your application with WindowManager to be able to open windows imperatively\"\n  );\n};\n\nconst WindowsContext = React.createContext<WindowManagerAPI>({\n  open: NotImplementedFn,\n});\n\n/**\n * Returns imperative API for showing windows.\n *\n */\nexport const useWindowManager = (): WindowManagerAPI =>\n  useContext(WindowsContext);\n\ntype WindowElement = ReactElement<ModalWindowProps, typeof ModalWindow>;\n\nexport interface WindowManagerProps {\n  children?: ReactNode;\n}\n\n/**\n * Enables imperative API (via {@link useWindowManager}) for opening windows.\n * It renders windows in a portal appended to `body`, unless `disablePortal` is `true`.\n *\n */\nexport const WindowManager: React.FC<WindowManagerProps> = ({ children }) => {\n  const [windows, setWindows] = useState<Array<WindowElement>>([]);\n  const newKeyRef = useRef<number>(0);\n\n  const api = useMemo<WindowManagerAPI>(() => {\n    return {\n      open: function <T>(content: Parameters<WindowManagerAPI[\"open\"]>[0]) {\n        return new Promise<T | undefined>((resolve) => {\n          newKeyRef.current++;\n          const close = (result?: T) => {\n            setWindows((currentWindows) =>\n              currentWindows.filter((aWindow) => aWindow !== window)\n            );\n            // Make sure (?) to resolve the promise after the dialog is closed,\n            // for the focus to be restored to the previous element before the\n            // potential further actions take place.\n            requestAnimationFrame(() => {\n              resolve(result);\n            });\n          };\n          const window = (\n            <WindowControllerContext.Provider\n              value={{\n                onClose: () => {\n                  close();\n                },\n              }}\n              key={newKeyRef.current}\n            >\n              {typeof content === \"function\"\n                ? // @ts-expect-error close signature is not correctly inferred\n                  content({ close })\n                : content}\n            </WindowControllerContext.Provider>\n          );\n          setWindows((currentWindows) => currentWindows.concat(window));\n        });\n      },\n    };\n  }, []);\n\n  return (\n    <WindowsContext.Provider value={api}>\n      {children}\n      {windows}\n    </WindowsContext.Provider>\n  );\n};\n","import React, { useContext, useRef } from \"react\";\nimport { Overlay as AriaOverlay, OverlayProps } from \"@react-aria/overlays\";\n\nconst ParentOverlayContext = React.createContext<HTMLElement | null>(null);\n\n/**\n * A (drop-in replacement) wrapper around Overlay, which makes sure overlays created in nested\n * react components will be ported to the same top level container. This is especially useful to detect\n * \"outside clicks\" when overlays are nested. The most common example would be nested menu in popup.\n *\n */\nexport function Overlay({\n  children,\n  OverlayComponent = AriaOverlay,\n}: {\n  children: React.ReactNode;\n  OverlayComponent?: React.ComponentType<OverlayProps>;\n}) {\n  const root = useContext(ParentOverlayContext);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  if (root) {\n    return (\n      <OverlayComponent portalContainer={root}>{children}</OverlayComponent>\n    );\n  }\n  return (\n    <ParentOverlayContext.Provider value={containerRef.current}>\n      <OverlayComponent>\n        <div ref={containerRef} data-overlay-root=\"\">\n          {children}\n        </div>\n      </OverlayComponent>\n    </ParentOverlayContext.Provider>\n  );\n}\n\n/**\n * Returns true, if element1 and element2 are in nested overlays. \"Nested\" being in terms of React component tree.\n * Useful for detecting \"outside click\" when overlay components are nested in each other.\n */\nexport function areInNestedOverlays(\n  element1: Element | null,\n  element2: Element | null\n) {\n  const overlayRoot1 = element1?.closest(\"[data-overlay-root]\");\n  const overlayRoot2 = element2?.closest(\"[data-overlay-root]\");\n  return Boolean(overlayRoot1) && overlayRoot1 === overlayRoot2;\n}\n","import React, { useContext } from \"react\";\n\nexport type Bounds = {\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n};\n\n/**\n * TODO(docs): add a few words about this abstraction and it's use.\n */\nexport type OverlayInteractionHandlerProps = {\n  /**\n   * Signals start of a UI interaction like resize or move, in which overlay bounds change.\n   */\n  startInteraction: (type: \"move\" | \"resize\") => Bounds;\n  /**\n   * Used to update bounds state during a UI interaction.\n   */\n  updateBounds: (bounds: Bounds) => void;\n  /**\n   * Signals end of a UI interaction.\n   */\n  finishInteraction: () => void;\n\n  minWidth?: number;\n  minHeight?: number;\n};\n\nconst OverlayInteractionHandlerContext =\n  React.createContext<OverlayInteractionHandlerProps | null>(null);\n\n/**\n * Provides the context used by components like {@link OverlayMoveHandle} and {@link OverlayResizeHandles} that provide\n * user interactions that change the boundary of the overlay they are rendered in.\n * Use {@link useResizableMovableOverlay} which implements an efficient state management for overlay bounds and returns\n * props to be passed to `OverlayInteractionHandler`:\n *\n * @example\n *\n * const {\n *    bounds, // Bounds to be applied to the overlay element.\n *    overlayInteractionHandlerProps,\n *  } = useResizableMovableOverlay(props);\n *\n * return (\n *   <OverlayInteractionHandler {...overlayInteractionHandlerProps}>\n *     <div style={bounds}>...</div>\n *   </OverlayInteractionHandler>\n * );\n *\n * @see useResizableMovableOverlay\n */\nexport const OverlayInteractionHandler = ({\n  children,\n  ...props\n}: OverlayInteractionHandlerProps & { children: React.ReactNode }) => {\n  return (\n    <OverlayInteractionHandlerContext.Provider value={props}>\n      {children}\n    </OverlayInteractionHandlerContext.Provider>\n  );\n};\n\nexport const useOverlayInteractionHandler = () =>\n  useContext(OverlayInteractionHandlerContext);\n","import { useMove, UseMoveOptions } from \"../utils/interaction-utils/useMove\";\nimport { useOverlayInteractionHandler } from \"./OverlayInteractionHandler\";\nimport React from \"react\";\n\nexport type UseOverlayMoveHandleOptions = Omit<\n  UseMoveOptions<unknown>,\n  \"onMoveStart\" | \"onMove\" | \"onMoveEnd\"\n>;\n/**\n * Used for making a dom element a move handle for the overlay it's being rendered in.\n * It uses the context provided by {@link OverlayInteractionHandler}, and returns props to be applied on a dom element to\n * make it a move handle for the overlay it's being rendered in.\n *\n * @see OverlayMoveHandle\n */\nexport function useOverlayMoveHandle(options?: UseOverlayMoveHandleOptions) {\n  const interactionHandler = useOverlayInteractionHandler();\n  if (!interactionHandler) {\n    return { moveHandleProps: {} };\n  }\n  const { finishInteraction, startInteraction, updateBounds } =\n    interactionHandler;\n\n  const moveProps = useMove({\n    ...options,\n    onMoveStart: () => {\n      return startInteraction(\"move\");\n    },\n    onMove: ({ startState, movement }) => {\n      updateBounds({\n        ...startState,\n        top: startState.top + movement.y,\n        left: startState.left + movement.x,\n      });\n    },\n    onMoveEnd: () => {\n      finishInteraction();\n    },\n  });\n  return { moveHandleProps: moveProps || {} };\n}\n\n/**\n * Used for making a dom element a move handle for the overlay it's being rendered in.\n * It uses the context provided by {@link OverlayInteractionHandler}. A render function is expected as `children`. It's\n * passed the event handlers that need to be applied on a dom element to make it a move handle for the overlay it's\n * being rendered in.\n */\nexport const OverlayMoveHandle = ({\n  children,\n  ...props\n}: {\n  children: (\n    props: ReturnType<typeof useOverlayMoveHandle>\n  ) => React.ReactElement;\n} & UseOverlayMoveHandleOptions) => {\n  return children(useOverlayMoveHandle(props));\n};\n","import React, { useRef } from \"react\";\nimport {\n  BottomResizer,\n  LeftResizer,\n  RightResizer,\n  TopResizer,\n} from \"../Resizer\";\nimport {\n  HorizontalResizerProps,\n  VerticalResizerProps,\n} from \"../Resizer/ResizerProps\";\nimport {\n  Bounds,\n  useOverlayInteractionHandler,\n} from \"./OverlayInteractionHandler\";\n\ntype OverlayResizeHandlesProps = {\n  minWidth?: number;\n  minHeight?: number;\n};\n\n/**\n * Renders invisible resize handles at the edges of the overlay it's rendered in. It uses the context provided by\n * {@link OverlayInteractionHandler} to resize the overlay when the handles are used.\n */\nexport function OverlayResizeHandles(props: OverlayResizeHandlesProps) {\n  const overlayResizer = useOverlayResizer(props);\n  return (\n    overlayResizer && (\n      <>\n        <RightResizer {...overlayResizer.getResizerProps(\"right\")} />\n        <LeftResizer {...overlayResizer.getResizerProps(\"left\")} />\n        <TopResizer {...overlayResizer.getResizerProps(\"top\")} />\n        <BottomResizer {...overlayResizer.getResizerProps(\"bottom\")} />\n      </>\n    )\n  );\n}\n\n/**\n * overlay resizing logic and state. When resizing is in progress, the source of truth is a local state, for performance\n * reasons. When the resize is done (e.g. by mouse being released), `onBoundsChange` is called with the new bounds.\n */\nfunction useOverlayResizer(props: OverlayResizeHandlesProps = {}) {\n  const initialBoundsRef = useRef<Bounds>({\n    top: 0,\n    height: 0,\n    width: 0,\n    left: 0,\n  });\n  const interactionHandler = useOverlayInteractionHandler();\n  const {\n    minWidth = interactionHandler?.minWidth ?? 1,\n    minHeight = interactionHandler?.minHeight ?? 1,\n  } = props;\n  if (!interactionHandler) {\n    return null;\n  }\n  const { finishInteraction, startInteraction, updateBounds } =\n    interactionHandler;\n\n  const onResize = {\n    right: (size: number) =>\n      updateBounds({\n        ...initialBoundsRef.current,\n        width: Math.max(minWidth, initialBoundsRef.current.width + size),\n      }),\n    bottom: (size: number) =>\n      updateBounds({\n        ...initialBoundsRef.current,\n        height: Math.max(minHeight, initialBoundsRef.current.height + size),\n      }),\n    left: (size: number) => {\n      const newWidth = Math.max(\n        minWidth,\n        initialBoundsRef.current.width + size\n      );\n      const initialBounds = initialBoundsRef.current;\n      return updateBounds({\n        ...initialBounds,\n        left: initialBounds.left + initialBounds.width - newWidth,\n        width: newWidth,\n      });\n    },\n    top: (size: number) => {\n      const newHeight = Math.max(\n        minHeight,\n        initialBoundsRef.current.height + size\n      );\n      const initialBounds = initialBoundsRef.current;\n      return updateBounds({\n        ...initialBounds,\n        top: initialBounds.top + initialBounds.height - newHeight,\n        height: newHeight,\n      });\n    },\n  };\n\n  function getResizerProps(side: \"left\" | \"right\"): HorizontalResizerProps;\n  function getResizerProps(side: \"top\" | \"bottom\"): VerticalResizerProps;\n  function getResizerProps(\n    side: \"left\" | \"right\" | \"top\" | \"bottom\"\n  ): HorizontalResizerProps | VerticalResizerProps {\n    const horizontal = side === \"left\" || side === \"right\";\n    return {\n      size: 1,\n      cursor: horizontal ? \"ew\" : \"ns\",\n      onResizeStarted: () => {\n        initialBoundsRef.current = startInteraction(\"resize\");\n      },\n      onResize: onResize[side],\n      onResizeEnd: finishInteraction,\n      style: { position: \"absolute\", [side]: 0 },\n    };\n  }\n\n  return {\n    getResizerProps,\n  };\n}\n","import React, { ForwardedRef } from \"react\";\nimport {\n  AriaPopoverProps,\n  DismissButton,\n  Overlay,\n  usePopover,\n} from \"@react-aria/overlays\";\nimport { OverlayTriggerState } from \"@react-stately/overlays\";\n\nimport { WINDOW_SHADOW } from \"@intellij-platform/core/style-constants\";\n\nimport { styled } from \"../styled\";\nimport { useObjectRef } from \"@react-aria/utils\";\n\nexport interface PopoverProps extends Omit<AriaPopoverProps, \"popoverRef\"> {\n  children: React.ReactNode;\n  state: OverlayTriggerState;\n}\n\nconst StyledPopover = styled.div`\n  box-sizing: border-box;\n  // not checked if there should be a better substitute for * in the following colors. Maybe \"Component\"?\n  background-color: ${({ theme }) => theme.color(\"*.background\")};\n  color: ${({ theme }) => theme.color(\"*.foreground\")};\n  outline: none; // Focus will be reflected in header. No need for outline or any other focus style on the container\n  ${WINDOW_SHADOW}; // FIXME: OS-dependant style?\n`;\nexport const Popover = React.forwardRef(function Popover(\n  { children, state, offset = 8, ...props }: PopoverProps,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n) {\n  const popoverRef = useObjectRef(forwardedRef);\n  const { popoverProps } = usePopover(\n    {\n      ...props,\n      offset,\n      popoverRef,\n    },\n    state\n  );\n\n  return (\n    <Overlay>\n      {/* Rendering underlay doesn't seem necessary based on the reference impl */}\n      <StyledPopover {...popoverProps} ref={popoverRef}>\n        <DismissButton onDismiss={state.close} />\n        {children}\n        <DismissButton onDismiss={state.close} />\n      </StyledPopover>\n    </Overlay>\n  );\n});\n","import { Bounds } from \"@intellij-platform/core/Overlay/OverlayInteractionHandler\";\nimport { clamp } from \"ramda\";\nimport { ResizableMovableOverlayOptions } from \"@intellij-platform/core/Overlay/useResizableMovableOverlay\";\n\nexport const withMinSize =\n  ({ width: minWidth, height: minHeight }: { width: number; height: number }) =>\n  (bounds: Bounds) => {\n    const width = Math.max(minWidth, bounds.width);\n    const height = Math.max(minHeight, bounds.height);\n    if (bounds.width != width || bounds.height != height) {\n      return { ...bounds, width, height };\n    }\n    return bounds;\n  };\n\nexport function getCenteredBounds(width: number, height: number): Bounds {\n  return {\n    left: (window.innerWidth - width) / 2,\n    top: (window.innerHeight - height) / 2,\n    width,\n    height,\n  };\n}\n\n/**\n * A helper function to create interaction interceptor which ensures bounds are contained within a container.\n *\n * @example\n * const ensureInViewPort = containedWithin({left: 0, top: 0, width: window.innerWidth, height: window.innerHeight})\n *\n * useResizableMovableOverlay({ onBoundsChanging: ensureInViewPort});\n */\nexport const containedWithin =\n  (\n    containerBounds: Bounds\n  ): ResizableMovableOverlayOptions[\"onBoundsChanging\"] =>\n  (bounds, interactionType) => {\n    if (interactionType === \"move\") {\n      const left = clamp(\n        containerBounds.left,\n        containerBounds.left + containerBounds.width - bounds.width,\n        bounds.left\n      );\n      const top = clamp(\n        containerBounds.top,\n        containerBounds.top + containerBounds.height - bounds.height,\n        bounds.top\n      );\n      return {\n        ...bounds,\n        left,\n        top,\n      };\n    } else if (interactionType === \"resize\") {\n      const left = Math.max(containerBounds.left, bounds.left);\n      const top = Math.max(containerBounds.top, bounds.top);\n      // the logic here seems unnecessarily complicated\n      return {\n        left,\n        top,\n        width:\n          bounds.width -\n          Math.max(\n            0,\n            bounds.left +\n              bounds.width -\n              (containerBounds.left + containerBounds.width)\n          ) -\n          (left - bounds.left),\n        height:\n          bounds.height -\n          Math.max(\n            0,\n            bounds.top +\n              bounds.height -\n              (containerBounds.top + containerBounds.height)\n          ) -\n          (top - bounds.top),\n      };\n    }\n    return bounds;\n  };\nexport const position =\n  ({\n    targetElement,\n    placement = \"bottom\",\n  }: {\n    placement?: \"bottom\" | \"top\";\n    targetElement: HTMLElement;\n  }) =>\n  ({ height, width }: Bounds): Bounds => {\n    const targetBounds = targetElement.getBoundingClientRect();\n    return {\n      left: targetBounds.left,\n      top:\n        placement === \"bottom\"\n          ? targetBounds.top + targetBounds.height\n          : targetBounds.top - height,\n      width,\n      height,\n    };\n  };\n\nexport function ensureInViewport(\n  bounds: Bounds,\n  { gap = 0 }: { gap?: number } = {}\n): Bounds {\n  const viewportWidth = window.innerWidth - gap;\n  const viewportHeight = window.innerHeight - gap;\n  const left = clamp(gap, viewportWidth - bounds.width, bounds.left);\n  const top = clamp(gap, viewportHeight - bounds.height, bounds.top);\n  if (left !== bounds.left || top !== bounds.top) {\n    return {\n      left,\n      top,\n      width: bounds.width,\n      height: bounds.height,\n    };\n  }\n  return bounds;\n}\n","import { useCallback, useEffect, useLayoutEffect, useRef } from \"react\";\n\nexport const useDebouncedCallback = (\n  fn: () => void,\n  { timeout = 100 } = {}\n) => {\n  const fnRef = useRef(fn);\n  const currentTimeoutId = useRef<number | null>(null);\n  useLayoutEffect(() => {\n    fnRef.current = fn;\n  });\n  useEffect(() => {\n    return () => {\n      if (currentTimeoutId.current !== null) {\n        clearTimeout(currentTimeoutId.current);\n      }\n    };\n  }, []);\n  return useCallback(() => {\n    if (currentTimeoutId.current !== null) {\n      clearTimeout(currentTimeoutId.current);\n    }\n    currentTimeoutId.current = window.setTimeout(fnRef.current, timeout);\n  }, []);\n};\n","import { RefObject, useEffect, useLayoutEffect, useState } from \"react\";\nimport { useDebouncedCallback } from \"@intellij-platform/core/utils/useDebounce\";\n\n/**\n * Clones the element, applies the temporary styles, and calls {@param fn} on the clone.\n * Previously, we applied the temporary styles on the element itself, run fn, and then revert to previous styles,\n * but that can mess with the scroll bar in the content. If there is a scrollable part in some nested element,\n * applying temporary style (in our case width: fit-content, height: fit-content) can cause scroll to jump which is not\n * restored after the style reversion. Now the approach is changed to apply the temporary styles on a temporary clone\n * of the element. It's certainly not as efficient and some optimization may be needed.\n * @param style: temporary styles to apply before fn is invoked, and revert after.\n * @param fn the function to compute something on the element with temporary styles\n */\nconst withTemporaryStyle =\n  <T extends any>(\n    style: Partial<CSSStyleDeclaration>,\n    fn: (element: HTMLElement) => T\n  ) =>\n  (element: HTMLElement): T => {\n    const clone = element.cloneNode(true) as HTMLElement;\n    clone.style.position = \"absolute\";\n    clone.style.left = \"-9999px\";\n    document.body.appendChild(clone);\n\n    Object.assign(clone.style, style);\n    const returnValue = fn(clone);\n\n    document.body.removeChild(clone);\n    return returnValue;\n  };\n\n/**\n * FIXME: withTemporaryStyle is not side-effect free and can cause scroll jumps. It creates awfully hard-to-debug\n *  issues.\n */\nexport const getContentSize = withTemporaryStyle(\n  {\n    width: \"\",\n    minWidth: \"fit-content\", // Shouldn't it be min-content? :-?\n    height: \"\",\n    minHeight: \"fit-content\",\n  },\n  (element) => ({\n    width: Math.ceil(parseFloat(getComputedStyle(element).width)),\n    height: Math.ceil(parseFloat(getComputedStyle(element).height)),\n  })\n);\n\nexport const useContentSize = (\n  ref: RefObject<HTMLElement>,\n  {\n    observe = false,\n  }: {\n    /**\n     * if false, the content size is measured only initially. If true, the dom changes are observed, and content size\n     * is updated accordingly.\n     * @default false\n     */\n    observe?: boolean;\n  } = {}\n) => {\n  const [measuredSizes, setMeasuredSizes] = useState<Size[]>([]);\n  useLayoutEffect(() => {\n    const element = ref.current;\n    if (!element || measuredSizes.length > 5) {\n      return;\n    }\n    const size = getContentSize(element);\n\n    const lastMeasuredSize = measuredSizes.at(-1);\n    if (!lastMeasuredSize || !Size.isEqual(lastMeasuredSize, size)) {\n      setMeasuredSizes([size]);\n    }\n    const id = window.requestAnimationFrame(() => {\n      const newSize = getContentSize(element);\n      if (!Size.isEqual(newSize, size)) {\n        setMeasuredSizes([...measuredSizes, newSize]);\n      }\n    });\n    return () => {\n      window.cancelAnimationFrame(id);\n    };\n  }, [\n    measuredSizes,\n    // ref value shouldn't normally be an effect's dependency, but for some reason, ref value is null in the first call\n    // when built for website. Interestingly, it doesn't happen in storybook. So maybe something to investigate further\n    ref.current,\n  ]);\n  const measure = () => {\n    const lastMeasuredSize = measuredSizes.at(-1);\n    if (ref.current && lastMeasuredSize) {\n      const currentSize = getContentSize(ref.current);\n      if (\n        currentSize.height !== lastMeasuredSize.height ||\n        currentSize.width !== lastMeasuredSize.width\n      ) {\n        setMeasuredSizes(\n          measuredSizes.map((aSize) =>\n            aSize === lastMeasuredSize ? currentSize : aSize\n          )\n        );\n      }\n    }\n  };\n  const debouncedMeasure = useDebouncedCallback(measure);\n\n  useEffect(() => {\n    const element = ref.current;\n    if (observe && element) {\n      const mutationObserver = new MutationObserver(() => {\n        debouncedMeasure();\n      });\n      mutationObserver.observe(element, {\n        subtree: true,\n        childList: true,\n      });\n      return () => {\n        mutationObserver.disconnect();\n      };\n    }\n  }, [\n    observe,\n    // ref value shouldn't normally be an effect's dependency, but for some reason, ref value is null in the first call\n    // when built for website. Interestingly, it doesn't happen in storybook. So maybe something to investigate further\n    ref.current,\n  ]);\n  return [measuredSizes.at(-1) || { width: 0, height: 0 }, measure] as const;\n};\n\ninterface Size {\n  width: number;\n  height: number;\n}\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const Size = {\n  isEqual: (\n    { width, height }: Size,\n    { width: width2, height: height2 }: { width: number; height: number }\n  ) => width === width2 && height === height2,\n};\n","import { RefObject, useState } from \"react\";\nimport { useControlledState } from \"@react-stately/utils\";\nimport {\n  Bounds,\n  OverlayInteractionHandler,\n  OverlayInteractionHandlerProps,\n} from \"./OverlayInteractionHandler\";\nimport { clamp, filter } from \"ramda\";\nimport { useContentSize } from \"@intellij-platform/core/Overlay/useContentSize\";\nimport {\n  getCenteredBounds,\n  withMinSize,\n} from \"@intellij-platform/core/Overlay/bounds-helpers\";\n\n/**\n * Common props for resizable and movable overlays such as Windows or Popups.\n * There is currently no corresponding component/hook, and this is just a type helper.\n */\nexport interface ResizableMovableOverlayOptions {\n  onBoundsChange?: (bounds: Bounds, interactionType: \"move\" | \"resize\") => void;\n  /**\n   * For performance reason, overlay bounds is kept in a local state during a resize or move interaction, and\n   * `onBoundsChange` is called once at the end of interaction. `onBoundsChanging` gives a chance of rectifying\n   * bounds changes during an interaction to for example apply custom size/placement constraints.\n   */\n  onBoundsChanging?: (\n    newBounds: Bounds,\n    /**\n     * Whether the interaction is a \"move\" or \"resize\" considering the initial bounds when interaction was started.\n     */\n    interactionType: \"move\" | \"resize\"\n  ) => Bounds;\n  /**\n   * Controlled bounds. Can be a partially specified bounds.\n   * - If `top` not specified, the returned bounds will be centered vertically.\n   * - If `left` not specified, the returned bounds will be centered horizontally.\n   * - If `width` not specified, the width of the bounds will be based on content width.\n   * - If `height` not specified, the height of the bounds will be based on content height.\n   * Note that regardless of `bounds`, `onBoundsChange` always receives a full `bounds` object which is solely\n   * based on the bounds of the overlay, at the end of an interaction.\n   */\n  bounds?: Partial<Bounds>;\n  /**\n   * Default bounds in uncontrolled mode. Can be a partially specified bounds.\n   * - If `top` not specified, the returned bounds will be centered vertically.\n   * - If `left` not specified, the returned bounds will be centered horizontally.\n   * - If `width` not specified, the width of the bounds will be based on content width.\n   * - If `height` not specified, the height of the bounds will be based on content height.\n   * Note that regardless of `defaultBounds`, `onBoundsChange` always receives a full `bounds` object which is solely\n   * based on the bounds of the overlay, at the end of an interaction.\n   */\n  defaultBounds?: Partial<Bounds>;\n  minWidth?: number | \"content\"; // TODO: support function, receiving measured size, for more flexibility\n  minHeight?: number | \"content\"; // TODO: support function, receiving measured size, for more flexibility\n\n  /**\n   * Allowed interactions:\n   * - \"all\": both resizable and movable\n   * - \"move\": movable, but not resizable\n   * - \"none\": fixed size and position\n   * The reason there are no `resizable` and `movable` boolean props is that resizable=true,movable=false doesn't make\n   * sense from UX perspective.\n   * @default \"all\"\n   */\n  interactions?: \"all\" | \"move\" | \"none\"; // FIXME: it's not used in useResizableMovableOverlay, maybe separate props?\n\n  /**\n   * When the size is not specified by `bounds` or `defaultBounds` props, the content size is measured and used in the\n   * returned bounds. By default, the content size is measured initially. If `observeContentSize` is true, the DOM\n   * mutations will be observed and the content is re-measured as changes are observed.\n   */\n  observeContentResize?: boolean;\n}\n/**\n *\n * TODO: rename to something better? :D\n * TODO: maybe an option like ensureInViewport that would move the final bound into the viewport (if necessary), when\n *  calling onBoundsChange at the end of an interaction. That's important because if move handle(s) (usually rendered\n *  at the top of the overlay) are out of reach, there would be no way back.\n * TODO: description\n * Assumptions:\n * - The overlay is rendered in a portal, and with position \"fixed\".\n * - The returned bounds should be used to style the overlay.\n *   - There shouldn't be other style affecting the positioning, such as margin, or transform.\n *   - If the overlay has border, box-sizing should be \"border-box\"\n */\nexport function useResizableMovableOverlay(\n  overlayRef: RefObject<HTMLElement>,\n  {\n    bounds: inputBounds,\n    defaultBounds,\n    onBoundsChange,\n    onBoundsChanging = (i) => i,\n    minWidth,\n    minHeight,\n    observeContentResize,\n  }: ResizableMovableOverlayOptions\n): {\n  /**\n   * The bounds to be applied as `style` on the overlay, to position it. Even if the input `bounds` or `defaultBounds`\n   * is not defined, returned `bounds` is always a full bounds object. This eliminates any other need for styling,\n   * if the input bounds doesn't define size or position.\n   * NOTE: even when the size is not specified as input, and is to be based on content, the returned `bounds` include\n   * explicit, size, measured **after the first render**. This is because overlays such as windows are not expected to\n   * be resized without user interaction, and just based on the content size change. So we make sure even when the\n   * sizing is based on content, it's stable. If imperative re-measure of the size is needed, or even dynamic resizing\n   * based on content is needed in some cases, it is feasible to add it as an option.\n   */\n  bounds: Bounds;\n  /**\n   * `true` if the returned bounds has explicit position. `false` if it's centered as a fallback.\n   */\n  positioned: boolean;\n  /**\n   * `true` if the returned bounds has explicit size. `false` if it's measured based on content.\n   */\n  sized: boolean;\n  /**\n   * Props to be passed to {@link OverlayInteractionHandler}\n   */\n  overlayInteractionHandlerProps: OverlayInteractionHandlerProps;\n\n  /**\n   * Allow for remeasuring content size imperatively, when needed. Currently only used to work around\n   * an issue related to Suspense in React 17.\n   */\n  UNSAFE_measureContentSize: () => void;\n} {\n  const [bounds, setBounds] = useControlledState<Partial<Bounds> | undefined>(\n    inputBounds,\n    defaultBounds!,\n    // onBoundsChange is called with Bounds object. Not Partial<Bounds>, and not undefined.\n    onBoundsChange as (\n      value: Partial<Bounds> | undefined,\n      reason: \"resize\" | \"move\"\n    ) => void\n  );\n  const [contentSize, measureContentSize] = useContentSize(overlayRef, {\n    observe: observeContentResize,\n  });\n  // local state of bounds for when the overlay is in a UI interaction, like movement or resize with mouse.\n  // We don't want to update the state in the higher levels repeatedly in such transactions, and we just want to\n  // trigger on update when the UI interaction is done.\n  // It's maintained during a UI interaction and then reset to null.\n  const [currentInteraction, setCurrentInteraction] = useState<null | {\n    type: \"move\" | \"resize\";\n    bounds: Bounds;\n  }>(null);\n\n  const effectiveMinWidth =\n    minWidth === \"content\" ? contentSize.width : minWidth || 0;\n  const effectiveMinHeight =\n    minHeight === \"content\" ? contentSize.height : minHeight || 0;\n  const applyMinSize = withMinSize({\n    width: effectiveMinWidth,\n    height: effectiveMinHeight,\n  });\n  const overlayInteractionHandlerProps: OverlayInteractionHandlerProps = {\n    startInteraction: (type: \"move\" | \"resize\") => {\n      if (!overlayRef.current) {\n        throw new Error(\n          \"overlayRef value is not set. Make sure to have the ref passed to the resizable/movable overlay\"\n        );\n      }\n      const bounds = getBounds(overlayRef.current);\n      setCurrentInteraction({ bounds, type });\n      return bounds;\n    },\n    updateBounds: (updatedBounds) => {\n      setCurrentInteraction((currentInteraction) => {\n        if (currentInteraction) {\n          const { type } = currentInteraction;\n          return {\n            type,\n            bounds: onBoundsChanging(updatedBounds, type) || updatedBounds,\n          };\n        }\n        return currentInteraction;\n      });\n    },\n    finishInteraction: () => {\n      if (currentInteraction && overlayRef.current) {\n        // @ts-expect-error https://github.com/adobe/react-spectrum/issues/6784\n        setBounds(getBounds(overlayRef.current), currentInteraction.type);\n      }\n      setCurrentInteraction(null);\n    },\n    minWidth: effectiveMinWidth,\n    minHeight: effectiveMinHeight,\n  };\n\n  const partialBounds = currentInteraction?.bounds ?? bounds;\n  const centeredContentBounds = getCenteredBounds(\n    clamp(\n      effectiveMinWidth,\n      window.innerWidth,\n      bounds?.width ?? contentSize.width\n    ),\n    clamp(\n      effectiveMinHeight,\n      window.innerHeight,\n      bounds?.height ?? contentSize.height\n    )\n  );\n  return {\n    positioned:\n      partialBounds?.left != undefined && partialBounds?.top != undefined,\n    sized:\n      partialBounds?.width != undefined && partialBounds?.height != undefined,\n    bounds: applyMinSize({\n      /**\n       * Since input bounds may be partial (e.g. only specifying size), we create a full bounds object as a fallback,\n       * based on the measured size, positioned in center. We can introduce a \"loose\" mode, where the returned bound\n       * is not \"filled\" with default properties.\n       */\n      ...centeredContentBounds,\n      ...(partialBounds && filter((value) => value != null, partialBounds)),\n    }),\n    UNSAFE_measureContentSize: measureContentSize,\n    overlayInteractionHandlerProps,\n  };\n}\n\nfunction getBounds(element: HTMLElement) {\n  const { left, top, width, height } = element.getBoundingClientRect();\n  return { left, top, width, height };\n}\n","import React, { ForwardedRef, RefObject, useContext, useState } from \"react\";\nimport { DOMProps } from \"@react-types/shared\";\nimport { useFocusWithin, useInteractOutside } from \"@react-aria/interactions\";\nimport { FocusScope, useFocusable } from \"@react-aria/focus\";\nimport { useOverlay, usePreventScroll } from \"@react-aria/overlays\";\nimport { filterDOMProps, useObjectRef } from \"@react-aria/utils\";\nimport { pipe } from \"ramda\";\n\nimport {\n  areInNestedOverlays,\n  ensureInViewport,\n  Overlay,\n  OverlayInteractionHandler,\n  OverlayResizeHandles,\n  position,\n  ResizableMovableOverlayOptions,\n  useResizableMovableOverlay,\n} from \"@intellij-platform/core/Overlay\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { mergeNonNullProps } from \"@intellij-platform/core/utils/mergeNonNullProps\";\nimport { useFocusForwarder } from \"@intellij-platform/core/utils/useFocusForwarder\";\n\nimport { useDialog } from \"./_useDialog\";\nimport { PopupHeader } from \"./PopupHeader\";\nimport { PopupContext, PopupControllerContext } from \"./PopupContext\";\nimport { PopupLayout } from \"./PopupLayout\";\nimport { StyledPopupHint } from \"./StyledPopupHint\";\nimport { StyledPopupContainer } from \"@intellij-platform/core/Popup/StyledPopupContainer\";\n\n/**\n * only needed for setting overflow to hidden to make sure nothing will overflow a window under any circumstances.\n * The reason we can't set that overflow: \"hidden\" on the StyledWindowContainer itself is that we want resize handles\n * to overflow without bing clipped.\n */\nconst StyledInnerContainer = styled.div`\n  height: inherit;\n  overflow: hidden;\n`;\nexport interface PopupProps extends ResizableMovableOverlayOptions, DOMProps {\n  children: React.ReactNode;\n  onClose?: () => void;\n\n  nonDismissable?: boolean;\n\n  /**\n   * By default, Popup prevents scrolling on the scrollable ancestor, if popup is positioned relative to a target\n   * element. Allowing or disallowing scroll can be forced by passing boolean value.\n   */\n  allowScroll?: \"auto\" | boolean;\n\n  /**\n   * Used to position the popup relative to a target element, if there is no positioning information in the input\n   * `bounds`/`defaultBounds`.\n   */\n  positioning?: {\n    targetRef: RefObject<HTMLElement>;\n    placement?: \"bottom\" | \"top\";\n  };\n}\n\nexport const DEFAULT_POPUP_MIN_WIDTH = 50;\nexport const DEFAULT_POPUP_MIN_HEIGHT = 50;\n\n/**\n * [Popup](https://www.figma.com/file/nfDfMAdV7j2fnQlpYNAOfP/IntelliJ-Platform-UI-Kit-%28Community%29?node-id=75426%3A16881&t=vzpRGV2y2cDw5a6Z-0)\n * component, rendered as a draggable overlay which is positioned either in the center of the viewport or relative to a trigger element.\n * If there is a trigger element, use {@link PopupTrigger} instead.\n */\nexport const _Popup = (\n  // NOTE: export is only for __docgenInfo to be emitted for this.\n  {\n    interactions = \"move\",\n    nonDismissable = false,\n    allowScroll = \"auto\",\n    minWidth = DEFAULT_POPUP_MIN_WIDTH,\n    minHeight = DEFAULT_POPUP_MIN_HEIGHT,\n    positioning: positioningProp,\n    onClose: onCloseProp,\n    ...props\n  }: PopupProps,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n): JSX.Element => {\n  const propsContext = useContext(PopupControllerContext);\n  const positioning = positioningProp || propsContext.positioning;\n  const onClose = () => {\n    onCloseProp?.();\n    propsContext.onClose?.();\n  };\n  const ref = useObjectRef<HTMLDivElement>(forwardedRef);\n  const shouldCloseOnInteractOutside = (element: Element) => {\n    return (\n      !positioning?.targetRef.current?.contains(element) &&\n      !areInNestedOverlays(ref.current, element)\n    );\n  };\n  const { overlayProps } = useOverlay(\n    {\n      isOpen: true, // FIXME?\n      onClose,\n      shouldCloseOnBlur: !nonDismissable,\n      shouldCloseOnInteractOutside,\n    },\n    ref\n  );\n  // Passing isDismissable to useOverlay also utilizes useInteractOutside and closes the overlay, but it calls\n  // preventDefault() and stopPropagation() on the event, which prevents focus from going to elements outside the popup.\n  // Not sure why they do this in react-aria, but it seems we are better off not using that option and using\n  // useInteractOutside directly here like this:\n  useInteractOutside({\n    ref,\n    onInteractOutsideStart: (e) => {\n      if (\n        !nonDismissable &&\n        shouldCloseOnInteractOutside(e.target as Element)\n      ) {\n        onClose();\n      }\n    },\n    // onInteractOutsideStart will not be called if onInteractOutside is not passed!\n    onInteractOutside: () => {},\n  });\n\n  usePreventScroll({\n    isDisabled: allowScroll === \"auto\" ? !positioning : allowScroll,\n  });\n\n  const { bounds, positioned, overlayInteractionHandlerProps } =\n    useResizableMovableOverlay(ref, {\n      ...props,\n      minWidth,\n      minHeight,\n      observeContentResize: true,\n    });\n  const positionedBounds =\n    positioning?.targetRef.current && !positioned\n      ? pipe(\n          position({\n            targetElement: positioning.targetRef.current,\n            placement: positioning.placement,\n          }),\n          ensureInViewport\n        )(bounds)\n      : bounds;\n\n  const [isActive, setActive] = useState(false);\n  const { focusWithinProps } = useFocusWithin({\n    onFocusWithinChange: setActive,\n  });\n  const { focusableProps } = useFocusable(\n    {\n      excludeFromTabOrder: true,\n    },\n    ref\n  );\n  const { focusForwarderProps } = useFocusForwarder();\n\n  const { dialogProps, titleProps } = useDialog(props, ref);\n\n  /**\n   * A hook like useOverlayStack or useOverlayZIndex can be introduced which would handle focus/blur, and return/set\n   * the right z-index so that only the overlay holding the focus would have a higher z-index than others.\n   */\n  const zIndex = isActive ? 1 : 0;\n\n  return (\n    <Overlay>\n      <OverlayInteractionHandler {...overlayInteractionHandlerProps}>\n        {/* TODO: FocusScope is redundant. Test focus restoration without it (in status bar progress), and remove it if unnecessary */}\n        <FocusScope restoreFocus>\n          <StyledPopupContainer\n            ref={ref}\n            style={{\n              ...positionedBounds,\n              zIndex,\n            }}\n            tabIndex={-1}\n            {...mergeNonNullProps(\n              focusWithinProps,\n              focusableProps,\n              focusForwarderProps,\n              overlayProps,\n              propsContext.overlayProps || {},\n              dialogProps,\n              filterDOMProps(props)\n            )}\n          >\n            <PopupContext.Provider\n              value={{\n                isActive,\n                movable: interactions !== \"none\",\n                titleProps,\n              }}\n            >\n              <StyledInnerContainer>{props.children}</StyledInnerContainer>\n              {interactions === \"all\" && <OverlayResizeHandles />}\n            </PopupContext.Provider>\n          </StyledPopupContainer>\n        </FocusScope>\n      </OverlayInteractionHandler>\n    </Overlay>\n  );\n};\n\nexport const Popup = Object.assign(React.forwardRef(_Popup), {\n  Header: PopupHeader,\n  Layout: PopupLayout,\n  Hint: StyledPopupHint,\n});\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport { AriaDialogProps } from \"@react-types/dialog\";\nimport { FocusableElement } from \"@react-types/shared\";\nimport { filterDOMProps, useSlotId } from \"@react-aria/utils\";\nimport { focusSafely } from \"@react-aria/focus\";\nimport { RefObject, useEffect } from \"react\";\nimport { useOverlayFocusContain } from \"@react-aria/overlays\";\nimport { DialogAria } from \"@react-aria/dialog\";\n\n////////////////// NOTE //////////////////////////\n// This is a copy of useDialog from react-aria, with a little part removed from the useEffect call.\n// In the original code, inside the effect, there is a hack to fix an issue in Safari, which involves\n// blurring and refocusing the element. Even though there is a comment about an attempt to make it work\n// nice when used with `shouldCloseOnBlur` option of `useOverlay`, it didn't work and the refocusing causes\n// the popup to close. Probably because in our case useOverlay and useDialog are used in the same level, but\n// in what they've tested on in react-aria, useDialog is used in something nested in the component that uses\n// useDialog.\n// TODO: replace with original useDialog, if the issue explained above got fixed in some version of react-aria.\n//////////////////////////////////////////////////\n/**\n * Provides the behavior and accessibility implementation for a dialog component.\n * A dialog is an overlay shown above other content in an application.\n */\nexport function useDialog(\n  props: AriaDialogProps,\n  ref: RefObject<FocusableElement>\n): DialogAria {\n  let { role = \"dialog\" } = props;\n  let titleId: string | undefined = useSlotId();\n  titleId = props[\"aria-label\"] ? undefined : titleId;\n\n  // Focus the dialog itself on mount, unless a child element is already focused.\n  useEffect(() => {\n    if (ref.current && !ref.current.contains(document.activeElement)) {\n      focusSafely(ref.current);\n    }\n  }, [ref]);\n\n  useOverlayFocusContain();\n\n  return {\n    dialogProps: {\n      ...filterDOMProps(props, { labelable: true }),\n      role,\n      tabIndex: -1,\n      \"aria-labelledby\": props[\"aria-labelledby\"] || titleId,\n    },\n    titleProps: {\n      id: titleId,\n    },\n  };\n}\n","import { mergeProps } from \"@react-aria/utils\";\nimport { filter } from \"ramda\";\n\n/**\n * Like mergeProps, but doesn't merge props where value is null or undefined. That's needed because useFocusable (and\n * maybe some other react-aria hooks as well) return props like onFocus, with value set to null or undefined, which\n * overrides the same prop from other sources.\n */\n// @ts-expect-error not sure why!\nexport const mergeNonNullProps: typeof mergeProps = (...propsArray) => {\n  return mergeProps(\n    ...propsArray.map((props): typeof props =>\n      filter((value) => value != undefined, props ?? [])\n    )\n  );\n};\n","import { DOMAttributes } from \"@react-types/shared\";\nimport { createContext } from \"react\";\nimport { PopupProps } from \"./Popup\";\n\nexport const PopupContext = createContext<{\n  isActive: boolean;\n  movable: boolean;\n  titleProps: DOMAttributes;\n}>({ isActive: false, movable: true, titleProps: {} });\n\n/**\n * A context to provide some props that are necessary for PopupTrigger or PopupManager.\n * Passing those props via context helps with providing a nice API in those components.\n */\nexport const PopupControllerContext = createContext<\n  {\n    overlayProps?: DOMAttributes;\n  } & Partial<Pick<PopupProps, \"positioning\" | \"onClose\">>\n>({});\n","import React, { CSSProperties, HTMLAttributes, useContext } from \"react\";\nimport { mergeProps } from \"@react-aria/utils\";\n\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { OverlayMoveHandle } from \"@intellij-platform/core/Overlay\";\n\nimport { PopupContext } from \"./PopupContext\";\n\nconst StyledPopupHeader = styled.div<{\n  active?: boolean;\n  hasControls?: boolean;\n}>`\n  box-sizing: border-box;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 1.5rem;\n  min-height: ${({ hasControls }) => hasControls && \"1.75rem\"};\n  cursor: default;\n  white-space: nowrap;\n  color: ${({ theme, active }) =>\n    active\n      ? theme.color(\n          \"Popup.Header.activeForeground\" as UnknownThemeProp<\"Popup.Header.activeForeground\">,\n          theme.commonColors.labelForeground\n        )\n      : theme.color(\n          \"Popup.Header.inactiveForeground\" as UnknownThemeProp<\"Popup.Header.inactiveForeground\">,\n          theme.commonColors.labelDisabledForeground\n        )};\n  background-color: ${({ theme, active }) =>\n    active\n      ? theme.color(\"Popup.Header.activeBackground\", \"#e6e6e6\")\n      : theme.color(\"Popup.Header.inactiveBackground\", `#ededed`)};\n`;\n/**\n * Implements appearance of\n * [Popup Header](https://www.figma.com/file/nfDfMAdV7j2fnQlpYNAOfP/IntelliJ-Platform-UI-Kit-%28Community%29?node-id=75455%3A26566&t=Hzwse5j5R6iCEzVW-4),\n * and also acts as a handle for moving the panel.\n * Expected to be used with {@link Popup#Layout}:\n *\n * @example\n * ```tsx\n * <Popup>\n *    <Popup.Layout header={<Popup.Header>header</Popup.Header>} />\n * </Popup>\n * ```\n */\nexport const PopupHeader = ({\n  children,\n  hasControls,\n  className,\n  style,\n}: {\n  children?: React.ReactNode;\n  hasControls?: boolean;\n  className?: string;\n  style?: CSSProperties;\n}) => {\n  const { isActive, movable, titleProps } = useContext(PopupContext);\n  const renderHeader = (otherProps: HTMLAttributes<HTMLElement> = {}) => (\n    <StyledPopupHeader\n      active={isActive}\n      hasControls={hasControls}\n      className={className}\n      style={style}\n      {...mergeProps(titleProps, otherProps)}\n    >\n      {children}\n    </StyledPopupHeader>\n  );\n  return movable ? (\n    <OverlayMoveHandle>\n      {({ moveHandleProps }) => renderHeader(moveHandleProps)}\n    </OverlayMoveHandle>\n  ) : (\n    renderHeader()\n  );\n};\n","import React from \"react\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { Popup } from \"./Popup\";\nimport { PopupHeader } from \"./PopupHeader\";\nimport { StyledPopupHint } from \"@intellij-platform/core/Popup/StyledPopupHint\";\n\nconst StyledPopupLayout = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: inherit;\n`;\nconst StyledPopupLayoutHeader = styled.div`\n  flex-shrink: 0;\n`;\nconst StyledPopupLayoutContent = styled.div`\n  flex: 1;\n  overflow: auto;\n  // Not sure about making the content area a vertical flex container, but it seemed it makes sense as default.\n  // The use case at hand where this was added was \"Branches\" popup, which would of course be implementable without this\n  // too, with an extra flex container around the menu.\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledPopupLayoutFooter = styled.div`\n  flex-shrink: 0;\n`;\n\n/**\n * Popup content layout, supporting fixed `header` and `footer` sections, and a scrollable `content` area.\n */\nexport function PopupLayout({\n  header,\n  footer,\n  content,\n}: {\n  /**\n   * Fixed position header of the popup at the top. {@link Popup.Header} can be used for the content.\n   */\n  header?: React.ReactNode;\n  /**\n   * Scrollable content of the popup.\n   */\n  content: React.ReactNode;\n  /**\n   * Fixed position footer of the popup at the bottom. {@link Popup.Hint} can be used for the content.\n   */\n  footer?: React.ReactNode;\n}) {\n  return (\n    <StyledPopupLayout>\n      {header && (\n        <StyledPopupLayoutHeader>\n          {typeof header === \"string\" ? (\n            <PopupHeader>{header}</PopupHeader>\n          ) : (\n            header\n          )}\n        </StyledPopupLayoutHeader>\n      )}\n      <StyledPopupLayoutContent>{content}</StyledPopupLayoutContent>\n      {footer && (\n        <StyledPopupLayoutFooter>\n          {typeof footer === \"string\" ? (\n            <StyledPopupHint>{footer}</StyledPopupHint>\n          ) : (\n            footer\n          )}\n        </StyledPopupLayoutFooter>\n      )}\n    </StyledPopupLayout>\n  );\n}\n","import React, {\n  ReactElement,\n  ReactNode,\n  useContext,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { Popup, PopupProps } from \"./Popup\";\nimport { PopupControllerContext } from \"@intellij-platform/core/Popup/PopupContext\";\n\nexport interface PopupManagerAPI {\n  /**\n   * Shows a popup within the stack of popups managed by {@link PopupManager}.\n   * The opened popup will be closed when `onClose` interactions happen.\n   */\n  show(\n    popup:\n      | React.ReactElement<PopupProps, typeof Popup>\n      | ((args: {\n          close: () => void;\n        }) => React.ReactElement<PopupProps, typeof Popup>)\n  ): void;\n}\n\nconst NotImplementedFn = () => {\n  throw new Error(\n    \"PopupManager not found. Wrap your application with PopupManager to be able to open popups imperatively\"\n  );\n};\n\nconst PopupsContext = React.createContext<PopupManagerAPI>({\n  show: NotImplementedFn,\n});\n\n/**\n * Returns imperative API for showing popups.\n */\nexport const usePopupManager = (): PopupManagerAPI => useContext(PopupsContext);\n\ntype PopupElement = ReactElement<PopupProps, typeof Popup>;\n\nexport interface PopupManagerProps {\n  children?: ReactNode;\n}\n\n/**\n * Enables imperative API (via {@link usePopupManager}) for showing Popups.\n * It renders popups in a portal appended to `body`, unless `disablePortal` is `true`.\n */\nexport const PopupManager: React.FC<PopupManagerProps> = ({ children }) => {\n  const [popups, setPopups] = useState<Array<PopupElement>>([]);\n  const newKeyRef = useRef<number>(0);\n\n  const api = useMemo<PopupManagerAPI>(() => {\n    const show: PopupManagerAPI[\"show\"] = (popup) => {\n      newKeyRef.current++;\n      const close = () => {\n        setPopups((currentPopups) =>\n          currentPopups.filter((aPopup) => aPopup !== wrappedPopup)\n        );\n      };\n      const wrappedPopup = (\n        <PopupControllerContext.Provider\n          key={newKeyRef.current}\n          value={{ onClose: close }}\n        >\n          {typeof popup === \"function\" ? popup({ close }) : popup}\n        </PopupControllerContext.Provider>\n      );\n      setPopups((currentPopups) => currentPopups.concat(wrappedPopup));\n    };\n    return {\n      show,\n    };\n  }, []);\n\n  return (\n    <PopupsContext.Provider value={api}>\n      {children}\n      {popups}\n    </PopupsContext.Provider>\n  );\n};\n","import React, { ForwardedRef } from \"react\";\nimport { OverlayTriggerProps, useOverlayTrigger } from \"@react-aria/overlays\";\nimport { PressResponder } from \"@react-aria/interactions\";\nimport { useObjectRef } from \"@react-aria/utils\";\nimport {\n  OverlayTriggerProps as OverlayTriggerStateProps,\n  useOverlayTriggerState,\n} from \"@react-stately/overlays\";\n\nimport { PopupProps } from \"./Popup\";\nimport { PopupControllerContext } from \"./PopupContext\";\n\nexport interface PopupTriggerProps\n  extends Partial<OverlayTriggerProps>,\n    OverlayTriggerStateProps {\n  placement?: Required<PopupProps>[\"positioning\"][\"placement\"];\n  popup:\n    | React.ReactElement\n    | (({ close }: { close: () => void }) => React.ReactNode);\n  children: React.ReactElement;\n}\n\n/**\n * Popup opened by a trigger. `trigger` can be an element of any pressable component (such as {@link Button} or\n * {@link IconButton}), and is rendered in place. Similar to {@link Popup component}, `children` defines the content\n * of Popup.\n */\nexport const PopupTrigger = React.forwardRef(function PopupTrigger(\n  { placement, children, popup, ...props }: PopupTriggerProps,\n  forwardedRef: ForwardedRef<HTMLButtonElement>\n) {\n  const state = useOverlayTriggerState(props);\n  const triggerRef = useObjectRef(forwardedRef);\n  const { overlayProps, triggerProps } = useOverlayTrigger(\n    { type: props.type || \"menu\" },\n    state,\n    triggerRef\n  );\n  return (\n    <>\n      <PressResponder ref={triggerRef} {...triggerProps}>\n        {children}\n      </PressResponder>\n      {state.isOpen && (\n        <PopupControllerContext.Provider\n          value={{\n            overlayProps,\n            positioning: {\n              targetRef: triggerRef,\n              placement,\n            },\n            onClose: state.close,\n          }}\n        >\n          {typeof popup === \"function\" ? popup({ close: state.close }) : popup}\n        </PopupControllerContext.Provider>\n      )}\n    </>\n  );\n});\n","import { WINDOW_SHADOW } from \"@intellij-platform/core/style-constants\";\nimport { styled } from \"@intellij-platform/core/styled\";\n\nexport const StyledPopupContainer = styled.div`\n  position: fixed;\n  box-sizing: border-box;\n  // not checked if there should be a better substitute for * in the following colors. Maybe \"Component\"?\n  background-color: ${({ theme }) => theme.color(\"*.background\")};\n  color: ${({ theme }) => theme.color(\"*.foreground\")};\n  outline: none; // Focus will be reflected in header. No need for outline or any other focus style on the container\n  ${WINDOW_SHADOW}; // FIXME: OS-dependant style?\n`;\n","import { styled } from \"@intellij-platform/core/styled\";\n\n/**\n * Hint component (aka Advertiser) used in Popup's footer.\n * {@see Popup.Layout}\n */\nexport const StyledPopupHint = styled.div`\n  // NOTE: Following the reference implementation, would require to set fallback colors non-prior to\n  // *.(background|foreground) colors (by not passing the fallback color as the second argument to theme.color).\n  // It's only in BigPopup that the fallback colors are prioritized over *-fallback. But in Figma designs, this is\n  // simplified, and hint always has the muted color (like in BigPopup), instead of the default foreground.\n  // So we are intentionally deviating from the reference implementation here.\n  background: ${({ theme }) =>\n    theme.color(\n      \"Popup.Advertiser.background\",\n      theme.color(\"SearchEverywhere.Advertiser.background\")\n    )};\n  color: ${({ theme }) =>\n    theme.color(\n      \"Popup.Advertiser.foreground\",\n      theme.color(\"SearchEverywhere.Advertiser.foreground\")\n    )};\n  padding: 0.3125rem 0.9375rem 0.3125rem 0.625rem;\n  font-size: 0.875em;\n  line-height: normal;\n  user-select: none;\n  cursor: default;\n  // NOTE: white-space is intentionally not set as nowrap.\n`;\n","import React, {\n  CSSProperties,\n  HTMLAttributes,\n  Ref,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { keyframes } from \"styled-components\";\nimport { useProgressBar } from \"@react-aria/progress\";\nimport { AriaProgressBarProps } from \"@react-types/progress\";\nimport { PressProps, useHover } from \"@react-aria/interactions\";\nimport { useButton } from \"@react-aria/button\";\nimport { mergeProps } from \"@react-aria/utils\";\n\nimport { Theme } from \"@intellij-platform/core/Theme\";\nimport { css, styled } from \"@intellij-platform/core/styled\";\n\nexport interface ProgressBarProps extends Omit<AriaProgressBarProps, \"label\"> {\n  /**\n   * Process name, shown above or to the left of the progress bar. Placement is controlled by {@link namePosition}.\n   * @see https://jetbrains.github.io/ui/controls/progress_bar/#process-name\n   */\n  name?: React.ReactNode;\n\n  /**\n   * Process name position with respect to the progress bar.\n   * If `namePosition` is \"side\", {@link name} is **not** automatically appended with a colon.\n   * @default \"top\"\n   */\n  namePosition?: \"side\" | \"top\";\n\n  /**\n   * Process details, placed bellow the progress bar, with a de-emphasized color.\n   * @see https://jetbrains.github.io/ui/controls/progress_bar/#process-details\n   */\n  details?: React.ReactNode;\n\n  /**\n   * A second line of details. Not an officially documented feature, but it's supported in the reference impl.\n   */\n  secondaryDetails?: React.ReactNode;\n\n  /**\n   * Placed next to and aligned with the progress bar, used for\n   * [process control](https://jetbrains.github.io/ui/controls/progress_bar/#process-control) buttons.\n   */\n  button?: React.ReactNode;\n\n  /**\n   * Progress bar track width.\n   */\n  width?: CSSProperties[\"width\"];\n\n  /**\n   * Not supported in [the official specs](https://jetbrains.github.io/ui/controls/progress_bar/#25), but the progress\n   * bar in status bar has a denser spacing. It still won't be a pixel perfect match with the progress bar in the\n   * status bar.\n   */\n  dense?: boolean;\n\n  /** Whether the value's label is displayed. True by default if there's a label, false by default if not. */\n  showValueLabel?: boolean;\n\n  style?: HTMLAttributes<unknown>[\"style\"];\n  className?: HTMLAttributes<unknown>[\"className\"];\n}\n\ninterface ProgressBarContextObj {\n  setForcedDetails: (details: string | null) => void;\n  setTooltip: (tooltip: string | null) => void;\n}\n\n/**\n * @see https://jetbrains.github.io/ui/controls/progress_bar/\n * @see https://github.com/JetBrains/intellij-community/blob/82f201386c3f7a339ff25fc8f3389024c8078a87/platform/platform-api/src/com/intellij/openapi/ui/panel/ProgressPanelBuilder.java\n *\n * Known issues:\n * There are a couple of UI issues because of the current layout (which can be improved probably):\n * - max-width of the label and details, it's not necessarily aligned with the the progressbar track, because they don't\n *   share the same container\n * - when label is on the side, details is aligned with the label, instead of the progressbar track.\n */\nexport const ProgressBar = ({\n  value = 0,\n  maxValue = 100,\n  minValue = 0,\n  name,\n  namePosition = \"top\",\n  details,\n  secondaryDetails,\n  button,\n  width,\n  dense,\n  className,\n  style,\n  valueLabel,\n  showValueLabel = Boolean(valueLabel),\n  ...props\n}: ProgressBarProps): React.ReactElement => {\n  const { progressBarProps, labelProps } = useProgressBar({\n    ...props,\n    label: name,\n    value,\n    valueLabel,\n    maxValue,\n    minValue,\n  });\n  const percentage = (100 * (value / maxValue)).toFixed(0);\n  const [forcedDetails, setForcedDetails] = useState<null | string>(\"\");\n  const [tooltip, setTooltip] = useState<null | string>(\"\");\n\n  const contextValue: ProgressBarContextObj = useMemo(\n    () => ({\n      setForcedDetails,\n      setTooltip,\n    }),\n    []\n  );\n  const label = (\n    <StyledProgressBarLabel {...labelProps}>{name}</StyledProgressBarLabel>\n  );\n  const effectiveDetails = details ? tooltip || forcedDetails || details : null;\n  return (\n    <StyledProgressBarContainer style={style} className={className}>\n      {namePosition === \"top\" && label}\n      <StyledProgressBarLineContainer\n        dense={dense}\n        hasTopMargin={Boolean(name) && namePosition === \"top\"}\n        hasBottomMargin={Boolean(effectiveDetails)}\n      >\n        {namePosition === \"side\" && label}\n        <StyledProgressBarTrack\n          style={{ width }}\n          {...progressBarProps}\n          indeterminate={props.isIndeterminate}\n        >\n          {!props.isIndeterminate && (\n            <StyledProgressBarProgress style={{ width: `${percentage}%` }} />\n          )}\n        </StyledProgressBarTrack>\n        {showValueLabel && <span>{valueLabel ?? `${percentage}%`}</span>}\n        <ProgressBarContext.Provider value={contextValue}>\n          {button}\n        </ProgressBarContext.Provider>\n      </StyledProgressBarLineContainer>\n      <StyledProgressBarDetails>{effectiveDetails}</StyledProgressBarDetails>\n      <StyledProgressBarDetails>{secondaryDetails}</StyledProgressBarDetails>\n    </StyledProgressBarContainer>\n  );\n};\n\nconst ProgressBarContext = React.createContext<null | ProgressBarContextObj>(\n  null\n);\n\nconst StyledProgressBarContainer = styled.div`\n  color: ${({ theme }) => theme.commonColors.labelForeground /* TODO: check*/};\n  cursor: default; // prevent cursor on text\n`;\n\nconst StyledProgressBarLineContainer = styled.div<{\n  dense?: boolean;\n  hasTopMargin?: boolean;\n  hasBottomMargin?: boolean;\n}>`\n  display: flex;\n  align-items: center;\n  gap: ${({ dense }) => (dense ? \"0.5rem\" : \"0.625rem\")};\n  height: 4px;\n  // spacing is based on the reference impl and figma designs. top and bottom spacing is inverted in the spec document\n  // figma: https://www.figma.com/file/nfDfMAdV7j2fnQlpYNAOfP/IntelliJ-Platform-UI-Kit-(Community)?node-id=75426%3A16650\n  // spec document: https://jetbrains.github.io/ui/controls/progress_bar/#25\n  margin-top: ${({ hasTopMargin }) => hasTopMargin && \"0.375rem\"};\n  margin-bottom: ${({ hasBottomMargin }) => hasBottomMargin && \"0.25rem\"};\n`;\n\nconst StyledProgressBarLabel = styled.div`\n  white-space: nowrap;\n  max-width: calc(100% - 2rem);\n  overflow: hidden;\n`;\n\nconst StyledProgressBarDetails = styled.div`\n  color: ${({ theme }) => theme.commonColors.contextHelpForeground};\n  font-size: 0.82em;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  max-width: calc(100% - 2rem); // not the best way\n`;\n\nconst StyledProgressBarTrack = styled.div<{ indeterminate?: boolean }>`\n  height: inherit;\n  border-radius: 2px;\n  overflow: hidden;\n  display: flex;\n\n  // In case used in flex layout\n  min-width: 0;\n  flex: 1;\n\n  background: ${({ theme }) =>\n    theme.color(\n      \"ProgressBar.trackColor\",\n      theme.dark ? \"rgb(85,85,85)\" : \"rgb(196,196,196)\"\n    )};\n  ${({ indeterminate }) =>\n    indeterminate &&\n    css`\n      background: linear-gradient(\n        90deg,\n        ${getIndeterminateStartColor} 0%,\n        ${getIndeterminateEndColor} 50%,\n        ${getIndeterminateStartColor} 100%\n      );\n      background-size: 96px auto;\n      animation: 800ms ${indeterminateBackgroundAnimation} linear infinite;\n    `}\n`;\n\nconst getIndeterminateStartColor = ({ theme }: { theme: Theme }) =>\n  theme.color(\"ProgressBar.indeterminateStartColor\");\nconst getIndeterminateEndColor = ({ theme }: { theme: Theme }) =>\n  theme.color(\"ProgressBar.indeterminateEndColor\");\n\nconst indeterminateBackgroundAnimation = keyframes`\n  0% {\n    background-position: 0;\n  }\n  100% {\n    background-position: 96px;\n  }\n`;\n\nconst StyledProgressBarProgress = styled.div`\n  height: 100%;\n  background: ${({ theme }) =>\n    theme.color(\n      \"ProgressBar.progressColor\",\n      theme.dark ? \"rgb(160,160,160)\" : \"rgb(128,128,128)\"\n    )};\n`;\n\ntype ProgressBarIconButtonProps = Pick<PressProps, \"onPress\"> & {\n  hoverTooltip: string;\n};\n\n/**\n * Accessibility and functionality of progress bar icon buttons\n * @private maybe?\n */\nexport function useProgressBarIconButton(\n  { onPress, hoverTooltip }: ProgressBarIconButtonProps,\n  ref: Ref<HTMLElement>\n) {\n  const { buttonProps } = useButton(\n    {\n      onPress,\n      elementType: \"span\",\n      excludeFromTabOrder: true,\n      // @ts-expect-error: it works, but it's intentionally excluded from the type.\n      preventFocusOnPress: true,\n    },\n    ref\n  );\n  const context = useContext(ProgressBarContext);\n  const { hoverProps, isHovered } = useHover({});\n  useEffect(() => {\n    context?.setTooltip(isHovered ? hoverTooltip : null);\n  }, [hoverTooltip, isHovered]);\n  return {\n    buttonProps: mergeProps(buttonProps, hoverProps),\n  };\n}\n\n/**\n * @private maybe?\n * */\nexport function useProgressBarPauseIconButton(\n  { paused, ...props }: ProgressBarIconButtonProps & { paused: boolean },\n  ref: Ref<HTMLElement>\n) {\n  const context = useContext(ProgressBarContext);\n  useEffect(() => {\n    context?.setForcedDetails(paused ? \"Paused\" : null);\n  }, [paused]);\n  return useProgressBarIconButton(props, ref);\n}\n\n/**\n * Experimenting with an idea of exposing parts on each component, to maximize styling customizability, similar to\n * [classes](https://mui.com/joy-ui/api/button/#classes) API in MUI components. But instead of passing classes prop,\n * one would be able to create custom versions of a component by doing something like this:\n * const CustomComponent = styled(Component)`\n *   ${Component.part1} {\n *     // custom style here\n *   }\n * `;\n * The question is if this type of customizability is actually a good thing in the balance between flexibility for\n * catering for different use cases and not stepping out of the design system boundaries.\n * Another potential downside is that the public API expands to the anatomy of the component.\n */\nProgressBar.Container = StyledProgressBarContainer;\nProgressBar.Label = StyledProgressBarLabel;\nProgressBar.LineContainer = StyledProgressBarLineContainer;\nProgressBar.Track = StyledProgressBarTrack;\nProgressBar.Progress = StyledProgressBarProgress;\nProgressBar.Details = StyledProgressBarDetails;\n","import React, { useRef } from \"react\";\nimport { AutoHoverPlatformIcon } from \"@intellij-platform/core/Icon\";\nimport { useProgressBarIconButton } from \"./ProgressBar\";\n\ninterface ProgressBarCancelButtonProps {\n  /**\n   * whether small icon should be used.\n   */\n  small?: boolean;\n  onPress: () => void;\n}\n\n/**\n * Stop (cancel) icon button for progress bar, to be used in {@link ProgressBarProps#button}.\n */\nexport const ProgressBarStopButton = ({\n  small,\n  onPress,\n}: ProgressBarCancelButtonProps) => {\n  const ref = useRef<HTMLSpanElement>(null);\n  const { buttonProps } = useProgressBarIconButton(\n    { onPress, hoverTooltip: \"Cancel\" },\n    ref\n  );\n  return (\n    <AutoHoverPlatformIcon\n      ref={ref}\n      {...buttonProps}\n      icon={`process/stop${small ? \"Small\" : \"\"}.svg`}\n      hoverIcon={`process/stop${small ? \"Small\" : \"\"}Hovered.svg`}\n    />\n  );\n};\n","import React from \"react\";\nimport {\n  ThreeViewSplitter,\n  ThreeViewSplitterProps,\n} from \"./ThreeViewSplitter/ThreeViewSplitter\";\n\ntype ResizableViewProps = Omit<\n  ThreeViewSplitterProps,\n  | \"innerView\"\n  | \"firstView\"\n  | \"firstSize\"\n  | \"onFirstResize\"\n  | \"lastView\"\n  | \"lastSize\"\n  | \"onLastResize\"\n> & {\n  children: React.ReactNode;\n  onResize: ThreeViewSplitterProps[\"onFirstResize\"];\n  size: ThreeViewSplitterProps[\"firstSize\"];\n  /**\n   * Whether the resizer should be placed at before or after the resizable view.\n   */\n  resizerPlacement?: \"before\" | \"after\";\n};\n/**\n * A single resizable view, built on top of {@link ThreeViewSplitter}, just to provide better prop interface.\n * Like `ThreeViewSplitter` it supports \"horizontal\" or \"vertical orientations. There is an extra `resizerPlacement`\n * prop which determines where the resizer should be placed in relation with the view. When set to \"before\" the view\n * will be resizable from the start (\"left\" or \"top\"). When set to \"after\" the view will be resizable from end (\"right\"\n * or \"bottom\"). Default is \"after\"\n */\nexport const ResizableView = ({\n  children,\n  size,\n  onResize,\n  resizerPlacement = \"after\",\n  ...props\n}: ResizableViewProps) => (\n  <ThreeViewSplitter\n    {...(resizerPlacement === \"after\"\n      ? { firstView: children, firstSize: size, onFirstResize: onResize }\n      : { lastView: children, lastSize: size, onLastResize: onResize })}\n    {...props}\n  />\n);\n","import React from \"react\";\nimport { ResizerProps } from \"./ResizerProps\";\nimport { useBottomResizer } from \"./useResizer\";\nimport { VerticalResizer } from \"./VerticalResizer\";\n\n/**\n * Handle for resizing views in a vertical layout, where the resizer is at the top side of the resizable view. i.e.\n * moving mouse to bottom/top will increase/decrease the height\n */\nexport const BottomResizer: React.FC<ResizerProps<\"vertical\">> = ({\n  onResize,\n  onResizeEnd,\n  onResizeStarted,\n  ...props\n}) => {\n  const { resizerProps } = useBottomResizer({\n    onResize,\n    onResizeEnd,\n    onResizeStarted,\n  });\n  return <VerticalResizer resizerProps={resizerProps} {...props} />;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { ResizerViewProps } from \"./useResizer\";\n\ntype HorizontalResizerViewProps = ResizerViewProps<\"horizontal\">;\n\nconst StyledHorizontalResizer = styled.div`\n  top: 0;\n  height: 100%;\n  width: 0;\n  position: relative;\n  z-index: 1; // to keep resizer on top of sibling views, in case they are non-static\n`;\n\nconst StyledHorizontalResizerArea = styled.div<{\n  handleSize: number;\n  cursor: HorizontalResizerViewProps[\"cursor\"];\n}>`\n  position: absolute;\n  cursor: ${({ cursor }) => `${cursor}-resize`};\n  width: ${({ handleSize }) => `calc(100% + ${handleSize}px)`};\n  height: 100%;\n  left: ${({ handleSize }) => `-${handleSize / 2}px`};\n`;\n\n/**\n * Handle for resizing views in a horizontal layout. It just handles the\n * movement event and calls onResize with the new size. It has nothing to do\n * with actually applying the size.\n */\nexport const HorizontalResizer: React.FC<HorizontalResizerViewProps> = ({\n  outerPadding = 10,\n  background,\n  size = 0,\n  cursor = \"col\",\n  children,\n  style = {},\n  resizerProps,\n}) => {\n  return (\n    <StyledHorizontalResizer\n      {...resizerProps}\n      style={{ ...style, background, width: size }}\n    >\n      {children}\n      <StyledHorizontalResizerArea handleSize={outerPadding} cursor={cursor} />\n    </StyledHorizontalResizer>\n  );\n};\n","import React from \"react\";\nimport { HorizontalResizer } from \"./HorizontalResizer\";\nimport { ResizerProps } from \"./ResizerProps\";\nimport { useLeftResizer } from \"./useResizer\";\n\n/**\n * Handle for resizing views in a horizontal layout, where the resizer is at the left side of the resizable view. i.e.\n * moving mouse to right/left will decrease/increase the width\n */\nexport const LeftResizer: React.FC<ResizerProps<\"horizontal\">> = ({\n  onResize,\n  onResizeEnd,\n  onResizeStarted,\n  ...props\n}) => {\n  const { resizerProps } = useLeftResizer({\n    onResize,\n    onResizeEnd,\n    onResizeStarted,\n  });\n  return <HorizontalResizer resizerProps={resizerProps} {...props} />;\n};\n","import React from \"react\";\nimport { HorizontalResizer } from \"./HorizontalResizer\";\nimport { ResizerProps } from \"./ResizerProps\";\nimport { useRightResizer } from \"./useResizer\";\n\n/**\n * Handle for resizing views in a horizontal layout, where the resizer is at the right side of the resizable view. i.e.\n * moving mouse to right/left will increase/decrease the width\n */\nexport const RightResizer: React.FC<ResizerProps<\"horizontal\">> = ({\n  onResize,\n  onResizeEnd,\n  onResizeStarted,\n  ...props\n}) => {\n  const { resizerProps } = useRightResizer({\n    onResize,\n    onResizeEnd,\n    onResizeStarted,\n  });\n  return <HorizontalResizer resizerProps={resizerProps} {...props} />;\n};\n","import React from \"react\";\nimport { ResizerProps } from \"./ResizerProps\";\nimport { useTopResizer } from \"./useResizer\";\nimport { VerticalResizer } from \"./VerticalResizer\";\n\n/**\n * Handle for resizing views in a vertical layout, where the resizer is at the top side of the resizable view. i.e.\n * moving mouse to bottom/top will decrease/increase the height\n */\nexport const TopResizer: React.FC<ResizerProps<\"vertical\">> = ({\n  onResize,\n  onResizeEnd,\n  onResizeStarted,\n  ...props\n}) => {\n  const { resizerProps } = useTopResizer({\n    onResize,\n    onResizeEnd,\n    onResizeStarted,\n  });\n  return <VerticalResizer resizerProps={resizerProps} {...props} />;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { ResizerViewProps } from \"./useResizer\";\n\ntype VerticalResizerViewProps = ResizerViewProps<\"vertical\">;\n\nconst StyledVerticalResizer = styled.div`\n  width: 100%;\n  height: 0;\n  position: relative;\n  z-index: 1; // to keep resizer on top of sibling views, in case they are non-static\n`;\n\nconst StyledVerticalResizerArea = styled.div<{\n  handleSize: number;\n  cursor: VerticalResizerViewProps[\"cursor\"];\n}>`\n  position: absolute;\n  cursor: ${({ cursor }) => `${cursor}-resize`};\n  height: ${({ handleSize }) => `calc(100% + ${handleSize}px)`};\n  width: 100%;\n  top: ${({ handleSize }) => `-${handleSize / 2}px`};\n`;\n\n/**\n * Handle for resizing views in a vertical layout. It just handles the\n * movement event and calls onResize with the new size. It has nothing to do\n * with actually applying the size.\n */\nexport const VerticalResizer: React.FC<VerticalResizerViewProps> = ({\n  outerPadding = 10,\n  background,\n  size = 0,\n  cursor = \"row\",\n  resizerProps,\n  children,\n  style = {},\n}) => (\n  <StyledVerticalResizer\n    {...resizerProps}\n    style={{ ...style, background, height: size }}\n  >\n    {children}\n    <StyledVerticalResizerArea handleSize={outerPadding} cursor={cursor} />\n  </StyledVerticalResizer>\n);\n","import { useMove } from \"../utils/interaction-utils/useMove\";\nimport { ResizerProps } from \"./ResizerProps\";\n\ntype UseResizerProps = Pick<\n  ResizerProps,\n  \"onResize\" | \"onResizeEnd\" | \"onResizeStarted\"\n>;\n\nexport type ResizerViewProps<O = \"horizontal\" | \"vertical\"> = Omit<\n  ResizerProps<O>,\n  \"onResize\" | \"onResizeEnd\" | \"onResizeStarted\"\n> &\n  ReturnType<typeof useResizer>;\n\nconst useResizer = (\n  orientation: \"horizontal\" | \"vertical\",\n  invert: boolean,\n  { onResizeStarted, onResize, onResizeEnd }: UseResizerProps\n) => {\n  const props = useMove({\n    dragThreshold: 0,\n    onMoveStart: () => onResizeStarted() || 0,\n    onMoveEnd: () => onResizeEnd?.(),\n    onMove: ({ movement, startState }) =>\n      onResize(\n        startState +\n          (invert ? -1 : +1) *\n            movement[orientation === \"horizontal\" ? \"x\" : \"y\"]\n      ),\n  });\n  return {\n    resizerProps: props,\n  };\n};\n\nexport const useLeftResizer = (props: UseResizerProps) => {\n  return useResizer(\"horizontal\", true, props);\n};\n\nexport const useRightResizer = (props: UseResizerProps) => {\n  return useResizer(\"horizontal\", false, props);\n};\n\nexport const useTopResizer = (props: UseResizerProps) => {\n  return useResizer(\"vertical\", true, props);\n};\n\nexport const useBottomResizer = (props: UseResizerProps) => {\n  return useResizer(\"vertical\", false, props);\n};\n","import React, { ComponentProps, useState } from \"react\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport { useControlledState } from \"@react-stately/utils\";\n\nimport { styled } from \"@intellij-platform/core/styled\";\nimport {\n  ActionDefinition,\n  ActionsProvider,\n  CommonActionId,\n  useGetActionShortcut,\n} from \"@intellij-platform/core/ActionSystem\";\nimport { Input, InputProps } from \"@intellij-platform/core/InputField\";\nimport {\n  AutoHoverPlatformIcon,\n  PlatformIcon,\n} from \"@intellij-platform/core/Icon\";\nimport { Menu, MenuTrigger } from \"@intellij-platform/core/Menu\";\nimport { Item } from \"@intellij-platform/core/Collections\";\nimport { ActionTooltip, TooltipTrigger } from \"@intellij-platform/core/Tooltip\";\n\nexport interface SearchInputProps\n  extends Omit<InputProps, \"onSubmit\" | \"onChange\"> {\n  /**\n   * Search history to be shown as a menu when the search icon is pressed.\n   */\n  searchHistory?: Array<string>;\n  /**\n   * The content of \"show history\" button tooltip, and the corresponding action title.\n   * @default \"Recent Search\"\n   */\n  historyButtonTitle?: string;\n  /**\n   * Called when the search input is cleared by either clear button or `Escape` key.\n   * `onChange` is also called with an empty string, whenever the input is cleared,\n   * so there is no need for updating the state using `onClear`, when the value is controlled.\n   *\n   * @param clearedValue the value before clearing.\n   */\n  onClear?: (clearedValue: string) => void;\n  /**\n   * Called when the search is submitted by pressing `Enter`\n   * @param value submitted text\n   */\n  onSubmit?: (value: string) => void;\n  /**\n   * Controlled value of the search input\n   */\n  value?: string;\n  /**\n   * Default value of the search input, used for initialization when value is uncontrolled.\n   */\n  defaultValue?: string;\n  /**\n   * Called when the value is changed.\n   */\n  onChange?: (value: string) => void;\n  /**\n   * Called when a history item is selected. `onChange` is called with the selected text, so\n   * there is no need for updating the state using `onHistoryItemSelected`, when the value is controlled.\n   *\n   * @param value text selected from history.\n   * @param previousValue the value of the input before the history item was selected.\n   */\n  onHistoryItemSelected?: (value: string, previousValue: string) => void;\n}\n\nconst StyledInput = styled(Input)`\n  input[type=\"search\"] {\n    -webkit-appearance: none;\n    &::-webkit-search-cancel-button {\n      -webkit-appearance: none;\n    }\n    &::-webkit-search-decoration {\n      -webkit-appearance: none;\n    }\n  }\n`;\n\n/**\n * A wrapper around {@link Input} with a few additions:\n * - A Search icon, added as an {@link InputProps#addonBefore addonBefore}.\n * - A clear button, added as an {@link InputProps#addonAfter addonAfter}, when the input has value.\n *   {@link SearchInputProps#onClear onClear} is called when the clear button is clicked.\n * - A list of search queries shown as a menu, when the search icon is clicked,\n *   if {@link SearchInputProps#searchHistory searchHistory} is provided.\n * - An action provided on the input element, to open the search history via\n *   {@link CommonActionId.SHOW_SEARCH_HISTORY} shortcut.\n * - Search submission callback ({@link SearchInputProps#onSubmit onSubmit}) called when search is submitted by pressing Enter\n *\n * {@link InputProps#onChange onChange} and {@link InputProps#onSubmit onSubmit} props are also different in SearchInput, compared to\n * the corresponding props of the native input.\n *\n * Caveat: If the width is not set (either explicitly or via the entailing layout), the width of the input will change when clear button shows/hides.\n *\n * @see Input\n * @see InputField\n */\nexport const SearchInput = React.forwardRef(function SearchInput(\n  {\n    addonBefore,\n    addonAfter,\n    searchHistory,\n    onClear,\n    onSubmit,\n    onHistoryItemSelected,\n    historyButtonTitle = \"Recent Search\",\n    value: valueProp,\n    defaultValue = \"\",\n    onChange,\n    type = \"search\",\n    inputRef: inputRefProp,\n    ...props\n  }: SearchInputProps,\n  forwardedRef: React.Ref<HTMLDivElement>\n) {\n  const [value, setValue] = useControlledState(\n    valueProp!,\n    defaultValue,\n    onChange!\n  );\n  const inputContainerRef = useObjectRef(forwardedRef);\n  const inputRef = useObjectRef(inputRefProp);\n  const [isSearchHistoryOpen, setSearchHistoryOpen] = useState(false);\n  const showSearchHistoryAction: ActionDefinition = {\n    id: CommonActionId.SHOW_SEARCH_HISTORY,\n    title: historyButtonTitle,\n    actionPerformed: () => {\n      setSearchHistoryOpen(true);\n    },\n  };\n  // TODO: rename HelpTooltip, ActionTooltip, etc. to Tooltip.Action Tooltip.Help, then add ActionTooltip in action\n  //  components, and use that instead of the more low-level API used here.\n  const getShortcut = useGetActionShortcut();\n  const searchIcon = searchHistory ? (\n    <MenuTrigger\n      isOpen={isSearchHistoryOpen}\n      onOpenChange={setSearchHistoryOpen}\n      positioningTargetRef={inputContainerRef}\n      renderMenu={({ menuProps }) => (\n        <Menu\n          {...menuProps}\n          autoFocus=\"first\"\n          onAction={(key) => {\n            const historyItemText =\n              searchHistory[parseInt(`${key}`.split(\"_\")[0])];\n            if (historyItemText !== undefined) {\n              setValue(historyItemText);\n              onHistoryItemSelected?.(historyItemText, value);\n              inputRef.current?.focus();\n            }\n          }}\n        >\n          {searchHistory.map((historyItem, index) => (\n            <Item key={`${index}_${historyItem}`}>{historyItem}</Item>\n          ))}\n        </Menu>\n      )}\n    >\n      {(menuTriggerProps, ref) => (\n        <TooltipTrigger\n          tooltip={\n            <ActionTooltip\n              actionName={historyButtonTitle}\n              shortcut={getShortcut(CommonActionId.SHOW_SEARCH_HISTORY)}\n            />\n          }\n        >\n          {(tooltipTriggerProps) => (\n            <PlatformIcon\n              {...mergeProps(tooltipTriggerProps, menuTriggerProps)}\n              ref={ref}\n              icon=\"actions/searchWithHistory.svg\"\n              role=\"button\"\n              aria-label={historyButtonTitle}\n            />\n          )}\n        </TooltipTrigger>\n      )}\n    </MenuTrigger>\n  ) : (\n    <PlatformIcon icon=\"actions/search.svg\" />\n  );\n  const clear = () => {\n    setValue(\"\");\n    onClear?.(value);\n  };\n  const inputProps = mergeProps<ComponentProps<typeof Input>[]>(props, {\n    ref: inputContainerRef,\n    inputRef,\n    value,\n    type,\n    onChange: (event) => {\n      setValue(event.target.value);\n    },\n    addonBefore: (\n      <>\n        {searchIcon}\n        {addonBefore}\n      </>\n    ),\n    addonAfter: (\n      <>\n        {value && (\n          <AutoHoverPlatformIcon\n            onClick={clear}\n            role=\"button\"\n            aria-label=\"Clear search\"\n            icon=\"actions/close\"\n            hoverIcon=\"actions/closeHovered\"\n          />\n        )}\n        {addonAfter}\n      </>\n    ),\n    onKeyDown: (event) => {\n      if (event.repeat) {\n        return;\n      }\n      if (event.key === \"Enter\") {\n        onSubmit?.(event.currentTarget.value);\n      } else if (event.key === \"Escape\") {\n        clear();\n      }\n    },\n  });\n  if (searchHistory) {\n    return (\n      <ActionsProvider actions={[showSearchHistoryAction]}>\n        {({ shortcutHandlerProps }) => (\n          <StyledInput {...mergeProps(inputProps, shortcutHandlerProps)} />\n        )}\n      </ActionsProvider>\n    );\n  }\n  return <StyledInput {...inputProps} />;\n});\n","import React, { useRef } from \"react\";\nimport { useButton } from \"@react-aria/button\";\nimport {\n  AutoHoverPlatformIcon,\n  PlatformIcon,\n} from \"@intellij-platform/core/Icon\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\n\nexport interface SpeedSearchInputProps {\n  children: string | undefined;\n  match?: boolean;\n  active: boolean | undefined;\n  clear: () => void;\n}\n\nconst StyledSearchIcon = styled(PlatformIcon)`\n  margin-right: 0.25rem;\n`;\n\nconst StyledSpeedSearchInput = styled.span<{ noMatch?: boolean }>`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  background: ${({ theme, noMatch }) =>\n    noMatch\n      ? theme.color(\n          \"SearchField.errorBackground\",\n          theme.dark ? \"#743A3A\" : \"#ffcccc\"\n        )\n      : theme.color(\n          \"TextField.background\"\n        )}; // fallback logic not checked with the ref impl\n  color: ${({ theme }) =>\n    theme.color(\n      \"TextField.foreground\" as UnknownThemeProp<\"TextField.foreground\">\n    )}; // fallback logic not checked with the ref impl\n  height: 1.5rem; // 24px, JBTextField COMPACT_HEIGHT\n  padding: 0.125rem 0.375rem;\n  border: 1px solid ${({ theme }) => theme.getOutlineColor(true, false)};\n  border-radius: ${({ theme }) =>\n    ((theme.value(\"Component.arc\") as number) ?? 5) / 2}px;\n`;\nconst StyledSearchText = styled.span`\n  flex: 1;\n  font-size: 0.91em; // RelativeFont.SMALL\n`;\n\n/**\n * An input field to be rendered to show the filter value in speed search in menus and similar speedSearch-enabled\n * components.\n * @see SpeedSearchPopup\n */\nexport const SpeedSearchInput = React.forwardRef<\n  HTMLElement,\n  SpeedSearchInputProps\n>(({ active, match, children, clear }, ref) => {\n  const clearButtonRef = useRef<HTMLElement>(null);\n  const { buttonProps } = useButton(\n    {\n      elementType: \"span\",\n      \"aria-label\": \"Clear search\",\n      excludeFromTabOrder: true,\n      // @ts-expect-error: preventFocusOnPress is not defined in public API of useButton\n      preventFocusOnPress: true,\n      onPress: clear,\n    },\n    clearButtonRef\n  );\n\n  // Temporary styled components until SearchInput is implemented\n  return active ? (\n    <StyledSpeedSearchInput ref={ref} noMatch={!match}>\n      <StyledSearchIcon icon={\"actions/search\"} />\n      <StyledSearchText>\n        {(children || \"\").replace(/ /g, \"\\u00A0\")}\n      </StyledSearchText>\n      {children && (\n        <AutoHoverPlatformIcon\n          {...buttonProps}\n          ref={clearButtonRef}\n          icon=\"actions/close\"\n          hoverIcon=\"actions/closeHovered\"\n        />\n      )}\n    </StyledSpeedSearchInput>\n  ) : null;\n});\n","import { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport React from \"react\";\nimport { styled } from \"../styled\";\n\nexport interface SpeedSearchPopupProps {\n  children: string | undefined;\n  match?: boolean;\n  active: boolean | undefined;\n}\n\nconst StyledSearchIcon = styled(PlatformIcon)`\n  margin-right: 10px;\n  vertical-align: middle;\n`;\n\n/**\n * The little popup view shown in the top left corner of list, tree, etc., which shows the search\n * query.\n * @see SpeedSearchInput\n */\nexport const SpeedSearchPopup = React.forwardRef<\n  HTMLElement,\n  SpeedSearchPopupProps\n>(({ active, match, children }, ref) =>\n  active ? (\n    <StyledSpeedSearchPopup ref={ref} noMatch={!match}>\n      <StyledSearchIcon icon={\"actions/search\"} />\n      {(children || \"\").replace(/ /g, \"\\u00A0\")}\n    </StyledSpeedSearchPopup>\n  ) : null\n);\n\nconst StyledSpeedSearchPopup = styled.span<{ noMatch?: boolean }>`\n  // ref: https://github.com/JetBrains/intellij-community/blob/e3c7d96daba1d5d84d5650bde6c220aed225bfda/platform/platform-impl/src/com/intellij/ui/SpeedSearchBase.java#L53-L53\n  box-sizing: border-box;\n  position: absolute;\n  background: ${({ theme }) =>\n    theme.color(\n      \"SpeedSearch.background\",\n      theme.dark ? \"rgb(111,111,111)\" : \"#fff\"\n    )};\n  border: 1px solid\n    ${({ theme }) =>\n      theme.color(\n        \"SpeedSearch.borderColor\",\n        theme.dark ? \"rgb(64, 64, 64)\" : \"rgb(192, 192, 192)\"\n      )};\n  color: ${({ noMatch, theme }) =>\n    noMatch\n      ? theme.color(\"SpeedSearch.errorForeground\", theme.commonColors.red)\n      : theme.color(\n          \"SpeedSearch.foreground\",\n          theme.commonColors.tooltipForeground\n        )};\n  z-index: 1;\n  padding: 3px 7px;\n  height: 25px;\n  line-height: 1.2;\n  transform: translateY(-100%);\n`;\n","import React, { useRef } from \"react\";\n\nfunction isTypeableElement(elem: HTMLElement): boolean {\n  const nonTypeableInputTypes: Array<HTMLInputElement[\"type\"]> = [\n    \"checkbox\",\n    \"radio\",\n    \"button\",\n  ];\n  return (\n    elem.isContentEditable ||\n    (elem instanceof HTMLInputElement &&\n      !nonTypeableInputTypes.includes(elem.type)) ||\n    elem instanceof HTMLTextAreaElement\n  );\n}\n\n/**\n * Main use case is for a list of item, which can have keyboard focus, be filterable and capture\n * typing if the corresponding keyboard events are not happening on an inner element (like an input)\n * that already handles typing.\n * @param value\n * @param onChange\n * TODO: add support for removing word by word by alt+backspace like native text fields.\n * TODO: add support for removing the whole content by command/ctrl+backspace.\n */\nexport function useGhostInput({\n  value,\n  onChange,\n}: {\n  value: string;\n  onChange: (value: string) => void;\n}) {\n  const valueRef = useRef(value);\n  valueRef.current = value;\n  const onKeyDown = (event: React.KeyboardEvent | KeyboardEvent) => {\n    if (\n      !event.ctrlKey &&\n      !event.altKey &&\n      !event.metaKey &&\n      (!(event.target instanceof HTMLElement) ||\n        !isTypeableElement(event.target))\n    ) {\n      if (event.key.length === 1) {\n        // Seems reasonable to prevent default here generally, but the specific case this is added for is the space key,\n        // scrolling the page.\n        event.preventDefault();\n        return onChange(`${valueRef.current}${event.key}`);\n      }\n      if (event.key === \"Backspace\") {\n        const sliceEnd = event.metaKey ? 0 : -1;\n        onChange(valueRef.current.slice(0, sliceEnd));\n      }\n    }\n  };\n  return { onKeyDown } as const;\n}\n","import { useGhostInput } from \"./useGhostInput\";\nimport { useFocusWithin, useKeyboard } from \"@react-aria/interactions\";\nimport { useControlledState } from \"@react-stately/utils\";\nimport { ControlledStateProps } from \"../type-utils\";\nimport React, { RefObject } from \"react\";\nimport { hasAnyModifier } from \"@intellij-platform/core/utils/keyboard-utils\";\n\nexport interface SpeedSearchState {\n  /**\n   * Whether speed search is active. Speed search becomes active when the user starts to type and becomes inactive\n   * when Escape is pressed, or when the speed search container is blurred and `keepSearchActiveOnBlur` is false.\n   * Whenever speed search becomes inactive, search text is also cleared.\n   * Note that speed search can be active while search term is empty.\n   */\n  active: boolean;\n  setActive: (value: boolean) => void;\n  searchTerm: string;\n  setSearchTerm: (value: string) => void;\n  /**\n   * clears search term and sets active to false\n   */\n  clear: () => void;\n}\n\nexport interface SpeedSearchStateProps\n  extends ControlledStateProps<{\n    searchTerm: string;\n    isSearchActive: boolean;\n  }> {}\n\nexport function useSpeedSearchState(\n  props: SpeedSearchStateProps\n): SpeedSearchState {\n  const [active, setActive] = useControlledState(\n    props.isSearchActive!,\n    props.defaultIsSearchActive ?? false,\n    props.onIsSearchActiveChange!\n  );\n  const [searchTerm, setSearchTerm] = useControlledState(\n    props.searchTerm!,\n    props.defaultSearchTerm || \"\",\n    props.onSearchTermChange!\n  );\n\n  return {\n    active,\n    searchTerm,\n    setActive,\n    setSearchTerm,\n    clear: () => {\n      setSearchTerm(\"\");\n      setActive(false);\n    },\n  };\n}\n\nexport interface SpeedSearchProps {\n  keepSearchActiveOnBlur?: boolean | ((e: React.FocusEvent) => boolean);\n}\n\n/**\n * TODO: description\n * IMPORTANT: making the container element focusable is not a part of this hook. But it's a prerequisite for it to work.\n * Previously, a tabIndex:-1 was passed as a container prop, but it turns out it's not that simple. For collections for\n * example we usually want tab index to be 0 once it's not focused and then when an item is focused, we want it to be\n * -1, and such kind of logics are handled in their respective hooks. So, making the container focusable and how to do\n * it is NOT this hook's responsibility anymore.\n */\nexport function useSpeedSearch(\n  { keepSearchActiveOnBlur }: SpeedSearchProps,\n  { searchTerm, active, setActive, setSearchTerm }: SpeedSearchState,\n  ref: RefObject<HTMLElement>\n) {\n  const { onKeyDown: ghostInputKeydown } = useGhostInput({\n    value: searchTerm,\n    onChange: (value) => {\n      const trimmedValue = value.trimStart();\n      setSearchTerm(trimmedValue);\n      if (!active && trimmedValue !== \"\") {\n        setActive(true);\n      }\n    },\n  });\n  const clear = () => {\n    setSearchTerm(\"\");\n    setActive(false);\n  };\n\n  const {\n    keyboardProps: { onKeyDown, onKeyUp },\n  } = useKeyboard({\n    onKeyDown: (e) => {\n      if (!ref.current?.contains(e.target as HTMLElement)) {\n        // In case events are propagated through portals\n        return;\n      }\n      if (e.key === \"a\" && (e.metaKey || e.ctrlKey)) {\n        e.preventDefault();\n      }\n      if (e.key === \"Escape\") {\n        clear();\n      } else {\n        ghostInputKeydown(e);\n      }\n      /**\n       * In the reference impl, at least some action shortcuts are allowed\n       * while the search is active. But actions with some other shortcuts\n       * (like Delete) are not triggered while the speed search is active\n       * the current condition below is not 100% matching the reference impl,\n       * but seems to be good enough for now.\n       */\n      if (!active || hasAnyModifier(e)) {\n        e.continuePropagation();\n      }\n    },\n  });\n\n  const {\n    focusWithinProps: { onFocus, onBlur },\n  } = useFocusWithin({\n    onBlurWithin: (event) => {\n      if (\n        !(typeof keepSearchActiveOnBlur === \"function\"\n          ? keepSearchActiveOnBlur(event)\n          : keepSearchActiveOnBlur)\n      ) {\n        clear();\n      }\n    },\n  });\n\n  return {\n    containerProps: {\n      onFocus,\n      onBlur,\n      onKeyDown,\n      onKeyUp,\n    },\n  };\n}\n","import React from \"react\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\n\nexport interface StatusBarProps {\n  left: React.ReactNode;\n  right: React.ReactNode;\n}\n\n/**\n * Status bar rendered at the bottom of the main window. In the reference implementation, there are three slots for\n * content: left, right and center. It doesn't seem center is really necessary, so only left and right are supported\n * for now.\n * @param left content on the left side of the status bar.\n * @param right content on the right side of the status bar. Typically, a bunch of {@link StatusBarWidget}s\n */\nexport const StatusBar = ({\n  left,\n  right,\n}: StatusBarProps): React.ReactElement => {\n  return (\n    <StyledStatusBar\n      onMouseDown={(e) => {\n        // stop focus from going out of the currently focused element, when status bar is clicked\n        // might be too intrusive to prevent default unconditionally :-? Also, it may make sense for it to be an option\n        e.preventDefault();\n      }}\n    >\n      <StyledStatusBarLeft>{left}</StyledStatusBarLeft>\n      <StyledStatusBarRight>{right}</StyledStatusBarRight>\n    </StyledStatusBar>\n  );\n};\n\nconst StyledStatusBar = styled.div`\n  box-sizing: border-box;\n  padding: 0 0.25rem;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between; // because there is left and right sides\n  background-color: ${({ theme }) =>\n    theme.color(\n      \"StatusBar.background\" as UnknownThemeProp<\"StatusBar.background\">,\n      theme.color(\"Panel.background\" as UnknownThemeProp<\"Panel.background\">)\n    ) || \"#fff\"};\n  color: ${({ theme }) =>\n    theme.color(\n      \"StatusBar.Widget.foreground\" as UnknownThemeProp<\"StatusBar.Widget.foreground\">,\n      theme.commonColors.labelForeground\n    )};\n  border-top: 1px solid\n    ${({ theme }) => theme.color(\"StatusBar.borderColor\", \"rgb(145, 145, 145)\")};\n  height: calc(1.25rem + 1px /* border*/);\n  line-height: 1.25rem;\n  font-size: 0.656rem; // not verified\n  cursor: default;\n`;\n\nconst StyledStatusBarSection = styled.div`\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n`;\n\nconst StyledStatusBarRight = styled(StyledStatusBarSection)`\n  flex-shrink: 0;\n`;\nconst StyledStatusBarLeft = styled(StyledStatusBarSection)`\n  flex-shrink: 1;\n  min-width: 0;\n  overflow: hidden;\n`;\n","import React, { ForwardedRef } from \"react\";\nimport { PressProps, usePress } from \"@react-aria/interactions\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport { useFocusable } from \"@react-aria/focus\";\n\nexport interface StatusBarWidgetProps extends PressProps {\n  label?: React.ReactNode;\n  icon?: React.ReactNode;\n}\n\n/**\n * Status bar button (aka widget), with the right hover and pressed appearance.\n * It doesn't get focused when pressed, and is excluded from tab order.\n * Disabled style is not couldn't be found, so it's skipped at the moment.\n */\nexport const StatusBarWidget = React.forwardRef(function StatusBarWidget(\n  props: StatusBarWidgetProps,\n  forwardedRef: ForwardedRef<HTMLSpanElement>\n) {\n  const ref = useObjectRef(forwardedRef);\n  // Maybe it's better for a11y to use useButton, or at least use button element?\n  const { pressProps, isPressed } = usePress({\n    ref,\n    ...props,\n    preventFocusOnPress: true,\n  });\n  const { focusableProps } = useFocusable({ excludeFromTabOrder: true }, ref);\n\n  const StyledWrapper = props.label\n    ? StyledStatusBarWidget\n    : StyledStatusBarIconWidget;\n  return (\n    <StyledWrapper\n      {...mergeProps(pressProps, focusableProps)}\n      className={isPressed ? \"pressed\" : \"\"}\n      ref={ref}\n    >\n      {props.icon}\n      {props.icon && props.label && (\n        <>&nbsp;</> //not the nicest way to handle spacing!\n      )}\n      {props.label}\n    </StyledWrapper>\n  );\n});\n\nconst StyledStatusBarWidget = styled.span`\n  display: inline-flex;\n  align-items: center;\n  padding: ${({ theme }) =>\n    theme.inset(\n      \"StatusBar.Widget.widgetInsets\" as UnknownThemeProp<\"StatusBar.Widget.widgetInsets\">\n    ) ?? \"0 0.375rem\"};\n  height: 1.125rem;\n  white-space: nowrap;\n  &:hover {\n    background-color: ${({ theme }) =>\n      theme.color(\n        \"StatusBar.Widget.hoverBackground\" as UnknownThemeProp<\"StatusBar.Widget.hoverBackground\">,\n        theme.color(\"ActionButton.hoverBackground\", \"#dfdfdf\")\n      )};\n    color: ${({ theme }) =>\n      theme.color(\n        \"StatusBar.Widget.hoverForeground\" as UnknownThemeProp<\"StatusBar.Widget.hoverForeground\">,\n        theme.commonColors.labelForeground\n      )};\n  }\n  &.pressed {\n    background-color: ${({ theme }) =>\n      theme.color(\n        \"StatusBar.Widget.pressedBackground\" as UnknownThemeProp<\"StatusBar.Widget.pressedBackground\">,\n        theme.color(\"ActionButton.pressedBackground\", \"#cfcfcf\")\n      )};\n    color: ${({ theme }) =>\n      theme.color(\n        \"StatusBar.Widget.pressedForeground\" as UnknownThemeProp<\"StatusBar.Widget.pressedForeground\">,\n        theme.commonColors.labelForeground\n      )};\n  }\n`;\n\nconst StyledStatusBarIconWidget = styled(StyledStatusBarWidget)`\n  padding: ${({ theme }) =>\n    theme.inset(\n      \"StatusBar.Widget.widgetInsets\" as UnknownThemeProp<\"StatusBar.Widget.widgetInsets\">\n    ) ?? \"0 0.25rem\"};\n`;\n","import React from \"react\";\nimport { styled } from \"./styled\";\n\ntype SeparatorUI = {\n  STRIPE_INDENT: number;\n  STRIPE_WIDTH: number;\n};\n\n// based on implementation in com.intellij.ide.ui.laf.darcula.ui.DarculaSeparatorUI, which seems to be used for all themes\nconst DarculaSeparatorUI: SeparatorUI = {\n  STRIPE_INDENT: 1,\n  STRIPE_WIDTH: 1,\n};\n\nconst defaultSize =\n  2 * DarculaSeparatorUI.STRIPE_INDENT + DarculaSeparatorUI.STRIPE_WIDTH;\n\nexport const StyledSeparator = styled.hr(({ theme }) => ({\n  backgroundColor: theme.color(\n    \"Separator.separatorColor\",\n    theme.dark ? \"#cdcdcd\" : \"#515151\"\n  ),\n  backgroundClip: \"content-box\",\n  boxSizing: \"border-box\",\n  margin: 0,\n  border: \"none\",\n  flexShrink: 0,\n}));\n\nexport const StyledHorizontalSeparator = styled(StyledSeparator)`\n  height: inherit; // should it be auto?\n  padding: 0 ${DarculaSeparatorUI.STRIPE_INDENT}px;\n  width: ${defaultSize}px;\n`;\nexport const StyledVerticalSeparator = styled(StyledSeparator)`\n  width: auto;\n  padding: ${DarculaSeparatorUI.STRIPE_INDENT}px 0;\n  height: ${defaultSize}px;\n`;\n","import { TabCloseButton } from \"@intellij-platform/core/Tabs/TabCloseButton\";\nimport { TabContentLayout } from \"@intellij-platform/core/Tabs/TabContentLayout\";\nimport React from \"react\";\n\nexport const DebuggerTabContent = ({\n  icon,\n  title,\n  closeButton,\n}: {\n  icon: React.ReactNode;\n  title: React.ReactNode;\n  /**\n   * Close button for the tab. Use {@link TabCloseButton} to render the close button\n   * for the tab.\n   *\n   * @example\n   * ```tsx\n   * <DebuggerTabContent\n   *   closeButton={\n   *     <TooltipTrigger\n   *       tooltip={<ActionTooltip actionName=\"Close Tab\" shortcut=\"^⇧F4\" />}\n   *     >\n   *       <TabCloseButton onPress={}></TabCloseButton>\n   *     </TooltipTrigger>\n   *   }\n   * />\n   * ```\n   */\n  closeButton?: React.ReactElement;\n}) => {\n  return (\n    <TabContentLayout startIcon={icon} title={title} endIcon={closeButton} />\n  );\n};\n","import { Theme } from \"@intellij-platform/core/Theme\";\nimport { styled } from \"@intellij-platform/core/styled\";\n\nimport { StyledDefaultTab } from \"@intellij-platform/core/Tabs/StyledDefaultTab\";\nimport {\n  getTabThemeStyles,\n  TabTheme,\n} from \"@intellij-platform/core/Tabs/TabTheme\";\n\nexport const debuggerTabTheme = ({ theme }: { theme: Theme }): TabTheme => ({\n  underlineHeight: theme.value<number>(\"DebuggerTabs.underlineHeight\") ?? 2,\n  underlinedTabBackground: theme.color(\"DebuggerTabs.underlinedTabBackground\"),\n});\nexport const StyledDebuggerTab = styled(StyledDefaultTab)`\n  ${({ theme }) => getTabThemeStyles(debuggerTabTheme({ theme }))};\n`;\n","import { Tabs, TabsProps } from \"@intellij-platform/core/Tabs/Tabs\";\nimport { StyledDebuggerTab } from \"./StyledDebuggerTab\";\nimport React from \"react\";\n\ntype DebuggerTabsProps<T extends object> = Omit<\n  TabsProps<T>,\n  \"TabComponent\" | \"focusable\"\n>;\n\nexport const DebuggerTabs = <T extends object>(props: DebuggerTabsProps<T>) => (\n  <Tabs {...props} TabComponent={StyledDebuggerTab} focusable={false} />\n);\n","import React from \"react\";\nimport { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport { TabCloseButton } from \"@intellij-platform/core/Tabs/TabCloseButton\";\nimport {\n  TabContentLayout,\n  TabItemLayoutProps,\n} from \"@intellij-platform/core/Tabs/TabContentLayout\";\nimport { ActionTooltip, TooltipTrigger } from \"@intellij-platform/core/Tooltip\";\nimport { BareButton } from \"@intellij-platform/core/Button\";\n\ninterface EditorTabContentProps {\n  icon: React.ReactNode;\n  title: React.ReactNode;\n  /**\n   * Close button, shown in place of \"pin\" button if not pinned. Use {@link TabCloseButton} to render the close button\n   * for the tab.\n   *\n   * @example\n   * ```tsx\n   * <EditorTabContent\n   *   closeButton={\n   *     <TooltipTrigger\n   *       tooltip={<ActionTooltip actionName=\"Close Tab\" shortcut=\"^⇧F4\" />}\n   *     >\n   *       <TabCloseButton onPress={}></TabCloseButton>\n   *     </TooltipTrigger>\n   *   }\n   * />\n   * ```\n   */\n  closeButton?: React.ReactElement;\n  onUnpin?: () => void;\n  pinned?: boolean;\n  containerProps?: TabItemLayoutProps[\"containerProps\"];\n}\n/**\n * For rendering the content of Editor tabs. supports for file icon which is shown on the left and close or unpin\n * button shown on the right.\n */\nexport const EditorTabContent = ({\n  icon,\n  title,\n  closeButton,\n  onUnpin,\n  pinned,\n  containerProps,\n}: EditorTabContentProps) => {\n  return (\n    <TabContentLayout\n      startIcon={icon}\n      title={title}\n      containerProps={containerProps}\n      endIcon={\n        pinned ? (\n          <TooltipTrigger tooltip={<ActionTooltip actionName=\"Unpin Tab\" />}>\n            <BareButton\n              onPress={onUnpin}\n              excludeFromTabOrder\n              preventFocusOnPress\n            >\n              <PlatformIcon icon=\"actions/pinTab\" />\n            </BareButton>\n          </TooltipTrigger>\n        ) : (\n          closeButton\n        )\n      }\n    />\n  );\n};\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { Theme, UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { StyledDefaultTab } from \"@intellij-platform/core/Tabs/StyledDefaultTab\";\nimport {\n  getTabThemeStyles,\n  TabTheme,\n} from \"@intellij-platform/core/Tabs/TabTheme\";\n\nexport const editorTabTheme = ({ theme }: { theme: Theme }): TabTheme => ({\n  borderColor: theme.color(\"EditorTabs.borderColor\"),\n  underlineHeight: theme.value<number>(\"EditorTabs.underlineHeight\"),\n  background: theme.color(\"EditorTabs.background\"),\n  underlinedTabInactiveBackground: theme.color(\n    \"EditorTabs.underlinedTabBackground\" // that's correctly not underlinedTabInactiveBackground!\n  ), // TODO: use EditorColorsScheme when available\n  underlinedTabBackground: theme.color(\"EditorTabs.underlinedTabBackground\"), // TODO: use EditorColorsScheme when available\n  hoverInactiveBackground: theme.color(\n    \"EditorTabs.hoverInactiveBackground\" as UnknownThemeProp<\"EditorTabs.hoverInactiveBackground\">\n  ),\n  hoverBackground: theme.color(\"EditorTabs.hoverBackground\"),\n  inactiveUnderlineColor: theme.color(\"EditorTabs.inactiveUnderlineColor\"), // TODO: use EditorColorsScheme when available\n  underlineColor: theme.color(\"EditorTabs.underlineColor\"), // TODO: use EditorColorsScheme when available\n\n  underlinedTabInactiveForeground: theme.color(\n    \"EditorTabs.underlinedTabForeground\" // that's correctly not underlinedTabInactiveForeground!\n  ), // TODO: use EditorColorsScheme when available\n  underlinedTabForeground: theme.color(\"EditorTabs.underlinedTabForeground\"), // TODO: use EditorColorsScheme when available\n});\nexport const StyledEditorTab = styled(StyledDefaultTab)`\n  font-size: 0.7rem;\n  ${({ theme }) => getTabThemeStyles(editorTabTheme({ theme }))};\n`;\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { getTabsThemeStyles } from \"@intellij-platform/core/Tabs/TabTheme\";\nimport { StyledDefaultTabs } from \"@intellij-platform/core/Tabs/StyledDefaultTabs\";\nimport { editorTabTheme } from \"./StyledEditorTab\";\n\nexport const StyledEditorTabs = styled(StyledDefaultTabs)`\n  ${({ theme }) => getTabsThemeStyles(editorTabTheme({ theme }))};\n`;\n","import { Tabs, TabsProps } from \"@intellij-platform/core/Tabs/Tabs\";\nimport { StyledEditorTab } from \"./StyledEditorTab\";\nimport { StyledEditorTabs } from \"./StyledEditorTabs\";\nimport React from \"react\";\n\nexport type EditorTabsProps<T extends object> = Omit<\n  TabsProps<T>,\n  \"TabComponent\" | \"TabsComponent\" | \"focusable\"\n>;\n\nexport const EditorTabs = <T extends object>(props: EditorTabsProps<T>) => (\n  <Tabs\n    {...props}\n    TabComponent={StyledEditorTab}\n    TabsComponent={StyledEditorTabs}\n    focusable={false}\n  />\n);\n","import { getTabThemeStyles } from \"./TabTheme\";\nimport { styled } from \"../styled\";\nimport { Theme, UnknownThemeProp } from \"../Theme\";\n\nexport type StyledTabProps = {\n  selected?: boolean;\n  disabled?: boolean;\n  active?: boolean;\n};\n\nconst defaultTabTheme = ({ theme }: { theme: Theme }) =>\n  getTabThemeStyles({\n    underlineHeight: theme.value<number>(\"DefaultTabs.underlineHeight\") ?? 3,\n    inactiveUnderlineColor: theme.color(\n      \"DefaultTabs.inactiveUnderlineColor\",\n      theme.dark ? \"#747a80\" : \"#9ca7b8\"\n    ),\n    underlineColor: theme.color(\n      \"DefaultTabs.underlineColor\",\n      theme.dark ? \"#4A88C7\" : \"#4083C9\"\n    ),\n\n    underlinedTabInactiveForeground: theme.color(\n      \"DefaultTabs.underlinedTabInactiveForeground\" as UnknownThemeProp<\"DefaultTabs.underlinedTabInactiveForeground\">\n    ),\n    underlinedTabForeground: theme.color(\"DefaultTabs.underlinedTabForeground\"),\n\n    background: theme.color(\n      \"DefaultTabs.background\",\n      theme.dark ? \"#3C3F41\" : \"#ECECEC\"\n    ),\n    underlinedTabInactiveBackground: theme.color(\n      \"DefaultTabs.underlinedTabInactiveBackground\" as UnknownThemeProp<\"DefaultTabs.underlinedTabInactiveBackground\">\n    ),\n    underlinedTabBackground: theme.color(\n      \"DefaultTabs.underlinedTabBackground\" as UnknownThemeProp<\"DefaultTabs.underlinedTabBackground\">\n    ),\n    hoverInactiveBackground: theme.color(\n      \"DefaultTabs.hoverInactiveBackground\" as UnknownThemeProp<\"DefaultTabs.hoverInactiveBackground\">,\n      theme.dark ? \"rgba(0,0,0,.35)\" : \"rgba(0,0,0,.1)\"\n    ),\n    hoverBackground: theme.color(\n      \"DefaultTabs.hoverBackground\",\n      theme.dark ? \"rgba(0,0,0,.35)\" : \"rgba(0,0,0,.1)\"\n    ),\n  });\n\nexport const StyledDefaultTab = styled.div<StyledTabProps>`\n  box-sizing: border-box;\n  display: inline-flex;\n  letter-spacing: 0.015rem;\n  font-size: 0.85rem;\n  cursor: default;\n  white-space: nowrap;\n\n  // spacing\n  padding: 0 0.5rem;\n  line-height: 1.7rem; // vertical spacing handled by line-height\n\n  // disabled state doesn't seem to be supported in Intellij Platform at all.\n  opacity: ${({ disabled }) => (disabled ? \".5\" : \"1\")};\n  color: ${({ theme }) =>\n    theme.color(\n      \"DefaultTabs.foreground\" as UnknownThemeProp<\"DefaultTabs.foreground\">\n    )};\n\n  position: relative;\n  &::after {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    left: 0;\n    bottom: 0;\n  }\n\n  ${defaultTabTheme};\n`;\n","import { Theme } from \"../Theme\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { getTabsThemeStyles } from \"./TabTheme\";\n\nconst defaultTabsTheme = ({ theme }: { theme: Theme }) =>\n  getTabsThemeStyles({\n    borderColor: theme.color(\n      \"DefaultTabs.borderColor\",\n      theme.commonColors.contrastBorder\n    ),\n    background: theme.color(\"DefaultTabs.background\"),\n  });\n\nexport const StyledDefaultTabs = styled.div<{ noBorders?: boolean }>`\n  display: flex;\n  align-items: center;\n  box-sizing: border-box;\n  border-style: solid;\n  border-width: ${({ noBorders }) => (noBorders ? \"0\" : \"1px 0\")};\n\n  ${defaultTabsTheme};\n`;\n","import React from \"react\";\nimport { BareButton, BareButtonProps } from \"@intellij-platform/core/Button\";\nimport { PlatformIcon } from \"../Icon\";\nimport { styled } from \"../styled\";\n\nconst StyledIconWrapper = styled.span`\n  display: inherit;\n  .icon.hover {\n    display: none;\n  }\n  &:hover {\n    .icon {\n      display: none;\n    }\n    .icon.hover {\n      display: unset;\n    }\n  }\n`;\n/**\n * Close button for Tab\n */\nexport const TabCloseButton = (props: Omit<BareButtonProps, \"children\">) => {\n  // using useHover proved to be unstable.\n  return (\n    <BareButton {...props} excludeFromTabOrder preventFocusOnPress>\n      <StyledIconWrapper>\n        <PlatformIcon icon={\"actions/closeHovered\"} className=\"icon hover\" />\n        <PlatformIcon icon={\"actions/close\"} className=\"icon\" />\n      </StyledIconWrapper>\n    </BareButton>\n  );\n};\n","import React, { ForwardedRef, HTMLProps } from \"react\";\nimport { css, styled } from \"../styled\";\nimport { useFocusable } from \"@react-aria/focus\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\n\nconst StyledTabItemLayout = styled.div`\n  display: inline-flex;\n  align-items: center;\n`;\n\nconst iconStyle = css`\n  display: inline-flex; // without this, the wrapper takes the full height, causing icon to be placed on top\n  margin-top: -0.1rem; // seems necessary for pixel perfect match with the original impl\n`;\n\nconst StyledStartIconWrapper = styled.span`\n  ${iconStyle};\n  margin-right: 0.25rem;\n`;\n\nconst StyledEndIconWrapper = styled.span`\n  ${iconStyle};\n  margin-left: 0.25rem;\n  margin-right: -0.25rem; // default padding of the tab should be a little reduced when close icon is there.\n  border-radius: 16px;\n`;\n\nexport interface TabItemLayoutProps {\n  /**\n   * the icon placed before the text.\n   */\n  startIcon?: React.ReactNode;\n  /**\n   * title of the tab. Normally just a string\n   */\n  title?: React.ReactNode;\n  /**\n   * the icon placed after the text. Typical use cases: close or pin icon.\n   */\n  endIcon?: React.ReactNode;\n\n  /**\n   * Generic HTML props passed to the container div.\n   */\n  containerProps?: Omit<HTMLProps<HTMLDivElement>, \"ref\" | \"as\">;\n}\n\n/**\n * Helper component for rendering the common layout of tab content.\n */\nexport const TabContentLayout = React.forwardRef(\n  (\n    { startIcon, title, endIcon, containerProps = {} }: TabItemLayoutProps,\n    ref: ForwardedRef<HTMLDivElement>\n  ) => {\n    // To allow tooltip be used easily. TooltipTrigger passes props via FocusableContext.\n    const { focusableProps } = useFocusable({}, useObjectRef(ref));\n    return (\n      <StyledTabItemLayout\n        {...mergeProps(focusableProps, containerProps)}\n        ref={ref}\n      >\n        {startIcon && (\n          <StyledStartIconWrapper>{startIcon}</StyledStartIconWrapper>\n        )}\n        {title}\n        {endIcon && <StyledEndIconWrapper>{endIcon}</StyledEndIconWrapper>}\n      </StyledTabItemLayout>\n    );\n  }\n);\n","import { ItemProps } from \"@react-types/shared\";\nimport { Item } from \"@react-stately/collections\";\nimport React from \"react\";\n\nexport interface TabItemProps extends ItemProps<never> {\n  /**\n   * Determines how the tab item should look when rendered as a menu item in overflow menu.\n   * If not passed, `textValue` will be used.\n   * @example\n   * <TabItem\n   *   key={tab.id}\n   *   textValue={tab.title}\n   *   inOverflowMenu={\n   *     <MenuItemLayout content={tab.title} icon={icon} />\n   *   }\n   *  >\n   *   <TabContentLayout startIcon={icon} title={tab.title} />\n   * </TabItem>\n   */\n  inOverflowMenu?: React.ReactNode;\n}\n\n/**\n * Same as {@link Item}, but allows for specifying the tab content for when it's rendered in the overflow menu item.\n */\nexport const TabItem: (props: TabItemProps) => React.ReactElement = Item;\n","import { css } from \"@intellij-platform/core/styled\";\nimport { StyledTabProps } from \"./StyledDefaultTab\";\n\n/**\n * Describes theme-able properties of a tab, which can then be passed to {@link getTabThemeStyles}\n */\nexport interface TabTheme {\n  underlineHeight?: number;\n\n  borderColor?: string;\n\n  inactiveUnderlineColor?: string;\n  underlineColor?: string;\n\n  underlinedTabInactiveForeground?: string;\n  underlinedTabForeground?: string;\n\n  background?: string;\n  underlinedTabBackground?: string;\n  underlinedTabInactiveBackground?: string;\n  hoverInactiveBackground?: string;\n  hoverBackground?: string;\n  inactiveColoredTabBackground?: string; // not used for now\n}\n\nexport const getTabsThemeStyles = ({\n  background,\n  borderColor,\n}: Pick<TabTheme, \"background\" | \"borderColor\">) => css`\n  border-color: ${borderColor};\n  background: ${background};\n`;\n\n/**\n * Converts tab theme properties to a chunk of style that can be dropped in a styled version of StyledDefaultTab\n *\n * @example\n * ```ts\n * const StyledCustomTab = styled(StyledDefaultTab)`\n *   ${getTabThemeStyles({background: 'red'})}\n * `\n * ```\n */\nexport const getTabThemeStyles = ({\n  underlineHeight,\n\n  background,\n  underlinedTabBackground,\n  underlinedTabInactiveBackground,\n  hoverInactiveBackground,\n  hoverBackground,\n\n  underlinedTabForeground,\n  underlinedTabInactiveForeground,\n\n  inactiveUnderlineColor,\n  underlineColor,\n}: TabTheme) =>\n  css<StyledTabProps>`\n    // active indicator\n    &::after {\n      height: ${underlineHeight != null ? `${underlineHeight}px` : undefined};\n      background-color: ${({ selected }) => selected && inactiveUnderlineColor};\n      background-color: ${({ selected, active }) =>\n        selected && active && underlineColor};\n    }\n\n    // foreground rules\n    color: ${({ selected }) => selected && underlinedTabInactiveForeground};\n    color: ${({ selected, active }) =>\n      selected && active && underlinedTabForeground};\n\n    //  background rules\n    background: ${background};\n    background: ${({ selected }) =>\n      selected && underlinedTabInactiveBackground};\n    background: ${({ selected, active }) =>\n      selected && active && underlinedTabBackground};\n\n    ${({ disabled, active }) =>\n      !disabled &&\n      css`\n        &:hover,\n        &.hover /* for testing purposes */ {\n          background: ${hoverInactiveBackground};\n          background: ${active && hoverBackground};\n        }\n      `}\n  `;\n","import { css, styled } from \"@intellij-platform/core/styled\";\n\ninterface Props {\n  hasOverflowAtStart: boolean;\n  hasOverflowAtEnd: boolean;\n}\n\nconst horizontalOverflowIndicatorStyles = css`\n  content: \"\";\n  pointer-events: none;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  width: 10px;\n  z-index: 1;\n`;\nexport const StyledHorizontalOverflowShadows = styled.div<Props>`\n  position: relative; // for overflow indicator (pseudo-)elements to be positioned absolute\n\n  /* FIXME: find out what color, width and gradient parameters are used in the original implementation */\n  ${({ hasOverflowAtStart }) =>\n    hasOverflowAtStart &&\n    css`\n      ::before {\n        ${horizontalOverflowIndicatorStyles};\n        background: linear-gradient(\n          90deg,\n          ${({ theme }) => theme.commonColors.panelBackground} 0%,\n          transparent 100%\n        );\n        left: 0;\n      }\n    `};\n  ${({ hasOverflowAtEnd }) =>\n    hasOverflowAtEnd &&\n    css`\n      ::after {\n        ${horizontalOverflowIndicatorStyles};\n        background: linear-gradient(\n          -90deg,\n          ${({ theme }) => theme.commonColors.panelBackground} 0%,\n          transparent 100%\n        );\n        right: 0;\n      }\n    `};\n`;\n","import { useTab } from \"@react-aria/tabs\";\nimport { TabListState } from \"@react-stately/tabs\";\nimport { Node } from \"@react-types/shared\";\nimport { StyledDefaultTab } from \"./StyledDefaultTab\";\nimport React, { ForwardedRef, forwardRef } from \"react\";\nimport { useObjectRef } from \"@react-aria/utils\";\n\ntype TabProps<T extends object> = {\n  state: TabListState<object>;\n  item: Node<T>;\n  /**\n   * {@see TabsProps#focusable}\n   */\n  focusable?: boolean;\n  /**\n   * {@see TabsProps#active}\n   */\n  active?: boolean;\n  shouldSelectOnPressUp?: boolean;\n  Component?: typeof StyledDefaultTab;\n};\n\nexport const Tab = forwardRef(function Tab<T extends object>(\n  {\n    state,\n    item,\n    focusable,\n    active,\n    shouldSelectOnPressUp,\n    Component = StyledDefaultTab,\n  }: TabProps<T>,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n): React.ReactElement {\n  const { key, rendered } = item;\n  const ref = useObjectRef(forwardedRef);\n  const {\n    tabProps: {\n      /**\n       * by extracting out tabIndex, all keyboard support of the tabs is disabled, since we prevent the tab from being\n       * focusable.\n       */\n      tabIndex,\n      ...tabProps\n    },\n  } = useTab(\n    {\n      key,\n      shouldSelectOnPressUp,\n    },\n    state,\n    ref\n  );\n  const isSelected = state.selectedKey === key;\n  const isDisabled = state.disabledKeys.has(key);\n\n  return (\n    <Component\n      {...tabProps}\n      tabIndex={focusable ? tabIndex : undefined}\n      ref={ref}\n      active={active}\n      selected={isSelected}\n      disabled={isDisabled}\n    >\n      {rendered}\n    </Component>\n  );\n});\n","import React, { Key, useEffect } from \"react\";\nimport { useTabList } from \"@react-aria/tabs\";\nimport { filterDOMProps, mergeProps, scrollIntoView } from \"@react-aria/utils\";\nimport { useTabListState } from \"@react-stately/tabs\";\nimport { AriaTabListProps } from \"@react-types/tabs\";\nimport { StyledHorizontalOverflowShadows } from \"./StyledHorizontalOverflowShadows\";\nimport { TabsOverflowMenu } from \"./TabsOverflowMenu\";\nimport { useOverflowObserver } from \"../utils/overflow-utils/useOverflowObserver\";\nimport { useHasOverflow } from \"./useHasOverflow\";\nimport { css, styled } from \"@intellij-platform/core/styled\";\nimport { notNull } from \"@intellij-platform/core/utils/array-utils\";\nimport { StyledDefaultTab } from \"./StyledDefaultTab\";\nimport { StyledDefaultTabs } from \"./StyledDefaultTabs\";\nimport { Tab } from \"./Tab\";\n\nexport type TabsProps<T> = Omit<\n  AriaTabListProps<T>,\n  \"orientation\" | \"isDisabled\" | \"\"\n> & {\n  /**\n   * Whether tabs should be focusable or not. By default, following the Intellij Platform implementation, tabs are\n   * not focusable and therefore lack the keyboard accessibility support specified in WAI-ARIA.\n   * You can change this default behaviour and make the tabs keyboard accessible by passing `focusable`.\n   * focus styles are not perfect at the moment, since it's not considered an important feature.\n   * @default false\n   */\n  focusable?: boolean;\n\n  /**\n   * Whether selected tab should change on press up instead of press down.\n   * @default false.\n   */\n  shouldSelectOnPressUp?: boolean;\n\n  /**\n   * Enables \"active\" style on tabs. Is usually related to a container having focus.\n   */\n  active?: boolean;\n\n  /**\n   * If set to true, tabs will be wrapped into multiple rows if needed.\n   * NOTE: In the original implementation, in multi row mode, rows are separated by a border. It's not easy to achieve\n   * this when we are implementing this feature with a simple `flex-wrap: wrap` css rule. It doesn't seem that\n   * important, but we can achieve something similar by some css tricks like the ones suggested here:\n   * https://stackoverflow.com/questions/36128333/row-lines-for-flex-container-css\n   * @default false\n   */\n  multiRow?: boolean;\n\n  /**\n   * Only effective when {@link multiRow} is not true.\n   * If set to true and multiRow is not true, it will prevent horizontal scroll of tabs. Depending on the value of\n   * In this case:\n   * - if {@link noOverflowMenu} is not set to true, tabs that can't be fitted into the available space will be\n   *   accessible via an overflow menu.\n   * - if {@link noOverflowMenu} is set to true, the tabs will be fitted into the available space, and they will\n   *   be shrunk when needed.\n   *\n   * @todo: not implemented yet.\n   * @default false\n   */\n  noScroll?: boolean;\n\n  /**\n   * Only effective when {@link multiRow} is not true.\n   * When set to true, tabs that couldn't be fitted into the available space, are either shrunk (if {@link noScroll}\n   * is set to true), or are just accessible by scroll.\n   */\n  noOverflowMenu?: boolean;\n\n  /**\n   * Removes the top and bottom border when passed.\n   * It's still not clear whether such option makes sense or not, but\n   * at least in common use cases like in tool windows, it seems borders are already there and there should be a way\n   * of removing tab borders. On the other hand, when Tabs is used without any assumption about the surrounding UI,\n   * it kind of makes sense to have the top and bottom borders by default. So that's why this is made an option for\n   * now, maybe until things are clearer.\n   *\n   * @default false\n   */\n  noBorders?: boolean;\n\n  TabsComponent?: typeof StyledDefaultTabs;\n  /**\n   *\n   */\n  TabComponent?: typeof StyledDefaultTab;\n};\n\nconst scrollBarDisabledStyle = css`\n  -ms-overflow-style: none; /* for Internet Explorer, Edge */\n  scrollbar-width: none; /* for Firefox */\n  &::-webkit-scrollbar {\n    /* for Chrome/Safari/Webkit */\n    display: none;\n  }\n`;\n\nconst StyledTabList = styled.div<{ multiRow?: boolean }>`\n  display: flex;\n  flex-wrap: ${({ multiRow }) => (multiRow ? \"wrap\" : \"nowrap\")};\n  overflow: auto;\n\n  ${scrollBarDisabledStyle};\n`;\n\n/**\n *\n * TODO: add support for overflow:\n *  - have vertical scroll also scroll tabs\n *  - add support for re-reordering tabs.\n *  - FIX: When a tab that was not selected is removed, selection should not change. It now changes to the tab before the removed one.\n */\nexport const Tabs = <T extends object>({\n  focusable,\n  shouldSelectOnPressUp,\n  active,\n  TabComponent,\n  TabsComponent = StyledDefaultTabs,\n  multiRow,\n  noOverflowMenu,\n  noScroll,\n  noBorders,\n  ...props\n}: TabsProps<T>): React.ReactElement => {\n  const state = useTabListState(props);\n  const ref = React.useRef<HTMLDivElement>(null);\n  const { tabListProps } = useTabList(props, state, ref);\n\n  const { scrolledIndicatorProps, hasOverflow } = useHasOverflow({ ref });\n  const { overflowedElements } = useOverflowObserver(ref);\n  const overflowedKeys = new Set(\n    overflowedElements\n      .map((element) =>\n        element instanceof HTMLElement ? element.dataset[\"key\"] : null\n      )\n      .filter(notNull)\n  );\n\n  useEffect(() => {\n    if (!noScroll) {\n      const scrollableContainer = ref.current;\n      const selectedTabElement = scrollableContainer?.querySelector(\n        `[data-key=\"${state.selectedKey}\"]`\n      ) as HTMLElement;\n      if (scrollableContainer && selectedTabElement) {\n        scrollIntoView(scrollableContainer, selectedTabElement);\n      }\n    } else {\n      // TODO maybe? sample use case: project tool window tabs, when not grouped.\n    }\n  }, [state.selectedKey]);\n  const onOverflowMenuItemSelected = (key: Key) => {\n    state.setSelectedKey(key);\n  };\n  if (noScroll) {\n    throw new Error(\"noScroll is not supported yet.\");\n  }\n  return (\n    <TabsComponent noBorders={noBorders} {...filterDOMProps(props)}>\n      <StyledHorizontalOverflowShadows\n        hasOverflowAtStart={hasOverflow.left}\n        hasOverflowAtEnd={hasOverflow.right}\n        style={{ minWidth: 0 }}\n      >\n        <StyledTabList\n          {...mergeProps(tabListProps, scrolledIndicatorProps)}\n          multiRow={multiRow}\n          ref={ref}\n        >\n          {[...state.collection].map((item) => (\n            <Tab\n              key={item.key}\n              item={item}\n              state={state}\n              focusable={focusable}\n              shouldSelectOnPressUp={shouldSelectOnPressUp}\n              active={active}\n              Component={TabComponent}\n            />\n          ))}\n        </StyledTabList>\n      </StyledHorizontalOverflowShadows>\n      {!noOverflowMenu && (\n        <TabsOverflowMenu\n          collection={state.collection}\n          overflowedKeys={overflowedKeys}\n          onSelect={onOverflowMenuItemSelected}\n        />\n      )}\n    </TabsComponent>\n  );\n};\n","import { RefObject, UIEventHandler, useEffect, useState } from \"react\";\n\nexport function useHasOverflow<T extends HTMLElement>({\n  threshold = 5,\n  ref,\n}: {\n  threshold?: number;\n  ref: RefObject<T>;\n}) {\n  const [hasOverflow, setHasOverflow] = useState({\n    left: false,\n    right: false,\n    top: false,\n    bottom: false,\n  });\n\n  const update = () => {\n    const element = ref.current;\n    if (element) {\n      const offsetLeft = element.scrollLeft;\n      const offsetRight =\n        element.scrollWidth - (element.offsetWidth + element.scrollLeft);\n      const offsetTop = element.scrollTop;\n      const offsetBottom =\n        element.scrollHeight - (element.offsetHeight + element.scrollTop);\n      const newHasOverflow = {\n        top: offsetTop > threshold,\n        bottom: offsetBottom > threshold,\n        left: offsetLeft > threshold,\n        right: offsetRight > threshold,\n      };\n      if (\n        hasOverflow.top !== newHasOverflow.top ||\n        hasOverflow.bottom !== newHasOverflow.bottom ||\n        hasOverflow.left !== newHasOverflow.left ||\n        hasOverflow.right !== newHasOverflow.right\n      ) {\n        setHasOverflow(newHasOverflow);\n      }\n    }\n  };\n  useEffect(update);\n\n  return {\n    scrolledIndicatorProps: {\n      onScroll: update as UIEventHandler<T>,\n    },\n    hasOverflow,\n  };\n}\n","import { Collection, Node } from \"@react-types/shared\";\nimport { Item } from \"@react-stately/collections\";\nimport { Menu, MenuTrigger } from \"@intellij-platform/core/Menu\";\nimport { IconButton } from \"@intellij-platform/core/IconButton\";\nimport { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport React, { Key } from \"react\";\n\nexport const TabsOverflowMenu = <T extends unknown>({\n  collection,\n  overflowedKeys,\n  onSelect,\n}: {\n  collection: Collection<Node<T>>;\n  overflowedKeys: Set<Key>;\n  onSelect: (key: Key) => void;\n}) => (\n  <>\n    {overflowedKeys.size > 0 && (\n      <MenuTrigger\n        align=\"end\"\n        renderMenu={({ menuProps }) => {\n          const items: Iterable<Node<unknown>> = [...collection].filter(\n            (menuItem) => overflowedKeys.has(menuItem.key)\n          );\n          return (\n            <Menu\n              {...menuProps}\n              onAction={(key) => {\n                onSelect(key);\n              }}\n              items={items}\n            >\n              {(item) => (\n                <Item key={item.key} textValue={item.textValue}>\n                  {item.props.inOverflowMenu || item.textValue}\n                </Item>\n              )}\n            </Menu>\n          );\n        }}\n      >\n        {(props, ref) => (\n          <IconButton {...props} ref={ref}>\n            <PlatformIcon icon=\"actions/findAndShowNextMatches\" />\n          </IconButton>\n        )}\n      </MenuTrigger>\n    )}\n  </>\n);\n","import React, { ForwardedRef, HTMLProps } from \"react\";\nimport { TabCloseButton } from \"@intellij-platform/core/Tabs/TabCloseButton\";\nimport { TabContentLayout } from \"@intellij-platform/core/Tabs/TabContentLayout\";\n\ntype ToolWindowTabContentProps = {\n  icon?: React.ReactNode;\n  title: React.ReactNode;\n  /**\n   * Close button for the tab. Use {@link TabCloseButton} to render the close button\n   * for the tab.\n   *\n   * @example\n   * ```tsx\n   * <ToolWindowTabContent\n   *   closeButton={\n   *     <TooltipTrigger\n   *       tooltip={<ActionTooltip actionName=\"Close Tab\" shortcut=\"^⇧F4\" />}\n   *     >\n   *       <TabCloseButton onPress={}></TabCloseButton>\n   *     </TooltipTrigger>\n   *   }\n   * />\n   * ```\n   */\n  closeButton?: React.ReactNode;\n  containerProps?: Omit<HTMLProps<HTMLDivElement>, \"ref\" | \"as\">;\n};\n\nexport const ToolWindowTabContent = React.forwardRef(\n  (\n    { icon, title, closeButton, containerProps }: ToolWindowTabContentProps,\n    ref: ForwardedRef<HTMLDivElement>\n  ) => {\n    return (\n      <TabContentLayout\n        containerProps={containerProps}\n        ref={ref}\n        startIcon={icon}\n        title={title}\n        endIcon={closeButton}\n      />\n    );\n  }\n);\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { Theme } from \"@intellij-platform/core/Theme\";\nimport { StyledDefaultTab } from \"@intellij-platform/core/Tabs/StyledDefaultTab\";\nimport {\n  getTabThemeStyles,\n  TabTheme,\n} from \"@intellij-platform/core/Tabs/TabTheme\";\n\nexport const toolWindowTabTheme = ({ theme }: { theme: Theme }): TabTheme => ({\n  borderColor: theme.color(\"ToolWindow.HeaderTab.borderColor\"),\n  underlineHeight: theme.value<number>(\"ToolWindow.HeaderTab.underlineHeight\"),\n  background: \"transparent\",\n  underlinedTabInactiveBackground: theme.color(\n    \"ToolWindow.HeaderTab.underlinedTabInactiveBackground\"\n  ),\n  underlinedTabBackground: theme.color(\n    \"ToolWindow.HeaderTab.underlinedTabBackground\"\n  ),\n  hoverInactiveBackground:\n    theme.color(\"ToolWindow.HeaderTab.hoverInactiveBackground\") ??\n    theme.color(\"ToolWindow.HeaderTab.hoverBackground\"),\n  hoverBackground: theme.color(\"ToolWindow.HeaderTab.hoverBackground\"),\n  inactiveUnderlineColor: theme.color(\n    \"ToolWindow.HeaderTab.inactiveUnderlineColor\"\n  ),\n  underlineColor: theme.color(\"ToolWindow.HeaderTab.underlineColor\"),\n\n  underlinedTabInactiveForeground:\n    theme.color(\"ToolWindow.HeaderTab.underlinedTabInactiveForeground\") ??\n    theme.color(\"ToolWindow.HeaderTab.underlinedTabForeground\"),\n  underlinedTabForeground: theme.color(\n    \"ToolWindow.HeaderTab.underlinedTabForeground\"\n  ),\n});\nexport const StyledToolWindowTab = styled(StyledDefaultTab)`\n  padding: 0 0.7rem;\n  ${({ theme }) => getTabThemeStyles(toolWindowTabTheme({ theme }))};\n`;\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { getTabsThemeStyles } from \"@intellij-platform/core/Tabs/TabTheme\";\nimport { StyledDefaultTabs } from \"@intellij-platform/core/Tabs/StyledDefaultTabs\";\nimport { toolWindowTabTheme } from \"./StyledToolWindowTab\";\n\nexport const StyledToolWindowTabs = styled(StyledDefaultTabs)`\n  ${({ theme }) => getTabsThemeStyles(toolWindowTabTheme({ theme }))};\n`;\n","import React from \"react\";\nimport { Tabs, TabsProps } from \"@intellij-platform/core/Tabs/Tabs\";\nimport { StyledToolWindowTab } from \"./StyledToolWindowTab\";\nimport { StyledToolWindowTabs } from \"./StyledToolWindowTabs\";\n\ntype ToolWindowTabsProps<T extends object> = Omit<\n  TabsProps<T>,\n  \"TabComponent\" | \"TabsComponent\" | \"focusable\"\n>;\n\nexport const ToolWindowTabs = <T extends object>(\n  props: ToolWindowTabsProps<T>\n) => (\n  <Tabs\n    {...props}\n    TabComponent={StyledToolWindowTab}\n    TabsComponent={StyledToolWindowTabs}\n    focusable={false}\n    shouldSelectOnPressUp\n  />\n);\n","export type TextRange = { from: number; to: number };\n\nexport function isEmptyRange(range: TextRange) {\n  return range.from > range.to;\n}\n\nexport function getAllRanges(\n  ranges: TextRange[],\n  length: number\n): Array<[TextRange, boolean]> {\n  const result: Array<[TextRange, boolean]> = [];\n  if (!ranges?.length) {\n    return [[{ from: 0, to: length - 1 }, false]];\n  }\n  if (ranges[0].from > 0) {\n    result.push([{ from: 0, to: ranges[0].from - 1 }, false]);\n  }\n  ranges.forEach(({ from, to }, index) => {\n    result.push([{ from, to }, true]);\n    const gapRange: TextRange = ranges[index + 1]\n      ? { from: to + 1, to: ranges[index + 1].from - 1 }\n      : { from: to + 1, to: length - 1 };\n    if (!isEmptyRange(gapRange)) {\n      result.push([gapRange, false]);\n    }\n  });\n  return result;\n}\n\nexport function createRangesFromIndices(indices: number[]): TextRange[] {\n  return indices.reduce((ranges, index) => {\n    const lastRange = ranges.slice(-1)[0];\n    if (lastRange?.to === index - 1) {\n      return [...ranges.slice(0, -1), { from: lastRange.from, to: index }];\n    }\n    return [...ranges, { from: index, to: index }];\n  }, [] as TextRange[]);\n}\n","import React from \"react\";\nimport { getAllRanges, TextRange } from \"../TextRange\";\nimport { styled } from \"../styled\";\n\nconst HighlightedMatch = styled.span`\n  background: ${({ theme }) =>\n    `linear-gradient(${theme.color(\n      \"SearchMatch.startBackground\",\n      \"#ffeaa2b3\"\n    )}, ${theme.color(\"SearchMatch.endBackground\", \"#ffd042b3\")})`};\n  color: #000;\n  border-radius: 3px;\n`;\n\n/**\n * Renders the children (which must be a string), with highlights wrapped in spans with the highlight style.\n * Note: this component doesn't render a container. It just highlights the specified ranges.\n */\nexport function TextWithHighlights({\n  children,\n  highlights,\n}: {\n  children: string;\n  highlights: TextRange[] | null;\n}): React.ReactElement {\n  const parts: Array<[TextRange, boolean]> = highlights\n    ? getAllRanges(highlights, children.length)\n    : [[{ from: 0, to: children.length }, false]];\n  return (\n    <>\n      {parts.map(([{ from, to }, highlighted]) => {\n        const text = children.slice(from, to + 1);\n        return (\n          // TODO: key\n          <React.Fragment key={`${from}_${to}`}>\n            {highlighted ? <HighlightedMatch>{text}</HighlightedMatch> : text}\n          </React.Fragment>\n        );\n      })}\n    </>\n  );\n}\n","// language=JSRegexp\nconst numberPattern = \"[0-9]{0,3}.?[0-9]*\";\n\nconst parseComponent = (componentStr: string, index: number) =>\n  componentStr\n    ? index < 3\n      ? parseInt(componentStr)\n      : Math.round(Math.min(parseFloat(componentStr), 1) * 255)\n    : undefined;\n\nconst parseHexRgba = (str: string) =>\n  str\n    .match(/^#?([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})?$/i)\n    ?.slice(1, 5)\n    .map((i) => (i ? parseInt(i, 16) : undefined));\nconst parseShorthandHex = (str: string) =>\n  str\n    .match(/^#?([0-9A-F])([0-9A-F])([0-9A-F])$/i)\n    ?.slice(1, 4)\n    .map((i) => (i ? parseInt(i + i, 16) : undefined));\nconst parseRgb = (str: string) =>\n  str\n    .match(\n      new RegExp(\n        `^rgb\\\\(\\\\s*(${numberPattern})\\\\s*,\\\\s*(${numberPattern})\\\\s*,\\\\s*(${numberPattern}\\\\s*)\\\\)$`\n      )\n    )\n    ?.slice(1, 5)\n    .map(parseComponent);\nconst parseRgba = (str: string) =>\n  str\n    .match(\n      new RegExp(\n        `^rgba\\\\(\\\\s*(${numberPattern})\\\\s*,\\\\s*(${numberPattern})\\\\s*,\\\\s*(${numberPattern})\\\\s*,\\\\s*(${numberPattern}\\\\s*)\\\\)$`\n      )\n    )\n    ?.slice(1, 5)\n    .map(parseComponent);\n\n/**\n * parses a color string into rgba components.\n * @param str\n */\nexport const parseColorString = (\n  str: string\n): [number, number, number, number?] | null => {\n  const result = [parseHexRgba, parseShorthandHex, parseRgb, parseRgba].reduce<\n    (number | undefined)[] | undefined\n  >((result, parse) => result || parse(str), undefined);\n  return Array.isArray(result) &&\n    result.slice(0, 3).every((c) => Number.isInteger(c))\n    ? (result as [number, number, number, number?])\n    : null;\n};\n","import { parseColorString } from \"./parseColorString\";\n\n/**\n * A Color class resembling AWT Color\n */\nexport class Color {\n  public readonly r: number;\n  public readonly g: number;\n  public readonly b: number;\n  public readonly a: number;\n\n  private static readonly FACTOR = 0.7;\n\n  constructor(r: number, g: number, b: number, a?: number);\n  constructor(rgba: string);\n  constructor(rgba: Color);\n  constructor(\n    rgba: string | number | Color,\n    g?: number,\n    b?: number,\n    a: number = 255\n  ) {\n    let r: number;\n    if (typeof rgba === \"string\") {\n      [r = NaN, g = NaN, b = NaN, a = 255] = parseColorString(rgba) || [];\n    } else if (rgba instanceof Color) {\n      [r, g, b, a] = [rgba.r, rgba.g, rgba.b, rgba.a];\n    } else {\n      r = rgba;\n    }\n    this.r = r;\n    this.g = g!;\n    this.b = b!;\n    this.a = a < 1 ? Math.round(a * 255) : a;\n  }\n\n  isValid() {\n    return (\n      Number.isInteger(this.r) &&\n      Number.isInteger(this.g) &&\n      Number.isInteger(this.b) &&\n      Number.isInteger(this.a)\n    );\n  }\n\n  /**\n   * Extra method for changing transparency\n   */\n  withTransparency(alpha: number) {\n    return new Color(this.r, this.g, this.b, alpha);\n  }\n\n  brighter() {\n    let { r, g, b, a: alpha } = this;\n    const int = Math.floor,\n      FACTOR = Color.FACTOR;\n    // The rest is copy paste of java.awt.Color (only `int i` is changed to `let i` :D)\n    let i = int(1.0 / (1.0 - FACTOR));\n    if (r == 0 && g == 0 && b == 0) {\n      return new Color(i, i, i, alpha);\n    }\n    if (r > 0 && r < i) r = i;\n    if (g > 0 && g < i) g = i;\n    if (b > 0 && b < i) b = i;\n\n    return new Color(\n      Math.min(int(r / FACTOR), 255),\n      Math.min(int(g / FACTOR), 255),\n      Math.min(int(b / FACTOR), 255),\n      alpha\n    );\n  }\n\n  darker() {\n    const FACTOR = Color.FACTOR;\n    const int = Math.floor;\n\n    return new Color(\n      Math.max(int(this.r * FACTOR), 0),\n      Math.max(int(this.g * FACTOR), 0),\n      Math.max(int(this.b * FACTOR), 0),\n      this.a\n    );\n  }\n\n  static brighter(color: string): string {\n    // note: we can't type args simply with ConstructorParameters<typeof Color>.\n    // see more: https://github.com/microsoft/TypeScript/issues/37079\n    return new Color(color).brighter().toString();\n  }\n\n  blend(colorOrColorString: Color | string) {\n    const color =\n      typeof colorOrColorString === \"string\"\n        ? new Color(colorOrColorString)\n        : colorOrColorString;\n    const getBlendedValue = (component: \"r\" | \"g\" | \"b\") =>\n      Math.round(\n        (color.a / 255) * color[component] +\n          (this.a / 255) * (1 - color.a / 255) * this[component]\n      );\n    return new Color(\n      getBlendedValue(\"r\"),\n      getBlendedValue(\"g\"),\n      getBlendedValue(\"b\")\n    );\n  }\n\n  toString() {\n    const toString = (component: number) =>\n      Number.isNaN(component) ? \"\" : component.toString(16).padStart(2, \"0\");\n    const r = toString(this.r);\n    const g = toString(this.g);\n    const b = toString(this.b);\n    const a = this.a === 255 ? \"\" : toString(this.a);\n    return `#${r}${g}${b}${a}`;\n  }\n}\n","import React, { CSSProperties, useRef, useState } from \"react\";\nimport styled, { useTheme } from \"styled-components\";\nimport {\n  BottomResizer,\n  LeftResizer,\n  RightResizer,\n  TopResizer,\n} from \"../Resizer\";\nimport { ResizerProps } from \"../Resizer/ResizerProps\";\nimport { Theme } from \"../Theme/Theme\";\n\n/**\n * Props are named mostly based on ThreeComponentsSplitter in Intellij Platform.\n */\nexport interface ThreeViewSplitterProps {\n  orientation?: \"horizontal\" | \"vertical\";\n  resizerProps?: Partial<\n    Omit<ResizerProps, \"onResize\" | \"onResizeStarted\" | \"onResizeEnd\">\n  >;\n  innerView?: React.ReactNode;\n  innerViewMinSize?: number;\n  firstView?: React.ReactNode;\n  firstSize?: number | null;\n  firstViewMinSize?: number;\n  lastView?: React.ReactNode;\n  lastSize?: number | null;\n  lastViewMinSize?: number;\n  onFirstResize?: (size: number) => void;\n  onLastResize?: (size: number) => void;\n  style?: CSSProperties;\n  className?: string;\n}\n\nconst StyledSplitterContainer = styled.div<{\n  orientation: \"horizontal\" | \"vertical\";\n}>`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  flex-direction: ${({ orientation }) =>\n    orientation === \"vertical\" ? \"column\" : \"row\"};\n`;\n\nconst StyledView = styled.div`\n  // The default overflow visible should be changed obviously. Not sure if there is any layout implication\n  // in using 'auto' instead of hidden, to provide scroll behaviour by default, but even if we realize later\n  // that we need to set overflow to hidden here, we can have scrollable content inside the inner view via an\n  // intermediate element inside the inner view, with overflow set to auto and width set to 100%.\n  overflow: auto;\n`;\n\nconst StyledSplitterInnerView = styled(StyledView)`\n  flex: 1;\n`;\n\n/**\n * Corresponding to\n * [ThreeComponentsSplitter](https://github.com/JetBrains/intellij-community/blob/58dbd93e9ea527987466072fa0bfbf70864cd35f/platform/platform-api/src/com/intellij/openapi/ui/ThreeComponentsSplitter.java#L40-L40)\n * `firstView` and `lastView` are optional, and if not provided, the corresponding resizer is not rendered.\n * innerView is supposed to fill the remaining space, while firstView and lastView have specific sizes.\n * size changes in a resize interaction is not reported and is handled by local state in the component. That's\n * to prevent frequent state updates in a higher level which can be expensive. It's also based on this assumption\n * that in the usage side there is no need for any control over resizing or even knowing the intermediate state.\n * Maybe a minSize and maxSize would be the extent of the required control over resizing. But anyway, this model\n * of keeping the size as a local state during a resize session is something that can be changed if needed.\n *\n * Features:\n * - Relative sizing (fraction of the container)\n * - Default size by content\n * - Change handling only when resize is done.\n *\n * TODO: max and min size not implemented\n * TODO: add support for uncontrolled version\n */\nexport const ThreeViewSplitter: React.FC<ThreeViewSplitterProps> = ({\n  orientation = \"horizontal\",\n  firstView,\n  firstSize,\n  lastView,\n  lastSize,\n  onFirstResize,\n  onLastResize,\n  resizerProps: resizerPropsOverrides = {},\n  innerView,\n  firstViewMinSize,\n  lastViewMinSize,\n  innerViewMinSize,\n  ...containerProps\n}: ThreeViewSplitterProps): React.ReactElement => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const firstViewRef = useRef<HTMLDivElement>(null);\n  const lastViewRef = useRef<HTMLDivElement>(null);\n  const [firstSizeState, setFirstSizeState] = useState<number | null>(null);\n  const [lastSizeState, setLastSizeState] = useState<number | null>(null);\n  const theme = useTheme() as Theme;\n\n  const value = <T1, T2>(horizontalValue: T1, verticalValue: T2) =>\n    orientation === \"horizontal\" ? horizontalValue : verticalValue;\n\n  const FirstResizer: React.ComponentType<ResizerProps> = value(\n    RightResizer,\n    BottomResizer\n  );\n  const SecondResizer: React.ComponentType<ResizerProps> = value(\n    LeftResizer,\n    TopResizer\n  );\n  const sizeStyleProp = value(\"width\", \"height\");\n  const minSizeStyleProp = value(\"minWidth\", \"minHeight\");\n\n  const resizerProps: ThreeViewSplitterProps[\"resizerProps\"] = {\n    background: theme.commonColors.contrastBorder,\n    size: 1,\n    ...resizerPropsOverrides,\n  };\n\n  const isFractionSize = (size: number) => size < 1;\n\n  const normalizeSize = (\n    size: number | undefined | null\n  ): CSSProperties[\"width\" | \"height\"] =>\n    size != null\n      ? isFractionSize(size)\n        ? `${size * 100}%`\n        : Math.round(size)\n      : undefined;\n\n  const getSize = (elem: HTMLElement): number =>\n    value(elem.offsetWidth, elem.offsetHeight);\n\n  const getNewSize = (currentSize: number, newSize: number) => {\n    if (currentSize != null && isFractionSize(currentSize)) {\n      if (!containerRef.current) {\n        throw new Error(\n          \"ThreeViewSplitter: Could not locate container to calculate fraction size\"\n        );\n      }\n      const containerSize = value(\n        containerRef.current.offsetWidth,\n        containerRef.current.offsetHeight\n      );\n      const newFractionSize = newSize / containerSize;\n      return newFractionSize < 1 ? newFractionSize : currentSize;\n    } else {\n      return Math.max(newSize, 1);\n    }\n  };\n\n  const getActualSize = (viewElem: HTMLElement | null): number | null => {\n    if (!containerRef.current || !viewElem) {\n      return null;\n    }\n    const actualSize = getSize(viewElem);\n    if (viewElem.style[sizeStyleProp]?.includes(\"%\")) {\n      return actualSize / getSize(containerRef.current);\n    }\n    return actualSize;\n  };\n\n  const currentLastSize = normalizeSize(lastSizeState ?? lastSize);\n  const currentFirstSize = normalizeSize(firstSizeState ?? firstSize);\n  return (\n    <StyledSplitterContainer\n      ref={containerRef}\n      orientation={orientation}\n      {...containerProps}\n    >\n      {firstView && (\n        <>\n          <StyledView\n            ref={firstViewRef}\n            style={{\n              [sizeStyleProp]: currentFirstSize,\n              // if other side is resizing, minWidth/minHeight is set so that this side is not get affected.\n              // It may make sense to allow opting out of this behaviour, if it's considered a feature to be able to\n              // \"push\" the other side too when expanding one side.\n              [minSizeStyleProp]:\n                (lastSizeState !== null ? currentFirstSize : undefined) ??\n                firstViewMinSize,\n            }}\n          >\n            {firstView}\n          </StyledView>\n          <FirstResizer\n            onResizeStarted={() => {\n              const size = firstViewRef.current\n                ? getSize(firstViewRef.current)\n                : 0;\n              setFirstSizeState(firstSize ?? size);\n              return size;\n            }}\n            onResize={(newSize) => {\n              if (firstSizeState != null) {\n                setFirstSizeState(getNewSize(firstSizeState, newSize));\n              }\n            }}\n            onResizeEnd={() => {\n              const actualSize = getActualSize(firstViewRef.current);\n              if (actualSize !== null) {\n                onFirstResize?.(actualSize);\n              }\n              setFirstSizeState(null);\n            }}\n            {...resizerProps}\n          />\n        </>\n      )}\n      {innerView && (\n        <StyledSplitterInnerView\n          style={{\n            [minSizeStyleProp]: innerViewMinSize,\n          }}\n        >\n          {innerView}\n        </StyledSplitterInnerView>\n      )}\n      {lastView && (\n        <>\n          <SecondResizer\n            onResizeStarted={() => {\n              const size = getSize(lastViewRef.current!);\n              setLastSizeState(lastSize ?? size);\n              return size;\n            }}\n            onResize={(newSize) => {\n              if (lastSizeState != null) {\n                setLastSizeState(getNewSize(lastSizeState, newSize));\n              }\n            }}\n            onResizeEnd={() => {\n              const actualSize = getActualSize(lastViewRef.current);\n              if (actualSize !== null) {\n                onLastResize?.(actualSize);\n              }\n              setLastSizeState(null);\n            }}\n            {...resizerProps}\n          />\n          <StyledView\n            ref={lastViewRef}\n            style={{\n              [sizeStyleProp]: currentLastSize,\n              // if other side is resizing, minWidth/minHeight is set so that this side is not get affected.\n              // It may make sense to allow opting out of this behaviour, if it's considered a feature to be able to\n              // \"push\" the other side too when expanding one side.\n              [minSizeStyleProp]:\n                (firstSizeState !== null ? currentLastSize : undefined) ??\n                lastViewMinSize,\n            }}\n          >\n            {lastView}\n          </StyledView>\n        </>\n      )}\n    </StyledSplitterContainer>\n  );\n};\n","import { isMac } from \"@react-aria/utils\";\nimport React, { HTMLProps, useRef } from \"react\";\nimport { css } from \"styled-components\";\nimport { WINDOW_SHADOW } from \"../style-constants\";\nimport { styled } from \"../styled\";\nimport { Theme } from \"../Theme/Theme\";\nimport { FloatWindowState } from \"./ToolWindowsState/ToolWindowsLayoutState\";\nimport { WindowBounds } from \"./ToolWindowsState/ToolWindowsState\";\nimport {\n  OverlayInteractionHandler,\n  OverlayResizeHandles,\n  useResizableMovableOverlay,\n} from \"@intellij-platform/core/Overlay\";\nimport { Overlay } from \"@react-aria/overlays\";\n\nconst FLOAT_WINDOW_MIN_WIDTH = 100;\nconst FLOAT_WINDOW_MIN_HEIGHT = 40; // in Intellij Platform it's zero but there is window frame which doesn't exist here\n\nconst StyledFloatView = styled.div`\n  box-sizing: border-box;\n  position: fixed;\n  background: ${({ theme }) => theme.commonColors.panelBackground};\n  color: ${({ theme }) => theme.color(\"*.foreground\")};\n  // border color doesn't seem to be correct and needs more investigation. might be even os-specific and outside\n  // theme colors.\n  border: ${({ theme }) => `1px solid ${theme.color(\"Component.borderColor\")}`};\n  ${WINDOW_SHADOW};\n  ${isMac() &&\n  css<{ theme: Theme }>`\n    border-radius: 8px;\n  `}\n  z-index: 2;\n`;\n\n/**\n * Container for tool windows in float view mode. It handles some visual aspects like the border and shadow, as well as\n * UI interactions for changing the floatingBound of the tool window.\n */\nexport const FloatView: React.FC<\n  {\n    state: FloatWindowState;\n    onBoundsChange: (bounds: WindowBounds) => void;\n  } & Omit<HTMLProps<HTMLDivElement>, \"ref\" | \"as\">\n> = ({ children, state: { bounds }, onBoundsChange, ...otherProps }) => {\n  const ref = useRef(null);\n  const { bounds: boundsStyle, overlayInteractionHandlerProps } =\n    useResizableMovableOverlay(ref, {\n      bounds,\n      onBoundsChange,\n    });\n\n  return (\n    <Overlay>\n      <StyledFloatView\n        {...otherProps}\n        ref={ref}\n        style={{ ...otherProps.style, ...boundsStyle }}\n      >\n        <OverlayInteractionHandler {...overlayInteractionHandlerProps}>\n          <OverlayResizeHandles\n            minWidth={FLOAT_WINDOW_MIN_WIDTH}\n            minHeight={FLOAT_WINDOW_MIN_HEIGHT}\n          />\n          {children}\n        </OverlayInteractionHandler>\n      </StyledFloatView>\n    </Overlay>\n  );\n};\n","import { move } from \"ramda\";\nimport React, { HTMLProps, Key, useState } from \"react\";\nimport { FloatView } from \"./FloatView\";\nimport { FloatWindowState } from \"./ToolWindowsState/ToolWindowsLayoutState\";\nimport { WindowBounds } from \"./ToolWindowsState/ToolWindowsState\";\n\n// NOTE: useStackedLayersState and useStackedLayers are generic but kept here since there is no other use case at the\n// moment. They should be moved to their own file(s) when/if other use case came up.\n\ninterface StackedLayersState<T> {\n  /**\n   * Sorted list of items representing layers.\n   */\n  sorted: T[];\n  /**\n   * A function to be used when the layer should be brought to front, typically based on some UI interaction.\n   */\n  bringToFront: (index: number) => void;\n}\n\n/**\n * State management for a stacked list of layers with **bring to front** functionality.\n */\nfunction useStackedLayersState<T, K = React.Key>(\n  /**\n   * A list of arbitrary items representing stacked layers.\n   */\n  items: T[],\n  /**\n   * A function for converting each item into a key which consistently identifies each item, in subsequent renders.\n   * It's used to maintain current sorting state. Although it can be of any type, it's usually a string or number.\n   */\n  getKey: (item: T) => K\n): StackedLayersState<T> {\n  // Local state for now, but can easily change to controllable if needed.\n  const [sortedKeys, setSortedKeys] = useState<K[]>([]);\n  const sorted = items.sort(\n    (a, b) => sortedKeys.indexOf(getKey(a)) - sortedKeys.indexOf(getKey(b))\n  );\n  return {\n    sorted,\n    bringToFront: (index: number) => {\n      setSortedKeys(move(index, -1, sorted).map(getKey));\n    },\n  };\n}\n\n/**\n * Given the state of a stacked list of layers, returns DOM props to be applied to each layer for interaction-based\n * \"bring to front\" behaviour.\n */\nfunction useStackedLayers<T>(state: StackedLayersState<T>): {\n  layersProps: Array<HTMLProps<HTMLElement>>;\n} {\n  return {\n    layersProps: state.sorted.map((_, index) => ({\n      onFocus: () => {\n        state.bringToFront(index);\n      },\n    })),\n  };\n}\n\n/**\n * Renders float tool windows.\n * - handles resize and move actions for float windows.\n * - handles layering of float tool windows.\n */\nexport function FloatToolWindows({\n  floatWindows = [],\n  onBoundsChange,\n  renderToolWindow,\n}: {\n  floatWindows: FloatWindowState[] | undefined;\n  onBoundsChange: (key: Key, bounds: WindowBounds) => void;\n  renderToolWindow: (key: Key) => React.ReactNode;\n}) {\n  const stackedFloatWindows = useStackedLayersState(\n    floatWindows,\n    ({ key }) => key\n  );\n  const { layersProps } = useStackedLayers(stackedFloatWindows);\n  // sorted list is used to render layers. We could as well use z-index and always render with the same order, but\n  // it doesn't really matter as long as key is set.\n  return (\n    <>\n      {stackedFloatWindows.sorted.map((toolWindow, index) => (\n        <FloatView\n          key={toolWindow.key}\n          state={toolWindow}\n          {...layersProps[index]}\n          onBoundsChange={(bounds) => onBoundsChange(toolWindow.key, bounds)}\n        >\n          {renderToolWindow(toolWindow.key)}\n        </FloatView>\n      ))}\n    </>\n  );\n}\n","import React, {\n  Key,\n  MutableRefObject,\n  RefObject,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { useLatest } from \"../utils/useLatest\";\nimport { DropPosition } from \"./createGetDropPosition\";\nimport { UseElementMoveOptions } from \"./useElementMove\";\nimport { Anchor } from \"./utils\";\n\ntype Rect = Omit<ClientRect, \"toJSON\" | \"x\" | \"y\">;\n\ntype StripeLocation<T extends unknown> = {\n  index: number;\n  anchor: Anchor;\n  isSplit: boolean;\n};\ntype MovableStripeProps<T> = {\n  stripeElRef: React.RefObject<HTMLElement>;\n  getKey: (item: T) => Key;\n  anchor: Anchor;\n  mainItems: T[];\n  splitItems: T[];\n  createGetDropPosition: (\n    key: Key\n  ) => (draggedRect: Rect) => DropPosition | null;\n};\n\ntype MovableToolWindowStripeContextType<T> = {\n  addStripe: <T>(\n    id: string,\n    propsRef: MutableRefObject<MovableStripeProps<T>>\n  ) => () => void;\n  startMove: (id: string, args: { from: Rect; key: Key }) => void;\n  move: (args: { to: Rect }) => void;\n  endMove: () => void;\n  dropPosition: null | { id: string; dropPosition: DropPosition };\n  draggingKey: Key | null;\n  draggingRect: Rect | null;\n};\n\nexport type MovableToolWindowStripeProviderProps<T = unknown> = {\n  children: React.ReactNode;\n  onMove: (args: { from: StripeLocation<T>; to: StripeLocation<T> }) => void;\n};\n\nconst MovableToolWindowStripeContext =\n  React.createContext<MovableToolWindowStripeContextType<any> | null>(null);\n\n/**\n * A wrapper component to render around `ToolWindowStripe`s to make their button movable. Stripe buttons then become\n * draggable and can be moved either within the same `ToolWindowStripe` or across different ones.\n * @param onMove: called when a stripe button is moved from one anchor to another.\n * @param children: child element tree, containing one or more ToolWindowStripe elements. No need to be direct children.\n */\nexport const MovableToolWindowStripeProvider = <T extends unknown>({\n  onMove,\n  children,\n}: MovableToolWindowStripeProviderProps<T>) => {\n  const stripes = useRef<{\n    [id: string]: RefObject<MovableStripeProps<T>>;\n  }>({});\n  const [draggingRect, setDraggingRect] = useState<Rect | null>(null);\n  const [draggingKey, setDraggingKey] = useState<Key | null>(null);\n  const [dropPosition, setDropPosition] = useState<{\n    id: string;\n    dropPosition: DropPosition;\n  } | null>(null);\n  const getDropPositionRef = useRef<\n    (to: Rect) => {\n      id: string;\n      dropPosition: DropPosition;\n    } | null\n  >(() => null);\n  const moveStartLocationRef = useRef<null | {\n    id: string;\n    index: number;\n    anchor: Anchor;\n    isSplit: boolean;\n  }>(null);\n\n  const contextValue = useMemo(\n    (): MovableToolWindowStripeContextType<T> => ({\n      addStripe: (id, propsRef) => {\n        if (stripes.current[id]) {\n          console.error(`multiple stripes with the same id \"${id}`);\n        }\n        // @ts-expect-error\n        stripes.current[id] = propsRef;\n        return () => {\n          delete stripes.current[id];\n        };\n      },\n      startMove: (id, { from, key }) => {\n        const stripe = stripes.current[id]?.current;\n        if (!stripe) {\n          return;\n        }\n        const { stripeElRef } = stripe;\n        const stripeElement = stripeElRef.current!;\n        const getItemRect = (key: Key) =>\n          stripeElement\n            .querySelector(`[data-key=\"${key}\"]`)! // FIXME\n            .getBoundingClientRect();\n\n        // Running the following two state setters immediately affect the layout\n        // in a way that is necessary for drop position calculation, so the order\n        // is important\n        setDraggingRect(getItemRect(key).toJSON());\n        setDraggingKey(key);\n\n        const indexInMain = stripe.mainItems.findIndex(\n          (item) => stripe.getKey(item) === key\n        );\n        const indexInSplit = stripe.splitItems.findIndex(\n          (item) => stripe.getKey(item) === key\n        );\n        moveStartLocationRef.current = {\n          id,\n          anchor: stripe.anchor,\n          index: indexInMain > -1 ? indexInMain : indexInSplit,\n          isSplit: indexInSplit > -1,\n        };\n\n        const dropPositionGetters = Object.entries(stripes.current).map(\n          ([id, stripe]) =>\n            [id, stripe.current!.createGetDropPosition(key)] as const\n        );\n        const getDropPosition = (draggedRect: Rect) => {\n          for (const [id, getDropPosition] of dropPositionGetters) {\n            const dropPosition = getDropPosition(draggedRect);\n            if (dropPosition) {\n              return {\n                id,\n                dropPosition,\n              };\n            }\n          }\n          return null;\n        };\n\n        setDropPosition(getDropPosition(from));\n\n        getDropPositionRef.current = getDropPosition;\n      },\n      move: ({ to }) => {\n        setDropPosition(getDropPositionRef.current(to));\n      },\n      endMove: () => {\n        if (dropPosition && draggingKey) {\n          onMove({\n            from: moveStartLocationRef.current!,\n            to: {\n              anchor: dropPosition.id as Anchor /*FIXME*/,\n              index: dropPosition.dropPosition.index,\n              isSplit: dropPosition.dropPosition.split,\n            },\n          });\n        }\n        setDraggingKey(null);\n        setDropPosition(null);\n        setDraggingRect(null);\n      },\n      dropPosition,\n      draggingRect,\n      draggingKey,\n    }),\n    [dropPosition, draggingKey, draggingRect]\n  );\n\n  return (\n    <MovableToolWindowStripeContext.Provider value={contextValue}>\n      {children}\n    </MovableToolWindowStripeContext.Provider>\n  );\n};\n\nexport function useMovableStripeButtons<T>(props: MovableStripeProps<T>) {\n  // Seems reasonable to assume anchor is unique. Also current onMove signature is coupled with anchor, not a more generic id.\n  const id = props.anchor;\n  const context = useContext(MovableToolWindowStripeContext);\n  const latestPropsRef = useLatest(props);\n  useEffect(() => {\n    if (context) {\n      return context.addStripe(id, latestPropsRef);\n    }\n  }, [context, id]);\n\n  const getProps = (\n    key: Key\n  ): Pick<\n    Required<UseElementMoveOptions<unknown>>,\n    \"onMoveStart\" | \"onMove\" | \"onMoveEnd\"\n  > & { moveDisabled: boolean } => ({\n    moveDisabled: !context,\n    onMoveStart: ({ from }) => {\n      context?.startMove?.(id, { from, key });\n    },\n    onMove: ({ to }) => {\n      context?.move({ to });\n    },\n    onMoveEnd: () => {\n      context?.endMove();\n    },\n  });\n  return {\n    getProps,\n    draggingRect: context?.draggingRect ?? null,\n    dropPosition:\n      context?.dropPosition?.id === id\n        ? context?.dropPosition.dropPosition\n        : null,\n    draggingKey: context?.draggingKey ?? null,\n  };\n}\n","import { styled } from \"../styled\";\nimport { css } from \"styled-components\";\n\nconst TopStripe = styled.div`\n  display: flex; // default display, which is block causes an unwanted minimum height\n  grid-area: ts;\n`;\nconst BottomStripe = styled.div`\n  display: flex; // default display, which is block causes an unwanted minimum height\n  grid-area: bs;\n`;\nconst LeftStripe = styled.div`\n  grid-area: ls;\n`;\nconst RightStripe = styled.div`\n  grid-area: rs;\n`;\nconst InnerView = styled.div`\n  grid-area: main;\n  min-height: 0; // necessary to prevent overflow;\n  position: relative; // necessary for undock views which are absolute positioned\n  background: inherit;\n  min-width: 0; // very important for layout. If not set, resizing tool windows can cause weird scrollbar inside tool windows pane.\n`;\n\n/**\n * The container which renders top,bottom,left and right stripes with a centered content.\n * responsible only for the layout of the stripes and the centered content. layout doesn't\n * include the opened tool windows on different sides and is just about the stripes around\n * the center area.\n * It also supports toggling stripes visibility.\n */\nconst Shell = styled.div<{ hideStripes: boolean }>`\n  display: grid;\n  grid-template-columns: min-content auto min-content;\n  grid-template-rows: min-content auto min-content;\n  grid-template-areas:\n    \".   ts   .\"\n    \"ls main rs\"\n    \".   bs   .\";\n\n  background: ${({ theme }) => theme.commonColors.panelBackground};\n  color: ${({ theme }) => theme.color(\"*.foreground\")};\n  ${({ hideStripes }) =>\n    hideStripes &&\n    css`\n      ${TopStripe},\n      ${BottomStripe}, \n      ${LeftStripe}, \n      ${RightStripe} {\n        display: none;\n      }\n    `}\n`;\n\nexport const StyledToolWindowOuterLayout = {\n  Shell,\n  TopStripe,\n  BottomStripe,\n  LeftStripe,\n  RightStripe,\n  InnerView,\n};\n","import { compose, filter, groupBy, map, pipe, prop, sortBy } from \"ramda\";\nimport { Key } from \"react\";\nimport { Anchor, isHorizontalToolWindow } from \"../utils\";\nimport {\n  ToolWindowsState,\n  ToolWindowState,\n  ViewMode,\n} from \"./ToolWindowsState\";\n\ntype ToolWindowStateWithKey = { key: Key } & ToolWindowState;\n\nexport interface StripesState {\n  main: Key[];\n  split: Key[];\n  activeKeys: Key[];\n}\n\n/**\n * Represents UI state of the split view (aka secondary or side view) within a docked view at one of the four sides.\n */\ntype SideDockedSplitState = {\n  key: Key;\n  /**\n   * relative size of the split view inside a docked view. Note that this is intentionally a fraction size (0≤size<1),\n   * based on the expected behaviour. split views inside a docked view are not fixed sized and resizing the window\n   * affect their size. This is not the case for the docked views themselves inside the main layout, which have fixed\n   * size which is not affected by window resizing.\n   */\n  sizeFraction: number;\n};\n\n// A potential improvement for this and similar nullable types like SideDockedState.split might be to avoid null type\n// and have it like { open: false} | {open: true, ...relevantProps}\n// Not sure if it's really preferred in terms of usage in the react component.\nexport type SideDockedState = null | {\n  size: number;\n  mainKey: Key;\n  split: SideDockedSplitState | null;\n};\n\nexport type SideUnDockedState = null | {\n  size: number;\n  key: Key;\n};\n\nexport interface SideState {\n  docked: SideDockedState;\n  undocked: SideUnDockedState;\n  stripes: StripesState;\n}\n\nexport interface FloatWindowState {\n  key: Key;\n  bounds: Exclude<ToolWindowState[\"floatingBounds\"], undefined>;\n}\n\n/**\n * Derived from ToolWindowsState, it represents the same information in a away that is suitable for ToolWindows\n * component to render the layout.\n */\nexport interface ToolWindowsLayoutState {\n  left: SideState;\n  top: SideState;\n  right: SideState;\n  bottom: SideState;\n  floatWindows: Array<FloatWindowState>;\n  windows: Array<FloatWindowState>;\n}\n\ninterface ContainerSize {\n  width: number;\n  height: number;\n}\n\nconst getSizeInAnchor = (containerSize: ContainerSize, anchor: Anchor) =>\n  containerSize[isHorizontalToolWindow(anchor) ? \"height\" : \"width\"];\n\nconst mapToKey = map<ToolWindowStateWithKey, Key>(prop(\"key\"));\nconst sortAndMapToKey = compose(\n  mapToKey,\n  sortBy(({ order }: ToolWindowStateWithKey) => order)\n);\nconst filterMains = filter<ToolWindowStateWithKey, \"array\">(\n  ({ isSplit }: ToolWindowStateWithKey) => !isSplit\n);\nconst getMains = compose(sortAndMapToKey, filterMains);\nconst filterSplits = filter<ToolWindowStateWithKey, \"array\">(\n  ({ isSplit }: ToolWindowStateWithKey) => isSplit\n);\nconst filterVisible = (expectedViewMode: ViewMode | ViewMode[] = []) =>\n  filter<ToolWindowStateWithKey, \"array\">(\n    ({ viewMode, isVisible }: ToolWindowStateWithKey) =>\n      isVisible &&\n      ([] as ViewMode[]).concat(expectedViewMode).includes(viewMode)\n  );\nconst getSplits = compose(sortAndMapToKey, filterSplits);\n\nconst filterVisibleDocked = filterVisible([\"docked_unpinned\", \"docked_pinned\"]);\nconst filterVisibleUnDocked = filterVisible(\"undock\");\n\nconst getDocked = (\n  anchor: Anchor,\n  containerSize: ContainerSize,\n  toolWindows: ToolWindowStateWithKey[]\n): SideDockedState => {\n  const docks = filterVisibleDocked(toolWindows);\n  const mains = filterMains(docks);\n  const splits = filterSplits(docks);\n  if (mains.length > 1 || splits.length > 1) {\n    throw new Error(\n      \"More than one visible docked window in a side is not possible\"\n    );\n  }\n  if (mains[0] || splits[0]) {\n    const weight = mains[0]?.weight || splits[0]?.weight;\n    return {\n      mainKey: mains[0]?.key || splits[0]?.key,\n      split:\n        mains[0]?.key && splits[0]?.key\n          ? {\n              key: splits[0].key,\n              sizeFraction: mains[0].weight\n                ? 1 - mains[0].sideWeight\n                : splits[0].sideWeight,\n            }\n          : null,\n      size: weight * getSizeInAnchor(containerSize, anchor),\n    };\n  }\n  return null;\n};\n\nconst getUnDocked = (\n  anchor: Anchor,\n  containerSize: ContainerSize,\n  toolWindows: ToolWindowStateWithKey[]\n): SideUnDockedState => {\n  const windows = filterVisibleUnDocked(toolWindows);\n  if (windows.length === 1) {\n    return {\n      key: windows[0].key,\n      size: windows[0].weight * getSizeInAnchor(containerSize, anchor),\n    };\n  }\n  if (windows.length === 0) {\n    return null;\n  }\n  throw new Error(\n    \"More than one visible undocked window in a side is not possible\"\n  );\n};\n\nconst getSideState = (\n  anchor: Anchor,\n  containerSize: ContainerSize,\n  toolWindows: ToolWindowStateWithKey[]\n): SideState => ({\n  stripes: {\n    main: getMains(toolWindows),\n    split: getSplits(toolWindows),\n    activeKeys: mapToKey(toolWindows.filter(({ isVisible }) => isVisible)),\n  },\n  undocked: getUnDocked(anchor, containerSize, toolWindows),\n  docked: getDocked(anchor, containerSize, toolWindows),\n});\n\nconst DEFAULT_HEIGHT = 300;\nconst DEFAULT_WIDTH = 400;\nconst getFloatWindowState =\n  (containerSize: ContainerSize) =>\n  ({\n    floatingBounds: bounds = {\n      top: containerSize.height / 2 - DEFAULT_HEIGHT / 2,\n      left: containerSize.width / 2 - DEFAULT_WIDTH / 2,\n      height: DEFAULT_HEIGHT,\n      width: DEFAULT_WIDTH,\n    },\n    key,\n  }: ToolWindowStateWithKey): FloatWindowState => ({ bounds, key });\n\nconst getFloatWindowsState = (\n  viewMode: \"float\" | \"window\",\n  containerSize: ContainerSize,\n  toolWindows: ToolWindowStateWithKey[]\n) =>\n  pipe(\n    filterVisible(viewMode),\n    map<ToolWindowStateWithKey, FloatWindowState>(\n      getFloatWindowState(containerSize)\n    )\n  )(toolWindows);\n\nexport function getToolWindowsLayoutState(\n  state: Readonly<ToolWindowsState>,\n  containerSize: ContainerSize,\n  /**\n   * list of valid window ids. If state contains window ids that are not included here, they will be excluded in\n   * the returned state object.\n   */\n  windowIds: string[] = Object.keys(state.windows)\n): ToolWindowsLayoutState {\n  const toolWindows = Object.keys(state.windows)\n    .filter(\n      (key) => windowIds.includes(key) && !state.removedFromSideBarIds.has(key)\n    )\n    .map((key) => ({\n      ...state.windows[key],\n      key,\n    }));\n  const {\n    top = [],\n    bottom = [],\n    left = [],\n    right = [],\n  } = groupBy(({ anchor }) => anchor, toolWindows);\n  return {\n    left: getSideState(\"left\", containerSize, left),\n    top: getSideState(\"top\", containerSize, top),\n    right: getSideState(\"right\", containerSize, right),\n    bottom: getSideState(\"bottom\", containerSize, bottom),\n    windows: getFloatWindowsState(\"window\", containerSize, toolWindows),\n    floatWindows: getFloatWindowsState(\"float\", containerSize, toolWindows),\n  };\n}\n","import { Anchor, isHorizontalToolWindow } from \"./utils\";\nimport { Key } from \"react\";\ntype Rect = Omit<ClientRect, \"toJSON\" | \"x\" | \"y\">;\n\nexport interface DropPosition {\n  index: number;\n  split: boolean;\n\n  relative?: {\n    placement: \"before\" | \"after\";\n    key: Key;\n  };\n}\n\n/**\n * TODO: Add a few words about what this function do.\n */\nexport const createGetDropPosition = <T extends any>({\n  anchor,\n  stripeElement,\n  splitItems,\n  mainItems,\n  getItemRect,\n  getKey,\n}: {\n  stripeElement: HTMLElement;\n  anchor: Anchor;\n  getItemRect: (key: Key) => Rect;\n  getKey: (key: T) => Key;\n  mainItems: T[];\n  splitItems: T[];\n}): ((draggedRect: Rect) => DropPosition | null) => {\n  // Note: It may be tempting to calculate stripe element boundaries just once\n  // here, since it's not supposed to change during a drag session, but it\n  // can change due to getting empty when the only button is being dragged out.\n  const getStripeRect = () => stripeElement.getBoundingClientRect();\n\n  const getCanDrop = (draggingRect: Rect) => {\n    const stripeRect = getStripeRect();\n    return (\n      draggingRect.right > stripeRect.left - stripeRect.width &&\n      draggingRect.left < stripeRect.right &&\n      draggingRect.bottom > stripeRect.top - stripeRect.height &&\n      draggingRect.top < stripeRect.bottom\n    );\n  };\n\n  const start = (rect: Rect) =>\n    isHorizontalToolWindow(anchor) ? rect.left : rect.top;\n  const end = (rect: Rect) =>\n    isHorizontalToolWindow(anchor) ? rect.right : rect.bottom;\n\n  const getKeyToOffsets = (items: T[]) => {\n    const keyToOffsets: Record<Key, { start: number; end: number }> = {};\n    items.forEach((item) => {\n      const key = getKey(item);\n      const boundingRect = getItemRect(key);\n      keyToOffsets[key] = {\n        start: start(boundingRect),\n        end: end(boundingRect),\n      };\n    });\n    return keyToOffsets;\n  };\n\n  const getDropPositions = (\n    items: T[],\n    split = false\n    // FIXME: score is a bad name. it's quite the opposite! the less means the higher score.\n  ): Array<DropPosition & { score: (rect: Rect) => number }> => {\n    const getRef = split ? end : start;\n    if (items.length === 0) {\n      // if the section is empty, we should still allow adding to it.\n      return [\n        {\n          index: 0,\n          split,\n          score: (draggingRect: Rect) =>\n            Math.abs(getRef(draggingRect) - getRef(getStripeRect())),\n        },\n      ];\n    }\n    return items.flatMap((item, index) => {\n      const key = getKey(item);\n      return [\n        {\n          index,\n          split,\n          relative: { key, placement: \"before\" },\n          score: (draggingRect: Rect) =>\n            Math.abs(getRef(draggingRect) - keyToOffsets[key].start),\n        },\n        {\n          index: index + 1,\n          split,\n          relative: { key, placement: \"after\" },\n          score: (draggingRect: Rect) =>\n            Math.abs(getRef(draggingRect) - keyToOffsets[key].end),\n        },\n      ];\n    });\n  };\n\n  const keyToOffsets = getKeyToOffsets([...mainItems, ...splitItems]);\n\n  const dropPositions = [\n    ...getDropPositions(mainItems),\n    ...getDropPositions(splitItems, true),\n  ];\n\n  let lastDropPosition: DropPosition | null = null;\n  return (draggingRect: Rect) => {\n    if (!getCanDrop(draggingRect)) {\n      return null;\n    }\n    const result = dropPositions.reduce(\n      (bestMatch, candidate) => {\n        const score = candidate.score(draggingRect);\n        if (!bestMatch || score < bestMatch.score) {\n          return {\n            ...candidate,\n            score,\n          };\n        }\n        return bestMatch;\n      },\n      null as\n        | null\n        | (DropPosition & {\n            score: number;\n          })\n    );\n\n    if (!result) {\n      return null;\n    }\n    if (\n      result.split !== lastDropPosition?.split ||\n      result.index !== lastDropPosition?.index\n    ) {\n      lastDropPosition = result;\n    }\n    return lastDropPosition;\n  };\n};\n","import { StyledIconWrapper } from \"../Icon/StyledIconWrapper\";\nimport { styled } from \"../styled\";\nimport React from \"react\";\nimport { css } from \"styled-components\";\nimport { Anchor } from \"./utils\";\n\nexport interface StyledToolWindowStripeButtonProps {\n  anchor: Anchor;\n  active?: boolean;\n}\n\nexport const STRIPE_BUTTON_CROSS_PADDING = 2.5;\nexport const STRIPE_BUTTON_LINE_HEIGHT = \"1rem\";\n\nconst anchorStyles = ({ anchor }: { anchor: Anchor }) => {\n  const orientation =\n    anchor === \"left\" || anchor === \"right\" ? \"vertical\" : \"horizontal\";\n\n  return orientation === \"horizontal\"\n    ? css`\n        padding: ${STRIPE_BUTTON_CROSS_PADDING}px 10px;\n      `\n    : css`\n        padding: 10px ${STRIPE_BUTTON_CROSS_PADDING}px;\n        writing-mode: vertical-lr;\n        // writing-mode: sideways-lr is not supported anywhere other than FF, so, we need to rotate\n        transform: ${anchor === \"left\" ? \"rotateZ(180deg)\" : undefined};\n\n        // icons are not rotated like text in Intellij Platform implementation. It kind of makes sense.\n        ${StyledIconWrapper} {\n          transform: rotate(180deg);\n        }\n      `;\n};\n\nexport const StyledToolWindowStripeButton = styled.span<StyledToolWindowStripeButtonProps>`\n  box-sizing: border-box;\n  display: flex; // to allow icon and text alignment by default;\n  align-items: center;\n  cursor: default;\n  user-select: none;\n  overflow: hidden;\n  direction: ltr;\n  flex-shrink: 0;\n  font-size: 0.7rem;\n  line-height: ${STRIPE_BUTTON_LINE_HEIGHT}; // absolute value seems to be problematic when the base font size is changed\n  white-space: nowrap;\n  color: ${({ theme, active }) =>\n    active\n      ? theme.color(\n          \"ToolWindow.Button.selectedForeground\",\n          theme.dark ? \"rgb(255,255,255)\" : \"rgb(0,0,0)\"\n        )\n      : theme.color(\"*.foreground\")};\n  background: ${({ theme, active }) =>\n    active\n      ? theme.color(\n          \"ToolWindow.Button.selectedBackground\",\n          theme.dark ? \"rgba(15,15,15,.332)\" : \"rgba(85,85,85,.332)\"\n        )\n      : undefined};\n\n  ${anchorStyles}\n  ${({ active }) =>\n    !active &&\n    css`\n      &:hover {\n        background: ${({ theme }) =>\n          theme.color(\n            \"ToolWindow.Button.hoverBackground\",\n            theme.dark ? \"rgba(15,15,15,.156)\" : \"rgba(85,85,85,.156)\"\n          )};\n      }\n    `};\n`;\n","import {\n  STRIPE_BUTTON_CROSS_PADDING,\n  STRIPE_BUTTON_LINE_HEIGHT,\n  StyledToolWindowStripeButton,\n} from \"./StyledToolWindowStripeButton\";\nimport { Anchor, isHorizontalToolWindow, theOtherSide } from \"./utils\";\nimport { css } from \"styled-components\";\nimport { Theme } from \"../Theme/Theme\";\nimport { styled } from \"../styled\";\nimport { Color } from \"../Theme/Color\";\n\nconst minHeight = `calc(${STRIPE_BUTTON_LINE_HEIGHT} + ${\n  2 * STRIPE_BUTTON_CROSS_PADDING + 1 /*border*/\n}px)`;\n\nconst anchorStyles = ({\n  anchor,\n  preventCollapse,\n}: StyledToolWindowStripeProps) =>\n  isHorizontalToolWindow(anchor)\n    ? css`\n        flex-direction: row;\n        width: 100%;\n        min-height: ${preventCollapse ? minHeight : \"fit-content\"};\n        ${StyledToolWindowStripeButton} {\n          height: 1.25rem;\n        }\n      `\n    : css`\n        flex-direction: column;\n        height: 100%;\n        min-width: ${preventCollapse ? minHeight : \"fit-content\"};\n        ${StyledToolWindowStripeButton} {\n          width: 1.25rem;\n        }\n      `;\nconst borderStyle = ({ anchor, theme }: { anchor: Anchor; theme: Theme }) =>\n  css`border-${theOtherSide(anchor)}: 1px solid ${\n    theme.commonColors.contrastBorder\n  }`;\n\nexport interface StyledToolWindowStripeProps {\n  anchor: Anchor;\n  highlighted?: boolean;\n  preventCollapse?: boolean;\n}\n\nexport const StyledToolWindowStripe = styled.div<StyledToolWindowStripeProps>`\n  box-sizing: border-box;\n  background: ${({ theme, highlighted }) =>\n    highlighted\n      ? Color.brighter(theme.commonColors.panelBackground)\n      : theme.commonColors.panelBackground};\n  display: inline-flex;\n  overflow: hidden;\n  ${borderStyle};\n  ${anchorStyles}\n`;\n\nexport const StyledSpacer = styled.div`\n  flex: 1;\n`;\n","import { RefObject } from \"react\";\nimport {\n  useMove,\n  UseMoveOptions,\n  XY,\n} from \"../utils/interaction-utils/useMove\";\nimport { findEffectiveBackgroundColor } from \"./findEffectiveBackgroundColor\";\n\ntype Rect = Omit<ClientRect, \"toJSON\" | \"x\" | \"y\">;\n\nexport interface UseElementMoveOptions<S>\n  extends Omit<UseMoveOptions<S>, \"onMoveStart\" | \"onMove\"> {\n  ref: RefObject<HTMLElement>;\n  /**\n   * if true a clone of the element is created and used as ghost.\n   * A function can be passed to customize the default ghost element or return a completely\n   * different one.\n   */\n  ghost?: boolean | ((defaultGhost: HTMLElement) => HTMLElement);\n\n  onMoveStart: (args: { from: Rect }) => S;\n  onMove: (args: { from: Rect; to: Rect; movement: XY; startState: S }) => void;\n}\n\n/**\n * Provides necessary event handling props to be applied on an element to make it movable.\n * It's implemented on top of {@link useMove}. The differences are:\n * - The signature of `onMoveStart`, `onMove` and `onMoveEnd` are changed to pass\n *   {@link Rect} instead of {@link XY}.\n * - rendering a ghost element.\n *\n * ## A note about ghost:\n * There is no easy way to create a snapshot image of an html element. Native drag and drop API\n * supports [setting drag\n * image](https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/setDragImage) but we are\n * not using drag events mainly because of not being able to customize the offset after which drag\n * should start. See {@link UseMoveOptions#dragThreshold dragThreshold} for more details. There are\n * some libraries like html2canvas for creating an image from an html element, but they are very\n * big and using them doesn't make sense at all from a value/cost ratio perspective. There might be\n * some ways of implementing custom move threshold on top of native drag events. For example by\n * delaying the call to setDragImage, but it needs more investigation. Also, not sure if opacity of\n * the ghost is something you can control when using setDragImage.\n **/\nexport function useElementMove<S>({\n  ref,\n  onMoveStart,\n  onMove,\n  onMoveEnd,\n  ghost: ghostOption,\n  ...otherOptions\n}: UseElementMoveOptions<S>) {\n  return useMove({\n    ...otherOptions,\n    onMoveStart: () => {\n      const element = ref.current;\n      let ghost: HTMLElement | null = null;\n      if (!element) {\n        throw new Error(\n          \"Movement started but ref value is null. Make sure the passed ref is applied on the same element that other props are.\"\n        );\n      }\n      const updateGhostPosition = (rect: Rect) => {\n        if (ghost) {\n          ghost.style.left = `${rect.left}px`;\n          ghost.style.top = `${rect.top}px`;\n        }\n      };\n      const from: Rect = element.getBoundingClientRect();\n      if (ghostOption) {\n        const defaultGhost = createDefaultGhost(element);\n        ghost =\n          typeof ghostOption === \"function\"\n            ? ghostOption(defaultGhost) || defaultGhost\n            : defaultGhost;\n        ghost.style.position = \"fixed\";\n        document.body.append(ghost);\n        updateGhostPosition(from);\n      }\n      return {\n        ghost,\n        from,\n        updateGhostPosition,\n        startState: onMoveStart({ from }),\n      };\n    },\n    onMove: ({\n      movement,\n      startState: { from, updateGhostPosition, startState },\n    }) => {\n      const to: Rect = {\n        left: from.left + movement.x,\n        right: from.right + movement.x,\n        top: from.top + movement.y,\n        bottom: from.bottom + movement.y,\n        height: from.height,\n        width: from.width,\n      };\n      updateGhostPosition(to);\n      onMove({ from, to, movement, startState });\n    },\n    onMoveEnd: ({ startState: { ghost, startState } }) => {\n      ghost?.remove();\n      onMoveEnd?.({ startState });\n    },\n  });\n}\n\nfunction createDefaultGhost(element: HTMLElement) {\n  const ghost = element.cloneNode(true) as HTMLElement;\n  ghost.style.backgroundColor = findEffectiveBackgroundColor(element);\n  return ghost;\n}\n","import { Color } from \"../Theme/Color\";\n\n/**\n * Computes the effective background color of the element by blending translucent backgrounds of\n * the elements ancestors. It traverses up the parents, until reaches a solid background color.\n * all translucent backgrounds in between are blended with that solid color, with respect to their\n * transparency. It's meant to be used only for the simple cases where an element doesn't overflow\n * the parents. Obviously, in other cases there won't be one single effective background color\n * for the element.\n */\nexport function findEffectiveBackgroundColor(element: HTMLElement): string {\n  let elem: HTMLElement | null = element;\n  let colors: Color[] = [];\n  while (elem != null) {\n    const computedBackground = getComputedStyle(elem).backgroundColor;\n    if (computedBackground) {\n      const color = new Color(computedBackground);\n      colors.unshift(color);\n      if (color.a === 255) {\n        // if we've reached a solid color, we don't need to continue traversing ancestors\n        break;\n      }\n    }\n    elem = elem.parentElement;\n  }\n  return (\n    colors\n      .reduce<Color | null>((resultColor, nextColor) => {\n        return resultColor ? resultColor.blend(nextColor) : nextColor;\n      }, null)\n      ?.toString() || \"\"\n  );\n}\n","import { mergeProps } from \"@react-aria/utils\";\nimport React, { CSSProperties, HTMLAttributes, Key, useRef } from \"react\";\nimport { createGetDropPosition, DropPosition } from \"./createGetDropPosition\";\nimport { useMovableStripeButtons } from \"./MovableToolWindowStripeProvider\";\nimport { StyledSpacer, StyledToolWindowStripe } from \"./StyledToolWindowStripe\";\nimport { StyledToolWindowStripeButton } from \"./StyledToolWindowStripeButton\";\nimport { useElementMove, UseElementMoveOptions } from \"./useElementMove\";\nimport { Anchor, isHorizontalToolWindow } from \"./utils\";\n\ninterface ToolWindowStripeProps<T> {\n  anchor: Anchor;\n  items: T[];\n  splitItems?: T[];\n  getKey: (item: T) => Key;\n  renderItem: (item: T) => React.ReactNode;\n  selectedKeys?: Key[];\n  onItemPress?: (key: Key) => void;\n}\n\n/**\n * TODO: refactor to remove the key based interface.\n */\nexport function ToolWindowStripe<T>({\n  anchor,\n  items: mainItems,\n  renderItem: render,\n  splitItems = [],\n  selectedKeys = [],\n  onItemPress,\n  getKey,\n}: ToolWindowStripeProps<T>) {\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const { getProps, draggingRect, draggingKey, dropPosition } =\n    useMovableStripeButtons({\n      stripeElRef: containerRef,\n      getKey,\n      anchor,\n      mainItems,\n      splitItems,\n      createGetDropPosition: (key: Key) => {\n        const isNotCurrentItem = (anItem: T) => getKey(anItem) !== key;\n        const stripeElement = containerRef.current!;\n        const getItemRect = (key: Key) =>\n          stripeElement\n            .querySelector(`[data-key=\"${key}\"]`)! // FIXME\n            .getBoundingClientRect();\n        return createGetDropPosition({\n          stripeElement: stripeElement,\n          mainItems: mainItems.filter(isNotCurrentItem),\n          splitItems: splitItems.filter(isNotCurrentItem),\n          getKey,\n          anchor,\n          getItemRect,\n        });\n      },\n    });\n\n  const highlighted =\n    dropPosition != null &&\n    draggingKey != null &&\n    [...mainItems, ...splitItems].every((item) => getKey(item) !== draggingKey);\n\n  const renderItem = (item: T) => {\n    const key = getKey(item);\n\n    return (\n      <ToolWindowStripeButton\n        anchor={anchor}\n        key={key}\n        data-key={key}\n        style={{\n          ...getStripeButtonStyles({\n            key,\n            dropPosition,\n            anchor,\n            draggingRect,\n            draggingKey,\n          }),\n        }}\n        {...getProps(key)}\n        active={selectedKeys.includes(key)}\n        onPress={() => onItemPress?.(key)}\n      >\n        {render(item)}\n      </ToolWindowStripeButton>\n    );\n  };\n  return (\n    <>\n      <StyledToolWindowStripe\n        anchor={anchor}\n        preventCollapse={Boolean(dropPosition)}\n        highlighted={highlighted}\n        ref={containerRef}\n      >\n        {mainItems.map(renderItem)}\n        <StyledSpacer />\n        {splitItems.map(renderItem)}\n      </StyledToolWindowStripe>\n    </>\n  );\n}\ntype Rect = Omit<ClientRect, \"toJSON\" | \"x\" | \"y\">;\n\nfunction getStripeButtonStyles({\n  anchor,\n  key,\n  dropPosition,\n  draggingRect,\n  draggingKey,\n}: {\n  anchor: Anchor;\n  key: Key;\n  draggingKey: Key | null;\n  draggingRect: Rect | null;\n  dropPosition: DropPosition | null;\n}) {\n  const styles: CSSProperties = {\n    // transition: \"margin 100ms\", // maybe only when drag is in progress, if unwanted transition at drop\n  };\n  if (dropPosition?.relative?.key === key && draggingRect) {\n    const marginValue = isHorizontalToolWindow(anchor)\n      ? draggingRect.width\n      : draggingRect.height;\n\n    if (isHorizontalToolWindow(anchor)) {\n      styles[\n        dropPosition.relative.placement === \"before\"\n          ? \"marginLeft\"\n          : \"marginRight\"\n      ] = marginValue;\n    } else {\n      styles[\n        dropPosition.relative.placement === \"before\"\n          ? \"marginTop\"\n          : \"marginBottom\"\n      ] = marginValue;\n    }\n  }\n  if (key === draggingKey) {\n    styles.display = \"none\";\n  }\n  return styles;\n}\n\nfunction ToolWindowStripeButton<T, S>({\n  children,\n  anchor,\n  onMoveStart,\n  onMove,\n  onMoveEnd,\n  onPress,\n  moveDisabled,\n  ...otherProps\n}: {\n  children: React.ReactNode;\n  anchor: Anchor;\n  style: CSSProperties;\n  active: boolean;\n  onPress: () => void;\n  moveDisabled?: boolean;\n  onMoveStart: UseElementMoveOptions<S>[\"onMoveStart\"];\n  onMove: UseElementMoveOptions<S>[\"onMove\"];\n  onMoveEnd: UseElementMoveOptions<S>[\"onMoveEnd\"];\n}) {\n  const ref = useRef<HTMLElement>(null);\n\n  // for some reason, usePress and useMove (used in useElementMove) are not compatible.\n  // it seems onMouseDown in useMove is not called, even when handlers are merged by mergeProps.\n  // FIXME: fix compatibility of useMove and usePress, and switch to usePress({ onPress })\n  const { pressProps } = {\n    pressProps: {\n      onPointerUp: onPress,\n      onMouseDown: (e) => {\n        e.preventDefault();\n      },\n    } as HTMLAttributes<HTMLElement>,\n  }; //usePress({ onPress });\n  const props = useElementMove({\n    ref,\n    disabled: moveDisabled,\n    dragThreshold: 7,\n    ghost: true,\n    onMoveStart,\n    onMove,\n    onMoveEnd,\n  });\n\n  return (\n    <StyledToolWindowStripeButton\n      anchor={anchor}\n      {...mergeProps(otherProps, pressProps, props)}\n      ref={ref}\n    >\n      {children}\n    </StyledToolWindowStripeButton>\n  );\n}\n","import React from \"react\";\nimport { css } from \"styled-components\";\nimport { ResizableView } from \"../ResizableView\";\nimport { styled } from \"../styled\";\nimport { SideUnDockedState } from \"./ToolWindowsState/ToolWindowsLayoutState\";\nimport { Anchor, isHorizontalToolWindow } from \"./utils\";\n\nexport const StyledUndockSide = styled.div<{ anchor: Anchor }>`\n  position: absolute;\n  background: inherit;\n  z-index: 1;\n  ${({ anchor }) =>\n    isHorizontalToolWindow(anchor)\n      ? css`\n          left: 0;\n          right: 0;\n        `\n      : css`\n          top: 0;\n          bottom: 0;\n        `};\n  ${({ anchor }) =>\n    css`\n      ${anchor}: 0;\n    `};\n`;\n\nexport function UndockSide({\n  state,\n  anchor,\n  children,\n  onResize,\n}: {\n  state: Exclude<SideUnDockedState, null>;\n  anchor: Anchor;\n  children: React.ReactNode;\n  onResize: (size: number) => void;\n}) {\n  return (\n    state && (\n      <StyledUndockSide anchor={anchor}>\n        <ResizableView\n          orientation={\n            isHorizontalToolWindow(anchor) ? \"vertical\" : \"horizontal\"\n          }\n          resizerPlacement={\n            anchor === \"left\" || anchor === \"top\" ? \"after\" : \"before\"\n          }\n          size={state.size}\n          onResize={onResize}\n        >\n          {children}\n        </ResizableView>\n      </StyledUndockSide>\n    )\n  );\n}\n","import { indexBy } from \"ramda\";\nimport React, {\n  CSSProperties,\n  ForwardedRef,\n  HTMLProps,\n  Key,\n  useImperativeHandle,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { useLatest } from \"@intellij-platform/core/utils/useLatest\";\n\nimport { ThreeViewSplitter } from \"../ThreeViewSplitter/ThreeViewSplitter\";\nimport { FocusScope } from \"../utils/FocusScope\";\nimport { FloatToolWindows } from \"./FloatToolWindows\";\nimport { MovableToolWindowStripeProvider } from \"./MovableToolWindowStripeProvider\";\nimport { StyledToolWindowOuterLayout } from \"./StyledToolWindowOuterLayout\";\nimport {\n  getToolWindowsLayoutState,\n  SideDockedState,\n  StripesState,\n  ToolWindowsLayoutState,\n} from \"./ToolWindowsState/ToolWindowsLayoutState\";\nimport { ToolWindowsState } from \"./ToolWindowsState/ToolWindowsState\";\nimport { ToolWindowStateProvider } from \"./ToolWindowsState/ToolWindowStateProvider\";\nimport { ToolWindowStripe } from \"./ToolWindowStripe\";\nimport { UndockSide } from \"./UndockSide\";\nimport { Anchor, isHorizontalToolWindow } from \"./utils\";\nimport { useOnFocusLost } from \"./useOnFocusLost\";\nimport { useInteractOutside } from \"@react-aria/interactions\";\n\ninterface ToolWindow {\n  id: string;\n  toolbarButton: React.ReactNode;\n  content: React.ReactNode;\n}\n\nexport interface ToolWindowsProps {\n  children: React.ReactNode;\n  windows: ToolWindow[];\n  toolWindowsState: Readonly<ToolWindowsState>;\n  onToolWindowStateChange: (newState: ToolWindowsState) => void;\n\n  /**\n   * Whether stripe buttons should be hidden or not.\n   * `hideToolStripes` UISettings in Intellij Platform\n   */\n  hideToolWindowBars?: boolean;\n\n  /**\n   *\n   * `wideScreenSupport` in UISettings in Intellij Platform\n   */\n  useWidescreenLayout?: boolean;\n\n  /**\n   * min width applied to the main content (children).\n   * @default 50\n   */\n  mainContentMinWidth?: number;\n\n  height?: CSSProperties[\"height\"];\n  minHeight?: CSSProperties[\"minHeight\"];\n  margin?: CSSProperties[\"margin\"];\n\n  /**\n   * props to be passed to the container element.\n   */\n  containerProps?: Omit<HTMLProps<HTMLDivElement>, \"as\">;\n}\n\nexport interface ToolWindowRefValue {\n  focus(key: Key): void;\n  hasFocus(key: Key): void;\n  focusLastActiveWindow(): void;\n  focusMainContent(): void;\n  changeState(\n    updater: (currentState: Readonly<ToolWindowsState>) => ToolWindowsState\n  ): void;\n}\n\n/**\n * @constructor\n *\n * Corresponding to ToolWindowPane in Intellij Platform\n *\n * Known issues:\n * - in Firefox and Safari, left and right toolbars are not properly shown. Seems like a nasty bug, since adding and\n * then removing some min-width: fit-content style fixes it.\n * - in the dock view of a side, open only a window from the split ones. then open a window from main ones.\n *   focus is not moved to the just opened window. The reason is we rely on autofocusing and because the React tree\n *   changes for both windows, even the split one which was open will be unmounted and mounted again, and since it's\n *   placed after the main one, and hence mounted later, it will get the focus again. This becomes a bigger issue\n *   if the main one is unpinned, because it immediately gets closed after opening.\n *   Possible solutions:\n *   - make sure the split one won't unmount and mount again in such scenario.\n *   - decouple focusing logic from mounting logic, and only focus windows somehow, when the `isVisible` is changed\n *     from false to true, not when mounted.\n * - related to previous issue: open a tool window in split section of a side. set view mode for a tool window in main\n *   section of the same side to docked_unpinned. try to open the unpinned one while the split one is open. it doesn't\n *   work.\n */\nexport const ToolWindows = React.forwardRef(function ToolWindows(\n  {\n    hideToolWindowBars = false,\n    useWidescreenLayout = false,\n    height = \"100%\",\n    minHeight = \"0\",\n    toolWindowsState,\n    onToolWindowStateChange,\n    windows,\n    children,\n    mainContentMinWidth = 50,\n    containerProps = {},\n  }: ToolWindowsProps,\n  ref: ForwardedRef<ToolWindowRefValue>\n): React.ReactElement {\n  const windowsById = indexBy(({ id }) => id, windows);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const mainContentFocusScopeRef =\n    useRef<React.ComponentRef<typeof FocusScope>>(null);\n  const [layoutState, setLayoutState] = useState<ToolWindowsLayoutState>();\n  const windowFocusableRefs = useRef<{\n    [key: string]: React.RefObject<React.ComponentRef<typeof FocusScope>>;\n  }>({});\n\n  const latestRef = useLatest({ toolWindowsState, onToolWindowStateChange });\n\n  useLayoutEffect(() => {\n    const container = containerRef.current;\n    const _setLayoutState = () =>\n      setLayoutState(\n        getToolWindowsLayoutState(\n          toolWindowsState,\n          container!.getBoundingClientRect(),\n          windows.map(({ id }) => id)\n        )\n      );\n\n    // If container is rendered but has zero dimensions for any reason, we start observing size changes, until\n    // it's no longer collapsed. Note that we don't want to unconditionally observe resizes and update the layout state.\n    // because tool windows are not supposed to keep the fraction width as the window resizes. They are supposed to have\n    // a fixed width which is determined fraction-based, but only when the tool window is opened. In fact, updating the\n    // layout state, on each and every change to toolWindowsState is also not quite correct, as some state changes\n    // are unrelated and shouldn't cause a re-calculation of the size. FIXME: don't re-calculate fraction base sizes on\n    //  every state change.\n    if (container?.offsetWidth === 0 || container?.offsetHeight === 0) {\n      const observer = new ResizeObserver(([resize]) => {\n        if (resize.contentRect.width > 0 && resize.contentRect.height > 0) {\n          _setLayoutState();\n          observer.unobserve(container);\n        }\n      });\n      observer.observe(container);\n    }\n    _setLayoutState();\n  }, [toolWindowsState]);\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      focus: (key: Key) => {\n        windowFocusableRefs.current[key]?.current?.focus();\n      },\n      hasFocus: (key: Key) =>\n        document.activeElement?.closest(`[data-tool-window-id=\"${key}\"]`) !==\n        null,\n      focusLastActiveWindow: () => {\n        const { lastFocusedKey } = latestRef.current.toolWindowsState;\n        if (lastFocusedKey != null) {\n          if (\n            !latestRef.current.toolWindowsState.windows[lastFocusedKey]\n              .isVisible\n          ) {\n            latestRef.current.onToolWindowStateChange(\n              toolWindowsState.show(lastFocusedKey)\n            );\n          }\n          windowFocusableRefs.current[lastFocusedKey].current?.focus(true);\n        }\n      },\n      focusMainContent: () => {\n        mainContentFocusScopeRef.current?.focus();\n      },\n      changeState: (updater) => {\n        onToolWindowStateChange(updater(latestRef.current.toolWindowsState));\n      },\n    }),\n    []\n  );\n\n  const interactionOutsideRef = useRef(false);\n  useInteractOutside({\n    ref: containerRef,\n    onInteractOutsideStart: () => {\n      interactionOutsideRef.current = true;\n    },\n    onInteractOutside: () => {\n      interactionOutsideRef.current = false;\n    },\n  });\n\n  useOnFocusLost(({ focusReceivingElement }) => {\n    if (!focusReceivingElement && !interactionOutsideRef.current) {\n      mainContentFocusScopeRef.current?.focus();\n    }\n  }, containerRef);\n\n  // TODO: extract component candidate\n  const renderStripe = ({\n    anchor,\n    state,\n  }: {\n    anchor: Anchor;\n    state: StripesState;\n  }) => (\n    <ToolWindowStripe\n      anchor={anchor}\n      items={state.main}\n      splitItems={state.split}\n      getKey={(item) => item}\n      renderItem={(item) => windowsById[item]?.toolbarButton}\n      onItemPress={(key) =>\n        onToolWindowStateChange(toolWindowsState.toggle(key))\n      }\n      selectedKeys={state.activeKeys}\n    />\n  );\n\n  const renderToolWindow = (key: Key) => {\n    if (!windowFocusableRefs.current[key]) {\n      windowFocusableRefs.current[key] = React.createRef();\n    }\n    return (\n      <div\n        style={{ all: \"unset\" }}\n        data-tool-window-id={key}\n        onFocus={() => {\n          onToolWindowStateChange(toolWindowsState.lastFocused(key));\n        }}\n      >\n        <FocusScope ref={windowFocusableRefs.current[key]}>\n          <ToolWindowStateProvider\n            id={key}\n            containerRef={containerRef}\n            mainContentFocusableRef={mainContentFocusScopeRef}\n            toolWindowsState={toolWindowsState}\n            onToolWindowStateChange={onToolWindowStateChange}\n          >\n            {windowsById[key]?.content}\n          </ToolWindowStateProvider>\n        </FocusScope>\n      </div>\n    );\n  };\n  // TODO: candidate for component extraction\n  const renderSideDockedView = ({\n    anchor,\n    state,\n  }: {\n    anchor: Anchor;\n    state: SideDockedState;\n  }) => {\n    if (!state) {\n      return null;\n    }\n    return (\n      <ThreeViewSplitter\n        innerView={renderToolWindow(state.mainKey)}\n        innerViewMinSize={50}\n        lastView={state.split && renderToolWindow(state.split.key)}\n        lastSize={state.split?.sizeFraction}\n        onLastResize={(newSize) => {\n          onToolWindowStateChange(\n            toolWindowsState.resizeDockSplitView(anchor, newSize)\n          );\n        }}\n        orientation={isHorizontalToolWindow(anchor) ? \"horizontal\" : \"vertical\"}\n      />\n    );\n  };\n  const onDockResize = (anchor: Anchor) => (size: number) => {\n    const containerBounds = containerRef.current?.getBoundingClientRect();\n    // containerBounds should have value in normal course of events\n    if (containerBounds) {\n      onToolWindowStateChange(\n        toolWindowsState.resizeDock(anchor, size, containerBounds)\n      );\n    }\n  };\n  const getSplitViewProps = (\n    layoutState: ToolWindowsLayoutState,\n    orientation: \"horizontal\" | \"vertical\"\n  ) => {\n    const firstAnchor = orientation === \"horizontal\" ? \"left\" : \"top\";\n    const secondAnchor = orientation === \"horizontal\" ? \"right\" : \"bottom\";\n    return {\n      orientation,\n      firstView: renderSideDockedView({\n        anchor: firstAnchor,\n        state: layoutState[firstAnchor].docked,\n      }),\n      firstSize: layoutState[firstAnchor].docked?.size,\n      onFirstResize: onDockResize(firstAnchor),\n      lastView: renderSideDockedView({\n        anchor: secondAnchor,\n        state: layoutState[secondAnchor].docked,\n      }),\n      lastSize: layoutState[secondAnchor].docked?.size,\n      onLastResize: onDockResize(secondAnchor),\n    };\n  };\n  const renderInnerLayout = (layoutState: ToolWindowsLayoutState) => {\n    const horizontalSplitterProps = getSplitViewProps(\n      layoutState,\n      \"horizontal\"\n    );\n    const verticalSplitterProps = getSplitViewProps(layoutState, \"vertical\");\n\n    const [outerSplitterProps, innerSplitterProps] = useWidescreenLayout\n      ? [horizontalSplitterProps, verticalSplitterProps]\n      : [verticalSplitterProps, horizontalSplitterProps];\n\n    const undockLayers = ([\"left\", \"top\", \"right\", \"bottom\"] as const).map(\n      (anchor) => {\n        const state = layoutState[anchor].undocked;\n        return (\n          state && (\n            <UndockSide\n              key={anchor}\n              anchor={anchor}\n              state={state}\n              onResize={(size) => {\n                containerRef.current &&\n                  onToolWindowStateChange(\n                    toolWindowsState.resizeUndock(\n                      anchor,\n                      size,\n                      containerRef.current.getBoundingClientRect()\n                    )\n                  );\n              }}\n            >\n              {renderToolWindow(state.key)}\n            </UndockSide>\n          )\n        );\n      }\n    );\n\n    return (\n      <>\n        <MovableToolWindowStripeProvider\n          onMove={({ to, from }) => {\n            onToolWindowStateChange(\n              toolWindowsState.move(\n                layoutState[from.anchor].stripes[\n                  from.isSplit ? \"split\" : \"main\"\n                ][from.index],\n                { anchor: to.anchor, isSplit: to.isSplit },\n                to.index\n              )\n            );\n          }}\n        >\n          {/**\n           * ToolWindow bars, aka Stripes. Order of stripes is irrelevant for layout but relevant for\n           * priority when stripe buttons are moved across stripes.\n           * layout is handled by `StyledToolWindowOuterLayout`.\n           */}\n          <StyledToolWindowOuterLayout.LeftStripe>\n            {renderStripe({\n              anchor: \"left\",\n              state: layoutState[\"left\"].stripes,\n            })}\n          </StyledToolWindowOuterLayout.LeftStripe>\n          <StyledToolWindowOuterLayout.TopStripe>\n            {renderStripe({\n              anchor: \"top\",\n              state: layoutState[\"top\"].stripes,\n            })}\n          </StyledToolWindowOuterLayout.TopStripe>\n          <StyledToolWindowOuterLayout.RightStripe>\n            {renderStripe({\n              anchor: \"right\",\n              state: layoutState[\"right\"].stripes,\n            })}\n          </StyledToolWindowOuterLayout.RightStripe>\n          <StyledToolWindowOuterLayout.BottomStripe>\n            {renderStripe({\n              anchor: \"bottom\",\n              state: layoutState[\"bottom\"].stripes,\n            })}\n          </StyledToolWindowOuterLayout.BottomStripe>\n        </MovableToolWindowStripeProvider>\n        {/**\n         * The inner layout of the ToolWindow, including four tool windows and\n         * a main content in the center.\n         */}\n        <StyledToolWindowOuterLayout.InnerView>\n          <ThreeViewSplitter\n            {...outerSplitterProps}\n            innerView={\n              <ThreeViewSplitter\n                innerViewMinSize={mainContentMinWidth}\n                innerView={\n                  <FocusScope ref={mainContentFocusScopeRef}>\n                    {children}\n                  </FocusScope>\n                }\n                {...innerSplitterProps}\n              />\n            }\n          />\n          {undockLayers}\n          {\n            <FloatToolWindows\n              floatWindows={layoutState?.floatWindows}\n              renderToolWindow={renderToolWindow}\n              onBoundsChange={(key, bounds) =>\n                onToolWindowStateChange(\n                  toolWindowsState.setFloatingBound(key, bounds)\n                )\n              }\n            />\n          }\n        </StyledToolWindowOuterLayout.InnerView>\n      </>\n    );\n  };\n\n  return (\n    <StyledToolWindowOuterLayout.Shell\n      {...containerProps}\n      ref={containerRef}\n      /**\n       * Potential refactoring: hideStripes can also be handled by conditionally\n       * rendering tool window bars, instead of considering it as a feature of\n       * StyledToolWindowOuterLayout\n       **/\n      hideStripes={hideToolWindowBars}\n      style={{ height, minHeight, ...containerProps?.style }}\n    >\n      {layoutState && renderInnerLayout(layoutState)}\n    </StyledToolWindowOuterLayout.Shell>\n  );\n});\n","import { RefObject, useEffect } from \"react\";\n\n/**\n * Executes a callback function when focus is lost from the container element. i.e. when the currently focused element\n * was within the container and:\n * - The focus is going to an element outside the container, or\n * - The focus is about to get lost (i.e. go to `document.body`).\n *\n * Note: react-aria's `useFocusWithin` (and it's `onBlurWithin` option) can't be used, since (at least currently) it\n * doesn't cover the scenario where the focus is about to get lost due to the focused element getting unmounted.\n */\nexport function useOnFocusLost(\n  onFocusLost: (args: {\n    focusLosingElement: HTMLElement | null;\n    focusReceivingElement: Element | null;\n  }) => void,\n  containerRef: RefObject<HTMLElement>\n): void {\n  useEffect(() => {\n    const handleBodyFocus = (e: FocusEvent) => {\n      if (\n        e.target instanceof HTMLElement &&\n        containerRef.current?.contains(e.target) &&\n        (!e.relatedTarget || e.relatedTarget instanceof HTMLElement) &&\n        !containerRef.current?.contains(e.relatedTarget)\n      ) {\n        onFocusLost({\n          focusLosingElement: e.target,\n          focusReceivingElement: e.relatedTarget,\n        });\n      }\n    };\n    containerRef.current?.addEventListener(\"focusout\", handleBodyFocus);\n    return () => {\n      containerRef.current?.removeEventListener(\"focusout\", handleBodyFocus);\n    };\n  }, []);\n}\n","import React, { Key, RefObject, useContext, useMemo } from \"react\";\nimport { ToolWindowsProps } from \"../ToolWindows\";\nimport { ToolWindowState, ViewMode, WindowBounds } from \"./ToolWindowsState\";\nimport { Anchor } from \"../utils\";\nimport { useEventCallback } from \"@intellij-platform/core/utils/useEventCallback\";\n\ntype ToolWindowStateContextValue = {\n  state: Readonly<ToolWindowState>;\n  hide: () => void;\n  remove: () => void;\n  blur: () => void;\n  focusMainContent: () => void;\n  moveToSide: (args: { anchor: Anchor; isSplit: boolean }) => void;\n  changeViewMode: (viewMode: ViewMode) => void;\n  stretchWidth: (value: number) => void;\n  stretchHeight: (value: number) => void;\n  setFloatingBounds: (bounds: WindowBounds) => void;\n};\nconst ToolWindowStateContext =\n  React.createContext<ToolWindowStateContextValue | null>(null);\n\n/**\n * Used in a tool window's UI tree, to get access to the tool window state and actions for changing it.\n */\nexport const useToolWindowState = () => {\n  const context = useContext(ToolWindowStateContext);\n  if (!context) {\n    throw new Error(\n      \"useToolWindowContext is meant to be used inside a tool window.\"\n    );\n  }\n  return context;\n};\n\n/**\n * Used in ToolWindows to provide tool window state and necessary actions as a context, which will be accessible\n * within the tool window content tree, via {@link useToolWindowState}\n */\nexport const ToolWindowStateProvider: React.FC<\n  {\n    children?: React.ReactNode;\n    id: Key;\n    containerRef: RefObject<HTMLElement>;\n    mainContentFocusableRef: RefObject<{ focus: () => void }>;\n  } & Pick<ToolWindowsProps, \"toolWindowsState\" | \"onToolWindowStateChange\">\n> = ({\n  toolWindowsState,\n  containerRef,\n  mainContentFocusableRef,\n  onToolWindowStateChange,\n  id,\n  children,\n}) => {\n  const blur = useEventCallback(() => {\n    onToolWindowStateChange(toolWindowsState.blur(id));\n  });\n  const hide = useEventCallback(() => {\n    onToolWindowStateChange(toolWindowsState.hide(id));\n  });\n  const remove = useEventCallback(() => {\n    onToolWindowStateChange(toolWindowsState.removeFromSidebar(id));\n  });\n  const focusMainContent = useEventCallback(() => {\n    mainContentFocusableRef.current?.focus();\n  });\n  const moveToSide = useEventCallback(\n    (side: { anchor: Anchor; isSplit: boolean }) => {\n      onToolWindowStateChange(toolWindowsState.move(id, side));\n    }\n  );\n  const changeViewMode = useEventCallback((viewMode: ViewMode) => {\n    onToolWindowStateChange(toolWindowsState.changeViewMode(id, viewMode));\n  });\n  const stretchWidth = useEventCallback((value: number) => {\n    const container = containerRef.current;\n    if (!container) {\n      throw new Error(\"Couldn't resize since the container is not present\");\n    }\n    onToolWindowStateChange(\n      toolWindowsState.stretchWidth(\n        id,\n        value,\n        container.getBoundingClientRect()\n      )\n    );\n  });\n  const stretchHeight = useEventCallback((value: number) => {\n    const container = containerRef.current;\n    if (!container) {\n      throw new Error(\"Couldn't resize since the container is not present\");\n    }\n    onToolWindowStateChange(\n      toolWindowsState.stretchHeight(\n        id,\n        value,\n        container.getBoundingClientRect()\n      )\n    );\n  });\n  const setFloatingBounds = useEventCallback((bounds: WindowBounds) => {\n    onToolWindowStateChange(toolWindowsState.setFloatingBound(id, bounds));\n  });\n  const contextValue = useMemo((): ToolWindowStateContextValue => {\n    const state = toolWindowsState.windows[id];\n    return {\n      state,\n      hide,\n      blur,\n      remove,\n      focusMainContent,\n      moveToSide,\n      changeViewMode,\n      stretchWidth,\n      stretchHeight,\n      setFloatingBounds,\n    };\n  }, [toolWindowsState, id]);\n  return (\n    <ToolWindowStateContext.Provider value={contextValue}>\n      {children}\n    </ToolWindowStateContext.Provider>\n  );\n};\n","import { clamp, curry, fromPairs, insert, mapObjIndexed, move } from \"ramda\";\nimport { Key } from \"react\";\nimport { Anchor, isHorizontalToolWindow } from \"../utils\";\n\nexport type ViewMode =\n  | \"docked_pinned\"\n  | \"docked_unpinned\"\n  | \"undock\"\n  | \"float\"\n  /**\n   * @deprecated \"window\" ViewMode was initially added following the original impl. It doesn't seem reasonable to\n   * support it though. It's marked as deprecated to be removed in the future.\n   */\n  | \"window\";\n\nexport type WindowBounds = {\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n};\n\n/**\n * Data structure for keeping the state of a single tool window. very similar to WindowInfo in Intellij Platform\n *\n * A note about about the data structure:\n * Some fields like `isSplit`, `weight`, `floatingBound` are meaningful only\n * for a subset of viewModes. So it may be tempting to introduce a `viewMode`\n * type which minimally and more accurately describes the information\n * relevant for each viewMode. But it's not structured like that, and it's\n * orthogonal to viewMode, since we want to preserve the relevant information\n * for each viewMode, to be used when the viewMode is changed back.\n *\n * NOTE: consider renaming to `WindowState` to avoid confusion with `ToolWindowsState`\n */\nexport interface ToolWindowState {\n  /**\n   * The order of the tool window in its group. The group is specified by `anchor` and `isSplit`.\n   */\n  order: number;\n  /**\n   * Whether the tool window is visible (open) or not.\n   * NOTE: A maximum of 1 **docked** tool window within the same group (same `anchor` and `isSplit`) can be visible.\n   * You will get a render error in `ToolWindows` component otherwise.\n   */\n  isVisible: boolean;\n  /**\n   * Relative size (in the scale of 0-1) of the tool window in its anchor, when rendered in the primary group, i.e. when\n   * `isSplit` is false\n   */\n  weight: number;\n  /**\n   * Relative size (in the scale of 0-1) of the tool window in its anchor, when rendered in the secondary group. i.e.\n   * when `isSplit` is true.\n   */\n  sideWeight: number;\n  /**\n   * The side of the tool window, being \"left\", \"right\", \"top\" or \"bottom\"\n   */\n  anchor: Anchor;\n  /**\n   * Specifies whether the tool window should be shown in the split view, aka \"Secondary group\".\n   */\n  isSplit: boolean;\n  /**\n   * Tool windows view mode. See {@link ViewMode}\n   *\n   * NOTE: in Intellij Platform, there is a window `type` and also `docked` and\n   * `autoHide`.\n   * keeping one viewMode makes more sense and prevents invalid combinations\n   * like { type: \"window, \"docked\": true}, that would be unnecessarily allowed.\n   */\n  viewMode: ViewMode;\n  /**\n   * Boundaries of the tool window, when rendered in \"float\" view mode.\n   */\n  floatingBounds?: WindowBounds;\n}\n\nconst isDocked = (toolWindow: ToolWindowState) =>\n  toolWindow.viewMode === \"docked_unpinned\" ||\n  toolWindow.viewMode === \"docked_pinned\";\n\n/**\n * Determines whether the tool window should hide on focus. In the java implementation, it's a field on window\n * info instead of being a calculated field. We changed that to match viewMode with the 5 view modes that are possible\n * to choose from the UI, eliminating the combinations that are never allowed. If from UX perspective, having window\n * or float mode with autoHide feature is considered valid at some point, we may need to change the implementation\n * to something similar to the original implementation where isAutoHide and viewMode are separate.\n */\nconst isAutoHide = (toolWindow: ToolWindowState) =>\n  toolWindow.viewMode === \"docked_unpinned\" || toolWindow.viewMode === \"undock\";\n\nexport type SideInfo = Pick<ToolWindowState, \"anchor\" | \"isSplit\">;\nexport const areInSameSection = curry(\n  (window1: SideInfo, window2: SideInfo) =>\n    window1.anchor === window2.anchor && window1.isSplit === window2.isSplit\n);\n\nexport const getViewModeType = (viewMode: ViewMode) => {\n  if (viewMode === \"docked_pinned\" || viewMode === \"docked_unpinned\") {\n    return \"docked\";\n  }\n  if (viewMode === \"window\" || viewMode === \"float\") {\n    return \"float\";\n  }\n  return viewMode;\n};\ntype IdToWindowStateMap = Readonly<{\n  [key: string]: Readonly<ToolWindowState>;\n}>;\n\n/**\n * Represents UI state of a bunch of tool windows. What is rendered inside each window or toolbar button is irrelevant.\n *\n * TODO: document pros and cons of these two approaches\n * - Having a class for ToolWindowsState which keeps a readonly mapping of keys to window states.\n * - Having ToolWindowsState as an interface (a mapping from keys to window states), and a bunch of action functions\n *   which accept a window state and some arguments, and return a new window state.\n */\nexport class ToolWindowsState {\n  public readonly lastFocusedKey: Key | null;\n  public readonly removedFromSideBarIds: ReadonlySet<Key>;\n  private readonly layoutToRestore: IdToWindowStateMap;\n  constructor(\n    public readonly windows: IdToWindowStateMap,\n    {\n      lastFocusedKey = null,\n      layoutToRestore = {},\n      removedFromSideBarIds = [],\n    }: {\n      lastFocusedKey?: Key | null;\n      layoutToRestore?: IdToWindowStateMap;\n      removedFromSideBarIds?: Iterable<Key>;\n    } = {}\n  ) {\n    this.lastFocusedKey = lastFocusedKey;\n    this.layoutToRestore = layoutToRestore;\n    this.removedFromSideBarIds = new Set(removedFromSideBarIds);\n    // TODO: instead of keeping a set of removedFromSideBarIds showStripeButton can be a boolean on each window state.\n    //  if we want to avoid the invalid combination of `{ isVisible: true, showStripeButton: false }`, we can have a\n    //  a single property like : visibility: 'open' | 'closed' | 'removed'\n    const invalidWindows = Object.keys(this.windows).filter(\n      (key) =>\n        this.removedFromSideBarIds.has(key) && this.windows[key].isVisible\n    );\n    if (invalidWindows.length > 0) {\n      throw new Error(\n        `Invalid ToolWindowsState. The following windows are set as visible but are removed from the sidebar: ${invalidWindows}`\n      );\n    }\n  }\n\n  hide(targetKey: Key): ToolWindowsState {\n    return this.mapWindows((toolWindow, key) =>\n      key === targetKey\n        ? {\n            ...toolWindow,\n            isVisible: false,\n          }\n        : toolWindow\n    );\n  }\n  hideAll(): ToolWindowsState {\n    return this.mapWindows(\n      (toolWindow, key) =>\n        getViewModeType(toolWindow.viewMode) === \"float\"\n          ? toolWindow\n          : {\n              ...toolWindow,\n              isVisible: false,\n            },\n      { layoutToRestore: this.windows }\n    );\n  }\n\n  /**\n   * Restores windows to the state before hideAll.\n   */\n  restoreWindows(): ToolWindowsState {\n    return this.mapWindows(\n      (toolWindow, key) => this.layoutToRestore[key] || toolWindow\n    );\n  }\n\n  lastFocused(key: Key): ToolWindowsState {\n    return this.mapWindows((toolWindow) => toolWindow, {\n      lastFocusedKey: key,\n    });\n  }\n\n  show(targetKey: Key): ToolWindowsState {\n    const target = this.windows[targetKey];\n    if (!target) {\n      return this;\n    }\n    const closableViewModes: ViewMode[] = [];\n    if (target.viewMode === \"undock\") {\n      closableViewModes.push(\"undock\");\n    } else if (isDocked(target)) {\n      closableViewModes.push(\"docked_unpinned\", \"docked_pinned\", \"undock\");\n    }\n    return this.mapWindows(\n      (toolWindow, key) => {\n        if (key === targetKey) {\n          return {\n            ...toolWindow,\n            isVisible: true,\n          };\n        }\n        if (\n          toolWindow.isVisible &&\n          areInSameSection(target, toolWindow) &&\n          closableViewModes.includes(toolWindow.viewMode)\n        ) {\n          return { ...toolWindow, isVisible: false };\n        }\n        return toolWindow;\n      },\n      {\n        removedFromSideBarIds: [...this.removedFromSideBarIds].filter(\n          (key) => key !== targetKey\n        ),\n      }\n    );\n  }\n\n  toggle(targetKey: Key): ToolWindowsState {\n    return this.windows[targetKey]?.isVisible\n      ? this.hide(targetKey)\n      : this.show(targetKey);\n  }\n\n  blur(targetKey: Key): ToolWindowsState {\n    const target = this.windows[targetKey];\n    if (!target || !isAutoHide(target)) {\n      return this;\n    }\n    return this.mapWindows((toolWindow) => {\n      if (toolWindow === target) {\n        return {\n          ...toolWindow,\n          isVisible: false,\n        };\n      }\n      return toolWindow;\n    });\n  }\n\n  // TODO: initiate floatingBound when changing viewMode to float or window and there is no previous floatingBound\n  changeViewMode(targetKey: Key, viewMode: ViewMode): ToolWindowsState {\n    const target = this.windows[targetKey];\n    if (!target) {\n      return this;\n    }\n    return this.mapWindows((toolWindow) => {\n      if (toolWindow === target) {\n        return {\n          ...toolWindow,\n          viewMode,\n        };\n      }\n      const viewModeType = getViewModeType(toolWindow.viewMode);\n      if (\n        toolWindow.isVisible &&\n        viewModeType !== \"float\" &&\n        areInSameSection(toolWindow, target) &&\n        viewModeType === getViewModeType(viewMode)\n      ) {\n        return {\n          ...toolWindow,\n          isVisible: false,\n        };\n      }\n      return toolWindow;\n    });\n  }\n\n  move(targetKey: Key, index: number): ToolWindowsState;\n  move(targetKey: Key, side: SideInfo, index?: number): ToolWindowsState;\n  move(\n    targetKey: Key,\n    sideOrIndex: SideInfo | number,\n    index?: number\n  ): ToolWindowsState {\n    const target = this.windows[targetKey];\n    if (!target) {\n      return this;\n    }\n    const targetSide = typeof sideOrIndex === \"object\" ? sideOrIndex : target;\n    const targetIndex = typeof sideOrIndex === \"number\" ? sideOrIndex : index;\n    const targetSideWindows = Object.entries(this.windows).filter(([, value]) =>\n      areInSameSection(targetSide, value)\n    );\n    const indexInTargetSide = targetSideWindows.findIndex(\n      ([, window]) => window === target\n    );\n    const sortedTargetWindows: Array<[Key, ToolWindowState]> =\n      indexInTargetSide < 0\n        ? insert(\n            targetIndex ?? -1,\n            [targetKey, { ...target, ...targetSide }],\n            targetSideWindows\n          )\n        : move(\n            indexInTargetSide,\n            targetIndex ?? indexInTargetSide,\n            targetSideWindows\n          );\n    const newTargetSideWindows = fromPairs(\n      sortedTargetWindows.map(([key, value], index) => {\n        let newValue = value;\n        if (value.order !== index) {\n          newValue = { ...value, order: index };\n        }\n        const targetViewMode = getViewModeType(target.viewMode);\n        if (\n          key !== targetKey &&\n          target.isVisible &&\n          value.isVisible &&\n          targetViewMode !== \"float\" &&\n          getViewModeType(value.viewMode) === targetViewMode\n        ) {\n          newValue = { ...value, isVisible: false };\n        }\n        return [`${key}`, newValue];\n      })\n    );\n    return this.mapWindows((value, key) => newTargetSideWindows[key] || value);\n  }\n\n  stretchWidth(\n    targetKey: Key,\n    value: number,\n    containerBounds: { width: number; height: number }\n  ): ToolWindowsState {\n    return this.stretch(targetKey, value, containerBounds, \"width\");\n  }\n\n  stretchHeight(\n    targetKey: Key,\n    value: number,\n    containerBounds: { width: number; height: number }\n  ): ToolWindowsState {\n    return this.stretch(targetKey, value, containerBounds, \"height\");\n  }\n\n  setFloatingBound(\n    targetKey: Key,\n    floatingBounds: WindowBounds\n  ): ToolWindowsState {\n    return this.update(targetKey, \"floatingBounds\", floatingBounds);\n  }\n\n  removeFromSidebar(targetKey: Key): ToolWindowsState {\n    return this.mapWindows(\n      (state, key) =>\n        key === targetKey\n          ? {\n              ...state,\n              isVisible: false,\n            }\n          : state,\n      {\n        removedFromSideBarIds: [...this.removedFromSideBarIds, targetKey],\n      }\n    );\n  }\n\n  mapWindows(\n    mapFn: (toolWindow: ToolWindowState, key: string) => ToolWindowState,\n    options: ConstructorParameters<typeof ToolWindowsState>[1] = {}\n  ) {\n    return new ToolWindowsState(mapObjIndexed(mapFn, this.windows), {\n      lastFocusedKey: this.lastFocusedKey,\n      layoutToRestore: this.layoutToRestore,\n      removedFromSideBarIds: this.removedFromSideBarIds,\n      ...options,\n    });\n  }\n\n  private update<K extends keyof ToolWindowState>(\n    targetKey: Key,\n    key: K,\n    value: ToolWindowState[K]\n  ) {\n    const target = this.windows[targetKey];\n    if (!target) {\n      return this;\n    }\n    return this.mapWindows((window) => {\n      if (window === target) {\n        return {\n          ...window,\n          [key]: value,\n        };\n      }\n      return window;\n    });\n  }\n\n  private stretch(\n    targetKey: Key,\n    value: number,\n    containerBounds: { width: number; height: number },\n    property: \"width\" | \"height\"\n  ): ToolWindowsState {\n    const target = this.windows[targetKey];\n    if (!target) {\n      return this;\n    }\n    const viewModeType = getViewModeType(target.viewMode);\n    if (viewModeType === \"float\") {\n      return this.mapWindows((window) => {\n        if (window === target) {\n          const currentFloatingBound = window.floatingBounds!;\n          return {\n            ...window,\n            floatingBounds: {\n              ...currentFloatingBound,\n              [property]: currentFloatingBound[property] + value,\n            },\n          };\n        }\n        return window;\n      });\n    }\n    const expectedProperty = isHorizontalToolWindow(target.anchor)\n      ? \"height\"\n      : \"width\";\n    if (expectedProperty !== property) {\n      return this;\n    }\n    const containerSize = containerBounds[property];\n    const newValue = containerSize * target.weight + value;\n    const isNewValueValid = clamp(0, containerSize, newValue) === newValue;\n    if (isNewValueValid) {\n      if (viewModeType === \"docked\") {\n        return this.resizeDock(target.anchor, newValue, containerBounds);\n      } else {\n        return this.resizeUndock(target.anchor, newValue, containerBounds);\n      }\n    }\n    return this;\n  }\n\n  resizeDock(\n    anchor: Anchor,\n    size: number,\n    containerBounds: { width: number; height: number }\n  ): ToolWindowsState {\n    return this.resizeSide(true, anchor, size, containerBounds);\n  }\n\n  resizeUndock(\n    anchor: Anchor,\n    size: number,\n    containerBounds: { width: number; height: number }\n  ): ToolWindowsState {\n    return this.resizeSide(false, anchor, size, containerBounds);\n  }\n\n  resizeDockSplitView(anchor: Anchor, weight: number): ToolWindowsState {\n    return this.mapWindows((window) => {\n      if (window.anchor === anchor && window.isVisible && isDocked(window)) {\n        return {\n          ...window,\n          sideWeight: window.isSplit ? weight : 1 - weight,\n        };\n      }\n      return window;\n    });\n  }\n\n  private resizeSide(\n    dock: boolean,\n    anchor: Anchor,\n    size: number,\n    containerBounds: { width: number; height: number }\n  ): ToolWindowsState {\n    return this.mapWindows((window) => {\n      const isInResizingView = dock\n        ? isDocked(window)\n        : window.viewMode === \"undock\";\n      if (window.anchor === anchor && isInResizingView && window.isVisible) {\n        const containerSize = !isHorizontalToolWindow(anchor)\n          ? containerBounds.width\n          : containerBounds.height;\n        return {\n          ...window,\n          weight: size / containerSize,\n        };\n      }\n      return window;\n    });\n  }\n}\n\nexport const toolWindowState = ({\n  viewMode = \"docked_pinned\",\n  ...inputs\n}: Partial<ToolWindowState> = {}): ToolWindowState => ({\n  anchor: \"left\",\n  isSplit: false,\n  viewMode: viewMode,\n  order: 1,\n  weight: 0.2,\n  sideWeight: 0.5,\n  isVisible: false,\n  floatingBounds:\n    getViewModeType(viewMode) === \"float\"\n      ? {\n          left: 300,\n          top: 300,\n          width: 600,\n          height: 300,\n        }\n      : undefined,\n  ...inputs,\n});\n","export type Anchor = \"left\" | \"right\" | \"top\" | \"bottom\";\n\nexport const getAnchorOrientation = (\n  anchor: Anchor\n): \"horizontal\" | \"vertical\" =>\n  isHorizontalToolWindow(anchor) ? \"horizontal\" : \"vertical\";\n\nexport const isHorizontalToolWindow = (anchor: Anchor) =>\n  anchor === \"top\" || anchor === \"bottom\";\n\nexport const theOtherSide = (anchor: Anchor) =>\n  ({\n    left: \"right\" as const,\n    right: \"left\" as const,\n    top: \"bottom\" as const,\n    bottom: \"top\" as const,\n  }[anchor]);\n","import React, { RefObject, useEffect, useRef, useState } from \"react\";\nimport { useFocusWithin } from \"@react-aria/interactions\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useToolWindowState } from \"@intellij-platform/core/ToolWindows\";\nimport { useOverlayMoveHandle } from \"@intellij-platform/core/Overlay\";\nimport { useFocusForwarder } from \"@intellij-platform/core/utils/useFocusForwarder\";\n\nexport function useToolWindow(\n  {\n    containerRef,\n    contentRef,\n    focusableContentRef,\n  }: {\n    containerRef: RefObject<HTMLElement>;\n    contentRef: RefObject<Element>;\n    focusableContentRef: RefObject<{ focus: () => void }>;\n  },\n  { onFocusChange }: { onFocusChange?: (focused: boolean) => void } = {}\n) {\n  const [contentHasFocus, setContentHasFocus] = useState(false);\n  /**\n   * NOTE: useFocusWithin form @react-aria/interactions (at least until 3.5.1) has a couple of problem, because of which\n   * we may need to implement our own version of it.\n   * - It doesn't play nice with FocusScope with `contain` set to true. When something is blurred, FocusScope prevents\n   *   that by restoring focus back immediately. but the blur event is already caught by useFocusWithin. One solution\n   *   would be to change useFocusWithin implementation to ignore these blur events that are immediately followed\n   *   by a focus event that keeps the focus in.\n   * - useFocusWithin has an inconsistent behaviour when it comes to Portals. Since it uses react props for handling\n   *   focus and blur, the [react tree determines event bubbling](https://reactjs.org/docs/portals.html#event-bubbling-through-portals),\n   *   which can be a very nice feature, when an overlay (rendered in a portal) grabs the focus, which should still\n   *   be seen as \"within\". But the problems is that the current implementation uses DOM `.contains(e.relatedTarget)`\n   *   method to determine if focus is no longer within. First of all, using react tree or dom tree to determine \"within\"\n   *   can be seen as an option perhaps. Secondly, it should be consistent on focus and blur.\n   *\n   *   Right now these problems are no big deal. but it may become an issue when portals are used within the content\n   *   of the tool window.\n   *\n   * NOTE: In the original implementation, when a heading toolbar button opens a menu, and focus goes to menu, the\n   * header loses the focus appearance, ant it relies only on content having the focus.\n   */\n  const { focusWithinProps: contentFocusWithinProps } = useFocusWithin({\n    onFocusWithinChange: setContentHasFocus,\n  });\n\n  const { focusWithinProps } = useFocusWithin({\n    onFocusWithinChange: onFocusChange,\n  });\n\n  const { toolWindowProps: autoHideProps } = useAutoHide();\n\n  const { focusForwarderProps } = useFocusForwarder({\n    forwardFocus: focusableContentRef.current?.focus,\n    ignoreFocusedDescendant: true,\n  });\n\n  // If there is no focusable content rendered in the tool window, nothing will be autofocused. In that case\n  // we will focus the tool window container itself as a fallback.\n  useEffect(() => {\n    if (\n      !document.activeElement ||\n      !containerRef.current?.contains(document.activeElement)\n    ) {\n      containerRef.current?.focus();\n    }\n  }, []);\n\n  const { moveHandleProps } = useOverlayMoveHandle();\n\n  return {\n    contentHasFocus,\n    toolWindowProps: mergeProps(\n      focusForwarderProps,\n      focusWithinProps,\n      autoHideProps,\n      {\n        tabIndex: -1,\n      }\n    ),\n    toolWindowContentProps: contentFocusWithinProps,\n    toolWindowHeaderProps: moveHandleProps,\n  };\n}\n\n/**\n * Applies the auto hide behaviour of tool window based on view mode information and by handling focus and blur events,\n * on the root tool window element. Returns the necessary props that should be applied to the root tool window element.\n * The implementation is not perfect and may not 100% match the original Intellij Platform implementation.\n * If this focus based implementation for auto hide proves to be fragile and not good enough in future,\n * an alternative approach would be to move auto hide logic to the state management logic as much as possible,\n * and limit the focus based auto-hiding to only when the focus goes within the main content area. That should have\n * less focus-related edge cases.\n * TODO: auto hide behaviour should be moved to the core ToolWindows API. ToolWindows now renders a FocusScope and\n * handles focus events on any tool window, to track last focused tool window.\n */\nfunction useAutoHide() {\n  const { blur } = useToolWindowState();\n  const hideTimeoutId = useRef<number | null>(null);\n  const { focusWithinProps: windowFocusWithinProps } = useFocusWithin({\n    onBlurWithin: (e) => {\n      // setTimeout and windowHasFocusRef is to work around the problem with useFocusWithin, described above.\n      hideTimeoutId.current = window.setTimeout(() => {\n        // Sometimes when the element is blurred, the subsequent focus that is triggered by FocusScope to keep the focus\n        // is a little delayed and therefore after the timeout reaches. It seem to happen only when a non-focusable\n        // area is clicked. We mitigate it by ignoring blur events where nothing is focused. It's not a problem\n        // at least with `DefaultToolWindow` implementation that uses a FocusScope.\n        const isSomethingElseFocused = e.relatedTarget;\n        if (isSomethingElseFocused) {\n          blur();\n        }\n      });\n    },\n    onFocusWithin: () => {\n      if (hideTimeoutId.current !== null) {\n        clearTimeout(hideTimeoutId.current);\n        hideTimeoutId.current = null;\n      }\n    },\n  });\n  return {\n    toolWindowProps: windowFocusWithinProps,\n  };\n}\n","import React from \"react\";\nimport { DividerItem } from \"@intellij-platform/core/Collections\";\nimport { useToolWindowState } from \"@intellij-platform/core/ToolWindows\";\nimport {\n  useAction,\n  useActionGroup,\n} from \"@intellij-platform/core/ActionSystem\";\nimport {\n  ActionItem,\n  ActionsMenu,\n} from \"@intellij-platform/core/ActionSystem/components\";\nimport {\n  MOVE_TO_ACTION_GROUP_ID,\n  TOOL_WINDOW_RESIZE_ACTION_GROUP_ID,\n  VIEW_MODE_ACTION_GROUP_ID,\n  ViewModeToActionId,\n} from \"./useToolWindowActions\";\nimport {\n  MAXIMIZE_TOOL_WINDOW_ACTION_ID,\n  REMOVE_TOOL_WINDOW_FROM_SIDEBAR_ACTION_ID,\n} from \"./ToolWindowActionIds\";\nimport { MenuTriggerProps } from \"@intellij-platform/core/Menu\";\n\n/**\n * Tool window gear icon menu, with a set of default actions and some extra ones.\n * TODO: add support for extra actions when action system is progressed a little.\n */\nexport function ToolWindowSettingsIconMenu({\n  menuProps,\n}: {\n  menuProps: Parameters<MenuTriggerProps[\"renderMenu\"]>[0][\"menuProps\"];\n}) {\n  const { state } = useToolWindowState();\n\n  const viewModeActionGroup = useActionGroup(VIEW_MODE_ACTION_GROUP_ID);\n  const moveToActionGroup = useActionGroup(MOVE_TO_ACTION_GROUP_ID);\n  const resizeActions = useActionGroup(TOOL_WINDOW_RESIZE_ACTION_GROUP_ID);\n  const maximizeAction = useAction(MAXIMIZE_TOOL_WINDOW_ACTION_ID);\n  const removeFromSideBarAction = useAction(\n    REMOVE_TOOL_WINDOW_FROM_SIDEBAR_ACTION_ID\n  );\n  if (\n    !viewModeActionGroup ||\n    !moveToActionGroup ||\n    !resizeActions ||\n    !maximizeAction ||\n    !removeFromSideBarAction\n  ) {\n    throw new Error(\n      \"[ToolWindowSettingsIconMenu]: can't find tool window actions.\"\n    );\n  }\n\n  const gearIconActions: Array<ActionItem> = [\n    viewModeActionGroup,\n    moveToActionGroup,\n    {\n      id: \"resize\",\n      title: \"Resize\",\n      menuPresentation: \"submenu\",\n      children: [...resizeActions.children, maximizeAction],\n    },\n    new DividerItem(),\n    removeFromSideBarAction,\n  ];\n  return (\n    <ActionsMenu\n      actions={gearIconActions}\n      selectedKeys={[ViewModeToActionId[state.viewMode]]}\n      {...menuProps}\n    />\n  );\n}\n","import React, { HTMLProps } from \"react\";\nimport { IconButton } from \"@intellij-platform/core/IconButton\";\nimport { Toolbar } from \"@intellij-platform/core/Toolbar/Toolbar\";\nimport { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport { MenuTrigger } from \"@intellij-platform/core/Menu/MenuTrigger\";\nimport { ActionTooltip, TooltipTrigger } from \"@intellij-platform/core/Tooltip\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { StyledHorizontalSeparator } from \"@intellij-platform/core/StyledSeparator\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme/Theme\";\nimport { ToolWindowSettingsIconMenu } from \"./ToolWindowSettingsIconMenu\";\nimport {\n  DOCK_TOOL_WINDOW_ACTION_ID,\n  HIDE_ACTIVE_WINDOW_ACTION_ID,\n} from \"./ToolWindowActionIds\";\nimport { ActionButton } from \"@intellij-platform/core/ActionSystem/components\";\n\nexport interface ToolWindowHeaderProps\n  extends Omit<HTMLProps<HTMLDivElement>, \"ref\" | \"as\"> {\n  contentHasFocus?: boolean;\n  additionalActions?: React.ReactNode;\n}\n\nconst StyledToolWindowHeader = styled.div<{ active: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: end; // to have the content overflow from right, as the toolwindow shrinks. That will keep the left-most buttons in the view\n  padding: 0 2px 0 4px;\n  overflow: hidden; // for the negative margin applied on StyledToolWindowHeaderActions\n  border-bottom: 1px solid\n    ${({ theme }) =>\n      theme.color(\n        \"ToolWindow.Header.borderColor\" as UnknownThemeProp<\"ToolWindow.Header.borderColor\">\n      ) ||\n      theme.color(\"DefaultTabs.borderColor\") ||\n      theme.commonColors.contrastBorder};\n  background: ${({ theme, active }) =>\n    active\n      ? theme.color(\"ToolWindow.Header.background\") ||\n        theme.color(\n          \"ToolWindow.header.active.background\" as UnknownThemeProp<\"ToolWindow.header.active.background\">\n        ) ||\n        \"#E2E6EC\"\n      : theme.color(\"ToolWindow.Header.inactiveBackground\") ||\n        theme.color(\"ToolWindow.Header.background\") ||\n        \"#ECECEC\"};\n`;\n\nconst StyledToolWindowHeaderActions = styled.div`\n  margin-right: -4px;\n`;\n\nconst StyledToolWindowHeaderContent = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n`;\n\nexport const DefaultToolWindowHeader: React.FC<ToolWindowHeaderProps> = ({\n  children,\n  additionalActions,\n  contentHasFocus = false,\n  ...otherProps\n}) => {\n  return (\n    <StyledToolWindowHeader active={contentHasFocus} {...otherProps}>\n      <StyledToolWindowHeaderContent>{children}</StyledToolWindowHeaderContent>\n      <StyledToolWindowHeaderActions>\n        <Toolbar>\n          {additionalActions && (\n            <>\n              {additionalActions}\n              <StyledHorizontalSeparator />\n            </>\n          )}\n          <ActionButton actionId={DOCK_TOOL_WINDOW_ACTION_ID} />\n          <MenuTrigger\n            renderMenu={({ menuProps }) => {\n              return <ToolWindowSettingsIconMenu menuProps={menuProps} />;\n            }}\n          >\n            {(props, ref) => (\n              <TooltipTrigger tooltip={<ActionTooltip actionName=\"Options\" />}>\n                <IconButton {...props} ref={ref}>\n                  <PlatformIcon icon=\"general/gearPlain\" />\n                </IconButton>\n              </TooltipTrigger>\n            )}\n          </MenuTrigger>\n          <ActionButton actionId={HIDE_ACTIVE_WINDOW_ACTION_ID} />\n        </Toolbar>\n      </StyledToolWindowHeaderActions>\n    </StyledToolWindowHeader>\n  );\n};\n","import React, { useContext, useMemo, useRef } from \"react\";\nimport { filterDOMProps, mergeProps } from \"@react-aria/utils\";\nimport { DOMProps } from \"@react-types/shared\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport {\n  FocusScope,\n  FocusScopeRef,\n} from \"@intellij-platform/core/utils/FocusScope\";\nimport {\n  ActionDefinition,\n  ActionsProvider,\n} from \"@intellij-platform/core/ActionSystem\";\nimport { useToolWindow } from \"./useToolWindow\";\nimport { DefaultToolWindowHeader } from \"./DefaultToolWindowHeader\";\nimport { useToolWindowActions } from \"./useToolWindowActions\";\n\nexport interface DefaultToolWindowProps extends DOMProps {\n  children?: React.ReactNode;\n  /**\n   * title to be shown on the left side of the tool window header.\n   */\n  headerContent?: React.ReactNode;\n  /**\n   * additional action buttons to be rendered before the default gear and hide buttons.\n   */\n  additionalActions?: React.ReactNode;\n  /**\n   * Actions to be provided in the tool window, in addition to the default tool window actions.\n   */\n  actions?: ActionDefinition[];\n  /**\n   * The title of main part of the tool windows component. Used in tool window actions.\n   * @default \"Editor\"\n   */\n  mainContentTitle?: string;\n  onFocusChange?: (focused: boolean) => void;\n}\n\nconst StyledToolWindowContainer = styled.div`\n  outline: none;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n  flex: 1;\n`;\nconst StyledToolWindowContent = styled.div`\n  flex: 1;\n  overflow: auto;\n`;\n\ninterface DefaultToolWindowContextObj {\n  hasFocus?: boolean;\n}\n\nconst DefaultToolWindowContext =\n  React.createContext<DefaultToolWindowContextObj>({\n    hasFocus: false,\n  });\n\nexport const useDefaultToolWindowContext = () =>\n  useContext(DefaultToolWindowContext);\n/**\n * Default component for rendering the content of a tool window. It supports a header and a scrollable area.\n * The header supports showing a content, and some default+custom actions on the right.\n *\n * @see MultiContentToolWindow\n *\n * Remaining features:\n * - Additional gear menu actions.\n *\n */\nexport const DefaultToolWindow: React.FC<DefaultToolWindowProps> = ({\n  headerContent,\n  children,\n  additionalActions,\n  onFocusChange,\n  actions,\n  mainContentTitle = \"Editor\",\n  ...otherProps\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const contentRef = useRef<HTMLDivElement>(null);\n  const focusableContentRef = useRef<FocusScopeRef>(null);\n  const {\n    // NOTE: we might as well use :focus-within and target StyledToolWindowHeader to set the background, but it's not\n    // a clear improvement.\n    contentHasFocus,\n    toolWindowProps,\n    toolWindowContentProps,\n    toolWindowHeaderProps,\n  } = useToolWindow(\n    { containerRef, contentRef, focusableContentRef },\n    {\n      onFocusChange,\n    }\n  );\n\n  const defaultToolWindowContext = useMemo(\n    () => ({\n      hasFocus: contentHasFocus,\n    }),\n    [contentHasFocus]\n  );\n  const activeToolWindowActionGroup = useToolWindowActions({\n    mainContentTitle,\n  });\n  const allActions = [activeToolWindowActionGroup, ...(actions || [])];\n\n  return (\n    <ActionsProvider actions={allActions}>\n      {({ shortcutHandlerProps }) => (\n        <StyledToolWindowContainer\n          {...mergeProps(\n            toolWindowProps,\n            shortcutHandlerProps,\n            filterDOMProps(otherProps)\n          )}\n          ref={containerRef}\n        >\n          <DefaultToolWindowContext.Provider value={defaultToolWindowContext}>\n            <DefaultToolWindowHeader\n              additionalActions={additionalActions}\n              contentHasFocus={contentHasFocus}\n              {...toolWindowHeaderProps}\n            >\n              {headerContent}\n            </DefaultToolWindowHeader>\n            <StyledToolWindowContent\n              ref={contentRef}\n              {...toolWindowContentProps}\n            >\n              {/**\n               * FIXME: adding `contain` prevents focus from moving to another focus scope both with mouse and keyboard.\n               * If we want to follow the Intellij Platform behaviour exactly, we need a kind of focus containment, where\n               * focus is trapped only for keyboard interaction, and user can still move focus by clicking another scope.\n               * Maybe a custom useFocusContainment hook and a separate option for activating it on our own FocusScope.\n               */}\n              <FocusScope ref={focusableContentRef} autoFocus>\n                {children}\n              </FocusScope>\n            </StyledToolWindowContent>\n          </DefaultToolWindowContext.Provider>\n        </StyledToolWindowContainer>\n      )}\n    </ActionsProvider>\n  );\n};\n","import React from \"react\";\nimport { Shortcut, useAction } from \"@intellij-platform/core/ActionSystem\";\nimport { ActionTooltip, TooltipTrigger } from \"@intellij-platform/core/Tooltip\";\nimport { getActivateToolWindowActionId } from \"./useToolWindowsActions\";\nimport styled from \"styled-components\";\n\nconst getToolWindowNumberFromShortcut = (shortcut: Shortcut): number | null => {\n  const num =\n    shortcut.type === \"keyboard\" &&\n    shortcut.firstKeyStroke.modifiers?.length === 1 &&\n    [\"Alt\", \"Meta\", \"Control\"].includes(shortcut.firstKeyStroke.modifiers[0]) &&\n    shortcut.firstKeyStroke.code.match(/^(Digit|Numpad)([0-9])$/)?.[2];\n  if (num) {\n    return parseInt(num);\n  }\n  return null;\n};\n\nconst StyledWrapper = styled.span`\n  display: flex;\n`;\n\n/**\n * Default UI for the toolbar button (aka. stripe button) of the tool window.\n * - Renders the title and icon for the tool window\n * - Optionally shows the number before the title, if a numeric shortcut is set for the corresponding ActivateToolWindow\n *   action, in the currently applied keymap.\n * - Adds an Action Tooltip\n */\nexport const DefaultToolWindowToolbarButton = ({\n  id,\n  title,\n  icon,\n  showNumber = true,\n}: {\n  id: React.Key;\n  title: string;\n  icon: React.ReactNode;\n  showNumber?: boolean;\n}) => {\n  const action = useAction(getActivateToolWindowActionId(`${id}`));\n\n  const number = action?.shortcuts\n    ?.map(getToolWindowNumberFromShortcut)\n    .find(Number.isInteger);\n  return (\n    <TooltipTrigger\n      tooltip={<ActionTooltip actionName={title} shortcut={action?.shortcut} />}\n    >\n      <StyledWrapper>\n        {icon}\n        &nbsp;\n        {number != null && showNumber ? (\n          <>\n            <u>{number}</u>:&nbsp;\n          </>\n        ) : null}\n        {title}\n      </StyledWrapper>\n    </TooltipTrigger>\n  );\n};\n","import React, { ForwardedRef } from \"react\";\nimport { indexBy } from \"ramda\";\nimport { mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport {\n  ToolWindowRefValue,\n  ToolWindows,\n  ToolWindowsProps,\n} from \"@intellij-platform/core/ToolWindows\";\nimport { useToolWindowsActions } from \"./useToolWindowsActions\";\nimport { DefaultToolWindowToolbarButton } from \"./DefaultToolWindowToolbarButton\";\nimport { ActionsProvider } from \"@intellij-platform/core/ActionSystem\";\n\ninterface DefaultToolWindow {\n  id: string;\n  title: string;\n  icon: React.ReactNode;\n  content: React.ReactNode;\n}\n\n/**\n * A wrapper around ToolWindows, which provides default actions. It also expects windows to have a `title` and an `icon`\n * instead of more generic `toolbarButton`. The `title` and `icon` are then used in toolbar button, and also in the\n * actions that are dynamically created for each window to toggle/focus the tool window.\n */\nexport const DefaultToolWindows = React.forwardRef(function DefaultToolWindows(\n  {\n    windows: toolWindows,\n    toolWindowsState,\n    showNumbers,\n    ...props\n  }: Omit<ToolWindowsProps, \"windows\"> & {\n    windows: DefaultToolWindow[];\n    showNumbers?: boolean;\n  },\n  forwardedRef: ForwardedRef<ToolWindowRefValue>\n): React.ReactElement {\n  const toolWindowsRef = useObjectRef(forwardedRef);\n  const windowById = indexBy(({ id }) => id, toolWindows);\n  const actions = useToolWindowsActions({\n    toolWindowsRef,\n    toolWindowsState,\n    getPresentation: (id) => windowById[id],\n  });\n  return (\n    <ActionsProvider actions={actions}>\n      {({ shortcutHandlerProps }) => (\n        <ToolWindows\n          {...props}\n          ref={toolWindowsRef}\n          toolWindowsState={toolWindowsState}\n          windows={toolWindows.map(({ id, icon, content, title }) => ({\n            id,\n            toolbarButton: (\n              <DefaultToolWindowToolbarButton\n                id={id}\n                icon={icon}\n                title={title}\n                showNumber={showNumbers}\n              />\n            ),\n            content,\n          }))}\n          containerProps={mergeProps(\n            props.containerProps || {},\n            shortcutHandlerProps\n          )}\n        />\n      )}\n    </ActionsProvider>\n  );\n});\n","import React, { Key, useEffect, useState } from \"react\";\nimport { useControlledState } from \"@react-stately/utils\";\nimport { DefaultToolWindow, DefaultToolWindowProps } from \"./DefaultToolWindow\";\nimport { TabItem } from \"../Tabs/TabItem\";\nimport { usePrevious } from \"../utils/usePrevious\";\nimport { ToolWindowTabs } from \"../Tabs/ToolWindowTabs/ToolWindowTabs\";\n\nexport interface MultiContentToolWindowProps\n  extends Pick<DefaultToolWindowProps, \"additionalActions\"> {\n  /**\n   * List of contents that will be accessible with a list of grouped or ungrouped tabs in the tool window header.\n   */\n  children:\n    | React.ReactElement<MultiContentToolWindowContentProps>[]\n    | React.ReactElement<MultiContentToolWindowContentProps>;\n  /**\n   * Key of currently active content\n   */\n  activeKey?: Key;\n  defaultActiveKey?: Key;\n  onActiveKeyChange?: (key: Key) => void;\n  /**\n   * If true, it groups tabs in a dropdown instead.\n   *\n   * @default false\n   */\n  groupTabs?: boolean;\n  /**\n   * The content shown as the title of the tool window, before content switcher (tabs or dropdown).\n   * For more control over header content, you can pass a function which accepts rendered content switcher,\n   * and then you can compose it with other content as you wish. Use case examples of function variant:\n   * - You want to render a title before the content switcher, and something after the tabs. Like a \"+\" button in\n   *   terminal.\n   * - You want to conditionally move inner-content header up to the tool window header, if there is only one tab. In\n   *   that case you don't need to render the content switcher at all. An example is the new design in the \"Run\"\n   *   tool window.\n   */\n  headerContent?:\n    | React.ReactNode\n    | ((props: { renderedViewSwitcher: React.ReactNode }) => React.ReactNode);\n}\n\n/**\n * Implemented on top of DefaultToolWindow, allows for multiple tabbed content within a tool window.\n * Remaining features:\n * - Although trivial, group tabs action in tool window header gear icon is intentionally left unimplemented for now,\n *   until an increment on action system is done.\n * - Grouped mode is not implemented currently, as we don't have a dropdown component. Though it seems it's just a\n *   MenuTrigger and some trigger with a arrow icon.\n */\nexport const MultiViewToolWindow = ({\n  groupTabs,\n  children,\n  headerContent,\n  ...props\n}: MultiContentToolWindowProps) => {\n  const [isToolWindowFocused, setToolWindowFocused] = useState(false);\n  const [activeKey, setActiveKey] = useControlledState(\n    props.activeKey!,\n    props.defaultActiveKey!,\n    props.onActiveKeyChange!\n  );\n  const contents = React.Children.toArray(children)\n    .filter(\n      (\n        child\n      ): child is React.ReactElement<MultiContentToolWindowContentProps> => {\n        const validChild =\n          React.isValidElement(child) &&\n          child.type === MultiContentToolWindowContent;\n        if (!validChild) {\n          // FIXME: only warn in dev mode\n          console.warn(\n            \"You are not supposed to render anything but MultiContentToolWindowContent inside MultiViewToolWindow. Rendered: \",\n            child\n          );\n        }\n        return validChild;\n      }\n    )\n    // The following map is because of what React.Children.toArray does to keys: https://stackoverflow.com/q/33791401/1493081\n    // It doesn't look like a good idea since and there might be better ways to fix this, or at least make sure it would\n    // work in all cases. FIXME\n    .map((content) => ({ ...content, key: `${content.key}`.slice(2) as Key }));\n  const renderContentSwitcher = () => {\n    if (groupTabs) {\n      console.error(\n        \"groupTab is not supported yet in MultiViewToolWindow. Will fallback to ungrouped tabs\"\n      );\n    }\n    return (\n      <ToolWindowTabs\n        noBorders\n        items={contents}\n        active={isToolWindowFocused}\n        selectedKey={activeKey}\n        onSelectionChange={setActiveKey}\n      >\n        {(item) => <TabItem key={item.key}>{item.props.tabContent}</TabItem>}\n      </ToolWindowTabs>\n    );\n  };\n  const renderedViewSwitcher = renderContentSwitcher();\n\n  // We set the active key if it's not set or is invalid. A common scenario is when tabs are closable, and when the\n  // active tab is closed. You would always want to previous tab to get activated in such cases, instead of the first\n  // one. By having the logic here, there is no need to repeat the same logic in each use case. Although, it can also\n  // be moved into a state management utility for tabs, maybe in the future.\n\n  const keys = contents.map(({ key }) => key);\n  const previousKeys = usePrevious(keys);\n  useEffect(() => {\n    if (!keys.includes(activeKey)) {\n      const newActiveKey = keys[previousKeys.indexOf(activeKey) - 1] ?? keys[0];\n      if (newActiveKey != undefined) {\n        setActiveKey(newActiveKey);\n      }\n    }\n  });\n\n  const activeContent = contents.find(\n    (content) => activeKey == undefined || activeKey === content.key\n  );\n  return (\n    <DefaultToolWindow\n      onFocusChange={setToolWindowFocused}\n      headerContent={\n        typeof headerContent === \"function\" ? (\n          headerContent({ renderedViewSwitcher })\n        ) : (\n          <>\n            {headerContent}\n            {renderedViewSwitcher}\n          </>\n        )\n      }\n      additionalActions={props.additionalActions}\n    >\n      {activeContent?.props.children}\n    </DefaultToolWindow>\n  );\n};\n\nexport interface MultiContentToolWindowContentProps {\n  key: Key;\n  /**\n   * Used in the corresponding tab.\n   */\n  tabContent: React.ReactNode;\n\n  children: React.ReactNode;\n}\n\nconst MultiContentToolWindowContent =\n  ({}: MultiContentToolWindowContentProps) => {\n    throw new Error(\n      \"MultiContentToolWindowContent is not meant to be rendered directly. You should only use it in MultiViewToolWindow\"\n    );\n  };\n\nMultiViewToolWindow.View = MultiContentToolWindowContent;\n","export const HIDE_ALL_WINDOWS_ACTION_ID = \"HideAllWindows\";\nexport const JUMP_TO_LAST_WINDOW_ACTION_ID = \"JumpToLastWindow\";\nexport const HIDE_ACTIVE_WINDOW_ACTION_ID = \"HideActiveWindow\";\nexport const MAXIMIZE_TOOL_WINDOW_ACTION_ID = \"MaximizeToolWindow\";\nexport const DOCK_TOOL_WINDOW_ACTION_ID = \"DockToolWindow\";\nexport const RESIZE_TOOL_WINDOW_RIGHT_ACTION_ID = \"ResizeToolWindowRight\";\nexport const RESIZE_TOOL_WINDOW_LEFT_ACTION_ID = \"ResizeToolWindowLeft\";\nexport const RESIZE_TOOL_WINDOW_TOP_ACTION_ID = \"ResizeToolWindowTop\";\nexport const RESIZE_TOOL_WINDOW_BOTTOM_ACTION_ID = \"ResizeToolWindowBottom\";\nexport const DOCK_PINNED_MODE_ACTION_ID = \"DockPinnedMode\";\nexport const DOCK_UNPINNED_MODE_ACTION_ID = \"DockUnpinnedMode\";\nexport const UNDOCK_MODE_ACTION_ID = \"UndockMode\";\nexport const FLOAT_MODE_ACTION_ID = \"FloatMode\";\nexport const WINDOW_MODE_ACTION_ID = \"WindowMode\";\nexport const FOCUS_EDITOR_ACTION_ID = \"FocusEditor\";\nexport const REMOVE_TOOL_WINDOW_FROM_SIDEBAR_ACTION_ID =\n  \"RemoveToolWindowFromSidebar\"; // doesn't show up in keymap. Not sure what the id is in the original impl.\n","import React from \"react\";\nimport {\n  Anchor,\n  isHorizontalToolWindow,\n  useToolWindowState,\n  ViewMode,\n} from \"@intellij-platform/core/ToolWindows\";\nimport {\n  ActionDefinition,\n  ActionGroupDefinition,\n} from \"@intellij-platform/core/ActionSystem\";\nimport { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport {\n  DOCK_PINNED_MODE_ACTION_ID,\n  DOCK_TOOL_WINDOW_ACTION_ID,\n  DOCK_UNPINNED_MODE_ACTION_ID,\n  FLOAT_MODE_ACTION_ID,\n  FOCUS_EDITOR_ACTION_ID,\n  HIDE_ACTIVE_WINDOW_ACTION_ID,\n  MAXIMIZE_TOOL_WINDOW_ACTION_ID,\n  REMOVE_TOOL_WINDOW_FROM_SIDEBAR_ACTION_ID,\n  RESIZE_TOOL_WINDOW_BOTTOM_ACTION_ID,\n  RESIZE_TOOL_WINDOW_LEFT_ACTION_ID,\n  RESIZE_TOOL_WINDOW_RIGHT_ACTION_ID,\n  RESIZE_TOOL_WINDOW_TOP_ACTION_ID,\n  UNDOCK_MODE_ACTION_ID,\n  WINDOW_MODE_ACTION_ID,\n} from \"./ToolWindowActionIds\";\nimport { useCreateDefaultActionGroup } from \"@intellij-platform/core/ActionSystem/components\";\n\n// Resize steps in Intellij Platform is calculated based on the size of a \"W\" character and some\n// configuration (ide.windowSystem.hScrollChars). Although it's technically feasible, it seems not necessary\nconst HEIGHT_RESIZE_STEP = 16 * 5;\nconst WIDTH_RESIZE_STEP = 13 * 5;\n\nexport const anchors: Array<{\n  anchor: Anchor;\n  isSplit: boolean;\n  id: string;\n}> = [\n  { id: \"moveToLeftTop\", anchor: \"left\", isSplit: false },\n  { id: \"moveToLeftBottom\", anchor: \"left\", isSplit: true },\n  { id: \"moveToBottomLeft\", anchor: \"bottom\", isSplit: false },\n  { id: \"moveToBottomRight\", anchor: \"bottom\", isSplit: true },\n  { id: \"moveToRightTop\", anchor: \"right\", isSplit: true },\n  { id: \"moveToRightBottom\", anchor: \"right\", isSplit: false },\n  { id: \"moveToTopRight\", anchor: \"top\", isSplit: true },\n  { id: \"moveToTopLeft\", anchor: \"top\", isSplit: false },\n];\n\nconst getAnchorName = ({\n  anchor,\n  isSplit,\n}: {\n  anchor: Anchor;\n  isSplit: boolean;\n}) =>\n  `${anchor[0].toUpperCase()}${anchor.slice(1)} ${\n    isHorizontalToolWindow(anchor)\n      ? isSplit\n        ? \"Right\"\n        : \"Left\"\n      : isSplit\n      ? \"Bottom\"\n      : \"Top\"\n  }`;\n\nexport const ViewModeToActionId: Record<ViewMode, string> = {\n  docked_pinned: DOCK_PINNED_MODE_ACTION_ID,\n  docked_unpinned: DOCK_UNPINNED_MODE_ACTION_ID,\n  undock: UNDOCK_MODE_ACTION_ID,\n  float: FLOAT_MODE_ACTION_ID,\n  window: WINDOW_MODE_ACTION_ID,\n};\n\nexport const VIEW_MODE_ACTION_GROUP_ID = \"TW.ViewModeGroup\";\nexport const MOVE_TO_ACTION_GROUP_ID = \"TW.MoveToGroup\";\nexport const TOOL_WINDOW_RESIZE_ACTION_GROUP_ID = \"ResizeToolWindowGroup\";\n\nexport function useToolWindowActions({\n  mainContentTitle,\n}: {\n  mainContentTitle: string;\n}): ActionGroupDefinition {\n  const {\n    stretchWidth,\n    stretchHeight,\n    changeViewMode,\n    moveToSide,\n    focusMainContent,\n    hide,\n    remove,\n    state,\n  } = useToolWindowState();\n  const createDefaultActionGroup = useCreateDefaultActionGroup();\n\n  const actions: ActionDefinition[] = [];\n  if (!state) {\n    // FIXME: when window is removed, a last render happens with the new ToolWindowsState, which doesn't have state\n    //  for the removed tool window. Need to understand why that happens.\n    return createDefaultActionGroup({\n      id: \"ActiveToolwindowGroup\",\n      title: \"Active Tool Window\",\n      children: [],\n    });\n  }\n  const viewModeActionGroup = createDefaultActionGroup({\n    id: VIEW_MODE_ACTION_GROUP_ID,\n    title: \"View Mode\",\n    children: [\n      {\n        id: DOCK_PINNED_MODE_ACTION_ID,\n        title: \"Dock Pinned\",\n        actionPerformed: () => {\n          changeViewMode(\"docked_pinned\");\n        },\n      },\n      {\n        id: DOCK_UNPINNED_MODE_ACTION_ID,\n        title: \"Dock Unpinned\",\n        actionPerformed: () => {\n          changeViewMode(\"docked_unpinned\");\n        },\n      },\n      {\n        id: UNDOCK_MODE_ACTION_ID,\n        title: \"Undock\",\n        actionPerformed: () => {\n          changeViewMode(\"undock\");\n        },\n      },\n      {\n        id: FLOAT_MODE_ACTION_ID,\n        title: \"Float\",\n        actionPerformed: () => {\n          changeViewMode(\"float\");\n        },\n      },\n      {\n        id: WINDOW_MODE_ACTION_ID,\n        title: \"Window\",\n        actionPerformed: () => {\n          changeViewMode(\"window\");\n        },\n      },\n    ],\n  });\n  const moveToActionGroup = createDefaultActionGroup({\n    id: MOVE_TO_ACTION_GROUP_ID,\n    title: \"Move to\",\n    children: anchors.map(\n      (anchor): ActionDefinition => ({\n        id: `TW.MoveTo.${anchor.id}`,\n        title: getAnchorName(anchor),\n        icon: <PlatformIcon icon={`actions/${anchor.id}`} />,\n        isDisabled:\n          state.anchor === anchor.anchor && state.isSplit === anchor.isSplit,\n        actionPerformed: () => {\n          moveToSide(anchor);\n        },\n      })\n    ),\n  });\n  actions.push(\n    {\n      id: FOCUS_EDITOR_ACTION_ID,\n      title: `Focus ${mainContentTitle}`, // in intellij it says \"Focus Editor\" but it's not generic enough.\n      actionPerformed: () => {\n        focusMainContent();\n      },\n    },\n    {\n      id: HIDE_ACTIVE_WINDOW_ACTION_ID,\n      title: \"Hide\",\n      icon: <PlatformIcon icon=\"general/hideToolWindow\" />,\n      actionPerformed: () => {\n        hide();\n      },\n    },\n    {\n      id: MAXIMIZE_TOOL_WINDOW_ACTION_ID,\n      title: \"Maximize Tool Window\", // Should be \"Restore Tool Window Size if the window is currently maximized\n      actionPerformed: () => {\n        // TODO(release): either remove the action or implement it\n        alert(\"Not implemented\");\n      },\n    },\n    {\n      id: REMOVE_TOOL_WINDOW_FROM_SIDEBAR_ACTION_ID,\n      title: \"Remove from Sidebar\",\n      actionPerformed: () => {\n        remove();\n      },\n    },\n    viewModeActionGroup,\n    moveToActionGroup\n  );\n  if (state.viewMode === \"float\") {\n    actions.push({\n      id: DOCK_TOOL_WINDOW_ACTION_ID,\n      title: \"Dock\",\n      icon: (\n        <PlatformIcon\n          icon={`actions/${\n            anchors.find(\n              ({ anchor, isSplit }) =>\n                anchor === state.anchor && isSplit === state.isSplit\n            )?.id\n          }`}\n        />\n      ),\n      actionPerformed: () => {\n        changeViewMode(\"docked_pinned\");\n      },\n    });\n  }\n  if (state.viewMode !== \"float\" && state.viewMode !== \"window\") {\n    const resizeGroup = createDefaultActionGroup({\n      id: TOOL_WINDOW_RESIZE_ACTION_GROUP_ID,\n      title: \"Resize\",\n      children: [],\n    });\n    if (isHorizontalToolWindow(state.anchor)) {\n      resizeGroup.children.push({\n        id: RESIZE_TOOL_WINDOW_BOTTOM_ACTION_ID,\n        title: \"Stretch to bottom\",\n        actionPerformed: () => {\n          stretchHeight(\n            state.anchor === \"bottom\" ? -HEIGHT_RESIZE_STEP : HEIGHT_RESIZE_STEP\n          );\n        },\n      });\n      resizeGroup.children.push({\n        id: RESIZE_TOOL_WINDOW_TOP_ACTION_ID,\n        title: \"Stretch to top\",\n        actionPerformed: () => {\n          stretchHeight(\n            state.anchor === \"top\" ? -HEIGHT_RESIZE_STEP : HEIGHT_RESIZE_STEP\n          );\n        },\n      });\n    } else {\n      resizeGroup.children.push({\n        id: RESIZE_TOOL_WINDOW_LEFT_ACTION_ID,\n        title: \"Stretch to left\",\n        actionPerformed: () => {\n          stretchWidth(\n            state.anchor === \"left\" ? -WIDTH_RESIZE_STEP : WIDTH_RESIZE_STEP\n          );\n        },\n      });\n      resizeGroup.children.push({\n        id: RESIZE_TOOL_WINDOW_RIGHT_ACTION_ID,\n        title: \"Stretch to right\",\n        actionPerformed: () => {\n          stretchWidth(\n            state.anchor === \"right\" ? -WIDTH_RESIZE_STEP : WIDTH_RESIZE_STEP\n          );\n        },\n      });\n    }\n    actions.push(resizeGroup);\n  }\n  return createDefaultActionGroup({\n    id: \"ActiveToolwindowGroup\",\n    title: \"Active Tool Window\",\n    children: actions,\n  });\n}\n","import React from \"react\";\nimport { ActionDefinition } from \"@intellij-platform/core/ActionSystem\";\nimport {\n  getViewModeType,\n  ToolWindowRefValue,\n  ToolWindowsState,\n} from \"@intellij-platform/core/ToolWindows\";\nimport {\n  HIDE_ALL_WINDOWS_ACTION_ID,\n  JUMP_TO_LAST_WINDOW_ACTION_ID,\n} from \"./ToolWindowActionIds\";\n\ninterface DefaultToolWindowActionsProps {\n  toolWindowsState: Readonly<ToolWindowsState>;\n  toolWindowsRef: React.RefObject<ToolWindowRefValue>;\n  /**\n   * Used when creating ActivateToolWindow action for each tool window.\n   */\n  getPresentation?: (key: React.Key) =>\n    | {\n        title: string;\n        icon: React.ReactNode;\n      }\n    | undefined;\n}\n\nexport const getActivateToolWindowActionId = (id: string) =>\n  `Activate${id.replace(\" \", \"\")}Window`;\n\n/**\n * Provides default tool windows actions:\n * - Hide all tool windows\n * - Activate{id}Window action for each window\n * - Jump to last tool window\n *\n * @see also {@link DefaultToolWindows}\n */\nexport function useToolWindowsActions({\n  toolWindowsState,\n  toolWindowsRef,\n  getPresentation,\n}: DefaultToolWindowActionsProps) {\n  const isAnySideWindowWindowOpen = (state: Readonly<ToolWindowsState>) =>\n    Object.values(state.windows).some(\n      ({ isVisible, viewMode }) =>\n        isVisible && getViewModeType(viewMode) !== \"float\"\n    );\n  const windowIds = Object.keys(toolWindowsState.windows).map(\n    (key) => `${key}`\n  );\n  const activateToolWindowActions = windowIds.map(\n    (id: string, index): ActionDefinition => {\n      const { title, icon } = getPresentation?.(id) || {};\n      return {\n        id: getActivateToolWindowActionId(id),\n        title: title || `${getOrdinal(index)} window`,\n        icon,\n        description: `Activate ${title || getOrdinal(index)} window`,\n        actionPerformed: () => {\n          if (\n            toolWindowsState.windows[id]?.isVisible &&\n            !toolWindowsRef.current?.hasFocus(id)\n          ) {\n            toolWindowsRef.current?.focus(id);\n          } else {\n            toolWindowsRef.current?.changeState((state) => state.toggle(id));\n          }\n        },\n      };\n    }\n  );\n  const actions: ActionDefinition[] = [\n    ...activateToolWindowActions,\n    {\n      id: HIDE_ALL_WINDOWS_ACTION_ID,\n      title: isAnySideWindowWindowOpen(toolWindowsState)\n        ? \"Hide All Windows\"\n        : \"Restore windows\",\n      actionPerformed: () => {\n        toolWindowsRef.current?.changeState((state) => {\n          if (isAnySideWindowWindowOpen(state)) {\n            return state.hideAll();\n          } else {\n            return state.restoreWindows();\n          }\n        });\n        // Because windows have autofocus behaviour, a timeout is set. Not sure how reliable it is.\n        // TODO: replace effect-based auto focus behaviour with something better, maybe controlled by ToolWindows\n        //  component, and when a tool window is opened.\n        setTimeout(() => {\n          toolWindowsRef.current?.focusMainContent();\n        });\n      },\n    },\n    {\n      id: JUMP_TO_LAST_WINDOW_ACTION_ID,\n      title: \"Jump to Last Tool Window\",\n      isDisabled: toolWindowsState.lastFocusedKey == null,\n      actionPerformed: () => {\n        toolWindowsRef.current?.focusLastActiveWindow();\n      },\n    },\n  ];\n  return actions;\n}\n\nfunction getOrdinal(n: number) {\n  let ord = [\"st\", \"nd\", \"rd\"];\n  let exceptions = [11, 12, 13];\n  let nth =\n    ord[(n % 10) - 1] == undefined || exceptions.includes(n % 100)\n      ? \"th\"\n      : ord[(n % 10) - 1];\n  return n + nth;\n}\n","import React, {\n  CSSProperties,\n  MouseEvent,\n  useContext,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\n\nimport { styled, css } from \"../styled\";\nimport {\n  StyledHorizontalSeparator,\n  StyledSeparator,\n  StyledVerticalSeparator,\n} from \"../StyledSeparator\";\nimport { useOverflowObserver } from \"@intellij-platform/core/utils/overflow-utils/useOverflowObserver\";\nimport { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport { Overlay, useOverlayPosition } from \"@react-aria/overlays\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { StyledPopupContainer } from \"@intellij-platform/core/Popup/StyledPopupContainer\";\n\ntype ToolbarBorderProp =\n  | true\n  | \"horizontal\"\n  | \"vertical\"\n  | \"bottom\"\n  | \"top\"\n  | \"left\"\n  | \"right\";\n\nexport type ToolbarProps = {\n  children: React.ReactNode;\n  orientation?: \"vertical\" | \"horizontal\";\n  border?: ToolbarBorderProp;\n  style?: CSSProperties;\n  className?: string;\n} & (\n  | {\n      orientation: \"vertical\";\n    }\n  | {\n      orientation?: \"horizontal\";\n      /**\n       * Defines how the toolbar should handle its children when there is not enough room\n       * to fit all:\n       * - popup: the overflowed children will be hidden behind a show more arrow icon that\n       *   shows the rest of the items in a popup.\n       * - wrap: children will be wrapped so that they fit the available width/height\n       **/\n      overflowBehavior?: \"popup\" | \"wrap\";\n    }\n);\n\nconst borderStyle = ({ border }: { border?: ToolbarBorderProp }) =>\n  border &&\n  css`\n    border-style: solid;\n    border-color: ${({ theme }) => theme.commonColors.borderColor};\n    border-width: ${border === true ? \"1px\" : borderPropToCssProp[border]};\n  `;\n\nconst StyledToolbar = styled.div<{\n  border?: ToolbarBorderProp;\n}>`\n  display: inline-flex;\n  box-sizing: border-box;\n  overflow: hidden;\n  // NOTE: in the original implementation, there is no empty space between buttons, but buttons have kind of an\n  // invisible left padding, which is mouse-intractable, but doesn't visually seem a part of the button.\n  // Although implementable, it didn't seem necessary to follow the exact same thing. Margin should be fine.\n  gap: 4px;\n  ${borderStyle}\n  ${StyledSeparator}:first-child {\n    display: none;\n  }\n  ${StyledSeparator}:last-child {\n    display: none;\n  }\n`;\n\nconst borderPropToCssProp: Record<\n  Exclude<ToolbarBorderProp, boolean>,\n  CSSProperties[\"borderWidth\"]\n> = {\n  top: \"1px 0 0 0\",\n  bottom: \"0 0 1px 0\",\n  right: \"0 1px 0 0\",\n  left: \"0 0 0 1px\",\n  horizontal: \"0 1px\",\n  vertical: \"1px 0\",\n};\n\nconst SIDE_PADDING = 3;\nconst END_PADDING = 4;\n\nconst StyledShowMoreButton = styled.button`\n  all: unset;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  ${borderStyle};\n`;\n\nconst StyledHorizontalToolbar = styled(StyledToolbar)`\n  padding: ${SIDE_PADDING}px ${END_PADDING}px;\n  max-width: 100%;\n  /*noinspection CssInvalidPropertyValue*/\n  max-width: -webkit-fill-available;\n  ${StyledHorizontalSeparator} {\n    margin: 1px 0;\n  }\n  ${StyledShowMoreButton} {\n    margin-right: -${END_PADDING}px;\n  }\n`;\n\nconst StyledVerticalToolbar = styled(StyledToolbar)`\n  flex-direction: column;\n  max-height: 100%;\n  /*noinspection CssInvalidPropertyValue*/\n  max-height: -webkit-fill-available;\n  padding: ${END_PADDING}px ${SIDE_PADDING}px;\n  ${StyledVerticalSeparator} {\n    margin: 0 1px;\n  }\n  ${StyledShowMoreButton} {\n    margin-bottom: -${END_PADDING}px;\n  }\n`;\n\nconst StyledToolbarContent = styled.div<{\n  shouldWrap?: boolean;\n  firstOverflowedIndex: number;\n}>`\n  box-sizing: inherit;\n  display: inherit;\n  flex-direction: inherit;\n  flex-wrap: ${({ shouldWrap }) => (shouldWrap ? \"wrap\" : \"nowrap\")};\n  gap: inherit;\n  max-height: inherit;\n  max-width: inherit;\n  min-height: 0;\n  min-width: 0;\n\n  ${({ firstOverflowedIndex }) =>\n    /**\n     * The hidden styles should be in a way that the hidden element:\n     * - occupies its space in the document layout.\n     * - doesn't capture mouse events. (e.g. a half-overflowing hidden element shouldn't show tooltip)\n     * - remains accessible to screen readers.\n     */\n    css`\n      > ${firstOverflowedIndex === 0\n          ? \"*\"\n          : `:nth-child(${firstOverflowedIndex}) ~ *`} {\n        opacity: 0 !important;\n        pointer-events: none !important;\n      }\n    `}\n`;\n// This can be used in other places if use-cases are raised for keeping orientation in the context.\nconst OrientationContext = React.createContext<\"horizontal\" | \"vertical\">(\n  \"horizontal\"\n);\n\n/**\n * ## Toolbar API/Implementation notes\n *\n * ### Handling Overflow\n *\n * Handling the overflow popup on DOM-level, allows for a simple and flexible implementation that doesn't\n * require any coupling between Toolbar and components like IconButton. Other components can also similarly be\n * rendered inside toolbar without adopting any specific API. It's worth noting that any generic approach based\n * on children react nodes instead of children DOM nodes will have many edge cases and will involve assumptions\n * that will limit the API of toolbar. Also, any approach based on moving dom nodes to the overflow popup will\n * conflict with React owning the DOM.\n *\n * #### Assumption\n *\n * Since the overflow popup renders the same `children`, and items in the toolbar and popup overflow are made\n * visible/hidden based on the index of DOM nodes, it's important than children deterministically results in the\n * same dom structure. i.e. if a component in children randomly renders different number of root dom nodes in\n * each render, it can cause issues in hiding/showing elements.\n *\n * ### Orientation\n * A few reasons for not having separate `HorizontalToolbar` and `VerticalToolbar` components instead of `Toolbar` with\n * `orientation` prop:\n * - From usage side, a single `Toolbar` component is considered a more discoverable API.\n * - Separate components would require abstracting common parts which unnecessarily adds to complexity.\n *   The amount of branching to handle the differences is considered ok, at the current state of the component.\n */\n\n/**\n * @description\n * A toolbar is a container for {@link IconButton} and similar UI components.\n *\n * ## Features:\n * - A toolbar can be horizontal or vertical\n * - When there is not enough space for all children, toolbar shows an arrow icon, which shows the overflowing\n *   items in a popup, upon mouseover.\n *   Optionally, overflow can be wrapped into multiple lines, in horizontal toolbars.\n *\n * @example\n * <Toolbar>\n *   <IconButton aria-label=\"Show Diff\">\n *     <PlatformIcon icon=\"actions/diff\" />\n *   </IconButton>\n *   </Toolbar>\n */\nexport const Toolbar: React.FC<ToolbarProps> = ({\n  border,\n  orientation = \"horizontal\",\n  ...props\n}): React.ReactElement => {\n  const overflowBehavior =\n    orientation === \"horizontal\" && \"overflowBehavior\" in props\n      ? props.overflowBehavior\n      : null;\n  const rootProps = { style: props.style, className: props.className };\n  const ref = useRef<HTMLDivElement>(null);\n  const overlayRef = useRef<HTMLDivElement>(null);\n  const showMoreButtonRef = useRef<HTMLButtonElement>(null);\n  const StyledToolbar =\n    orientation === \"horizontal\"\n      ? StyledHorizontalToolbar\n      : StyledVerticalToolbar;\n  const { overflowedElements } = useOverflowObserver(ref, { threshold: 0.8 });\n  const [isOverflowPopupVisible, setOverflowPopupVisible] = useState(false);\n  const [popupHeight, setPopupHeight] = useState(30);\n  const [firstOverflowedChildIndex, setFirstOverflowedChildIndex] =\n    useState<number>(-1);\n  const firstOverflowedChildRef = useRef<HTMLElement | undefined>();\n\n  useLayoutEffect(() => {\n    if (ref.current) {\n      const childElements = [...ref.current.children].filter(\n        (node): node is HTMLElement => node instanceof HTMLElement\n      );\n      const firstOverflowedChild = childElements.findIndex((child) =>\n        overflowedElements.includes(child)\n      );\n      setFirstOverflowedChildIndex(firstOverflowedChild);\n      firstOverflowedChildRef.current = childElements[firstOverflowedChild];\n    }\n  }, [overflowedElements]);\n\n  useLayoutEffect(() => {\n    if (overlayRef.current && popupHeight !== overlayRef.current.offsetHeight) {\n      setPopupHeight(overlayRef.current.offsetHeight);\n    }\n  });\n\n  const { overlayProps } = useOverlayPosition({\n    isOpen: isOverflowPopupVisible,\n    placement: \"bottom left\",\n    offset:\n      // in lack of positioning options for aligning bottom and left of of the overflow popup with the bottom and left\n      // of the toolbar itself, we have to measure the popup height, and use offset to achieve the same\n      orientation === \"horizontal\"\n        ? -popupHeight + SIDE_PADDING + 1\n        : -popupHeight + 1,\n    crossOffset:\n      orientation === \"horizontal\" ? -(SIDE_PADDING + 2) : -(SIDE_PADDING + 1),\n    containerPadding: 0,\n    shouldFlip: false,\n    targetRef: orientation === \"horizontal\" ? ref : showMoreButtonRef,\n    overlayRef: overlayRef,\n    onClose: () => {\n      setOverflowPopupVisible(false);\n    },\n  });\n\n  const showOverflowPopup = () => {\n    setOverflowPopupVisible(true);\n  };\n\n  const toolbarProps = {\n    onMouseMove: (event: MouseEvent) => {\n      const firstOverflowedElement = firstOverflowedChildRef.current;\n      if (!firstOverflowedElement) {\n        return;\n      }\n      const shouldShow =\n        orientation === \"vertical\"\n          ? event.clientY > firstOverflowedElement.getBoundingClientRect().top\n          : event.clientX > firstOverflowedElement.getBoundingClientRect().left;\n      if (shouldShow !== isOverflowPopupVisible) {\n        setOverflowPopupVisible(shouldShow);\n      }\n    },\n    onMouseLeave: () => {\n      if (isOverflowPopupVisible) {\n        setOverflowPopupVisible(false);\n      }\n    },\n  };\n  const toolbarOverflowPopupProps = {\n    onMouseEnter: () => setOverflowPopupVisible(true),\n    onMouseLeave: () => setOverflowPopupVisible(false),\n  };\n  return (\n    <OrientationContext.Provider value={orientation}>\n      <StyledToolbar\n        border={border}\n        {...mergeProps(rootProps, toolbarProps)}\n        role=\"toolbar\"\n      >\n        <StyledToolbarContent\n          ref={ref}\n          role=\"presentation\"\n          firstOverflowedIndex={firstOverflowedChildIndex}\n          shouldWrap={overflowBehavior === \"wrap\"}\n        >\n          {props.children}\n        </StyledToolbarContent>\n        {overflowedElements.length > 0 && (\n          <StyledShowMoreButton\n            ref={showMoreButtonRef}\n            tabIndex={-1}\n            onMouseEnter={showOverflowPopup}\n          >\n            <PlatformIcon icon=\"ide/link\" />\n          </StyledShowMoreButton>\n        )}\n      </StyledToolbar>\n      {isOverflowPopupVisible && overflowedElements.length > 0 && (\n        // Maybe more accessible to reuse the entire Popup here? it would require more flexible API to handle mouseleave though\n        // Note: we could also render the whole toolbar with the same props and only orientation being overwritten,\n        // but it has the risk of infinite overlay opening in some edge cases, and that level of generality doesn't\n        // seem to be necessary, at least at the moment.\n        <OrientationContext.Provider value=\"horizontal\">\n          <Overlay>\n            <StyledPopupContainer\n              ref={overlayRef}\n              {...mergeProps(overlayProps, toolbarOverflowPopupProps)}\n            >\n              <ToolbarInOverlay\n                border\n                firstVisibleIndex={\n                  orientation === \"vertical\"\n                    ? firstOverflowedChildIndex\n                    : undefined\n                }\n              >\n                {props.children}\n              </ToolbarInOverlay>\n            </StyledPopupContainer>\n          </Overlay>\n        </OrientationContext.Provider>\n      )}\n    </OrientationContext.Provider>\n  );\n};\n\nconst ToolbarInOverlay = styled(StyledHorizontalToolbar)<{\n  firstVisibleIndex?: number;\n}>`\n  ${({ firstVisibleIndex }) =>\n    firstVisibleIndex &&\n    css`\n      ${StyledSeparator}:nth-child(${firstVisibleIndex + 1}) {\n        display: none;\n      }\n      > :not(:nth-child(${firstVisibleIndex}) ~ *) {\n        display: none;\n      }\n    `};\n`;\n\n/**\n * Separator to be used between items in a toolbar.\n */\nexport const ToolbarSeparator = (): React.ReactElement => {\n  const orientation = useContext(OrientationContext);\n  return orientation === \"horizontal\" ? (\n    <StyledHorizontalSeparator />\n  ) : (\n    <StyledVerticalSeparator />\n  );\n};\n","import React from \"react\";\nimport { Tooltip, TooltipProps } from \"@intellij-platform/core/Tooltip/Tooltip\";\n\nexport interface ActionHelpTooltipProps\n  extends Omit<TooltipProps, \"children\" | \"multiline\"> {\n  actionName: React.ReactNode;\n  helpText: React.ReactNode;\n  shortcut?: React.ReactNode;\n  link?: React.ReactNode;\n}\n\n/**\n * Tooltip of type \"Action Help\"\n * @see {@link ActionTooltip} {@link HelpTooltip}\n * @see https://jetbrains.github.io/ui/controls/tooltip/#02\n */\nexport const ActionHelpTooltip = ({\n  actionName,\n  helpText,\n  shortcut,\n  link,\n  ...tooltipProps\n}: ActionHelpTooltipProps): JSX.Element => {\n  return (\n    <Tooltip multiline {...tooltipProps}>\n      <Tooltip.Header>\n        {actionName}\n        {shortcut && <Tooltip.Shortcut>{shortcut}</Tooltip.Shortcut>}\n      </Tooltip.Header>\n      <Tooltip.Description>{helpText}</Tooltip.Description>\n      {link && <Tooltip.Link>{link}</Tooltip.Link>}\n    </Tooltip>\n  );\n};\n","import React from \"react\";\nimport { Tooltip, TooltipProps } from \"@intellij-platform/core/Tooltip/Tooltip\";\n\nexport interface ActionTooltipProps\n  extends Omit<TooltipProps, \"children\" | \"multiline\"> {\n  actionName: React.ReactNode;\n  shortcut?: React.ReactNode;\n}\n\n/**\n * Tooltip of type \"Action\"\n * @see {@link ActionHelpTooltip} {@link HelpTooltip}\n * @see https://jetbrains.github.io/ui/controls/tooltip/#02\n */\nexport const ActionTooltip = ({\n  actionName,\n  shortcut,\n  ...tooltipProps\n}: ActionTooltipProps): JSX.Element => {\n  return (\n    <Tooltip {...tooltipProps}>\n      <Tooltip.Header>\n        {actionName}\n        {shortcut && <Tooltip.Shortcut>{shortcut}</Tooltip.Shortcut>}\n      </Tooltip.Header>\n    </Tooltip>\n  );\n};\n","import React from \"react\";\nimport { Tooltip, TooltipProps } from \"@intellij-platform/core/Tooltip/Tooltip\";\n\nexport interface HelpTooltipProps\n  extends Omit<TooltipProps, \"children\" | \"multiline\"> {\n  helpText: React.ReactNode;\n  shortcut?: React.ReactNode;\n  link?: React.ReactNode;\n}\n\n/**\n * Tooltip of type \"Help\"\n * @see {@link ActionTooltip} {@link ActionHelpTooltip}\n * @see https://jetbrains.github.io/ui/controls/tooltip/#02\n */\nexport const HelpTooltip = ({\n  helpText,\n  shortcut,\n  link,\n  ...tooltipProps\n}: HelpTooltipProps): JSX.Element => {\n  return (\n    <Tooltip multiline {...tooltipProps}>\n      <Tooltip.Header>{helpText}</Tooltip.Header>\n      {shortcut && (\n        <div>\n          <Tooltip.Shortcut>{shortcut}</Tooltip.Shortcut>\n        </div>\n      )}\n      {link && <Tooltip.Link>{link}</Tooltip.Link>}\n    </Tooltip>\n  );\n};\n","import React, {\n  HTMLAttributes,\n  ReactElement,\n  RefObject,\n  useEffect,\n  useRef,\n} from \"react\";\nimport { TooltipTriggerProps as AriaTooltipTriggerProps } from \"@react-aria/tooltip\";\nimport { useTooltipTriggerState } from \"@react-stately/tooltip\";\nimport { AriaPositionProps, useOverlayPosition } from \"@react-aria/overlays\";\nimport { TooltipTriggerAndOverlay } from \"./TooltipTriggerAndOverlay\";\nimport { useObjectRef } from \"@react-aria/utils\";\n\nexport interface PositionedTooltipTriggerProps<\n  T extends HTMLElement = HTMLElement\n> extends Omit<AriaTooltipTriggerProps, \"trigger\">,\n    Pick<\n      AriaPositionProps,\n      \"placement\" | \"offset\" | \"crossOffset\" | \"shouldFlip\"\n    > {\n  /**\n   * Tooltip content. The value should be an element of type {@link Tooltip}.\n   */\n  tooltip: ReactElement;\n  /**\n   * Either a focusable component, or a render function which accepts trigger props and passes it to some component.\n   */\n  children:\n    | React.ReactNode\n    | ((\n        props: HTMLAttributes<HTMLElement> & { ref: RefObject<T> }\n      ) => React.ReactNode);\n\n  /**\n   * Whether to show the tooltip on trigger's focus. By default, tooltip is shown only when the trigger\n   * is hovered, but it can improve accessibility to show the tooltip on focus as well.\n   */\n  showOnFocus?: boolean;\n\n  /**\n   * Ref to trigger.\n   * If not provided, a ref will be created internally.\n   * Useful for when a ref to the trigger is necessary where PositionedTooltipTrigger\n   * is used.\n   */\n  triggerRef?: RefObject<T>;\n}\n\n/**\n * Sets {@param tooltip} for its {@param children}. Tooltip will be positioned based relative to the trigger.\n * The default tooltip positioning is based on cursor, which is implemented by {@link TooltipTrigger}\n */\nexport const PositionedTooltipTrigger = <T extends HTMLElement>({\n  tooltip,\n  children,\n  /**\n   * ide.tooltip.initialReshowDelay registry key. [Docs](https://jetbrains.github.io/ui/controls/tooltip/#19) says\n   * it's 300 by default, but it's 500 in the code currently.\n   */\n  delay = 500,\n  offset = 8,\n  showOnFocus,\n  triggerRef: inputTriggerRef,\n  ...props\n}: PositionedTooltipTriggerProps<T>): JSX.Element => {\n  const state = useTooltipTriggerState({\n    ...props,\n    delay,\n  });\n\n  const overlayRef = useRef<HTMLDivElement>(null);\n  const fallbackRef = useObjectRef<T>(inputTriggerRef);\n  const triggerRef = inputTriggerRef || fallbackRef;\n\n  const positionAria = useOverlayPosition({\n    ...props,\n    overlayRef,\n    targetRef: triggerRef,\n    offset,\n    isOpen: state.isOpen,\n    onClose: state.close,\n  });\n\n  // A workaround for a mysterious issue that happens only in docusaurus build.\n  // The ref value is not up-to-date, when the effect runs.\n  // FIXME: Find the explanation for why it happens, and fix it properly, if it's a legit issue.\n  useEffect(() => {\n    if (state.isOpen) {\n      requestAnimationFrame(positionAria.updatePosition);\n    }\n  }, [state.isOpen]);\n\n  return (\n    <TooltipTriggerAndOverlay\n      tooltip={tooltip}\n      positionAria={positionAria}\n      trigger={children}\n      state={state}\n      overlayRef={overlayRef}\n      triggerRef={triggerRef}\n      showOnFocus={showOnFocus}\n      isDisabled={props.isDisabled}\n    />\n  );\n};\n","import React, { ForwardedRef, MutableRefObject, useContext } from \"react\";\nimport { AriaTooltipProps, useTooltip } from \"@react-aria/tooltip\";\nimport { useObjectRef } from \"@react-aria/utils\";\nimport { PositionAria } from \"@react-aria/overlays\";\nimport { css, styled } from \"@intellij-platform/core/styled\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { WINDOW_SHADOW } from \"@intellij-platform/core/style-constants\";\nimport { TooltipContext } from \"./TooltipContext\";\nimport { TooltipPointer, TooltipPointerPosition } from \"./TooltipPointer\";\nimport {\n  tooltipBackground,\n  tooltipBorderColor,\n  WITH_POINTER_BORDER_RADIUS,\n} from \"./tooltip-styles\";\n\nexport interface TooltipProps extends Omit<AriaTooltipProps, \"isOpen\"> {\n  children: React.ReactNode;\n  multiline?: boolean;\n  className?: string;\n  /**\n   * Whether (and in what position) the arrow pointer should be shown.\n   * When using {@link TooltipTrigger} or {@link PositionedTooltipTrigger}, the position of the pointer is calculated\n   * based on the target element, and a boolean value to define whether the arrow should be shown or not would suffice.\n   *\n   * Tooltips with pointer have slight style difference.\n   * {@see https://www.figma.com/file/nfDfMAdV7j2fnQlpYNAOfP/IntelliJ-Platform-UI-Kit-(Community)?type=design&node-id=15-51&mode=design&t=7PplrxG8ZfXB4hIK-0}\n   *\n   * @example\n   * <Tooltip withPointer />\n   * // shows the pointer in the position controlled by {@link TooltipTrigger} or {@link PositionedTooltipTrigger}\n   * // If there is not `TooltipTrigger` or `PositionedTooltipTrigger`, the arrow is shown on top center by default.\n   *\n   * @example\n   * <Tooltip withPointer={{side: 'top', offset: 30}} />\n   * // shows the pointer on the top side, with horizontal offset of 30px from the left of tooltip, regardless\n   * // of whether `TooltipTrigger` or `PositionedTooltipTrigger` is used.\n   *\n   * @example\n   * <Tooltip withPointer={{side: 'left', offset: -30}} />\n   * // shows the pointer on the left side, with vertidcal offset of 30px from the bottom of the tooltip, regardless\n   * // of whether `TooltipTrigger` or `PositionedTooltipTrigger` is used.\n   */\n  withPointer?: boolean | TooltipPointerPosition;\n}\n\n// Providing default value for paddings, based on intellijlaf theme. In Intellij Platform, themes extend either\n// intellijlaf or darcula. Which means some properties can be omitted in the custom theme, relying on the values\n// in the base theme. This is not how theming works here, at the moment, and there are other similar issues, but\n// this is just a mitigation for one case, spacing in tooltip.\nexport const DEFAULT_TEXT_BORDER_INSETS = \"0.5rem 0.8125rem 0.625rem 0.625rem\";\nexport const DEFAULT_SMALL_TEXT_BORDER_INSETS =\n  \"0.375rem 0.75rem 0.4375rem 0.625rem\";\nconst StyledTooltip = styled.div<{ multiline?: boolean; hasPointer?: boolean }>`\n  box-sizing: content-box;\n  max-width: ${\n    /**\n     * Max width is meant to be set on the multiline description (which is not used in ActionTooltip which would\n     * be right according to [the specs](https://jetbrains.github.io/ui/controls/tooltip/#09)).\n     * But if set on `Tooltip.Description`, title and link can still make the tooltip grow more that the expected max\n     * width. So it makes more sense to set the max width on the container anyway. But since the value of the max width\n     * is meant to be for description we set the box-sizing to \"content-box\" to exclude container's padding in max-width\n     * calculation.\n     */\n    ({ theme, multiline }) =>\n      multiline\n        ? `${\n            theme.value<number>(\n              \"HelpTooltip.maxWidth\" as UnknownThemeProp<\"HelpTooltip.maxWidth\">\n            ) ?? 250\n          }px`\n        : null\n  };\n  white-space: ${({ multiline }) => (!multiline ? \"nowrap\" : null)};\n  display: inline-flex;\n  flex-direction: column;\n  gap: ${({ theme }) =>\n    theme.value<number>(\n      \"HelpToolTip.verticalGap\" as UnknownThemeProp<\"HelpToolTip.verticalGap\">\n    ) ?? 4}px;\n  background: ${tooltipBackground};\n  color: ${({ theme }) =>\n    theme.color(\"ToolTip.foreground\", !theme.dark ? \"#000\" : \"#bfbfbf\")};\n  padding: ${({ theme, multiline }) =>\n    multiline\n      ? theme.inset(\"HelpTooltip.defaultTextBorderInsets\") ||\n        DEFAULT_TEXT_BORDER_INSETS\n      : theme.inset(\"HelpTooltip.smallTextBorderInsets\") ||\n        DEFAULT_SMALL_TEXT_BORDER_INSETS};\n  line-height: 1.2;\n  border-style: solid;\n  border-width: ${({ theme, hasPointer }) =>\n    theme.value<boolean>(\"ToolTip.paintBorder\") || hasPointer ? \"1px\" : \"0px\"};\n  border-color: ${tooltipBorderColor};\n  ${WINDOW_SHADOW};\n  ${({ hasPointer }) =>\n    hasPointer &&\n    css`\n      position: relative; // needed for absolute positioning of the pointer\n      border-radius: ${WITH_POINTER_BORDER_RADIUS}px;\n    `}\n`;\n\nconst StyledShortcut = styled.kbd`\n  all: unset;\n  color: ${({ theme }) =>\n    theme.color(\n      \"ToolTip.shortcutForeground\",\n      !theme.dark ? \"#787878\" : \"#999999\"\n    )};\n`;\n\nconst StyledHeader = styled.div`\n  font-size: ${({ theme }) => theme.fontSizeDelta(\"HelpTooltip.fontSizeDelta\")};\n  display: flex;\n  gap: 0.5rem;\n`;\nconst StyledDescription = styled.div`\n  color: ${({ theme }) =>\n    theme.color(\n      \"Tooltip.infoForeground\" as UnknownThemeProp<\"Tooltip.infoForeground\">,\n      theme.commonColors.contextHelpForeground\n    )};\n  font-size: ${({ theme }) =>\n    theme.fontSizeDelta(\"HelpTooltip.descriptionSizeDelta\")};\n`;\n\nconst StyledLink = styled.div`\n  color: ${({ theme }) =>\n    theme.color(\n      \"ToolTip.linkForeground\" as UnknownThemeProp<\"ToolTip.linkForeground\">,\n      theme.commonColors.linkForegroundEnabled\n    )};\n  a,\n  [role=\"link\"] {\n    // Maybe target Link instead, without important. It didn't work as expected, in the first try tho.\n    color: inherit !important;\n  }\n`;\n\nexport const placementToPointerSide: Record<\n  PositionAria[\"placement\"],\n  TooltipPointerPosition[\"side\"]\n> = {\n  bottom: \"top\",\n  top: \"bottom\",\n  left: \"right\",\n  right: \"left\",\n  center: \"top\", // doesn't make sense :-?\n};\n/**\n * Implements the UI of a Tooltip. For tooltip to be shown for a trigger, on hover, use {@link TooltipTrigger}.\n * The following components can be used to compose the content of a tooltip.\n * - {@link Tooltip.Header}\n * - {@link Tooltip.Description}\n * - {@link Tooltip.Link}\n * - {@link Tooltip.Shortcut}\n * Prefer using higher-level components like {@link HelpTooltip}, {@link ActionHelpTooltip} or {@link ActionTooltip}.\n * that ensure different pieces of tooltip content follow the\n * [design system recommendation](https://jetbrains.github.io/ui/controls/tooltip)\n *\n *\n * ### Reference:\n * Tooltip, Tooltip.* and TooltipTrigger are corresponding to [HelpTooltip](https://github.com/JetBrains/intellij-community/blob/854daf45b47a6ea9da0348978608bfbfe998d99c/platform/platform-api/src/com/intellij/ide/HelpTooltip.java#L102)\n * in the original impl.\n */\nconst Tooltip = React.forwardRef(function Tooltip(\n  { children, multiline, withPointer, ...props }: TooltipProps,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n): JSX.Element {\n  const ref: MutableRefObject<HTMLDivElement | null> =\n    useObjectRef(forwardedRef);\n  const {\n    state,\n    isInteractive,\n    pointerPositionStyle,\n    placement = \"bottom\",\n  } = useContext(TooltipContext) || {};\n  const { tooltipProps } = useTooltip(\n    props,\n    state\n      ? {\n          ...state,\n          // if the tooltip is not interactive, let it be closed even when it's hovered. That's the according to the reference impl.\n          open: isInteractive ? state?.open : () => {},\n        }\n      : state\n  );\n\n  const { side, offset } =\n    typeof withPointer === \"object\"\n      ? withPointer\n      : { side: placementToPointerSide[placement], offset: undefined };\n\n  return (\n    <StyledTooltip\n      hasPointer={Boolean(withPointer)}\n      multiline={multiline}\n      {...tooltipProps}\n      className={props.className}\n      ref={ref}\n    >\n      {withPointer && (\n        <TooltipPointer\n          tooltipRef={ref}\n          side={side}\n          offset={\n            offset || !pointerPositionStyle\n              ? { type: \"specific\", value: offset }\n              : { type: \"calculated\", value: pointerPositionStyle }\n          }\n        />\n      )}\n      {children}\n    </StyledTooltip>\n  );\n});\n\nconst _Tooltip = Object.assign(Tooltip, {\n  Header: StyledHeader,\n  Shortcut: StyledShortcut,\n  Description: StyledDescription,\n  Link: StyledLink,\n});\n\nexport { _Tooltip as Tooltip };\n","import React, { CSSProperties } from \"react\";\nimport { TooltipTriggerState } from \"@react-stately/tooltip\";\nimport { PositionAria } from \"@react-aria/overlays\";\n\ninterface TooltipContextObject {\n  state: TooltipTriggerState;\n  isInteractive: boolean;\n  placement: PositionAria[\"placement\"];\n  pointerPositionStyle?: CSSProperties;\n}\n\nexport const TooltipContext = React.createContext<TooltipContextObject | null>(\n  null\n);\n","import { compose, identity } from \"ramda\";\nimport React, { CSSProperties, RefObject, useEffect, useState } from \"react\";\nimport { css, styled } from \"@intellij-platform/core/styled\";\n\nimport {\n  tooltipBackground,\n  WITH_POINTER_BORDER_RADIUS,\n} from \"./tooltip-styles\";\n\ntype OffsetValue = number | `${number}%`;\nexport type TooltipPointerPosition = {\n  /**\n   * The side of the tooltip the pointer is shown\n   */\n  side: \"top\" | \"bottom\" | \"left\" | \"right\";\n  /**\n   * - When side is \"top\" or \"bottom\":\n   *   Horizontal offset (in px) with respect to the left (or right, if negative) of the tooltip.\n   * - When side is \"left\" or \"right\":\n   *   Vertical offset (in px) with respect to the top (or bottom, if negative) of the tooltip.\n   *\n   * @default: '50%'\n   */\n  offset?: OffsetValue | { value: OffsetValue; invert?: boolean };\n};\n\nconst POINTER_WIDTH = 6;\nconst POINTER_HEIGHT = 9;\nconst POINTER_THICKNESS = 1.5;\nconst TRANSLATE = `translate(-${POINTER_WIDTH}px, -${POINTER_HEIGHT}px)`;\nconst sideStyles = {\n  top: css`\n    top: 0;\n    transform: ${TRANSLATE};\n  `,\n  bottom: css`\n    bottom: 0;\n    transform: rotateX(180deg) ${TRANSLATE};\n  `,\n  left: css`\n    left: 0;\n    transform: rotate(-90deg) ${TRANSLATE};\n  `,\n  right: css`\n    right: 0;\n    transform: rotate(90deg) ${TRANSLATE};\n  `,\n};\nconst StyledTooltipPointer = styled.span<{\n  side: TooltipPointerPosition[\"side\"];\n}>`\n  position: absolute;\n  width: 0;\n  height: 0;\n  ${({ side }) => sideStyles[side]};\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    border-left: ${POINTER_WIDTH + POINTER_THICKNESS}px solid transparent;\n    border-right: ${POINTER_WIDTH + POINTER_THICKNESS}px solid transparent;\n    border-bottom: ${POINTER_HEIGHT + POINTER_THICKNESS}px solid #636569;\n    left: -${POINTER_THICKNESS}px;\n    top: -${POINTER_THICKNESS}px;\n  }\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    border-left: ${POINTER_WIDTH}px solid transparent;\n    border-right: ${POINTER_WIDTH}px solid transparent;\n    border-bottom: ${POINTER_HEIGHT}px solid ${tooltipBackground};\n  }\n`;\n\nfunction normalizeCssValue(value: string | number) {\n  return typeof value === \"number\" ? `${value}px` : value;\n}\n\nconst withMin = (min: number) => (value: string | number | undefined) =>\n  value != undefined ? `max(${min}px, ${normalizeCssValue(value)})` : value;\nconst withMax = (max: number) => (value: string | number | undefined) =>\n  value != undefined ? `min(${max}px, ${normalizeCssValue(value)})` : value;\nconst HEIGHT_OFFSET = POINTER_HEIGHT + WITH_POINTER_BORDER_RADIUS;\nconst WIDTH_OFFSET = POINTER_WIDTH + WITH_POINTER_BORDER_RADIUS;\n\n/**\n * Ensures pointer is not offset too much or too little that would make the arrow appear\n * outside the tooltip boundary.\n */\nfunction limitPointerPositionStyles(\n  { width, height }: { width: number | undefined; height: number | undefined },\n  { top, left, right, bottom }: CSSProperties\n) {\n  const applyVerticalMinMax = compose(\n    height ? withMax(height - HEIGHT_OFFSET) : identity,\n    withMin(HEIGHT_OFFSET)\n  );\n  const applyHorizontalMinMax = compose(\n    width ? withMax(width - WIDTH_OFFSET) : identity,\n    withMin(WIDTH_OFFSET)\n  );\n  return {\n    top: applyVerticalMinMax(top),\n    bottom: applyVerticalMinMax(bottom),\n    left: applyHorizontalMinMax(left),\n    right: applyHorizontalMinMax(right),\n  };\n}\n\nconst getOffsetCssProp = (\n  side: TooltipPointerPosition[\"side\"],\n  invert?: boolean\n): \"top\" | \"bottom\" | \"left\" | \"right\" => {\n  if (side === \"top\" || side === \"bottom\") {\n    return invert ? \"right\" : \"left\";\n  }\n  return invert ? \"bottom\" : \"top\";\n};\n\nfunction pointerPositionToOffsetStyle({\n  side,\n  offset = \"50%\",\n}: TooltipPointerPosition): CSSProperties {\n  const { invert = false, value: offsetValue } =\n    typeof offset === \"object\" ? offset : { invert: false, value: offset };\n  return {\n    [getOffsetCssProp(side, invert)]: offsetValue,\n  };\n}\n\nexport function TooltipPointer({\n  side,\n  offset,\n  tooltipRef,\n}: {\n  side: TooltipPointerPosition[\"side\"];\n  offset:\n    | { type: \"calculated\"; value: CSSProperties }\n    | { type: \"specific\"; value: TooltipPointerPosition[\"offset\"] };\n  tooltipRef: RefObject<HTMLElement>;\n}) {\n  const [size, setSize] = useState<{\n    height: number | undefined;\n    width: number | undefined;\n  }>({ height: undefined, width: undefined });\n  useEffect(() => {\n    const { offsetHeight, offsetWidth } = tooltipRef.current || {};\n    if (offsetHeight != size?.height || offsetWidth != size?.width) {\n      setSize({ height: offsetHeight, width: offsetWidth });\n    }\n  });\n\n  return (\n    <StyledTooltipPointer\n      side={side}\n      style={limitPointerPositionStyles(\n        size,\n        offset.type === \"specific\"\n          ? pointerPositionToOffsetStyle({ side, offset: offset.value })\n          : offset.value\n      )}\n    />\n  );\n}\n","import React, { useRef } from \"react\";\nimport { useLayoutEffect } from \"@react-aria/utils\";\nimport {\n  AriaPositionProps,\n  PositionAria,\n  useOverlayPosition,\n} from \"@react-aria/overlays\";\n\n/**\n * `useOverlayPosition` only supports positioning overlay relative to an element, at the moment.\n *  For context menu or tooltip, we may want to position the overlay based on the coordinates of the mouse event which\n *  has triggered the overlay.\n *  This hook wraps `useOverlayPosition`, and is very similar to it, but you don't need to pass `targetRef`. Instead,\n *  you have to call the updatePosition in the event handler that triggers the overlay, passing the `MouseEvent` object.\n *\n * This is hopefully a temporary solution to circumvents the limitation of `useOverlayPosition`, until it supports\n * non-element based positioning as well. It works by appending a dummy 1x1 px element to body and positioning it\n * based on React.MouseEvent objects. Then it uses a ref to that element as the `targetRef`, passed to `useOverlayPosition`\n *\n * @example\n * ```ts\n * const { updatePosition, overlyProps} = useMouseEventOverlayPosition({ overlayRef });\n *\n * const onContextMenu = (event: React.ReactEvent) => {\n *  updatePosition(event);\n *  // ...\n * }\n * ```\n */\nlet globalMoveHandler: null | ((e: MouseEvent) => void) = null;\nlet lastMouseClientPos: { clientX: number; clientY: number } | undefined;\n\nexport function useMouseEventOverlayPosition(\n  options: Omit<AriaPositionProps, \"targetRef\">\n): Omit<PositionAria, \"updatePosition\"> & {\n  updatePosition: (event?: React.MouseEvent) => void;\n} {\n  const targetRef = useRef<HTMLElement>(null);\n\n  useLayoutEffect(() => {\n    if (!globalMoveHandler) {\n      // After the first use of the hook, the listener will be attached forever. Not a big deal but can be improved.\n      globalMoveHandler = ({ clientX, clientY }) => {\n        lastMouseClientPos = { clientX, clientY };\n      };\n      document.addEventListener(\"mousemove\", globalMoveHandler);\n    }\n    if (!targetRef.current) {\n      const fakeTarget = document.createElement(\"span\");\n      Object.assign(fakeTarget.style, {\n        width: \"0px\",\n        height: \"0px\",\n        pointerEvents: \"none\",\n        position: \"fixed\",\n        visibility: \"hidden\",\n      });\n      document.body.appendChild(fakeTarget);\n      // @ts-expect-error We intentionally don't pass null to generic argument, to not have it as a mutable nullable\n      // ref, since we are mimicking an element ref.\n      targetRef.current = fakeTarget;\n      return () => {\n        fakeTarget.remove();\n      };\n    }\n  }, []);\n\n  const updatePosition = (e?: React.MouseEvent) => {\n    const coordinatesSource = e || lastMouseClientPos;\n    if (targetRef.current && coordinatesSource) {\n      const { clientX, clientY } = coordinatesSource;\n      targetRef.current.style.left = `${\n        // not sure why crossOffset passed to useOverlayPosition doesn't work, so compensating for it here.\n        clientX + (options.crossOffset ?? 0)\n      }px`;\n      targetRef.current.style.top = `${clientY}px`;\n    }\n    _updatePosition();\n  };\n  useLayoutEffect(() => {\n    if (options.isOpen) {\n      updatePosition();\n    }\n  }, [options.isOpen, targetRef.current]);\n\n  const { updatePosition: _updatePosition, ...result } = useOverlayPosition({\n    ...options,\n    targetRef,\n  });\n\n  return {\n    ...result,\n    /**\n     * Ref to be passed to be passed as targetRef\n     */\n    updatePosition,\n  };\n}\n","import React, {\n  HTMLAttributes,\n  ReactElement,\n  RefObject,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { TooltipTriggerProps as AriaTooltipTriggerProps } from \"@react-aria/tooltip\";\nimport { AriaPositionProps } from \"@react-aria/overlays\";\nimport { useTooltipTriggerState } from \"@react-stately/tooltip\";\nimport { useMouseEventOverlayPosition } from \"@intellij-platform/core/utils/useMouseEventOverlayPosition\";\nimport { useTheme } from \"@intellij-platform/core/styled\";\nimport { TooltipTriggerAndOverlay } from \"@intellij-platform/core/Tooltip/TooltipTriggerAndOverlay\";\n\nexport interface TooltipTriggerProps\n  // controlling isOpen state is not supported since positioning is based on cursor.\n  // PositionedTooltipTrigger can be used for controlled isOpen state\n  extends Omit<AriaTooltipTriggerProps, \"isOpen\" | \"defaultOpen\" | \"trigger\"> {\n  /**\n   * Tooltip content. The value should be an element of type {@link Tooltip}.\n   */\n  tooltip: ReactElement;\n  /**\n   * Placement of the tooltip with respect to the cursor\n   * @default \"bottom left\"\n   */\n  placement?: AriaPositionProps[\"placement\"];\n  /**\n   * The additional offset applied along the main axis between the element and its\n   * anchor element.\n   * @default theme.value<number>(\"HelpTooltip.mouseCursorOffset\") ?? 20\n   */\n  offset?: number;\n  /**\n   * Either a focusable component, or a render function which accepts trigger props and passes it to some component.\n   */\n  children:\n    | React.ReactNode\n    | ((\n        props: HTMLAttributes<HTMLElement> & { ref: RefObject<HTMLElement> }\n      ) => React.ReactNode);\n}\n\n/**\n * Sets {@param tooltip} for its {@param children}.\n * Showing tooltip on focus and controlled open state are not supported at the moment, based on how tooltip works in the\n * reference impl, and since tooltip is positioned based on cursor position. Positioning the tooltip based on cursor\n * position requires tooltip to be opened on hover. That's why neither controlling opened state nor showing the tooltip\n * on focus are supported here. {@link PositionedTooltipTrigger} allows for positioning the tooltip with respect to the\n * trigger element, and offers more options.\n */\nexport const TooltipTrigger = ({\n  tooltip,\n  children,\n  /**\n   * ide.tooltip.initialReshowDelay registry key. [Docs](https://jetbrains.github.io/ui/controls/tooltip/#19) says\n   * it's 300 by default, but it's 500 in the code currently.\n   */\n  delay = 500,\n  offset,\n  placement = \"bottom left\",\n  ...props\n}: TooltipTriggerProps): JSX.Element => {\n  const triggerRef = useRef<HTMLElement>(null);\n  const theme = useTheme();\n  const state = useTooltipTriggerState({\n    ...props,\n    delay,\n  });\n\n  const overlayRef = useRef<HTMLDivElement>(null);\n\n  const positionAria = useMouseEventOverlayPosition({\n    overlayRef,\n    isOpen: state.isOpen,\n    placement,\n    shouldFlip: true,\n    offset:\n      offset ?? theme.value<number>(\"HelpTooltip.mouseCursorOffset\") ?? 20,\n  });\n\n  // FIXME: Find the explanation for why it happens, and fix it properly, if it's a legit issue.\n  useEffect(() => {\n    if (state.isOpen) {\n      requestAnimationFrame(() => {\n        positionAria.updatePosition();\n      });\n    }\n  }, [state.isOpen]);\n\n  return (\n    <TooltipTriggerAndOverlay\n      tooltip={tooltip}\n      positionAria={positionAria}\n      trigger={children}\n      state={state}\n      overlayRef={overlayRef}\n      triggerRef={triggerRef}\n      /**\n       * If we want to support showing tooltip on focus, or if we want to allow controlled open state, we should let it\n       * be positioned by the trigger element in that case, rather than mouse position.\n       * One solution would be to use useOverlayPosition as well, and conditionally use the right `overlayProps`, based on\n       * whether the position determined by mouse is within `triggerRef.current?.getBoundingClientRect()`. Another way\n       * (maybe better) would be to have `useMouseEventOverlayPosition` accept `bounds` or `containerBounds`, which if\n       * passed, makes sure the position is kept within that boundary. Outside positions would be mapped to the closest\n       * point on the border of the boundary.\n       */\n      showOnFocus={false}\n      isDisabled={props.isDisabled}\n    />\n  );\n};\n","import React, {\n  HTMLAttributes,\n  ReactElement,\n  RefObject,\n  useState,\n} from \"react\";\nimport { useTooltipTrigger as useAriaTooltipTrigger } from \"@react-aria/tooltip\";\nimport { TooltipTriggerState } from \"@react-stately/tooltip\";\nimport { FocusableProvider } from \"@react-aria/focus\";\nimport { Overlay, PositionAria } from \"@react-aria/overlays\";\nimport { mergeProps, useLayoutEffect } from \"@react-aria/utils\";\n\nimport { TooltipContext } from \"./TooltipContext\";\n\ninterface TooltipTriggerBaseProps<T extends HTMLElement = HTMLElement> {\n  /**\n   * Tooltip content. The value should be an element of type {@link Tooltip}.\n   */\n  tooltip: ReactElement;\n  /**\n   * Either a focusable component, or a render function which accepts trigger props and passes it to some component.\n   */\n  trigger:\n    | React.ReactNode\n    | ((\n        props: HTMLAttributes<HTMLElement> & { ref: RefObject<T> }\n      ) => React.ReactNode);\n\n  state: TooltipTriggerState;\n\n  showOnFocus?: boolean;\n  positionAria: PositionAria;\n  overlayRef: RefObject<HTMLDivElement>;\n  triggerRef: RefObject<T>;\n  isDisabled?: boolean;\n}\n\n/**\n * Sets {@param tooltip} for its {@param children}. It doesn't handle tooltip positioning, and so shouldn't be used\n * directly. {@param tooltipOverlayProps} should be used to apply the intended positioning.\n *\n * TODO: Implement timeout-based auto-hide (https://jetbrains.github.io/ui/controls/tooltip/#19)\n * TODO: shadow\n */\nexport const TooltipTriggerAndOverlay = <T extends HTMLElement>({\n  tooltip,\n  trigger,\n  state,\n  overlayRef,\n  triggerRef,\n  showOnFocus,\n  positionAria,\n  ...props\n}: TooltipTriggerBaseProps<T>): JSX.Element => {\n  const [isInteractive, setInteractive] = useState(false);\n  const { triggerProps, tooltipProps } = useTooltipTrigger(\n    props,\n    // In Intellij Platform. The tooltip hides right away. We follow the same, unless the tooltip is interactive.\n    // Maybe something to rethink if it's worth following the reference impl for.\n    { ...state, close: isInteractive ? state.close : () => state.close(true) },\n    triggerRef\n  );\n\n  if (!showOnFocus) {\n    delete triggerProps.onFocus;\n  }\n\n  useLayoutEffect(() => {\n    setInteractive(\n      overlayRef.current?.querySelector(\n        'a, button, [role=\"button\"], [role=link]'\n      ) !== null\n    );\n  });\n  return (\n    <>\n      {normalizeChildren(trigger, { ...triggerProps, ref: triggerRef })}\n      {state.isOpen && !props.isDisabled && (\n        <Overlay>\n          <TooltipContext.Provider\n            value={{\n              state,\n              isInteractive,\n              placement: positionAria.placement,\n              pointerPositionStyle: positionAria.arrowProps.style,\n            }}\n          >\n            <div\n              {...mergeProps(\n                positionAria.overlayProps,\n                // Is it ok to apply tooltip props on this wrapper?\n                tooltipProps\n              )}\n              ref={overlayRef}\n            >\n              {tooltip}\n            </div>\n          </TooltipContext.Provider>\n        </Overlay>\n      )}\n    </>\n  );\n};\n\nfunction normalizeChildren<T extends HTMLElement = HTMLElement>(\n  children: TooltipTriggerBaseProps<T>[\"trigger\"],\n  triggerProps: HTMLAttributes<HTMLElement> & { ref: RefObject<T> }\n) {\n  if (typeof children === \"function\") {\n    return children(triggerProps);\n  }\n  if (React.isValidElement(children) && typeof children.type === \"string\") {\n    return React.cloneElement(children, triggerProps);\n  }\n  return <FocusableProvider {...triggerProps}>{children}</FocusableProvider>;\n}\n\n/**\n * A wrapper around react-aria's useTooltipTrigger, adjusting it for Intellij Platform.\n */\nconst useTooltipTrigger: typeof useAriaTooltipTrigger = (props, state, ref) => {\n  const { triggerProps, tooltipProps } = useAriaTooltipTrigger(\n    props,\n    state,\n    ref\n  );\n  // onPointerDown returned from the underlying usePress stops propagation which messes with some usages of tooltip\n  // like in tab or tool window stripe button. We replace onPointerDown handler with a similar handler that closes\n  // the tooltip.\n  triggerProps.onPointerDown = () => {\n    if (!(ref.current instanceof HTMLInputElement)) {\n      state.close(true);\n    }\n  };\n  /**\n   * onMouseDown is preventDefault-ed which interferes with functionality of the tooltip trigger, in use cases like\n   * tool window stripe button. Note that since pointerDown is handled for calling the tooltip trigger's onPressStart\n   * handler (which hides the tooltip), there is no issue in excluding onMouseDown, because it's only used to preventDefault\n   * the event, because of some edge cases focus handling which is not our concern.\n   */\n  delete triggerProps.onMouseDown;\n\n  return {\n    triggerProps,\n    tooltipProps,\n  };\n};\n","import React from \"react\";\nimport { Tooltip } from \"@intellij-platform/core/Tooltip/Tooltip\";\nimport { styled } from \"@intellij-platform/core/styled\";\n\nexport interface ValidationTooltipProps {\n  children: React.ReactNode;\n  /**\n   * @default error\n   */\n  type?: \"error\" | \"warning\";\n}\n\nconst StyledValidationTooltip = styled(Tooltip)`\n  box-shadow: none;\n  padding: 0.25rem 0.5rem; // from ComponentValidator class in the reference impl\n  max-width: ${({ theme }) =>\n    `${theme.value<number>(\"ValidationTooltip.maxWidth\")}px`};\n  background: ${({ theme }) =>\n    theme.color(\"ValidationTooltip.errorBackground\")};\n  border: 1px solid\n    ${({ theme }) => theme.color(\"ValidationTooltip.errorBorderColor\")};\n`;\n\nconst StyledWarningValidationTooltip = styled(StyledValidationTooltip)`\n  background: ${({ theme }) =>\n    theme.color(\"ValidationTooltip.warningBackground\")};\n  border-color: ${({ theme }) =>\n    theme.color(\"ValidationTooltip.warningBorderColor\")};\n`;\n\n/**\n * Tooltip to be used for validation error messages\n * @see https://jetbrains.github.io/ui/principles/validation_errors/\n */\nexport const ValidationTooltip = ({\n  type = \"error\",\n  children,\n}: ValidationTooltipProps): JSX.Element => {\n  const Component =\n    type === \"error\" ? StyledValidationTooltip : StyledWarningValidationTooltip;\n  return <Component multiline>{children}</Component>;\n};\n","import { Theme } from \"@intellij-platform/core/Theme\";\n\nexport const WITH_POINTER_BORDER_RADIUS = 4;\nexport const tooltipBackground = ({ theme }: { theme: Theme }) =>\n  theme.color(\"ToolTip.background\", !theme.dark ? \"#f2f2f2\" : \"#3c3f41\");\nexport const tooltipBorderColor = ({ theme }: { theme: Theme }) =>\n  theme.color(\"ToolTip.borderColor\", !theme.dark ? \"#adadad\" : \"#636569\");\n","import React from \"react\";\nimport { Node } from \"@react-types/shared\";\nimport { TreeNode } from \"../TreeNode\";\nimport { SpeedSearchItemHighlightsProvider } from \"@intellij-platform/core/CollectionSpeedSearch\";\n\nexport const SpeedSearchTreeNode = <T extends object>({\n  item,\n}: {\n  item: Node<T>;\n}) => {\n  return (\n    <SpeedSearchItemHighlightsProvider itemKey={item.key}>\n      <TreeNode key={item.key} item={item} />\n    </SpeedSearchItemHighlightsProvider>\n  );\n};\n","import React, { ForwardedRef } from \"react\";\nimport { Node } from \"@react-types/shared\";\nimport { Virtualizer } from \"@react-aria/virtualizer\";\nimport { CollectionSpeedSearchContext } from \"@intellij-platform/core/CollectionSpeedSearch\";\nimport {\n  SpeedSearchProps,\n  SpeedSearchStateProps,\n} from \"@intellij-platform/core/SpeedSearch\";\nimport { StyledTree } from \"../StyledTree\";\nimport { SpeedSearchPopup } from \"../../SpeedSearch/SpeedSearchPopup\";\nimport { useTreeState } from \"../useTreeState\";\nimport { TreeProps } from \"../Tree\";\nimport { useTreeVirtualizer } from \"../useTreeVirtualizer\";\nimport { TreeContext } from \"../TreeContext\";\nimport { useSpeedSearchTree } from \"./useSpeedSearchTree\";\nimport { SpeedSearchTreeNode } from \"./SpeedSearchTreeNode\";\nimport { filterDOMProps, useObjectRef } from \"@react-aria/utils\";\n\nexport type SpeedSearchTreeProps<T extends object> = TreeProps<T> &\n  SpeedSearchProps &\n  SpeedSearchStateProps & {\n    /**\n     * Whether speed search popup should not be shown. Useful when speed search state is controlled, and\n     * a search input is rendered outside the tree.\n     */\n    hideSpeedSearchPopup?: boolean;\n  };\n\nexport const SpeedSearchTree = React.forwardRef(\n  <T extends object>(\n    {\n      fillAvailableSpace = false,\n      treeRef,\n      hideSpeedSearchPopup,\n      style,\n      className,\n      ...props\n    }: SpeedSearchTreeProps<T>,\n    forwardedRef: ForwardedRef<HTMLDivElement>\n  ) => {\n    const state = useTreeState(\n      { ...props, disallowEmptySelection: !props.allowEmptySelection },\n      treeRef\n    );\n    const ref = useObjectRef(forwardedRef);\n    const {\n      treeProps,\n      treeContext,\n      speedSearchContextValue,\n      searchPopupProps,\n    } = useSpeedSearchTree({ ...props, isVirtualized: true }, state, ref);\n\n    const { virtualizerProps } = useTreeVirtualizer({ state });\n\n    // NOTE: SpeedSearchPopup can be rendered as a portal with proper positioning (useOverlayPosition), if overflow\n    // issues required it.\n    return (\n      <TreeContext.Provider value={treeContext}>\n        <CollectionSpeedSearchContext.Provider value={speedSearchContextValue}>\n          {!hideSpeedSearchPopup && <SpeedSearchPopup {...searchPopupProps} />}\n          <StyledTree\n            as={Virtualizer}\n            ref={ref}\n            fillAvailableSpace={fillAvailableSpace}\n            {...virtualizerProps}\n            {...treeProps}\n            {...filterDOMProps(props, { labelable: true })}\n            style={style}\n            className={className}\n          >\n            {(type: string, item: unknown) => (\n              <SpeedSearchTreeNode\n                key={(item as Node<T>).key}\n                item={item as Node<T>}\n              />\n            )}\n          </StyledTree>\n        </CollectionSpeedSearchContext.Provider>\n      </TreeContext.Provider>\n    );\n  }\n);\n","import { RefObject } from \"react\";\nimport { useKeyboard } from \"@react-aria/interactions\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { useCollectionSpeedSearch } from \"../../CollectionSpeedSearch/useCollectionSpeedSearch\";\nimport {\n  SpeedSearchProps,\n  SpeedSearchStateProps,\n} from \"../../SpeedSearch/useSpeedSearch\";\nimport { TreeKeyboardDelegate } from \"../TreeKeyboardDelegate\";\nimport { SelectableTreeProps, useSelectableTree } from \"../useSelectableTree\";\nimport { hasAnyModifier } from \"@intellij-platform/core/utils/keyboard-utils\";\n\ninterface UseSpeedSearchTreeProps<T>\n  extends SpeedSearchProps,\n    SpeedSearchStateProps,\n    SelectableTreeProps<T> {}\n\nexport function useSpeedSearchTree<T>(\n  props: UseSpeedSearchTreeProps<T>,\n  state: TreeState<T>,\n  ref: RefObject<HTMLElement>\n) {\n  const {\n    containerProps,\n    keyboardDelegate,\n    selectionManager,\n    speedSearch,\n    ...collectionSpeedSearch\n  } = useCollectionSpeedSearch({\n    ...props,\n    collection: state.collection,\n    selectionManager: state.selectionManager,\n    keyboardDelegate: new TreeKeyboardDelegate(\n      state.collection,\n      state.disabledKeys,\n      ref\n    ),\n    ref,\n    // TODO: maybe allow control over speed search via other props\n  });\n\n  // Speed search is cleared on \"Enter\" key. Alternatively we could wrap onAction and onToggle props\n  // but this seemed more reasonable\n  // NOTE: It may make sense for this behaviour to be pulled up to useCollectionSpeedSearch.\n  const { keyboardProps: speedSearchKeyboardProps } = useKeyboard({\n    onKeyDown: (e) => {\n      if (\n        [\"Enter\", \"ArrowLeft\", \"ArrowRight\"].includes(e.key) &&\n        !hasAnyModifier(e)\n      ) {\n        speedSearch.clear();\n      } else {\n        e.continuePropagation();\n      }\n    },\n  });\n\n  const { treeProps, ...selectableTree } = useSelectableTree(\n    { ...props, keyboardDelegate },\n    { ...state, selectionManager },\n    ref\n  );\n\n  return {\n    treeProps: mergeProps(treeProps, containerProps, speedSearchKeyboardProps),\n    ...collectionSpeedSearch,\n    ...selectableTree,\n  };\n}\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { StyledList } from \"@intellij-platform/core/List/StyledList\";\n\nexport const StyledTree = styled(StyledList).attrs({ role: \"tree\" as string })`\n  background: ${({ theme }) => theme.color(\"Tree.background\")};\n`;\n","import React, { Key, MutableRefObject } from \"react\";\nimport { TreeState } from \"@react-stately/tree\";\n\nexport type TreeContextType<T> = {\n  state: Pick<\n    TreeState<T>,\n    | \"collection\"\n    | \"selectionManager\"\n    | \"expandedKeys\"\n    | \"disabledKeys\"\n    | \"toggleKey\"\n  >;\n  focused: boolean;\n  onActionRef: MutableRefObject<((key: Key) => void) | undefined>;\n};\n\nexport const TreeContext = React.createContext<TreeContextType<any> | null>(\n  null\n);\n","import { ListKeyboardDelegate } from \"@react-aria/selection\";\nimport { Collection, Node } from \"@react-types/shared\";\nimport React, { Key, RefObject } from \"react\";\n\nexport class TreeKeyboardDelegate<T> extends ListKeyboardDelegate<T> {\n  constructor(\n    private collection: Collection<Node<T>>,\n    disabledKeys: Set<Key>,\n    ref: RefObject<HTMLElement>,\n    collator?: Intl.Collator\n  ) {\n    super({\n      collection,\n      disabledKeys,\n      ref,\n      collator,\n      // Since @react-aria/selection@3.16.0 getKeyLeftOf and getKeyRightOf is\n      // removed if orientation is vertical and layout is \"stack\".\n      layout: \"grid\",\n    });\n  }\n\n  getKeyLeftOf(key: React.Key): React.Key | null {\n    const item = this.collection.getItem(key);\n    return item?.parentKey ?? this.getKeyAbove(key);\n  }\n\n  getKeyRightOf(key: React.Key): React.Key | null {\n    return this.getKeyBelow(key);\n  }\n}\n","import { LafIcon } from \"../Icon\";\nimport React, { ComponentProps, useMemo } from \"react\";\nimport { styled } from \"../styled\";\n\nexport const TREE_ICON_SIZE = 16;\nconst StyledTreeNodeIcon = styled(LafIcon)`\n  margin-left: -20px;\n  margin-right: 4px;\n  margin-top: -1px; // the svg path seems to have uneven vertical padding. This is to compensate for that.\n  flex-shrink: 0;\n  align-self: center;\n`;\n\ntype TreeNodeIconProps = ComponentProps<typeof StyledTreeNodeIcon> & {\n  selected: boolean;\n  expanded: boolean;\n};\nconst getIcon = (selected: boolean, expanded: boolean) => {\n  const modifiers = { Selected: selected };\n  if (expanded) {\n    return {\n      themePath: selected ? \"Tree.expandedSelectedIcon\" : \"Tree.expandedIcon\",\n      iconPath: { name: \"treeExpanded\", modifiers },\n    };\n  }\n  if (!expanded) {\n    return {\n      themePath: selected ? \"Tree.collapsedSelectedIcon\" : \"Tree.collapsedIcon\",\n      iconPath: { name: \"treeCollapsed\", modifiers },\n    };\n  }\n};\n\nexport function TreeNodeIcon({\n  selected,\n  expanded,\n  ...props\n}: TreeNodeIconProps) {\n  const icon = useMemo(() => getIcon(selected, expanded), [selected, expanded]);\n  return (\n    <StyledTreeNodeIcon\n      icon={icon?.iconPath}\n      themePath={icon?.themePath}\n      size={TREE_ICON_SIZE}\n      {...props}\n    />\n  );\n}\n","import { Key } from \"react\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { PressProps } from \"@react-aria/interactions\";\n\nexport function useTreeNodeToggleButton<T>({\n  collection,\n  toggleKey,\n  selectionManager,\n  key,\n}: { key: Key } & Pick<\n  TreeState<T>,\n  \"collection\" | \"toggleKey\" | \"selectionManager\"\n>): { treeNodeToggleButtonProps: PressProps } {\n  return {\n    treeNodeToggleButtonProps: {\n      preventFocusOnPress: true,\n      onPress: () => {\n        toggleKey(key);\n\n        // The rest is for deselecting selected descendants and selecting the toggled node, if there\n        // is at least one of such currently selected descendants. This is the exact behavior\n        // of Tree in Intellij Platform, and hence implemented here.\n        const selectedDescendantKeys = [\n          ...selectionManager.selectedKeys,\n        ].filter((key: Key) => {\n          let parentKey = collection.getItem(key)?.parentKey;\n          while (parentKey) {\n            if (parentKey === key) {\n              return true;\n            }\n            parentKey = collection.getItem(parentKey)?.parentKey;\n          }\n          return false;\n        });\n        selectedDescendantKeys.forEach((key) =>\n          selectionManager.toggleSelection(key)\n        );\n        // if any of the descendants are selected\n        if (\n          !selectionManager.isSelected(key) &&\n          selectedDescendantKeys.length > 0\n        ) {\n          selectionManager.toggleSelection(key);\n        }\n      },\n    },\n  };\n}\n","import { styled } from \"@intellij-platform/core/styled\";\nimport { UnknownThemeProp } from \"@intellij-platform/core/Theme\";\nimport { StyledListItem } from \"@intellij-platform/core/List/StyledListItem\";\nimport { TREE_ICON_SIZE } from \"./TreeNodeIcon\";\n\ntype StyledListItemProps = {\n  level: number;\n};\nexport const StyledTreeNode = styled(StyledListItem).attrs<StyledListItemProps>(\n  { role: \"treeitem\" }\n)<StyledListItemProps>`\n  // There are some theme properties for tree node padding (theme.ui.Tree.leftChildIndent and\n  // theme.ui.Tree.leftChildIndent), but they doesn't seem to be applicable.\n  padding-left: ${({ level }) => `${(level + 1) * TREE_ICON_SIZE + 8}px`};\n  padding-right: 0.25rem;\n  ${({ containerFocused, selected, disabled, theme }) => {\n    let backgroundColor;\n    let color = disabled\n      ? theme.color(\"*.disabledForeground\")\n      : theme.color(\n          \"Tree.foreground\" as UnknownThemeProp<\"Tree.foreground\">,\n          theme.commonColors.labelForeground\n        );\n    if (selected) {\n      if (containerFocused) {\n        color = theme.asCurrentForeground(\n          theme.color(\n            \"Tree.selectionForeground\" as UnknownThemeProp<\"Tree.selectionForeground\">\n          ) || theme.commonColors.labelSelectedForeground\n        ) /* Prioritizing \"*.selectionForeground\" over labelSelectedForeground*/;\n        backgroundColor = theme.color(\n          \"Tree.selectionBackground\" as UnknownThemeProp<\"Tree.selectionBackground\">\n        );\n      } else {\n        color = theme.color(\n          \"Tree.selectionInactiveForeground\" as UnknownThemeProp<\"Tree.selectionInactiveForeground\">,\n          color\n        );\n        backgroundColor = theme.color(\n          \"Tree.selectionBackgroundInactive\" as UnknownThemeProp<\"Tree.selectionBackgroundInactive\">\n        );\n      }\n    }\n    return {\n      backgroundColor,\n      color,\n    };\n  }}\n`;\n","import { usePress } from \"@react-aria/interactions\";\nimport { Node } from \"@react-types/shared\";\nimport React, { useContext, useRef } from \"react\";\nimport { ItemStateContext } from \"../Collections/ItemStateContext\";\nimport { TreeNodeIcon } from \"./TreeNodeIcon\";\nimport { useTreeNode } from \"./useTreeNode\";\nimport { useTreeNodeToggleButton } from \"./useTreeNodeToggleButton\";\nimport { TreeContext } from \"./TreeContext\";\nimport { StyledTreeNode } from \"@intellij-platform/core/Tree/StyledTreeNode\";\n\ntype TreeNodeProps<T> = {\n  item: Node<T>;\n  showAsFocused?: boolean;\n};\n\nexport function TreeNode<T>({ item }: TreeNodeProps<T>) {\n  const ref = useRef(null);\n  const {\n    state: {\n      collection,\n      selectionManager,\n      expandedKeys,\n      disabledKeys,\n      toggleKey,\n    },\n    focused: containerFocused,\n    onActionRef: { current: onAction },\n  } = useContext(TreeContext)!;\n\n  const isSelected = selectionManager.isSelected(item.key);\n  const expanded = expandedKeys.has(item.key);\n  const isDisabled = disabledKeys.has(item.key);\n\n  const { pressProps: togglePressProps } = usePress({\n    ...useTreeNodeToggleButton({\n      key: item.key,\n      collection,\n      selectionManager,\n      toggleKey,\n    }).treeNodeToggleButtonProps,\n    isDisabled,\n  });\n\n  const { treeNodeProps } = useTreeNode({\n    item,\n    ref,\n    toggleKey,\n    onAction,\n    selectionManager,\n    disabled: isDisabled,\n  });\n\n  /**\n   * NOTE: TreeNode intentionally is not designed in a recursive way for two main reasons:\n   * - Performance\n   * - Better support for virtualization\n   * So instead of rendering TreeNode for childNodes, if the node is expanded, we expect parent\n   * to render children. It's not a layout issue since we don't need any nesting in terms of\n   * layout of nested items. In terms of layout, a tree will be rendered similar to a flat list,\n   * but with more indentation for nested nodes.\n   */\n  return (\n    <>\n      <StyledTreeNode\n        ref={ref}\n        {...treeNodeProps}\n        containerFocused={containerFocused}\n        disabled={isDisabled}\n        selected={isSelected}\n        aria-disabled={isDisabled}\n        aria-selected={isSelected}\n        level={item.level}\n      >\n        {[...item.childNodes].length > 0 && (\n          <TreeNodeIcon\n            selected={isSelected}\n            expanded={expanded}\n            {...togglePressProps}\n          />\n        )}\n        <ItemStateContext.Provider\n          value={{\n            isDisabled,\n            isSelected,\n            isContainerFocused: containerFocused,\n            node: item,\n          }}\n        >\n          {item.rendered}\n        </ItemStateContext.Provider>\n      </StyledTreeNode>\n    </>\n  );\n}\n","import { usePress } from \"@react-aria/interactions\";\nimport { useSelectableItem } from \"@intellij-platform/core/selection\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { SelectionManager } from \"@react-stately/selection\";\nimport { Node } from \"@react-types/shared\";\nimport { Key, RefObject } from \"react\";\n\nexport function useTreeNode<T>({\n  item,\n  ref,\n  selectionManager,\n  disabled,\n  toggleKey,\n  onAction,\n}: {\n  item: Node<T>;\n  ref: RefObject<HTMLElement>;\n  disabled: boolean;\n  toggleKey: (key: Key) => void;\n  onAction?: (key: Key) => void;\n  selectionManager: SelectionManager;\n}) {\n  const {\n    pressProps: { onKeyDown, ...pressProps },\n  } = usePress({\n    ...useSelectableItem({\n      key: item.key,\n      ref,\n      selectionManager,\n      isVirtualized: false,\n    }).itemProps,\n    isDisabled: disabled,\n    preventFocusOnPress: false,\n  });\n\n  const onDoubleClick = () => {\n    if ([...item.childNodes].length > 0) {\n      toggleKey(item.key);\n    } else {\n      onAction?.(item.key);\n    }\n  };\n  const ariaProps = {\n    role: \"treeitem\",\n  };\n\n  return {\n    treeNodeProps: mergeProps(pressProps, { onDoubleClick }, ariaProps),\n  };\n}\n","import { Key, RefObject, useEffect, useMemo, useRef, useState } from \"react\";\nimport {\n  DOMProps,\n  KeyboardDelegate,\n  KeyboardEvent,\n  Node,\n} from \"@react-types/shared\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { useFocusWithin, useKeyboard } from \"@react-aria/interactions\";\nimport { filterDOMProps, mergeProps } from \"@react-aria/utils\";\nimport { useCollator } from \"@react-aria/i18n\";\nimport { useSelectableCollection } from \"@intellij-platform/core/selection\";\nimport { TreeKeyboardDelegate } from \"./TreeKeyboardDelegate\";\nimport { useCollectionAutoScroll } from \"../Collections/useCollectionAutoScroll\";\nimport { useLatest } from \"@intellij-platform/core/utils/useLatest\";\nimport { TreeContextType } from \"./TreeContext\";\nimport { hasAnyModifier } from \"@intellij-platform/core/utils/keyboard-utils\";\nimport { FocusEvents } from \"@react-types/shared/src/events\";\nimport { FocusStrategy } from \"@react-types/shared/src/selection\";\nimport { groupBy } from \"ramda\";\nimport {\n  CollectionFocusProxyProps,\n  useCollectionFocusProxy,\n} from \"@intellij-platform/core/Collections\";\n\nexport interface SelectableTreeProps<T>\n  extends DOMProps,\n    Omit<FocusEvents, \"onFocusChange\">,\n    CollectionFocusProxyProps {\n  isVirtualized?: boolean;\n  keyboardDelegate?: KeyboardDelegate;\n  /**\n   * Called when the action associated with a leaf tree node should be taken.\n   * The exact UI interaction is abstracted away, but it's either Enter key or double click.\n   */\n  onAction?: (key: Key) => void;\n  onNodeKeyDown?: (event: KeyboardEvent, node: Node<T>) => void;\n\n  allowEmptySelection?: boolean;\n\n  autoFocus?: boolean | FocusStrategy;\n\n  showAsFocused?: boolean;\n}\n\n/**\n * NOTE: at the time of writing this hook, react-aria didn't have support for Tree. When useTree is implemented in\n * react-aria, it makes sense to refactor this and use that. There will still be something on top of it here.\n */\nexport function useSelectableTree<T>(\n  {\n    onAction,\n    onFocus,\n    onBlur,\n    autoFocus,\n    showAsFocused,\n    focusProxyRef,\n    ...props\n  }: SelectableTreeProps<T>,\n  state: TreeState<T>,\n  ref: RefObject<HTMLElement>\n) {\n  const domProps = filterDOMProps(props);\n  const collator = useCollator({ usage: \"search\", sensitivity: \"base\" });\n\n  const [focused, setFocused] = useState(false);\n  const {\n    collectionProps: {\n      // preventDefault in onMouseDown prevents collection from getting focused.\n      // Maybe it should be removed from useSelectableCollection, now that it lives here\n      onMouseDown,\n      onKeyDown: selectionKeyDown,\n      ...collectionProps\n    },\n  } = useSelectableCollection({\n    ref,\n    selectionManager: state.selectionManager,\n    disallowEmptySelection: !props.allowEmptySelection,\n    selectOnFocus: true,\n    autoFocus,\n    keyboardDelegate: useMemo(\n      () =>\n        props.keyboardDelegate ||\n        new TreeKeyboardDelegate(\n          state.collection,\n          state.disabledKeys,\n          ref,\n          collator\n        ),\n      [state.collection, state.disabledKeys, props.keyboardDelegate]\n    ),\n  });\n\n  useCollectionFocusProxy({\n    collectionRef: ref,\n    state,\n    onAction,\n    focusProxyRef,\n  });\n\n  const { focusWithinProps } = useFocusWithin({\n    onFocusWithinChange: setFocused,\n  });\n\n  useCollectionAutoScroll(\n    {\n      isVirtualized: props.isVirtualized,\n      selectionManager: state.selectionManager,\n    },\n    ref\n  );\n\n  const onKeyDown = (event: KeyboardEvent) => {\n    const focusedKey = state.selectionManager.focusedKey;\n    const focusedItem = focusedKey\n      ? state.collection.getItem(focusedKey)\n      : null;\n    if (focusedItem) {\n      const isExpandable = Boolean(focusedItem?.hasChildNodes);\n      const expanded = state.expandedKeys.has(focusedKey);\n      const isDisabled = state.disabledKeys.has(focusedKey);\n      if (isDisabled) {\n        event.continuePropagation();\n        return;\n      }\n      props?.onNodeKeyDown?.(event, focusedItem);\n      const shouldToggle =\n        !hasAnyModifier(event) &&\n        (event.key === \"Enter\" ||\n          (event.key === \"ArrowLeft\" && expanded) ||\n          (event.key === \"ArrowRight\" && !expanded));\n      if (isExpandable && shouldToggle) {\n        event.preventDefault();\n        state.toggleKey(focusedKey);\n        return;\n      } else if (event.key === \"Enter\") {\n        onAction?.(focusedKey);\n        return;\n      }\n    }\n    // selectionKeyDown currently doesn't report back if it handled the event or not. We could have conditionally\n    // continued propagation if the event was not handled. Then we could change Speed Search impl to only handle\n    // inputs when the propagation is not prevented.\n    // Also, selectionKeyDown is not accurate in handling actions like \"select all\". e.g. it takes 'cmd+shift+a' too,\n    // as select all which can conflict with action system. So we don't call it if there are multiple modifiers.\n    const hasAtMostOneModifier =\n      [event.metaKey, event.ctrlKey, event.shiftKey, event.altKey].filter(\n        (i) => i\n      ).length < 2;\n    if (hasAtMostOneModifier) {\n      selectionKeyDown?.(event);\n    }\n    event.continuePropagation();\n  };\n  const { keyboardProps } = useKeyboard({\n    onKeyDown,\n  });\n\n  //////////////////////////////// providing context value ////////////////////////////////\n  const onActionRef = useLatest(onAction);\n\n  const {\n    selectionManager,\n    collection,\n    expandedKeys,\n    disabledKeys,\n    toggleKey,\n  } = state;\n  const treeContext = useMemo<TreeContextType<T>>(\n    () => ({\n      state: {\n        collection,\n        selectionManager,\n        expandedKeys,\n        disabledKeys,\n        toggleKey,\n      },\n      focused: Boolean(focused || showAsFocused),\n      onActionRef,\n    }),\n    [\n      selectionManager,\n      collection,\n      expandedKeys,\n      disabledKeys,\n      toggleKey,\n      focused,\n      showAsFocused,\n      onActionRef,\n    ]\n  );\n  ////////////////////////////////////////////////////////////////////////////////////////\n  useSelectParentOfRemovedSelectedNode(state);\n\n  return {\n    // order of merging here is important. navigation handling should precede selection handling\n    treeProps: mergeProps(\n      focusWithinProps,\n      collectionProps,\n      keyboardProps,\n      domProps,\n      { onFocus, onBlur, role: \"tree\" }\n    ),\n    treeContext,\n    focused,\n  };\n}\n\n/**\n * When a selected node is removed from the tree, selects the parent of the removed node\n * if no other node is selected.\n *\n * Note: this behavior is observed in a couple of tree views, including project files tree.\n * There could be an option for disabling/enabling it, if use cases comes up in future\n * where this behavior causes issues.\n */\nconst useSelectParentOfRemovedSelectedNode = (state: TreeState<unknown>) => {\n  const previousCollectionRef = useRef(state.collection);\n  useEffect(() => {\n    if (state.selectionManager.rawSelection !== \"all\") {\n      const keys = [...state.collection.getKeys()];\n\n      const { invalid = [], valid = [] } = groupBy(\n        (selectedKey) => (keys.includes(selectedKey) ? \"valid\" : \"invalid\"),\n        [...state.selectionManager.selectedKeys]\n      );\n      if (valid.length === 0 && invalid.length > 0) {\n        for (let invalidKey of invalid) {\n          let key: Key | undefined = invalidKey;\n          while (key != undefined) {\n            if (keys.includes(key)) {\n              state.selectionManager.setSelectedKeys(valid.concat(key));\n              state.selectionManager.setFocusedKey(key);\n              return;\n            }\n            key =\n              previousCollectionRef.current.getItem(key)?.parentKey ??\n              undefined;\n          }\n        }\n      }\n    }\n    previousCollectionRef.current = state.collection;\n  }, [state.collection]);\n};\n","import { usePrevious } from \"@intellij-platform/core/utils/usePrevious\";\nimport { CacheInvalidationContext } from \"./Item\";\n\nexport interface CollectionCacheInvalidationProps {\n  /**\n   * Defines cache invalidation policy for items. By default, the render result is cached based on the item objects.\n   * This is equivalent of passing false or not passing anything for `cacheInvalidation`. If `true` is passed, it will\n   * always invalidate the render result, causing the collection to be recreated on each re-render. It can\n   * considerably affect performance in large collections. in addition to boolean value, an object with the list of\n   * invalidators can also be passed. renderer function is called each time any of the invalidators are changed.\n   * Think of it as [dependency array in react hooks](https://reactjs.org/docs/hooks-reference.html#usememo). Except\n   * that the length of the array can also safely change.\n   */\n  cacheInvalidation?: boolean | { invalidators: ReadonlyArray<unknown> };\n}\n\n/**\n * Allows cache invalidation options based on input props, for components that use collection\n */\nexport const useCollectionCacheInvalidation = ({\n  cacheInvalidation,\n}: CollectionCacheInvalidationProps): CacheInvalidationContext => {\n  const invalidators =\n    typeof cacheInvalidation === \"object\" ? cacheInvalidation.invalidators : [];\n  const lastInvalidators = usePrevious(invalidators);\n\n  const invalidated =\n    typeof cacheInvalidation === \"object\"\n      ? cacheInvalidation.invalidators.length !== lastInvalidators.length ||\n        cacheInvalidation.invalidators.some(\n          (anInvalidator, index) => anInvalidator !== lastInvalidators[index]\n        )\n      : cacheInvalidation;\n\n  return {\n    invalidated,\n  };\n};\n","//@ts-nocheck\n/**\n * Not exported from @react-stately/tree, but needed in the custom implementation of useTreeState\n */\n\nimport { Key } from \"react\";\nimport { Collection, Node } from \"@react-types/shared\";\n\nexport class TreeCollection<T> implements Collection<Node<T>> {\n  private keyMap: Map<Key, Node<T>> = new Map();\n  private iterable: Iterable<Node<T>>;\n  private firstKey: Key;\n  private lastKey: Key;\n\n  constructor(\n    nodes: Iterable<Node<T>>,\n    { expandedKeys }: { expandedKeys?: Set<Key> } = {}\n  ) {\n    this.iterable = nodes;\n    expandedKeys = expandedKeys || new Set();\n\n    let visit = (node: Node<T>) => {\n      this.keyMap.set(node.key, node);\n\n      if (\n        node.childNodes &&\n        (node.type === \"section\" || expandedKeys.has(node.key))\n      ) {\n        for (let child of node.childNodes) {\n          visit(child);\n        }\n      }\n    };\n\n    for (let node of nodes) {\n      visit(node);\n    }\n\n    let last: Node<T>;\n    let index = 0;\n    for (let [key, node] of this.keyMap) {\n      if (last) {\n        last.nextKey = key;\n        node.prevKey = last.key;\n      } else {\n        this.firstKey = key;\n        node.prevKey = undefined;\n      }\n\n      if (node.type === \"item\") {\n        node.index = index++;\n      }\n\n      last = node;\n\n      // Set nextKey as undefined since this might be the last node\n      // If it isn't the last node, last.nextKey will properly set at start of new loop\n      last.nextKey = undefined;\n    }\n\n    this.lastKey = last?.key;\n  }\n\n  *[Symbol.iterator]() {\n    yield* this.iterable;\n  }\n\n  get size() {\n    return this.keyMap.size;\n  }\n\n  getKeys() {\n    return this.keyMap.keys();\n  }\n\n  getKeyBefore(key: Key) {\n    let node = this.keyMap.get(key);\n    return node?.prevKey ?? null;\n  }\n\n  getKeyAfter(key: Key) {\n    let node = this.keyMap.get(key);\n    return node?.nextKey ?? null;\n  }\n\n  getFirstKey() {\n    return this.firstKey;\n  }\n\n  getLastKey() {\n    return this.lastKey;\n  }\n\n  getItem(key: Key) {\n    return this.keyMap.get(key) ?? null;\n  }\n\n  at(idx: number) {\n    const keys = [...this.getKeys()];\n    return this.getItem(keys[idx]);\n  }\n}\n","import { Node } from \"@react-types/shared\";\nimport { Key } from \"react\";\n\n/**\n * given a node, returns keys of all consecutive single children\n */\nexport function getSingleChildrenKeys<T>(\n  node: Node<T> | null | undefined\n): Key[] {\n  return getSingleChildrenKeysRecursive(node, []);\n}\n\nfunction getSingleChildrenKeysRecursive<T>(\n  node: Node<T> | null | undefined,\n  previousKeys: Key[]\n): Key[] {\n  if (!node) {\n    return [];\n  }\n  const childNodesIterator: Iterator<\n    Node<T>,\n    Node<T> | undefined\n  > = node.childNodes[Symbol.iterator]();\n  const { value: firstChild, done } = childNodesIterator.next();\n  const noMoreChildren = done || childNodesIterator.next().value == null;\n  if (firstChild != null && noMoreChildren && isExpandable(firstChild)) {\n    return getSingleChildrenKeysRecursive(\n      firstChild,\n      previousKeys.concat((firstChild as Node<T>).key)\n    );\n  }\n  return previousKeys;\n}\n\nconst isExpandable = <T>(node: Node<T>) =>\n  node.hasChildNodes || !isEmptyIterable(node.childNodes);\n\nfunction isEmptyIterable(iterable: Iterable<unknown> | undefined | null) {\n  for (const _ of iterable || []) {\n    // eslint-disable-line no-unused-vars, no-unreachable-loop\n    return false;\n  }\n  return true;\n}\n","import {\n  MultipleSelectionState,\n  SelectionManager,\n  SelectionManagerOptions,\n} from \"@react-stately/selection\";\nimport { Collection, Node } from \"@react-types/shared\";\nimport React, { Key } from \"react\";\n\nexport class TreeSelectionManager extends SelectionManager {\n  private readonly collection: Collection<Node<unknown>>;\n\n  constructor(\n    collection: Collection<Node<unknown>>,\n    state: MultipleSelectionState,\n    options?: SelectionManagerOptions\n  ) {\n    super(collection, state, options);\n    this.collection = collection;\n  }\n\n  expandSelection() {\n    if (this.focusedKey) {\n      const node = this.collection.getItem(this.focusedKey);\n      if (node) {\n        const { expandKeys } = this.getExpandAndShrinkKeys(node);\n        if (expandKeys.length > 0) {\n          this.setSelectedKeys([...this.selectedKeys, ...expandKeys]);\n        }\n      }\n    }\n  }\n  shrinkSelection() {\n    if (this.focusedKey) {\n      const node = this.collection.getItem(this.focusedKey);\n      if (node) {\n        const { shrinkKeys } = this.getExpandAndShrinkKeys(node);\n        if (shrinkKeys.length > 0) {\n          this.setSelectedKeys(\n            [...this.selectedKeys].filter((key) => !shrinkKeys.includes(key))\n          );\n        }\n      }\n    }\n  }\n\n  private getExpandAndShrinkKeys(node: Node<unknown>) {\n    return this.recursivelyGetExpandAndShrinkKeys(\n      node,\n      [...this.collection.getKeys()],\n      null\n    );\n  }\n  /**\n   * Starting from a node, traverses the tree up, until it reaches the root of the fully selected subtree that includes\n   * the starting node. The root itself may or may not be selected. Returns:\n   * - keys to be added to selection, when expanding selection\n   * - keys to be removed from selection, when shrinking selection\n   */\n  private recursivelyGetExpandAndShrinkKeys(\n    node: Node<unknown>,\n    keys: Array<Key>,\n    previousChild: Key | null\n  ): { expandKeys: Key[]; shrinkKeys: Key[] } {\n    const parent =\n      node && node.parentKey ? this.collection.getItem(node.parentKey) : null;\n    const newKeys = keys.filter((key) => key !== previousChild);\n    const parentDescendants = parent\n      ? getAllDescendants(parent, newKeys).map(({ key }) => key)\n      : this.getAllRoots().flatMap((key) => {\n          const item = this.collection.getItem(key);\n          return key !== node.key && item\n            ? getAllDescendants(item, newKeys)\n                .map(({ key }) => key)\n                .concat(key)\n            : [];\n        });\n    if (parent && parentDescendants.every((key) => this.isSelected(key))) {\n      return this.recursivelyGetExpandAndShrinkKeys(parent, keys, node.key);\n    }\n    const descendants = getAllDescendants(\n      node,\n      keys.filter((key) => key !== previousChild)\n    ).map(({ key }) => key);\n\n    return {\n      expandKeys: descendants.some((key) => !this.isSelected(key))\n        ? descendants\n        : !this.isSelected(node.key)\n        ? [node.key]\n        : parentDescendants,\n      shrinkKeys:\n        parentDescendants.length > 0 &&\n        parentDescendants.every((key) => this.isSelected(key))\n          ? parentDescendants\n          : this.isSelected(node.key) && previousChild\n          ? [node.key]\n          : descendants.filter((key) => this.isSelected(key)),\n    };\n  }\n\n  private getAllRoots() {\n    return [...this.collection.getKeys()].filter(\n      (key) => this.collection.getItem(key)?.parentKey == null\n    );\n  }\n}\n\nfunction getAllDescendants<T>(\n  node: Node<T>,\n  stopKeys: Array<React.Key>\n): Node<T>[] {\n  const childNodes = (node.hasChildNodes ? [...node.childNodes] : []).filter(\n    (node) => stopKeys.includes(node.key)\n  );\n  return node.hasChildNodes\n    ? childNodes.concat(\n        childNodes.map((node) => getAllDescendants(node, stopKeys)).flat()\n      )\n    : [];\n}\n","import {\n  Collection,\n  CollectionStateBase,\n  Expandable,\n  MultipleSelection,\n  Node,\n} from \"@react-types/shared\";\nimport { TreeProps as _TreeProps, TreeState } from \"@react-stately/tree\";\nimport {\n  TreeRefValue,\n  useTreeRef,\n} from \"@intellij-platform/core/Tree/useTreeRef\";\nimport { ForwardedRef, Key, useCallback, useEffect, useMemo } from \"react\";\nimport { useMultipleSelectionState } from \"@react-stately/selection\";\nimport { useCollection } from \"@react-stately/collections\";\nimport { useControlledState } from \"@react-stately/utils\";\nimport {\n  CollectionCacheInvalidationProps,\n  useCollectionCacheInvalidation,\n} from \"@intellij-platform/core/Collections/useCollectionCacheInvalidation\";\nimport { TreeCollection as _TreeCollection } from \"./__copied__TreeCollection\";\nimport { getSingleChildrenKeys } from \"./getSingleChildrenKeys\";\nimport { TreeSelectionManager } from \"@intellij-platform/core/Tree/TreeSelectionManager\";\nimport { notNull } from \"@intellij-platform/core/utils/array-utils\";\n\nexport class TreeCollection<T> extends _TreeCollection<T> {\n  public readonly rootKeys: Key[];\n  constructor(\n    nodes: Iterable<Node<T>>,\n    { expandedKeys }: { expandedKeys: Set<Key> }\n  ) {\n    super(nodes, { expandedKeys });\n    this.rootKeys = Array.from(nodes).map(({ key }) => key);\n  }\n\n  getAllExpandableKeys(): Set<Key> {\n    const rootNodes = this.rootKeys\n      .map((key) => this.getItem(key))\n      .filter(notNull);\n    return this.recursivelyAddExpandableKeys(rootNodes, new Set<Key>());\n  }\n\n  private recursivelyAddExpandableKeys(\n    nodes: Iterable<Node<T>>,\n    result: Set<Key>\n  ) {\n    for (const node of nodes) {\n      if (node?.hasChildNodes) {\n        result.add(node.key);\n        this.recursivelyAddExpandableKeys(node.childNodes, result);\n      }\n    }\n    return result;\n  }\n}\nexport interface TreeProps<T>\n  extends CollectionStateBase<T, TreeCollection<T>>,\n    Expandable,\n    MultipleSelection,\n    CollectionCacheInvalidationProps {\n  childExpansionBehaviour?: \"multi\" | \"single\";\n}\n/**\n * Provides state management for tree-like components. Handles building a collection\n * of items from props, item expanded state, and manages multiple selection state.\n *\n * Similar to (and initially copied from) useTreeState from @react-stately/tree, but with the following changes:\n * - Supports exposing some imperative API via ref.\n *   Could be done via a wrapper too.\n * - Different onToggle implementation with two adjustments to match Intellij Platform:\n *   - Collapsing a key collapses all descendants as well.\n *   - Expanding a single-child node will recursively expand all single-child descendants.\n *   Couldn't be done with a wrapper in a clean and optimal way. Access to setExpandedKey is not provided. We would need\n *   to either maintain a new state for expanded keys and ignore the one returned from the wrapped hook, or\n *   inefficiently call the returned `toggleKey` function many times.\n * - Supports collection invalidation via CollectionCacheInvalidationProps\n *   Perhaps not the most important addition, but not possible to be done via a wrapper.\n * - Uses TreeSelectionManager instead of the default SelectionManager, which implements expand/shrink selection.\n *   Could be done in a wrapper, with a little hack. Would need to replace selection manager.\n * - returned `collection` is of type `TreeCollection` (which is an improved version of react-stately `TreeCollection`),\n *   instead of the more generic `Collection`.\n */\nexport function useTreeState<T extends object>(\n  { childExpansionBehaviour = \"multi\", ...props }: TreeProps<T>,\n  treeRef?: ForwardedRef<TreeRefValue>\n): TreeState<T> {\n  let [expandedKeys, setExpandedKeys] = useControlledState(\n    props.expandedKeys ? new Set(props.expandedKeys) : undefined!,\n    props.defaultExpandedKeys ? new Set(props.defaultExpandedKeys) : new Set(),\n    props.onExpandedChange!\n  );\n\n  let selectionState = useMultipleSelectionState({\n    ...props,\n    selectionBehavior: \"replace\",\n  });\n  let disabledKeys = useMemo(\n    () => (props.disabledKeys ? new Set(props.disabledKeys) : new Set<Key>()),\n    [props.disabledKeys]\n  );\n\n  const context = useCollectionCacheInvalidation(props);\n\n  let tree = useCollection<T, TreeCollection<T>>(\n    props,\n    useCallback(\n      (nodes) => new TreeCollection(nodes, { expandedKeys }),\n      [expandedKeys]\n    ),\n    context\n  );\n\n  const selectionManager = new TreeSelectionManager(\n    tree as Collection<Node<T>>,\n    selectionState\n  );\n\n  useTreeRef({ selectionManager, setExpandedKeys, tree }, treeRef);\n\n  // Reset focused key if that item is deleted from the collection.\n  useEffect(() => {\n    if (\n      selectionState.focusedKey != null &&\n      !tree.getItem(selectionState.focusedKey)\n    ) {\n      // @ts-expect-error imprecise typing in @react-stately/selection\n      selectionState.setFocusedKey(null);\n    }\n  }, [tree, selectionState.focusedKey]);\n\n  const toggleKey = (key: Key) => {\n    let newExpandedKeys = toggleTreeNode(\n      tree as Collection<Node<T>>,\n      expandedKeys,\n      key\n    );\n    if (childExpansionBehaviour === \"single\") {\n      const expandedSiblings = getSiblings(tree, key).filter(\n        (aKey) => aKey !== key && expandedKeys.has(aKey)\n      );\n      newExpandedKeys = expandedSiblings.reduce((expandedKeys, expandedKey) => {\n        return toggleTreeNode(\n          tree as Collection<Node<T>>,\n          expandedKeys,\n          expandedKey\n        );\n      }, newExpandedKeys);\n    }\n    setExpandedKeys(newExpandedKeys);\n  };\n\n  return {\n    collection: tree as Collection<Node<T>>,\n    expandedKeys,\n    disabledKeys,\n    toggleKey,\n    selectionManager,\n    setExpandedKeys,\n  };\n}\n\nfunction getChildItems<T>(node: Node<T>): Node<T>[] {\n  const childNodes = [...(node.childNodes || [])];\n  const childItems = childNodes.filter(({ type }) => type === \"item\");\n  const sectionItems = childNodes.filter(({ type }) => type === \"section\");\n\n  return childItems.concat(sectionItems.flatMap(getChildItems));\n}\n\nfunction getRootItemKeys(tree: TreeCollection<unknown>) {\n  return tree.rootKeys\n    .map((key) => tree.getItem(key))\n    .filter(notNull)\n    .flatMap(getChildItems)\n    .map(({ key }) => key);\n}\n/**\n * Returns the siblings of an item in tree, ignoring sections.\n * Disclaimer: The code is done quick and dirty and in a rush. Unpleasant code, good candidate for refactoring :D\n */\nfunction getSiblings(tree: TreeCollection<unknown>, key: Key): Key[] {\n  const parentKey = tree.getItem(key)?.parentKey;\n  if (!parentKey) {\n    return [...tree.rootKeys].concat(getRootItemKeys(tree));\n  }\n  let parent = parentKey ? tree.getItem(parentKey) : null;\n  if (parent?.type === \"item\") {\n    return getChildItems(parent).map(({ key }) => key);\n  }\n  const siblings: Key[] = [];\n  while (parent) {\n    siblings.push(...getChildItems(parent).map(({ key }) => key));\n    if (parent.type === \"section\") {\n      if (parent.parentKey) {\n        parent = tree.getItem(parent.parentKey);\n      } else {\n        siblings.push(...getRootItemKeys(tree));\n        parent = null;\n      }\n    } else {\n      parent = null;\n    }\n  }\n  return Array.from(new Set(siblings));\n}\nfunction toggleTreeNode(\n  tree: Collection<Node<unknown>>,\n  expandedKeys: Set<Key>,\n  key: Key\n): Set<Key> {\n  // toggling a non-expandable node should be no-op\n  if (!expandedKeys.has(key) && !tree.getItem(key)?.hasChildNodes) {\n    return expandedKeys;\n  }\n  const newKeys = toggleKey(expandedKeys, key);\n  // In Intellij impl, when a node is collapsed, all descendants are also collapsed. In other words, keys that are\n  // not a part of the list of visible nodes, will be excluded from the expanded keys, with the toggle action.\n  for (const aKey of newKeys) {\n    if (tree.getItem(aKey) == null) {\n      newKeys.delete(aKey);\n    }\n  }\n\n  // If we are toggling it open, expand all expandable single-child items\n  if (newKeys.has(key)) {\n    for (const aKey of getSingleChildrenKeys(tree.getItem(key))) {\n      newKeys.add(aKey);\n    }\n  }\n  return newKeys;\n}\n\nfunction toggleKey(set: Set<Key>, key: Key): Set<Key> {\n  let res = new Set(set);\n  if (res.has(key)) {\n    res.delete(key);\n  } else {\n    res.add(key);\n  }\n\n  return res;\n}\n","import { ForwardedRef, Key, useImperativeHandle } from \"react\";\nimport { useLatest } from \"@intellij-platform/core/utils/useLatest\";\nimport { TreeSelectionManager } from \"./TreeSelectionManager\";\nimport { TreeCollection } from \"./useTreeState\";\n\nexport interface TreeRefValue {\n  focus(key: Key): void;\n  replaceSelection(key: Key): void;\n\n  /**\n   * Extends selection to all siblings of the currently focused node.\n   */\n  expandSelection(): void;\n  /**\n   * Shrinks selection towards currently focused node.\n   */\n  shrinkSelection(): void;\n\n  expandAll(): void;\n  collapseAll(): void;\n}\n\n/**\n * Sets up a tree ref for imperatively working with tree from outside. For imperatively focusing, expanding to\n * specific key, etc.\n */\nexport function useTreeRef<T extends {}>(\n  props: {\n    tree: TreeCollection<T>;\n    selectionManager: TreeSelectionManager;\n    setExpandedKeys: (keys: Set<Key>) => void;\n  },\n  forwardedRef?: ForwardedRef<TreeRefValue>\n) {\n  const latestState = useLatest(props);\n\n  useImperativeHandle(\n    forwardedRef,\n    () => {\n      return {\n        replaceSelection: (key: Key) => {\n          latestState.current.selectionManager.replaceSelection(key);\n        },\n        focus: (key: Key) => {\n          const selectionManager = latestState.current.selectionManager;\n          selectionManager.setFocused(true);\n          /**\n           * NOTE: we set focus key to null and set it to key again, to make sure scroll into view works even when\n           * the key is currently focused but not in view. It wouldn't be needed if there was an imperative handle\n           * for scrolling an item into view, but it's only implemented in way that is reactive to changes to the\n           * focused key. {@see useCollectionAutoScroll}\n           */\n          selectionManager.setFocusedKey(null);\n          setTimeout(() => {\n            selectionManager.setFocusedKey(key);\n          });\n        },\n        expandSelection() {\n          latestState.current.selectionManager.expandSelection();\n        },\n        shrinkSelection() {\n          latestState.current.selectionManager.shrinkSelection();\n        },\n        expandAll() {\n          latestState.current.setExpandedKeys(\n            latestState.current.tree.getAllExpandableKeys()\n          );\n        },\n        collapseAll() {\n          const { tree, setExpandedKeys, selectionManager } =\n            latestState.current;\n          const focusedKey = selectionManager.focusedKey;\n          setExpandedKeys(new Set());\n\n          // Find the root node that is a grandparent of focused node, and focus/select it.\n          // NOTE: this behaviour of updating selection when nodes are collapsed is something to be fixed in general,\n          // and then this custom logic here would be not necessary.\n          if (focusedKey && !tree.rootKeys.includes(focusedKey)) {\n            let item = tree.getItem(focusedKey);\n            while (item?.parentKey != null) {\n              item = tree.getItem(item.parentKey);\n            }\n            if (item) {\n              selectionManager.setFocusedKey(item.key);\n              if (selectionManager.isSelected(focusedKey)) {\n                selectionManager.select(item.key);\n              }\n            }\n          }\n        },\n      };\n    },\n    []\n  );\n}\n","import { HTMLAttributes, useMemo } from \"react\";\nimport { LayoutNode } from \"@react-stately/layout\";\nimport { Node } from \"@react-types/shared\";\nimport { TreeState } from \"@react-stately/tree\";\nimport { VirtualizerProps } from \"@react-aria/virtualizer\";\nimport { LayoutInfo, Rect, Size } from \"@react-stately/virtualizer\";\nimport { VariableWidthListLayout } from \"@intellij-platform/core/VariableWidthListLayout\";\nimport { notNull } from \"@intellij-platform/core/utils/array-utils\";\n\nclass FlattenedTreeLayout<T> extends VariableWidthListLayout<T> {\n  buildChild(node: Node<T>, x: number, y: number): LayoutNode {\n    const layoutNode = super.buildChild(node, x, y);\n    if (\n      node.parentKey &&\n      this.collection.getItem(node.parentKey)?.type === \"item\"\n    ) {\n      layoutNode.layoutInfo.parentKey = null;\n    }\n    return layoutNode;\n  }\n\n  doBuildCollection(): LayoutNode[] {\n    let y = this.padding;\n    let nodes = [];\n    /**\n     * The only difference here is that in tree, we need to use getKeys() to get the keys for a flattened list of items\n     * that are currently visible. With this difference only, things seem to work as expected, but sections are not\n     * tested, and not even sure if they would be applicable for Tree view.\n     * Diff compared to ListView#BuildCollection:\n     * -        for (let node of this.collection) {\n     * +        const visibleNodes = [...this.collection.getKeys()].map(key => this.collection.getItem(key));\n     * +        for (let node of visibleNodes) {\n     * This needs to be maintained with version upgrades, until TreeLayout is supported:\n     * https://github.com/adobe/react-spectrum/issues/2396\n     */\n    const visibleNodes = [...this.collection.getKeys()]\n      .map((key) => this.collection.getItem(key))\n      .filter(notNull);\n    for (let node of visibleNodes) {\n      let layoutNode = this.buildChild(node, 0, y);\n      y = layoutNode.layoutInfo.rect.maxY;\n      nodes.push(layoutNode);\n    }\n\n    if (this.isLoading) {\n      let rect = new Rect(\n        0,\n        y,\n        this.virtualizer.visibleRect.width,\n        this.loaderHeight ?? this.virtualizer.visibleRect.height\n      );\n      let loader = new LayoutInfo(\"loader\", \"loader\", rect);\n      this.layoutInfos.set(\"loader\", loader);\n      nodes.push({ layoutInfo: loader });\n      y = loader.rect.maxY;\n    }\n\n    if (nodes.length === 0) {\n      let rect = new Rect(\n        0,\n        y,\n        this.virtualizer.visibleRect.width,\n        this.placeholderHeight ?? this.virtualizer.visibleRect.height\n      );\n      let placeholder = new LayoutInfo(\"placeholder\", \"placeholder\", rect);\n      this.layoutInfos.set(\"placeholder\", placeholder);\n      nodes.push({ layoutInfo: placeholder });\n      y = placeholder.rect.maxY;\n    }\n\n    this.contentSize = new Size(\n      this.virtualizer.visibleRect.width,\n      y + this.padding\n    );\n    return nodes;\n  }\n\n  getVisibleLayoutInfos(rect: Rect): LayoutInfo[] {\n    return super\n      .getVisibleLayoutInfos(rect)\n      .filter((layoutInfo) => this.collection.getItem(layoutInfo.key) != null);\n  }\n}\n\nexport const useTreeVirtualizer = <T extends object>({\n  state,\n}: {\n  state: TreeState<T>;\n}): {\n  virtualizerProps: Omit<\n    VirtualizerProps<any, unknown>,\n    \"children\" | keyof HTMLAttributes<HTMLElement>\n  >;\n} => {\n  const layout = useMemo(\n    () =>\n      new FlattenedTreeLayout({\n        /**\n         * there is currently no documentation available for these fields, but setting `rowHeight` enforces it, which\n         * wouldn't be good for custom tree UI with a different row height.\n         * wrong estimatedRowHeight seems to only affect small scrollbar position inaccuracy, which is a minor issue\n         * and not even noticeable in most cases. Also, it seems it slightly improves the performance if it exactly\n         * matches the real row height. But not even sure.\n         */\n        estimatedRowHeight: 20,\n      }),\n    []\n  );\n  layout.collection = state.collection;\n  layout.disabledKeys = state.disabledKeys;\n\n  return {\n    virtualizerProps: {\n      focusedKey: state.selectionManager.focusedKey,\n      collection: state.collection,\n      layout,\n      // Not clear how this sizeToFit is supposed to work, due to lack of documentation, but don't be tempted to\n      // think it solves the problem VariableWidthListLayout is trying to solve, because it doesn't :D\n      // Also, note that setting this to \"width\" prevents re-layout when container width is increased, which\n      // causes issues.\n      sizeToFit: \"height\",\n      scrollToItem: (key) => {\n        return layout.virtualizer.scrollToItem(key, {\n          shouldScrollX: false,\n          duration: 0,\n        });\n      },\n      scrollDirection: \"both\",\n    },\n  };\n};\n","import React, { RefObject } from \"react\";\nimport {\n  ActionDefinition,\n  CommonActionId,\n} from \"@intellij-platform/core/ActionSystem\";\nimport { PlatformIcon } from \"@intellij-platform/core/Icon\";\nimport { TreeRefValue } from \"@intellij-platform/core/Tree\";\n\n/**\n * Returns action definitions object for common tree actions\n * TODO: add example in docs\n */\nexport function useTreeActions({\n  treeRef,\n}: {\n  treeRef: RefObject<TreeRefValue>;\n}): Array<ActionDefinition> {\n  return [\n    {\n      id: CommonActionId.EXPAND_ALL,\n      title: \"Expand All\",\n      icon: <PlatformIcon icon=\"actions/expandall\" />,\n      actionPerformed: () => {\n        treeRef.current?.expandAll();\n      },\n    },\n    {\n      id: CommonActionId.COLLAPSE_ALL,\n      title: \"Collapse All\",\n      icon: <PlatformIcon icon=\"actions/collapseall\" />,\n      actionPerformed: () => {\n        treeRef.current?.collapseAll();\n      },\n    },\n    {\n      id: CommonActionId.EXPAND_SELECTION,\n      title: \"Expand Selection\",\n      actionPerformed: () => {\n        treeRef.current?.expandSelection();\n      },\n    },\n    {\n      id: CommonActionId.SHRINK_SELECTION,\n      title: \"Shrink Selection\",\n      // TODO: disable if selection is only one item. Would need more data from treeRef. Maybe after treeRef is refactored\n      //  to implement/extend CollectionRef\n      actionPerformed: () => {\n        treeRef.current?.shrinkSelection();\n      },\n    },\n  ];\n}\n","import { Key } from \"react\";\n\ninterface SetState<T> {\n  items: Iterable<T>;\n\n  toggle(key: T): void;\n\n  add(...key: T[]): void;\n\n  delete(...key: T[]): void;\n}\n\nexport type SelectionState = \"NotSelected\" | \"Selected\" | \"PartiallySelected\";\n\nexport interface TreeModel<T, K = Key> {\n  rootNodes: ReadonlyArray<T>;\n  getChildren: (root: T) => ReadonlyArray<T> | /*for convenience*/ T | null;\n  getKey: (item: T) => K;\n}\n\nexport interface NestedSelectionState<T> {\n  getSelectionState: (item: T) => SelectionState;\n  toggle: (item: T) => void;\n}\n\nconst collectSelectableItems = <T>(\n  item: T,\n  getChildren: (item: T) => null | ReadonlyArray<T>\n) => {\n  const collectedItems: T[] = [];\n  collectSelectableItemsRecursive(item, getChildren, collectedItems);\n  return collectedItems;\n};\nconst collectSelectableItemsRecursive = <T>(\n  item: T,\n  getChildren: (item: T) => null | ReadonlyArray<T>,\n  collectedItems: T[] = []\n) => {\n  const children = getChildren(item);\n  if (children == null) {\n    collectedItems.push(item);\n  } else {\n    children.forEach((child) =>\n      collectSelectableItemsRecursive(child, getChildren, collectedItems)\n    );\n  }\n};\n\n// TODO: maybe change the interface to work with keys instead of items?\nexport class NestedSelection<T extends object, K = Key>\n  implements NestedSelectionState<T>\n{\n  cache = new WeakMap<T, SelectionState>();\n  constructor(private state: SetState<K>, private tree: TreeModel<T, K>) {\n    this.tree = tree;\n    this.state = state;\n  }\n\n  toggle(item: T) {\n    const children = this.tree.getChildren(item);\n    const key = this.tree.getKey(item);\n    const isSelectableNode = children == null;\n    if (isSelectableNode) {\n      this.state.toggle(key);\n    } else {\n      const state = this.getSelectionState(item);\n      const itemsInSubtree = collectSelectableItems(item, (item) =>\n        normalizeChildren(this.tree.getChildren(item))\n      ).map(this.tree.getKey);\n      if (state === \"Selected\") {\n        this.state.delete(...itemsInSubtree);\n      } else {\n        this.state.add(...itemsInSubtree);\n      }\n    }\n  }\n\n  getSelectionState(item: T): SelectionState {\n    // caching can be refactored into a nice little decorator like WeakMapCached which would be applicable on a method\n    // with a single object argument.\n    const cachedState = this.cache.get(item);\n    if (cachedState) {\n      return cachedState;\n    }\n    const children = normalizeChildren(this.tree.getChildren(item));\n    const key = this.tree.getKey(item);\n    const isSelectableNode = children == null;\n    let state: SelectionState;\n    if (isSelectableNode) {\n      state = [...this.state.items].includes(key) ? \"Selected\" : \"NotSelected\";\n    } else {\n      const allDescendantsStates = children.map((child) =>\n        this.getSelectionState(child)\n      );\n      if (allDescendantsStates.every((state) => state === \"NotSelected\")) {\n        state = \"NotSelected\";\n      } else {\n        state = allDescendantsStates.every((state) => state === \"Selected\")\n          ? \"Selected\"\n          : \"PartiallySelected\";\n      }\n    }\n    this.cache.set(item, state);\n    return state;\n  }\n}\n\nfunction normalizeChildren<T>(children: T | ReadonlyArray<T> | null) {\n  if (children) {\n    return ([] as ReadonlyArray<T>).concat(children);\n  }\n  return null;\n}\n","import React, { ForwardedRef } from \"react\";\nimport {\n  SpeedSearchTree,\n  SpeedSearchTreeProps,\n  TreeRefValue,\n} from \"@intellij-platform/core/Tree\";\nimport { NestedSelectionState } from \"./NestedSelection\";\n\n/**\n * Experimental wrapper component around SpeedSearchTree, which allows rendering {@link TreeNodeCheckbox} in nodes.\n *\n * See [design-decisions.md](../Tree/design-decisions.md) for more thoughts about how should different features\n * like this be supported.\n *\n * @alpha\n */\nexport const SpeedSearchTreeWithCheckboxes = React.forwardRef(\n  <T extends object>(\n    {\n      nestedSelection,\n      cacheInvalidation,\n      onNodeKeyDown,\n      ...props\n    }: SpeedSearchTreeProps<T> & {\n      nestedSelection: NestedSelectionState<T>;\n    },\n    ref: ForwardedRef<HTMLDivElement>\n  ): React.ReactElement => {\n    const otherInvalidators =\n      typeof cacheInvalidation === \"object\"\n        ? cacheInvalidation.invalidators\n        : [];\n    return (\n      <SpeedSearchTree\n        ref={ref}\n        {...props}\n        // instead of passing cacheInvalidation, a better approach could be to provide nestedSelection as context.\n        cacheInvalidation={{\n          invalidators: [nestedSelection, ...otherInvalidators],\n        }}\n        onNodeKeyDown={(event, item) => {\n          if (event.key === \" \" && item.value) {\n            nestedSelection.toggle(item.value);\n          }\n          onNodeKeyDown?.(event, item);\n        }}\n      />\n    );\n  }\n);\n","import React, { useContext } from \"react\";\nimport { Checkbox } from \"@intellij-platform/core/Checkbox\";\nimport { TreeContext } from \"@intellij-platform/core/Tree/TreeContext\";\nimport { SelectionState } from \"@intellij-platform/core/TreeCheckboxes/NestedSelection\";\nimport { ItemStateContext } from \"@intellij-platform/core/Collections\";\nimport styled from \"styled-components\";\n\nexport type TreeNodeCheckboxProps<T extends unknown> = {\n  selectionState?: SelectionState;\n  selectItemOnPress?: boolean;\n  onToggle: () => void;\n  // maybe a isDisabled prop to be merged with isDisabled from the item?\n};\n\nconst StyledCheckboxWrapper = styled.span`\n  margin-right: 0.125rem;\n  display: inline-flex;\n`;\n\n/**\n * Checkbox to be used with {@link SpeedSearchTreeWithCheckboxes}. `SpeedSearchTreeWithCheckboxes` doesn't add the\n * checkboxes by default to the nodes, which makes it more flexible in terms of which nodes should have checkbox, or\n * it's exact placement within the tree rows.\n *\n * TreeNodeCheckbox renders a Checkbox with a few extras:\n * - `aria-label` set based on the encompassing item's textValue\n * - `isSelected` and `isIndeterminate` set based on `selectionState`\n * - `isDisabled` is set based in disabled state of the item.\n * - The encompassing item will be selected upon press, if `selectItemOnPress` is `true` (default is `true`).\n * - Small styling adjustment achieved by a wrapper StyledListIconWrapper.\n *\n * @see SpeedSearchTreeWithCheckboxes\n * @see useNestedSelectionState\n *\n * NOTE: this component currently uses TreeContext, to get a hold of selectionManager. If a more abstract component\n * like CollectionCheckbox is needed in the future, we can refactor TreeContext also to something more abstract like\n * CollectionContext which is provided by all such components like List, Tree or Table.\n */\nexport const TreeNodeCheckbox = <T extends unknown>({\n  selectionState,\n  onToggle,\n  selectItemOnPress = true,\n}: TreeNodeCheckboxProps<T>) => {\n  const treeContext = useContext(TreeContext);\n  const itemContext = useContext(ItemStateContext);\n  if (!itemContext) {\n    throw new Error(\"TreeNodeCheckbox is rendered outside tree nodes.\");\n  }\n\n  return (\n    <StyledCheckboxWrapper>\n      <Checkbox\n        preventFocus\n        aria-label={`Select ${itemContext.node.textValue}`}\n        isSelected={selectionState === \"Selected\"}\n        isIndeterminate={selectionState === \"PartiallySelected\"}\n        isDisabled={itemContext.isDisabled}\n        onChange={() => {\n          onToggle();\n          // this if and the whole need for treeContext could be avoided if event.stopPropagation() was not hard coded\n          // in useToggle: https://github.com/adobe/react-spectrum/blob/0d007bca9417c4b7b86fafd5842871bf997bd4c0/packages/@react-aria/toggle/src/useToggle.ts#L46\n          // An improvement could be to replace Checkbox with CheckboxIcon, and simply handle press on it (potential TODO)\n          if (treeContext && itemContext && selectItemOnPress) {\n            treeContext.state.selectionManager.setFocusedKey(\n              itemContext.node.key\n            );\n            treeContext.state.selectionManager.setFocused(true);\n            treeContext.state.selectionManager.setSelectedKeys([\n              itemContext.node.key,\n            ]);\n          }\n        }}\n      />\n    </StyledCheckboxWrapper>\n  );\n};\n","import { Key, useMemo } from \"react\";\nimport { ControlledStateProps } from \"../type-utils\";\nimport { useLatest } from \"@intellij-platform/core/utils/useLatest\";\nimport { useControllableSet } from \"@intellij-platform/core/utils/useSet\";\nimport {\n  NestedSelection,\n  NestedSelectionState,\n  TreeModel,\n} from \"@intellij-platform/core/TreeCheckboxes/NestedSelection\";\n\n/**\n * A state management util for a selectable list of items with an arbitrary nested grouping. In other words,\n * it manages selection of leaves in a tree.\n *\n * tree is represented as a `getChildren` function that returns children for a given root. if null is passed it\n * returns the top level nodes.\n * Important Note: the tree structure that can be generated by calling `getChildren` function is supposed to be\n * **immutable**. in other words, any change in the tree, should result in a new array of top level items.\n */\n\nexport const useNestedSelectionState = <T extends object, K = Key>(\n  tree: TreeModel<T, K>,\n  {\n    selectedKeys: selectedKeysProp,\n    defaultSelectedKeys,\n    onSelectedKeysChange,\n  }: ControlledStateProps<{\n    selectedKeys: Set<K>;\n  }>\n): NestedSelectionState<T> => {\n  const [selectedKeys, selectedKeysSetter] = useControllableSet(\n    selectedKeysProp!, // bad typing in useControlledState\n    defaultSelectedKeys || new Set(),\n    onSelectedKeysChange! // bad typing in useControlledState\n  );\n  const treeRef = useLatest(tree);\n\n  return useMemo(\n    () =>\n      new NestedSelection<T, K>(\n        { items: selectedKeys, ...selectedKeysSetter },\n        treeRef.current\n      ),\n    [selectedKeys, tree.rootNodes]\n  );\n};\n","import {\n  LayoutNode,\n  ListLayout,\n  ListLayoutOptions,\n} from \"@react-stately/layout\";\nimport React, { Key } from \"react\";\nimport {\n  InvalidationContext,\n  LayoutInfo,\n  Rect,\n  Size,\n} from \"@react-stately/virtualizer\";\nimport { Node } from \"@react-types/shared\";\n\n/**\n * Extends `ListLayout` and allows items of the list to have width based on the content. `ListLayout` by default\n * sets width based on the virtualizer's visible rect. This means the overflow of list items will be clipped.\n * In `VariableWidthListLayout`, the width of the list depends on the content of the visible items.\n *\n * NOTE: At the time of writing this class, Virtualization in @react-aria and @react-stately don't have proper\n * documentation, and it wasn't clear if there could be better ways of letting list's width grow based on the content.\n * Also, this implementation currently lacks support for sections. `buildSection()` would most probably need to be\n * overridden like how `buildItem` is.\n */\nexport class VariableWidthListLayout<T> extends ListLayout<T> {\n  /**\n   * content width of items are stored here, if the content width is bigger than the Virtualizer's visible rect's width.\n   */\n  keyToWidth = new Map<Key, number>();\n  private visibleContentWidth: number = 0;\n  private dividerHeight: number = 2;\n\n  constructor(options: ListLayoutOptions<T> & { dividerHeight?: number }) {\n    super(options);\n    if (options.dividerHeight != undefined) {\n      this.dividerHeight = options.dividerHeight;\n    }\n  }\n\n  buildItem(node: Node<T>, x: number, y: number): LayoutNode {\n    const layoutNode = super.buildItem(node, x, y);\n    if (this.visibleContentWidth) {\n      layoutNode.layoutInfo.rect.width = this.visibleContentWidth;\n    }\n    return layoutNode;\n  }\n\n  buildNode(node: Node<T>, x: number, y: number): LayoutNode {\n    if (node.type === \"divider\") {\n      return this.buildDivider(node, x, y);\n    }\n    return super.buildNode(node, x, y);\n  }\n\n  buildDivider(node: Node<T>, x: number, y: number): LayoutNode {\n    let width = this.virtualizer.visibleRect.width;\n    let rectHeight = this.dividerHeight;\n\n    let rect = new Rect(x, y, width - x, rectHeight);\n    let layoutInfo = new LayoutInfo(node.type, node.key, rect);\n    layoutInfo.estimatedSize = false;\n    return {\n      layoutInfo,\n      // validRect: layoutInfo.rect,\n    };\n  }\n\n  /**\n   * Allows for overriding buildCollection in a sub-class\n   */\n  protected doBuildCollection() {\n    return super.buildCollection();\n  }\n\n  buildCollection(): LayoutNode[] {\n    this.visibleContentWidth = this.getVisibleContentWidth();\n    // in buildChild, if invalidateEverything is false and y is not changed, it will reuse the existing layoutInfo.\n    // which can be problematic, if it was created in a time when the visible content width was different.\n    // A more efficient approach (instead of rebuilding the whole collection), might be to set layout width to\n    // visibleContentWidth, in getVisibleLayoutInfos, if mutation is ok.\n    // UPDATE: using getFinalLayoutInfo seems to be a legitimate last minute way to mutate layout infos.\n    this.invalidateEverything =\n      this.contentSize?.width !== this.visibleContentWidth;\n    const layoutNodes = this.doBuildCollection();\n    this.contentSize.width = this.visibleContentWidth;\n    return layoutNodes;\n  }\n\n  shouldInvalidate(newRect: Rect, oldRect: Rect): boolean {\n    return (\n      super.shouldInvalidate(newRect, oldRect) ||\n      this.getVisibleContentWidth() !== this.visibleContentWidth\n    );\n  }\n\n  // Setting lastWidth doesn't seem to be important, but we set it based on the content anyway.\n  validate(invalidationContext: InvalidationContext<Node<T>, unknown>) {\n    super.validate(invalidationContext);\n    this.lastWidth = this.contentSize.width;\n  }\n\n  updateItemSize(key: React.Key, size: Size): boolean {\n    const changed = super.updateItemSize(key, size);\n    const layoutInfo = this.layoutInfos.get(key);\n    if (layoutInfo && size.width > this.contentSize.width) {\n      this.keyToWidth.set(key, size.width);\n      return true;\n    } else {\n      this.keyToWidth.delete(key);\n      return changed;\n    }\n  }\n\n  private getVisibleContentWidth() {\n    return Math.max(\n      this.virtualizer.visibleRect.width,\n      ...this.virtualizer.visibleViews.map((view) => {\n        const layoutInfo = view.layoutInfo;\n        const itemContentWidth =\n          layoutInfo && this.keyToWidth.get(layoutInfo.key);\n        if (\n          itemContentWidth &&\n          layoutInfo.rect.intersects(this.virtualizer.getVisibleRect())\n        ) {\n          return itemContentWidth;\n        }\n        return 0;\n      })\n    );\n  }\n}\n","export function isWordSeparator(c: string) {\n  return (\n    isWhitespace(c) || c == \"_\" || c == \"-\" || c == \":\" || c == \"+\" || c == \".\"\n  );\n}\n\nexport function isWhitespace(char: string): boolean {\n  return /^\\s*$/.test(char);\n}\n\nexport function isUpperCase(str: string) {\n  return str.toUpperCase() === str && str.toLowerCase() !== str;\n}\n","import { createRangesFromIndices, TextRange } from \"./TextRange\";\nimport {\n  isUpperCase,\n  isWhitespace,\n  isWordSeparator,\n} from \"./utils/string-utils\";\n\nfunction isMeaningfulChar(ch: string) {\n  return !isWordSeparator(ch) && !isWhitespace(ch);\n}\n\n// Simplified version of https://github.com/JetBrains/intellij-community/blob/master/platform/util/text-matching/src/com/intellij/psi/codeStyle/MinusculeMatcherImpl.java\nexport const minusculeMatch = (\n  input: string,\n  rawPattern: string\n): Array<TextRange> | null => {\n  const isStarts = input.split(\"\").map(isStart);\n  const pattern = rawPattern.split(\"\").filter(isMeaningfulChar).join(\"\");\n  const matches: Array<{ patternIndex: number; inputIndex: number }> = [];\n  let continuous = false;\n  let inputIndex = 0,\n    patternIndex = 0;\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if (matches.length === pattern.length) {\n      return createRangesFromIndices(matches.map(({ inputIndex: i }) => i));\n    }\n    if (inputIndex > input.length - 1) {\n      if (matches.length > 0) {\n        // TODO: the same character match can be popped out and in several times, if something\n        //  is popped out, it should never be added back again, since it's already examined without\n        //  a full match.\n        const lastMatch = matches.pop()!;\n        inputIndex = lastMatch.inputIndex + 1;\n        patternIndex = lastMatch.patternIndex;\n        continue;\n      }\n      break;\n    }\n    if (!isMeaningfulChar(input[inputIndex])) {\n      inputIndex++;\n      continue;\n    }\n    if (\n      pattern[patternIndex].toLowerCase() === input[inputIndex].toLowerCase() &&\n      (continuous || isStarts[inputIndex] || matches.length === 0)\n    ) {\n      matches.push({ patternIndex, inputIndex });\n      continuous = true;\n      patternIndex++;\n      inputIndex++;\n    } else {\n      continuous = false;\n      inputIndex++;\n    }\n  }\n  return null;\n};\n\nfunction isStart(char: string, index: number, chars: string[]): boolean {\n  const previousChar = chars[index - 1];\n  return (\n    index === 0 ||\n    (isWordSeparator(previousChar) && !isWordSeparator(char)) ||\n    (isUpperCase(char) && !isUpperCase(previousChar))\n  );\n}\n","import { useEffect } from \"react\";\nimport { useSelectableCollection as useAriaSelectableCollection } from \"@react-aria/selection\";\n\n/**\n * Wrapper around react-aria useSelectableCollection to fix pending issues or\n * add missing functionality.\n */\nexport const useSelectableCollection: typeof useAriaSelectableCollection = (\n  options\n) => {\n  const {\n    collectionProps: { onKeyDown, ...collectionProps },\n  } = useAriaSelectableCollection(options);\n  useEffect(() => {\n    // Fixing https://github.com/adobe/react-spectrum/issues/4391\n    const { selectionManager, autoFocus, selectOnFocus } = options;\n    if (\n      selectOnFocus &&\n      (autoFocus === \"first\" || autoFocus === \"last\") &&\n      selectionManager.focusedKey != null\n    ) {\n      selectionManager.replaceSelection(selectionManager.focusedKey);\n    }\n\n    // Working around https://github.com/adobe/react-spectrum/issues/7512\n    // FIXME: remove the workaround the issue is closed\n    if (\n      selectionManager.firstSelectedKey &&\n      selectionManager.focusedKey == null\n    ) {\n      // initialize the focusedKey so that the buggy code that mutates selection\n      // onFocus doesn't get to run.\n      selectionManager.setFocusedKey(selectionManager.firstSelectedKey);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return {\n    collectionProps: {\n      ...collectionProps,\n      onKeyDown: (e) => {\n        // keydown events used to not be handled when alt key is pressed.\n        // it's changed in https://github.com/adobe/react-spectrum/commit/885b5e6b84253925b2ac9f7f2766417c63b654b5#diff-e356ae602508922357fd9cd1aa7896f74e24f87bcb2ee86a7bb4a486ea87a2f2R120\n        // handling keydown events when alt is down interferes with tree action shortcuts\n        // FIXME: make tree actions use capture phase to handle shortcuts so it takes precedence over\n        //  the default handlers regardless of what the shortcut is. Revert the patch here, after.\n        //  At the time of writing this, `useCapture` is only an option on ActionsProvider, but it\n        //  needs to be an option on each action, to allow for this use case.\n        if (!e.altKey) {\n          onKeyDown?.(e);\n        }\n      },\n    },\n  };\n};\n","import { useSelectableItem as useOriginalSelectableItem } from \"@react-aria/selection\";\nimport { MouseEventHandler } from \"react\";\nimport { mergeProps } from \"@react-aria/utils\";\n\n/**\n * A wrapper around useSelectableItem, which adjusts for intellij platform nuances:\n * - Selects item with right clicks as well, which allows ContextMenuContainer to be used with any collection component\n *   without the need for built-in context-menu support in such components. We won't need this if we move to a built-in\n *   context-menu support for List,Tree, etc.\n * @private\n */\nexport const useSelectableItem: typeof useOriginalSelectableItem = (\n  options\n) => {\n  const onContextMenu: MouseEventHandler<HTMLElement> = (e) => {\n    if (!options.selectionManager.isSelected(options.key)) {\n      options.selectionManager.select(options.key);\n    }\n  };\n  const result = useOriginalSelectableItem(options);\n  return {\n    ...result,\n    itemProps: mergeProps(result.itemProps, { onContextMenu }),\n  };\n};\n","/**\n * Drop shadow of windows and other overlays.\n * The current value is not accurate and needs to be revisited. It should also be os-dependant.\n * FIXME: On windows, there is only a border-like shadow. No drop shadow\n * FIXME: On Mac, there is a border-like shadow and a drop shadow. the border-like shadow is missing in the current value\n */\nexport const WINDOW_SHADOW = \"box-shadow: 0 5px 15px rgb(0 0 0 / 30%)\";\n","import * as styledComponents from \"styled-components\";\nimport { ThemedStyledComponentsModule } from \"styled-components\";\nimport { Theme } from \"./Theme\";\nimport { KnownThemePropertyPath } from \"./Theme/types\";\n\ntype JuiStyledComponentsModule = ThemedStyledComponentsModule<\n  Theme<KnownThemePropertyPath>\n>;\n\nexport const styled =\n  styledComponents.default as JuiStyledComponentsModule[\"default\"];\nexport const useTheme =\n  styledComponents.useTheme as JuiStyledComponentsModule[\"useTheme\"];\nexport const css = styledComponents.css as JuiStyledComponentsModule[\"css\"];\nexport const ThemeConsumer =\n  styledComponents.ThemeConsumer as JuiStyledComponentsModule[\"ThemeConsumer\"];\n","import {\n  FocusManager,\n  FocusScope as WrappedFocusScope,\n  FocusScopeProps,\n  useFocusManager,\n} from \"@react-aria/focus\";\nimport React, { ForwardedRef, useImperativeHandle, useRef } from \"react\";\n\nexport type FocusScopeRef = { focus: (forceFocusFirst?: boolean) => void };\n/**\n * A version of FocusScope which also allows for imperatively moving focus to the scope.\n * and has tiny patches/improvements\n * It's useful for\n */\nexport const FocusScope = React.forwardRef(function BetterFocusScope(\n  { children, ...otherProps }: FocusScopeProps,\n  ref: ForwardedRef<FocusScopeRef>\n) {\n  const directChildRef = useRef<HTMLSpanElement>(null);\n  const focusManagerRef = useRef<FocusManager>(null);\n  useImperativeHandle(\n    ref,\n    () => ({\n      focus: (forceFocusFirst?: boolean) => {\n        const focusManager = focusManagerRef.current;\n        const containerElement = directChildRef.current?.parentElement;\n        if (!focusManager) {\n          throw new Error(\"focus manager not found!\");\n        }\n        if (!containerElement) {\n          throw new Error(\"container element not found\");\n        }\n        if (forceFocusFirst) {\n          return focusManager.focusFirst();\n        }\n        const alreadyHasFocused =\n          document.activeElement &&\n          document.activeElement !== containerElement &&\n          containerElement.contains(document.activeElement);\n        if (!alreadyHasFocused) {\n          focusManager.focusNext({ tabbable: true });\n        }\n      },\n    }),\n    []\n  );\n\n  return (\n    <WrappedFocusScope {...otherProps}>\n      <GetFocusManager ref={focusManagerRef} />\n      <span data-focus-root-direct-child=\"\" hidden ref={directChildRef} />\n      {children}\n    </WrappedFocusScope>\n  );\n});\nconst GetFocusManager = React.forwardRef(function FocusScopeHandle(\n  props: {},\n  ref: ForwardedRef<FocusManager>\n) {\n  const focusManager = useFocusManager()!;\n  useImperativeHandle(ref, () => focusManager, [focusManager]);\n  return null;\n});\n","/**\n * Properly typed filter function for filtering out null/undefined items in array.\n */\nexport const notNull = <T>(\n  item: T | undefined | null\n): item is NonNullable<T> => item != null;\n","/**\n * IMPORTANT: this is a copy of a non-exported file from @react-aria/interactions\n */\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport { runAfterTransition } from \"@react-aria/utils\";\n\n// Safari on iOS starts selecting text on long press. The only way to avoid this, it seems,\n// is to add user-select: none to the entire page. Adding it to the pressable element prevents\n// that element from being selected, but nearby elements may still receive selection. We add\n// user-select: none on touch start, and remove it again on touch end to prevent this.\n// This must be implemented using global state to avoid race conditions between multiple elements.\n\n// There are three possible states due to the delay before removing user-select: none after\n// pointer up. The 'default' state always transitions to the 'disabled' state, which transitions\n// to 'restoring'. The 'restoring' state can either transition back to 'disabled' or 'default'.\ntype State = \"default\" | \"disabled\" | \"restoring\";\n\nlet state: State = \"default\";\nlet savedUserSelect = \"\";\n\nexport function disableTextSelection() {\n  if (state === \"default\") {\n    savedUserSelect = document.documentElement.style.webkitUserSelect;\n    document.documentElement.style.webkitUserSelect = \"none\";\n  }\n\n  state = \"disabled\";\n}\n\nexport function restoreTextSelection() {\n  // If the state is already default, there's nothing to do.\n  // If it is restoring, then there's no need to queue a second restore.\n  if (state !== \"disabled\") {\n    return;\n  }\n\n  state = \"restoring\";\n\n  // There appears to be a delay on iOS where selection still might occur\n  // after pointer up, so wait a bit before removing user-select.\n  setTimeout(() => {\n    // Wait for any CSS transitions to complete so we don't recompute style\n    // for the whole page in the middle of the animation and cause jank.\n    runAfterTransition(() => {\n      // Avoid race conditions\n      if (state === \"restoring\") {\n        if (document.documentElement.style.webkitUserSelect === \"none\") {\n          document.documentElement.style.webkitUserSelect =\n            savedUserSelect || \"\";\n        }\n\n        savedUserSelect = \"\";\n        state = \"default\";\n      }\n    });\n  }, 300);\n}\n","import React, { MouseEventHandler } from \"react\";\nimport { disableTextSelection, restoreTextSelection } from \"./textSelection\";\nimport { useLatest } from \"../useLatest\";\n\n/**\n * To be used with {@link UseMoveOptions#canMoveStart} to allow\n * the move to start only on whitespaces. Does that by checking if the\n * element is an HTMLElement with all children being Elements.\n * This logic almost always detects the whitespaces properly, because if mouse\n * was pressed on a piece of text, the event target would have been that element.\n */\nexport function isEventOnEmptySpaces({\n  target,\n  currentTarget,\n}: React.MouseEvent) {\n  return (\n    currentTarget === target ||\n    (target instanceof HTMLElement &&\n      [...target.childNodes].every((child) => child instanceof HTMLElement))\n  );\n}\n\nexport type XY = { x: number; y: number };\nexport type UseMoveOptions<S> = {\n  /**\n   * the amount of movement (in pixels) after which the move should start. It prevents interference\n   * with simple click (or more generally, press) events, and provides better UX.\n   * @default 0\n   */\n  dragThreshold?: number;\n  disabled?: boolean;\n  /**\n   * Whether the move should be initiated from a mouse down event.\n   * Note: regardless of the value of this option, the move won't start when interactive elements like buttons\n   * are being pressed.\n   * @see isEventOnEmptySpaces\n   * @example\n   * ```ts\n   * // Don't move when children are being dragged.\n   * useMove({ canMoveStart: e => e.target === e.currentTarget });\n   * ```\n   *\n   * @example\n   * ```ts\n   * // move when empty spaces are being dragged.\n   * useMove({ canMoveStart: isEventOnEmptySpaces });\n   * ```\n   */\n  canMoveStart?: (eventTarget: React.MouseEvent) => boolean;\n  onMoveStart: (args: { from: XY }) => S;\n  onMove: (args: { from: XY; to: XY; movement: XY; startState: S }) => void;\n  onMoveEnd?: (args: { startState: S }) => void;\n};\n\n// TODO: cleanup if unmount happens during drag.\n// TODO: Better even handling for touch devices?\n//  wrapping `useMove` from react-aria to just add support for movement threshold should be the\n//  way to go, but there are a few problems:\n//    - it seemed a little buggy in the example here: https://react-spectrum.adobe.com/react-aria/useMove.html\n//    - the API is not great in a sense that it only gives the diff in last movement.\n//      Also onMoveStart doesn't give the initial position, so it's not possible to even calculate\n//\n// TODO: move should be finished by pressing Escape. onMoveCancel maybe?\n/**\n * Similar to https://react-spectrum.adobe.com/react-aria/useMove.html, with slightly different\n * features and API.\n * NOTE: initially the API was designed in a way that onMove and onMove end callbacks were\n * returned from onMoveStart, instead of being directly passed in the options.\n * This would enable capturing the initial state of each move transaction, by defining whatever\n * variable in onMoveStart and closing over them by onMove and onMoveEnd.\n * The problem with this approach was that although you could capture the initial state of the\n * movement, by closure, any other variable in the outer scopes was also closed over, and you were\n * stuck with the values from the particular render in which the movement was started.\n * Of course, you could work around it by using refs, but it would be unintuitive.\n * So because of that issue, it's redesigned to have onMoveStart, onMove, and onMoveEnd all\n * directly passed as options, but you can return anything from `onMoveStart` which will be passed\n * to onMove and onMoveEnd as `startState`.\n */\nexport function useMove<S>({\n  dragThreshold = 0,\n  disabled,\n  onMoveStart,\n  onMove,\n  onMoveEnd,\n  canMoveStart = () => true,\n}: UseMoveOptions<S>): { onMouseDown?: MouseEventHandler } {\n  const handlersRef = useLatest({ onMove, onMoveEnd });\n\n  const onMouseDown = (event: React.MouseEvent) => {\n    if (event.button !== 0 || !canMoveStart(event)) {\n      return;\n    }\n    disableTextSelection();\n    const from = { x: event.pageX, y: event.pageY };\n    let dragStarted = false;\n    let startState: S;\n\n    const onMouseMove = (event: MouseEvent) => {\n      const { pageX: x, pageY: y } = event;\n      const movement = { x: x - from.x, y: y - from.y };\n      const isDraggedEnough =\n        Math.abs(movement.x) >= dragThreshold ||\n        Math.abs(movement.y) >= dragThreshold;\n      if (isDraggedEnough && !dragStarted) {\n        dragStarted = true;\n        startState = onMoveStart({ from });\n      }\n      if (dragStarted) {\n        handlersRef.current.onMove({\n          from,\n          to: { x: from.x + movement.x, y: from.y + movement.y },\n          movement,\n          startState,\n        });\n      }\n    };\n    document.addEventListener(\"mousemove\", onMouseMove);\n\n    document.addEventListener(\n      \"mouseup\",\n      () => {\n        restoreTextSelection();\n        if (dragStarted) {\n          handlersRef.current.onMoveEnd?.({ startState });\n        }\n        document.removeEventListener(\"mousemove\", onMouseMove);\n      },\n      { once: true }\n    );\n  };\n  return disabled ? {} : { onMouseDown };\n}\n","import React from \"react\";\nimport { isMac } from \"@react-aria/utils\";\n\n/**\n * TODO: The current name is not accurate, and can be confusing. Rename to something better.\n */\nexport function isCtrlKeyPressed(\n  e: { metaKey: boolean; ctrlKey: boolean } | undefined\n) {\n  if (isMac()) {\n    return e?.metaKey;\n  }\n\n  return e?.ctrlKey;\n}\n\nexport function hasAnyModifier(e: KeyboardEvent | React.KeyboardEvent) {\n  return e.altKey || e.ctrlKey || e.metaKey || e.shiftKey;\n}\n","import { sortBy, uniqBy } from \"ramda\";\nimport { notNull } from \"@intellij-platform/core/utils/array-utils\";\n\nexport interface OverflowObserverRecord {\n  target: Element;\n  overflowedElements: Element[];\n  previouslyOverflowedElements: Element[];\n}\n\nexport type OverflowObserverCallback = (\n  change: OverflowObserverRecord,\n  observer: OverflowObserver\n) => void;\n\n/**\n * Allows observing the list of overflowing children of a given target element.\n * An `IntersectionObserver` is created for each target to observe the intersection between the target and each child\n * element. The child elements are observed/unobserved by the intersection observer as they are added/removed to the\n * DOM, which is observed using a `MutationObserver`.\n * `IntersectionObserver` options such as `rootMargin` are supported, to fine tune what should be considered as\n * overflowed.\n *\n * TODO: add a takeRecords method to allow processing pending mutations before disconnect\n * TODO: maybe add direction option?\n *\n */\nexport class OverflowObserver {\n  private mutationObserver: MutationObserver;\n  private data: Map<\n    Element,\n    {\n      intersectionObserver: IntersectionObserver;\n      currentOverflowElements: Element[];\n    }\n  > = new Map();\n\n  constructor(private callback: OverflowObserverCallback) {\n    this.mutationObserver = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        const target = mutation.target;\n        if (!(target instanceof Element)) {\n          return;\n        }\n        mutation.removedNodes.forEach((node) => {\n          if (node instanceof Element) {\n            this.data.get(target)?.intersectionObserver.unobserve(node);\n          }\n        });\n        mutation.addedNodes.forEach((node) => {\n          if (node instanceof Element) {\n            this.data.get(target)?.intersectionObserver.observe(node);\n          }\n        });\n      });\n    });\n  }\n\n  observe(target: Element, options: Omit<IntersectionObserverInit, \"root\">) {\n    this.data.get(target)?.intersectionObserver.disconnect();\n\n    const intersectionObserver = new IntersectionObserver(\n      (entries) => {\n        const data = this.data.get(target);\n        const sortedEntries = sortBy((entry) => -entry.time, entries);\n        const validEntries = uniqBy((entry) => entry.target, sortedEntries);\n\n        const newHiddenElements = validEntries\n          .map((entry) =>\n            !entry.isIntersecting && entry.target instanceof Element\n              ? entry.target\n              : undefined\n          )\n          .filter(notNull);\n        const newVisibleElements = validEntries\n          .map((entry) =>\n            entry.isIntersecting && entry.target instanceof Element\n              ? entry.target\n              : null\n          )\n          .filter(notNull);\n\n        //  Also cover this in Toolbar with a test case\n        const previouslyOverflowedElements =\n          data?.currentOverflowElements || [];\n        const overflowedElements = previouslyOverflowedElements\n          .filter((element) => !newVisibleElements.includes(element))\n          .concat(newHiddenElements)\n          .filter((element) => {\n            // In some cases some elements may be hidden by some styles (e.g. the first/last separator in a toolbar).\n            // It doesn't make sense to report them as overflowed.\n            const isHidden =\n              element instanceof HTMLElement &&\n              element.offsetWidth === 0 &&\n              element.offsetHeight === 0;\n            return !isHidden;\n          });\n        this.callback(\n          {\n            previouslyOverflowedElements,\n            overflowedElements: overflowedElements,\n            target,\n          },\n          this\n        );\n        if (data) {\n          data.currentOverflowElements = overflowedElements;\n        }\n      },\n      {\n        ...options,\n        root: target,\n      }\n    );\n    [...(target?.children || [])].forEach((childElement) => {\n      intersectionObserver.observe(childElement);\n    });\n    this.data.set(target, {\n      intersectionObserver,\n      currentOverflowElements: [],\n    });\n    this.mutationObserver.observe(target, {\n      childList: true,\n    });\n  }\n\n  unobserve(target: Element) {\n    this.data.get(target)?.intersectionObserver.disconnect();\n  }\n\n  disconnect() {\n    [...this.data.values()].forEach(({ intersectionObserver }) =>\n      intersectionObserver.disconnect()\n    );\n    this.data = new Map();\n    this.mutationObserver.disconnect();\n  }\n}\n","import { RefObject, useEffect, useState } from \"react\";\nimport { OverflowObserver } from \"@intellij-platform/core/utils/overflow-utils/OverflowObserver\";\n\n/**\n * Given a ref to a scrollable container, returns the child elements that are not completely visible and\n * are off view because of scroll.\n * @param scrollableContainerRef\n * @param threshold\n */\nexport function useOverflowObserver(\n  scrollableContainerRef: RefObject<HTMLElement>,\n  {\n    threshold = 0.9,\n    rootMargin = \"0px\",\n  }: Omit<IntersectionObserverInit, \"root\"> = {}\n) {\n  const [overflowedElements, setOverflowedElements] = useState<Element[]>([]);\n\n  useEffect(() => {\n    const overflowObserver = new OverflowObserver((change) => {\n      setOverflowedElements(change.overflowedElements);\n    });\n    overflowObserver.observe(scrollableContainerRef.current!, {\n      rootMargin,\n      threshold,\n    });\n    return () => {\n      overflowObserver.disconnect();\n    };\n  }, [\n    /**\n     * It's ok and needed to have the ref value as a dependency here. We don't know if ref is attached to different\n     * elements in each render, and it's ok that it's not a state, since we don't change it, and it's not supposed to\n     * change without a rerender\n     **/\n    scrollableContainerRef.current,\n  ]);\n\n  return {\n    overflowedElements,\n  };\n}\n","import { Key } from \"react\";\nimport { Ord } from \"ramda\";\n\ntype TreeNodeFn<T> = (root: T) => null | readonly T[];\ntype MutableTreeNodeFn<T> = (root: T) => null | T[];\n\ntype Tree<T> = {\n  getChildren: TreeNodeFn<T>;\n  roots: ReadonlyArray<T>;\n};\n\ntype MutableTree<T> = {\n  getChildren: MutableTreeNodeFn<T>;\n  roots: Array<T>;\n};\n\nexport const getExpandAllKeys = <T>(\n  /**\n   * represents a tree as a function. Given a node, it should return the array of children or null, if the node is a\n   * leaf. Note that even an empty array will make the node to be considered a non-leaf node and the key is included.\n   * if null is passed, the root(s) node(s) should be returned.\n   */\n  getChildren: TreeNodeFn<T>,\n  /**\n   * a function that converts each node into a key\n   */\n  getKey: (t: T) => Key,\n  roots: ReadonlyArray<T>\n) => {\n  const keys: Key[] = roots.map(getKey);\n  const processItem = (node: T | null) => {\n    const children = node ? getChildren(node) : null;\n    if (node == null || !children) {\n      return;\n    }\n    keys.push(getKey(node));\n    children.forEach(processItem);\n  };\n  roots.map(getChildren).flat().forEach(processItem);\n  return keys;\n};\n\nexport const getExpandedToNodesKeys = <T>(\n  /**\n   * represents a tree as a function. Given a node, it should return the array of children or null, if the node is a\n   * leaf. Note that even an empty array will make the node to be considered a non-leaf node and the key is included.\n   * if null is passed, the root(s) node(s) should be returned.\n   */\n  getChildren: TreeNodeFn<T>,\n  /**\n   * a function that converts each node into a key\n   */\n  getKey: (t: T) => Key,\n  roots: ReadonlyArray<T>,\n  targetNodeKeys: Iterable<Key>\n) => {\n  const targetNodeKeySet = new Set(targetNodeKeys);\n  const expandedKeys: Key[] = [];\n  dfsVisit<T, boolean>(\n    getChildren,\n    (node, childValues) => {\n      const key = getKey(node);\n      const isExpanded: boolean =\n        childValues?.some((childValue) => childValue) ||\n        targetNodeKeySet.has(key);\n      if (isExpanded) {\n        expandedKeys.push(key);\n      }\n      return isExpanded;\n    },\n    roots\n  );\n  return expandedKeys;\n};\n\nexport const dfsVisit = <T, R>(\n  getChildren: TreeNodeFn<T>,\n  visit: (node: T, childrenValues: null | R[]) => R,\n  roots: ReadonlyArray<T>\n) => {\n  const dfs = (node: T): R => {\n    const children = getChildren(node);\n    const values = children?.map(dfs) ?? null;\n    return visit(node, values);\n  };\n  roots.forEach(dfs);\n};\n\nexport const bfsVisit = <T, R>(\n  getChildren: TreeNodeFn<T>,\n  visit: (node: T, parentValue: R | null) => R,\n  roots: ReadonlyArray<T>\n) => {\n  const bfs: typeof visit = (node, parentValue) => {\n    const result = visit(node, parentValue);\n    const children = getChildren(node);\n    children?.map((childNode) => bfs(childNode, result));\n    return result;\n  };\n  return roots.map((root) => bfs(root, null));\n};\n\nexport const sortTreeNodesInPlace = <T>(\n  by: (t: T) => Ord,\n  tree: MutableTree<T>\n) => {\n  const compareFn = (a: T, b: T) => {\n    const aa = by(a);\n    const bb = by(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  };\n  tree.roots.sort(compareFn);\n  bfsVisit(\n    tree.getChildren,\n    (node) => {\n      const children = tree.getChildren(node);\n      if (children) {\n        children.sort(compareFn);\n      }\n    },\n    tree.roots\n  );\n};\n","import React, { useContext } from \"react\";\n\nexport const useContextOrThrow = <ContextType extends unknown>(\n  Context: React.Context<ContextType | null>,\n  nullErrorMessage: string\n) => {\n  const context = useContext<ContextType | null>(Context);\n\n  if (context == null) {\n    throw new Error(nullErrorMessage);\n  }\n\n  return context;\n};\n","import { useCallback, useLayoutEffect, useRef } from \"react\";\n\n/**\n * Interim solution for non-reactive callbacks, until\n * [useEvent](https://github.com/reactjs/rfcs/blob/useevent/text/0000-useevent.md) (or whatever it will end up being\n * called), becomes available.\n */\nexport function useEventCallback<T extends (...args: any[]) => any>(fn: T): T {\n  let ref = useRef<typeof fn>();\n  useLayoutEffect(() => {\n    ref.current = fn;\n  });\n  const callback = ((...args: Parameters<T>) =>\n    ref.current?.apply(null, args)) as T;\n  return useCallback<T>(callback, []);\n}\n","import { FocusEventHandler } from \"react\";\nimport { getFocusableTreeWalker } from \"@react-aria/focus\";\n\n/**\n * Provides a focus management mechanism for a container that doesn't retain focus but forwards it to its focusable\n * descendants. More specifically:\n * - When the container gets focused, it automatically focuses the first focusable child element.\n *   The {@param forwardFocus} parameter can be used to customize which element should receive focus.\n * - By default, focus is prevented from returning to the container itself when focus is being moved from a descendant\n *   to the container. {@param ignoreFocusedDescendant} can be set to `true`, to disable this behaviour.\n *   If {@param ignoreFocusedDescendant} is true, focus will be forcibly moved to the first element (or the element\n *   specified by {@param forwardFocus}) when the container gets focused.\n *\n * NOTE: This hook does not make the container element focusable. It only returns the focus event handler that should be\n * passed to the container.\n */\nexport function useFocusForwarder({\n  forwardFocus,\n  ignoreFocusedDescendant = false,\n}: {\n  /**\n   * Called when the container gets focused, to forward focus to the appropriate focusable child element.\n   * If not passed, focus is forwarded to the first focusable element, by default.\n   */\n  forwardFocus?: () => void;\n  ignoreFocusedDescendant?: boolean;\n} = {}) {\n  const onFocus: FocusEventHandler = (event) => {\n    if (event.target !== event.currentTarget) {\n      // only when this container is focused. not when anything inside is focused.\n      return;\n    }\n    const possiblyBlurredElement = event.relatedTarget;\n    if (\n      possiblyBlurredElement instanceof Element &&\n      event.currentTarget?.contains(possiblyBlurredElement) &&\n      !ignoreFocusedDescendant\n    ) {\n      // If anything inside the content is being blurred while the container is getting focused, we don't let focus\n      // go from that element, to the container.\n      if (possiblyBlurredElement instanceof HTMLElement) {\n        possiblyBlurredElement.focus();\n      }\n      return;\n    }\n    if (forwardFocus) {\n      forwardFocus();\n    } else {\n      (\n        getFocusableTreeWalker(event.currentTarget).firstChild() as HTMLElement\n      )?.focus();\n    }\n  };\n  return { focusForwarderProps: { onFocus } };\n}\n","import { useLayoutEffect, useRef } from \"react\";\n\nexport function useLatest<T>(value: T) {\n  const ref = useRef(value);\n  useLayoutEffect(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n","import { useEffect, useRef } from \"react\";\n\nexport function usePrevious<T>(value: T): T {\n  const ref = useRef(value);\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n","export class ImmutableSet<T> implements ReadonlySet<T> {\n  readonly size: number;\n  private readonly set: ReadonlySet<T>;\n\n  constructor(values: Iterable<T>) {\n    this.set = new Set(values);\n    this.size = this.set.size;\n  }\n\n  add(...items: T[]): ImmutableSet<T> {\n    return this.setValueWithMutation((newValue) => {\n      items.forEach((item) => {\n        newValue.add(item);\n      });\n    });\n  }\n\n  delete(...items: T[]): ImmutableSet<T> {\n    return this.setValueWithMutation((newValue) => {\n      items.forEach((item) => {\n        newValue.delete(item);\n      });\n    });\n  }\n\n  toggle(...items: T[]): ImmutableSet<T> {\n    return this.setValueWithMutation((newValue) => {\n      items.forEach((item) => {\n        if (!newValue.delete(item)) {\n          newValue.add(item);\n        }\n      });\n    });\n  }\n\n  clear(): ImmutableSet<T> {\n    return this.setValueWithMutation((newValue) => {\n      newValue.clear();\n    });\n  }\n\n  private setValueWithMutation(\n    mutate: (newValue: Set<T>) => void\n  ): ImmutableSet<T> {\n    const newValue = new Set(this.set);\n    mutate(newValue);\n    return new ImmutableSet(newValue);\n  }\n\n  ////////////////////////////////////////////////// delegated methods /////////////////////////////////////////////////\n  forEach(...args: Parameters<ReadonlySet<T>[\"forEach\"]>): void {\n    return this.set.forEach(...args);\n  }\n\n  has(value: T): boolean {\n    return this.set.has(value);\n  }\n\n  [Symbol.iterator](): IterableIterator<T> {\n    return this.set[Symbol.iterator]();\n  }\n\n  entries(): IterableIterator<[T, T]> {\n    return this.set.entries();\n  }\n\n  keys(): IterableIterator<T> {\n    return this.set.keys();\n  }\n\n  values(): IterableIterator<T> {\n    return this.set.values();\n  }\n}\n","import { useControlledState } from \"@react-stately/utils\";\nimport { useMemo } from \"react\";\nimport { ImmutableSet } from \"./immutableSet\";\n\n/**\n * Creates map interface out of a setter of form (currentValue: Map) => Map\n * Use {@link useControllableSet} instead if you need a Set state in a React component.\n * This is useful for use outside React components, such as state management libraries.\n */\nexport const createSetInterface = <T>(\n  set: (value: (prevState: Set<T>) => Set<T>) => void\n) => ({\n  add: (...values: T[]) =>\n    set(\n      (currentValue) => new Set(new ImmutableSet(currentValue).add(...values))\n    ),\n  delete: (...values: T[]) =>\n    set(\n      (currentValue) =>\n        new Set(new ImmutableSet(currentValue).delete(...values))\n    ),\n  clear: () =>\n    set((currentValue) => new Set(new ImmutableSet(currentValue).clear())),\n  toggle: (...values: T[]) =>\n    set(\n      (currentValue) =>\n        new Set(new ImmutableSet(currentValue).toggle(...values))\n    ),\n});\n\nfunction useStateSetterForSet<T>(\n  setValue: (value: (prevState: Set<T>) => Set<T>, ...args: any[]) => void\n) {\n  return useMemo(() => createSetInterface(setValue), [setValue]);\n}\n\n/**\n * controllable state management for a Set. returns a tuple containing the value and an object with Set functions on it,\n * which would update the state.\n */\nexport const useControllableSet = <T>(\n  valueProp: Set<T> | undefined,\n  defaultValue: Set<T> = new Set(),\n  onChange: ((newValue: Set<T>) => void) | undefined\n) => {\n  const [value, setValue] = useControlledState(\n    valueProp!, // bad typing in useControlledState\n    defaultValue,\n    onChange! // bad typing in useControlledState\n  );\n\n  // @ts-expect-error FIXME https://github.com/adobe/react-spectrum/issues/2320\n  return [value, useStateSetterForSet(setValue)] as const;\n};\n","import*as t from\"react\";function n(){return n=Object.assign?Object.assign.bind():function(t){for(var n=1;n<arguments.length;n++){var e=arguments[n];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])}return t},n.apply(this,arguments)}const e=[\"children\",\"options\"],r=[\"allowFullScreen\",\"allowTransparency\",\"autoComplete\",\"autoFocus\",\"autoPlay\",\"cellPadding\",\"cellSpacing\",\"charSet\",\"className\",\"classId\",\"colSpan\",\"contentEditable\",\"contextMenu\",\"crossOrigin\",\"encType\",\"formAction\",\"formEncType\",\"formMethod\",\"formNoValidate\",\"formTarget\",\"frameBorder\",\"hrefLang\",\"inputMode\",\"keyParams\",\"keyType\",\"marginHeight\",\"marginWidth\",\"maxLength\",\"mediaGroup\",\"minLength\",\"noValidate\",\"radioGroup\",\"readOnly\",\"rowSpan\",\"spellCheck\",\"srcDoc\",\"srcLang\",\"srcSet\",\"tabIndex\",\"useMap\"].reduce((t,n)=>(t[n.toLowerCase()]=n,t),{for:\"htmlFor\"}),o={amp:\"&\",apos:\"'\",gt:\">\",lt:\"<\",nbsp:\" \",quot:\"“\"},c=[\"style\",\"script\"],a=/([-A-Z0-9_:]+)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|(?:\\{((?:\\\\.|{[^}]*?}|[^}])*)\\})))?/gi,_=/mailto:/i,u=/\\n{2,}$/,i=/^( *>[^\\n]+(\\n[^\\n]+)*\\n*)+\\n{2,}/,s=/^ *> ?/gm,l=/^ {2,}\\n/,f=/^(?:( *[-*_])){3,} *(?:\\n *)+\\n/,d=/^\\s*(`{3,}|~{3,}) *(\\S+)?([^\\n]*?)?\\n([\\s\\S]+?)\\s*\\1 *(?:\\n *)*\\n?/,p=/^(?: {4}[^\\n]+\\n*)+(?:\\n *)+\\n?/,m=/^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,g=/^(?:\\n *)*\\n/,y=/\\r\\n?/g,h=/^\\[\\^([^\\]]+)](:.*)\\n/,k=/^\\[\\^([^\\]]+)]/,x=/\\f/g,b=/^\\s*?\\[(x|\\s)\\]/,$=/^ *(#{1,6}) *([^\\n]+?)(?: +#*)?(?:\\n *)*(?:\\n|$)/,v=/^ *(#{1,6}) +([^\\n]+?)(?: +#*)?(?:\\n *)*(?:\\n|$)/,S=/^([^\\n]+)\\n *(=|-){3,} *(?:\\n *)+\\n/,z=/^ *(?!<[a-z][^ >/]* ?\\/>)<([a-z][^ >/]*) ?([^>]*)\\/{0}>\\n?(\\s*(?:<\\1[^>]*?>[\\s\\S]*?<\\/\\1>|(?!<\\1)[\\s\\S])*?)<\\/\\1>\\n*/i,w=/&([a-z0-9]+|#[0-9]{1,6}|#x[0-9a-fA-F]{1,6});/gi,A=/^<!--[\\s\\S]*?(?:-->)/,E=/^(data|aria|x)-[a-z_][a-z\\d_.-]*$/,L=/^ *<([a-z][a-z0-9:]*)(?:\\s+((?:<.*?>|[^>])*))?\\/?>(?!<\\/\\1>)(\\s*\\n)?/i,M=/^\\{.*\\}$/,O=/^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,I=/^<([^ >]+@[^ >]+)>/,j=/^<([^ >]+:\\/[^ >]+)>/,B=/-([a-z])?/gi,R=/^(.*\\|?.*)\\n *(\\|? *[-:]+ *\\|[-| :]*)\\n((?:.*\\|.*\\n)*)\\n?/,T=/^\\[([^\\]]*)\\]:\\s+<?([^\\s>]+)>?\\s*(\"([^\"]*)\")?/,C=/^!\\[([^\\]]*)\\] ?\\[([^\\]]*)\\]/,D=/^\\[([^\\]]*)\\] ?\\[([^\\]]*)\\]/,F=/(\\[|\\])/g,N=/(\\n|^[-*]\\s|^#|^ {2,}|^-{2,}|^>\\s)/,P=/\\t/g,Z=/^ *\\| */,G=/(^ *\\||\\| *$)/g,H=/ *$/,q=/^ *:-+: *$/,U=/^ *:-+ *$/,V=/^ *-+: *$/,W=/^([*_])\\1((?:\\[.*?\\][([].*?[)\\]]|<.*?>(?:.*?<.*?>)?|`.*?`|~+.*?~+|.)*?)\\1\\1(?!\\1)/,Q=/^([*_])((?:\\[.*?\\][([].*?[)\\]]|<.*?>(?:.*?<.*?>)?|`.*?`|~+.*?~+|.)*?)\\1(?!\\1|\\w)/,X=/^==((?:\\[.*?\\]|<.*?>(?:.*?<.*?>)?|`.*?`|.)*?)==/,J=/^~~((?:\\[.*?\\]|<.*?>(?:.*?<.*?>)?|`.*?`|.)*?)~~/,K=/^\\\\([^0-9A-Za-z\\s])/,Y=/^[\\s\\S]+?(?=[^0-9A-Z\\s\\u00c0-\\uffff&#;.()'\"]|\\d+\\.|\\n\\n| {2,}\\n|\\w+:\\S|$)/i,tt=/^\\n+/,nt=/^([ \\t]*)/,et=/\\\\([^\\\\])/g,rt=/ *\\n+$/,ot=/(?:^|\\n)( *)$/,ct=\"(?:\\\\d+\\\\.)\",at=\"(?:[*+-])\";function _t(t){return\"( *)(\"+(1===t?ct:at)+\") +\"}const ut=_t(1),it=_t(2);function st(t){return new RegExp(\"^\"+(1===t?ut:it))}const lt=st(1),ft=st(2);function dt(t){return new RegExp(\"^\"+(1===t?ut:it)+\"[^\\\\n]*(?:\\\\n(?!\\\\1\"+(1===t?ct:at)+\" )[^\\\\n]*)*(\\\\n|$)\",\"gm\")}const pt=dt(1),mt=dt(2);function gt(t){const n=1===t?ct:at;return new RegExp(\"^( *)(\"+n+\") [\\\\s\\\\S]+?(?:\\\\n{2,}(?! )(?!\\\\1\"+n+\" (?!\"+n+\" ))\\\\n*|\\\\s*\\\\n*$)\")}const yt=gt(1),ht=gt(2);function kt(t,n){const e=1===n,r=e?yt:ht,o=e?pt:mt,c=e?lt:ft;return{t(t,n,e){const o=ot.exec(e);return o&&(n.o||!n._&&!n.u)?r.exec(t=o[1]+t):null},i:Ht.HIGH,l(t,n,r){const a=e?+t[2]:void 0,_=t[0].replace(u,\"\\n\").match(o);let i=!1;return{p:_.map(function(t,e){const o=c.exec(t)[0].length,a=new RegExp(\"^ {1,\"+o+\"}\",\"gm\"),u=t.replace(a,\"\").replace(c,\"\"),s=e===_.length-1,l=-1!==u.indexOf(\"\\n\\n\")||s&&i;i=l;const f=r._,d=r.o;let p;r.o=!0,l?(r._=!1,p=u.replace(rt,\"\\n\\n\")):(r._=!0,p=u.replace(rt,\"\"));const m=n(p,r);return r._=f,r.o=d,m}),m:e,g:a}},h:(n,e,r)=>t(n.m?\"ol\":\"ul\",{key:r.k,start:n.g},n.p.map(function(n,o){return t(\"li\",{key:o},e(n,r))}))}}const xt=/^\\[([^\\]]*)]\\( *((?:\\([^)]*\\)|[^() ])*) *\"?([^)\"]*)?\"?\\)/,bt=/^!\\[([^\\]]*)]\\( *((?:\\([^)]*\\)|[^() ])*) *\"?([^)\"]*)?\"?\\)/,$t=[i,d,p,$,S,v,A,R,pt,yt,mt,ht],vt=[...$t,/^[^\\n]+(?:  \\n|\\n{2,})/,z,L];function St(t){return t.replace(/[ÀÁÂÃÄÅàáâãäåæÆ]/g,\"a\").replace(/[çÇ]/g,\"c\").replace(/[ðÐ]/g,\"d\").replace(/[ÈÉÊËéèêë]/g,\"e\").replace(/[ÏïÎîÍíÌì]/g,\"i\").replace(/[Ññ]/g,\"n\").replace(/[øØœŒÕõÔôÓóÒò]/g,\"o\").replace(/[ÜüÛûÚúÙù]/g,\"u\").replace(/[ŸÿÝý]/g,\"y\").replace(/[^a-z0-9- ]/gi,\"\").replace(/ /gi,\"-\").toLowerCase()}function zt(t){return V.test(t)?\"right\":q.test(t)?\"center\":U.test(t)?\"left\":null}function wt(t,n,e){const r=e.$;e.$=!0;const o=n(t.trim(),e);e.$=r;let c=[[]];return o.forEach(function(t,n){\"tableSeparator\"===t.type?0!==n&&n!==o.length-1&&c.push([]):(\"text\"!==t.type||null!=o[n+1]&&\"tableSeparator\"!==o[n+1].type||(t.v=t.v.replace(H,\"\")),c[c.length-1].push(t))}),c}function At(t,n,e){e._=!0;const r=wt(t[1],n,e),o=t[2].replace(G,\"\").split(\"|\").map(zt),c=function(t,n,e){return t.trim().split(\"\\n\").map(function(t){return wt(t,n,e)})}(t[3],n,e);return e._=!1,{S:o,A:c,L:r,type:\"table\"}}function Et(t,n){return null==t.S[n]?{}:{textAlign:t.S[n]}}function Lt(t){return function(n,e){return e._?t.exec(n):null}}function Mt(t){return function(n,e){return e._||e.u?t.exec(n):null}}function Ot(t){return function(n,e){return e._||e.u?null:t.exec(n)}}function It(t){return function(n){return t.exec(n)}}function jt(t,n,e){if(n._||n.u)return null;if(e&&!e.endsWith(\"\\n\"))return null;let r=\"\";t.split(\"\\n\").every(t=>!$t.some(n=>n.test(t))&&(r+=t+\"\\n\",t.trim()));const o=r.trimEnd();return\"\"==o?null:[r,o]}function Bt(t){try{if(decodeURIComponent(t).replace(/[^A-Za-z0-9/:]/g,\"\").match(/^\\s*(javascript|vbscript|data(?!:image)):/i))return}catch(t){return null}return t}function Rt(t){return t.replace(et,\"$1\")}function Tt(t,n,e){const r=e._||!1,o=e.u||!1;e._=!0,e.u=!0;const c=t(n,e);return e._=r,e.u=o,c}function Ct(t,n,e){const r=e._||!1,o=e.u||!1;e._=!1,e.u=!0;const c=t(n,e);return e._=r,e.u=o,c}function Dt(t,n,e){return e._=!1,t(n,e)}const Ft=(t,n,e)=>({v:Tt(n,t[1],e)});function Nt(){return{}}function Pt(){return null}function Zt(...t){return t.filter(Boolean).join(\" \")}function Gt(t,n,e){let r=t;const o=n.split(\".\");for(;o.length&&(r=r[o[0]],void 0!==r);)o.shift();return r||e}var Ht;function qt(e,u={}){u.overrides=u.overrides||{},u.slugify=u.slugify||St,u.namedCodesToUnicode=u.namedCodesToUnicode?n({},o,u.namedCodesToUnicode):o;const G=u.createElement||t.createElement;function H(t,e,...r){const o=Gt(u.overrides,`${t}.props`,{});return G(function(t,n){const e=Gt(n,t);return e?\"function\"==typeof e||\"object\"==typeof e&&\"render\"in e?e:Gt(n,`${t}.component`,t):t}(t,u.overrides),n({},e,o,{className:Zt(null==e?void 0:e.className,o.className)||void 0}),...r)}function q(n){let e=!1;u.forceInline?e=!0:u.forceBlock||(e=!1===N.test(n));const r=ct(ot(e?n:`${n.trimEnd().replace(tt,\"\")}\\n\\n`,{_:e}));for(;\"string\"==typeof r[r.length-1]&&!r[r.length-1].trim();)r.pop();if(null===u.wrapper)return r;const o=u.wrapper||(e?\"span\":\"div\");let c;if(r.length>1||u.forceWrapper)c=r;else{if(1===r.length)return c=r[0],\"string\"==typeof c?H(\"span\",{key:\"outer\"},c):c;c=null}return t.createElement(o,{key:\"outer\"},c)}function U(n){const e=n.match(a);return e?e.reduce(function(n,e,o){const c=e.indexOf(\"=\");if(-1!==c){const a=function(t){return-1!==t.indexOf(\"-\")&&null===t.match(E)&&(t=t.replace(B,function(t,n){return n.toUpperCase()})),t}(e.slice(0,c)).trim(),_=function(t){const n=t[0];return('\"'===n||\"'\"===n)&&t.length>=2&&t[t.length-1]===n?t.slice(1,-1):t}(e.slice(c+1).trim()),u=r[a]||a,i=n[u]=function(t,n){return\"style\"===t?n.split(/;\\s?/).reduce(function(t,n){const e=n.slice(0,n.indexOf(\":\"));return t[e.replace(/(-[a-z])/g,t=>t[1].toUpperCase())]=n.slice(e.length+1).trim(),t},{}):\"href\"===t?Bt(n):(n.match(M)&&(n=n.slice(1,n.length-1)),\"true\"===n||\"false\"!==n&&n)}(a,_);\"string\"==typeof i&&(z.test(i)||L.test(i))&&(n[u]=t.cloneElement(q(i.trim()),{key:o}))}else\"style\"!==e&&(n[r[e]||e]=!0);return n},{}):null}const V=[],et={},rt={blockQuote:{t:Ot(i),i:Ht.HIGH,l:(t,n,e)=>({v:n(t[0].replace(s,\"\"),e)}),h:(t,n,e)=>H(\"blockquote\",{key:e.k},n(t.v,e))},breakLine:{t:It(l),i:Ht.HIGH,l:Nt,h:(t,n,e)=>H(\"br\",{key:e.k})},breakThematic:{t:Ot(f),i:Ht.HIGH,l:Nt,h:(t,n,e)=>H(\"hr\",{key:e.k})},codeBlock:{t:Ot(p),i:Ht.MAX,l:t=>({v:t[0].replace(/^ {4}/gm,\"\").replace(/\\n+$/,\"\"),M:void 0}),h:(t,e,r)=>H(\"pre\",{key:r.k},H(\"code\",n({},t.O,{className:t.M?`lang-${t.M}`:\"\"}),t.v))},codeFenced:{t:Ot(d),i:Ht.MAX,l:t=>({O:U(t[3]||\"\"),v:t[4],M:t[2]||void 0,type:\"codeBlock\"})},codeInline:{t:Mt(m),i:Ht.LOW,l:t=>({v:t[2]}),h:(t,n,e)=>H(\"code\",{key:e.k},t.v)},footnote:{t:Ot(h),i:Ht.MAX,l:t=>(V.push({I:t[2],j:t[1]}),{}),h:Pt},footnoteReference:{t:Lt(k),i:Ht.HIGH,l:t=>({v:t[1],B:`#${u.slugify(t[1])}`}),h:(t,n,e)=>H(\"a\",{key:e.k,href:Bt(t.B)},H(\"sup\",{key:e.k},t.v))},gfmTask:{t:Lt(b),i:Ht.HIGH,l:t=>({R:\"x\"===t[1].toLowerCase()}),h:(t,n,e)=>H(\"input\",{checked:t.R,key:e.k,readOnly:!0,type:\"checkbox\"})},heading:{t:Ot(u.enforceAtxHeadings?v:$),i:Ht.HIGH,l:(t,n,e)=>({v:Tt(n,t[2],e),T:u.slugify(t[2]),C:t[1].length}),h:(t,n,e)=>H(`h${t.C}`,{id:t.T,key:e.k},n(t.v,e))},headingSetext:{t:Ot(S),i:Ht.MAX,l:(t,n,e)=>({v:Tt(n,t[1],e),C:\"=\"===t[2]?1:2,type:\"heading\"})},htmlComment:{t:It(A),i:Ht.HIGH,l:()=>({}),h:Pt},image:{t:Mt(bt),i:Ht.HIGH,l:t=>({D:t[1],B:Rt(t[2]),F:t[3]}),h:(t,n,e)=>H(\"img\",{key:e.k,alt:t.D||void 0,title:t.F||void 0,src:Bt(t.B)})},link:{t:Lt(xt),i:Ht.LOW,l:(t,n,e)=>({v:Ct(n,t[1],e),B:Rt(t[2]),F:t[3]}),h:(t,n,e)=>H(\"a\",{key:e.k,href:Bt(t.B),title:t.F},n(t.v,e))},linkAngleBraceStyleDetector:{t:Lt(j),i:Ht.MAX,l:t=>({v:[{v:t[1],type:\"text\"}],B:t[1],type:\"link\"})},linkBareUrlDetector:{t:(t,n)=>n.N?null:Lt(O)(t,n),i:Ht.MAX,l:t=>({v:[{v:t[1],type:\"text\"}],B:t[1],F:void 0,type:\"link\"})},linkMailtoDetector:{t:Lt(I),i:Ht.MAX,l(t){let n=t[1],e=t[1];return _.test(e)||(e=\"mailto:\"+e),{v:[{v:n.replace(\"mailto:\",\"\"),type:\"text\"}],B:e,type:\"link\"}}},orderedList:kt(H,1),unorderedList:kt(H,2),newlineCoalescer:{t:Ot(g),i:Ht.LOW,l:Nt,h:()=>\"\\n\"},paragraph:{t:jt,i:Ht.LOW,l:Ft,h:(t,n,e)=>H(\"p\",{key:e.k},n(t.v,e))},ref:{t:Lt(T),i:Ht.MAX,l:t=>(et[t[1]]={B:t[2],F:t[4]},{}),h:Pt},refImage:{t:Mt(C),i:Ht.MAX,l:t=>({D:t[1]||void 0,P:t[2]}),h:(t,n,e)=>H(\"img\",{key:e.k,alt:t.D,src:Bt(et[t.P].B),title:et[t.P].F})},refLink:{t:Lt(D),i:Ht.MAX,l:(t,n,e)=>({v:n(t[1],e),Z:n(t[0].replace(F,\"\\\\$1\"),e),P:t[2]}),h:(t,n,e)=>et[t.P]?H(\"a\",{key:e.k,href:Bt(et[t.P].B),title:et[t.P].F},n(t.v,e)):H(\"span\",{key:e.k},n(t.Z,e))},table:{t:Ot(R),i:Ht.HIGH,l:At,h:(t,n,e)=>H(\"table\",{key:e.k},H(\"thead\",null,H(\"tr\",null,t.L.map(function(r,o){return H(\"th\",{key:o,style:Et(t,o)},n(r,e))}))),H(\"tbody\",null,t.A.map(function(r,o){return H(\"tr\",{key:o},r.map(function(r,o){return H(\"td\",{key:o,style:Et(t,o)},n(r,e))}))})))},tableSeparator:{t:function(t,n){return n.$?(n._=!0,Z.exec(t)):null},i:Ht.HIGH,l:function(){return{type:\"tableSeparator\"}},h:()=>\" | \"},text:{t:It(Y),i:Ht.MIN,l:t=>({v:t[0].replace(w,(t,n)=>u.namedCodesToUnicode[n]?u.namedCodesToUnicode[n]:t)}),h:t=>t.v},textBolded:{t:Mt(W),i:Ht.MED,l:(t,n,e)=>({v:n(t[2],e)}),h:(t,n,e)=>H(\"strong\",{key:e.k},n(t.v,e))},textEmphasized:{t:Mt(Q),i:Ht.LOW,l:(t,n,e)=>({v:n(t[2],e)}),h:(t,n,e)=>H(\"em\",{key:e.k},n(t.v,e))},textEscaped:{t:Mt(K),i:Ht.HIGH,l:t=>({v:t[1],type:\"text\"})},textMarked:{t:Mt(X),i:Ht.LOW,l:Ft,h:(t,n,e)=>H(\"mark\",{key:e.k},n(t.v,e))},textStrikethroughed:{t:Mt(J),i:Ht.LOW,l:Ft,h:(t,n,e)=>H(\"del\",{key:e.k},n(t.v,e))}};!0!==u.disableParsingRawHTML&&(rt.htmlBlock={t:It(z),i:Ht.HIGH,l(t,n,e){const[,r]=t[3].match(nt),o=new RegExp(`^${r}`,\"gm\"),a=t[3].replace(o,\"\"),_=(u=a,vt.some(t=>t.test(u))?Dt:Tt);var u;const i=t[1].toLowerCase(),s=-1!==c.indexOf(i);e.N=e.N||\"a\"===i;const l=s?t[3]:_(n,a,e);return e.N=!1,{O:U(t[2]),v:l,G:s,H:s?i:t[1]}},h:(t,e,r)=>H(t.H,n({key:r.k},t.O),t.G?t.v:e(t.v,r))},rt.htmlSelfClosing={t:It(L),i:Ht.HIGH,l:t=>({O:U(t[2]||\"\"),H:t[1]}),h:(t,e,r)=>H(t.H,n({},t.O,{key:r.k}))});const ot=function(t){let n=Object.keys(t);function e(r,o){let c=[],a=\"\";for(;r;){let _=0;for(;_<n.length;){const u=n[_],i=t[u],s=i.t(r,o,a);if(s){const t=s[0];r=r.substring(t.length);const n=i.l(s,e,o);null==n.type&&(n.type=u),c.push(n),a=t;break}_++}}return c}return n.sort(function(n,e){let r=t[n].i,o=t[e].i;return r!==o?r-o:n<e?-1:1}),function(t,n){return e(function(t){return t.replace(y,\"\\n\").replace(x,\"\").replace(P,\"    \")}(t),n)}}(rt),ct=(at=function(t){return function(n,e,r){return t[n.type].h(n,e,r)}}(rt),function t(n,e={}){if(Array.isArray(n)){const r=e.k,o=[];let c=!1;for(let r=0;r<n.length;r++){e.k=r;const a=t(n[r],e),_=\"string\"==typeof a;_&&c?o[o.length-1]+=a:null!==a&&o.push(a),c=_}return e.k=r,o}return at(n,t,e)});var at;const _t=q(e);return V.length?H(\"div\",null,_t,H(\"footer\",{key:\"footer\"},V.map(function(t){return H(\"div\",{id:u.slugify(t.j),key:t.j},t.j,ct(ot(t.I,{_:!0})))}))):_t}!function(t){t[t.MAX=0]=\"MAX\",t[t.HIGH=1]=\"HIGH\",t[t.MED=2]=\"MED\",t[t.LOW=3]=\"LOW\",t[t.MIN=4]=\"MIN\"}(Ht||(Ht={}));export default n=>{let{children:r,options:o}=n,c=function(t,n){if(null==t)return{};var e,r,o={},c=Object.keys(t);for(r=0;r<c.length;r++)n.indexOf(e=c[r])>=0||(o[e]=t[e]);return o}(n,e);return t.cloneElement(qt(r,o),c)};export{qt as compiler};\n//# sourceMappingURL=index.modern.js.map\n","import React from \"react\";\nimport Markdown from \"markdown-to-jsx\";\n// @ts-expect-error ¯\\_(ツ)_/¯\nimport { DocgenInfo } from \"@storybook/addon-docs/dist/ts3.9/lib/docgen/types\";\nimport MDXComponents from \"@theme/MDXComponents\";\nimport { useAutoLinkedJsDoc } from \"./component-linking\";\n// import { ApiModel, ApiPackage } from \"@microsoft/api-extractor-model\";\n\n// const apiModel: ApiModel = new ApiModel();\n// language=file-reference\n// const apiPackage: ApiPackage = apiModel.loadPackage(\n//   \"../../../jui/temp/core.api.json\"\n// );\n// console.log(\"apiPackage\", ApiPackage);\n\ntype WithDocGenInfo<T = any> = T & {\n  __docgenInfo?: DocgenInfo;\n};\n/**\n * Renders description (aka Summary) of an exported symbol, from it's jsdoc (tsdoc) comment block.\n * The plan is to use the ApiModel created by @microsoft/api-extractor, but there are issues preventing that at the\n * moment. So we are using a fallback implementation which relies on `react-docgen` babel plugin which adds\n * `__docgetInfo` property to all exports.\n */\nexport const ApiDescription = ({\n  of,\n}: {\n  of:\n    | WithDocGenInfo\n    | {\n        render?: WithDocGenInfo /*for ref forwarding components */;\n      };\n}) => {\n  const docgenInfo = of.render?.__docgenInfo || of.__docgenInfo;\n  if (!docgenInfo?.description) {\n    console.log(\"ApiDescription not found for:\", of);\n    // eslint-disable-next-line no-undef\n    if (process.env.NODE_ENV === \"development\")\n      return (\n        <div style={{ background: \"#ffd7d7\" }}>\n          Could not find API description for:\n          <pre style={{ background: \"none\" }}>\n            {JSON.stringify(of, null, 2)}\n          </pre>\n          See the console.\n        </div>\n      );\n    throw new Error(\"API documentation not found.\");\n  }\n  return (\n    <Markdown options={{ overrides: MDXComponents }}>\n      {useAutoLinkedJsDoc(docgenInfo.description)}\n    </Markdown>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport useDocusaurusContext from \"@docusaurus/useDocusaurusContext\";\nimport { GlobalPluginData } from \"@docusaurus/plugin-content-docs/lib/client\";\nimport { parse } from \"jsdoc-parse-plus\";\nimport Link from \"@docusaurus/Link\";\n\nfunction useDocs() {\n  return (\n    useDocusaurusContext().globalData[\"docusaurus-plugin-content-docs\"]\n      .default as GlobalPluginData\n  ).versions.find((version) => version.name === \"current\")?.docs;\n}\n\n/**\n * Returns a mapping from component names to documentation pages. We don't have a proper API\n * Docs section now, so not all components have a corresponding page. But it's a middle ground solution\n * until a more structured API documentation page is added, and mdx files are limited to guides, introductions, etc.\n */\nexport function useComponentLinkMap(): { [componentName: string]: string } {\n  const docs = useDocs();\n  return useMemo(() => {\n    const linkMap: Record<string, string> = {};\n    docs?.forEach((doc) => {\n      // maybe change the criteria based on sidebar later, if components are moved to a dedicated sidebar\n      const componentName = doc.id.match(/components\\/(.*)/)?.[1];\n      if (componentName) {\n        linkMap[componentName] = doc.path;\n      }\n    });\n    return linkMap;\n  }, [docs]);\n}\n\n/**\n * A replacement for `code` elements in documentation, which renders a link\n * to the corresponding page, if the code snippet exactly matches one of\n * the components.\n */\nexport function InlineCode({ children }: { children: string }) {\n  const link = useComponentLinkMap()[children];\n  if (link) {\n    return <Link to={link}>{children}</Link>;\n  }\n  return <code>{children}</code>;\n}\n\n/**\n * Converts links in the form of \"{\\@link SomeComponent}\" to Markdown link\n * format (\"[SomeComponent](./path/to/component/page)\"), which otherwise will\n * not be rendered as a link, due to missing url.\n */\nexport function useAutoLinkedJsDoc(content: string) {\n  const componentLinkMap = useComponentLinkMap();\n  const comment = toCommentBlock(content);\n  return (\n    parse(comment, [], (link) => {\n      const path = componentLinkMap[link.url];\n      if (path) {\n        return `[${link.text}](${path})`;\n      }\n      return `\\`${link.text}\\``;\n    }).description as any\n  )?.value;\n}\n\nconst toCommentBlock = (str: string) =>\n  [\"/**\", ...str.split(\"\\n\").map((line) => `* ${line}`), \"*/\"].join(\"\\n\");\n","import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledSvg = styled.svg`\n  position: absolute;\n  width: 24px;\n  left: 50%;\n  bottom: 1rem;\n  transform: translate(-50%, 0) rotate(180deg);\n`;\n\nconst StyledExpandButton = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 50%;\n  bottom: 0;\n  background: linear-gradient(0deg, rgba(255, 255, 255, 1), transparent);\n  cursor: pointer;\n  ${StyledSvg} {\n    opacity: 0;\n    transition: opacity 0.3s;\n  }\n  &:hover ${StyledSvg} {\n    opacity: 1;\n  }\n`;\nconst StyledContainer = styled.div<{ expanded: boolean }>`\n  position: relative;\n  max-height: ${({ expanded }) => (expanded ? undefined : \"200px\")};\n`;\n\nexport function Expandable({\n  children,\n  expanded,\n  onExpand,\n  isExpandable,\n  setIsExpandable,\n}: {\n  children: React.ReactNode;\n  expanded: boolean;\n  onExpand: () => void;\n  isExpandable: boolean;\n  setIsExpandable: (isExpandable: boolean) => void;\n}) {\n  const ref = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (ref.current) {\n      const expandable = ref.current?.scrollHeight > ref.current?.offsetHeight;\n      if (expandable !== isExpandable) {\n        setIsExpandable(expandable);\n      }\n    }\n  });\n  return (\n    <StyledContainer ref={ref} expanded={expanded}>\n      {children}\n      {!expanded && isExpandable && (\n        <StyledExpandButton onClick={onExpand}>\n          <StyledSvg viewBox=\"0 0 50 50\">\n            <path\n              fill=\"none\"\n              stroke=\"#000\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M-20 10 0-10l20 20\"\n              transform=\"translate(25 25)\"\n            />\n          </StyledSvg>\n        </StyledExpandButton>\n      )}\n    </StyledContainer>\n  );\n}\n","/**\n * NOTE: this file is copied from Docusaurus repo, to customize the live code blocks UI, since the exported\n * functionality doesn't allow for the needed customizations.\n * Original file: https://github.com/facebook/docusaurus/blob/main/packages/docusaurus-theme-live-codeblock/src/theme/Playground/index.tsx\n */\n\nimport React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport useIsBrowser from \"@docusaurus/useIsBrowser\";\nimport { LiveEditor, LiveError, LivePreview, LiveProvider } from \"react-live\";\nimport Translate from \"@docusaurus/Translate\";\nimport BrowserOnly from \"@docusaurus/BrowserOnly\";\nimport {\n  ErrorBoundaryTryAgainButton,\n  usePrismTheme,\n} from \"@docusaurus/theme-common\";\nimport ErrorBoundary from \"@docusaurus/ErrorBoundary\";\n\nimport type { Props } from \"@theme/Playground\";\nimport type { Props as ErrorProps } from \"@theme/Error\";\n\nimport styles from \"@docusaurus/theme-live-codeblock/lib/theme/Playground/styles.module.css\";\nimport { Expandable } from \"./Expandable\";\nimport {\n  PlatformIcon,\n  IconButton,\n  ThemeProvider,\n  Theme,\n  ActionTooltip,\n  TooltipTrigger,\n} from \"@intellij-platform/core\";\nimport lightThemeJson from \"@intellij-platform/core/themes/intellijlaf.theme.json\";\n\nfunction Header({\n  children,\n  icons,\n}: {\n  children: React.ReactNode;\n  icons?: React.ReactNode;\n}) {\n  return (\n    <div className={clsx(styles.playgroundHeader)} style={{ display: \"flex\" }}>\n      <span style={{ flex: 1 }}>{children}</span>\n      {icons}\n    </div>\n  );\n}\n\nfunction LivePreviewLoader() {\n  // Is it worth improving/translating?\n  return <div>Loading...</div>;\n}\n\nfunction ErrorFallback({ error, tryAgain }: ErrorProps): JSX.Element {\n  return (\n    <div className={styles.errorFallback}>\n      <p>{error.message}</p>\n      <ErrorBoundaryTryAgainButton onClick={tryAgain} />\n    </div>\n  );\n}\n\nfunction Preview() {\n  // No SSR for the live preview\n  // See https://github.com/facebook/docusaurus/issues/5747\n  return (\n    <BrowserOnly fallback={<LivePreviewLoader />}>\n      {() => (\n        <>\n          <ErrorBoundary fallback={(params) => <ErrorFallback {...params} />}>\n            <LivePreview />\n          </ErrorBoundary>\n          <LiveError />\n        </>\n      )}\n    </BrowserOnly>\n  );\n}\n\nfunction ResultWithHeader() {\n  return (\n    <>\n      <Header>\n        <Translate\n          id=\"theme.Playground.result\"\n          description=\"The result label of the live codeblocks\"\n        >\n          Result\n        </Translate>\n      </Header>\n      {/* https://github.com/facebook/docusaurus/issues/5747 */}\n      <div className={styles.playgroundPreview}>\n        <Preview />\n      </div>\n    </>\n  );\n}\n\nfunction ThemedLiveEditor({\n  expanded,\n  isExpandable,\n  onExpand,\n  setIsExpandable,\n}: {\n  expanded: boolean;\n  isExpandable: boolean;\n  onExpand: () => void;\n  setIsExpandable: (expandable: boolean) => void;\n}) {\n  const isBrowser = useIsBrowser();\n  return (\n    <Expandable\n      expanded={expanded}\n      isExpandable={isExpandable}\n      onExpand={onExpand}\n      setIsExpandable={setIsExpandable}\n    >\n      <LiveEditor\n        // We force remount the editor on hydration,\n        // otherwise dark prism theme is not applied\n        key={String(isBrowser)}\n        className={styles.playgroundEditor}\n      />\n    </Expandable>\n  );\n}\n\nfunction EditorWithHeader() {\n  const [expanded, setExpanded] = useState(false);\n  const [expandable, setExpandable] = useState(false);\n  return (\n    <>\n      <Header\n        icons={\n          <ThemeProvider theme={new Theme(lightThemeJson as any)}>\n            {(expanded || expandable) && (\n              <TooltipTrigger\n                tooltip={\n                  <ActionTooltip\n                    actionName={expanded ? \"Collapse code\" : \"Expand code\"}\n                  />\n                }\n              >\n                <IconButton\n                  onPress={() => setExpanded((expanded) => !expanded)}\n                >\n                  <PlatformIcon\n                    icon={\n                      expanded ? \"actions/collapseall\" : \"actions/expandall\"\n                    }\n                  />\n                </IconButton>\n              </TooltipTrigger>\n            )}\n          </ThemeProvider>\n        }\n      >\n        <Translate\n          id=\"theme.Playground.liveEditor\"\n          description=\"The live editor label of the live codeblocks\"\n        >\n          Live Editor\n        </Translate>\n      </Header>\n      <ThemedLiveEditor\n        expanded={expanded}\n        onExpand={() => setExpanded(true)}\n        isExpandable={expandable}\n        setIsExpandable={setExpandable}\n      />\n    </>\n  );\n}\n\nexport default function Playground({\n  children,\n  transformCode,\n  ref,\n  ...props\n}: Props): JSX.Element {\n  const prismTheme = usePrismTheme();\n\n  const noInline = props.metastring?.includes(\"noInline\") ?? false;\n\n  return (\n    <>\n      <div ref={ref} className={styles.playgroundContainer}>\n        <LiveProvider\n          code={children.replace(/\\n$/, \"\")}\n          noInline={noInline}\n          transformCode={transformCode ?? ((code) => `${code};`)}\n          theme={prismTheme}\n          {...props}\n        >\n          <ResultWithHeader />\n          <EditorWithHeader />\n        </LiveProvider>\n      </div>\n    </>\n  );\n}\n","import { styled } from \"../styled\";\n\nexport const SpeedSearchContainer = styled.div`\n  position: relative;\n  overflow: visible;\n  max-height: 100%;\n`;\n","import styled from \"styled-components\";\nimport { SpeedSearchContainer } from \"../SpeedSearch/SpeedSearchContainer\";\n\nexport const CollectionSpeedSearchContainer = styled(SpeedSearchContainer)<{\n  fillAvailableSpace?: boolean;\n}>`\n  display: flex;\n  flex-direction: column;\n  flex: ${({ fillAvailableSpace }) => (fillAvailableSpace ? 1 : undefined)};\n`;\n","import { ListState } from \"@react-stately/list\";\nimport { SelectionManager } from \"@react-stately/selection\";\nimport { HTMLProps, Key, RefObject } from \"react\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { ListKeyboardDelegate } from \"@react-aria/selection\";\nimport {\n  CollectionSpeedSearchContextValue,\n  useCollectionSpeedSearch,\n} from \"@intellij-platform/core/CollectionSpeedSearch\";\nimport { SpeedSearchProps } from \"@intellij-platform/core/SpeedSearch\";\nimport { SpeedSearchPopupProps } from \"../../SpeedSearch/SpeedSearchPopup\";\nimport { TextRange } from \"../../TextRange\";\nimport { ListProps, useList } from \"../useList\";\n\ninterface UseListProps\n  extends Omit<ListProps, \"keyboardDelegate\" | \"disallowTypeAhead\">,\n    Pick<SpeedSearchProps, \"keepSearchActiveOnBlur\"> {}\n\nexport function useSpeedSearchList<T>(\n  props: UseListProps,\n  listState: ListState<T>,\n  ref: RefObject<HTMLElement>\n): ReturnType<typeof useList<T>> & {\n  searchPopupProps: SpeedSearchPopupProps;\n  focused: boolean;\n  selectionManager: SelectionManager;\n  speedSearchContextValue: CollectionSpeedSearchContextValue;\n  matches: Map<Key, TextRange[]>;\n} {\n  const { keepSearchActiveOnBlur } = props;\n\n  const {\n    speedSearch,\n    selectionManager,\n    keyboardDelegate,\n    containerProps: speedSearchContainerProps,\n    searchPopupProps,\n    speedSearchContextValue,\n  } = useCollectionSpeedSearch({\n    collection: listState.collection,\n    selectionManager: listState.selectionManager,\n    keyboardDelegate: new ListKeyboardDelegate(\n      listState.collection,\n      listState.disabledKeys,\n      ref\n    ),\n    keepSearchActiveOnBlur,\n    ref,\n  });\n  const { listProps, ...otherOutputs } = useList(\n    {\n      ...props,\n      disallowTypeAhead: true,\n      keyboardDelegate,\n    },\n    { ...listState, selectionManager },\n    ref\n  );\n\n  return {\n    ...otherOutputs,\n    listProps: mergeProps(listProps, speedSearchContainerProps),\n    matches: speedSearch.matches,\n    selectionManager,\n    speedSearchContextValue,\n    searchPopupProps,\n  };\n}\n","import React, { ForwardedRef } from \"react\";\nimport { AriaListBoxProps } from \"@react-types/listbox\";\nimport { filterDOMProps, useObjectRef } from \"@react-aria/utils\";\nimport { Virtualizer } from \"@react-aria/virtualizer\";\nimport { Node } from \"@react-types/shared\";\n\nimport {\n  CollectionSpeedSearchContainer,\n  CollectionSpeedSearchContext,\n  SpeedSearchItemHighlightsProvider,\n} from \"@intellij-platform/core/CollectionSpeedSearch\";\nimport {\n  SpeedSearch,\n  SpeedSearchPopup,\n  SpeedSearchProps,\n} from \"@intellij-platform/core/SpeedSearch\";\nimport { CollectionRefProps } from \"@intellij-platform/core/Collections/useCollectionRef\";\n\nimport { StyledList } from \"../StyledList\";\nimport { ListProps } from \"../List\";\nimport { useListState } from \"../useListState\";\nimport { ListItem } from \"../ListItem\";\nimport { ListContext } from \"../ListContext\";\nimport { useListVirtualizer } from \"../useListVirtualizer\";\nimport { useSpeedSearchList } from \"./useSpeedSearchList\";\n\nexport interface SpeedSearchListProps<T extends object>\n  extends ListProps<T>,\n    SpeedSearchProps {}\n\n/**\n * List component with {@link SpeedSearch}, which is a more advanced version of typeahead.\n */\nexport const SpeedSearchList = React.forwardRef(function SpeedSearchList<\n  T extends object\n>(\n  {\n    allowEmptySelection = false,\n    fillAvailableSpace = false,\n    estimatedItemHeight,\n    ...inputProps\n  }: SpeedSearchListProps<T>,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n) {\n  const props: AriaListBoxProps<T> & CollectionRefProps = {\n    ...inputProps,\n    disallowEmptySelection: !allowEmptySelection,\n  };\n  const ref = useObjectRef(forwardedRef);\n  const state = useListState(props);\n\n  const { listProps, listContext, searchPopupProps, speedSearchContextValue } =\n    useSpeedSearchList({ ...props, isVirtualized: true }, state, ref);\n\n  const {\n    virtualizerProps: { children: renderNode, ...virtualizerProps },\n  } = useListVirtualizer({\n    state,\n    estimatedItemHeight,\n    renderItem: (item) => (\n      <SpeedSearchItemHighlightsProvider itemKey={item.key}>\n        <ListItem key={item.key} item={item} />\n      </SpeedSearchItemHighlightsProvider>\n    ),\n  });\n\n  return (\n    <ListContext.Provider value={listContext}>\n      <CollectionSpeedSearchContainer fillAvailableSpace={fillAvailableSpace}>\n        <CollectionSpeedSearchContext.Provider value={speedSearchContextValue}>\n          <SpeedSearchPopup {...searchPopupProps} />\n          <StyledList\n            as={Virtualizer<Node<any>, any>}\n            ref={ref}\n            fillAvailableSpace={fillAvailableSpace}\n            {...filterDOMProps(props, { labelable: true })}\n            {...virtualizerProps}\n            {...listProps}\n          >\n            {renderNode}\n          </StyledList>\n        </CollectionSpeedSearchContext.Provider>\n      </CollectionSpeedSearchContainer>\n    </ListContext.Provider>\n  );\n});\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n/**\n * Green circle indicator used with icons.\n * Reference: platform/execution/src/com/intellij/execution/runners/IndicatorIcon.kt\n */\nexport const StyledIconLiveIndicator = styled.span`\n  position: absolute;\n  width: 4px;\n  height: 4px;\n  border-radius: 1000px;\n  background: #00ff00;\n  box-shadow: 0.5px 0.5px 1px 1px rgba(0, 0, 0, 0.4);\n  bottom: 1px;\n  right: 1px;\n`;\n","import { mergeProps, useObjectRef } from \"@react-aria/utils\";\nimport React, { ForwardedRef, HTMLProps } from \"react\";\nimport { SpeedSearchContainer } from \"./SpeedSearchContainer\";\nimport { SpeedSearchPopup } from \"./SpeedSearchPopup\";\nimport {\n  SpeedSearchStateProps,\n  useSpeedSearch,\n  useSpeedSearchState,\n} from \"./useSpeedSearch\";\n\ninterface Props extends SpeedSearchStateProps {\n  children: React.ReactNode;\n  keepSearchActiveOnBlur?: boolean;\n  match?: boolean;\n  className?: string;\n  containerProps?: Omit<HTMLProps<HTMLDivElement>, \"as\" | \"ref\">;\n}\n\n// Maybe no need for this component, now that almost everything is moved to hooks, and a couple of\n// styled components. Then useSpeedSearchState can also be moved to useSpeedSearch\nexport const SpeedSearch = React.forwardRef(function SpeedSearch(\n  {\n    children,\n    keepSearchActiveOnBlur = false,\n    className,\n    containerProps = {},\n    match,\n    ...otherProps\n  }: Props,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n) {\n  const ref = useObjectRef(forwardedRef);\n  const speedSearchState = useSpeedSearchState(otherProps);\n  const { containerProps: speedSearchContainerProps } = useSpeedSearch(\n    { keepSearchActiveOnBlur: keepSearchActiveOnBlur },\n    speedSearchState,\n    ref\n  );\n\n  return (\n    <SpeedSearchContainer\n      /* We might as well use useFocusable. The return type was troublesome in the first try. */\n      tabIndex={-1}\n      ref={ref}\n      {...mergeProps(containerProps, speedSearchContainerProps, { className })}\n    >\n      <SpeedSearchPopup active={speedSearchState.active} match={match}>\n        {speedSearchState.searchTerm}\n      </SpeedSearchPopup>\n      {children}\n    </SpeedSearchContainer>\n  );\n});\n","import React, { CSSProperties, ForwardedRef, RefObject } from \"react\";\nimport { Node } from \"@react-types/shared\";\nimport { Virtualizer } from \"@react-aria/virtualizer\";\nimport { StyledTree } from \"./StyledTree\";\nimport { TreeRefValue } from \"./useTreeRef\";\nimport { TreeNode } from \"./TreeNode\";\nimport { TreeContext } from \"./TreeContext\";\nimport { TreeProps as StatelyTreeProps, useTreeState } from \"./useTreeState\";\nimport { SelectableTreeProps, useSelectableTree } from \"./useSelectableTree\";\nimport { useTreeVirtualizer } from \"./useTreeVirtualizer\";\nimport { CollectionCacheInvalidationProps } from \"@intellij-platform/core/Collections/useCollectionCacheInvalidation\";\nimport { filterDOMProps, useObjectRef } from \"@react-aria/utils\";\n\nexport interface TreeProps<T extends object>\n  extends Omit<StatelyTreeProps<T>, \"disallowEmptySelection\">,\n    CollectionCacheInvalidationProps,\n    Omit<SelectableTreeProps<T>, \"keyboardDelegate\" | \"isVirtualized\"> {\n  fillAvailableSpace?: boolean;\n  /**\n   * When true, shows the tree in focused style, even when it's not focused. A common use case is when the tree\n   * is virtually focused. i.e. the focus is physically on some other element (like a search input) which handles\n   * keyboard events as if the tree was focused.\n   */\n  showAsFocused?: boolean;\n  treeRef?: RefObject<TreeRefValue>;\n\n  className?: string;\n  style?: CSSProperties;\n}\n\n/**\n * TODO:\n *  - Match select all behaviour. Currently, `getSelectAllKeys` in `SelectionManager` returns\n *   all nested keys too. But it's not aligned with Tree implementation in Intellij Platform. And\n *   beside from that, it seems to be a little inconsistent in some edge cases where you select all,\n *   and then deselect a node. Then all of a sudden, all collapsed nested keys are no longer selected.\n */\nexport const Tree = React.forwardRef(\n  <T extends object>(\n    {\n      fillAvailableSpace = false,\n      treeRef,\n      style,\n      className,\n      ...props\n    }: TreeProps<T>,\n    forwardedRef: ForwardedRef<HTMLDivElement>\n  ) => {\n    const state = useTreeState(props, treeRef);\n    const ref = useObjectRef(forwardedRef);\n\n    const { treeProps, treeContext } = useSelectableTree(\n      {\n        ...props,\n        isVirtualized: true,\n      },\n      state,\n      ref\n    );\n    const { virtualizerProps } = useTreeVirtualizer({ state });\n\n    return (\n      <TreeContext.Provider value={treeContext}>\n        <StyledTree\n          as={Virtualizer<Node<any>, unknown>}\n          ref={ref}\n          fillAvailableSpace={fillAvailableSpace}\n          {...virtualizerProps}\n          {...treeProps}\n          {...filterDOMProps(props, { labelable: true })}\n          style={style}\n          className={className}\n        >\n          {(itemType: string, item: Node<any>) => (\n            <TreeNode key={item.key} item={item as Node<T>} />\n          )}\n        </StyledTree>\n      </TreeContext.Provider>\n    );\n  }\n);\n","import React, { useRef } from \"react\";\nimport { AutoHoverPlatformIcon } from \"@intellij-platform/core/Icon\";\nimport { useProgressBarPauseIconButton } from \"./ProgressBar\";\n\ninterface ProgressBarPauseButtonProps {\n  /**\n   * Whether progress is paused.\n   */\n  paused: boolean;\n  /**\n   * Called when progress is paused or resumed.\n   * @param paused `true` when progress is being paused. `false` when resumed.\n   */\n  onPausedChange: (paused: boolean) => void | Promise<unknown>;\n\n  /**\n   * whether small icon should be used.\n   */\n  small?: boolean;\n}\n\n/**\n * Pause/Resume icon button for progress bar, to be used in {@link ProgressBarProps#button}.\n */\nexport const ProgressBarPauseButton = ({\n  paused,\n  onPausedChange,\n  small,\n}: ProgressBarPauseButtonProps) => {\n  const ref = useRef<HTMLSpanElement>(null);\n  const { buttonProps } = useProgressBarPauseIconButton(\n    {\n      onPress: () => onPausedChange(!paused),\n      hoverTooltip: paused ? \"Resume\" : \"Pause\",\n      paused,\n    },\n    ref\n  );\n  return (\n    <AutoHoverPlatformIcon\n      {...buttonProps}\n      icon={\n        paused\n          ? `process/progressResume${small ? \"Small\" : \"\"}.svg`\n          : `process/progressPause${small ? \"Small\" : \"\"}.svg`\n      }\n    />\n  );\n};\n","import React, { CSSProperties, ForwardedRef, forwardRef } from \"react\";\nimport { AriaSelectProps, useSelect } from \"@react-aria/select\";\nimport { useObjectRef } from \"@react-aria/utils\";\nimport { useSelectState } from \"@react-stately/select\";\nimport { styled } from \"@intellij-platform/core/styled\";\nimport { BareButton } from \"@intellij-platform/core/Button\";\nimport { Popover } from \"@intellij-platform/core/Overlay\";\nimport { ContextHelpProps, WithInlineContextHelp } from \"../Field/ContextHelp\";\nimport { StatelessListBox } from \"./StatelessListBox\";\nimport { StyledContainer } from \"./StyledContainer\";\nimport { LabelPlacement, WithLabel } from \"../Field/Label\";\nimport { StyledDropdownArrowIcon } from \"./StyledDropdownArrowIcon\";\n\nexport interface DropdownProps<T extends object>\n  extends Omit<AriaSelectProps<T>, \"validationState\">,\n    ContextHelpProps {\n  labelPlacement?: LabelPlacement;\n  className?: string;\n  style?: CSSProperties;\n  validationState?: \"valid\" | \"error\" | \"warning\";\n}\n\nconst StyledDropdownContainer = styled(StyledContainer)`\n  background: ${({ theme }) => theme.color(\"ComboBox.nonEditableBackground\")};\n`;\n\nconst StyledDropdownValue = styled.span`\n  flex: 1;\n  text-align: initial;\n  white-space: nowrap;\n  margin-right: 5px;\n`;\n\nexport const Dropdown = forwardRef(\n  <T extends object>(\n    {\n      labelPlacement,\n      style,\n      className,\n      validationState,\n      contextHelp,\n      contextHelpPlacement,\n      ...props\n    }: DropdownProps<T>,\n    forwardedRef: ForwardedRef<HTMLButtonElement>\n  ): React.JSX.Element => {\n    const ref = useObjectRef(forwardedRef);\n    const state = useSelectState(props);\n    const {\n      menuProps,\n      labelProps,\n      triggerProps,\n      valueProps,\n      descriptionProps,\n    } = useSelect(\n      { ...props, isInvalid: validationState && validationState !== \"valid\" },\n      state,\n      ref\n    );\n\n    // minWidth is not kept in the state, assuming it's unnecessary, considering the width is expected to be\n    // stable when the popover opens.\n    const minWidth = ref.current\n      ? ref.current?.offsetWidth + 2 /* for box shadow*/\n      : undefined;\n\n    return (\n      <WithLabel\n        label={props.label}\n        labelPlacement={labelPlacement}\n        labelProps={labelProps}\n        isDisabled={props.isDisabled}\n        className={className}\n        style={style}\n      >\n        {/* probably no need for HiddenSelect as auto-filling doesn't seem relevant for applications using this library */}\n        <WithInlineContextHelp\n          contextHelp={contextHelp}\n          contextHelpPlacement={contextHelpPlacement}\n          descriptionProps={descriptionProps}\n        >\n          <BareButton {...triggerProps} autoFocus={props.autoFocus} ref={ref}>\n            <StyledDropdownContainer\n              as=\"button\"\n              validationState={validationState}\n              className={state.isOpen ? \"is-focus\" : \"\"}\n            >\n              <StyledDropdownValue {...valueProps}>\n                {state.selectedItem?.rendered}\n              </StyledDropdownValue>\n              <StyledDropdownArrowIcon\n                disabled={props.isDisabled}\n                size={20}\n                icon=\"general/arrowDown.svg\"\n              />\n            </StyledDropdownContainer>\n          </BareButton>\n        </WithInlineContextHelp>\n        {state.isOpen && (\n          <Popover\n            state={state}\n            triggerRef={ref}\n            placement=\"bottom start\"\n            containerPadding={0}\n            offset={2}\n            crossOffset={-1}\n          >\n            <StatelessListBox\n              {...menuProps}\n              state={state}\n              style={{ minWidth }}\n            />\n          </Popover>\n        )}\n      </WithLabel>\n    );\n  }\n);\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from \"react\";\nimport * as juiComponents from \"@intellij-platform/core\";\nimport darculaThemeJson from \"@intellij-platform/core/themes/darcula.theme.json\";\nimport lightThemeJson from \"@intellij-platform/core/themes/intellijlaf.theme.json\";\nimport highContrastThemeJson from \"@intellij-platform/core/themes/HighContrast.theme.json\";\n\nconst WithLoading = (Component) => (props) =>\n  (\n    // Because ReactLive doesn't render a Suspense around what it renders.\n    <React.Suspense fallback=\"loading\">\n      <Component {...props} />\n    </React.Suspense>\n  );\n\n// Add react-live imports you need here\nconst ReactLiveScope = {\n  React,\n  ...React,\n  ...juiComponents,\n  ExampleApp: WithLoading(React.lazy(() => import(\"jui-example-app/src/App\"))),\n  darculaThemeJson,\n  lightThemeJson,\n  highContrastThemeJson,\n  MonacoEditor: WithLoading(React.lazy(() => import(\"@monaco-editor/react\"))),\n};\n\nexport default ReactLiveScope;\n","// extracted by mini-css-extract-plugin\nexport default {\"playground\":\"playground_whuD\",\"noPadding\":\"noPadding_tWI2\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from \"react\";\nimport { useTheme } from \"styled-components\";\nimport Playground from \"./Playground\";\nimport ReactLiveScope from \"@theme/ReactLiveScope\";\nimport CodeBlock from \"@theme-init/CodeBlock\";\nimport clsx from \"clsx\";\nimport styles from \"../Playground/style-overrides.module.css\";\n\nconst withLiveEditor = (Component) => {\n  function WithLiveEditor(props) {\n    if (props.live) {\n      // idea: We can support playground with alternative sources, where each of them will show up as a button\n      // below the default playground. Clicking on buttons will switch to that example. There can be a simple syntax\n      // for embedding multiple sources in one code block which then will be converted into examples here.\n      return <Playground scope={ReactLiveScope} {...props} />;\n    }\n\n    return <Component {...props} />;\n  }\n\n  return WithLiveEditor;\n};\n\nconst withThemeBackground = (Component) => {\n  function WithThemeBackground(props) {\n    const theme = useTheme();\n    const content = <Component {...props} />;\n    const style = {\n      \"--ifm-list-item-margin\": 0,\n    };\n\n    if (props.themed) {\n      style.color = theme.color(\"*.foreground\");\n      style[\"--ifm-pre-background\"] = theme.color(\"*.background\");\n      style[\"--ifm-code-background\"] = \"none\";\n    }\n    return (\n      <div\n        style={style}\n        className={clsx(styles.playground, {\n          [styles.noPadding]: props.noPadding,\n        })}\n      >\n        {content}\n      </div>\n    );\n  }\n\n  return WithThemeBackground;\n};\n\nexport default withThemeBackground(withLiveEditor(CodeBlock));\n","import React from \"react\";\nimport Code from \"@theme-original/MDXComponents/Code\";\nimport { InlineCode } from \"../../components/component-linking\";\n\n/**\n * Wrapping the default Code component, to replace inline codes with links, if possible.\n * `Code` component is used only when rendering jsdoc descriptions. It's not used\n * when inline code in mdx files is rendered. For that, `inlineCode` entry is set\n * in swizzled `MDXComponents`.\n */\nexport default function CodeWrapper(props: {\n  children: React.ReactNode;\n}): JSX.Element {\n  if (typeof props.children === \"string\") {\n    return <InlineCode>{props.children}</InlineCode>;\n  }\n  return (\n    <>\n      <Code {...props} />\n    </>\n  );\n}\n","import MDXComponents from \"@theme-original/MDXComponents\";\nimport { InlineCode } from \"../../components/component-linking\";\n\nexport default {\n  ...MDXComponents,\n  inlineCode: InlineCode,\n};\n","import React from \"react\";\n\nimport { defaultKeymap, shortcutToString } from \"@intellij-platform/core\";\n\n/**\n * Shows the default shortcut for a given action id.\n */\nexport const DefaultShortcut = ({ actionId }: { actionId: string }) => {\n  return <code>{shortcutToString(defaultKeymap[actionId][0])}</code>;\n};\n","\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n/* @jsxFrag React.Fragment */\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n\n\nexport const frontMatter = {};\nexport const contentTitle = 'SearchInput';\nexport const metadata = {\n  \"unversionedId\": \"components/SearchInput\",\n  \"id\": \"components/SearchInput\",\n  \"title\": \"SearchInput\",\n  \"description\": \"See also:\",\n  \"source\": \"@site/docs/components/SearchInput.mdx\",\n  \"sourceDirName\": \"components\",\n  \"slug\": \"/components/SearchInput\",\n  \"permalink\": \"/jui/-/pre-react-18/docs/components/SearchInput\",\n  \"draft\": false,\n  \"editUrl\": \"https://github.com/alirezamirian/jui/edit/master/packages/website/docs/components/SearchInput.mdx\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"frontMatter\": {},\n  \"sidebar\": \"tutorialSidebar\",\n  \"previous\": {\n    \"title\": \"ProgressBar\",\n    \"permalink\": \"/jui/-/pre-react-18/docs/components/ProgressBar\"\n  },\n  \"next\": {\n    \"title\": \"SpeedSearch\",\n    \"permalink\": \"/jui/-/pre-react-18/docs/components/SpeedSearch\"\n  }\n};\nexport const assets = {\n\n};\n\nimport { ApiDescription } from \"@site/src/components/ApiDescription\";\nimport { SearchInput, CommonActionId } from \"@intellij-platform/core\";\nimport { DefaultShortcut } from \"../../src/components/DefaultShortcut\";\nexport const toc = [{\n  value: 'Remaining',\n  id: 'remaining',\n  level: 4\n}, {\n  value: 'Live example',\n  id: 'live-example',\n  level: 3\n}, {\n  value: 'With search history',\n  id: 'with-search-history',\n  level: 2\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"searchinput\"\n    }}>{`SearchInput`}</h1>\n    <ApiDescription of={SearchInput} mdxType=\"ApiDescription\" />\n    <p>{`See also:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/jui/-/pre-react-18/docs/components/Input\"\n        }}>{`Input`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/jui/-/pre-react-18/docs/components/InputField\"\n        }}>{`InputField`}</a></li>\n    </ul>\n    <h4 {...{\n      \"id\": \"remaining\"\n    }}>{`Remaining`}</h4>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`🚧 Support for `}<a parentName=\"li\" {...{\n          \"href\": \"https://jetbrains.github.io/ui/controls/search_field/#15\"\n        }}>{`multiline search strings`}</a></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"live-example\"\n    }}>{`Live example`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live themed\",\n        \"live\": true,\n        \"themed\": true\n      }}>{`<>\n  <SearchInput\n    style={{ width: 250 }}\n    onSubmit={alert}\n    onClear={() => console.log(\"onClear\")}\n    addonAfter={\n      <>\n        <TooltipTrigger tooltip={<ActionTooltip actionName=\"Match Case\" />}>\n          <StyledHoverContainer as={IconButton} excludeFromTabOrder={false}>\n            <AutoHoverPlatformIcon\n              icon=\"actions/regex\"\n              hoverIcon=\"actions/regexHovered\"\n            />\n          </StyledHoverContainer>\n        </TooltipTrigger>\n      </>\n    }\n  />\n</>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"with-search-history\"\n    }}>{`With search history`}</h2>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`searchHistory`}</inlineCode>{` prop to pass a list of search queries, which will be available as a menu on the search icon.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live themed\",\n        \"live\": true,\n        \"themed\": true\n      }}>{`<>\n  <SearchInput\n    style={{ width: 250 }}\n    searchHistory={[\"Expand\", \"Deprecated\", \"break\", \"overr\"]}\n  />\n</>\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`SearchInput`}</inlineCode>{` also provides an action to allow opening search history menu via a `}<inlineCode parentName=\"p\">{`CommonActionId.SHOW_SEARCH_HISTORY`}</inlineCode>{`\nshortcut, which by default is mapped to `}<DefaultShortcut actionId={CommonActionId.SHOW_SEARCH_HISTORY} mdxType=\"DefaultShortcut\" />{`.`}</p>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n"],"names":["isInResolvedActionGroup","action","isActionGroup","isResolvedActionGroup","isActionGroupDefinition","ActionShortcut","_ref","actionId","children","shortcutString","useGetActionShortcut","getShortcut","React","keymap","useKeymap","keyboardShortcut","find","_ref2","type","shortcutToString","__docgenInfo","isKeyMatch","keyStroke","e","loose","code","modifiers","supportedModifiers","every","modifier","getModifierState","Boolean","includes","ActionsContext","generateId","Math","floor","random","ACTION_PROVIDER_ID_ATTRIBUTE","ACTION_PROVIDER_ID_DATA_PREFIX","actionProvidersMap","Map","ActionsProvider","props","parentContext","useContext","actions","dfsVisit","DividerItem","push","recursivelyCreateActions","shortcuts","Object","fromEntries","map","id","actionProviderId","useState","shortcutHandlerProps","onAction","_temp","useCapture","firstKeyActivatedShortcutsRef","useRef","secondStrokeResetTimerIdRef","onKeyDown","useEventCallback","event","nativeEvent","location","repeat","current","window","clearTimeout","length","some","shortcut","secondKeyStroke","triggerAction","firstKeyMatches","entries","flatMap","filter","input","isKeyboardShortcut","_ref3","firstKeyStroke","_ref4","setTimeout","document","addEventListener","once","capture","stopPropagation","preventDefault","useShortcuts","perform","element","target","Element","allActions","useEffect","set","delete","Provider","value","actionDefinitions","parent","actionDefinition","useShortcutsOf","undefined","firstShortcut","context","isDisabled","actionPerformed","isMutableActionGroup","child","getAvailableActionsFor","closestActionProvider","closest","HTMLElement","actionSets","keys","dataset","dataKey","startsWith","replace","get","values","isSearchable","concat","sortBy","actionSet","useActions","useAction","usePerformAction","console","error","CommonActionId","EXPAND_ALL","COLLAPSE_ALL","EXPAND_SELECTION","SHRINK_SELECTION","GO_TO_ACTION","GO_TO_FILE","SHOW_INTENTION_ACTIONS","EDIT_SOURCE","SHOW_SEARCH_HISTORY","COPY_REFERENCE","REFRESH","COPY","CUT","PASTE","DELETE","CODE_COMPLETION","KeymapContext","defaultKeymap","KeymapProvider","keymapProp","parentKeyMap","assign","create","ActionButton","otherProps","actionButton","IconButton","_extends","title","onPress","icon","TooltipTrigger","tooltip","ActionTooltip","actionName","ActionGroupMenu","actionGroup","ActionsMenu","isAction","item","actionContext","actionMenuProps","Menu","getAllActions","disabledKeys","key","items","Divider","renderActionAsMenuItem","isGroup","menuPresentation","Item","textValue","childItems","MenuItemLayout","content","Section","hasDivider","flatten","useCreateDefaultActionGroup","show","usePopupManager","getActionShortcut","openActionsInPopup","close","Popup","positioning","targetRef","querySelector","MENU_POSITION_TARGET_DATA_ATTRIBUTE","placement","Layout","SpeedSearchMenu","onClose","autoFocus","header","groupDefinition","RESIZE_TOOL_WINDOW_RIGHT_ACTION_ID","RESIZE_TOOL_WINDOW_LEFT_ACTION_ID","RESIZE_TOOL_WINDOW_TOP_ACTION_ID","RESIZE_TOOL_WINDOW_BOTTOM_ACTION_ID","MAXIMIZE_TOOL_WINDOW_ACTION_ID","FOCUS_EDITOR_ACTION_ID","HIDE_ACTIVE_WINDOW_ACTION_ID","HIDE_ALL_WINDOWS_ACTION_ID","JUMP_TO_LAST_WINDOW_ACTION_ID","defaultKeyToStr","Control","ArrowDown","ArrowUp","ArrowLeft","ArrowRight","Enter","Quote","Minus","Subtract","NumpadAdd","Multiply","NumpadMultiply","Equal","Backspace","fromPairs","Array","from","i","charCodeAt","x","String","fromCharCode","a","toUpperCase","KeystrokeToString","isMac","separator","codeToStr","Alt","Shift","Meta","Escape","modifiersOrder","keystrokeToString","keystroke","sort","b","indexOf","join","Error","useActionGroup","actionGroupId","StyledModalWindow","styled","ModalWindow","StyledWindowContainer","StyledContainer","div","StyledHeading","h2","StyledBody","StyledContent","StyledCheckbox","StyledButtons","ButtonGroup","StyledIcon","span","StyledHelpIcon","AlertDialog","heading","body","checkbox","helpButton","buttons","minWidth","role","interactions","defaultBounds","top","innerHeight","observeContentResize","OverlayMoveHandle","dragThreshold","canMoveStart","isEventOnEmptySpaces","moveHandleProps","PlatformIcon","size","useAlertDialog","open","useWindowManager","confirm","message","okText","cancelText","Promise","resolve","Button","variant","bgColor","theme","color","dark","StyledHeaderActions","StyledBalloonContainer","StyledIconContainer","StyledBalloonHeader","StyledBalloonBody","_ref5","lineClamp","_ref6","StyledBalloonFooter","StyledToggleIconContainer","StyledToggleExpandButtonContainer","StyledToggleExpandButtonFooterContainer","BalloonContext","BalloonActionLink","ref","Link","_len","arguments","args","_key","Balloon","iconProp","expanded","expandedProp","defaultExpanded","onExpandedChange","headerActions","containerProps","bodyRef","expandable","setExpandable","setExpanded","useControlledState","maxLinesWhenNotExpanded","bodyElem","clientHeight","parseFloat","getComputedStyle","lineHeight","getNumLines","scrollHeight","iconType","index","arr","toggle","effectiveExpanded","AutoHoverPlatformIcon","onClick","style","marginLeft","ToggleWrapper","enabled","onToggle","Component","iconName","toggleIcon","hoverContainerSelector","className","NotImplementedFn","BalloonsContext","showSticky","useBalloonManager","BalloonManager","disablePortal","BalloonsContainer","StyledBalloonsStack","balloons","setBalloons","timeoutIdsRef","lastIdRef","api","useMemo","timeout","aBalloon","balloon","timeoutId","aTimeoutId","forEach","notificationsStack","position","ReactDOM","withConfig","displayName","componentId","BareButton","forwardedRef","elementType","elementTypeProp","useObjectRef","buttonProps","useButton","domProps","filterDOMProps","mergeProps","StyledButton","button","disabled","_ref7","StyledDefaultButton","_ref8","_ref9","_ref10","_ref11","StyledIconButton","variants","default","mnemonic","form","MnemonicTrigger","onTriggered","StyledButtonGroup","FocusScope","HorizontalArrowKeyNavigation","arrowKeyNavigationProps","focusManager","useFocusManager","keyboardProps","useKeyboard","hasAnyModifier","focusPrevious","wrap","focusNext","continuePropagation","StyledWrapperLabel","label","StyledCheckboxLabelText","StyledInput","Checkbox","preventFocus","disableFocusAlwaysVisible","state","useToggleState","inputProps","useCheckbox","isFocusVisible","isFocused","focusProps","useFocusRing","focusDisabledProps","onFocusCapture","relatedTarget","focus","blur","tabIndex","CheckboxIcon","isIndeterminate","isSelected","pointerEvents","LafIcon","name","Disabled","Selected","Focused","CollectionSpeedSearchContext","CollectionSpeedSearchItemContext","SpeedSearchItemHighlightsProvider","itemKey","collection","getItem","text","warn","highlightedRanges","matches","HighlightedTextValue","speedSearchContext","TextWithHighlights","highlights","useCollectionSpeedSearchResult","selectionManager","inputSelectionManager","speedSearch","focusBestMatch","searchTerm","active","getKeys","matchedRanges","minusculeMatch","wrappedSelectionManager","selectAll","setSelectedKeys","Set","has","createSpeedSearchSelectionManager","latestValues","useLatest","matchedKeys","noneOfTheMatchesAreSelected","matchedKey","keyToFocus","firstRange","rangeA","rangeB","to","getLongestCommonPrefixMatch","passedFirstSelection","firstSelectedKey","getMatchToSelect","setFocusedKey","replaceSelection","useCollectionSpeedSearch","keepSearchActiveOnBlur","keyboardDelegate","speedSearchStateProps","useSpeedSearchState","speedSearchSelectionManager","useSpeedSearch","speedSearchKeyboardDelegate","wrappedKeyboardDelegate","findFirstMatch","fromKey","direction","currentKey","getKeyAbove","getKeyBelow","getFirstKey","global","firstKey","next","getLastKey","lastKey","pop","createSpeedSearchKeyboardDelegate","speedSearchContextValue","searchPopupProps","match","constructor","seq","this","_Divider","getCollectionNode","rendered","hasChildNodes","_Item","result","StatelyItem","originalShouldInvalidate","shouldInvalidate","invalidated","GAP","StyledItemLayout","StyledHint","currentForegroundAware","commonColors","inactiveTextColor","small","StyledGroup","attrs","ItemLayout","Hint","Group","ItemStateContext","useCollectionAutoScroll","isVirtualized","focusedKey","scrollIntoView","useCollectionFocusProxy","focusProxyRef","collectionRef","proxy","dispatchEvent","KeyboardEvent","currentTarget","log","removeEventListener","StyledComboBoxContainer","StyledComboBoxInput","inset","StyledDropdownButton","border","ComboBox","forwardRef","labelPlacement","defaultValue","onValueChange","validationState","validationMessage","contextHelp","contextHelpPlacement","inputRef","inputRefProp","buttonRef","dropdownContainerRef","popoverRef","listBoxRef","isInvalid","useComboBoxState","menuTrigger","allowsCustomValue","inputValue","defaultInputValue","onInputChange","descriptionProps","errorMessageProps","labelProps","comboboxInputProps","listBoxProps","useComboBox","offsetWidth","WithLabel","WithInlineContextHelp","PositionedTooltipTrigger","showOnFocus","triggerRef","ValidationTooltip","delay","tooltipTriggerProps","StyledDropdownArrowIcon","isOpen","Popover","containerPadding","offset","crossOffset","StatelessListBox","ListBox","useListState","selectionBehavior","selectionMode","useListBox","StyledList","ListBoxSection","section","Option","optionProps","useOption","isContainerFocused","node","StyledListItem","selected","containerFocused","StyledSectionHeading","StyledSection","itemProps","headingProps","groupProps","useListBoxSection","StyledVerticalSeparator","getChildren","childNodes","focusRing","focused","borderRadius","StyledContextHelp","contextHelpForeground","StyledContextHelpWrapper","css","StyledLabelContainer","StyledLabel","labelRef","applyLabelWidth","commonWidth","LabelAlignmentContext","useLayoutEffect","apply","width","useAlignedLabels","LabeledControlsAlignmentProvider","setCommonWidth","currentWidth","StyledHoverContainer","StyledIconHoverContainer","hoverIcon","amendName","ICONS_DIR_PREFIX","useIconPath","iconDescriptor","themePath","useTheme","resolvedValue","isUnderDarcula","reduce","soFar","findIconPath","resolvedIconPath","useSvgIcon","path","StyledIconWrapper","iconNameOrPath","amendment","ext","split","getPlatformIconPath","relativePath","slice","darkIcon","getDarkPath","darkPath","fallbackPath","DEFAULT_ICON_SIZE","itemState","canceled","async","ariaBusy","svg","getSvgIcon","catch","finally","remove","svgElement","createElement","appendChild","outerHTML","randomPostfix","toFixed","idMatches","matchAll","modifiedSvg","_","newId","replaceAll","makeIdsUnique","fetchIcon","theOld","theNew","str","replaced","replacedAgain","DEFAULT_MINIMUM_BUTTON_SIZE","NAVBAR_MINIMUM_BUTTON_SIZE","minSize","preventFocusOnPress","excludeFromTabOrder","isPressed","isPressedInput","onPressChange","onPressEnd","onPressStart","onPressUp","shouldCancelOnPointerExit","focusableProps","useFocusable","pressProps","usePress","ArrowIcon","IconButtonWithMenu","renderMenu","noArrow","previouslyFocusedElementRef","MenuTrigger","onOpenChange","onFocus","Img","darkSrc","src","StyledInputBox","appearance","StyledAddons","StyledRightAddons","StyledLeftAddons","Input","autoSelect","addonBefore","addonAfter","onBlur","setIsFocused","focusWithinProps","useFocusWithin","onFocusWithinChange","select","spellCheck","onMouseDown","InputField","fieldProps","useField","errorMessage","placeholder","onChange","StyledLink","focusBorderColor","linkForegroundEnabled","labelable","interactionHandlers","FocusRing","focusRingClass","as","List","allowEmptySelection","fillAvailableSpace","estimatedItemHeight","disallowEmptySelection","listProps","listContext","useList","virtualizerProps","renderNode","useListVirtualizer","renderItem","ListItem","ListContext","Virtualizer","ListDivider","useSeparator","orientation","separatorProps","listFocused","useSelectableItem","shouldForwardProp","prop","backgroundColor","labelForeground","asCurrentForeground","labelSelectedForeground","asCurrentBackground","showAsFocused","shouldFocusWrap","selectOnFocus","disallowTypeAhead","shouldUseVirtualFocus","allowsTabNavigation","collator","useCollator","usage","sensitivity","delegate","ListKeyboardDelegate","collectionProps","useSelectableCollection","useSelectableList","setFocused","isEmpty","onActionCallback","originalUseListState","selectionManagerRef","useImperativeHandle","useCollectionRef","StyledListSectionHeader","paddingLeft","fontWeight","outline","cursor","ListSection","reusableView","headerRef","useVirtualizerItem","layoutInfoToStyle","layoutInfo","renderWrapper","renderChildren","viewType","c","VirtualizerItem","layout","VariableWidthListLayout","estimatedRowHeight","estimatedHeadingHeight","dividerHeight","sizeToFit","scrollToItem","virtualizer","shouldScrollX","duration","scrollDirection","ContextMenuContainer","onOpen","useMenuTriggerState","positionOrigin","overlayRef","useContextMenu","setPositionOrigin","onContextMenu","allProps","MenuOverlayFromOrigin","origin","defaultAutoFocus","patchCollectionItem","nodes","partialNode","result2","partialChildNode","partialChildNodeWithoutType","PatchedItem","bind","PatchedSection","convertChildren","isArray","Item2","MenuOverlayContext","MenuContext","useMenu","onActionProp","submenuBehavior","menuContextValue","menuProps","useMenuAria","useMenuState","patchCollectionProps","useTreeState","childExpansionBehaviour","expandedKeys","expandedKey","onExpandedKeyChange","defaultExpandedKeys","defaultExpandedKey","StyledMenu","renderMenuNodes","StyledMenuItemText","StyledMenuItemPlatformIcon","StyledMenuItemLafIcon","MenuItemContext","keyboardShortcutProps","useMenuItemLayout","MenuItem","nestedMenuRef","isExpanded","selectedKeys","renderSubmenu","Submenu","itemWrapper","menuItemProps","hasSubmenu","ariaMenuItemProps","useMenuItemAria","onMouseEnter","onPointerEnter","onPointerDown","hoverProps","useHover","onHoverStart","isAnySubmenuOpen","parentKey","toggleKey","togglePressProps","useMenuItem","overlayProps","positionProps","useOverlayPosition","shouldFlip","MENU_VERTICAL_PADDING","MENU_BORDER_WIDTH","arrowProps","onPointerUp","StyledMenuItem","isActive","StyledMenuItemIcon","StyledNestedArrow","Overlay","OverlayComponent","SimpleOverlay","parentState","rootKey","portalContainer","StyledMenuItemLayout","Content","Shortcut","kbd","useContextOrThrow","allowedIcon","MenuOverlay","restoreFocus","otherOverlayProps","inputOverlayRef","useOverlay","shouldCloseOnBlur","isKeyboardDismissDisabled","isDismissable","shouldCloseOnInteractOutside","areInNestedOverlays","usePreventScroll","onOutsideContextMenu","useOverlayPositionFromOrigin","setPosition","overlayElement","clientX","clientY","overlayWidth","overlayHeight","totalWidth","documentElement","clientWidth","totalHeight","y","left","max","calculatePosition","offsetHeight","zIndex","DisableScrollStyles","createGlobalStyle","scrollParent","isScrollable","getScrollParent","classList","add","align","positioningTargetRef","menuTriggerProps","triggerProps","useMenuTrigger","ariaButtonProps","getPlacement","StyledItemsContainer","ul","StyledSearchFieldWrapper","StyledSpeedSearchMenu","StyledPlaceholder","useSpeedSearchMenu","containerRef","speedSearchContainerProps","ListCollection","MenuKeyboardDelegate","contains","activeElement","focusSafely","lastSize","setSize","measureSize","height","isSearchActive","useResizeObserver","onResize","sizeStyleProps","minHeight","maxHeight","emptyText","clear","SpeedSearchSubmenu","SpeedSearchMenuContent","menuRef","SpeedSearchInput","useSubmenuState","rootItem","submenuProps","useSubmenu","WINDOW_SHADOW","highlightedStyle","defaultStyle","disabledStyle","li","useSubmenuAria","submenuBehaviorProps","super","keyBelow","keyAbove","root","isFocusedRef","focusedKeyRef","defineProperties","SelectionManager","StyledMenuHeading","StyledMenuSectionItemsContainer","MenuSection","useMenuSection","MnemonicContext","createContext","character","onTriggeredProp","setActive","keydownListener","toLowerCase","parentElement","getClientRects","isVisible","keyupListener","renderedMnemonicRef","timerId","hidden","MnemonicText","found","UNSAFE_React17SuspenseFix","measureContentSize","fallback","NullSuspenseFallback","afterUnsuspended","afterSuspended","afterSuspendedProp","afterUnsuspendedProp","StyledWindowUnderlay","StyledWindowInnerContainer","DEFAULT_WINDOW_MIN_WIDTH","DEFAULT_WINDOW_MIN_HEIGHT","WindowControllerContext","propsContext","modalProps","underlayProps","useModalOverlay","useOverlayTriggerState","dialogProps","titleProps","useDialog","bounds","overlayInteractionHandlerProps","UNSAFE_measureContentSize","useResizableMovableOverlay","focusContainmentFixProps","lastFocusedElementRef","probablyFocusedElement","elementToFocus","useFocusContainmentFix","OverlayInteractionHandler","contain","WindowContext","movable","OverlayResizeHandles","StyledFooter","hasBorder","contrastBorder","StyledFooterSide","WindowFooter","right","StyledWindowTitle","h1","WindowHeader","renderTitle","StyledWindowFooter","StyledWindowContentWrapper","WindowLayout","footer","Footer","Header","WindowsContext","WindowManager","windows","setWindows","newKeyRef","currentWindows","aWindow","requestAnimationFrame","ParentOverlayContext","AriaOverlay","element1","element2","overlayRoot1","overlayRoot2","OverlayInteractionHandlerContext","useOverlayInteractionHandler","useOverlayMoveHandle","options","interactionHandler","finishInteraction","startInteraction","updateBounds","useMove","onMoveStart","onMove","startState","movement","onMoveEnd","overlayResizer","initialBoundsRef","bottom","newWidth","initialBounds","newHeight","getResizerProps","side","onResizeStarted","onResizeEnd","useOverlayResizer","RightResizer","LeftResizer","TopResizer","BottomResizer","StyledPopover","popoverProps","usePopover","DismissButton","onDismiss","withMinSize","getCenteredBounds","innerWidth","targetElement","targetBounds","getBoundingClientRect","ensureInViewport","gap","viewportWidth","viewportHeight","clamp","getContentSize","fn","ceil","clone","cloneNode","returnValue","removeChild","withTemporaryStyle","useContentSize","observe","measuredSizes","setMeasuredSizes","lastMeasuredSize","at","Size","isEqual","newSize","cancelAnimationFrame","measure","currentSize","aSize","debouncedMeasure","fnRef","currentTimeoutId","useCallback","useDebouncedCallback","mutationObserver","MutationObserver","subtree","childList","disconnect","width2","height2","inputBounds","onBoundsChange","onBoundsChanging","setBounds","contentSize","currentInteraction","setCurrentInteraction","effectiveMinWidth","effectiveMinHeight","applyMinSize","getBounds","updatedBounds","partialBounds","centeredContentBounds","positioned","sized","StyledInnerContainer","DEFAULT_POPUP_MIN_WIDTH","DEFAULT_POPUP_MIN_HEIGHT","_Popup","nonDismissable","allowScroll","positioningProp","onCloseProp","PopupControllerContext","useInteractOutside","onInteractOutsideStart","onInteractOutside","positionedBounds","pipe","focusForwarderProps","useFocusForwarder","titleId","useSlotId","useOverlayFocusContain","StyledPopupContainer","propsArray","mergeNonNullProps","PopupContext","PopupHeader","PopupLayout","StyledPopupHint","StyledPopupHeader","hasControls","labelDisabledForeground","renderHeader","StyledPopupLayout","StyledPopupLayoutHeader","StyledPopupLayoutContent","StyledPopupLayoutFooter","PopupsContext","PopupManager","popups","setPopups","popup","currentPopups","aPopup","wrappedPopup","PopupTrigger","useOverlayTrigger","PressResponder","ProgressBar","maxValue","minValue","namePosition","details","secondaryDetails","dense","valueLabel","showValueLabel","progressBarProps","useProgressBar","percentage","forcedDetails","setForcedDetails","setTooltip","contextValue","StyledProgressBarLabel","effectiveDetails","StyledProgressBarContainer","StyledProgressBarLineContainer","hasTopMargin","hasBottomMargin","StyledProgressBarTrack","indeterminate","StyledProgressBarProgress","ProgressBarContext","StyledProgressBarDetails","getIndeterminateStartColor","getIndeterminateEndColor","indeterminateBackgroundAnimation","keyframes","useProgressBarIconButton","_ref12","hoverTooltip","isHovered","useProgressBarPauseIconButton","_ref13","paused","Container","Label","LineContainer","Track","Progress","Details","ProgressBarStopButton","ResizableView","resizerPlacement","ThreeViewSplitter","firstView","firstSize","onFirstResize","lastView","onLastResize","resizerProps","useBottomResizer","VerticalResizer","StyledHorizontalResizer","StyledHorizontalResizerArea","handleSize","HorizontalResizer","outerPadding","background","useLeftResizer","useRightResizer","useTopResizer","StyledVerticalResizer","StyledVerticalResizerArea","useResizer","invert","SearchInput","searchHistory","onClear","onSubmit","onHistoryItemSelected","historyButtonTitle","valueProp","setValue","inputContainerRef","isSearchHistoryOpen","setSearchHistoryOpen","showSearchHistoryAction","searchIcon","historyItemText","parseInt","historyItem","StyledSearchIcon","StyledSpeedSearchInput","noMatch","getOutlineColor","StyledSearchText","clearButtonRef","SpeedSearchPopup","StyledSpeedSearchPopup","red","tooltipForeground","useGhostInput","valueRef","ctrlKey","altKey","metaKey","elem","isContentEditable","HTMLInputElement","HTMLTextAreaElement","sliceEnd","defaultIsSearchActive","onIsSearchActiveChange","setSearchTerm","defaultSearchTerm","onSearchTermChange","ghostInputKeydown","trimmedValue","trimStart","onKeyUp","onBlurWithin","StatusBar","StyledStatusBar","StyledStatusBarLeft","StyledStatusBarRight","StyledStatusBarSection","StatusBarWidget","StyledWrapper","StyledStatusBarWidget","StyledStatusBarIconWidget","DarculaSeparatorUI","defaultSize","StyledSeparator","hr","backgroundClip","boxSizing","margin","flexShrink","StyledHorizontalSeparator","DebuggerTabContent","closeButton","TabContentLayout","startIcon","endIcon","StyledDebuggerTab","StyledDefaultTab","getTabThemeStyles","underlineHeight","underlinedTabBackground","debuggerTabTheme","DebuggerTabs","Tabs","TabComponent","focusable","EditorTabContent","onUnpin","pinned","editorTabTheme","borderColor","underlinedTabInactiveBackground","hoverInactiveBackground","hoverBackground","inactiveUnderlineColor","underlineColor","underlinedTabInactiveForeground","underlinedTabForeground","StyledEditorTab","StyledEditorTabs","StyledDefaultTabs","getTabsThemeStyles","EditorTabs","TabsComponent","noBorders","TabCloseButton","StyledTabItemLayout","iconStyle","StyledStartIconWrapper","StyledEndIconWrapper","TabItem","horizontalOverflowIndicatorStyles","StyledHorizontalOverflowShadows","hasOverflowAtStart","panelBackground","hasOverflowAtEnd","Tab","shouldSelectOnPressUp","tabProps","useTab","selectedKey","scrollBarDisabledStyle","StyledTabList","multiRow","noOverflowMenu","noScroll","useTabListState","tabListProps","useTabList","scrolledIndicatorProps","hasOverflow","threshold","setHasOverflow","update","offsetLeft","scrollLeft","offsetRight","scrollWidth","offsetTop","scrollTop","offsetBottom","newHasOverflow","onScroll","useHasOverflow","overflowedElements","useOverflowObserver","overflowedKeys","notNull","scrollableContainer","selectedTabElement","TabsOverflowMenu","onSelect","setSelectedKey","menuItem","inOverflowMenu","ToolWindowTabContent","toolWindowTabTheme","StyledToolWindowTab","StyledToolWindowTabs","ToolWindowTabs","getAllRanges","ranges","gapRange","range","createRangesFromIndices","indices","lastRange","HighlightedMatch","parts","highlighted","numberPattern","parseComponent","componentStr","round","min","parseHexRgba","parseShorthandHex","parseRgb","RegExp","parseRgba","Color","rgba","g","r","NaN","parse","Number","isInteger","parseColorString","isValid","withTransparency","alpha","brighter","int","FACTOR","darker","toString","blend","colorOrColorString","getBlendedValue","component","isNaN","padStart","StyledSplitterContainer","StyledView","StyledSplitterInnerView","resizerPropsOverrides","innerView","firstViewMinSize","lastViewMinSize","innerViewMinSize","firstViewRef","lastViewRef","firstSizeState","setFirstSizeState","lastSizeState","setLastSizeState","horizontalValue","verticalValue","FirstResizer","SecondResizer","sizeStyleProp","minSizeStyleProp","isFractionSize","normalizeSize","getSize","getNewSize","newFractionSize","getActualSize","viewElem","actualSize","currentLastSize","currentFirstSize","StyledFloatView","FloatView","boundsStyle","FloatToolWindows","floatWindows","renderToolWindow","stackedFloatWindows","getKey","sortedKeys","setSortedKeys","sorted","bringToFront","move","useStackedLayersState","layersProps","toolWindow","MovableToolWindowStripeContext","MovableToolWindowStripeProvider","stripes","draggingRect","setDraggingRect","draggingKey","setDraggingKey","dropPosition","setDropPosition","getDropPositionRef","moveStartLocationRef","addStripe","propsRef","startMove","stripe","stripeElRef","stripeElement","getItemRect","toJSON","indexInMain","mainItems","findIndex","indexInSplit","splitItems","anchor","isSplit","dropPositionGetters","createGetDropPosition","getDropPosition","draggedRect","endMove","TopStripe","BottomStripe","LeftStripe","RightStripe","InnerView","StyledToolWindowOuterLayout","Shell","hideStripes","getSizeInAnchor","containerSize","isHorizontalToolWindow","mapToKey","sortAndMapToKey","compose","order","filterMains","getMains","filterSplits","filterVisible","expectedViewMode","viewMode","getSplits","filterVisibleDocked","filterVisibleUnDocked","getDocked","toolWindows","docks","mains","splits","weight","mainKey","sizeFraction","sideWeight","getUnDocked","getSideState","main","activeKeys","undocked","docked","DEFAULT_HEIGHT","DEFAULT_WIDTH","getFloatWindowsState","floatingBounds","getFloatWindowState","getStripeRect","start","rect","end","getDropPositions","getRef","score","abs","relative","keyToOffsets","boundingRect","getKeyToOffsets","dropPositions","lastDropPosition","stripeRect","getCanDrop","bestMatch","candidate","STRIPE_BUTTON_LINE_HEIGHT","StyledToolWindowStripeButton","StyledToolWindowStripe","theOtherSide","preventCollapse","StyledSpacer","useElementMove","ghost","ghostOption","otherOptions","updateGhostPosition","defaultGhost","colors","computedBackground","unshift","resultColor","nextColor","findEffectiveBackgroundColor","createDefaultGhost","append","ToolWindowStripe","render","onItemPress","getProps","latestPropsRef","moveDisabled","useMovableStripeButtons","isNotCurrentItem","anItem","ToolWindowStripeButton","getStripeButtonStyles","styles","marginValue","display","StyledUndockSide","UndockSide","ToolWindows","hideToolWindowBars","useWidescreenLayout","toolWindowsState","onToolWindowStateChange","mainContentMinWidth","windowsById","indexBy","mainContentFocusScopeRef","layoutState","setLayoutState","windowFocusableRefs","latestRef","container","_setLayoutState","windowIds","removedFromSideBarIds","groupBy","getToolWindowsLayoutState","observer","ResizeObserver","resize","contentRect","unobserve","hasFocus","focusLastActiveWindow","lastFocusedKey","focusMainContent","changeState","updater","interactionOutsideRef","onFocusLost","handleBodyFocus","focusLosingElement","focusReceivingElement","useOnFocusLost","renderStripe","toolbarButton","all","lastFocused","ToolWindowStateProvider","mainContentFocusableRef","renderSideDockedView","resizeDockSplitView","onDockResize","containerBounds","resizeDock","getSplitViewProps","firstAnchor","secondAnchor","horizontalSplitterProps","verticalSplitterProps","outerSplitterProps","innerSplitterProps","undockLayers","resizeUndock","setFloatingBound","renderInnerLayout","ToolWindowStateContext","useToolWindowState","hide","removeFromSidebar","moveToSide","changeViewMode","stretchWidth","stretchHeight","setFloatingBounds","isDocked","areInSameSection","curry","window1","window2","getViewModeType","ToolWindowsState","layoutToRestore","invalidWindows","targetKey","mapWindows","hideAll","restoreWindows","closableViewModes","viewModeType","sideOrIndex","targetSide","targetIndex","targetSideWindows","indexInTargetSide","sortedTargetWindows","insert","newTargetSideWindows","newValue","targetViewMode","stretch","mapFn","mapObjIndexed","property","currentFloatingBound","resizeSide","dock","isInResizingView","toolWindowState","_temp2","inputs","getAnchorOrientation","useToolWindow","contentRef","focusableContentRef","onFocusChange","contentHasFocus","setContentHasFocus","contentFocusWithinProps","toolWindowProps","autoHideProps","hideTimeoutId","windowFocusWithinProps","onFocusWithin","useAutoHide","forwardFocus","ignoreFocusedDescendant","toolWindowContentProps","toolWindowHeaderProps","ToolWindowSettingsIconMenu","viewModeActionGroup","VIEW_MODE_ACTION_GROUP_ID","moveToActionGroup","MOVE_TO_ACTION_GROUP_ID","resizeActions","TOOL_WINDOW_RESIZE_ACTION_GROUP_ID","maximizeAction","removeFromSideBarAction","REMOVE_TOOL_WINDOW_FROM_SIDEBAR_ACTION_ID","gearIconActions","ViewModeToActionId","StyledToolWindowHeader","StyledToolWindowHeaderActions","StyledToolWindowHeaderContent","DefaultToolWindowHeader","additionalActions","Toolbar","DOCK_TOOL_WINDOW_ACTION_ID","StyledToolWindowContainer","StyledToolWindowContent","DefaultToolWindowContext","useDefaultToolWindowContext","DefaultToolWindow","headerContent","mainContentTitle","defaultToolWindowContext","useToolWindowActions","getToolWindowNumberFromShortcut","num","DefaultToolWindowToolbarButton","showNumber","getActivateToolWindowActionId","number","DefaultToolWindows","showNumbers","toolWindowsRef","windowById","useToolWindowsActions","getPresentation","MultiViewToolWindow","groupTabs","isToolWindowFocused","setToolWindowFocused","activeKey","setActiveKey","defaultActiveKey","onActiveKeyChange","contents","toArray","validChild","MultiContentToolWindowContent","renderedViewSwitcher","onSelectionChange","tabContent","previousKeys","usePrevious","newActiveKey","activeContent","View","DOCK_PINNED_MODE_ACTION_ID","DOCK_UNPINNED_MODE_ACTION_ID","UNDOCK_MODE_ACTION_ID","FLOAT_MODE_ACTION_ID","WINDOW_MODE_ACTION_ID","HEIGHT_RESIZE_STEP","WIDTH_RESIZE_STEP","anchors","getAnchorName","docked_pinned","docked_unpinned","undock","float","createDefaultActionGroup","alert","resizeGroup","isAnySideWindowWindowOpen","getOrdinal","description","n","ord","borderStyle","borderPropToCssProp","StyledToolbar","horizontal","vertical","StyledShowMoreButton","StyledHorizontalToolbar","StyledVerticalToolbar","StyledToolbarContent","shouldWrap","firstOverflowedIndex","OrientationContext","overflowBehavior","rootProps","showMoreButtonRef","isOverflowPopupVisible","setOverflowPopupVisible","popupHeight","setPopupHeight","firstOverflowedChildIndex","setFirstOverflowedChildIndex","firstOverflowedChildRef","childElements","firstOverflowedChild","toolbarProps","onMouseMove","firstOverflowedElement","shouldShow","onMouseLeave","toolbarOverflowPopupProps","showOverflowPopup","ToolbarInOverlay","firstVisibleIndex","ToolbarSeparator","ActionHelpTooltip","helpText","link","tooltipProps","Tooltip","multiline","Description","HelpTooltip","inputTriggerRef","useTooltipTriggerState","fallbackRef","positionAria","updatePosition","TooltipTriggerAndOverlay","trigger","StyledTooltip","tooltipBackground","hasPointer","tooltipBorderColor","WITH_POINTER_BORDER_RADIUS","StyledShortcut","StyledHeader","fontSizeDelta","StyledDescription","placementToPointerSide","center","withPointer","isInteractive","pointerPositionStyle","TooltipContext","useTooltip","TooltipPointer","tooltipRef","_Tooltip","POINTER_THICKNESS","TRANSLATE","sideStyles","StyledTooltipPointer","POINTER_WIDTH","POINTER_HEIGHT","normalizeCssValue","withMin","withMax","HEIGHT_OFFSET","WIDTH_OFFSET","limitPointerPositionStyles","applyVerticalMinMax","identity","applyHorizontalMinMax","getOffsetCssProp","pointerPositionToOffsetStyle","offsetValue","lastMouseClientPos","globalMoveHandler","fakeTarget","visibility","coordinatesSource","_updatePosition","useMouseEventOverlayPosition","setInteractive","useTooltipTrigger","FocusableProvider","normalizeChildren","useAriaTooltipTrigger","StyledValidationTooltip","StyledWarningValidationTooltip","SpeedSearchTreeNode","TreeNode","SpeedSearchTree","treeRef","hideSpeedSearchPopup","treeProps","treeContext","useSpeedSearchTree","useTreeVirtualizer","TreeContext","StyledTree","collectionSpeedSearch","TreeKeyboardDelegate","speedSearchKeyboardProps","selectableTree","useSelectableTree","getKeyLeftOf","getKeyRightOf","TREE_ICON_SIZE","StyledTreeNodeIcon","getIcon","iconPath","TreeNodeIcon","useTreeNodeToggleButton","treeNodeToggleButtonProps","selectedDescendantKeys","toggleSelection","StyledTreeNode","level","onActionRef","treeNodeProps","onDoubleClick","useTreeNode","selectionKeyDown","focusedItem","isExpandable","onNodeKeyDown","shouldToggle","shiftKey","useSelectParentOfRemovedSelectedNode","previousCollectionRef","rawSelection","invalid","valid","invalidKey","useCollectionCacheInvalidation","cacheInvalidation","invalidators","lastInvalidators","anInvalidator","Symbol","iterator","TreeCollection","keyMap","iterable","last","visit","nextKey","prevKey","_Symbol$iterator","getKeyBefore","getKeyAfter","idx","getSingleChildrenKeys","getSingleChildrenKeysRecursive","childNodesIterator","firstChild","done","noMoreChildren","isEmptyIterable","TreeSelectionManager","expandSelection","expandKeys","getExpandAndShrinkKeys","shrinkSelection","shrinkKeys","recursivelyGetExpandAndShrinkKeys","previousChild","newKeys","parentDescendants","getAllDescendants","getAllRoots","descendants","stopKeys","flat","_TreeCollection","rootKeys","getAllExpandableKeys","rootNodes","recursivelyAddExpandableKeys","setExpandedKeys","selectionState","useMultipleSelectionState","tree","useCollection","latestState","expandAll","collapseAll","useTreeRef","newExpandedKeys","toggleTreeNode","expandedSiblings","getRootItemKeys","getChildItems","siblings","getSiblings","aKey","sectionItems","res","FlattenedTreeLayout","buildChild","layoutNode","doBuildCollection","padding","visibleNodes","maxY","isLoading","Rect","visibleRect","loaderHeight","loader","LayoutInfo","layoutInfos","placeholderHeight","getVisibleLayoutInfos","useTreeActions","collectSelectableItemsRecursive","collectedItems","NestedSelection","cache","WeakMap","getSelectionState","itemsInSubtree","collectSelectableItems","cachedState","allDescendantsStates","SpeedSearchTreeWithCheckboxes","nestedSelection","otherInvalidators","StyledCheckboxWrapper","TreeNodeCheckbox","selectItemOnPress","itemContext","useNestedSelectionState","selectedKeysProp","defaultSelectedKeys","onSelectedKeysChange","selectedKeysSetter","useControllableSet","ListLayout","keyToWidth","visibleContentWidth","buildItem","buildNode","buildDivider","rectHeight","estimatedSize","buildCollection","getVisibleContentWidth","invalidateEverything","layoutNodes","newRect","oldRect","validate","invalidationContext","lastWidth","updateItemSize","changed","visibleViews","view","itemContentWidth","intersects","getVisibleRect","isWordSeparator","isWhitespace","char","test","isUpperCase","isMeaningfulChar","ch","rawPattern","isStarts","isStart","pattern","continuous","inputIndex","patternIndex","lastMatch","chars","previousChar","useAriaSelectableCollection","useOriginalSelectableItem","styledComponents","ThemeConsumer","directChildRef","focusManagerRef","forceFocusFirst","containerElement","focusFirst","tabbable","WrappedFocusScope","GetFocusManager","savedUserSelect","handlersRef","webkitUserSelect","pageX","pageY","dragStarted","runAfterTransition","OverflowObserver","callback","data","mutations","mutation","removedNodes","intersectionObserver","addedNodes","IntersectionObserver","sortedEntries","entry","time","validEntries","uniqBy","newHiddenElements","isIntersecting","newVisibleElements","previouslyOverflowedElements","currentOverflowElements","childElement","scrollableContainerRef","rootMargin","setOverflowedElements","overflowObserver","change","getExpandAllKeys","roots","processItem","getExpandedToNodesKeys","targetNodeKeys","targetNodeKeySet","childValues","childValue","dfs","bfsVisit","bfs","parentValue","childNode","sortTreeNodesInPlace","by","compareFn","aa","bb","Context","nullErrorMessage","possiblyBlurredElement","getFocusableTreeWalker","ImmutableSet","setValueWithMutation","_len2","_key2","_len3","_key3","mutate","createSetInterface","currentValue","useStateSetterForSet","t","prototype","hasOwnProperty","call","for","o","amp","apos","gt","lt","nbsp","quot","u","s","l","f","d","p","m","h","k","$","v","S","z","w","A","E","L","M","O","I","j","B","R","T","C","D","F","N","P","Z","G","H","q","U","V","W","Q","X","J","K","Y","tt","nt","et","rt","ot","ct","_t","ut","it","st","ft","dt","pt","mt","yt","ht","kt","exec","Ht","HIGH","xt","bt","$t","vt","St","zt","wt","trim","At","Et","textAlign","Lt","Mt","Ot","It","jt","endsWith","trimEnd","Bt","decodeURIComponent","Rt","Tt","Ct","Dt","Ft","Nt","Pt","Zt","Gt","shift","qt","overrides","slugify","namedCodesToUnicode","forceInline","forceBlock","wrapper","forceWrapper","blockQuote","breakLine","breakThematic","codeBlock","MAX","codeFenced","codeInline","LOW","footnote","footnoteReference","href","gfmTask","checked","readOnly","enforceAtxHeadings","headingSetext","htmlComment","image","alt","linkAngleBraceStyleDetector","linkBareUrlDetector","linkMailtoDetector","orderedList","unorderedList","newlineCoalescer","paragraph","refImage","refLink","table","tableSeparator","MIN","textBolded","MED","textEmphasized","textEscaped","textMarked","textStrikethroughed","disableParsingRawHTML","htmlBlock","htmlSelfClosing","substring","ApiDescription","of","docgenInfo","Markdown","MDXComponents","useAutoLinkedJsDoc","useComponentLinkMap","docs","useDocusaurusContext","globalData","versions","version","linkMap","doc","componentName","InlineCode","componentLinkMap","comment","toCommentBlock","url","line","StyledSvg","StyledExpandButton","Expandable","onExpand","setIsExpandable","viewBox","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","transform","icons","clsx","playgroundHeader","flex","LivePreviewLoader","ErrorFallback","tryAgain","errorFallback","ErrorBoundaryTryAgainButton","Preview","BrowserOnly","ErrorBoundary","params","LivePreview","LiveError","ResultWithHeader","Translate","playgroundPreview","ThemedLiveEditor","isBrowser","useIsBrowser","LiveEditor","playgroundEditor","EditorWithHeader","ThemeProvider","Theme","lightThemeJson","Playground","transformCode","prismTheme","usePrismTheme","noInline","metastring","playgroundContainer","LiveProvider","SpeedSearchContainer","CollectionSpeedSearchContainer","useSpeedSearchList","listState","otherOutputs","SpeedSearchList","StyledIconLiveIndicator","SpeedSearch","speedSearchState","Tree","itemType","ProgressBarPauseButton","onPausedChange","StyledDropdownContainer","StyledDropdownValue","Dropdown","useSelectState","valueProps","useSelect","selectedItem","WithLoading","juiComponents","ExampleApp","darculaThemeJson","highContrastThemeJson","MonacoEditor","themed","noPadding","CodeBlock","live","scope","ReactLiveScope","CodeWrapper","Code","inlineCode","DefaultShortcut","frontMatter","contentTitle","metadata","assets","toc","layoutProps","MDXLayout","MDXContent","components","mdx","mdxType","parentName","isMDXComponent"],"sourceRoot":""}