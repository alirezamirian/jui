"use strict";(self.webpackChunk_intellij_platform_core=self.webpackChunk_intellij_platform_core||[]).push([[8994],{"./src/Tooltip/Tooltip.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{u:()=>_Tooltip});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_react_aria_tooltip__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("../../node_modules/@react-aria/tooltip/dist/module.js"),_react_aria_utils__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../../node_modules/@react-aria/utils/dist/module.js"),_intellij_platform_core_styled__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/styled.ts"),_intellij_platform_core_style_constants__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/style-constants.ts"),_TooltipContext__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/Tooltip/TooltipContext.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const StyledTooltip=_intellij_platform_core_styled__WEBPACK_IMPORTED_MODULE_2__.zo.div`
  box-sizing: content-box;
  max-width: ${({theme,multiline})=>multiline?`${theme.value("HelpTooltip.maxWidth")??250}px`:null};
  white-space: ${({multiline})=>multiline?null:"nowrap"};
  display: inline-flex;
  flex-direction: column;
  gap: ${({theme})=>theme.value("HelpToolTip.verticalGap")??4}px;
  background: ${({theme})=>theme.color("ToolTip.background",theme.dark?"#3c3f41":"#f2f2f2")};
  color: ${({theme})=>theme.color("ToolTip.foreground",theme.dark?"#bfbfbf":"#000")};
  padding: ${({theme,multiline})=>multiline?theme.inset("HelpTooltip.defaultTextBorderInsets")||"0.5rem 0.8125rem 0.625rem 0.625rem":theme.inset("HelpTooltip.smallTextBorderInsets")||"0.375rem 0.75rem 0.4375rem 0.625rem"};
  line-height: 1.2;
  border-style: solid;
  border-width: ${({theme})=>theme.value("ToolTip.paintBorder")?"1px":"0px"};
  border-color: ${({theme})=>theme.color("ToolTip.borderColor",theme.dark?"#636569":"#adadad")};
  ${_intellij_platform_core_style_constants__WEBPACK_IMPORTED_MODULE_3__.s};
`,StyledShortcut=_intellij_platform_core_styled__WEBPACK_IMPORTED_MODULE_2__.zo.kbd`
  all: unset;
  color: ${({theme})=>theme.color("ToolTip.shortcutForeground",theme.dark?"#999999":"#787878")};
`,StyledHeader=_intellij_platform_core_styled__WEBPACK_IMPORTED_MODULE_2__.zo.div`
  font-size: ${({theme})=>theme.fontSizeDelta("HelpTooltip.fontSizeDelta")};
  display: flex;
  gap: 0.5rem;
`,StyledDescription=_intellij_platform_core_styled__WEBPACK_IMPORTED_MODULE_2__.zo.div`
  color: ${({theme})=>theme.color("Tooltip.infoForeground",theme.commonColors.contextHelpForeground)};
  font-size: ${({theme})=>theme.fontSizeDelta("HelpTooltip.descriptionSizeDelta")};
`,StyledLink=_intellij_platform_core_styled__WEBPACK_IMPORTED_MODULE_2__.zo.div`
  color: ${({theme})=>theme.color("ToolTip.linkForeground",theme.commonColors.linkForegroundEnabled)};
  a,
  [role="link"] {
    // Maybe target Link instead, without important. It didn't work as expected, in the first try tho.
    color: inherit !important;
  }
`,Tooltip=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((function Tooltip({children,multiline,...props},forwardedRef){const ref=(0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_4__.B3)(forwardedRef),{state,isInteractive}=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_TooltipContext__WEBPACK_IMPORTED_MODULE_5__.d)||{},{tooltipProps}=(0,_react_aria_tooltip__WEBPACK_IMPORTED_MODULE_6__.l)(props,state?{...state,open:isInteractive?state?.open:()=>{}}:state);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(StyledTooltip,{multiline,...tooltipProps,className:props.className,ref,children})})),_Tooltip=Object.assign(Tooltip,{Header:StyledHeader,Shortcut:StyledShortcut,Description:StyledDescription,Link:StyledLink});try{Tooltip.displayName="_Tooltip",Tooltip.__docgenInfo={description:"",displayName:"_Tooltip",props:{multiline:{defaultValue:null,description:"",name:"multiline",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Tooltip/Tooltip.tsx#_Tooltip"]={docgenInfo:_Tooltip.__docgenInfo,name:"_Tooltip",path:"src/Tooltip/Tooltip.tsx#_Tooltip"})}catch(__react_docgen_typescript_loader_error){}},"./src/Tooltip/TooltipContext.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{d:()=>TooltipContext});const TooltipContext=__webpack_require__("../../node_modules/react/index.js").createContext(null)},"./src/Tooltip/TooltipTrigger.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{a:()=>TooltipTrigger});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_react_stately_tooltip__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/@react-stately/tooltip/dist/module.js"),_intellij_platform_core_utils_useMouseEventOverlayPosition__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/utils/useMouseEventOverlayPosition.tsx"),_intellij_platform_core_styled__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/styled.ts"),_intellij_platform_core_Tooltip_TooltipTriggerAndOverlay__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/Tooltip/TooltipTriggerAndOverlay.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const TooltipTrigger=({tooltip,children,delay=500,...props})=>{const triggerRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),theme=(0,_intellij_platform_core_styled__WEBPACK_IMPORTED_MODULE_2__.Fg)(),state=(0,_react_stately_tooltip__WEBPACK_IMPORTED_MODULE_3__.O)({...props,delay}),overlayRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),{overlayProps,updatePosition}=(0,_intellij_platform_core_utils_useMouseEventOverlayPosition__WEBPACK_IMPORTED_MODULE_4__.u)({overlayRef,isOpen:state.isOpen,placement:"bottom left",shouldFlip:!0,offset:theme.value("HelpTooltip.mouseCursorOffset")??20});return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{state.isOpen&&requestAnimationFrame((()=>{updatePosition()}))}),[state.isOpen]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_intellij_platform_core_Tooltip_TooltipTriggerAndOverlay__WEBPACK_IMPORTED_MODULE_5__.t,{tooltip,tooltipOverlayProps:overlayProps,trigger:children,state,overlayRef,triggerRef,showOnFocus:!1,isDisabled:props.isDisabled})};TooltipTrigger.displayName="TooltipTrigger";try{TooltipTrigger.displayName="TooltipTrigger",TooltipTrigger.__docgenInfo={description:"Sets {@param tooltip} for its {@param children}.\nShowing tooltip on focus and controlled open state are not supported at the moment, based on how tooltip works in the\nreference impl, and since tooltip is positioned based on cursor position. Positioning the tooltip based on cursor\nposition requires tooltip to be opened on hover. That's why neither controlling opened state nor showing the tooltip\non focus are supported here. {@link PositionedTooltipTrigger } allows for positioning the tooltip with respect to the\ntrigger element, and offers more options.",displayName:"TooltipTrigger",props:{tooltip:{defaultValue:null,description:"Tooltip content. The value should be an element of type {@link Tooltip }.",name:"tooltip",required:!0,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},children:{defaultValue:null,description:"Either a focusable component, or a render function which accepts trigger props and passes it to some component.",name:"children",required:!0,type:{name:"ReactNode | ((props: HTMLAttributes<HTMLElement> & { ref: RefObject<HTMLElement>; }) => ReactNode)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Tooltip/TooltipTrigger.tsx#TooltipTrigger"]={docgenInfo:TooltipTrigger.__docgenInfo,name:"TooltipTrigger",path:"src/Tooltip/TooltipTrigger.tsx#TooltipTrigger"})}catch(__react_docgen_typescript_loader_error){}},"./src/Tooltip/TooltipTriggerAndOverlay.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{t:()=>TooltipTriggerAndOverlay});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_react_aria_tooltip__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("../../node_modules/@react-aria/tooltip/dist/module.js"),_react_aria_focus__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../../node_modules/@react-aria/focus/dist/module.js"),_react_aria_overlays__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/@react-aria/overlays/dist/module.js"),_react_aria_utils__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/@react-aria/utils/dist/module.js"),_intellij_platform_core_Tooltip_TooltipContext__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/Tooltip/TooltipContext.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const TooltipTriggerAndOverlay=({tooltip,trigger,state,tooltipOverlayProps,overlayRef,triggerRef,showOnFocus,...props})=>{const[isInteractive,setInteractive]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),{triggerProps,tooltipProps}=useTooltipTrigger(props,{...state,close:isInteractive?state.close:()=>state.close(!0)},triggerRef);return showOnFocus||delete triggerProps.onFocus,(0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.bt)((()=>{setInteractive(null!==overlayRef.current?.querySelector('a, button, [role="button"], [role=link]'))})),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[normalizeChildren(trigger,{...triggerProps,ref:triggerRef}),state.isOpen&&!props.isDisabled&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_react_aria_overlays__WEBPACK_IMPORTED_MODULE_3__.aV,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_intellij_platform_core_Tooltip_TooltipContext__WEBPACK_IMPORTED_MODULE_4__.d.Provider,{value:{state,isInteractive},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{...(0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.dG)(tooltipOverlayProps,tooltipProps),ref:overlayRef,children:tooltip})})})]})};function normalizeChildren(children,triggerProps){return"function"==typeof children?children(triggerProps):react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(children)&&"string"==typeof children.type?react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(children,triggerProps):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_react_aria_focus__WEBPACK_IMPORTED_MODULE_5__.tB,{...triggerProps,children})}normalizeChildren.displayName="normalizeChildren";const useTooltipTrigger=(props,state,ref)=>{const{triggerProps,tooltipProps}=(0,_react_aria_tooltip__WEBPACK_IMPORTED_MODULE_6__.Q)(props,state,ref);return triggerProps.onPointerDown=()=>{ref.current instanceof HTMLInputElement||state.close(!0)},delete triggerProps.onMouseDown,{triggerProps,tooltipProps}};try{TooltipTriggerAndOverlay.displayName="TooltipTriggerAndOverlay",TooltipTriggerAndOverlay.__docgenInfo={description:"Sets {@param tooltip} for its {@param children}. It doesn't handle tooltip positioning, and so shouldn't be used\ndirectly. {@param tooltipOverlayProps} should be used to apply the intended positioning.\n\nTODO: Implement timeout-based auto-hide (https://jetbrains.github.io/ui/controls/tooltip/#19)\nTODO: shadow",displayName:"TooltipTriggerAndOverlay",props:{tooltip:{defaultValue:null,description:"Tooltip content. The value should be an element of type {@link Tooltip }.",name:"tooltip",required:!0,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},tooltipOverlayProps:{defaultValue:null,description:"props to be applied on the tooltip overlay, for positioning.",name:"tooltipOverlayProps",required:!0,type:{name:"HTMLProps<HTMLDivElement>"}},trigger:{defaultValue:null,description:"Either a focusable component, or a render function which accepts trigger props and passes it to some component.",name:"trigger",required:!0,type:{name:"ReactNode | ((props: HTMLAttributes<HTMLElement> & { ref: RefObject<HTMLElement>; }) => ReactNode)"}},state:{defaultValue:null,description:"",name:"state",required:!0,type:{name:"TooltipTriggerState"}},showOnFocus:{defaultValue:null,description:"",name:"showOnFocus",required:!1,type:{name:"boolean"}},overlayRef:{defaultValue:null,description:"",name:"overlayRef",required:!0,type:{name:"RefObject<HTMLDivElement>"}},triggerRef:{defaultValue:null,description:"",name:"triggerRef",required:!0,type:{name:"RefObject<HTMLElement>"}},isDisabled:{defaultValue:null,description:"",name:"isDisabled",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Tooltip/TooltipTriggerAndOverlay.tsx#TooltipTriggerAndOverlay"]={docgenInfo:TooltipTriggerAndOverlay.__docgenInfo,name:"TooltipTriggerAndOverlay",path:"src/Tooltip/TooltipTriggerAndOverlay.tsx#TooltipTriggerAndOverlay"})}catch(__react_docgen_typescript_loader_error){}},"./src/utils/overflow-utils/useOverflowObserver.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{o:()=>useOverflowObserver});var react=__webpack_require__("../../node_modules/react/index.js"),array_utils=__webpack_require__("./src/utils/array-utils.ts");function _defineProperty(obj,key,value){return(key=function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"==typeof key?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}class OverflowObserver{constructor(callback){this.callback=callback,_defineProperty(this,"mutationObserver",void 0),_defineProperty(this,"data",new Map),this.mutationObserver=new MutationObserver((mutations=>{mutations.forEach((mutation=>{const target=mutation.target;target instanceof Element&&(mutation.removedNodes.forEach((node=>{node instanceof Element&&this.data.get(target)?.intersectionObserver.unobserve(node)})),mutation.addedNodes.forEach((node=>{node instanceof Element&&this.data.get(target)?.intersectionObserver.observe(node)})))}))}))}observe(target,options){this.data.get(target)?.intersectionObserver.disconnect();const intersectionObserver=new IntersectionObserver((entries=>{const data=this.data.get(target),newHiddenElements=entries.map((entry=>!entry.isIntersecting&&entry.target instanceof Element?entry.target:void 0)).filter(array_utils.N),newVisibleElements=entries.map((entry=>entry.isIntersecting&&entry.target instanceof Element?entry.target:null)).filter(array_utils.N),previouslyOverflowedElements=data?.currentOverflowElements||[],overflowedElements=previouslyOverflowedElements.filter((element=>!newVisibleElements.includes(element))).concat(newHiddenElements).filter((element=>!(element instanceof HTMLElement&&0===element.offsetWidth&&0===element.offsetHeight)));this.callback({previouslyOverflowedElements,overflowedElements,target},this),data&&(data.currentOverflowElements=overflowedElements)}),{...options,root:target});[...target?.children||[]].forEach((childElement=>{intersectionObserver.observe(childElement)})),this.data.set(target,{intersectionObserver,currentOverflowElements:[]}),this.mutationObserver.observe(target,{childList:!0})}unobserve(target){this.data.get(target)?.intersectionObserver.disconnect()}disconnect(){[...this.data.values()].forEach((({intersectionObserver})=>intersectionObserver.disconnect())),this.data=new Map,this.mutationObserver.disconnect()}}function useOverflowObserver(scrollableContainerRef,{threshold=.9,rootMargin="0px"}={}){const[overflowedElements,setOverflowedElements]=(0,react.useState)([]);return(0,react.useEffect)((()=>{const overflowObserver=new OverflowObserver((change=>{setOverflowedElements(change.overflowedElements)}));return overflowObserver.observe(scrollableContainerRef.current,{rootMargin,threshold}),()=>{overflowObserver.disconnect()}}),[scrollableContainerRef.current]),{overflowedElements}}try{useOverflowObserver.displayName="useOverflowObserver",useOverflowObserver.__docgenInfo={description:"Given a ref to a scrollable container, returns the child elements that are not completely visible and\nare off view because of scroll.",displayName:"useOverflowObserver",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/utils/overflow-utils/useOverflowObserver.tsx#useOverflowObserver"]={docgenInfo:useOverflowObserver.__docgenInfo,name:"useOverflowObserver",path:"src/utils/overflow-utils/useOverflowObserver.tsx#useOverflowObserver"})}catch(__react_docgen_typescript_loader_error){}},"./src/utils/useMouseEventOverlayPosition.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{u:()=>useMouseEventOverlayPosition});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_react_aria_utils__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@react-aria/utils/dist/module.js"),_react_aria_overlays__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/@react-aria/overlays/dist/module.js");let globalMoveHandler=null,lastMouseClientPos={x:0,y:0};function useMouseEventOverlayPosition(options){const targetRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);(0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_1__.bt)((()=>{if(globalMoveHandler||(globalMoveHandler=e=>{lastMouseClientPos={x:e.clientX,y:e.clientY}},document.addEventListener("mousemove",globalMoveHandler)),!targetRef.current){const fakeTarget=document.createElement("span");return Object.assign(fakeTarget.style,{width:"0px",height:"0px",pointerEvents:"none",position:"fixed",visibility:"hidden"}),document.body.appendChild(fakeTarget),targetRef.current=fakeTarget,()=>{fakeTarget.remove()}}}),[]),(0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_1__.bt)((()=>{options.isOpen&&targetRef.current&&(targetRef.current.style.left=`${lastMouseClientPos.x}px`,targetRef.current.style.top=`${lastMouseClientPos.y}px`,updatePosition())}),[options.isOpen,targetRef.current]);const{updatePosition,...result}=(0,_react_aria_overlays__WEBPACK_IMPORTED_MODULE_2__.tN)({...options,targetRef});return{...result,updatePosition:e=>{targetRef.current&&e&&(targetRef.current.style.left=`${e.clientX}px`,targetRef.current.style.top=`${e.clientY}px`),updatePosition()}}}try{useMouseEventOverlayPosition.displayName="useMouseEventOverlayPosition",useMouseEventOverlayPosition.__docgenInfo={description:"",displayName:"useMouseEventOverlayPosition",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/utils/useMouseEventOverlayPosition.tsx#useMouseEventOverlayPosition"]={docgenInfo:useMouseEventOverlayPosition.__docgenInfo,name:"useMouseEventOverlayPosition",path:"src/utils/useMouseEventOverlayPosition.tsx#useMouseEventOverlayPosition"})}catch(__react_docgen_typescript_loader_error){}}}]);
//# sourceMappingURL=8994.5163a33e.iframe.bundle.js.map