"use strict";(self.webpackChunk_intellij_platform_core=self.webpackChunk_intellij_platform_core||[]).push([[5062],{"../../node_modules/@react-aria/utils/dist/scrollIntoView.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function $2f04cbc44ee30ce0$export$53a0910f038337bd(scrollView,element){let offsetX=$2f04cbc44ee30ce0$var$relativeOffset(scrollView,element,"left"),offsetY=$2f04cbc44ee30ce0$var$relativeOffset(scrollView,element,"top"),width=element.offsetWidth,height=element.offsetHeight,x=scrollView.scrollLeft,y=scrollView.scrollTop,{borderTopWidth,borderLeftWidth}=getComputedStyle(scrollView),borderAdjustedX=scrollView.scrollLeft+parseInt(borderLeftWidth,10),borderAdjustedY=scrollView.scrollTop+parseInt(borderTopWidth,10),maxX=borderAdjustedX+scrollView.clientWidth,maxY=borderAdjustedY+scrollView.clientHeight;offsetX<=x?x=offsetX-parseInt(borderLeftWidth,10):offsetX+width>maxX&&(x+=offsetX+width-maxX),offsetY<=borderAdjustedY?y=offsetY-parseInt(borderTopWidth,10):offsetY+height>maxY&&(y+=offsetY+height-maxY),scrollView.scrollLeft=x,scrollView.scrollTop=y}function $2f04cbc44ee30ce0$var$relativeOffset(ancestor,child,axis){const prop="left"===axis?"offsetLeft":"offsetTop";let sum=0;for(;child.offsetParent&&(sum+=child[prop],child.offsetParent!==ancestor);){if(child.offsetParent.contains(ancestor)){sum-=ancestor[prop];break}child=child.offsetParent}return sum}__webpack_require__.d(__webpack_exports__,{z:()=>$2f04cbc44ee30ce0$export$53a0910f038337bd})},"./src/Tabs/3-TabThemes.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DebuggerTheme:()=>DebuggerTheme,EditorTheme:()=>EditorTheme,ToolWindowTheme:()=>ToolWindowTheme,__namedExportsOrder:()=>__namedExportsOrder,default:()=>_3_TabThemes_stories});var PlatformIcon=__webpack_require__("./src/Icon/PlatformIcon.tsx"),TabContentLayout=__webpack_require__("./src/Tabs/TabContentLayout.tsx"),jsx_runtime=(__webpack_require__("../../node_modules/react/index.js"),__webpack_require__("../../node_modules/react/jsx-runtime.js"));const DebuggerTabContent=({icon,title,closeButton})=>(0,jsx_runtime.jsx)(TabContentLayout.X,{startIcon:icon,title,endIcon:closeButton});DebuggerTabContent.displayName="DebuggerTabContent";try{DebuggerTabContent.displayName="DebuggerTabContent",DebuggerTabContent.__docgenInfo={description:"",displayName:"DebuggerTabContent",props:{icon:{defaultValue:null,description:"",name:"icon",required:!0,type:{name:"ReactNode"}},title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"ReactNode"}},closeButton:{defaultValue:null,description:'Close button for the tab. Use {@link TabCloseButton} to render the close button\nfor the tab.\n@example ```tsx\n<DebuggerTabContent\n  closeButton={\n    <TooltipTrigger\n      tooltip={<ActionTooltip actionName="Close Tab" shortcut="^â‡§F4" />}\n    >\n      <TabCloseButton onPress={}></TabCloseButton>\n    </TooltipTrigger>\n  }\n/>\n```',name:"closeButton",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Tabs/DebuggerTabs/DebuggerTabContent.tsx#DebuggerTabContent"]={docgenInfo:DebuggerTabContent.__docgenInfo,name:"DebuggerTabContent",path:"src/Tabs/DebuggerTabs/DebuggerTabContent.tsx#DebuggerTabContent"})}catch(__react_docgen_typescript_loader_error){}var EditorTabContent=__webpack_require__("./src/Tabs/EditorTabs/EditorTabContent.tsx"),EditorTabs=__webpack_require__("./src/Tabs/EditorTabs/EditorTabs.tsx"),Tabs=__webpack_require__("./src/Tabs/Tabs.tsx"),StyledDebuggerTab=__webpack_require__("./src/Tabs/DebuggerTabs/StyledDebuggerTab.ts");const DebuggerTabs=props=>(0,jsx_runtime.jsx)(Tabs.m,{...props,TabComponent:StyledDebuggerTab.U,focusable:!1});DebuggerTabs.displayName="DebuggerTabs";try{DebuggerTabs.displayName="DebuggerTabs",DebuggerTabs.__docgenInfo={description:"",displayName:"DebuggerTabs",props:{shouldSelectOnPressUp:{defaultValue:{value:"false."},description:"Whether selected tab should change on press up instead of press down.",name:"shouldSelectOnPressUp",required:!1,type:{name:"boolean"}},active:{defaultValue:null,description:'Enables "active" style on tabs. Is usually related to a container having focus.',name:"active",required:!1,type:{name:"boolean"}},TabsComponent:{defaultValue:null,description:"",name:"TabsComponent",required:!1,type:{name:'StyledComponent<"div", Theme<KnownThemePropertyPath>, { noBorders?: boolean; }, never>'}},noBorders:{defaultValue:{value:"false"},description:"Removes the top and bottom border when passed.\nIt's still not clear whether such option makes sense or not, but\nat least in common use cases like in tool windows, it seems borders are already there and there should be a way\nof removing tab borders. On the other hand, when Tabs is used without any assumption about the surrounding UI,\nit kind of makes sense to have the top and bottom borders by default. So that's why this is made an option for\nnow, maybe until things are clearer.",name:"noBorders",required:!1,type:{name:"boolean"}},multiRow:{defaultValue:{value:"false"},description:"If set to true, tabs will be wrapped into multiple rows if needed.\nNOTE: In the original implementation, in multi row mode, rows are separated by a border. It's not easy to achieve\nthis when we are implementing this feature with a simple `flex-wrap: wrap` css rule. It doesn't seem that\nimportant, but we can achieve something similar by some css tricks like the ones suggested here:\nhttps://stackoverflow.com/questions/36128333/row-lines-for-flex-container-css",name:"multiRow",required:!1,type:{name:"boolean"}},noOverflowMenu:{defaultValue:null,description:"Only effective when {@link multiRow } is not true.\nWhen set to true, tabs that couldn't be fitted into the available space, are either shrunk (if {@link noScroll }\nis set to true), or are just accessible by scroll.",name:"noOverflowMenu",required:!1,type:{name:"boolean"}},noScroll:{defaultValue:{value:"false"},description:"Only effective when {@link multiRow } is not true.\nIf set to true and multiRow is not true, it will prevent horizontal scroll of tabs. Depending on the value of\nIn this case:\n- if {@link noOverflowMenu } is not set to true, tabs that can't be fitted into the available space will be\n  accessible via an overflow menu.\n- if {@link noOverflowMenu } is set to true, the tabs will be fitted into the available space, and they will\n  be shrunk when needed.\n@todo : not implemented yet.",name:"noScroll",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Tabs/DebuggerTabs/DebuggerTabs.tsx#DebuggerTabs"]={docgenInfo:DebuggerTabs.__docgenInfo,name:"DebuggerTabs",path:"src/Tabs/DebuggerTabs/DebuggerTabs.tsx#DebuggerTabs"})}catch(__react_docgen_typescript_loader_error){}var ToolWindowTabs=__webpack_require__("./src/Tabs/ToolWindowTabs/ToolWindowTabs.tsx"),Item=__webpack_require__("./src/Collections/Item.ts");const _3_TabThemes_stories={title:"Components/Tabs/Tab Themes",component:Tabs.m,parameters:{controls:{exclude:"TabComponent"}}},EditorTheme={render:props=>(0,jsx_runtime.jsx)(EditorTabs.s,{...props,items:editorTabs,active:!0,children:tab=>(0,jsx_runtime.jsx)(Item.c,{textValue:tab.title,children:(0,jsx_runtime.jsx)(EditorTabContent.X,{icon:(0,jsx_runtime.jsx)(PlatformIcon.vq,{icon:tab.icon}),title:tab.title,pinned:tab.pinned})},tab.title)})},DebuggerTheme={render:props=>(0,jsx_runtime.jsx)(DebuggerTabs,{...props,items:debuggerTabs,children:tab=>(0,jsx_runtime.jsx)(Item.c,{textValue:tab.title,children:(0,jsx_runtime.jsx)(DebuggerTabContent,{icon:tab.icon&&(0,jsx_runtime.jsx)(PlatformIcon.vq,{icon:tab.icon}),title:tab.title})},tab.title)})},ToolWindowTheme={render:props=>(0,jsx_runtime.jsx)(ToolWindowTabs.N,{...props,items:toolWindowTabs,children:tab=>(0,jsx_runtime.jsx)(Item.c,{textValue:tab.title,children:(0,jsx_runtime.jsx)(TabContentLayout.X,{startIcon:(0,jsx_runtime.jsx)(PlatformIcon.vq,{icon:tab.icon}),title:tab.title})},tab.title)})},editorTabs=[{title:"Tabs.tsx",pinned:!0,icon:"fileTypes/javaScript"},{title:"Tabs.stories.tsx",pinned:!1,icon:"fileTypes/javaScript"},{title:"index.ts",pinned:!1,icon:"fileTypes/javaScript"},{title:"Tabs.test.ts",pinned:!1,icon:"fileTypes/javaScript"}],toolWindowTabs=[{title:"Project",icon:"nodes/project"},{title:"Project Files",icon:"nodes/folder"},{title:"Tests",icon:"scope/tests"}],debuggerTabs=[{title:"Console",icon:"debugger/console"},{title:"Frames",icon:null},{title:"Variables | Coroutines | idea.log",icon:null}];EditorTheme.parameters={...EditorTheme.parameters,docs:{...EditorTheme.parameters?.docs,source:{originalSource:"{\n  render: props => {\n    return <EditorTabs {...props} items={editorTabs} active>\n        {(tab: (typeof editorTabs)[number]) => <Item key={tab.title} textValue={tab.title}>\n            <EditorTabContent icon={<PlatformIcon icon={tab.icon} />} title={tab.title} pinned={tab.pinned} />\n          </Item>}\n      </EditorTabs>;\n  }\n}",...EditorTheme.parameters?.docs?.source}}},DebuggerTheme.parameters={...DebuggerTheme.parameters,docs:{...DebuggerTheme.parameters?.docs,source:{originalSource:"{\n  render: props => {\n    return <DebuggerTabs {...props} items={debuggerTabs}>\n        {(tab: (typeof debuggerTabs)[number]) => <Item key={tab.title} textValue={tab.title}>\n            <DebuggerTabContent icon={tab.icon && <PlatformIcon icon={tab.icon} />} title={tab.title} />\n          </Item>}\n      </DebuggerTabs>;\n  }\n}",...DebuggerTheme.parameters?.docs?.source}}},ToolWindowTheme.parameters={...ToolWindowTheme.parameters,docs:{...ToolWindowTheme.parameters?.docs,source:{originalSource:"{\n  render: props => {\n    return <ToolWindowTabs {...props} items={toolWindowTabs}>\n        {(tab: (typeof toolWindowTabs)[number]) => <Item key={tab.title} textValue={tab.title}>\n            <TabContentLayout startIcon={<PlatformIcon icon={tab.icon} />} title={tab.title} />\n          </Item>}\n      </ToolWindowTabs>;\n  }\n}",...ToolWindowTheme.parameters?.docs?.source}}};const __namedExportsOrder=["EditorTheme","DebuggerTheme","ToolWindowTheme"]},"./src/Button/BareButton.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{V:()=>BareButton});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_react_aria_button__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/@react-aria/button/dist/useButton.mjs"),_react_aria_utils__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@react-aria/utils/dist/useObjectRef.mjs"),_react_aria_utils__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/@react-aria/utils/dist/filterDOMProps.mjs"),_react_aria_utils__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../../node_modules/@react-aria/utils/dist/mergeProps.mjs");const BareButton=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((function BareButton({elementType:elementTypeProp,...props},forwardedRef){const elementType=elementTypeProp||(react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(props.children)&&"string"==typeof props.children.type?props.children.type:void 0)||"button",ref=(0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_1__.B)(forwardedRef),{buttonProps}=(0,_react_aria_button__WEBPACK_IMPORTED_MODULE_2__.U)({elementType,...props},ref),domProps=(0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_3__.z)(props),{autoFocus}=props;return react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(props.children,(0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_4__.d)(domProps,buttonProps,{autoFocus,ref}))}));try{BareButton.displayName="BareButton",BareButton.__docgenInfo={description:"A component to make arbitrary content an accessible button which is also able to be a tooltip trigger.",displayName:"BareButton",props:{children:{defaultValue:null,description:"The content to display in the button.",name:"children",required:!0,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},elementType:{defaultValue:null,description:"",name:"elementType",required:!1,type:{name:'JSXElementConstructor<any> | "button"'}},preventFocusOnPress:{defaultValue:null,description:"",name:"preventFocusOnPress",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Button/BareButton.tsx#BareButton"]={docgenInfo:BareButton.__docgenInfo,name:"BareButton",path:"src/Button/BareButton.tsx#BareButton"})}catch(__react_docgen_typescript_loader_error){}},"./src/IconButton/IconButton.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{hU:()=>IconButton});var _react_aria_interactions__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../../node_modules/@react-aria/interactions/dist/usePress.mjs"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_styled__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/styled.ts"),_react_aria_utils__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/@react-aria/utils/dist/useObjectRef.mjs"),_react_aria_utils__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("../../node_modules/@react-aria/utils/dist/mergeProps.mjs"),_react_aria_focus__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../../node_modules/@react-aria/focus/dist/useFocusable.mjs"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const StyledIconButton=_styled__WEBPACK_IMPORTED_MODULE_2__.zo.button`
  position: relative; // to allow absolutely positioned overlays like an dropdown icon at the bottom right corner
  background: none;
  color: inherit;
  border: 1px solid transparent;
  border-radius: 3px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  min-height: ${({minSize})=>`${minSize}px`};
  min-width: ${({minSize})=>`${minSize}px`};
  padding: 0;
  margin: 0;
  &:disabled {
    opacity: 0.25; // not quite accurate implementation. There might be better ways to style disabled state.
  }
  &:hover:not(:disabled) {
    background: ${({theme})=>theme.color("ActionButton.hoverBackground","#DFDFDF")};
    border-color: ${({theme})=>theme.color("ActionButton.hoverBorderColor","#DFDFDF")};
  }
  &:focus-visible:not(:disabled) {
    outline: none;
    background: ${({theme})=>theme.color("ActionButton.pressedBackground","#CFCFCF")};
    border-color: ${({theme})=>theme.color("ActionButton.focusedBorderColor",theme.dark?"#5eacd0":"#62b8de")};
  }
  &:active:not(:disabled),
  &.active:not(:disabled) {
    background: ${({theme})=>theme.color("ActionButton.pressedBackground","#CFCFCF")};
    border-color: ${({theme})=>theme.color("ActionButton.pressedBorderColor","#CFCFCF")};
  }
`,IconButton=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((function IconButton({minSize=22,preventFocusOnPress=!0,excludeFromTabOrder=!0,isPressed:isPressedInput,isDisabled,onPress,onPressChange,onPressEnd,onPressStart,onPressUp,shouldCancelOnPointerExit,...otherProps},forwardedRef){const ref=(0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_3__.B)(forwardedRef),{focusableProps}=(0,_react_aria_focus__WEBPACK_IMPORTED_MODULE_4__.k)({isDisabled},ref),{pressProps,isPressed}=(0,_react_aria_interactions__WEBPACK_IMPORTED_MODULE_5__.r)({ref,isPressed:isPressedInput,isDisabled,onPress,onPressChange,onPressEnd,onPressStart,onPressUp,shouldCancelOnPointerExit,preventFocusOnPress});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(StyledIconButton,{className:isPressed?"active":"",disabled:isDisabled,...(0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_6__.d)(pressProps,otherProps,focusableProps),minSize,tabIndex:excludeFromTabOrder&&!isDisabled?-1:void 0,ref})}));try{StyledIconButton.displayName="StyledIconButton",StyledIconButton.__docgenInfo={description:"",displayName:"StyledIconButton",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLButtonElement | null) => void) | RefObject<HTMLButtonElement> | null"}},minSize:{defaultValue:{value:"22"},description:"",name:"minSize",required:!1,type:{name:"number"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme<KnownThemePropertyPath>"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/IconButton/IconButton.tsx#StyledIconButton"]={docgenInfo:StyledIconButton.__docgenInfo,name:"StyledIconButton",path:"src/IconButton/IconButton.tsx#StyledIconButton"})}catch(__react_docgen_typescript_loader_error){}try{IconButton.displayName="IconButton",IconButton.__docgenInfo={description:"Icon button, aka Action Button, in the reference implementation.",displayName:"IconButton",props:{minSize:{defaultValue:{value:"22"},description:"The minimum width/height of the button.",name:"minSize",required:!1,type:{name:"number"}},excludeFromTabOrder:{defaultValue:{value:"true"},description:"Whether the button should be focusable by pressing tab. The default is true for icon buttons (aka. action buttons),\nwhich means they are not included in the tab order.",name:"excludeFromTabOrder",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/IconButton/IconButton.tsx#IconButton"]={docgenInfo:IconButton.__docgenInfo,name:"IconButton",path:"src/IconButton/IconButton.tsx#IconButton"})}catch(__react_docgen_typescript_loader_error){}},"./src/Tabs/DebuggerTabs/StyledDebuggerTab.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{U:()=>StyledDebuggerTab});var _intellij_platform_core_styled__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/styled.ts"),_intellij_platform_core_Tabs_StyledDefaultTab__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/Tabs/StyledDefaultTab.ts"),_intellij_platform_core_Tabs_TabTheme__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/Tabs/TabTheme.ts");const StyledDebuggerTab=(0,_intellij_platform_core_styled__WEBPACK_IMPORTED_MODULE_0__.zo)(_intellij_platform_core_Tabs_StyledDefaultTab__WEBPACK_IMPORTED_MODULE_1__.z)`
  ${({theme})=>(0,_intellij_platform_core_Tabs_TabTheme__WEBPACK_IMPORTED_MODULE_2__.s)((({theme})=>({underlineHeight:theme.value("DebuggerTabs.underlineHeight")??2,underlinedTabBackground:theme.color("DebuggerTabs.underlinedTabBackground")}))({theme}))};
`},"./src/Tabs/EditorTabs/EditorTabContent.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{X:()=>EditorTabContent});__webpack_require__("../../node_modules/react/index.js");var _intellij_platform_core_Icon__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/Icon/PlatformIcon.tsx"),_intellij_platform_core_Tabs_TabContentLayout__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/Tabs/TabContentLayout.tsx"),_intellij_platform_core_Tooltip__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/Tooltip/TooltipTrigger.tsx"),_intellij_platform_core_Tooltip__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/Tooltip/ActionTooltip.tsx"),_intellij_platform_core_Button__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/Button/BareButton.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const EditorTabContent=({icon,title,closeButton,onUnpin,pinned,containerProps})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_intellij_platform_core_Tabs_TabContentLayout__WEBPACK_IMPORTED_MODULE_2__.X,{startIcon:icon,title,containerProps,endIcon:pinned?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_intellij_platform_core_Tooltip__WEBPACK_IMPORTED_MODULE_3__.a,{tooltip:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_intellij_platform_core_Tooltip__WEBPACK_IMPORTED_MODULE_4__.M,{actionName:"Unpin Tab"}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_intellij_platform_core_Button__WEBPACK_IMPORTED_MODULE_5__.V,{onPress:onUnpin,excludeFromTabOrder:!0,preventFocusOnPress:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_intellij_platform_core_Icon__WEBPACK_IMPORTED_MODULE_6__.vq,{icon:"actions/pinTab"})})}):closeButton});EditorTabContent.displayName="EditorTabContent";try{EditorTabContent.displayName="EditorTabContent",EditorTabContent.__docgenInfo={description:"For rendering the content of Editor tabs. supports for file icon which is shown on the left and close or unpin\nbutton shown on the right.",displayName:"EditorTabContent",props:{icon:{defaultValue:null,description:"",name:"icon",required:!0,type:{name:"ReactNode"}},title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"ReactNode"}},closeButton:{defaultValue:null,description:'Close button, shown in place of "pin" button if not pinned. Use {@link TabCloseButton} to render the close button\nfor the tab.\n@example ```tsx\n<EditorTabContent\n  closeButton={\n    <TooltipTrigger\n      tooltip={<ActionTooltip actionName="Close Tab" shortcut="^â‡§F4" />}\n    >\n      <TabCloseButton onPress={}></TabCloseButton>\n    </TooltipTrigger>\n  }\n/>\n```',name:"closeButton",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},onUnpin:{defaultValue:null,description:"",name:"onUnpin",required:!1,type:{name:"(() => void)"}},pinned:{defaultValue:null,description:"",name:"pinned",required:!1,type:{name:"boolean"}},containerProps:{defaultValue:null,description:"",name:"containerProps",required:!1,type:{name:'Omit<HTMLProps<HTMLDivElement>, "as" | "ref">'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Tabs/EditorTabs/EditorTabContent.tsx#EditorTabContent"]={docgenInfo:EditorTabContent.__docgenInfo,name:"EditorTabContent",path:"src/Tabs/EditorTabs/EditorTabContent.tsx#EditorTabContent"})}catch(__react_docgen_typescript_loader_error){}},"./src/Tabs/EditorTabs/EditorTabs.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{s:()=>EditorTabs});var _intellij_platform_core_Tabs_Tabs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/Tabs/Tabs.tsx"),_StyledEditorTab__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/Tabs/EditorTabs/StyledEditorTab.ts"),_StyledEditorTabs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/Tabs/EditorTabs/StyledEditorTabs.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=(__webpack_require__("../../node_modules/react/index.js"),__webpack_require__("../../node_modules/react/jsx-runtime.js"));const EditorTabs=props=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_intellij_platform_core_Tabs_Tabs__WEBPACK_IMPORTED_MODULE_2__.m,{...props,TabComponent:_StyledEditorTab__WEBPACK_IMPORTED_MODULE_3__.o,TabsComponent:_StyledEditorTabs__WEBPACK_IMPORTED_MODULE_4__.p,focusable:!1});EditorTabs.displayName="EditorTabs";try{EditorTabs.displayName="EditorTabs",EditorTabs.__docgenInfo={description:"",displayName:"EditorTabs",props:{shouldSelectOnPressUp:{defaultValue:{value:"false."},description:"Whether selected tab should change on press up instead of press down.",name:"shouldSelectOnPressUp",required:!1,type:{name:"boolean"}},active:{defaultValue:null,description:'Enables "active" style on tabs. Is usually related to a container having focus.',name:"active",required:!1,type:{name:"boolean"}},noBorders:{defaultValue:{value:"false"},description:"Removes the top and bottom border when passed.\nIt's still not clear whether such option makes sense or not, but\nat least in common use cases like in tool windows, it seems borders are already there and there should be a way\nof removing tab borders. On the other hand, when Tabs is used without any assumption about the surrounding UI,\nit kind of makes sense to have the top and bottom borders by default. So that's why this is made an option for\nnow, maybe until things are clearer.",name:"noBorders",required:!1,type:{name:"boolean"}},multiRow:{defaultValue:{value:"false"},description:"If set to true, tabs will be wrapped into multiple rows if needed.\nNOTE: In the original implementation, in multi row mode, rows are separated by a border. It's not easy to achieve\nthis when we are implementing this feature with a simple `flex-wrap: wrap` css rule. It doesn't seem that\nimportant, but we can achieve something similar by some css tricks like the ones suggested here:\nhttps://stackoverflow.com/questions/36128333/row-lines-for-flex-container-css",name:"multiRow",required:!1,type:{name:"boolean"}},noOverflowMenu:{defaultValue:null,description:"Only effective when {@link multiRow } is not true.\nWhen set to true, tabs that couldn't be fitted into the available space, are either shrunk (if {@link noScroll }\nis set to true), or are just accessible by scroll.",name:"noOverflowMenu",required:!1,type:{name:"boolean"}},noScroll:{defaultValue:{value:"false"},description:"Only effective when {@link multiRow } is not true.\nIf set to true and multiRow is not true, it will prevent horizontal scroll of tabs. Depending on the value of\nIn this case:\n- if {@link noOverflowMenu } is not set to true, tabs that can't be fitted into the available space will be\n  accessible via an overflow menu.\n- if {@link noOverflowMenu } is set to true, the tabs will be fitted into the available space, and they will\n  be shrunk when needed.\n@todo : not implemented yet.",name:"noScroll",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Tabs/EditorTabs/EditorTabs.tsx#EditorTabs"]={docgenInfo:EditorTabs.__docgenInfo,name:"EditorTabs",path:"src/Tabs/EditorTabs/EditorTabs.tsx#EditorTabs"})}catch(__react_docgen_typescript_loader_error){}},"./src/Tabs/EditorTabs/StyledEditorTab.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{K:()=>editorTabTheme,o:()=>StyledEditorTab});var _intellij_platform_core_styled__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/styled.ts"),_intellij_platform_core_Tabs_StyledDefaultTab__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/Tabs/StyledDefaultTab.ts"),_intellij_platform_core_Tabs_TabTheme__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/Tabs/TabTheme.ts");const editorTabTheme=({theme})=>({borderColor:theme.color("EditorTabs.borderColor"),underlineHeight:theme.value("EditorTabs.underlineHeight"),background:theme.color("EditorTabs.background"),underlinedTabInactiveBackground:theme.color("EditorTabs.underlinedTabBackground"),underlinedTabBackground:theme.color("EditorTabs.underlinedTabBackground"),hoverInactiveBackground:theme.color("EditorTabs.hoverInactiveBackground"),hoverBackground:theme.color("EditorTabs.hoverBackground"),inactiveUnderlineColor:theme.color("EditorTabs.inactiveUnderlineColor"),underlineColor:theme.color("EditorTabs.underlineColor"),underlinedTabInactiveForeground:theme.color("EditorTabs.underlinedTabForeground"),underlinedTabForeground:theme.color("EditorTabs.underlinedTabForeground")}),StyledEditorTab=(0,_intellij_platform_core_styled__WEBPACK_IMPORTED_MODULE_0__.zo)(_intellij_platform_core_Tabs_StyledDefaultTab__WEBPACK_IMPORTED_MODULE_1__.z)`
  font-size: 0.7rem;
  ${({theme})=>(0,_intellij_platform_core_Tabs_TabTheme__WEBPACK_IMPORTED_MODULE_2__.s)(editorTabTheme({theme}))};
`},"./src/Tabs/EditorTabs/StyledEditorTabs.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{p:()=>StyledEditorTabs});var _intellij_platform_core_styled__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/styled.ts"),_intellij_platform_core_Tabs_TabTheme__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/Tabs/TabTheme.ts"),_intellij_platform_core_Tabs_StyledDefaultTabs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/Tabs/StyledDefaultTabs.ts"),_StyledEditorTab__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/Tabs/EditorTabs/StyledEditorTab.ts");const StyledEditorTabs=(0,_intellij_platform_core_styled__WEBPACK_IMPORTED_MODULE_0__.zo)(_intellij_platform_core_Tabs_StyledDefaultTabs__WEBPACK_IMPORTED_MODULE_1__.f)`
  ${({theme})=>(0,_intellij_platform_core_Tabs_TabTheme__WEBPACK_IMPORTED_MODULE_2__.N)((0,_StyledEditorTab__WEBPACK_IMPORTED_MODULE_3__.K)({theme}))};
`},"./src/Tabs/ToolWindowTabs/StyledToolWindowTab.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{f:()=>toolWindowTabTheme,i:()=>StyledToolWindowTab});var _intellij_platform_core_styled__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/styled.ts"),_intellij_platform_core_Tabs_StyledDefaultTab__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/Tabs/StyledDefaultTab.ts"),_intellij_platform_core_Tabs_TabTheme__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/Tabs/TabTheme.ts");const toolWindowTabTheme=({theme})=>({borderColor:theme.color("ToolWindow.HeaderTab.borderColor"),underlineHeight:theme.value("ToolWindow.HeaderTab.underlineHeight"),background:"transparent",underlinedTabInactiveBackground:theme.color("ToolWindow.HeaderTab.underlinedTabInactiveBackground"),underlinedTabBackground:theme.color("ToolWindow.HeaderTab.underlinedTabBackground"),hoverInactiveBackground:theme.color("ToolWindow.HeaderTab.hoverInactiveBackground")??theme.color("ToolWindow.HeaderTab.hoverBackground"),hoverBackground:theme.color("ToolWindow.HeaderTab.hoverBackground"),inactiveUnderlineColor:theme.color("ToolWindow.HeaderTab.inactiveUnderlineColor"),underlineColor:theme.color("ToolWindow.HeaderTab.underlineColor"),underlinedTabInactiveForeground:theme.color("ToolWindow.HeaderTab.underlinedTabInactiveForeground")??theme.color("ToolWindow.HeaderTab.underlinedTabForeground"),underlinedTabForeground:theme.color("ToolWindow.HeaderTab.underlinedTabForeground")}),StyledToolWindowTab=(0,_intellij_platform_core_styled__WEBPACK_IMPORTED_MODULE_0__.zo)(_intellij_platform_core_Tabs_StyledDefaultTab__WEBPACK_IMPORTED_MODULE_1__.z)`
  padding: 0 0.7rem;
  ${({theme})=>(0,_intellij_platform_core_Tabs_TabTheme__WEBPACK_IMPORTED_MODULE_2__.s)(toolWindowTabTheme({theme}))};
`},"./src/Tabs/ToolWindowTabs/StyledToolWindowTabs.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{o:()=>StyledToolWindowTabs});var _intellij_platform_core_styled__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/styled.ts"),_intellij_platform_core_Tabs_TabTheme__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/Tabs/TabTheme.ts"),_intellij_platform_core_Tabs_StyledDefaultTabs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/Tabs/StyledDefaultTabs.ts"),_StyledToolWindowTab__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/Tabs/ToolWindowTabs/StyledToolWindowTab.ts");const StyledToolWindowTabs=(0,_intellij_platform_core_styled__WEBPACK_IMPORTED_MODULE_0__.zo)(_intellij_platform_core_Tabs_StyledDefaultTabs__WEBPACK_IMPORTED_MODULE_1__.f)`
  ${({theme})=>(0,_intellij_platform_core_Tabs_TabTheme__WEBPACK_IMPORTED_MODULE_2__.N)((0,_StyledToolWindowTab__WEBPACK_IMPORTED_MODULE_3__.f)({theme}))};
`},"./src/Tabs/ToolWindowTabs/ToolWindowTabs.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ToolWindowTabs});__webpack_require__("../../node_modules/react/index.js");var _intellij_platform_core_Tabs_Tabs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/Tabs/Tabs.tsx"),_StyledToolWindowTab__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/Tabs/ToolWindowTabs/StyledToolWindowTab.ts"),_StyledToolWindowTabs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/Tabs/ToolWindowTabs/StyledToolWindowTabs.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const ToolWindowTabs=props=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_intellij_platform_core_Tabs_Tabs__WEBPACK_IMPORTED_MODULE_2__.m,{...props,TabComponent:_StyledToolWindowTab__WEBPACK_IMPORTED_MODULE_3__.i,TabsComponent:_StyledToolWindowTabs__WEBPACK_IMPORTED_MODULE_4__.o,focusable:!1,shouldSelectOnPressUp:!0});ToolWindowTabs.displayName="ToolWindowTabs";try{ToolWindowTabs.displayName="ToolWindowTabs",ToolWindowTabs.__docgenInfo={description:"",displayName:"ToolWindowTabs",props:{shouldSelectOnPressUp:{defaultValue:{value:"false."},description:"Whether selected tab should change on press up instead of press down.",name:"shouldSelectOnPressUp",required:!1,type:{name:"boolean"}},active:{defaultValue:null,description:'Enables "active" style on tabs. Is usually related to a container having focus.',name:"active",required:!1,type:{name:"boolean"}},noBorders:{defaultValue:{value:"false"},description:"Removes the top and bottom border when passed.\nIt's still not clear whether such option makes sense or not, but\nat least in common use cases like in tool windows, it seems borders are already there and there should be a way\nof removing tab borders. On the other hand, when Tabs is used without any assumption about the surrounding UI,\nit kind of makes sense to have the top and bottom borders by default. So that's why this is made an option for\nnow, maybe until things are clearer.",name:"noBorders",required:!1,type:{name:"boolean"}},multiRow:{defaultValue:{value:"false"},description:"If set to true, tabs will be wrapped into multiple rows if needed.\nNOTE: In the original implementation, in multi row mode, rows are separated by a border. It's not easy to achieve\nthis when we are implementing this feature with a simple `flex-wrap: wrap` css rule. It doesn't seem that\nimportant, but we can achieve something similar by some css tricks like the ones suggested here:\nhttps://stackoverflow.com/questions/36128333/row-lines-for-flex-container-css",name:"multiRow",required:!1,type:{name:"boolean"}},noOverflowMenu:{defaultValue:null,description:"Only effective when {@link multiRow } is not true.\nWhen set to true, tabs that couldn't be fitted into the available space, are either shrunk (if {@link noScroll }\nis set to true), or are just accessible by scroll.",name:"noOverflowMenu",required:!1,type:{name:"boolean"}},noScroll:{defaultValue:{value:"false"},description:"Only effective when {@link multiRow } is not true.\nIf set to true and multiRow is not true, it will prevent horizontal scroll of tabs. Depending on the value of\nIn this case:\n- if {@link noOverflowMenu } is not set to true, tabs that can't be fitted into the available space will be\n  accessible via an overflow menu.\n- if {@link noOverflowMenu } is set to true, the tabs will be fitted into the available space, and they will\n  be shrunk when needed.\n@todo : not implemented yet.",name:"noScroll",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Tabs/ToolWindowTabs/ToolWindowTabs.tsx#ToolWindowTabs"]={docgenInfo:ToolWindowTabs.__docgenInfo,name:"ToolWindowTabs",path:"src/Tabs/ToolWindowTabs/ToolWindowTabs.tsx#ToolWindowTabs"})}catch(__react_docgen_typescript_loader_error){}},"./src/Tooltip/ActionTooltip.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{M:()=>ActionTooltip});__webpack_require__("../../node_modules/react/index.js");var _intellij_platform_core_Tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/Tooltip/Tooltip.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const ActionTooltip=({actionName,shortcut,...tooltipProps})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_intellij_platform_core_Tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_2__.u,{...tooltipProps,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_intellij_platform_core_Tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_2__.u.Header,{children:[actionName,shortcut&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_intellij_platform_core_Tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_2__.u.Shortcut,{children:shortcut})]})});ActionTooltip.displayName="ActionTooltip";try{ActionTooltip.displayName="ActionTooltip",ActionTooltip.__docgenInfo={description:'Tooltip of type "Action"',displayName:"ActionTooltip",props:{actionName:{defaultValue:null,description:"",name:"actionName",required:!0,type:{name:"ReactNode"}},shortcut:{defaultValue:null,description:"",name:"shortcut",required:!1,type:{name:"ReactNode"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},withPointer:{defaultValue:null,description:"Whether (and in what position) the arrow pointer should be shown.\nWhen using {@link TooltipTrigger } or {@link PositionedTooltipTrigger }, the position of the pointer is calculated\nbased on the target element, and a boolean value to define whether the arrow should be shown or not would suffice.\n\nTooltips with pointer have slight style difference.\n{@see https://www.figma.com/file/nfDfMAdV7j2fnQlpYNAOfP/IntelliJ-Platform-UI-Kit-(Community)?type=design&node-id=15-51&mode=design&t=7PplrxG8ZfXB4hIK-0}\n@example <Tooltip withPointer />\n// shows the pointer in the position controlled by {@link TooltipTrigger } or {@link PositionedTooltipTrigger }// If there is not `TooltipTrigger` or `PositionedTooltipTrigger`, the arrow is shown on top center by default.\n@example <Tooltip withPointer={{side: 'top', offset: 30}} />\n// shows the pointer on the top side, with horizontal offset of 30px from the left of tooltip, regardless\n// of whether `TooltipTrigger` or `PositionedTooltipTrigger` is used.\n@example <Tooltip withPointer={{side: 'left', offset: -30}} />\n// shows the pointer on the left side, with vertidcal offset of 30px from the bottom of the tooltip, regardless\n// of whether `TooltipTrigger` or `PositionedTooltipTrigger` is used.",name:"withPointer",required:!1,type:{name:"boolean | TooltipPointerPosition"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Tooltip/ActionTooltip.tsx#ActionTooltip"]={docgenInfo:ActionTooltip.__docgenInfo,name:"ActionTooltip",path:"src/Tooltip/ActionTooltip.tsx#ActionTooltip"})}catch(__react_docgen_typescript_loader_error){}}}]);
//# sourceMappingURL=Tabs-3-TabThemes-stories.e420fdbd.iframe.bundle.js.map