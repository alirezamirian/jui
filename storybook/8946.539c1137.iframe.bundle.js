"use strict";(self.webpackChunk_intellij_platform_core=self.webpackChunk_intellij_platform_core||[]).push([[8946],{"./src/CollectionSpeedSearch/CollectionSpeedSearchContext.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>CollectionSpeedSearchContext});const CollectionSpeedSearchContext=__webpack_require__("../../node_modules/react/index.js").createContext(null)},"./src/CollectionSpeedSearch/HighlightedTextValue.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Y:()=>HighlightedTextValue,j:()=>SpeedSearchItemHighlightsProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_intellij_platform_core_TextWithHighlights_TextWithHighlights__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/TextWithHighlights/TextWithHighlights.tsx"),_intellij_platform_core_CollectionSpeedSearch_CollectionSpeedSearchContext__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/CollectionSpeedSearch/CollectionSpeedSearchContext.tsx");const CollectionSpeedSearchItemContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(null),SpeedSearchItemHighlightsProvider=({children,itemKey})=>{const context=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_intellij_platform_core_CollectionSpeedSearch_CollectionSpeedSearchContext__WEBPACK_IMPORTED_MODULE_1__.h);if(!context)throw new Error("SpeedSearchItemProvider is only meant to be rendered by collection components with speed search. \n      CollectionSpeedSearchContext is expected to be rendered as a wrapper around all items.");const item=context.collection.getItem(itemKey),text=item?.textValue??"";return text||void 0!==item?.props.textValue||console.warn("no textValue specified on Item. When using SpeedSearch, you need to specify textValue for item, which will be the basis for search"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionSpeedSearchItemContext.Provider,{value:{highlightedRanges:context.matches.get(itemKey)||null,text}},children)},HighlightedTextValue=function({Component="span"}){const speedSearchContext=react__WEBPACK_IMPORTED_MODULE_0__.useContext(CollectionSpeedSearchItemContext);if(!speedSearchContext)throw new Error("HighlightedTextValue should be rendered only in items of a speed search enabled collection component");const{highlightedRanges,text}=speedSearchContext;return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,null,highlightedRanges?react__WEBPACK_IMPORTED_MODULE_0__.createElement(_intellij_platform_core_TextWithHighlights_TextWithHighlights__WEBPACK_IMPORTED_MODULE_2__.f,{highlights:highlightedRanges},text):text)};SpeedSearchItemHighlightsProvider.__docgenInfo={description:"",methods:[],displayName:"SpeedSearchItemHighlightsProvider",props:{children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},itemKey:{required:!0,tsType:{name:"Key"},description:""}}},HighlightedTextValue.__docgenInfo={description:"Used inside Item content, to render the textValue of the Item, potentially with highlighted ranges if it's a match\nin current search.",methods:[],displayName:"HighlightedTextValue",props:{Component:{required:!1,tsType:{name:"ReactElementType",raw:"React.ElementType"},description:'When rendering in a flex parent (which is the case for tree or list), rendering a container is necessary to have\nthe right spacing around highlights, when the highlighter span is immediately followed or proceeded by a white\nspace. By default, a "span" is rendered.',defaultValue:{value:'"span"',computed:!1}}}}},"./src/CollectionSpeedSearch/useCollectionSpeedSearch.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>useCollectionSpeedSearch});var react=__webpack_require__("../../node_modules/react/index.js"),useSpeedSearch=__webpack_require__("./src/SpeedSearch/useSpeedSearch.tsx"),minusculeMatch=__webpack_require__("./src/minusculeMatch.ts");var useLatest=__webpack_require__("./src/utils/useLatest.ts");function useCollectionSpeedSearchResult({collection,selectionManager:inputSelectionManager,speedSearch,focusBestMatch=!1}){const{searchTerm,active}=speedSearch,{matches}=(0,react.useMemo)((()=>{const matches=new Map;return speedSearch.active&&[...collection.getKeys()].map((key=>collection.getItem(key))).filter((({type})=>"item"===type)).forEach((item=>{const matchedRanges=(0,minusculeMatch.T)(item.textValue,searchTerm);matchedRanges&&matches.set(item.key,matchedRanges)})),{matches}}),[searchTerm,collection,active]),selectionManager=function createSpeedSearchSelectionManager(wrappedSelectionManager,matches){return Object.create(wrappedSelectionManager,{selectAll:{value:()=>{if(matches){const state=wrappedSelectionManager.state;state.setSelectedKeys(new Set([...matches.keys()].filter((key=>!state.disabledKeys.has(key)))))}else wrappedSelectionManager.selectAll()}}})}(inputSelectionManager,active?matches:null),latestValues=(0,useLatest.F)({matches,selectionManager,collection,focusBestMatch});return(0,react.useEffect)((()=>{const{selectionManager,matches,collection}=latestValues.current,matchedKeys=[...matches.keys()],noneOfTheMatchesAreSelected=!matchedKeys.some((matchedKey=>selectionManager.isSelected(matchedKey)));let keyToFocus;latestValues.current.focusBestMatch&&(keyToFocus=function getLongestCommonPrefixMatch(matches){return[...matches.entries()].filter((([,[firstRange]])=>0===firstRange?.from)).sort((([,[rangeA]],[,[rangeB]])=>rangeB.to-rangeB.from-rangeA.to-rangeA.from))?.[0]?.[0]}(matches)),!keyToFocus&&matchedKeys.length>0&&noneOfTheMatchesAreSelected&&(keyToFocus=function getMatchToSelect({collection,selectionManager,matchedKeys}){let passedFirstSelection=!1;for(const key of collection.getKeys())if(key===selectionManager.firstSelectedKey&&(passedFirstSelection=!0),passedFirstSelection&&matchedKeys.includes(key))return key;return matchedKeys[0]}({collection,selectionManager,matchedKeys})),keyToFocus&&(selectionManager.setFocusedKey(keyToFocus),selectionManager.replaceSelection(keyToFocus))}),[searchTerm,latestValues]),{matches,selectionManager}}function useCollectionSpeedSearch({collection,selectionManager,keepSearchActiveOnBlur,keyboardDelegate,focusBestMatch,ref,...speedSearchStateProps}){const speedSearch=(0,useSpeedSearch.u)(speedSearchStateProps),{matches,selectionManager:speedSearchSelectionManager}=useCollectionSpeedSearchResult({collection,selectionManager,speedSearch,focusBestMatch}),{containerProps}=(0,useSpeedSearch.V)({keepSearchActiveOnBlur},speedSearch,ref),speedSearchKeyboardDelegate=(0,react.useMemo)((()=>function createSpeedSearchKeyboardDelegate(wrappedKeyboardDelegate,matches){const findFirstMatch=(fromKey,direction)=>{let currentKey=fromKey;for(;null!=currentKey;){if(!matches||matches.has(currentKey))return currentKey;currentKey="up"===direction?wrappedKeyboardDelegate.getKeyAbove?.(currentKey):wrappedKeyboardDelegate.getKeyBelow?.(currentKey)}return currentKey??void 0};return Object.create(wrappedKeyboardDelegate,{getKeyBelow:{value:key=>findFirstMatch(wrappedKeyboardDelegate.getKeyBelow?.(key),"down")},getKeyAbove:{value:key=>findFirstMatch(wrappedKeyboardDelegate.getKeyAbove?.(key),"up")},getFirstKey:{value:(key,global)=>{const firstKey=findFirstMatch(wrappedKeyboardDelegate.getFirstKey?.(key,global),"down");return null==firstKey?matches?.keys().next().value??null:firstKey}},getLastKey:{value:(key,global)=>{const lastKey=findFirstMatch(wrappedKeyboardDelegate.getLastKey?.(key,global),"down");return null==lastKey?[...matches?.keys()||[]].pop()??null:lastKey}}})}(keyboardDelegate,speedSearch.active?matches:null)),[speedSearch.active,keyboardDelegate,matches]),speedSearchContextValue={matches,collection};return{containerProps,selectionManager:speedSearchSelectionManager,keyboardDelegate:speedSearchKeyboardDelegate,speedSearch:{...speedSearch,matches},searchPopupProps:{active:speedSearch.active,match:matches.size>0,children:speedSearch.searchTerm},speedSearchContextValue}}},"./src/Collections/getItemElement.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function getItemElement(collectionRef,key){let selector=`[data-key="${CSS.escape(String(key))}"]`,collection=collectionRef.current?.dataset.collection;return collection&&(selector=`[data-collection="${CSS.escape(collection)}"]${selector}`),collectionRef.current?.querySelector(selector)}__webpack_require__.d(__webpack_exports__,{a:()=>getItemElement})},"./src/Collections/useCollectionAutoScroll.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{o:()=>useCollectionAutoScroll});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_react_aria_utils__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/@react-aria/utils/dist/scrollIntoView.mjs"),_intellij_platform_core_Collections_getItemElement__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/Collections/getItemElement.ts");function useCollectionAutoScroll({isVirtualized,selectionManager},ref){(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{if(!isVirtualized&&selectionManager.focusedKey&&ref?.current){let element=(0,_intellij_platform_core_Collections_getItemElement__WEBPACK_IMPORTED_MODULE_1__.a)(ref,selectionManager.focusedKey);element&&(0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.R)(ref.current,element)}}),[isVirtualized,ref,selectionManager.focusedKey])}},"./src/Collections/useCollectionFocusProxy.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{w:()=>useCollectionFocusProxy});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js");const useCollectionFocusProxy=({state,focusProxyRef,collectionRef,onAction})=>{(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const proxy=focusProxyRef?.current;if(proxy){const onKeyDown=event=>{"ArrowUp"===event.key||"ArrowDown"===event.key?(event.preventDefault(),event.stopPropagation(),collectionRef.current?.dispatchEvent(new KeyboardEvent(event.type,event))):"Enter"===event.key&&null!=state.selectionManager?.focusedKey&&(event.preventDefault(),event.currentTarget?.addEventListener("keyup",(event=>{console.log("Keyup",event.key,state.selectionManager.focusedKey,"onAction",onAction),"Enter"===event.key&&null!=state.selectionManager.focusedKey&&onAction?.(state.selectionManager.focusedKey)}),{once:!0,capture:!0}))};return proxy.addEventListener("keydown",onKeyDown),()=>{proxy.removeEventListener("keydown",onKeyDown)}}}))}},"./src/List/StyledList.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{K:()=>StyledList});var styled_components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/styled-components/dist/styled-components.browser.esm.js");const StyledList=__webpack_require__("./src/styled.ts").I4.div.attrs((props=>({role:props.role||"list"}))).withConfig({shouldForwardProp:prop=>"fillAvailableSpace"!==prop})`
  padding: 0;
  margin: 0;
  list-style: none;
  max-height: 100%;
  overflow: auto;
  color: ${({theme})=>theme.color("*.textForeground")};
  outline: none;
  ${({fillAvailableSpace})=>fillAvailableSpace&&styled_components__WEBPACK_IMPORTED_MODULE_1__.AH`
      flex: 1;
      height: fill-available; // will be converted to --webkit-fill-available and --moz-available, but doesn't work in FF
    `}
  background: ${({theme})=>theme.color("List.background")};
`},"./src/List/StyledListItem.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{H:()=>StyledListItem});const StyledListItem=__webpack_require__("./src/styled.ts").I4.div.attrs((props=>({role:props.role||"listitem"})))`
  ${({containerFocused,selected,disabled,theme})=>{let backgroundColor,color=disabled?theme.color("*.disabledForeground"):theme.color("List.foreground",theme.commonColors.labelForeground);return selected&&(containerFocused?(color=theme.asCurrentForeground(theme.color("List.selectionForeground")||theme.commonColors.labelSelectedForeground),backgroundColor=theme.color("List.selectionBackground")):(color=theme.color("List.selectionInactiveForeground",color),backgroundColor=theme.color("List.selectionBackgroundInactive"))),{backgroundColor:theme.asCurrentBackground(backgroundColor),color}}};
  position: relative;
  display: flex;
  white-space: nowrap;
  padding: 0 0.5rem; // themed?
  line-height: 1.25rem;
  outline: none;
  cursor: default;
  min-width: min-content; // Needed for content sizing for when list/tree is used inside popup or modal window
`},"./src/SpeedSearch/SpeedSearchPopup.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>SpeedSearchPopup});var _intellij_platform_core_Icon__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/Icon/PlatformIcon.tsx"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_styled__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/styled.ts");const StyledSearchIcon=(0,_styled__WEBPACK_IMPORTED_MODULE_1__.I4)(_intellij_platform_core_Icon__WEBPACK_IMPORTED_MODULE_2__.jE)`
  margin-right: 10px;
  vertical-align: middle;
`,SpeedSearchPopup=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((({active,match,children},ref)=>active?react__WEBPACK_IMPORTED_MODULE_0__.createElement(StyledSpeedSearchPopup,{ref,noMatch:!match},react__WEBPACK_IMPORTED_MODULE_0__.createElement(StyledSearchIcon,{icon:"actions/search"}),(children||"").replace(/ /g," ")):null)),StyledSpeedSearchPopup=_styled__WEBPACK_IMPORTED_MODULE_1__.I4.span`
  // ref: https://github.com/JetBrains/intellij-community/blob/e3c7d96daba1d5d84d5650bde6c220aed225bfda/platform/platform-impl/src/com/intellij/ui/SpeedSearchBase.java#L53-L53
  box-sizing: border-box;
  position: absolute;
  background: ${({theme})=>theme.color("SpeedSearch.background",theme.dark?"rgb(111,111,111)":"#fff")};
  border: 1px solid
    ${({theme})=>theme.color("SpeedSearch.borderColor",theme.dark?"rgb(64, 64, 64)":"rgb(192, 192, 192)")};
  color: ${({noMatch,theme})=>noMatch?theme.color("SpeedSearch.errorForeground",theme.commonColors.red):theme.color("SpeedSearch.foreground",theme.commonColors.tooltipForeground)};
  z-index: 1;
  padding: 3px 7px;
  height: 25px;
  line-height: 1.2;
  transform: translateY(-100%);
`;SpeedSearchPopup.__docgenInfo={description:"The little popup view shown in the top left corner of list, tree, etc., which shows the search\nquery.\n@see SpeedSearchInput",methods:[],displayName:"SpeedSearchPopup",props:{children:{required:!0,tsType:{name:"union",raw:"string | undefined",elements:[{name:"string"},{name:"undefined"}]},description:""},match:{required:!1,tsType:{name:"boolean"},description:""},active:{required:!0,tsType:{name:"union",raw:"boolean | undefined",elements:[{name:"boolean"},{name:"undefined"}]},description:""}}}},"./src/SpeedSearch/useSpeedSearch.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{V:()=>useSpeedSearch,u:()=>useSpeedSearchState});var react=__webpack_require__("../../node_modules/react/index.js");function useGhostInput({value,onChange}){const valueRef=(0,react.useRef)(value);valueRef.current=value;return{onKeyDown:event=>{if(!(event.ctrlKey||event.altKey||event.metaKey||event.target instanceof HTMLElement&&function isTypeableElement(elem){return elem.isContentEditable||elem instanceof HTMLInputElement&&!["checkbox","radio","button"].includes(elem.type)||elem instanceof HTMLTextAreaElement}(event.target))){if(1===event.key.length)return event.preventDefault(),onChange(`${valueRef.current}${event.key}`);if("Backspace"===event.key){const sliceEnd=event.metaKey?0:-1;onChange(valueRef.current.slice(0,sliceEnd))}}}}}var useKeyboard=__webpack_require__("../../node_modules/@react-aria/interactions/dist/useKeyboard.mjs"),useFocusWithin=__webpack_require__("../../node_modules/@react-aria/interactions/dist/useFocusWithin.mjs"),useControlledState=__webpack_require__("../../node_modules/@react-stately/utils/dist/useControlledState.mjs"),keyboard_utils=__webpack_require__("./src/utils/keyboard-utils.ts");function useSpeedSearchState(props){const[active,setActive]=(0,useControlledState.P)(props.isSearchActive,props.defaultIsSearchActive??!1,props.onIsSearchActiveChange),[searchTerm,setSearchTerm]=(0,useControlledState.P)(props.searchTerm,props.defaultSearchTerm||"",props.onSearchTermChange);return{active,searchTerm,setActive,setSearchTerm,clear:()=>{setSearchTerm(""),setActive(!1)}}}function useSpeedSearch({keepSearchActiveOnBlur},{searchTerm,active,setActive,setSearchTerm},ref){const{onKeyDown:ghostInputKeydown}=useGhostInput({value:searchTerm,onChange:value=>{const trimmedValue=value.trimStart();setSearchTerm(trimmedValue),active||""===trimmedValue||setActive(!0)}}),clear=()=>{setSearchTerm(""),setActive(!1)},{keyboardProps:{onKeyDown,onKeyUp}}=(0,useKeyboard.d)({onKeyDown:e=>{ref.current?.contains(e.target)&&("a"===e.key&&(e.metaKey||e.ctrlKey)&&e.preventDefault(),"Escape"===e.key?clear():ghostInputKeydown(e),active&&!(0,keyboard_utils.w)(e)||e.continuePropagation())}}),{focusWithinProps:{onFocus,onBlur}}=(0,useFocusWithin.R)({onBlurWithin:event=>{("function"==typeof keepSearchActiveOnBlur?keepSearchActiveOnBlur(event):keepSearchActiveOnBlur)||clear()}});return{containerProps:{onFocus,onBlur,onKeyDown,onKeyUp}}}},"./src/TextRange.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function getAllRanges(ranges,length){const result=[];return ranges?.length?(ranges[0].from>0&&result.push([{from:0,to:ranges[0].from-1},!1]),ranges.forEach((({from,to},index)=>{result.push([{from,to},!0]);const gapRange=ranges[index+1]?{from:to+1,to:ranges[index+1].from-1}:{from:to+1,to:length-1};(function isEmptyRange(range){return range.from>range.to})(gapRange)||result.push([gapRange,!1])})),result):[[{from:0,to:length-1},!1]]}function createRangesFromIndices(indices){return indices.reduce(((ranges,index)=>{const lastRange=ranges.slice(-1)[0];return lastRange?.to===index-1?[...ranges.slice(0,-1),{from:lastRange.from,to:index}]:[...ranges,{from:index,to:index}]}),[])}__webpack_require__.d(__webpack_exports__,{ED:()=>getAllRanges,mG:()=>createRangesFromIndices})},"./src/TextWithHighlights/TextWithHighlights.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{f:()=>TextWithHighlights});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_TextRange__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/TextRange.ts");const HighlightedMatch=__webpack_require__("./src/styled.ts").I4.span`
  background: ${({theme})=>`linear-gradient(${theme.color("SearchMatch.startBackground","#ffeaa2b3")}, ${theme.color("SearchMatch.endBackground","#ffd042b3")})`};
  color: #000;
  border-radius: 3px;
`;function TextWithHighlights({children,highlights}){const parts=highlights?(0,_TextRange__WEBPACK_IMPORTED_MODULE_2__.ED)(highlights,children.length):[[{from:0,to:children.length},!1]];return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,parts.map((([{from,to},highlighted])=>{const text=children.slice(from,to+1);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,{key:`${from}_${to}`},highlighted?react__WEBPACK_IMPORTED_MODULE_0__.createElement(HighlightedMatch,null,text):text)})))}TextWithHighlights.__docgenInfo={description:"Renders the children (which must be a string), with highlights wrapped in spans with the highlight style.\nNote: this component doesn't render a container. It just highlights the specified ranges.",methods:[],displayName:"TextWithHighlights",props:{children:{required:!0,tsType:{name:"string"},description:""},highlights:{required:!0,tsType:{name:"union",raw:"TextRange[] | null",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:"{ from: number; to: number }",signature:{properties:[{key:"from",value:{name:"number",required:!0}},{key:"to",value:{name:"number",required:!0}}]}}],raw:"TextRange[]"},{name:"null"}]},description:""}}}},"./src/Tree/SpeedSearchTree/SpeedSearchTree.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{K:()=>SpeedSearchTree});var react=__webpack_require__("../../node_modules/react/index.js"),Virtualizer=__webpack_require__("../../node_modules/@react-aria/virtualizer/dist/Virtualizer.mjs"),CollectionSpeedSearchContext=__webpack_require__("./src/CollectionSpeedSearch/CollectionSpeedSearchContext.tsx"),StyledTree=__webpack_require__("./src/Tree/StyledTree.tsx"),SpeedSearchPopup=__webpack_require__("./src/SpeedSearch/SpeedSearchPopup.tsx"),useTreeState=__webpack_require__("./src/Tree/useTreeState.ts"),useTreeVirtualizer=__webpack_require__("./src/Tree/useTreeVirtualizer.tsx"),TreeContext=__webpack_require__("./src/Tree/TreeContext.tsx"),useKeyboard=__webpack_require__("../../node_modules/@react-aria/interactions/dist/useKeyboard.mjs"),mergeProps=__webpack_require__("../../node_modules/@react-aria/utils/dist/mergeProps.mjs"),useCollectionSpeedSearch=__webpack_require__("./src/CollectionSpeedSearch/useCollectionSpeedSearch.ts"),TreeKeyboardDelegate=__webpack_require__("./src/Tree/TreeKeyboardDelegate.tsx"),useSelectableTree=__webpack_require__("./src/Tree/useSelectableTree.tsx"),keyboard_utils=__webpack_require__("./src/utils/keyboard-utils.ts");var TreeNode=__webpack_require__("./src/Tree/TreeNode.tsx"),HighlightedTextValue=__webpack_require__("./src/CollectionSpeedSearch/HighlightedTextValue.tsx");const SpeedSearchTreeNode=({item})=>react.createElement(HighlightedTextValue.j,{itemKey:item.key},react.createElement(TreeNode.n,{key:item.key,item}));SpeedSearchTreeNode.__docgenInfo={description:"",methods:[],displayName:"SpeedSearchTreeNode",props:{item:{required:!0,tsType:{name:"Node",elements:[{name:"T"}],raw:"Node<T>"},description:""}}};var useObjectRef=__webpack_require__("../../node_modules/@react-aria/utils/dist/useObjectRef.mjs"),filterDOMProps=__webpack_require__("../../node_modules/@react-aria/utils/dist/filterDOMProps.mjs"),useTreeRef=__webpack_require__("./src/Tree/useTreeRef.tsx");const SpeedSearchTree=react.forwardRef((({fillAvailableSpace=!1,treeRef,hideSpeedSearchPopup,style,className,...props},forwardedRef)=>{const state=(0,useTreeState.p)({...props,disallowEmptySelection:!props.allowEmptySelection}),ref=(0,useObjectRef.U)(forwardedRef);(0,useTreeRef.r)({state,scrollRef:ref},treeRef);const{treeProps,treeContext,speedSearchContextValue,searchPopupProps}=function useSpeedSearchTree(props,state,ref){const{containerProps,keyboardDelegate,selectionManager,speedSearch,...collectionSpeedSearch}=(0,useCollectionSpeedSearch.Z)({...props,collection:state.collection,selectionManager:state.selectionManager,keyboardDelegate:new TreeKeyboardDelegate.Z(state.collection,state.disabledKeys,ref),ref}),{keyboardProps:speedSearchKeyboardProps}=(0,useKeyboard.d)({onKeyDown:e=>{["Enter","ArrowLeft","ArrowRight"].includes(e.key)&&!(0,keyboard_utils.w)(e)?speedSearch.clear():e.continuePropagation()}}),{treeProps,...selectableTree}=(0,useSelectableTree.K)({...props,keyboardDelegate},{...state,selectionManager},ref);return{treeProps:(0,mergeProps.v)(treeProps,containerProps,speedSearchKeyboardProps),...collectionSpeedSearch,...selectableTree}}({...props,isVirtualized:!0},state,ref),{virtualizerProps}=(0,useTreeVirtualizer.H)({state});return react.createElement(TreeContext.U.Provider,{value:treeContext},react.createElement(CollectionSpeedSearchContext.h.Provider,{value:speedSearchContextValue},!hideSpeedSearchPopup&&react.createElement(SpeedSearchPopup.A,searchPopupProps),react.createElement(StyledTree.M,{as:Virtualizer.Y,ref,fillAvailableSpace,...virtualizerProps,...treeProps,...(0,filterDOMProps.$)(props,{labelable:!0}),style,className},((type,item)=>react.createElement(SpeedSearchTreeNode,{key:item.key,item})))))}));SpeedSearchTree.__docgenInfo={description:"",methods:[],displayName:"SpeedSearchTree",props:{cacheInvalidation:{required:!1,tsType:{name:"union",raw:"boolean | { invalidators: ReadonlyArray<unknown> }",elements:[{name:"boolean"},{name:"signature",type:"object",raw:"{ invalidators: ReadonlyArray<unknown> }",signature:{properties:[{key:"invalidators",value:{name:"ReadonlyArray",elements:[{name:"unknown"}],raw:"ReadonlyArray<unknown>",required:!0}}]}}]},description:"Defines cache invalidation policy for items. By default, the render result is cached based on the item objects.\nThis is equivalent of passing false or not passing anything for `cacheInvalidation`. If `true` is passed, it will\nalways invalidate the render result, causing the collection to be recreated on each re-render. It can\nconsiderably affect performance in large collections. in addition to boolean value, an object with the list of\ninvalidators can also be passed. renderer function is called each time any of the invalidators are changed.\nThink of it as [dependency array in react hooks](https://reactjs.org/docs/hooks-reference.html#usememo). Except\nthat the length of the array can also safely change."},fillAvailableSpace:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},showAsFocused:{required:!1,tsType:{name:"boolean"},description:"When true, shows the tree in focused style, even when it's not focused. A common use case is when the tree\nis virtually focused. i.e. the focus is physically on some other element (like a search input) which handles\nkeyboard events as if the tree was focused."},treeRef:{required:!1,tsType:{name:"RefObject",elements:[{name:"TreeRefValue"}],raw:"RefObject<TreeRefValue>"},description:""},className:{required:!1,tsType:{name:"string"},description:""},style:{required:!1,tsType:{name:"CSSProperties"},description:""},keepSearchActiveOnBlur:{required:!1,tsType:{name:"union",raw:"boolean | ((e: React.FocusEvent) => boolean)",elements:[{name:"boolean"},{name:"unknown"}]},description:""},hideSpeedSearchPopup:{required:!1,tsType:{name:"boolean"},description:"Whether speed search popup should not be shown. Useful when speed search state is controlled, and\na search input is rendered outside the tree."}},composes:["Omit"]}},"./src/Tree/StyledTree.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{M:()=>StyledTree});var _intellij_platform_core_styled__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/styled.ts"),_intellij_platform_core_List_StyledList__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/List/StyledList.tsx");const StyledTree=(0,_intellij_platform_core_styled__WEBPACK_IMPORTED_MODULE_0__.I4)(_intellij_platform_core_List_StyledList__WEBPACK_IMPORTED_MODULE_1__.K).attrs({role:"tree"})`
  background: ${({theme})=>theme.color("Tree.background")};
`},"./src/Tree/TreeContext.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{U:()=>TreeContext});const TreeContext=__webpack_require__("../../node_modules/react/index.js").createContext(null)},"./src/Tree/TreeKeyboardDelegate.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>TreeKeyboardDelegate});var _react_aria_selection__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@react-aria/selection/dist/ListKeyboardDelegate.mjs");__webpack_require__("../../node_modules/react/index.js");class TreeKeyboardDelegate extends _react_aria_selection__WEBPACK_IMPORTED_MODULE_1__.n{collection;constructor(collection,disabledKeys,ref,collator){super({collection,disabledKeys,ref,collator,layout:"grid"}),this.collection=collection}getKeyLeftOf(key){const item=this.collection.getItem(key);return item?.parentKey??this.getKeyAbove(key)}getKeyRightOf(key){return this.getKeyBelow(key)}}},"./src/Tree/TreeNode.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{n:()=>TreeNode});var usePress=__webpack_require__("../../node_modules/@react-aria/interactions/dist/usePress.mjs"),react=__webpack_require__("../../node_modules/react/index.js"),ItemStateContext=__webpack_require__("./src/Collections/ItemStateContext.tsx"),LafIcon=__webpack_require__("./src/Icon/LafIcon.tsx"),styled=__webpack_require__("./src/styled.ts");const TREE_ICON_SIZE=16,StyledTreeNodeIcon=(0,styled.I4)(LafIcon.j)`
  margin-left: -20px;
  margin-right: 4px;
  margin-top: -1px; // the svg path seems to have uneven vertical padding. This is to compensate for that.
  flex-shrink: 0;
  align-self: center;
`,getIcon=(selected,expanded)=>{const modifiers={Selected:selected};return expanded?{themePath:selected?"Tree.expandedSelectedIcon":"Tree.expandedIcon",iconPath:{name:"treeExpanded",modifiers}}:expanded?void 0:{themePath:selected?"Tree.collapsedSelectedIcon":"Tree.collapsedIcon",iconPath:{name:"treeCollapsed",modifiers}}};function TreeNodeIcon({selected,expanded,...props}){const icon=(0,react.useMemo)((()=>getIcon(selected,expanded)),[selected,expanded]);return react.createElement(StyledTreeNodeIcon,{icon:icon?.iconPath,themePath:icon?.themePath,size:TREE_ICON_SIZE,...props})}TreeNodeIcon.__docgenInfo={description:"",methods:[],displayName:"TreeNodeIcon",props:{selected:{required:!0,tsType:{name:"boolean"},description:""},expanded:{required:!0,tsType:{name:"boolean"},description:""}}};var useSelectableItem=__webpack_require__("./src/selection/useSelectableItem.tsx"),mergeProps=__webpack_require__("../../node_modules/@react-aria/utils/dist/mergeProps.mjs");function useTreeNodeToggleButton({collection,toggleKey,selectionManager,key}){return{treeNodeToggleButtonProps:{preventFocusOnPress:!0,onPress:()=>{toggleKey(key);const selectedDescendantKeys=[...selectionManager.selectedKeys].filter((key=>{let parentKey=collection.getItem(key)?.parentKey;for(;parentKey;){if(parentKey===key)return!0;parentKey=collection.getItem(parentKey)?.parentKey}return!1}));selectedDescendantKeys.forEach((key=>selectionManager.toggleSelection(key))),!selectionManager.isSelected(key)&&selectedDescendantKeys.length>0&&selectionManager.toggleSelection(key)}}}}var TreeContext=__webpack_require__("./src/Tree/TreeContext.tsx"),StyledListItem=__webpack_require__("./src/List/StyledListItem.tsx");const StyledTreeNode=(0,styled.I4)(StyledListItem.H).attrs({role:"treeitem"})`
  // There are some theme properties for tree node padding (theme.ui.Tree.leftChildIndent and
  // theme.ui.Tree.leftChildIndent), but they doesn't seem to be applicable.
  padding-left: ${({level})=>(level+1)*TREE_ICON_SIZE+8+"px"};
  padding-right: 0.25rem;
  ${({containerFocused,selected,disabled,theme})=>{let backgroundColor,color=disabled?theme.color("*.disabledForeground"):theme.color("Tree.foreground",theme.commonColors.labelForeground);return selected&&(containerFocused?(color=theme.asCurrentForeground(theme.color("Tree.selectionForeground")||theme.commonColors.labelSelectedForeground),backgroundColor=theme.color("Tree.selectionBackground")):(color=theme.color("Tree.selectionInactiveForeground",color),backgroundColor=theme.color("Tree.selectionBackgroundInactive"))),{backgroundColor,color}}}
`;function TreeNode({item}){const ref=(0,react.useRef)(null),{state:{collection,selectionManager,expandedKeys,disabledKeys,toggleKey},focused:containerFocused,onActionRef:{current:onAction}}=(0,react.useContext)(TreeContext.U),isSelected=selectionManager.isSelected(item.key),expanded=expandedKeys.has(item.key),isDisabled=disabledKeys.has(item.key),{pressProps:togglePressProps}=(0,usePress.d)({...useTreeNodeToggleButton({key:item.key,collection,selectionManager,toggleKey}).treeNodeToggleButtonProps,isDisabled}),{treeNodeProps}=function useTreeNode({item,ref,selectionManager,disabled,toggleKey,onAction}){const{pressProps:{onKeyDown,...pressProps}}=(0,usePress.d)({...(0,useSelectableItem.p)({key:item.key,ref,selectionManager,isVirtualized:!1}).itemProps,isDisabled:disabled,preventFocusOnPress:!1});return{treeNodeProps:(0,mergeProps.v)(pressProps,{onDoubleClick:()=>{[...item.childNodes].length>0?toggleKey(item.key):onAction?.(item.key)}},{role:"treeitem"})}}({item,ref,toggleKey,onAction,selectionManager,disabled:isDisabled});return react.createElement(react.Fragment,null,react.createElement(StyledTreeNode,{ref,...treeNodeProps,containerFocused,disabled:isDisabled,selected:isSelected,"aria-disabled":isDisabled,"aria-selected":isSelected,level:item.level},[...item.childNodes].length>0&&react.createElement(TreeNodeIcon,{selected:isSelected,expanded,...togglePressProps}),react.createElement(ItemStateContext.k.Provider,{value:{isDisabled,isSelected,isContainerFocused:containerFocused,node:item}},item.rendered)))}TreeNode.__docgenInfo={description:"",methods:[],displayName:"TreeNode",props:{item:{required:!0,tsType:{name:"Node",elements:[{name:"T"}],raw:"Node<T>"},description:""},showAsFocused:{required:!1,tsType:{name:"boolean"},description:""}}}},"./src/Tree/useSelectableTree.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{K:()=>useSelectableTree});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_react_aria_interactions__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("../../node_modules/@react-aria/interactions/dist/useFocusWithin.mjs"),_react_aria_interactions__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("../../node_modules/@react-aria/interactions/dist/useKeyboard.mjs"),_react_aria_utils__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@react-aria/utils/dist/filterDOMProps.mjs"),_react_aria_utils__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("../../node_modules/@react-aria/utils/dist/mergeProps.mjs"),_react_aria_i18n__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/@react-aria/i18n/dist/useCollator.mjs"),_intellij_platform_core_selection__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/selection/useSelectableCollection.ts"),_TreeKeyboardDelegate__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/Tree/TreeKeyboardDelegate.tsx"),_Collections_useCollectionAutoScroll__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/Collections/useCollectionAutoScroll.ts"),_intellij_platform_core_utils_useLatest__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./src/utils/useLatest.ts"),_intellij_platform_core_utils_keyboard_utils__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./src/utils/keyboard-utils.ts"),ramda__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("./node_modules/ramda/es/groupBy.js"),_intellij_platform_core_Collections__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/Collections/useCollectionFocusProxy.ts");function useSelectableTree({onAction,onFocus,onBlur,autoFocus,showAsFocused,focusProxyRef,...props},state,ref){const domProps=(0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_1__.$)(props),collator=(0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_2__.Q)({usage:"search",sensitivity:"base"}),[focused,setFocused]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),{collectionProps:{onMouseDown,onKeyDown:selectionKeyDown,...collectionProps}}=(0,_intellij_platform_core_selection__WEBPACK_IMPORTED_MODULE_3__.y)({ref,selectionManager:state.selectionManager,disallowEmptySelection:!props.allowEmptySelection,selectOnFocus:!0,autoFocus,keyboardDelegate:(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>props.keyboardDelegate||new _TreeKeyboardDelegate__WEBPACK_IMPORTED_MODULE_4__.Z(state.collection,state.disabledKeys,ref,collator)),[state.collection,state.disabledKeys,props.keyboardDelegate])});(0,_intellij_platform_core_Collections__WEBPACK_IMPORTED_MODULE_5__.w)({collectionRef:ref,state,onAction,focusProxyRef});const{focusWithinProps}=(0,_react_aria_interactions__WEBPACK_IMPORTED_MODULE_6__.R)({onFocusWithinChange:setFocused});(0,_Collections_useCollectionAutoScroll__WEBPACK_IMPORTED_MODULE_7__.o)({isVirtualized:props.isVirtualized,selectionManager:state.selectionManager},ref);const{keyboardProps}=(0,_react_aria_interactions__WEBPACK_IMPORTED_MODULE_9__.d)({onKeyDown:event=>{const focusedKey=state.selectionManager.focusedKey,focusedItem=focusedKey?state.collection.getItem(focusedKey):null;if(focusedItem){const isExpandable=Boolean(focusedItem?.hasChildNodes),expanded=null!=focusedKey&&state.expandedKeys.has(focusedKey);if(null!=focusedKey&&state.disabledKeys.has(focusedKey))return void event.continuePropagation();props?.onNodeKeyDown?.(event,focusedItem);const shouldToggle=!(0,_intellij_platform_core_utils_keyboard_utils__WEBPACK_IMPORTED_MODULE_8__.w)(event)&&("Enter"===event.key||"ArrowLeft"===event.key&&expanded||"ArrowRight"===event.key&&!expanded);if(isExpandable&&shouldToggle&&null!=focusedKey)return event.preventDefault(),void state.toggleKey(focusedKey);if("Enter"===event.key&&null!=focusedKey)return void onAction?.(focusedKey)}[event.metaKey,event.ctrlKey,event.shiftKey,event.altKey].filter((i=>i)).length<2&&selectionKeyDown?.(event),event.continuePropagation()}}),onActionRef=(0,_intellij_platform_core_utils_useLatest__WEBPACK_IMPORTED_MODULE_10__.F)(onAction),{selectionManager,collection,expandedKeys,disabledKeys,toggleKey}=state,treeContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({state:{collection,selectionManager,expandedKeys,disabledKeys,toggleKey},focused:Boolean(focused||showAsFocused),onActionRef})),[selectionManager,collection,expandedKeys,disabledKeys,toggleKey,focused,showAsFocused,onActionRef]);return useSelectParentOfRemovedSelectedNode(state),{treeProps:(0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_11__.v)(focusWithinProps,collectionProps,keyboardProps,domProps,{onFocus,onBlur,role:"tree"}),treeContext,focused}}const useSelectParentOfRemovedSelectedNode=state=>{const previousCollectionRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(state.collection);(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{if("all"!==state.selectionManager.rawSelection){const keys=[...state.collection.getKeys()],{invalid=[],valid=[]}=(0,ramda__WEBPACK_IMPORTED_MODULE_12__.A)((selectedKey=>keys.includes(selectedKey)?"valid":"invalid"),[...state.selectionManager.selectedKeys]);if(0===valid.length&&invalid.length>0)for(let invalidKey of invalid){let key=invalidKey;for(;null!=key;){if(keys.includes(key))return state.selectionManager.setSelectedKeys(valid.concat(key)),void state.selectionManager.setFocusedKey(key);key=previousCollectionRef.current.getItem(key)?.parentKey??void 0}}}previousCollectionRef.current=state.collection}),[state.collection])}},"./src/Tree/useTreeRef.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{r:()=>useTreeRef});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_intellij_platform_core_utils_useLatest__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/utils/useLatest.ts"),_react_aria_utils__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/@react-aria/utils/dist/scrollIntoView.mjs"),_intellij_platform_core_Collections_getItemElement__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/Collections/getItemElement.ts");function useTreeRef({state,scrollRef},forwardedRef){const latestState=(0,_intellij_platform_core_utils_useLatest__WEBPACK_IMPORTED_MODULE_1__.F)(state);(0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(forwardedRef,(()=>({replaceSelection:key=>{latestState.current.selectionManager.replaceSelection(key)},focus:key=>{const selectionManager=latestState.current.selectionManager;selectionManager.setFocused(!0),selectionManager.setFocusedKey(key),setTimeout((()=>{const element=(0,_intellij_platform_core_Collections_getItemElement__WEBPACK_IMPORTED_MODULE_2__.a)(scrollRef,key);scrollRef.current&&element?(0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_3__.R)(scrollRef.current,element):console.error("could not find element to scroll into",scrollRef,element)}))},expandSelection(){latestState.current.selectionManager.expandSelection()},shrinkSelection(){latestState.current.selectionManager.shrinkSelection()},expandAll(){latestState.current.setExpandedKeys(latestState.current.collection.getAllExpandableKeys())},collapseAll(){const{collection:tree,setExpandedKeys,selectionManager}=latestState.current,focusedKey=selectionManager.focusedKey;if(setExpandedKeys(new Set),focusedKey&&!tree.rootKeys.includes(focusedKey)){let item=tree.getItem(focusedKey);for(;null!=item?.parentKey;)item=tree.getItem(item.parentKey);item&&(selectionManager.setFocusedKey(item.key),selectionManager.isSelected(focusedKey)&&selectionManager.select(item.key))}}})),[])}},"./src/Tree/useTreeVirtualizer.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{H:()=>useTreeVirtualizer});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_react_stately_virtualizer__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/@react-stately/virtualizer/dist/Size.mjs"),_intellij_platform_core_VariableWidthListLayout__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/VariableWidthListLayout.tsx");class FlattenedTreeLayout extends _intellij_platform_core_VariableWidthListLayout__WEBPACK_IMPORTED_MODULE_1__.h{padding=0;buildChild(node,x,y,parentKey){const layoutNode=super.buildChild(node,x,y,parentKey);return node.parentKey&&"item"===this.collection.getItem(node.parentKey)?.type&&(layoutNode.layoutInfo.parentKey=null),layoutNode}doBuildCollection(y=0){let collection=this.virtualizer.collection,skipped=0,nodes=[];const visibleNodes=[...collection.getKeys()].map((key=>collection.getItem(key))).filter((i=>null!=i));for(let node of visibleNodes){let rowHeight=this.rowHeight??this.estimatedRowHeight??20;if("item"===node.type&&y+rowHeight<this.requestedRect.y&&!this.isValid(node,y)){y+=rowHeight,skipped++;continue}let layoutNode=this.buildChild(node,0,y,null);if(y=layoutNode.layoutInfo.rect.maxY,nodes.push(layoutNode),"item"===node.type&&y>this.requestedRect.maxY){y+=(visibleNodes.length-(nodes.length+skipped))*rowHeight;break}}return this.contentSize=new _react_stately_virtualizer__WEBPACK_IMPORTED_MODULE_2__.o(this.virtualizer.visibleRect.width,y),nodes}shouldInvalidateEverything(invalidationContext){return super.shouldInvalidateEverything(invalidationContext)||this.lastCollection!==this.collection}isVisible(node,rect){return super.isVisible(node,rect)}getVisibleLayoutInfos(rect){return super.getVisibleLayoutInfos(rect).filter((layoutInfo=>null!=this.collection.getItem(layoutInfo.key)))}}const useTreeVirtualizer=({state})=>{const layout=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>new FlattenedTreeLayout({estimatedRowHeight:20})),[]),focusedKey=state.selectionManager.focusedKey;return{virtualizerProps:{persistedKeys:(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>new Set(focusedKey?[focusedKey]:[])),[focusedKey]),collection:state.collection,layout,scrollDirection:"both"}}}},"./src/VariableWidthListLayout.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>VariableWidthListLayout});var _react_stately_layout__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@react-stately/layout/dist/ListLayout.mjs"),_react_stately_virtualizer__WEBPACK_IMPORTED_MODULE_2__=(__webpack_require__("../../node_modules/react/index.js"),__webpack_require__("../../node_modules/@react-stately/virtualizer/dist/Rect.mjs")),_react_stately_virtualizer__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/@react-stately/virtualizer/dist/LayoutInfo.mjs");class VariableWidthListLayout extends _react_stately_layout__WEBPACK_IMPORTED_MODULE_1__.${keyToWidth=new Map;visibleContentWidth=0;dividerHeight=2;constructor(options){super(options),null!=options.dividerHeight&&(this.dividerHeight=options.dividerHeight)}buildItem(node,x,y){const layoutNode=super.buildItem(node,x,y);return this.visibleContentWidth&&(layoutNode.layoutInfo.rect.width=this.visibleContentWidth),layoutNode}buildNode(node,x,y){return"divider"===node.type?this.buildDivider(node,x,y):super.buildNode(node,x,y)}buildDivider(node,x,y){let width=this.virtualizer?.visibleRect.width??0,rectHeight=this.dividerHeight,rect=new _react_stately_virtualizer__WEBPACK_IMPORTED_MODULE_2__.r(x,y,width-x,rectHeight),layoutInfo=new _react_stately_virtualizer__WEBPACK_IMPORTED_MODULE_3__.B(node.type,node.key,rect);return layoutInfo.estimatedSize=!1,{layoutInfo,validRect:layoutInfo.rect}}doBuildCollection(){return super.buildCollection()}buildCollection(){this.visibleContentWidth=this.getVisibleContentWidth();const layoutNodes=this.doBuildCollection();return this.contentSize.width=this.visibleContentWidth,layoutNodes}shouldInvalidate(newRect,oldRect){return super.shouldInvalidate(newRect,oldRect)||this.virtualizer?.contentSize.width!==this.visibleContentWidth}isValid(node,y){let cached=this.layoutNodes.get(node.key);return super.isValid(node,y)&&cached?.layoutInfo.rect.width===this.visibleContentWidth}updateItemSize(key,size){const changed=super.updateItemSize(key,size);return this.getLayoutInfo(key)&&size.width>this.contentSize.width?(this.keyToWidth.set(key,size.width),!0):changed}getVisibleContentWidth(){return Math.max(this.virtualizer?.visibleRect.width??0,...[...this.virtualizer?.getVisibleLayoutInfos().values()??[]].map((layoutInfo=>{const itemContentWidth=layoutInfo&&this.keyToWidth.get(layoutInfo.key);return itemContentWidth&&this.virtualizer&&layoutInfo.rect.intersects(this.virtualizer?.visibleRect)?itemContentWidth:0})))}}},"./src/minusculeMatch.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{T:()=>minusculeMatch});var TextRange=__webpack_require__("./src/TextRange.ts");function isWordSeparator(c){return isWhitespace(c)||"_"==c||"-"==c||":"==c||"+"==c||"."==c}function isWhitespace(char){return/^\s*$/.test(char)}function isUpperCase(str){return str.toUpperCase()===str&&str.toLowerCase()!==str}function isMeaningfulChar(ch){return!isWordSeparator(ch)&&!isWhitespace(ch)}const minusculeMatch=(input,rawPattern)=>{const isStarts=input.split("").map(isStart),pattern=rawPattern.split("").filter(isMeaningfulChar).join(""),matches=[];let continuous=!1,inputIndex=0,patternIndex=0;for(;;){if(matches.length===pattern.length)return(0,TextRange.mG)(matches.map((({inputIndex:i})=>i)));if(inputIndex>input.length-1){if(matches.length>0){const lastMatch=matches.pop();inputIndex=lastMatch.inputIndex+1,patternIndex=lastMatch.patternIndex;continue}break}isMeaningfulChar(input[inputIndex])?pattern[patternIndex].toLowerCase()===input[inputIndex].toLowerCase()&&(continuous||isStarts[inputIndex]||0===matches.length)?(matches.push({patternIndex,inputIndex}),continuous=!0,patternIndex++,inputIndex++):(continuous=!1,inputIndex++):inputIndex++}return null};function isStart(char,index,chars){const previousChar=chars[index-1];return 0===index||isWordSeparator(previousChar)&&!isWordSeparator(char)||isUpperCase(char)&&!isUpperCase(previousChar)}},"./src/selection/useSelectableCollection.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{y:()=>useSelectableCollection});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_react_aria_selection__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@react-aria/selection/dist/useSelectableCollection.mjs");const useSelectableCollection=options=>{const{collectionProps:{onKeyDown,...collectionProps}}=(0,_react_aria_selection__WEBPACK_IMPORTED_MODULE_1__.y)(options);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const{selectionManager,autoFocus,selectOnFocus}=options;!selectOnFocus||"first"!==autoFocus&&"last"!==autoFocus||null==selectionManager.focusedKey||selectionManager.replaceSelection(selectionManager.focusedKey)}),[]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)((()=>{const{selectionManager}=options;selectionManager.firstSelectedKey&&null==selectionManager.focusedKey&&selectionManager.setFocusedKey(selectionManager.firstSelectedKey)}),[]),{collectionProps:{...collectionProps,onKeyDown:e=>{e.altKey||onKeyDown?.(e)}}}}},"./src/selection/useSelectableItem.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{p:()=>useSelectableItem});var _react_aria_selection__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/@react-aria/selection/dist/useSelectableItem.mjs"),_react_aria_utils__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@react-aria/utils/dist/mergeProps.mjs");const useSelectableItem=options=>{const result=(0,_react_aria_selection__WEBPACK_IMPORTED_MODULE_0__.p)(options);return{...result,itemProps:(0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_1__.v)(result.itemProps,{onContextMenu:e=>{options.selectionManager.isSelected(options.key)||options.selectionManager.select(options.key)}})}}},"./src/utils/keyboard-utils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{w:()=>hasAnyModifier});__webpack_require__("../../node_modules/react/index.js");function hasAnyModifier(e){return e.altKey||e.ctrlKey||e.metaKey||e.shiftKey}},"./src/utils/useLatest.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{F:()=>useLatest});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js");function useLatest(value){const ref=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(value);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)((()=>{ref.current=value})),ref}}}]);
//# sourceMappingURL=8946.539c1137.iframe.bundle.js.map