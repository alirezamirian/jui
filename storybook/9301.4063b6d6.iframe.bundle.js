"use strict";(self.webpackChunk_intellij_platform_core=self.webpackChunk_intellij_platform_core||[]).push([[9301],{"./src/ActionButton/ActionButton.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Kk:()=>ActionButton,lj:()=>StyledActionButton});var _react_aria_interactions__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../../node_modules/@react-aria/interactions/dist/module.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_styled__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/styled.ts"),_react_aria_utils__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/@react-aria/utils/dist/module.js"),_react_aria_focus__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../../node_modules/@react-aria/focus/dist/module.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const StyledActionButton=_styled__WEBPACK_IMPORTED_MODULE_2__.zo.button`
  position: relative; // to allow absolutely positioned overlays like an dropdown icon at the bottom right corner
  background: none;
  color: inherit;
  border: 1px solid transparent;
  border-radius: 3px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  min-height: ${({minSize})=>`${minSize}px`};
  min-width: ${({minSize})=>`${minSize}px`};
  padding: 0;
  margin: 0;
  &:disabled {
    opacity: 0.25; // not quite accurate implementation. There might be better ways to style disabled state.
  }
  &:hover:not(:disabled),
  &:focus:not(:disabled) /* in intellij platform, the button doesn't grab the focus after being active. This is not the case in web,
  for better accessibility. But there is no existing UI spec for it in intellij platform obviously. So for now, we
  fallback to the same UI as hover state. Perhaps it can be improved with a opacity or something.*/ {
    outline: none;
    background: ${({theme})=>theme.color("ActionButton.hoverBackground","#DFDFDF")};
    border-color: ${({theme})=>theme.color("ActionButton.hoverBorderColor","#DFDFDF")};
  }
  &:active:not(:disabled),
  &.active:not(:disabled) {
    background: ${({theme})=>theme.color("ActionButton.pressedBackground","#CFCFCF")};
    border-color: ${({theme})=>theme.color("ActionButton.pressedBorderColor","#CFCFCF")};
  }
`,ActionButton=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((function ActionButton({minSize=22,preventFocusOnPress=!0,excludeFromTabOrder=!0,isPressed:isPressedInput,isDisabled,onPress,onPressChange,onPressEnd,onPressStart,onPressUp,shouldCancelOnPointerExit,...otherProps},forwardedRef){const ref=(0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_3__.B3)(forwardedRef),{focusableProps}=(0,_react_aria_focus__WEBPACK_IMPORTED_MODULE_4__.kc)({isDisabled},ref),{pressProps,isPressed}=(0,_react_aria_interactions__WEBPACK_IMPORTED_MODULE_5__.r7)({ref,isPressed:isPressedInput,isDisabled,onPress,onPressChange,onPressEnd,onPressStart,onPressUp,shouldCancelOnPointerExit,preventFocusOnPress});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(StyledActionButton,{className:isPressed?"active":"",disabled:isDisabled,...(0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_3__.dG)(pressProps,otherProps,focusableProps),minSize,tabIndex:excludeFromTabOrder&&!isDisabled?-1:void 0,ref})}));try{StyledActionButton.displayName="StyledActionButton",StyledActionButton.__docgenInfo={description:"",displayName:"StyledActionButton",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLButtonElement | null) => void) | RefObject<HTMLButtonElement> | null"}},minSize:{defaultValue:{value:"22"},description:"",name:"minSize",required:!1,type:{name:"number"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme<KnownThemePropertyPath>"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/ActionButton/ActionButton.tsx#StyledActionButton"]={docgenInfo:StyledActionButton.__docgenInfo,name:"StyledActionButton",path:"src/ActionButton/ActionButton.tsx#StyledActionButton"})}catch(__react_docgen_typescript_loader_error){}try{ActionButton.displayName="ActionButton",ActionButton.__docgenInfo={description:"",displayName:"ActionButton",props:{minSize:{defaultValue:{value:"22"},description:"",name:"minSize",required:!1,type:{name:"number"}},excludeFromTabOrder:{defaultValue:{value:"true"},description:"Whether the button should be focusable by pressing tab. The default is true for action buttons, which means they\nare not included in the tab order.",name:"excludeFromTabOrder",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/ActionButton/ActionButton.tsx#ActionButton"]={docgenInfo:ActionButton.__docgenInfo,name:"ActionButton",path:"src/ActionButton/ActionButton.tsx#ActionButton"})}catch(__react_docgen_typescript_loader_error){}},"./src/Overlay/OverlayInteractionHandler.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>OverlayInteractionHandler,b:()=>useOverlayInteractionHandler});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const OverlayInteractionHandlerContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(null),OverlayInteractionHandler=({children,...props})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(OverlayInteractionHandlerContext.Provider,{value:props,children});OverlayInteractionHandler.displayName="OverlayInteractionHandler";const useOverlayInteractionHandler=()=>(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(OverlayInteractionHandlerContext);try{OverlayInteractionHandler.displayName="OverlayInteractionHandler",OverlayInteractionHandler.__docgenInfo={description:"Provides the context used by components like {@link OverlayMoveHandle } and {@link OverlayResizeHandles } that provide\nuser interactions that change the boundary of the overlay they are rendered in.\nUse {@link useResizableMovableOverlay } which implements an efficient state management for overlay bounds and returns\nprops to be passed to `OverlayInteractionHandler`:",displayName:"OverlayInteractionHandler",props:{startInteraction:{defaultValue:null,description:"Signals start of a UI interaction like resize or move, in which overlay bounds change.",name:"startInteraction",required:!0,type:{name:'(type: "resize" | "move") => Bounds'}},updateBounds:{defaultValue:null,description:"Used to update bounds state during a UI interaction.",name:"updateBounds",required:!0,type:{name:"(bounds: Bounds) => void"}},finishInteraction:{defaultValue:null,description:"Signals end of a UI interaction.",name:"finishInteraction",required:!0,type:{name:"() => void"}},minWidth:{defaultValue:null,description:"",name:"minWidth",required:!1,type:{name:"number"}},minHeight:{defaultValue:null,description:"",name:"minHeight",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Overlay/OverlayInteractionHandler.tsx#OverlayInteractionHandler"]={docgenInfo:OverlayInteractionHandler.__docgenInfo,name:"OverlayInteractionHandler",path:"src/Overlay/OverlayInteractionHandler.tsx#OverlayInteractionHandler"})}catch(__react_docgen_typescript_loader_error){}},"./src/Overlay/OverlayMoveHandle.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{F:()=>OverlayMoveHandle,y:()=>useOverlayMoveHandle});var _utils_interaction_utils_useMove__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/utils/interaction-utils/useMove.tsx"),_OverlayInteractionHandler__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/Overlay/OverlayInteractionHandler.tsx");function useOverlayMoveHandle(){const interactionHandler=(0,_OverlayInteractionHandler__WEBPACK_IMPORTED_MODULE_0__.b)();if(!interactionHandler)return{moveHandleProps:{}};const{finishInteraction,startInteraction,updateBounds}=interactionHandler;return{moveHandleProps:(0,_utils_interaction_utils_useMove__WEBPACK_IMPORTED_MODULE_1__.r)({onMoveStart:()=>startInteraction("move"),onMove:({startState,movement})=>{updateBounds({...startState,top:startState.top+movement.y,left:startState.left+movement.x})},onMoveEnd:()=>{finishInteraction()}})||{}}}const OverlayMoveHandle=({children})=>children(useOverlayMoveHandle());try{useOverlayMoveHandle.displayName="useOverlayMoveHandle",useOverlayMoveHandle.__docgenInfo={description:"Used for making a dom element a move handle for the overlay it's being rendered in.\nIt uses the context provided by {@link OverlayInteractionHandler }, and returns props to be applied on a dom element to\nmake it a move handle for the overlay it's being rendered in.",displayName:"useOverlayMoveHandle",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Overlay/OverlayMoveHandle.tsx#useOverlayMoveHandle"]={docgenInfo:useOverlayMoveHandle.__docgenInfo,name:"useOverlayMoveHandle",path:"src/Overlay/OverlayMoveHandle.tsx#useOverlayMoveHandle"})}catch(__react_docgen_typescript_loader_error){}try{OverlayMoveHandle.displayName="OverlayMoveHandle",OverlayMoveHandle.__docgenInfo={description:"Used for making a dom element a move handle for the overlay it's being rendered in.\nIt uses the context provided by {@link OverlayInteractionHandler }. A render function is expected as `children`. It's\npassed the event handlers that need to be applied on a dom element to make it a move handle for the overlay it's\nbeing rendered in.",displayName:"OverlayMoveHandle",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Overlay/OverlayMoveHandle.tsx#OverlayMoveHandle"]={docgenInfo:OverlayMoveHandle.__docgenInfo,name:"OverlayMoveHandle",path:"src/Overlay/OverlayMoveHandle.tsx#OverlayMoveHandle"})}catch(__react_docgen_typescript_loader_error){}},"./src/Overlay/OverlayResizeHandles.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{S:()=>OverlayResizeHandles});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_Resizer__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/Resizer/RightResizer.tsx"),_Resizer__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/Resizer/LeftResizer.tsx"),_Resizer__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/Resizer/TopResizer.tsx"),_Resizer__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/Resizer/BottomResizer.tsx"),_OverlayInteractionHandler__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/Overlay/OverlayInteractionHandler.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/jsx-runtime.js");function OverlayResizeHandles(props){const overlayResizer=function useOverlayResizer(props={}){const initialBoundsRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({top:0,height:0,width:0,left:0}),interactionHandler=(0,_OverlayInteractionHandler__WEBPACK_IMPORTED_MODULE_6__.b)(),{minWidth=interactionHandler?.minWidth??1,minHeight=interactionHandler?.minHeight??1}=props;if(!interactionHandler)return null;const{finishInteraction,startInteraction,updateBounds}=interactionHandler,onResize={right:size=>updateBounds({...initialBoundsRef.current,width:Math.max(minWidth,initialBoundsRef.current.width+size)}),bottom:size=>updateBounds({...initialBoundsRef.current,height:Math.max(minHeight,initialBoundsRef.current.height+size)}),left:size=>{const newWidth=Math.max(minWidth,initialBoundsRef.current.width+size),initialBounds=initialBoundsRef.current;return updateBounds({...initialBounds,left:initialBounds.left+initialBounds.width-newWidth,width:newWidth})},top:size=>{const newHeight=Math.max(minHeight,initialBoundsRef.current.height+size),initialBounds=initialBoundsRef.current;return updateBounds({...initialBounds,top:initialBounds.top+initialBounds.height-newHeight,height:newHeight})}};function getResizerProps(side){return{size:1,cursor:"left"===side||"right"===side?"ew":"ns",onResizeStarted:()=>{initialBoundsRef.current=startInteraction("resize")},onResize:onResize[side],onResizeEnd:finishInteraction,style:{position:"absolute",[side]:0}}}return{getResizerProps}}(props);return overlayResizer&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Resizer__WEBPACK_IMPORTED_MODULE_2__.i,{...overlayResizer.getResizerProps("right")}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Resizer__WEBPACK_IMPORTED_MODULE_3__.t,{...overlayResizer.getResizerProps("left")}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Resizer__WEBPACK_IMPORTED_MODULE_4__.m,{...overlayResizer.getResizerProps("top")}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Resizer__WEBPACK_IMPORTED_MODULE_5__.o,{...overlayResizer.getResizerProps("bottom")})]})}try{OverlayResizeHandles.displayName="OverlayResizeHandles",OverlayResizeHandles.__docgenInfo={description:"Renders invisible resize handles at the edges of the overlay it's rendered in. It uses the context provided by\n{@link OverlayInteractionHandler } to resize the overlay when the handles are used.",displayName:"OverlayResizeHandles",props:{minWidth:{defaultValue:null,description:"",name:"minWidth",required:!1,type:{name:"number"}},minHeight:{defaultValue:null,description:"",name:"minHeight",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Overlay/OverlayResizeHandles.tsx#OverlayResizeHandles"]={docgenInfo:OverlayResizeHandles.__docgenInfo,name:"OverlayResizeHandles",path:"src/Overlay/OverlayResizeHandles.tsx#OverlayResizeHandles"})}catch(__react_docgen_typescript_loader_error){}},"./src/Overlay/bounds-helpers.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{FK:()=>position,RZ:()=>getCenteredBounds,e3:()=>withMinSize,eq:()=>containedWithin,fw:()=>ensureInViewport});var ramda__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/ramda/es/clamp.js");const withMinSize=({width:minWidth,height:minHeight})=>bounds=>{const width=Math.max(minWidth,bounds.width),height=Math.max(minHeight,bounds.height);return bounds.width!=width||bounds.height!=height?{...bounds,width,height}:bounds};function getCenteredBounds(width,height){return{left:(window.innerWidth-width)/2,top:(window.innerHeight-height)/2,width,height}}const containedWithin=containerBounds=>(bounds,interactionType)=>{if("move"===interactionType){const left=(0,ramda__WEBPACK_IMPORTED_MODULE_0__.Z)(containerBounds.left,containerBounds.left+containerBounds.width-bounds.width,bounds.left),top=(0,ramda__WEBPACK_IMPORTED_MODULE_0__.Z)(containerBounds.top,containerBounds.top+containerBounds.height-bounds.height,bounds.top);return{...bounds,left,top}}if("resize"===interactionType){const left=Math.max(containerBounds.left,bounds.left),top=Math.max(containerBounds.top,bounds.top);return{left,top,width:bounds.width-Math.max(0,bounds.left+bounds.width-(containerBounds.left+containerBounds.width))-(left-bounds.left),height:bounds.height-Math.max(0,bounds.top+bounds.height-(containerBounds.top+containerBounds.height))-(top-bounds.top)}}return bounds},position=({targetElement,placement="bottom"})=>({height,width})=>{const targetBounds=targetElement.getBoundingClientRect();return{left:targetBounds.left,top:"bottom"===placement?targetBounds.top+targetBounds.height:targetBounds.top-height,width,height}};function ensureInViewport(bounds,{gap=0}={}){const viewportWidth=window.innerWidth-gap,viewportHeight=window.innerHeight-gap,left=(0,ramda__WEBPACK_IMPORTED_MODULE_0__.Z)(gap,viewportWidth-bounds.width,bounds.left),top=(0,ramda__WEBPACK_IMPORTED_MODULE_0__.Z)(gap,viewportHeight-bounds.height,bounds.top);return left!==bounds.left||top!==bounds.top?{left,top,width:bounds.width,height:bounds.height}:bounds}try{withMinSize.displayName="withMinSize",withMinSize.__docgenInfo={description:"",displayName:"withMinSize",props:{width:{defaultValue:null,description:"",name:"width",required:!0,type:{name:"number"}},height:{defaultValue:null,description:"",name:"height",required:!0,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Overlay/bounds-helpers.tsx#withMinSize"]={docgenInfo:withMinSize.__docgenInfo,name:"withMinSize",path:"src/Overlay/bounds-helpers.tsx#withMinSize"})}catch(__react_docgen_typescript_loader_error){}try{containedWithin.displayName="containedWithin",containedWithin.__docgenInfo={description:"A helper function to create interaction interceptor which ensures bounds are contained within a container.",displayName:"containedWithin",props:{top:{defaultValue:null,description:"",name:"top",required:!0,type:{name:"number"}},left:{defaultValue:null,description:"",name:"left",required:!0,type:{name:"number"}},width:{defaultValue:null,description:"",name:"width",required:!0,type:{name:"number"}},height:{defaultValue:null,description:"",name:"height",required:!0,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Overlay/bounds-helpers.tsx#containedWithin"]={docgenInfo:containedWithin.__docgenInfo,name:"containedWithin",path:"src/Overlay/bounds-helpers.tsx#containedWithin"})}catch(__react_docgen_typescript_loader_error){}try{position.displayName="position",position.__docgenInfo={description:"",displayName:"position",props:{placement:{defaultValue:{value:"bottom"},description:"",name:"placement",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'}]}},targetElement:{defaultValue:null,description:"",name:"targetElement",required:!0,type:{name:"HTMLElement"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Overlay/bounds-helpers.tsx#position"]={docgenInfo:position.__docgenInfo,name:"position",path:"src/Overlay/bounds-helpers.tsx#position"})}catch(__react_docgen_typescript_loader_error){}},"./src/Overlay/useResizableMovableOverlay.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{t:()=>useResizableMovableOverlay});var react=__webpack_require__("../../node_modules/react/index.js"),dist_module=__webpack_require__("../../node_modules/@react-stately/utils/dist/module.js"),clamp=__webpack_require__("../../node_modules/ramda/es/clamp.js"),filter=__webpack_require__("../../node_modules/ramda/es/filter.js");const getContentSize=(style={width:"",minWidth:"fit-content",height:"",minHeight:"fit-content"},fn=element=>({width:Math.ceil(parseFloat(getComputedStyle(element).width)),height:Math.ceil(parseFloat(getComputedStyle(element).height))}),element=>{const clone=element.cloneNode(!0);clone.style.position="absolute",clone.style.left="-9999px",document.body.appendChild(clone),Object.assign(clone.style,style);const returnValue=fn(clone);return document.body.removeChild(clone),returnValue});var style,fn;const useContentSize=(ref,{observe=!1}={})=>{const[measuredSizes,setMeasuredSizes]=(0,react.useState)([]);(0,react.useLayoutEffect)((()=>{const element=ref.current;if(!element||measuredSizes.length>5)return;const size=getContentSize(element),lastMeasuredSize=measuredSizes.at(-1);lastMeasuredSize&&Size.isEqual(lastMeasuredSize,size)||setMeasuredSizes([size]);const id=window.requestAnimationFrame((()=>{const newSize=getContentSize(element);Size.isEqual(newSize,size)||setMeasuredSizes([...measuredSizes,newSize])}));return()=>{window.cancelAnimationFrame(id)}}),[measuredSizes,ref.current]);const measure=()=>{const lastMeasuredSize=measuredSizes.at(-1);if(ref.current&&lastMeasuredSize){const currentSize=getContentSize(ref.current);currentSize.height===lastMeasuredSize.height&&currentSize.width===lastMeasuredSize.width||setMeasuredSizes(measuredSizes.map((aSize=>aSize===lastMeasuredSize?currentSize:aSize)))}},debouncedMeasure=((fn,{timeout=100}={})=>{const fnRef=(0,react.useRef)(fn),currentTimeoutId=(0,react.useRef)(null);return(0,react.useLayoutEffect)((()=>{fnRef.current=fn})),(0,react.useEffect)((()=>()=>{null!==currentTimeoutId.current&&clearTimeout(currentTimeoutId.current)}),[]),(0,react.useCallback)((()=>{null!==currentTimeoutId.current&&clearTimeout(currentTimeoutId.current),currentTimeoutId.current=window.setTimeout(fnRef.current,timeout)}),[])})(measure);return(0,react.useEffect)((()=>{const element=ref.current;if(observe&&element){const mutationObserver=new MutationObserver((()=>{debouncedMeasure()}));return mutationObserver.observe(element,{subtree:!0,childList:!0}),()=>{mutationObserver.disconnect()}}}),[observe,ref.current]),[measuredSizes.at(-1)||{width:0,height:0},measure]},Size={isEqual:({width,height},{width:width2,height:height2})=>width===width2&&height===height2};try{getContentSize.displayName="getContentSize",getContentSize.__docgenInfo={description:"FIXME: withTemporaryStyle is not side-effect free and can cause scroll jumps. It creates awfully hard-to-debug\n issues.",displayName:"getContentSize",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Overlay/useContentSize.tsx#getContentSize"]={docgenInfo:getContentSize.__docgenInfo,name:"getContentSize",path:"src/Overlay/useContentSize.tsx#getContentSize"})}catch(__react_docgen_typescript_loader_error){}var bounds_helpers=__webpack_require__("./src/Overlay/bounds-helpers.tsx");function useResizableMovableOverlay(overlayRef,{bounds:inputBounds,defaultBounds,onBoundsChange,onBoundsChanging=i=>i,minWidth,minHeight,observeContentResize}){const[bounds,setBounds]=(0,dist_module.zk)(inputBounds,defaultBounds,onBoundsChange),[contentSize,measureContentSize]=useContentSize(overlayRef,{observe:observeContentResize}),[currentInteraction,setCurrentInteraction]=(0,react.useState)(null),effectiveMinWidth="content"===minWidth?contentSize.width:minWidth||0,effectiveMinHeight="content"===minHeight?contentSize.height:minHeight||0,applyMinSize=(0,bounds_helpers.e3)({width:effectiveMinWidth,height:effectiveMinHeight}),overlayInteractionHandlerProps={startInteraction:type=>{if(!overlayRef.current)throw new Error("overlayRef value is not set. Make sure to have the ref passed to the resizable/movable overlay");const bounds=getBounds(overlayRef.current);return setCurrentInteraction({bounds,type}),bounds},updateBounds:updatedBounds=>{setCurrentInteraction((currentInteraction=>{if(currentInteraction){const{type}=currentInteraction;return{type,bounds:onBoundsChanging(updatedBounds,type)||updatedBounds}}return currentInteraction}))},finishInteraction:()=>{currentInteraction&&overlayRef.current&&setBounds(getBounds(overlayRef.current),currentInteraction.type),setCurrentInteraction(null)},minWidth:effectiveMinWidth,minHeight:effectiveMinHeight},partialBounds=currentInteraction?.bounds??bounds,centeredContentBounds=(0,bounds_helpers.RZ)((0,clamp.Z)(effectiveMinWidth,window.innerWidth,bounds?.width??contentSize.width),(0,clamp.Z)(effectiveMinHeight,window.innerHeight,bounds?.height??contentSize.height));return{positioned:null!=partialBounds?.left&&null!=partialBounds?.top,sized:null!=partialBounds?.width&&null!=partialBounds?.height,bounds:applyMinSize({...centeredContentBounds,...partialBounds&&(0,filter.Z)((value=>null!=value),partialBounds)}),UNSAFE_measureContentSize:measureContentSize,overlayInteractionHandlerProps}}function getBounds(element){const{left,top,width,height}=element.getBoundingClientRect();return{left,top,width,height}}try{useResizableMovableOverlay.displayName="useResizableMovableOverlay",useResizableMovableOverlay.__docgenInfo={description:'\nTODO: rename to something better? :D\nTODO: maybe an option like ensureInViewport that would move the final bound into the viewport (if necessary), when\n calling onBoundsChange at the end of an interaction. That\'s important because if move handle(s) (usually rendered\n at the top of the overlay) are out of reach, there would be no way back.\nTODO: description\nAssumptions:\n- The overlay is rendered in a portal, and with position "fixed".\n- The returned bounds should be used to style the overlay.\n  - There shouldn\'t be other style affecting the positioning, such as margin, or transform.\n  - If the overlay has border, box-sizing should be "border-box"',displayName:"useResizableMovableOverlay",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Overlay/useResizableMovableOverlay.tsx#useResizableMovableOverlay"]={docgenInfo:useResizableMovableOverlay.__docgenInfo,name:"useResizableMovableOverlay",path:"src/Overlay/useResizableMovableOverlay.tsx#useResizableMovableOverlay"})}catch(__react_docgen_typescript_loader_error){}},"./src/Resizer/BottomResizer.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{o:()=>BottomResizer});__webpack_require__("../../node_modules/react/index.js");var _useResizer__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/Resizer/useResizer.ts"),_VerticalResizer__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/Resizer/VerticalResizer.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const BottomResizer=({onResize,onResizeEnd,onResizeStarted,...props})=>{const{resizerProps}=(0,_useResizer__WEBPACK_IMPORTED_MODULE_2__.mT)({onResize,onResizeEnd,onResizeStarted});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_VerticalResizer__WEBPACK_IMPORTED_MODULE_3__.h,{resizerProps,...props})};BottomResizer.displayName="BottomResizer";try{BottomResizer.displayName="BottomResizer",BottomResizer.__docgenInfo={description:"Handle for resizing views in a vertical layout, where the resizer is at the top side of the resizable view. i.e.\nmoving mouse to bottom/top will increase/decrease the height",displayName:"BottomResizer",props:{onResizeStarted:{defaultValue:null,description:"Called when the resize starts by a move action. The callback can optionally\nreturn the initial width of the view for which the resize handle\nis used. The amount of resize will be added to this initial value and\npassed to `onResize`, when movement happens.",name:"onResizeStarted",required:!0,type:{name:"() => number | void"}},onResize:{defaultValue:null,description:"Called when resize is happening.\n@param size : New size based on the diff and the initial size returned\nby onResizeStarted, or zero if initial size is not returned.",name:"onResize",required:!0,type:{name:"(size: number) => void"}},onResizeEnd:{defaultValue:null,description:"Called when movement interaction is finished, e.g. by a mouse up event.",name:"onResizeEnd",required:!1,type:{name:"(() => void)"}},background:{defaultValue:null,description:"Background color of the visible space-occupying part of the resize handle.",name:"background",required:!1,type:{name:"Background<string | number>"}},size:{defaultValue:{value:"0"},description:"Visible and space-occupying part of the resize handle. Total grab-able\nwidth will be `size` + `outerPadding`",name:"size",required:!1,type:{name:"number"}},outerPadding:{defaultValue:{value:"10"},description:"Length of the extra grab-able zone around the resize handle.\nFor example, if set to 10 there will be an area of length 5 pixels in each\nside of the handle which still can be used for resizing.",name:"outerPadding",required:!1,type:{name:"number"}},cursor:{defaultValue:null,description:"Resizer cursor.",name:"cursor",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"row"'},{value:'"ns"'},{value:'"n"'}]}},children:{defaultValue:null,description:"Any arbitrary content for customizing look and feel of the resizer.\nFor example for showing a rounded handle kind of thing in the middle,\nor showing shadows, etc.",name:"children",required:!1,type:{name:"ReactNode"}},style:{defaultValue:null,description:"styles passed to the root resizer element. `width` and `background` is not allowed and will be overridden.\nNOTE: it's added to allow use case of absolutely positioned resizers in float tool windows. Might be a better\nidea to add a `absolute` instead option and apply the necessary style based on it, if it can be seen as a re-usable\nand legit feature.",name:"style",required:!1,type:{name:'Omit<CSSProperties, "background" | "height">'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Resizer/BottomResizer.tsx#BottomResizer"]={docgenInfo:BottomResizer.__docgenInfo,name:"BottomResizer",path:"src/Resizer/BottomResizer.tsx#BottomResizer"})}catch(__react_docgen_typescript_loader_error){}},"./src/Resizer/HorizontalResizer.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>HorizontalResizer});__webpack_require__("../../node_modules/react/index.js");var styled_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/styled-components/dist/styled-components.browser.esm.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const StyledHorizontalResizer=styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP.div.withConfig({displayName:"HorizontalResizer__StyledHorizontalResizer",componentId:"sc-44e68r-0"})(["top:0;height:100%;width:0;position:relative;z-index:1;"]),StyledHorizontalResizerArea=styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP.div.withConfig({displayName:"HorizontalResizer__StyledHorizontalResizerArea",componentId:"sc-44e68r-1"})(["position:absolute;cursor:",";width:",";height:100%;left:",";"],(({cursor})=>`${cursor}-resize`),(({handleSize})=>`calc(100% + ${handleSize}px)`),(({handleSize})=>`-${handleSize/2}px`)),HorizontalResizer=({outerPadding=10,background,size=0,cursor="col",children,style={},resizerProps})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(StyledHorizontalResizer,{...resizerProps,style:{...style,background,width:size},children:[children,(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(StyledHorizontalResizerArea,{handleSize:outerPadding,cursor})]});HorizontalResizer.displayName="HorizontalResizer";try{HorizontalResizer.displayName="HorizontalResizer",HorizontalResizer.__docgenInfo={description:"Handle for resizing views in a horizontal layout. It just handles the\nmovement event and calls onResize with the new size. It has nothing to do\nwith actually applying the size.",displayName:"HorizontalResizer",props:{children:{defaultValue:null,description:"Any arbitrary content for customizing look and feel of the resizer.\nFor example for showing a rounded handle kind of thing in the middle,\nor showing shadows, etc.",name:"children",required:!1,type:{name:"ReactNode"}},style:{defaultValue:{value:"{}"},description:"styles passed to the root resizer element. `width` and `background` is not allowed and will be overridden.\nNOTE: it's added to allow use case of absolutely positioned resizers in float tool windows. Might be a better\nidea to add a `absolute` instead option and apply the necessary style based on it, if it can be seen as a re-usable\nand legit feature.",name:"style",required:!1,type:{name:'Omit<CSSProperties, "width" | "background">'}},background:{defaultValue:null,description:"Background color of the visible space-occupying part of the resize handle.",name:"background",required:!1,type:{name:"Background<string | number>"}},size:{defaultValue:{value:"0"},description:"Visible and space-occupying part of the resize handle. Total grab-able\nwidth will be `size` + `outerPadding`",name:"size",required:!1,type:{name:"number"}},outerPadding:{defaultValue:{value:"10"},description:"Length of the extra grab-able zone around the resize handle.\nFor example, if set to 10 there will be an area of length 5 pixels in each\nside of the handle which still can be used for resizing.",name:"outerPadding",required:!1,type:{name:"number"}},cursor:{defaultValue:{value:"col"},description:"Resizer cursor.",name:"cursor",required:!1,type:{name:"enum",value:[{value:'"col"'},{value:'"ew"'},{value:'"e"'},{value:'"w"'}]}},resizerProps:{defaultValue:null,description:"",name:"resizerProps",required:!0,type:{name:"{ onMouseDown?: MouseEventHandler<Element> | undefined; }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Resizer/HorizontalResizer.tsx#HorizontalResizer"]={docgenInfo:HorizontalResizer.__docgenInfo,name:"HorizontalResizer",path:"src/Resizer/HorizontalResizer.tsx#HorizontalResizer"})}catch(__react_docgen_typescript_loader_error){}},"./src/Resizer/LeftResizer.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{t:()=>LeftResizer});__webpack_require__("../../node_modules/react/index.js");var _HorizontalResizer__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/Resizer/HorizontalResizer.tsx"),_useResizer__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/Resizer/useResizer.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const LeftResizer=({onResize,onResizeEnd,onResizeStarted,...props})=>{const{resizerProps}=(0,_useResizer__WEBPACK_IMPORTED_MODULE_2__.s3)({onResize,onResizeEnd,onResizeStarted});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_HorizontalResizer__WEBPACK_IMPORTED_MODULE_3__.N,{resizerProps,...props})};LeftResizer.displayName="LeftResizer";try{LeftResizer.displayName="LeftResizer",LeftResizer.__docgenInfo={description:"Handle for resizing views in a horizontal layout, where the resizer is at the left side of the resizable view. i.e.\nmoving mouse to right/left will decrease/increase the width",displayName:"LeftResizer",props:{onResizeStarted:{defaultValue:null,description:"Called when the resize starts by a move action. The callback can optionally\nreturn the initial width of the view for which the resize handle\nis used. The amount of resize will be added to this initial value and\npassed to `onResize`, when movement happens.",name:"onResizeStarted",required:!0,type:{name:"() => number | void"}},onResize:{defaultValue:null,description:"Called when resize is happening.\n@param size : New size based on the diff and the initial size returned\nby onResizeStarted, or zero if initial size is not returned.",name:"onResize",required:!0,type:{name:"(size: number) => void"}},onResizeEnd:{defaultValue:null,description:"Called when movement interaction is finished, e.g. by a mouse up event.",name:"onResizeEnd",required:!1,type:{name:"(() => void)"}},background:{defaultValue:null,description:"Background color of the visible space-occupying part of the resize handle.",name:"background",required:!1,type:{name:"Background<string | number>"}},size:{defaultValue:{value:"0"},description:"Visible and space-occupying part of the resize handle. Total grab-able\nwidth will be `size` + `outerPadding`",name:"size",required:!1,type:{name:"number"}},outerPadding:{defaultValue:{value:"10"},description:"Length of the extra grab-able zone around the resize handle.\nFor example, if set to 10 there will be an area of length 5 pixels in each\nside of the handle which still can be used for resizing.",name:"outerPadding",required:!1,type:{name:"number"}},cursor:{defaultValue:null,description:"Resizer cursor.",name:"cursor",required:!1,type:{name:"enum",value:[{value:'"col"'},{value:'"ew"'},{value:'"e"'},{value:'"w"'}]}},children:{defaultValue:null,description:"Any arbitrary content for customizing look and feel of the resizer.\nFor example for showing a rounded handle kind of thing in the middle,\nor showing shadows, etc.",name:"children",required:!1,type:{name:"ReactNode"}},style:{defaultValue:null,description:"styles passed to the root resizer element. `width` and `background` is not allowed and will be overridden.\nNOTE: it's added to allow use case of absolutely positioned resizers in float tool windows. Might be a better\nidea to add a `absolute` instead option and apply the necessary style based on it, if it can be seen as a re-usable\nand legit feature.",name:"style",required:!1,type:{name:'Omit<CSSProperties, "width" | "background">'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Resizer/LeftResizer.tsx#LeftResizer"]={docgenInfo:LeftResizer.__docgenInfo,name:"LeftResizer",path:"src/Resizer/LeftResizer.tsx#LeftResizer"})}catch(__react_docgen_typescript_loader_error){}},"./src/Resizer/RightResizer.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{i:()=>RightResizer});__webpack_require__("../../node_modules/react/index.js");var _HorizontalResizer__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/Resizer/HorizontalResizer.tsx"),_useResizer__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/Resizer/useResizer.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const RightResizer=({onResize,onResizeEnd,onResizeStarted,...props})=>{const{resizerProps}=(0,_useResizer__WEBPACK_IMPORTED_MODULE_2__.hT)({onResize,onResizeEnd,onResizeStarted});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_HorizontalResizer__WEBPACK_IMPORTED_MODULE_3__.N,{resizerProps,...props})};RightResizer.displayName="RightResizer";try{RightResizer.displayName="RightResizer",RightResizer.__docgenInfo={description:"Handle for resizing views in a horizontal layout, where the resizer is at the right side of the resizable view. i.e.\nmoving mouse to right/left will increase/decrease the width",displayName:"RightResizer",props:{onResizeStarted:{defaultValue:null,description:"Called when the resize starts by a move action. The callback can optionally\nreturn the initial width of the view for which the resize handle\nis used. The amount of resize will be added to this initial value and\npassed to `onResize`, when movement happens.",name:"onResizeStarted",required:!0,type:{name:"() => number | void"}},onResize:{defaultValue:null,description:"Called when resize is happening.\n@param size : New size based on the diff and the initial size returned\nby onResizeStarted, or zero if initial size is not returned.",name:"onResize",required:!0,type:{name:"(size: number) => void"}},onResizeEnd:{defaultValue:null,description:"Called when movement interaction is finished, e.g. by a mouse up event.",name:"onResizeEnd",required:!1,type:{name:"(() => void)"}},background:{defaultValue:null,description:"Background color of the visible space-occupying part of the resize handle.",name:"background",required:!1,type:{name:"Background<string | number>"}},size:{defaultValue:{value:"0"},description:"Visible and space-occupying part of the resize handle. Total grab-able\nwidth will be `size` + `outerPadding`",name:"size",required:!1,type:{name:"number"}},outerPadding:{defaultValue:{value:"10"},description:"Length of the extra grab-able zone around the resize handle.\nFor example, if set to 10 there will be an area of length 5 pixels in each\nside of the handle which still can be used for resizing.",name:"outerPadding",required:!1,type:{name:"number"}},cursor:{defaultValue:null,description:"Resizer cursor.",name:"cursor",required:!1,type:{name:"enum",value:[{value:'"col"'},{value:'"ew"'},{value:'"e"'},{value:'"w"'}]}},children:{defaultValue:null,description:"Any arbitrary content for customizing look and feel of the resizer.\nFor example for showing a rounded handle kind of thing in the middle,\nor showing shadows, etc.",name:"children",required:!1,type:{name:"ReactNode"}},style:{defaultValue:null,description:"styles passed to the root resizer element. `width` and `background` is not allowed and will be overridden.\nNOTE: it's added to allow use case of absolutely positioned resizers in float tool windows. Might be a better\nidea to add a `absolute` instead option and apply the necessary style based on it, if it can be seen as a re-usable\nand legit feature.",name:"style",required:!1,type:{name:'Omit<CSSProperties, "width" | "background">'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Resizer/RightResizer.tsx#RightResizer"]={docgenInfo:RightResizer.__docgenInfo,name:"RightResizer",path:"src/Resizer/RightResizer.tsx#RightResizer"})}catch(__react_docgen_typescript_loader_error){}},"./src/Resizer/TopResizer.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{m:()=>TopResizer});__webpack_require__("../../node_modules/react/index.js");var _useResizer__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/Resizer/useResizer.ts"),_VerticalResizer__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/Resizer/VerticalResizer.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const TopResizer=({onResize,onResizeEnd,onResizeStarted,...props})=>{const{resizerProps}=(0,_useResizer__WEBPACK_IMPORTED_MODULE_2__.Sf)({onResize,onResizeEnd,onResizeStarted});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_VerticalResizer__WEBPACK_IMPORTED_MODULE_3__.h,{resizerProps,...props})};TopResizer.displayName="TopResizer";try{TopResizer.displayName="TopResizer",TopResizer.__docgenInfo={description:"Handle for resizing views in a vertical layout, where the resizer is at the top side of the resizable view. i.e.\nmoving mouse to bottom/top will decrease/increase the height",displayName:"TopResizer",props:{onResizeStarted:{defaultValue:null,description:"Called when the resize starts by a move action. The callback can optionally\nreturn the initial width of the view for which the resize handle\nis used. The amount of resize will be added to this initial value and\npassed to `onResize`, when movement happens.",name:"onResizeStarted",required:!0,type:{name:"() => number | void"}},onResize:{defaultValue:null,description:"Called when resize is happening.\n@param size : New size based on the diff and the initial size returned\nby onResizeStarted, or zero if initial size is not returned.",name:"onResize",required:!0,type:{name:"(size: number) => void"}},onResizeEnd:{defaultValue:null,description:"Called when movement interaction is finished, e.g. by a mouse up event.",name:"onResizeEnd",required:!1,type:{name:"(() => void)"}},background:{defaultValue:null,description:"Background color of the visible space-occupying part of the resize handle.",name:"background",required:!1,type:{name:"Background<string | number>"}},size:{defaultValue:{value:"0"},description:"Visible and space-occupying part of the resize handle. Total grab-able\nwidth will be `size` + `outerPadding`",name:"size",required:!1,type:{name:"number"}},outerPadding:{defaultValue:{value:"10"},description:"Length of the extra grab-able zone around the resize handle.\nFor example, if set to 10 there will be an area of length 5 pixels in each\nside of the handle which still can be used for resizing.",name:"outerPadding",required:!1,type:{name:"number"}},cursor:{defaultValue:null,description:"Resizer cursor.",name:"cursor",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"row"'},{value:'"ns"'},{value:'"n"'}]}},children:{defaultValue:null,description:"Any arbitrary content for customizing look and feel of the resizer.\nFor example for showing a rounded handle kind of thing in the middle,\nor showing shadows, etc.",name:"children",required:!1,type:{name:"ReactNode"}},style:{defaultValue:null,description:"styles passed to the root resizer element. `width` and `background` is not allowed and will be overridden.\nNOTE: it's added to allow use case of absolutely positioned resizers in float tool windows. Might be a better\nidea to add a `absolute` instead option and apply the necessary style based on it, if it can be seen as a re-usable\nand legit feature.",name:"style",required:!1,type:{name:'Omit<CSSProperties, "background" | "height">'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Resizer/TopResizer.tsx#TopResizer"]={docgenInfo:TopResizer.__docgenInfo,name:"TopResizer",path:"src/Resizer/TopResizer.tsx#TopResizer"})}catch(__react_docgen_typescript_loader_error){}},"./src/Resizer/VerticalResizer.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>VerticalResizer});__webpack_require__("../../node_modules/react/index.js");var styled_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/styled-components/dist/styled-components.browser.esm.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const StyledVerticalResizer=styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP.div.withConfig({displayName:"VerticalResizer__StyledVerticalResizer",componentId:"sc-1tug48n-0"})(["width:100%;height:0;position:relative;z-index:1;"]),StyledVerticalResizerArea=styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP.div.withConfig({displayName:"VerticalResizer__StyledVerticalResizerArea",componentId:"sc-1tug48n-1"})(["position:absolute;cursor:",";height:",";width:100%;top:",";"],(({cursor})=>`${cursor}-resize`),(({handleSize})=>`calc(100% + ${handleSize}px)`),(({handleSize})=>`-${handleSize/2}px`)),VerticalResizer=({outerPadding=10,background,size=0,cursor="row",resizerProps,children,style={}})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(StyledVerticalResizer,{...resizerProps,style:{...style,background,height:size},children:[children,(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(StyledVerticalResizerArea,{handleSize:outerPadding,cursor})]});VerticalResizer.displayName="VerticalResizer";try{VerticalResizer.displayName="VerticalResizer",VerticalResizer.__docgenInfo={description:"Handle for resizing views in a vertical layout. It just handles the\nmovement event and calls onResize with the new size. It has nothing to do\nwith actually applying the size.",displayName:"VerticalResizer",props:{children:{defaultValue:null,description:"Any arbitrary content for customizing look and feel of the resizer.\nFor example for showing a rounded handle kind of thing in the middle,\nor showing shadows, etc.",name:"children",required:!1,type:{name:"ReactNode"}},style:{defaultValue:{value:"{}"},description:"styles passed to the root resizer element. `width` and `background` is not allowed and will be overridden.\nNOTE: it's added to allow use case of absolutely positioned resizers in float tool windows. Might be a better\nidea to add a `absolute` instead option and apply the necessary style based on it, if it can be seen as a re-usable\nand legit feature.",name:"style",required:!1,type:{name:'Omit<CSSProperties, "background" | "height">'}},background:{defaultValue:null,description:"Background color of the visible space-occupying part of the resize handle.",name:"background",required:!1,type:{name:"Background<string | number>"}},size:{defaultValue:{value:"0"},description:"Visible and space-occupying part of the resize handle. Total grab-able\nwidth will be `size` + `outerPadding`",name:"size",required:!1,type:{name:"number"}},outerPadding:{defaultValue:{value:"10"},description:"Length of the extra grab-able zone around the resize handle.\nFor example, if set to 10 there will be an area of length 5 pixels in each\nside of the handle which still can be used for resizing.",name:"outerPadding",required:!1,type:{name:"number"}},cursor:{defaultValue:{value:"row"},description:"Resizer cursor.",name:"cursor",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"row"'},{value:'"ns"'},{value:'"n"'}]}},resizerProps:{defaultValue:null,description:"",name:"resizerProps",required:!0,type:{name:"{ onMouseDown?: MouseEventHandler<Element> | undefined; }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Resizer/VerticalResizer.tsx#VerticalResizer"]={docgenInfo:VerticalResizer.__docgenInfo,name:"VerticalResizer",path:"src/Resizer/VerticalResizer.tsx#VerticalResizer"})}catch(__react_docgen_typescript_loader_error){}},"./src/Resizer/useResizer.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Sf:()=>useTopResizer,hT:()=>useRightResizer,mT:()=>useBottomResizer,s3:()=>useLeftResizer});var _utils_interaction_utils_useMove__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/utils/interaction-utils/useMove.tsx");const useResizer=(orientation,invert,{onResizeStarted,onResize,onResizeEnd})=>({resizerProps:(0,_utils_interaction_utils_useMove__WEBPACK_IMPORTED_MODULE_0__.r)({dragThreshold:0,onMoveStart:()=>onResizeStarted()||0,onMoveEnd:()=>onResizeEnd?.(),onMove:({movement,startState})=>onResize(startState+(invert?-1:1)*movement["horizontal"===orientation?"x":"y"])})}),useLeftResizer=props=>useResizer("horizontal",!0,props),useRightResizer=props=>useResizer("horizontal",!1,props),useTopResizer=props=>useResizer("vertical",!0,props),useBottomResizer=props=>useResizer("vertical",!1,props)},"./src/utils/interaction-utils/useMove.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{r:()=>useMove});var dist_module=__webpack_require__("../../node_modules/@react-aria/utils/dist/module.js");let state="default",savedUserSelect="";function restoreTextSelection(){"disabled"===state&&(state="restoring",setTimeout((()=>{(0,dist_module.QB)((()=>{"restoring"===state&&("none"===document.documentElement.style.webkitUserSelect&&(document.documentElement.style.webkitUserSelect=savedUserSelect||""),savedUserSelect="",state="default")}))}),300))}var useLatest=__webpack_require__("./src/utils/useLatest.ts");function useMove({dragThreshold=0,disabled,onMoveStart,onMove,onMoveEnd}){const handlersRef=(0,useLatest.d)({onMove,onMoveEnd});return disabled?{}:{onMouseDown:event=>{if(function disableTextSelection(){"default"===state&&(savedUserSelect=document.documentElement.style.webkitUserSelect,document.documentElement.style.webkitUserSelect="none"),state="disabled"}(),0!==event.button)return void restoreTextSelection();const from={x:event.pageX,y:event.pageY};let startState,dragStarted=!1;const onMouseMove=event=>{const{pageX:x,pageY:y}=event,movement={x:x-from.x,y:y-from.y};(Math.abs(movement.x)>=dragThreshold||Math.abs(movement.y)>=dragThreshold)&&!dragStarted&&(dragStarted=!0,startState=onMoveStart({from})),dragStarted&&handlersRef.current.onMove({from,to:{x:from.x+movement.x,y:from.y+movement.y},movement,startState})};document.addEventListener("mousemove",onMouseMove),document.addEventListener("mouseup",(()=>{restoreTextSelection(),dragStarted&&handlersRef.current.onMoveEnd?.({startState}),document.removeEventListener("mousemove",onMouseMove)}),{once:!0})}}}try{useMove.displayName="useMove",useMove.__docgenInfo={description:"Similar to https://react-spectrum.adobe.com/react-aria/useMove.html, with slightly different\nfeatures and API.\nNOTE: initially the API was designed in a way that onMove and onMove end callbacks were\nreturned from onMoveStart, instead of being directly passed in the options.\nThis would enable capturing the initial state of each move transaction, by defining whatever\nvariable in onMoveStart and closing over them by onMove and onMoveEnd.\nThe problem with this approach was that although you could capture the initial state of the\nmovement, by closure, any other variable in the outer scopes was also closed over, and you were\nstuck with the values from the particular render in which the movement was started.\nOf course, you could work around it by using refs, but it would be unintuitive.\nSo because of that issue, it's redesigned to have onMoveStart, onMove, and onMoveEnd all\ndirectly passed as options, but you can return anything from `onMoveStart` which will be passed\nto onMove and onMoveEnd as `startState`.",displayName:"useMove",props:{dragThreshold:{defaultValue:{value:"0"},description:"the amount of movement (in pixels) after which the move should start. It prevents interference\nwith simple click (or more generally, press) events, and provides better UX.",name:"dragThreshold",required:!1,type:{name:"number"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},onMoveStart:{defaultValue:null,description:"",name:"onMoveStart",required:!0,type:{name:"(args: { from: XY; }) => S"}},onMove:{defaultValue:null,description:"",name:"onMove",required:!0,type:{name:"(args: { from: XY; to: XY; movement: XY; startState: S; }) => void"}},onMoveEnd:{defaultValue:null,description:"",name:"onMoveEnd",required:!1,type:{name:"((args: { startState: S; }) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/utils/interaction-utils/useMove.tsx#useMove"]={docgenInfo:useMove.__docgenInfo,name:"useMove",path:"src/utils/interaction-utils/useMove.tsx#useMove"})}catch(__react_docgen_typescript_loader_error){}}}]);
//# sourceMappingURL=9301.4063b6d6.iframe.bundle.js.map